{"version":3,"sources":["../node_modules/three/build/three.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","console","warn","global","factory","module","amd","globalThis","THREE","_TO_LINEAR","_FROM_LINEAR","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","l","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","denormalize","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","document","SRGBToLinear","LinearToSRGB","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","DisplayP3ToLinearSRGB","color","convertSRGBToLinear","LinearSRGBToDisplayP3","convertLinearToSRGB","TO_LINEAR","_defineProperty","FROM_LINEAR","ColorManagement","enabled","legacyMode","workingColorSpace","colorSpace","convert","sourceColorSpace","targetColorSpace","sourceToLinear","targetFromLinear","concat","fromWorkingColorSpace","toWorkingColorSpace","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","encoding","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","dispose","transformUv","uv","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","WebGLRenderTarget","_EventDispatcher2","_super2","options","_this3","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","DataArrayTexture","_Texture","_super3","_this4","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super4","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super5","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super6","_this7","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super7","count","_this8","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$b","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$a","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","_box$3","union","geometry","attributes","position","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$9","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","p","_matrix","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super8","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","childResult","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_super9","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","toString","setValues","newValue","currentValue","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setRGB","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","_color","getHexString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","MeshBasicMaterial","_Material","_super10","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","fromHalfFloat","DataUtils","_vector$8","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","setXYZW","onUpload","copyColorsArray","copyVector2sArray","copyVector3sArray","copyVector4sArray","Int8BufferAttribute","_BufferAttribute","_super11","Uint8BufferAttribute","_BufferAttribute2","_super12","Uint8ClampedBufferAttribute","_BufferAttribute3","_super13","Int16BufferAttribute","_BufferAttribute4","_super14","Uint16BufferAttribute","_BufferAttribute5","_super15","Int32BufferAttribute","_BufferAttribute6","_super16","Uint32BufferAttribute","_BufferAttribute7","_super17","Float16BufferAttribute","_BufferAttribute8","_super18","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super19","Float64BufferAttribute","_BufferAttribute10","_super20","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$7","BufferGeometry","_EventDispatcher5","_super21","_this13","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$4","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super22","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","getVertexPosition","morphPosition","morphInfluences","influence","applyBoneTransform","raycaster","intersects","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super23","widthSegments","heightSegments","depthSegments","_this15","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputEncoding","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","_Material2","_super24","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super25","_this17","PerspectiveCamera","_Camera","_super26","fov","aspect","_this18","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super27","renderTarget","_this19","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","scene","_this$children","_slicedToArray","currentRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super28","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super29","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super30","_this22","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super31","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUvs2","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","useLegacyLights","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator","_createForOfIteratorHelper","_step","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV2","supportsVertexTextures","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super32","_this24","isMeshDepthMaterial","_Material4","_super33","_this25","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearEncoding","RED","R32F","R16F","R8","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","TEXTURE_2D_ARRAY","TEXTURE_3D","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RED_INTEGER","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super34","_this26","isArrayCamera","cameras","Group","_Object3D4","_super35","_this27","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator2","_step2","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","visibilityState","_iterator3","_step3","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","_Texture4","_super36","_this28","WebXRManager","_EventDispatcher6","_super37","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","planesLastChangedTimes","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","getPlanes","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","planesToRemove","_iterator4","_step4","_iterator5","_step5","_iterator6","_step6","lastChangedTime","lastKnownTime","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","createCanvasElement","display","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","_super38","FogExp2","Fog","Scene","_Object3D5","_super39","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$5","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super40","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super41","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super42","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","SkinnedMesh","_Mesh","_super43","_this34","bindMatrixInverse","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super44","_this35","isBone","DataTexture","_Texture5","_super45","_this36","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super46","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh","_sphere$2","InstancedMesh","_Mesh2","_super47","_this38","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","_Material6","_super48","_this39","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super49","_this40","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super50","_this41","LineLoop","_Line2","_super51","_this42","_Material7","_super52","_this43","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super53","_this44","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super54","video","_this45","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super55","_this46","CompressedTexture","_Texture8","_super56","_this47","CompressedArrayTexture","_CompressedTexture","_super57","_this48","CanvasTexture","_Texture9","_super58","_this49","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super59","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this50","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super60","aRadius","_this51","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super61","curveType","_this52","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super62","_this53","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super63","_this54","isCubicBezierCurve3","LineCurve","_Curve5","_super64","_this55","isLineCurve","LineCurve3","_Curve6","_super65","_this56","isLineCurve3","QuadraticBezierCurve","_Curve7","_super66","_this57","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super67","_this58","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super68","_this59","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super69","_this60","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super70","_this61","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super71","phiStart","phiLength","_this62","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super72","capSegments","radialSegments","_this63","CircleGeometry","_BufferGeometry4","_super73","thetaStart","thetaLength","_this64","segment","CylinderGeometry","_BufferGeometry5","_super74","radiusTop","radiusBottom","openEnded","_this65","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super75","_this66","PolyhedronGeometry","_BufferGeometry6","_super76","_this67","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super77","_this68","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super78","thresholdAngle","_this69","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super79","_this70","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super80","_this71","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super81","_this72","OctahedronGeometry","_PolyhedronGeometry3","_super82","_this73","RingGeometry","_BufferGeometry9","_super83","innerRadius","outerRadius","thetaSegments","phiSegments","_this74","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super84","_this75","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super85","_this76","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super86","_this77","TorusGeometry","_BufferGeometry12","_super87","tube","tubularSegments","_this78","TorusKnotGeometry","_BufferGeometry13","_super88","_this79","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super89","_this80","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super90","_this81","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super91","_this82","RawShaderMaterial","_ShaderMaterial","_super92","_this83","_Material9","_super93","_this84","_MeshStandardMaterial","_super94","_this85","_sheen","_clearcoat","_iridescence","_transmission","_toConsumableArray","_Material10","_super95","_this86","_Material11","_super96","_this87","_Material12","_super97","_this88","_Material13","_super98","_this89","_Material14","_super99","_this90","_LineBasicMaterial","_super100","_this91","arraySlice","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super101","_this92","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super102","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super103","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super104","ColorKeyframeTrack","_KeyframeTrack2","_super105","NumberKeyframeTrack","_KeyframeTrack3","_super106","QuaternionLinearInterpolant","_Interpolant4","_super107","QuaternionKeyframeTrack","_KeyframeTrack4","_super108","StringKeyframeTrack","_KeyframeTrack5","_super109","VectorKeyframeTrack","_KeyframeTrack6","_super110","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","HttpError","_Error","_super111","response","_this93","_wrapNativeSuper","FileLoader","_Loader","_super112","_this94","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super113","CompressedTextureLoader","_Loader3","_super114","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super115","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super116","urls","DataTextureLoader","_Loader6","_super117","texData","TextureLoader","_Loader7","_super118","Light","_Object3D11","_super119","_this95","HemisphereLight","_Light","_super120","_this96","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super121","_this97","isSpotLightShadow","SpotLight","_Light2","_super122","_this98","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super123","_this99","_cubeDirections","_cubeUps","PointLight","_Light3","_super124","_this100","DirectionalLightShadow","_LightShadow3","_super125","_this101","isDirectionalLightShadow","DirectionalLight","_Light4","_super126","_this102","AmbientLight","_Light5","_super127","_this103","RectAreaLight","_Light6","_super128","_this104","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super129","_this105","MaterialLoader","_Loader8","_super130","_this106","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super131","_this107","BufferGeometryLoader","_Loader9","_super132","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super133","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super134","_this108","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super135","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","_LightProbe","_super136","_this109","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_super137","_this110","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super138","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super139","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super140","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super141","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","_EventDispatcher8","_super142","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super143","_this116","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super144","_this117","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super145","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super146","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super147","_this120","GridHelper","_LineSegments2","_super148","_this121","PolarGridHelper","_LineSegments3","_super149","sectors","rings","_this122","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super150","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super151","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super152","_this125","Box3Helper","_LineSegments6","_super153","_this126","PlaneHelper","_Line3","_super154","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super155","headLength","headWidth","_this128","setDirection","setColor","AxesHelper","_LineSegments7","_super156","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","BoxBufferGeometry","_BoxGeometry","_super157","CapsuleBufferGeometry","_CapsuleGeometry","_super158","CircleBufferGeometry","_CircleGeometry","_super159","ConeBufferGeometry","_ConeGeometry","_super160","CylinderBufferGeometry","_CylinderGeometry2","_super161","DodecahedronBufferGeometry","_DodecahedronGeometry","_super162","ExtrudeBufferGeometry","_ExtrudeGeometry","_super163","IcosahedronBufferGeometry","_IcosahedronGeometry","_super164","LatheBufferGeometry","_LatheGeometry2","_super165","OctahedronBufferGeometry","_OctahedronGeometry","_super166","PlaneBufferGeometry","_PlaneGeometry","_super167","PolyhedronBufferGeometry","_PolyhedronGeometry5","_super168","RingBufferGeometry","_RingGeometry","_super169","ShapeBufferGeometry","_ShapeGeometry","_super170","SphereBufferGeometry","_SphereGeometry","_super171","TetrahedronBufferGeometry","_TetrahedronGeometry","_super172","TorusBufferGeometry","_TorusGeometry","_super173","TorusKnotBufferGeometry","_TorusKnotGeometry","_super174","TubeBufferGeometry","_TubeGeometry","_super175","revision","__THREE__"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;+CACA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,OAAA,SAAAA,OAAA,OAAAC,EAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,MAAA,GAAAH,EAAA,CAAAI,cAAA,EAAAC,cAAA,GAAAJ,MAAA,CAAAI,cAAA,cAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA,IAAAF,GAAA,CAAAC,GAAA,IAAAC,IAAA,CAAAC,KAAA,KAAAC,OAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,cAAA,GAAAF,OAAA,CAAAG,QAAA,kBAAAC,mBAAA,GAAAJ,OAAA,CAAAK,aAAA,uBAAAC,iBAAA,GAAAN,OAAA,CAAAO,WAAA,8BAAAC,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA,WAAAR,MAAA,CAAAI,cAAA,CAAAC,GAAA,EAAAC,GAAA,IAAAE,KAAA,EAAAA,KAAA,EAAAU,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAf,GAAA,CAAAC,GAAA,WAAAW,MAAA,mBAAAI,GAAA,IAAAJ,MAAA,YAAAA,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA,WAAAH,GAAA,CAAAC,GAAA,IAAAE,KAAA,gBAAAc,KAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,QAAAC,cAAA,GAAAH,OAAA,IAAAA,OAAA,CAAAvB,SAAA,YAAA2B,SAAA,GAAAJ,OAAA,GAAAI,SAAA,EAAAC,SAAA,GAAA7B,MAAA,CAAA8B,MAAA,CAAAH,cAAA,CAAA1B,SAAA,GAAA8B,OAAA,OAAAC,OAAA,CAAAN,WAAA,gBAAAtB,cAAA,CAAAyB,SAAA,eAAArB,KAAA,EAAAyB,gBAAA,CAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,MAAAF,SAAA,aAAAK,SAAAC,EAAA,EAAA9B,GAAA,EAAA+B,GAAA,mBAAAC,IAAA,YAAAD,GAAA,EAAAD,EAAA,CAAAG,IAAA,CAAAjC,GAAA,EAAA+B,GAAA,cAAAf,GAAA,aAAAgB,IAAA,WAAAD,GAAA,EAAAf,GAAA,QAAAvB,OAAA,CAAAwB,IAAA,GAAAA,IAAA,MAAAiB,gBAAA,gBAAAX,UAAA,cAAAY,kBAAA,cAAAC,2BAAA,SAAAC,iBAAA,OAAAzB,MAAA,CAAAyB,iBAAA,EAAA/B,cAAA,qCAAAgC,QAAA,GAAA3C,MAAA,CAAA4C,cAAA,EAAAC,uBAAA,GAAAF,QAAA,IAAAA,QAAA,CAAAA,QAAA,CAAAG,MAAA,QAAAD,uBAAA,IAAAA,uBAAA,KAAA9C,EAAA,IAAAG,MAAA,CAAAoC,IAAA,CAAAO,uBAAA,EAAAlC,cAAA,MAAA+B,iBAAA,GAAAG,uBAAA,OAAAE,EAAA,GAAAN,0BAAA,CAAAxC,SAAA,GAAA2B,SAAA,CAAA3B,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAY,iBAAA,YAAAM,sBAAA/C,SAAA,gCAAAgD,OAAA,WAAAC,MAAA,IAAAjC,MAAA,CAAAhB,SAAA,EAAAiD,MAAA,YAAAd,GAAA,gBAAAe,OAAA,CAAAD,MAAA,EAAAd,GAAA,sBAAAgB,cAAAvB,SAAA,EAAAwB,WAAA,aAAAC,OAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,QAAAC,MAAA,GAAAvB,QAAA,CAAAL,SAAA,CAAAqB,MAAA,GAAArB,SAAA,EAAAO,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,QAAAqB,MAAA,GAAAD,MAAA,CAAArB,GAAA,EAAA5B,KAAA,GAAAkD,MAAA,CAAAlD,KAAA,SAAAA,KAAA,gBAAAmD,OAAA,CAAAnD,KAAA,KAAAN,MAAA,CAAAoC,IAAA,CAAA9B,KAAA,eAAA6C,WAAA,CAAAE,OAAA,CAAA/C,KAAA,CAAAoD,OAAA,EAAAC,IAAA,WAAArD,KAAA,IAAA8C,MAAA,SAAA9C,KAAA,EAAA+C,OAAA,EAAAC,MAAA,gBAAAnC,GAAA,IAAAiC,MAAA,UAAAjC,GAAA,EAAAkC,OAAA,EAAAC,MAAA,QAAAH,WAAA,CAAAE,OAAA,CAAA/C,KAAA,EAAAqD,IAAA,WAAAC,SAAA,IAAAJ,MAAA,CAAAlD,KAAA,GAAAsD,SAAA,EAAAP,OAAA,CAAAG,MAAA,gBAAAK,KAAA,WAAAT,MAAA,UAAAS,KAAA,EAAAR,OAAA,EAAAC,MAAA,SAAAA,MAAA,CAAAC,MAAA,CAAArB,GAAA,SAAA4B,eAAA,EAAA5D,cAAA,oBAAAI,KAAA,WAAAA,MAAA0C,MAAA,EAAAd,GAAA,aAAA6B,2BAAA,eAAAZ,WAAA,WAAAE,OAAA,EAAAC,MAAA,IAAAF,MAAA,CAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,gBAAAQ,eAAA,GAAAA,eAAA,GAAAA,eAAA,CAAAH,IAAA,CAAAI,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAhC,iBAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,QAAAmC,KAAA,sCAAAhB,MAAA,EAAAd,GAAA,wBAAA8B,KAAA,YAAAC,KAAA,sDAAAD,KAAA,oBAAAhB,MAAA,QAAAd,GAAA,SAAAgC,UAAA,WAAArC,OAAA,CAAAmB,MAAA,GAAAA,MAAA,EAAAnB,OAAA,CAAAK,GAAA,GAAAA,GAAA,UAAAiC,QAAA,GAAAtC,OAAA,CAAAsC,QAAA,MAAAA,QAAA,QAAAC,cAAA,GAAAC,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,OAAAuC,cAAA,QAAAA,cAAA,KAAA/B,gBAAA,mBAAA+B,cAAA,qBAAAvC,OAAA,CAAAmB,MAAA,EAAAnB,OAAA,CAAAyC,IAAA,GAAAzC,OAAA,CAAA0C,KAAA,GAAA1C,OAAA,CAAAK,GAAA,sBAAAL,OAAA,CAAAmB,MAAA,6BAAAgB,KAAA,QAAAA,KAAA,gBAAAnC,OAAA,CAAAK,GAAA,EAAAL,OAAA,CAAA2C,iBAAA,CAAA3C,OAAA,CAAAK,GAAA,uBAAAL,OAAA,CAAAmB,MAAA,IAAAnB,OAAA,CAAA4C,MAAA,WAAA5C,OAAA,CAAAK,GAAA,GAAA8B,KAAA,oBAAAT,MAAA,GAAAvB,QAAA,CAAAX,OAAA,EAAAE,IAAA,EAAAM,OAAA,oBAAA0B,MAAA,CAAApB,IAAA,QAAA6B,KAAA,GAAAnC,OAAA,CAAA6C,IAAA,mCAAAnB,MAAA,CAAArB,GAAA,KAAAG,gBAAA,qBAAA/B,KAAA,EAAAiD,MAAA,CAAArB,GAAA,EAAAwC,IAAA,EAAA7C,OAAA,CAAA6C,IAAA,kBAAAnB,MAAA,CAAApB,IAAA,KAAA6B,KAAA,gBAAAnC,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,mBAAAmC,oBAAAF,QAAA,EAAAtC,OAAA,QAAA8C,UAAA,GAAA9C,OAAA,CAAAmB,MAAA,EAAAA,MAAA,GAAAmB,QAAA,CAAAzD,QAAA,CAAAiE,UAAA,OAAAC,SAAA,KAAA5B,MAAA,SAAAnB,OAAA,CAAAsC,QAAA,qBAAAQ,UAAA,IAAAR,QAAA,CAAAzD,QAAA,CAAAmE,MAAA,KAAAhD,OAAA,CAAAmB,MAAA,aAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,EAAAP,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,eAAAA,OAAA,CAAAmB,MAAA,kBAAA2B,UAAA,KAAA9C,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA4C,SAAA,uCAAAH,UAAA,iBAAAtC,gBAAA,MAAAkB,MAAA,GAAAvB,QAAA,CAAAgB,MAAA,EAAAmB,QAAA,CAAAzD,QAAA,EAAAmB,OAAA,CAAAK,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,SAAAN,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,EAAAL,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,MAAA0C,IAAA,GAAAxB,MAAA,CAAArB,GAAA,SAAA6C,IAAA,GAAAA,IAAA,CAAAL,IAAA,IAAA7C,OAAA,CAAAsC,QAAA,CAAAa,UAAA,IAAAD,IAAA,CAAAzE,KAAA,EAAAuB,OAAA,CAAAoD,IAAA,GAAAd,QAAA,CAAAe,OAAA,eAAArD,OAAA,CAAAmB,MAAA,KAAAnB,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,GAAA/C,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,IAAA0C,IAAA,IAAAlD,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA4C,SAAA,sCAAAjD,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,cAAA8C,aAAAC,IAAA,QAAAC,KAAA,KAAAC,MAAA,EAAAF,IAAA,YAAAA,IAAA,KAAAC,KAAA,CAAAE,QAAA,GAAAH,IAAA,WAAAA,IAAA,KAAAC,KAAA,CAAAG,UAAA,GAAAJ,IAAA,KAAAC,KAAA,CAAAI,QAAA,GAAAL,IAAA,WAAAM,UAAA,CAAAC,IAAA,CAAAN,KAAA,cAAAO,cAAAP,KAAA,QAAA9B,MAAA,GAAA8B,KAAA,CAAAQ,UAAA,QAAAtC,MAAA,CAAApB,IAAA,oBAAAoB,MAAA,CAAArB,GAAA,EAAAmD,KAAA,CAAAQ,UAAA,GAAAtC,MAAA,aAAAzB,QAAAN,WAAA,SAAAkE,UAAA,MAAAJ,MAAA,aAAA9D,WAAA,CAAAuB,OAAA,CAAAoC,YAAA,cAAAW,KAAA,iBAAAlD,OAAAmD,QAAA,QAAAA,QAAA,QAAAC,cAAA,GAAAD,QAAA,CAAAtF,cAAA,OAAAuF,cAAA,SAAAA,cAAA,CAAA5D,IAAA,CAAA2D,QAAA,4BAAAA,QAAA,CAAAd,IAAA,SAAAc,QAAA,OAAAE,KAAA,CAAAF,QAAA,CAAAG,MAAA,SAAAC,CAAA,OAAAlB,IAAA,YAAAA,KAAA,aAAAkB,CAAA,GAAAJ,QAAA,CAAAG,MAAA,OAAAlG,MAAA,CAAAoC,IAAA,CAAA2D,QAAA,EAAAI,CAAA,UAAAlB,IAAA,CAAA3E,KAAA,GAAAyF,QAAA,CAAAI,CAAA,GAAAlB,IAAA,CAAAP,IAAA,OAAAO,IAAA,SAAAA,IAAA,CAAA3E,KAAA,GAAAsE,SAAA,EAAAK,IAAA,CAAAP,IAAA,OAAAO,IAAA,YAAAA,IAAA,CAAAA,IAAA,GAAAA,IAAA,eAAAA,IAAA,EAAAf,UAAA,eAAAA,WAAA,aAAA5D,KAAA,EAAAsE,SAAA,EAAAF,IAAA,iBAAApC,iBAAA,CAAAvC,SAAA,GAAAwC,0BAAA,EAAArC,cAAA,CAAA2C,EAAA,mBAAAvC,KAAA,EAAAiC,0BAAA,EAAAtB,YAAA,SAAAf,cAAA,CAAAqC,0BAAA,mBAAAjC,KAAA,EAAAgC,iBAAA,EAAArB,YAAA,SAAAqB,iBAAA,CAAA8D,WAAA,GAAArF,MAAA,CAAAwB,0BAAA,EAAA1B,iBAAA,wBAAAjB,OAAA,CAAAyG,mBAAA,aAAAC,MAAA,QAAAC,IAAA,wBAAAD,MAAA,IAAAA,MAAA,CAAAE,WAAA,WAAAD,IAAA,KAAAA,IAAA,KAAAjE,iBAAA,6BAAAiE,IAAA,CAAAH,WAAA,IAAAG,IAAA,CAAAE,IAAA,OAAA7G,OAAA,CAAA8G,IAAA,aAAAJ,MAAA,WAAAxG,MAAA,CAAA6G,cAAA,GAAA7G,MAAA,CAAA6G,cAAA,CAAAL,MAAA,EAAA/D,0BAAA,KAAA+D,MAAA,CAAAM,SAAA,GAAArE,0BAAA,EAAAxB,MAAA,CAAAuF,MAAA,EAAAzF,iBAAA,yBAAAyF,MAAA,CAAAvG,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAiB,EAAA,GAAAyD,MAAA,KAAA1G,OAAA,CAAAiH,KAAA,aAAA3E,GAAA,aAAAwB,OAAA,EAAAxB,GAAA,OAAAY,qBAAA,CAAAI,aAAA,CAAAnD,SAAA,GAAAgB,MAAA,CAAAmC,aAAA,CAAAnD,SAAA,EAAAY,mBAAA,iCAAAf,OAAA,CAAAsD,aAAA,GAAAA,aAAA,EAAAtD,OAAA,CAAAkH,KAAA,aAAAzF,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,EAAA2B,WAAA,eAAAA,WAAA,KAAAA,WAAA,GAAA4D,OAAA,OAAAC,IAAA,OAAA9D,aAAA,CAAA9B,IAAA,CAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,GAAA2B,WAAA,UAAAvD,OAAA,CAAAyG,mBAAA,CAAA/E,OAAA,IAAA0F,IAAA,GAAAA,IAAA,CAAA/B,IAAA,GAAAtB,IAAA,WAAAH,MAAA,WAAAA,MAAA,CAAAkB,IAAA,GAAAlB,MAAA,CAAAlD,KAAA,GAAA0G,IAAA,CAAA/B,IAAA,WAAAnC,qBAAA,CAAAD,EAAA,GAAA9B,MAAA,CAAA8B,EAAA,EAAAhC,iBAAA,gBAAAE,MAAA,CAAA8B,EAAA,EAAApC,cAAA,iCAAAM,MAAA,CAAA8B,EAAA,6DAAAjD,OAAA,CAAAqH,IAAA,aAAAC,GAAA,QAAAC,MAAA,GAAArH,MAAA,CAAAoH,GAAA,GAAAD,IAAA,gBAAA7G,GAAA,IAAA+G,MAAA,EAAAF,IAAA,CAAAtB,IAAA,CAAAvF,GAAA,UAAA6G,IAAA,CAAAG,OAAA,aAAAnC,KAAA,WAAAgC,IAAA,CAAAf,MAAA,SAAA9F,GAAA,GAAA6G,IAAA,CAAAI,GAAA,QAAAjH,GAAA,IAAA+G,MAAA,SAAAlC,IAAA,CAAA3E,KAAA,GAAAF,GAAA,EAAA6E,IAAA,CAAAP,IAAA,OAAAO,IAAA,WAAAA,IAAA,CAAAP,IAAA,OAAAO,IAAA,QAAArF,OAAA,CAAAgD,MAAA,GAAAA,MAAA,EAAAd,OAAA,CAAA/B,SAAA,KAAAyG,WAAA,EAAA1E,OAAA,EAAAgE,KAAA,WAAAA,MAAAwB,aAAA,aAAAC,IAAA,WAAAtC,IAAA,WAAAX,IAAA,QAAAC,KAAA,GAAAK,SAAA,OAAAF,IAAA,YAAAP,QAAA,cAAAnB,MAAA,gBAAAd,GAAA,GAAA0C,SAAA,OAAAc,UAAA,CAAA3C,OAAA,CAAA6C,aAAA,IAAA0B,aAAA,WAAAb,IAAA,kBAAAA,IAAA,CAAAe,MAAA,OAAAxH,MAAA,CAAAoC,IAAA,OAAAqE,IAAA,MAAAR,KAAA,EAAAQ,IAAA,CAAAgB,KAAA,cAAAhB,IAAA,IAAA7B,SAAA,MAAA8C,IAAA,WAAAA,KAAA,SAAAhD,IAAA,WAAAiD,UAAA,QAAAjC,UAAA,IAAAG,UAAA,kBAAA8B,UAAA,CAAAxF,IAAA,QAAAwF,UAAA,CAAAzF,GAAA,cAAA0F,IAAA,KAAApD,iBAAA,WAAAA,kBAAAqD,SAAA,aAAAnD,IAAA,QAAAmD,SAAA,MAAAhG,OAAA,kBAAAiG,OAAAC,GAAA,EAAAC,MAAA,WAAAzE,MAAA,CAAApB,IAAA,YAAAoB,MAAA,CAAArB,GAAA,GAAA2F,SAAA,EAAAhG,OAAA,CAAAoD,IAAA,GAAA8C,GAAA,EAAAC,MAAA,KAAAnG,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,KAAAoD,MAAA,aAAA7B,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,GAAA5C,MAAA,GAAA8B,KAAA,CAAAQ,UAAA,iBAAAR,KAAA,CAAAC,MAAA,SAAAwC,MAAA,aAAAzC,KAAA,CAAAC,MAAA,SAAAiC,IAAA,QAAAU,QAAA,GAAAjI,MAAA,CAAAoC,IAAA,CAAAiD,KAAA,eAAA6C,UAAA,GAAAlI,MAAA,CAAAoC,IAAA,CAAAiD,KAAA,qBAAA4C,QAAA,IAAAC,UAAA,aAAAX,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,gBAAAgC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,cAAAyC,QAAA,aAAAV,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,qBAAA2C,UAAA,YAAAjE,KAAA,qDAAAsD,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,YAAAf,MAAA,WAAAA,OAAAtC,IAAA,EAAAD,GAAA,aAAAiE,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,SAAAiC,IAAA,IAAAvH,MAAA,CAAAoC,IAAA,CAAAiD,KAAA,wBAAAkC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,QAAA2C,YAAA,GAAA9C,KAAA,aAAA8C,YAAA,iBAAAhG,IAAA,mBAAAA,IAAA,KAAAgG,YAAA,CAAA7C,MAAA,IAAApD,GAAA,IAAAA,GAAA,IAAAiG,YAAA,CAAA3C,UAAA,KAAA2C,YAAA,cAAA5E,MAAA,GAAA4E,YAAA,GAAAA,YAAA,CAAAtC,UAAA,cAAAtC,MAAA,CAAApB,IAAA,GAAAA,IAAA,EAAAoB,MAAA,CAAArB,GAAA,GAAAA,GAAA,EAAAiG,YAAA,SAAAnF,MAAA,gBAAAiC,IAAA,GAAAkD,YAAA,CAAA3C,UAAA,EAAAnD,gBAAA,SAAA+F,QAAA,CAAA7E,MAAA,MAAA6E,QAAA,WAAAA,SAAA7E,MAAA,EAAAkC,QAAA,oBAAAlC,MAAA,CAAApB,IAAA,QAAAoB,MAAA,CAAArB,GAAA,qBAAAqB,MAAA,CAAApB,IAAA,mBAAAoB,MAAA,CAAApB,IAAA,QAAA8C,IAAA,GAAA1B,MAAA,CAAArB,GAAA,gBAAAqB,MAAA,CAAApB,IAAA,SAAAyF,IAAA,QAAA1F,GAAA,GAAAqB,MAAA,CAAArB,GAAA,OAAAc,MAAA,kBAAAiC,IAAA,yBAAA1B,MAAA,CAAApB,IAAA,IAAAsD,QAAA,UAAAR,IAAA,GAAAQ,QAAA,GAAApD,gBAAA,KAAAgG,MAAA,WAAAA,OAAA7C,UAAA,aAAAW,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAG,UAAA,KAAAA,UAAA,cAAA4C,QAAA,CAAA/C,KAAA,CAAAQ,UAAA,EAAAR,KAAA,CAAAI,QAAA,GAAAG,aAAA,CAAAP,KAAA,GAAAhD,gBAAA,OAAAiG,KAAA,WAAAC,OAAAjD,MAAA,aAAAa,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,KAAAA,MAAA,QAAA/B,MAAA,GAAA8B,KAAA,CAAAQ,UAAA,kBAAAtC,MAAA,CAAApB,IAAA,QAAAqG,MAAA,GAAAjF,MAAA,CAAArB,GAAA,EAAA0D,aAAA,CAAAP,KAAA,YAAAmD,MAAA,gBAAAvE,KAAA,8BAAAwE,aAAA,WAAAA,cAAA1C,QAAA,EAAAf,UAAA,EAAAE,OAAA,gBAAAf,QAAA,KAAAzD,QAAA,EAAAkC,MAAA,CAAAmD,QAAA,GAAAf,UAAA,EAAAA,UAAA,EAAAE,OAAA,EAAAA,OAAA,oBAAAlC,MAAA,UAAAd,GAAA,GAAA0C,SAAA,GAAAvC,gBAAA,OAAAzC,OAAA;AAAA,SAAA8I,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAA9D,SAAA;AAAA,SAAA+D,kBAAAC,MAAA,EAAAC,KAAA,aAAA5C,CAAA,MAAAA,CAAA,GAAA4C,KAAA,CAAA7C,MAAA,EAAAC,CAAA,UAAA6C,UAAA,GAAAD,KAAA,CAAA5C,CAAA,GAAA6C,UAAA,CAAAhI,UAAA,GAAAgI,UAAA,CAAAhI,UAAA,WAAAgI,UAAA,CAAA/H,YAAA,wBAAA+H,UAAA,EAAAA,UAAA,CAAA9H,QAAA,SAAApB,MAAA,CAAAI,cAAA,CAAA4I,MAAA,EAAAG,cAAA,CAAAD,UAAA,CAAA5I,GAAA,GAAA4I,UAAA;AAAA,SAAAE,aAAAN,WAAA,EAAAO,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAN,iBAAA,CAAAD,WAAA,CAAA7I,SAAA,EAAAoJ,UAAA,OAAAC,WAAA,EAAAP,iBAAA,CAAAD,WAAA,EAAAQ,WAAA,GAAAtJ,MAAA,CAAAI,cAAA,CAAA0I,WAAA,iBAAA1H,QAAA,mBAAA0H,WAAA;AAAA,SAAAK,eAAA/G,GAAA,QAAA9B,GAAA,GAAAiJ,YAAA,CAAAnH,GAAA,oBAAAuB,OAAA,CAAArD,GAAA,iBAAAA,GAAA,GAAAkJ,MAAA,CAAAlJ,GAAA;AAAA,SAAAiJ,aAAAE,KAAA,EAAAC,IAAA,QAAA/F,OAAA,CAAA8F,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAA/I,MAAA,CAAAkJ,WAAA,OAAAD,IAAA,KAAA7E,SAAA,QAAA+E,GAAA,GAAAF,IAAA,CAAArH,IAAA,CAAAmH,KAAA,EAAAC,IAAA,oBAAA/F,OAAA,CAAAkG,GAAA,uBAAAA,GAAA,YAAA7E,SAAA,4DAAA0E,IAAA,gBAAAF,MAAA,GAAAM,MAAA,EAAAL,KAAA;AAAA,SAAA9F,QAAAtD,GAAA,sCAAAsD,OAAA,wBAAAjD,MAAA,uBAAAA,MAAA,CAAAE,QAAA,aAAAP,GAAA,kBAAAA,GAAA,gBAAAA,GAAA,WAAAA,GAAA,yBAAAK,MAAA,IAAAL,GAAA,CAAAqG,WAAA,KAAAhG,MAAA,IAAAL,GAAA,KAAAK,MAAA,CAAAT,SAAA,qBAAAI,GAAA,KAAAsD,OAAA,CAAAtD,GAAA;AADA0J,OAAO,CAACC,IAAI,CAAE,4NAA4N,CAAE;AAC5O;AACA;AACA;AACA;AACA;AACA,CAAC,UAAUC,MAAM,EAAEC,OAAO,EAAE;EAC3B,QAAOpK,OAAO,iCAAA6D,OAAA,CAAP7D,OAAO,OAAK,QAAQ,IAAI,OAAOqK,MAAM,KAAK,WAAW,GAAGD,OAAO,CAACpK,OAAO,CAAC,GAC/E,OAAOmB,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACmJ,GAAG,GAAGnJ,MAAM,CAAC,CAAC,SAAS,CAAC,EAAEiJ,OAAO,CAAC,IACxED,MAAM,GAAG,OAAOI,UAAU,KAAK,WAAW,GAAGA,UAAU,GAAGJ,MAAM,IAAIxI,IAAI,EAAEyI,OAAO,CAACD,MAAM,CAACK,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AACvG,CAAC,EAAE,IAAI,EAAG,UAAUxK,OAAO,EAAE;EAAE,YAAY;;EAAC,IAAAyK,UAAA,EAAAC,YAAA;EAE3C,IAAMC,QAAQ,GAAG,KAAK;EACtB,IAAMC,KAAK,GAAG;IAAEC,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAE,CAAC;EAC3E,IAAMC,KAAK,GAAG;IAAEH,MAAM,EAAE,CAAC;IAAEE,GAAG,EAAE,CAAC;IAAEE,SAAS,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAE,CAAC;EAClE,IAAMC,YAAY,GAAG,CAAC;EACtB,IAAMC,YAAY,GAAG,CAAC;EACtB,IAAMC,aAAa,GAAG,CAAC;EACvB,IAAMC,iBAAiB,GAAG,CAAC;EAC3B,IAAMC,cAAc,GAAG,CAAC;EACxB,IAAMC,YAAY,GAAG,CAAC;EACtB,IAAMC,gBAAgB,GAAG,CAAC;EAC1B,IAAMC,YAAY,GAAG,CAAC;EACtB,IAAMC,SAAS,GAAG,CAAC;EACnB,IAAMC,QAAQ,GAAG,CAAC;EAClB,IAAMC,UAAU,GAAG,CAAC;EACpB,IAAMC,iBAAiB,GAAG,CAAC,CAAC,CAAC;EAC7B,IAAMC,UAAU,GAAG,CAAC;EACpB,IAAMC,cAAc,GAAG,CAAC;EACxB,IAAMC,gBAAgB,GAAG,CAAC;EAC1B,IAAMC,mBAAmB,GAAG,CAAC;EAC7B,IAAMC,gBAAgB,GAAG,CAAC;EAC1B,IAAMC,cAAc,GAAG,CAAC;EACxB,IAAMC,WAAW,GAAG,GAAG;EACvB,IAAMC,gBAAgB,GAAG,GAAG;EAC5B,IAAMC,uBAAuB,GAAG,GAAG;EACnC,IAAMC,WAAW,GAAG,GAAG;EACvB,IAAMC,WAAW,GAAG,GAAG;EACvB,IAAMC,UAAU,GAAG,GAAG;EACtB,IAAMC,SAAS,GAAG,GAAG;EACrB,IAAMC,cAAc,GAAG,GAAG;EAC1B,IAAMC,sBAAsB,GAAG,GAAG;EAClC,IAAMC,cAAc,GAAG,GAAG;EAC1B,IAAMC,sBAAsB,GAAG,GAAG;EAClC,IAAMC,cAAc,GAAG,GAAG;EAC1B,IAAMC,sBAAsB,GAAG,GAAG;EAClC,IAAMC,cAAc,GAAG,GAAG;EAC1B,IAAMC,sBAAsB,GAAG,GAAG;EAClC,IAAMC,sBAAsB,GAAG,GAAG;EAClC,IAAMC,UAAU,GAAG,CAAC;EACpB,IAAMC,WAAW,GAAG,CAAC;EACrB,IAAMC,SAAS,GAAG,CAAC;EACnB,IAAMC,cAAc,GAAG,CAAC;EACxB,IAAMC,UAAU,GAAG,CAAC;EACpB,IAAMC,iBAAiB,GAAG,CAAC;EAC3B,IAAMC,YAAY,GAAG,CAAC;EACtB,IAAMC,aAAa,GAAG,CAAC;EACvB,IAAMC,iBAAiB,GAAG,CAAC;EAC3B,IAAMC,YAAY,GAAG,CAAC;EACtB,IAAMC,YAAY,GAAG,CAAC;EACtB,IAAMC,aAAa,GAAG,CAAC;EACvB,IAAMC,iBAAiB,GAAG,CAAC;EAC3B,IAAMC,mBAAmB,GAAG,CAAC;EAC7B,IAAMC,iBAAiB,GAAG,CAAC;EAC3B,IAAMC,qBAAqB,GAAG,CAAC;EAC/B,IAAMC,iBAAiB,GAAG,CAAC;EAE3B,IAAMC,SAAS,GAAG,GAAG;EACrB,IAAMC,qBAAqB,GAAG,GAAG;EACjC,IAAMC,qBAAqB,GAAG,GAAG;EACjC,IAAMC,gCAAgC,GAAG,GAAG;EAC5C,IAAMC,gCAAgC,GAAG,GAAG;EAC5C,IAAMC,uBAAuB,GAAG,GAAG;EACnC,IAAMC,cAAc,GAAG,IAAI;EAC3B,IAAMC,mBAAmB,GAAG,IAAI;EAChC,IAAMC,sBAAsB,GAAG,IAAI;EACnC,IAAMC,aAAa,GAAG,IAAI;EAC1B,IAAMC,0BAA0B,GAAG,IAAI;EACvC,IAAMC,0BAA0B,GAAG,IAAI;EACvC,IAAMC,yBAAyB,GAAG,IAAI;EACtC,IAAMC,yBAAyB,GAAG,IAAI;EACtC,IAAMC,YAAY,GAAG,IAAI;EACzB,IAAMC,yBAAyB,GAAG,IAAI;EACtC,IAAMC,yBAAyB,GAAG,IAAI;EACtC,IAAMC,wBAAwB,GAAG,IAAI;EACrC,IAAMC,wBAAwB,GAAG,IAAI;EACrC,IAAMC,gBAAgB,GAAG,IAAI;EAC7B,IAAMC,QAAQ,GAAG,IAAI;EACrB,IAAMC,SAAS,GAAG,IAAI;EACtB,IAAMC,iBAAiB,GAAG,IAAI;EAC9B,IAAMC,OAAO,GAAG,IAAI;EACpB,IAAMC,eAAe,GAAG,IAAI;EAC5B,IAAMC,SAAS,GAAG,IAAI;EACtB,IAAMC,aAAa,GAAG,IAAI;EAC1B,IAAMC,qBAAqB,GAAG,IAAI;EAClC,IAAMC,qBAAqB,GAAG,IAAI;EAClC,IAAMC,kBAAkB,GAAG,IAAI;EAC/B,IAAMC,WAAW,GAAG,IAAI;EACxB,IAAMC,UAAU,GAAG,IAAI;EACvB,IAAMC,eAAe,GAAG,IAAI;EAC5B,IAAMC,oBAAoB,GAAG,IAAI;EACjC,IAAMC,WAAW,GAAG,IAAI;EACxB,IAAMC,kBAAkB,GAAG,IAAI;EAC/B,IAAMC,SAAS,GAAG,IAAI;EACtB,IAAMC,gBAAgB,GAAG,IAAI;EAC7B,IAAMC,QAAQ,GAAG,IAAI;EACrB,IAAMC,eAAe,GAAG,IAAI;EAC5B,IAAMC,iBAAiB,GAAG,IAAI;EAE9B,IAAMC,oBAAoB,GAAG,KAAK;EAClC,IAAMC,qBAAqB,GAAG,KAAK;EACnC,IAAMC,qBAAqB,GAAG,KAAK;EACnC,IAAMC,qBAAqB,GAAG,KAAK;EACnC,IAAMC,uBAAuB,GAAG,KAAK;EACrC,IAAMC,uBAAuB,GAAG,KAAK;EACrC,IAAMC,wBAAwB,GAAG,KAAK;EACtC,IAAMC,wBAAwB,GAAG,KAAK;EACtC,IAAMC,eAAe,GAAG,KAAK;EAC7B,IAAMC,eAAe,GAAG,KAAK;EAC7B,IAAMC,oBAAoB,GAAG,KAAK;EAClC,IAAMC,oBAAoB,GAAG,KAAK;EAClC,IAAMC,oBAAoB,GAAG,KAAK;EAClC,IAAMC,oBAAoB,GAAG,KAAK;EAClC,IAAMC,oBAAoB,GAAG,KAAK;EAClC,IAAMC,oBAAoB,GAAG,KAAK;EAClC,IAAMC,oBAAoB,GAAG,KAAK;EAClC,IAAMC,oBAAoB,GAAG,KAAK;EAClC,IAAMC,oBAAoB,GAAG,KAAK;EAClC,IAAMC,qBAAqB,GAAG,KAAK;EACnC,IAAMC,qBAAqB,GAAG,KAAK;EACnC,IAAMC,qBAAqB,GAAG,KAAK;EACnC,IAAMC,sBAAsB,GAAG,KAAK;EACpC,IAAMC,sBAAsB,GAAG,KAAK;EACpC,IAAMC,sBAAsB,GAAG,KAAK;EACpC,IAAMC,gBAAgB,GAAG,KAAK;EAC9B,IAAMC,gBAAgB,GAAG,KAAK;EAC9B,IAAMC,uBAAuB,GAAG,KAAK;EACrC,IAAMC,sBAAsB,GAAG,KAAK;EACpC,IAAMC,6BAA6B,GAAG,KAAK;EAC3C,IAAMC,QAAQ,GAAG,IAAI;EACrB,IAAMC,UAAU,GAAG,IAAI;EACvB,IAAMC,YAAY,GAAG,IAAI;EACzB,IAAMC,mBAAmB,GAAG,IAAI;EAChC,IAAMC,iBAAiB,GAAG,IAAI;EAC9B,IAAMC,iBAAiB,GAAG,IAAI;EAC9B,IAAMC,mBAAmB,GAAG,IAAI;EAChC,IAAMC,eAAe,GAAG,IAAI;EAC5B,IAAMC,gBAAgB,GAAG,IAAI;EAC7B,IAAMC,wBAAwB,GAAG,IAAI;EACrC,IAAMC,0BAA0B,GAAG,IAAI;EACvC,IAAMC,iBAAiB,GAAG,CAAC;EAC3B,IAAMC,qBAAqB,GAAG,CAAC;EAC/B,IAAMC,mBAAmB,GAAG,CAAC;EAC7B,IAAMC,cAAc,GAAG,IAAI;EAC3B,IAAMC,YAAY,GAAG,IAAI;EACzB,IAAMC,iBAAiB,GAAG,IAAI;EAC9B,IAAMC,gBAAgB,GAAG,IAAI;EAC7B,IAAMC,qBAAqB,GAAG,CAAC;EAC/B,IAAMC,oBAAoB,GAAG,CAAC;;EAE9B;EACA,IAAMC,YAAY,GAAG,EAAE;EACvB,IAAMC,cAAc,GAAG,MAAM;EAC7B,IAAMC,oBAAoB,GAAG,aAAa;EAC1C,IAAMC,mBAAmB,GAAG,YAAY;EAExC,IAAMC,aAAa,GAAG,CAAC;EACvB,IAAMC,aAAa,GAAG,IAAI;EAC1B,IAAMC,gBAAgB,GAAG,IAAI;EAC7B,IAAMC,kBAAkB,GAAG,IAAI;EAC/B,IAAMC,kBAAkB,GAAG,IAAI;EAC/B,IAAMC,sBAAsB,GAAG,KAAK;EACpC,IAAMC,sBAAsB,GAAG,KAAK;EACpC,IAAMC,eAAe,GAAG,IAAI;EAE5B,IAAMC,gBAAgB,GAAG,GAAG;EAC5B,IAAMC,eAAe,GAAG,GAAG;EAC3B,IAAMC,gBAAgB,GAAG,GAAG;EAC5B,IAAMC,oBAAoB,GAAG,GAAG;EAChC,IAAMC,kBAAkB,GAAG,GAAG;EAC9B,IAAMC,mBAAmB,GAAG,GAAG;EAC/B,IAAMC,uBAAuB,GAAG,GAAG;EACnC,IAAMC,iBAAiB,GAAG,GAAG;EAE7B,IAAMC,eAAe,GAAG,KAAK;EAC7B,IAAMC,gBAAgB,GAAG,KAAK;EAC9B,IAAMC,eAAe,GAAG,KAAK;EAC7B,IAAMC,eAAe,GAAG,KAAK;EAC7B,IAAMC,gBAAgB,GAAG,KAAK;EAC9B,IAAMC,eAAe,GAAG,KAAK;EAC7B,IAAMC,eAAe,GAAG,KAAK;EAC7B,IAAMC,gBAAgB,GAAG,KAAK;EAC9B,IAAMC,eAAe,GAAG,KAAK;EAE7B,IAAMC,KAAK,GAAG,KAAK;EACnB,IAAMC,KAAK,GAAG,QAAQ;EAEtB,IAAMC,YAAY,GAAG,IAAI,CAAC,CAAC;;EAE3B;AACD;AACA;EAFC,IAIMC,eAAe;IAAA,SAAAA,gBAAA;MAAAtN,eAAA,OAAAsN,eAAA;IAAA;IAAA9M,YAAA,CAAA8M,eAAA;MAAA5V,GAAA;MAAAE,KAAA,EAEpB,SAAA2V,iBAAkB9T,IAAI,EAAE+T,QAAQ,EAAG;QAElC,IAAK,IAAI,CAACC,UAAU,KAAKvR,SAAS,EAAG,IAAI,CAACuR,UAAU,GAAG,CAAC,CAAC;QAEzD,IAAMC,SAAS,GAAG,IAAI,CAACD,UAAU;QAEjC,IAAKC,SAAS,CAAEjU,IAAI,CAAE,KAAKyC,SAAS,EAAG;UAEtCwR,SAAS,CAAEjU,IAAI,CAAE,GAAG,EAAE;QAEvB;QAEA,IAAKiU,SAAS,CAAEjU,IAAI,CAAE,CAACkU,OAAO,CAAEH,QAAQ,CAAE,KAAK,CAAE,CAAC,EAAG;UAEpDE,SAAS,CAAEjU,IAAI,CAAE,CAACwD,IAAI,CAAEuQ,QAAQ,CAAE;QAEnC;MAED;IAAC;MAAA9V,GAAA;MAAAE,KAAA,EAED,SAAAgW,iBAAkBnU,IAAI,EAAE+T,QAAQ,EAAG;QAElC,IAAK,IAAI,CAACC,UAAU,KAAKvR,SAAS,EAAG,OAAO,KAAK;QAEjD,IAAMwR,SAAS,GAAG,IAAI,CAACD,UAAU;QAEjC,OAAOC,SAAS,CAAEjU,IAAI,CAAE,KAAKyC,SAAS,IAAIwR,SAAS,CAAEjU,IAAI,CAAE,CAACkU,OAAO,CAAEH,QAAQ,CAAE,KAAK,CAAE,CAAC;MAExF;IAAC;MAAA9V,GAAA;MAAAE,KAAA,EAED,SAAAiW,oBAAqBpU,IAAI,EAAE+T,QAAQ,EAAG;QAErC,IAAK,IAAI,CAACC,UAAU,KAAKvR,SAAS,EAAG;QAErC,IAAMwR,SAAS,GAAG,IAAI,CAACD,UAAU;QACjC,IAAMK,aAAa,GAAGJ,SAAS,CAAEjU,IAAI,CAAE;QAEvC,IAAKqU,aAAa,KAAK5R,SAAS,EAAG;UAElC,IAAM6R,KAAK,GAAGD,aAAa,CAACH,OAAO,CAAEH,QAAQ,CAAE;UAE/C,IAAKO,KAAK,KAAK,CAAE,CAAC,EAAG;YAEpBD,aAAa,CAACE,MAAM,CAAED,KAAK,EAAE,CAAC,CAAE;UAEjC;QAED;MAED;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAqW,cAAeC,KAAK,EAAG;QAEtB,IAAK,IAAI,CAACT,UAAU,KAAKvR,SAAS,EAAG;QAErC,IAAMwR,SAAS,GAAG,IAAI,CAACD,UAAU;QACjC,IAAMK,aAAa,GAAGJ,SAAS,CAAEQ,KAAK,CAACzU,IAAI,CAAE;QAE7C,IAAKqU,aAAa,KAAK5R,SAAS,EAAG;UAElCgS,KAAK,CAAC9N,MAAM,GAAG,IAAI;;UAEnB;UACA,IAAM+N,KAAK,GAAGL,aAAa,CAAC/O,KAAK,CAAE,CAAC,CAAE;UAEtC,KAAM,IAAItB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGD,KAAK,CAAC3Q,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAEhD0Q,KAAK,CAAE1Q,CAAC,CAAE,CAAC/D,IAAI,CAAE,IAAI,EAAEwU,KAAK,CAAE;UAE/B;UAEAA,KAAK,CAAC9N,MAAM,GAAG,IAAI;QAEpB;MAED;IAAC;IAAA,OAAAkN,eAAA;EAAA;EAIF,IAAMegD,IAAIC,KAAK,GAAG,OAAO;EAGnB,IAAMC,OAAO,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;EAC7B,IAAMC,OAAO,GAAG,GAAG,GAAGF,IAAI,CAACC,EAAE;;EAE7B;EACA,SAASE,YAAYA,CAAA,EAAG;IAEvB,IAAMC,EAAE,GAAGJ,IAAI,CAACK,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;IACzC,IAAMC,EAAE,GAAGN,IAAI,CAACK,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;IACzC,IAAME,EAAE,GAAGP,IAAI,CAACK,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;IACzC,IAAMG,EAAE,GAAGR,IAAI,CAACK,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;IACzC,IAAMI,IAAI,GAAGZ,IAAI,CAAEO,EAAE,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAG,GAAG,GAC/GP,IAAI,CAAES,EAAE,GAAG,IAAI,CAAE,GAAGT,IAAI,CAAES,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAG,GAAG,GAAGT,IAAI,CAAES,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAE,GAAGT,IAAI,CAAES,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAG,GAAG,GACjHT,IAAI,CAAEU,EAAE,GAAG,IAAI,GAAG,IAAI,CAAE,GAAGV,IAAI,CAAEU,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAG,GAAG,GAAGV,IAAI,CAAEU,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGV,IAAI,CAAEU,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAC3GV,IAAI,CAAEW,EAAE,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE;;IAEhG;IACA,OAAOC,IAAI,CAACC,WAAW,EAAE;EAE1B;EAEA,SAASC,KAAKA,CAAEvX,KAAK,EAAEwX,GAAG,EAAEC,GAAG,EAAG;IAEjC,OAAOb,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAEzX,KAAK,CAAE,CAAE;EAE/C;;EAEA;EACA;EACA,SAAS0X,eAAeA,CAAEC,CAAC,EAAEC,CAAC,EAAG;IAEhC,OAAO,CAAID,CAAC,GAAGC,CAAC,GAAKA,CAAC,IAAKA,CAAC;EAE7B;;EAEA;EACA,SAASC,SAASA,CAAEC,CAAC,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;IAEvC,OAAOD,EAAE,GAAG,CAAEH,CAAC,GAAGC,EAAE,KAAOG,EAAE,GAAGD,EAAE,CAAE,IAAKD,EAAE,GAAGD,EAAE,CAAE;EAEnD;;EAEA;EACA,SAASI,WAAWA,CAAEL,CAAC,EAAEM,CAAC,EAAEpY,KAAK,EAAG;IAEnC,IAAK8X,CAAC,KAAKM,CAAC,EAAG;MAEd,OAAO,CAAEpY,KAAK,GAAG8X,CAAC,KAAOM,CAAC,GAAGN,CAAC,CAAE;IAEjC,CAAC,MAAM;MAEN,OAAO,CAAC;IAET;EAED;;EAEA;EACA,SAASO,IAAIA,CAAEP,CAAC,EAAEM,CAAC,EAAEE,CAAC,EAAG;IAExB,OAAO,CAAE,CAAC,GAAGA,CAAC,IAAKR,CAAC,GAAGQ,CAAC,GAAGF,CAAC;EAE7B;;EAEA;EACA,SAASG,IAAIA,CAAET,CAAC,EAAEM,CAAC,EAAEI,MAAM,EAAEC,EAAE,EAAG;IAEjC,OAAOJ,IAAI,CAAEP,CAAC,EAAEM,CAAC,EAAE,CAAC,GAAGxB,IAAI,CAAC8B,GAAG,CAAE,CAAEF,MAAM,GAAGC,EAAE,CAAE,CAAE;EAEnD;;EAEA;EACA,SAASE,QAAQA,CAAEb,CAAC,EAAElS,MAAM,GAAG,CAAC,EAAG;IAElC,OAAOA,MAAM,GAAGgR,IAAI,CAACgC,GAAG,CAAElB,eAAe,CAAEI,CAAC,EAAElS,MAAM,GAAG,CAAC,CAAE,GAAGA,MAAM,CAAE;EAEtE;;EAEA;EACA,SAASiT,UAAUA,CAAEf,CAAC,EAAEN,GAAG,EAAEC,GAAG,EAAG;IAElC,IAAKK,CAAC,IAAIN,GAAG,EAAG,OAAO,CAAC;IACxB,IAAKM,CAAC,IAAIL,GAAG,EAAG,OAAO,CAAC;IAExBK,CAAC,GAAG,CAAEA,CAAC,GAAGN,GAAG,KAAOC,GAAG,GAAGD,GAAG,CAAE;IAE/B,OAAOM,CAAC,GAAGA,CAAC,IAAK,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAE;EAE7B;EAEA,SAASgB,YAAYA,CAAEhB,CAAC,EAAEN,GAAG,EAAEC,GAAG,EAAG;IAEpC,IAAKK,CAAC,IAAIN,GAAG,EAAG,OAAO,CAAC;IACxB,IAAKM,CAAC,IAAIL,GAAG,EAAG,OAAO,CAAC;IAExBK,CAAC,GAAG,CAAEA,CAAC,GAAGN,GAAG,KAAOC,GAAG,GAAGD,GAAG,CAAE;IAE/B,OAAOM,CAAC,GAAGA,CAAC,GAAGA,CAAC,IAAKA,CAAC,IAAKA,CAAC,GAAG,CAAC,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE;EAE/C;;EAEA;EACA,SAASiB,OAAOA,CAAEC,GAAG,EAAEC,IAAI,EAAG;IAE7B,OAAOD,GAAG,GAAGpC,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACK,MAAM,EAAE,IAAKgC,IAAI,GAAGD,GAAG,GAAG,CAAC,CAAE,CAAE;EAE9D;;EAEA;EACA,SAASG,SAASA,CAAEH,GAAG,EAAEC,IAAI,EAAG;IAE/B,OAAOD,GAAG,GAAGpC,IAAI,CAACK,MAAM,EAAE,IAAKgC,IAAI,GAAGD,GAAG,CAAE;EAE5C;;EAEA;EACA,SAASI,eAAeA,CAAEC,KAAK,EAAG;IAEjC,OAAOA,KAAK,IAAK,GAAG,GAAGzC,IAAI,CAACK,MAAM,EAAE,CAAE;EAEvC;;EAEA;EACA,SAASqC,YAAYA,CAAEC,CAAC,EAAG;IAE1B,IAAKA,CAAC,KAAKjV,SAAS,EAAGoS,KAAK,GAAG6C,CAAC;;IAEhC;;IAEA,IAAIjB,CAAC,GAAG5B,KAAK,IAAI,UAAU;IAE3B4B,CAAC,GAAG1B,IAAI,CAAC4C,IAAI,CAAElB,CAAC,GAAGA,CAAC,KAAK,EAAE,EAAEA,CAAC,GAAG,CAAC,CAAE;IAEpCA,CAAC,IAAIA,CAAC,GAAG1B,IAAI,CAAC4C,IAAI,CAAElB,CAAC,GAAGA,CAAC,KAAK,CAAC,EAAEA,CAAC,GAAG,EAAE,CAAE;IAEzC,OAAO,CAAE,CAAEA,CAAC,GAAGA,CAAC,KAAK,EAAE,MAAO,CAAC,IAAK,UAAU;EAE/C;EAEA,SAASmB,QAAQA,CAAEC,OAAO,EAAG;IAE5B,OAAOA,OAAO,GAAG/C,OAAO;EAEzB;EAEA,SAASgD,QAAQA,CAAEC,OAAO,EAAG;IAE5B,OAAOA,OAAO,GAAG9C,OAAO;EAEzB;EAEA,SAAS+C,YAAYA,CAAE7Z,KAAK,EAAG;IAE9B,OAAO,CAAEA,KAAK,GAAKA,KAAK,GAAG,CAAG,MAAO,CAAC,IAAIA,KAAK,KAAK,CAAC;EAEtD;EAEA,SAAS8Z,cAAcA,CAAE9Z,KAAK,EAAG;IAEhC,OAAO4W,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAEnD,IAAI,CAACoD,IAAI,CAAEpD,IAAI,CAACqD,GAAG,CAAEja,KAAK,CAAE,GAAG4W,IAAI,CAACsD,GAAG,CAAE,CAAE;EAEhE;EAEA,SAASC,eAAeA,CAAEna,KAAK,EAAG;IAEjC,OAAO4W,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAEnD,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACqD,GAAG,CAAEja,KAAK,CAAE,GAAG4W,IAAI,CAACsD,GAAG,CAAE,CAAE;EAEjE;EAEA,SAASE,4BAA4BA,CAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAG;IAE1D;;IAEA;IACA;IACA;;IAEA,IAAMC,GAAG,GAAG9D,IAAI,CAAC8D,GAAG;IACpB,IAAMC,GAAG,GAAG/D,IAAI,CAAC+D,GAAG;IAEpB,IAAMC,EAAE,GAAGF,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE;IACvB,IAAMM,EAAE,GAAGF,GAAG,CAAEJ,CAAC,GAAG,CAAC,CAAE;IAEvB,IAAMO,GAAG,GAAGJ,GAAG,CAAE,CAAEJ,CAAC,GAAGE,CAAC,IAAK,CAAC,CAAE;IAChC,IAAMO,GAAG,GAAGJ,GAAG,CAAE,CAAEL,CAAC,GAAGE,CAAC,IAAK,CAAC,CAAE;IAEhC,IAAMQ,IAAI,GAAGN,GAAG,CAAE,CAAEJ,CAAC,GAAGE,CAAC,IAAK,CAAC,CAAE;IACjC,IAAMS,IAAI,GAAGN,GAAG,CAAE,CAAEL,CAAC,GAAGE,CAAC,IAAK,CAAC,CAAE;IAEjC,IAAMU,IAAI,GAAGR,GAAG,CAAE,CAAEF,CAAC,GAAGF,CAAC,IAAK,CAAC,CAAE;IACjC,IAAMa,IAAI,GAAGR,GAAG,CAAE,CAAEH,CAAC,GAAGF,CAAC,IAAK,CAAC,CAAE;IAEjC,QAASG,KAAK;MAEb,KAAK,KAAK;QACTJ,CAAC,CAACe,GAAG,CAAER,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGG,IAAI,EAAEH,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGE,GAAG,CAAE;QACjD;MAED,KAAK,KAAK;QACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGG,IAAI,EAAEJ,EAAE,GAAGE,GAAG,CAAE;QACjD;MAED,KAAK,KAAK;QACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGG,IAAI,EAAEH,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGG,GAAG,EAAEH,EAAE,GAAGE,GAAG,CAAE;QACjD;MAED,KAAK,KAAK;QACTT,CAAC,CAACe,GAAG,CAAER,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGM,IAAI,EAAEN,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGE,GAAG,CAAE;QACjD;MAED,KAAK,KAAK;QACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGM,IAAI,EAAEP,EAAE,GAAGE,GAAG,CAAE;QACjD;MAED,KAAK,KAAK;QACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGM,IAAI,EAAEN,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGG,GAAG,EAAEH,EAAE,GAAGE,GAAG,CAAE;QACjD;MAED;QACCvR,OAAO,CAACC,IAAI,CAAE,iFAAiF,GAAGiR,KAAK,CAAE;IAAC;EAI7G;EAEA,SAASY,WAAWA,CAAErb,KAAK,EAAEuW,KAAK,EAAG;IAEpC,QAASA,KAAK,CAACrQ,WAAW;MAEzB,KAAKoV,YAAY;QAEhB,OAAOtb,KAAK;MAEb,KAAKub,WAAW;QAEf,OAAOvb,KAAK,GAAG,OAAO;MAEvB,KAAKwb,UAAU;QAEd,OAAOxb,KAAK,GAAG,KAAK;MAErB,KAAKyb,UAAU;QAEd,OAAO7E,IAAI,CAACa,GAAG,CAAEzX,KAAK,GAAG,OAAO,EAAE,CAAE,GAAG,CAAE;MAE1C,KAAK0b,SAAS;QAEb,OAAO9E,IAAI,CAACa,GAAG,CAAEzX,KAAK,GAAG,KAAK,EAAE,CAAE,GAAG,CAAE;MAExC;QAEC,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,CAAE;IAAC;EAIhD;EAEA,SAASgY,SAASA,CAAE3b,KAAK,EAAEuW,KAAK,EAAG;IAElC,QAASA,KAAK,CAACrQ,WAAW;MAEzB,KAAKoV,YAAY;QAEhB,OAAOtb,KAAK;MAEb,KAAKub,WAAW;QAEf,OAAO3E,IAAI,CAACgF,KAAK,CAAE5b,KAAK,GAAG,OAAO,CAAE;MAErC,KAAKwb,UAAU;QAEd,OAAO5E,IAAI,CAACgF,KAAK,CAAE5b,KAAK,GAAG,KAAK,CAAE;MAEnC,KAAKyb,UAAU;QAEd,OAAO7E,IAAI,CAACgF,KAAK,CAAE5b,KAAK,GAAG,OAAO,CAAE;MAErC,KAAK0b,SAAS;QAEb,OAAO9E,IAAI,CAACgF,KAAK,CAAE5b,KAAK,GAAG,KAAK,CAAE;MAEnC;QAEC,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,CAAE;IAAC;EAIhD;EAEA,IAAMkY,SAAS,GAAG;IACjBlF,OAAO,EAAEA,OAAO;IAChBG,OAAO,EAAEA,OAAO;IAChBC,YAAY,EAAEA,YAAY;IAC1BQ,KAAK,EAAEA,KAAK;IACZG,eAAe,EAAEA,eAAe;IAChCG,SAAS,EAAEA,SAAS;IACpBM,WAAW,EAAEA,WAAW;IACxBE,IAAI,EAAEA,IAAI;IACVE,IAAI,EAAEA,IAAI;IACVI,QAAQ,EAAEA,QAAQ;IAClBE,UAAU,EAAEA,UAAU;IACtBC,YAAY,EAAEA,YAAY;IAC1BC,OAAO,EAAEA,OAAO;IAChBI,SAAS,EAAEA,SAAS;IACpBC,eAAe,EAAEA,eAAe;IAChCE,YAAY,EAAEA,YAAY;IAC1BG,QAAQ,EAAEA,QAAQ;IAClBE,QAAQ,EAAEA,QAAQ;IAClBE,YAAY,EAAEA,YAAY;IAC1BC,cAAc,EAAEA,cAAc;IAC9BK,eAAe,EAAEA,eAAe;IAChCC,4BAA4B,EAAEA,4BAA4B;IAC1DuB,SAAS,EAAEA,SAAS;IACpBN,WAAW,EAAEA;EACd,CAAC;EAAC,IAEIS,OAAO,0BAAAC,gBAAA;IAEZ,SAAAD,QAAahE,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAG;MAAAhQ,eAAA,OAAA0T,OAAA;MAE3BA,OAAO,CAACrc,SAAS,CAACuc,SAAS,GAAG,IAAI;MAElC,IAAI,CAAClE,CAAC,GAAGA,CAAC;MACV,IAAI,CAACM,CAAC,GAAGA,CAAC;IAEX;IAACxP,YAAA,CAAAkT,OAAA;MAAAhc,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAY;QAEX,OAAO,IAAI,CAACnE,CAAC;MAEd,CAAC;MAAAsD,GAAA,EAED,SAAAA,IAAWpb,KAAK,EAAG;QAElB,IAAI,CAAC8X,CAAC,GAAG9X,KAAK;MAEf;IAAC;MAAAF,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAa;QAEZ,OAAO,IAAI,CAAC7D,CAAC;MAEd,CAAC;MAAAgD,GAAA,EAED,SAAAA,IAAYpb,KAAK,EAAG;QAEnB,IAAI,CAACoY,CAAC,GAAGpY,KAAK;MAEf;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKtD,CAAC,EAAEM,CAAC,EAAG;QAEX,IAAI,CAACN,CAAC,GAAGA,CAAC;QACV,IAAI,CAACM,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAkc,UAAWC,MAAM,EAAG;QAEnB,IAAI,CAACrE,CAAC,GAAGqE,MAAM;QACf,IAAI,CAAC/D,CAAC,GAAG+D,MAAM;QAEf,OAAO,IAAI;MAEZ;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAoc,KAAMtE,CAAC,EAAG;QAET,IAAI,CAACA,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAhY,GAAA;MAAAE,KAAA,EAED,SAAAqc,KAAMjE,CAAC,EAAG;QAET,IAAI,CAACA,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAsc,aAAcnG,KAAK,EAAEnW,KAAK,EAAG;QAE5B,QAASmW,KAAK;UAEb,KAAK,CAAC;YAAE,IAAI,CAAC2B,CAAC,GAAG9X,KAAK;YAAE;UACxB,KAAK,CAAC;YAAE,IAAI,CAACoY,CAAC,GAAGpY,KAAK;YAAE;UACxB;YAAS,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,GAAGwS,KAAK,CAAE;QAAC;QAI/D,OAAO,IAAI;MAEZ;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAuc,aAAcpG,KAAK,EAAG;QAErB,QAASA,KAAK;UAEb,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC2B,CAAC;UACrB,KAAK,CAAC;YAAE,OAAO,IAAI,CAACM,CAAC;UACrB;YAAS,MAAM,IAAIzU,KAAK,CAAE,yBAAyB,GAAGwS,KAAK,CAAE;QAAC;MAIhE;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,CAAE,IAAI,CAAC4R,CAAC,EAAE,IAAI,CAACM,CAAC,CAAE;MAE9C;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAMC,CAAC,EAAG;QAET,IAAI,CAAC5E,CAAC,GAAG4E,CAAC,CAAC5E,CAAC;QACZ,IAAI,CAACM,CAAC,GAAGsE,CAAC,CAACtE,CAAC;QAEZ,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA2c,IAAKD,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA4c,UAAWrD,CAAC,EAAG;QAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;QACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;QAEX,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAA6c,WAAYvC,CAAC,EAAEC,CAAC,EAAG;QAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;QAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA8c,gBAAiBJ,CAAC,EAAEnD,CAAC,EAAG;QAEvB,IAAI,CAACzB,CAAC,IAAI4E,CAAC,CAAC5E,CAAC,GAAGyB,CAAC;QACjB,IAAI,CAACnB,CAAC,IAAIsE,CAAC,CAACtE,CAAC,GAAGmB,CAAC;QAEjB,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAA+c,IAAKL,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAgd,UAAWzD,CAAC,EAAG;QAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;QACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;QAEX,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAAid,WAAY3C,CAAC,EAAEC,CAAC,EAAG;QAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;QAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAkd,SAAUR,CAAC,EAAG;QAEb,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAmd,eAAgBhB,MAAM,EAAG;QAExB,IAAI,CAACrE,CAAC,IAAIqE,MAAM;QAChB,IAAI,CAAC/D,CAAC,IAAI+D,MAAM;QAEhB,OAAO,IAAI;MAEZ;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAod,OAAQV,CAAC,EAAG;QAEX,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAqd,aAAclB,MAAM,EAAG;QAEtB,OAAO,IAAI,CAACgB,cAAc,CAAE,CAAC,GAAGhB,MAAM,CAAE;MAEzC;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAsd,aAAc1F,CAAC,EAAG;QAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAC5B,IAAMmF,CAAC,GAAG3F,CAAC,CAAC4F,QAAQ;QAEpB,IAAI,CAAC1F,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE;QACzC,IAAI,CAACnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE;QAEzC,OAAO,IAAI;MAEZ;IAAC;MAAAzd,GAAA;MAAAE,KAAA,EAED,SAAAwX,IAAKkF,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,GAAGlB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACM,CAAC,EAAE4E,CAAC,CAAC5E,CAAC,CAAE;QAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACY,CAAC,EAAEsE,CAAC,CAACtE,CAAC,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAyX,IAAKiF,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACK,CAAC,EAAE4E,CAAC,CAAC5E,CAAC,CAAE;QAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACW,CAAC,EAAEsE,CAAC,CAACtE,CAAC,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAuX,MAAOC,GAAG,EAAEC,GAAG,EAAG;QAEjB;;QAEA,IAAI,CAACK,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACM,CAAC,EAAElB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACK,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;QACrD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACY,CAAC,EAAExB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACW,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;QAErD,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAyd,YAAaC,MAAM,EAAEC,MAAM,EAAG;QAE7B,IAAI,CAAC7F,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAEiG,MAAM,EAAE9G,IAAI,CAACY,GAAG,CAAEmG,MAAM,EAAE,IAAI,CAAC7F,CAAC,CAAE,CAAE;QACvD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAEiG,MAAM,EAAE9G,IAAI,CAACY,GAAG,CAAEmG,MAAM,EAAE,IAAI,CAACvF,CAAC,CAAE,CAAE;QAEvD,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA4d,YAAapG,GAAG,EAAEC,GAAG,EAAG;QAEvB,IAAM7R,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;QAE5B,OAAO,IAAI,CAACyX,YAAY,CAAEzX,MAAM,IAAI,CAAC,CAAE,CAACuX,cAAc,CAAEvG,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE7R,MAAM,CAAE,CAAE,CAAE;MAEnG;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAAkZ,MAAA,EAAQ;QAEP,IAAI,CAACpB,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;QAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAga,KAAA,EAAO;QAEN,IAAI,CAAClC,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE;QAC5B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA4b,MAAA,EAAQ;QAEP,IAAI,CAAC9D,CAAC,GAAGlB,IAAI,CAACgF,KAAK,CAAE,IAAI,CAAC9D,CAAC,CAAE;QAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACgF,KAAK,CAAE,IAAI,CAACxD,CAAC,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA6d,YAAA,EAAc;QAEb,IAAI,CAAC/F,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;QACpE,IAAI,CAACM,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;QAEpE,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA8d,OAAA,EAAS;QAER,IAAI,CAAChG,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;QACjB,IAAI,CAACM,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;QAEjB,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA+d,IAAKrB,CAAC,EAAG;QAER,OAAO,IAAI,CAAC5E,CAAC,GAAG4E,CAAC,CAAC5E,CAAC,GAAG,IAAI,CAACM,CAAC,GAAGsE,CAAC,CAACtE,CAAC;MAEnC;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAge,MAAOtB,CAAC,EAAG;QAEV,OAAO,IAAI,CAAC5E,CAAC,GAAG4E,CAAC,CAACtE,CAAC,GAAG,IAAI,CAACA,CAAC,GAAGsE,CAAC,CAAC5E,CAAC;MAEnC;IAAC;MAAAhY,GAAA;MAAAE,KAAA,EAED,SAAAie,SAAA,EAAW;QAEV,OAAO,IAAI,CAACnG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC;MAEzC;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA4F,OAAA,EAAS;QAER,OAAOgR,IAAI,CAACsH,IAAI,CAAE,IAAI,CAACpG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,CAAE;MAEtD;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAme,gBAAA,EAAkB;QAEjB,OAAOvH,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,CAAE;MAE/C;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA2b,UAAA,EAAY;QAEX,OAAO,IAAI,CAAC0B,YAAY,CAAE,IAAI,CAACzX,MAAM,EAAE,IAAI,CAAC,CAAE;MAE/C;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAAoe,MAAA,EAAQ;QAEP;;QAEA,IAAMA,KAAK,GAAGxH,IAAI,CAACyH,KAAK,CAAE,CAAE,IAAI,CAACjG,CAAC,EAAE,CAAE,IAAI,CAACN,CAAC,CAAE,GAAGlB,IAAI,CAACC,EAAE;QAExD,OAAOuH,KAAK;MAEb;IAAC;MAAAte,GAAA;MAAAE,KAAA,EAED,SAAAse,QAAS5B,CAAC,EAAG;QAEZ,IAAM6B,WAAW,GAAG3H,IAAI,CAACsH,IAAI,CAAE,IAAI,CAACD,QAAQ,EAAE,GAAGvB,CAAC,CAACuB,QAAQ,EAAE,CAAE;QAE/D,IAAKM,WAAW,KAAK,CAAC,EAAG,OAAO3H,IAAI,CAACC,EAAE,GAAG,CAAC;QAE3C,IAAM2H,KAAK,GAAG,IAAI,CAACT,GAAG,CAAErB,CAAC,CAAE,GAAG6B,WAAW;;QAEzC;;QAEA,OAAO3H,IAAI,CAAC6H,IAAI,CAAElH,KAAK,CAAEiH,KAAK,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;MAE3C;IAAC;MAAA1e,GAAA;MAAAE,KAAA,EAED,SAAA0e,WAAYhC,CAAC,EAAG;QAEf,OAAO9F,IAAI,CAACsH,IAAI,CAAE,IAAI,CAACS,iBAAiB,CAAEjC,CAAC,CAAE,CAAE;MAEhD;IAAC;MAAA5c,GAAA;MAAAE,KAAA,EAED,SAAA2e,kBAAmBjC,CAAC,EAAG;QAEtB,IAAMkC,EAAE,GAAG,IAAI,CAAC9G,CAAC,GAAG4E,CAAC,CAAC5E,CAAC;UAAE+G,EAAE,GAAG,IAAI,CAACzG,CAAC,GAAGsE,CAAC,CAACtE,CAAC;QAC1C,OAAOwG,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;MAEzB;IAAC;MAAA/e,GAAA;MAAAE,KAAA,EAED,SAAA8e,oBAAqBpC,CAAC,EAAG;QAExB,OAAO9F,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,GAAG4E,CAAC,CAAC5E,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,GAAGsE,CAAC,CAACtE,CAAC,CAAE;MAE3D;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA+e,UAAWnZ,MAAM,EAAG;QAEnB,OAAO,IAAI,CAAC+V,SAAS,EAAE,CAACwB,cAAc,CAAEvX,MAAM,CAAE;MAEjD;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAAqY,KAAMqE,CAAC,EAAEsC,KAAK,EAAG;QAEhB,IAAI,CAAClH,CAAC,IAAI,CAAE4E,CAAC,CAAC5E,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKkH,KAAK;QAClC,IAAI,CAAC5G,CAAC,IAAI,CAAEsE,CAAC,CAACtE,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK4G,KAAK;QAElC,OAAO,IAAI;MAEZ;IAAC;MAAAlf,GAAA;MAAAE,KAAA,EAED,SAAAif,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;QAE5B,IAAI,CAAClH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,GAAG,CAAEqH,EAAE,CAACrH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,IAAKkH,KAAK;QACvC,IAAI,CAAC5G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,GAAG,CAAE+G,EAAE,CAAC/G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,IAAK4G,KAAK;QAEvC,OAAO,IAAI;MAEZ;IAAC;MAAAlf,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQ1C,CAAC,EAAG;QAEX,OAAWA,CAAC,CAAC5E,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQ4E,CAAC,CAACtE,CAAC,KAAK,IAAI,CAACA,CAAG;MAElD;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAqf,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAACxH,CAAC,GAAGvB,KAAK,CAAE+I,MAAM,CAAE;QACxB,IAAI,CAAClH,CAAC,GAAG7B,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAuf,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACxH,CAAC;QACxBvB,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAClH,CAAC;QAE5B,OAAO7B,KAAK;MAEb;IAAC;MAAAzW,GAAA;MAAAE,KAAA,EAED,SAAAwf,oBAAqBC,SAAS,EAAEtJ,KAAK,EAAG;QAEvC,IAAI,CAAC2B,CAAC,GAAG2H,SAAS,CAACC,IAAI,CAAEvJ,KAAK,CAAE;QAChC,IAAI,CAACiC,CAAC,GAAGqH,SAAS,CAACE,IAAI,CAAExJ,KAAK,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAA4f,aAAcC,MAAM,EAAEzB,KAAK,EAAG;QAE7B,IAAM5D,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE0D,KAAK,CAAE;UAAE7E,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEyD,KAAK,CAAE;QAElD,IAAMtG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG+H,MAAM,CAAC/H,CAAC;QAC3B,IAAMM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAGyH,MAAM,CAACzH,CAAC;QAE3B,IAAI,CAACN,CAAC,GAAGA,CAAC,GAAG0C,CAAC,GAAGpC,CAAC,GAAGmB,CAAC,GAAGsG,MAAM,CAAC/H,CAAC;QACjC,IAAI,CAACM,CAAC,GAAGN,CAAC,GAAGyB,CAAC,GAAGnB,CAAC,GAAGoC,CAAC,GAAGqF,MAAM,CAACzH,CAAC;QAEjC,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAiX,OAAA,EAAS;QAER,IAAI,CAACa,CAAC,GAAGlB,IAAI,CAACK,MAAM,EAAE;QACtB,IAAI,CAACmB,CAAC,GAAGxB,IAAI,CAACK,MAAM,EAAE;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAnX,GAAA,EAAAic,gBAAA;MAAA/b,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAED,SAAApG,MAAA;QAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAgf,OAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA9Y,IAAA,GAAA8Y,SAAA,CAAApb,IAAA;YAAA;cAAAob,SAAA,CAAApb,IAAA;cAEC,OAAM,IAAI,CAACmT,CAAC;YAAA;cAAAiI,SAAA,CAAApb,IAAA;cACZ,OAAM,IAAI,CAACyT,CAAC;YAAA;YAAA;cAAA,OAAA2H,SAAA,CAAA3Y,IAAA;UAAA;QAAA,GAAApH,KAAA;MAAA,CAEZ;IAAA;IAAA,OAAA8b,OAAA;EAAA,EALE5b,MAAM,CAACE,QAAQ;EAAA,IASb4f,OAAO;IAEZ,SAAAA,QAAA,EAAc;MAAA5X,eAAA,OAAA4X,OAAA;MAEbA,OAAO,CAACvgB,SAAS,CAACwgB,SAAS,GAAG,IAAI;MAElC,IAAI,CAACzC,QAAQ,GAAG,CAEf,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAEP;IAEF;IAAC5U,YAAA,CAAAoX,OAAA;MAAAlgB,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAK8E,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;QAElD,IAAMC,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExBmD,EAAE,CAAE,CAAC,CAAE,GAAGT,GAAG;QAAES,EAAE,CAAE,CAAC,CAAE,GAAGN,GAAG;QAAEM,EAAE,CAAE,CAAC,CAAE,GAAGH,GAAG;QAC3CG,EAAE,CAAE,CAAC,CAAE,GAAGR,GAAG;QAAEQ,EAAE,CAAE,CAAC,CAAE,GAAGL,GAAG;QAAEK,EAAE,CAAE,CAAC,CAAE,GAAGF,GAAG;QAC3CE,EAAE,CAAE,CAAC,CAAE,GAAGP,GAAG;QAAEO,EAAE,CAAE,CAAC,CAAE,GAAGJ,GAAG;QAAEI,EAAE,CAAE,CAAC,CAAE,GAAGD,GAAG;QAE3C,OAAO,IAAI;MAEZ;IAAC;MAAA5gB,GAAA;MAAAE,KAAA,EAED,SAAA4gB,SAAA,EAAW;QAEV,IAAI,CAACxF,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAEP;QAED,OAAO,IAAI;MAEZ;IAAC;MAAAtb,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM7E,CAAC,EAAG;QAET,IAAM+I,EAAE,GAAG,IAAI,CAACnD,QAAQ;QACxB,IAAMqD,EAAE,GAAGjJ,CAAC,CAAC4F,QAAQ;QAErBmD,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QACvDF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QACvDF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAEvD,OAAO,IAAI;MAEZ;IAAC;MAAA/gB,GAAA;MAAAE,KAAA,EAED,SAAA8gB,aAAcC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;QAEnCF,KAAK,CAACG,oBAAoB,CAAE,IAAI,EAAE,CAAC,CAAE;QACrCF,KAAK,CAACE,oBAAoB,CAAE,IAAI,EAAE,CAAC,CAAE;QACrCD,KAAK,CAACC,oBAAoB,CAAE,IAAI,EAAE,CAAC,CAAE;QAErC,OAAO,IAAI;MAEZ;IAAC;MAAAphB,GAAA;MAAAE,KAAA,EAED,SAAAmhB,eAAgBvJ,CAAC,EAAG;QAEnB,IAAMiJ,EAAE,GAAGjJ,CAAC,CAAC4F,QAAQ;QAErB,IAAI,CAACpC,GAAG,CAEPyF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EACzBA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EACzBA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,EAAE,CAAE,CAE1B;QAED,OAAO,IAAI;MAEZ;IAAC;MAAA/gB,GAAA;MAAAE,KAAA,EAED,SAAAkd,SAAUtF,CAAC,EAAG;QAEb,OAAO,IAAI,CAACwJ,gBAAgB,CAAE,IAAI,EAAExJ,CAAC,CAAE;MAExC;IAAC;MAAA9X,GAAA;MAAAE,KAAA,EAED,SAAAqhB,YAAazJ,CAAC,EAAG;QAEhB,OAAO,IAAI,CAACwJ,gBAAgB,CAAExJ,CAAC,EAAE,IAAI,CAAE;MAExC;IAAC;MAAA9X,GAAA;MAAAE,KAAA,EAED,SAAAohB,iBAAkB9G,CAAC,EAAEC,CAAC,EAAG;QAExB,IAAM+G,EAAE,GAAGhH,CAAC,CAACkD,QAAQ;QACrB,IAAM+D,EAAE,GAAGhH,CAAC,CAACiD,QAAQ;QACrB,IAAMmD,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExB,IAAMgE,GAAG,GAAGF,EAAE,CAAE,CAAC,CAAE;UAAEG,GAAG,GAAGH,EAAE,CAAE,CAAC,CAAE;UAAEI,GAAG,GAAGJ,EAAE,CAAE,CAAC,CAAE;QACjD,IAAMK,GAAG,GAAGL,EAAE,CAAE,CAAC,CAAE;UAAEM,GAAG,GAAGN,EAAE,CAAE,CAAC,CAAE;UAAEO,GAAG,GAAGP,EAAE,CAAE,CAAC,CAAE;QACjD,IAAMQ,GAAG,GAAGR,EAAE,CAAE,CAAC,CAAE;UAAES,GAAG,GAAGT,EAAE,CAAE,CAAC,CAAE;UAAEU,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;QAEjD,IAAMW,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;UAAEW,GAAG,GAAGX,EAAE,CAAE,CAAC,CAAE;UAAEY,GAAG,GAAGZ,EAAE,CAAE,CAAC,CAAE;QACjD,IAAMa,GAAG,GAAGb,EAAE,CAAE,CAAC,CAAE;UAAEc,GAAG,GAAGd,EAAE,CAAE,CAAC,CAAE;UAAEe,GAAG,GAAGf,EAAE,CAAE,CAAC,CAAE;QACjD,IAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAC,CAAE;UAAEiB,GAAG,GAAGjB,EAAE,CAAE,CAAC,CAAE;UAAEkB,GAAG,GAAGlB,EAAE,CAAE,CAAC,CAAE;QAEjDZ,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG;QAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGX,GAAG,GAAGc,GAAG;QAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGZ,GAAG,GAAGe,GAAG;QAE3C9B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG;QAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG;QAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG;QAE3C9B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGG,GAAG,GAAGF,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG;QAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG;QAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG;QAE3C,OAAO,IAAI;MAEZ;IAAC;MAAA3iB,GAAA;MAAAE,KAAA,EAED,SAAAmd,eAAgB5D,CAAC,EAAG;QAEnB,IAAMoH,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExBmD,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QACxCoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QACxCoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAExC,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAA0iB,YAAA,EAAc;QAEb,IAAM/B,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExB,IAAMlD,CAAC,GAAGqG,EAAE,CAAE,CAAC,CAAE;UAAEpG,CAAC,GAAGoG,EAAE,CAAE,CAAC,CAAE;UAAEnG,CAAC,GAAGmG,EAAE,CAAE,CAAC,CAAE;UAC1CgC,CAAC,GAAGhC,EAAE,CAAE,CAAC,CAAE;UAAEpD,CAAC,GAAGoD,EAAE,CAAE,CAAC,CAAE;UAAEiC,CAAC,GAAGjC,EAAE,CAAE,CAAC,CAAE;UACrCkC,CAAC,GAAGlC,EAAE,CAAE,CAAC,CAAE;UAAEmC,CAAC,GAAGnC,EAAE,CAAE,CAAC,CAAE;UAAE9a,CAAC,GAAG8a,EAAE,CAAE,CAAC,CAAE;QAEtC,OAAOrG,CAAC,GAAGiD,CAAC,GAAG1X,CAAC,GAAGyU,CAAC,GAAGsI,CAAC,GAAGE,CAAC,GAAGvI,CAAC,GAAGoI,CAAC,GAAG9c,CAAC,GAAG0U,CAAC,GAAGqI,CAAC,GAAGC,CAAC,GAAGrI,CAAC,GAAGmI,CAAC,GAAGG,CAAC,GAAGtI,CAAC,GAAG+C,CAAC,GAAGsF,CAAC;MAE7E;IAAC;MAAA/iB,GAAA;MAAAE,KAAA,EAED,SAAA+iB,OAAA,EAAS;QAER,IAAMpC,EAAE,GAAG,IAAI,CAACnD,QAAQ;UAEvB0C,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;UAAEN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;UAAEH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;UAC3CR,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;UAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;UAAEF,GAAG,GAAGE,EAAE,CAAE,CAAC,CAAE;UAC3CP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;UAAEJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;UAAED,GAAG,GAAGC,EAAE,CAAE,CAAC,CAAE;UAE3CqC,GAAG,GAAGtC,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG;UAC3B0C,GAAG,GAAGxC,GAAG,GAAGL,GAAG,GAAGM,GAAG,GAAGP,GAAG;UAC3B+C,GAAG,GAAG3C,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG;UAE3B+C,GAAG,GAAGjD,GAAG,GAAG8C,GAAG,GAAG3C,GAAG,GAAG4C,GAAG,GAAGzC,GAAG,GAAG0C,GAAG;QAExC,IAAKC,GAAG,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC/H,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAE7D,IAAMgI,MAAM,GAAG,CAAC,GAAGD,GAAG;QAEtBxC,EAAE,CAAE,CAAC,CAAE,GAAGqC,GAAG,GAAGI,MAAM;QACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEH,GAAG,GAAGD,GAAG,GAAGG,GAAG,GAAGL,GAAG,IAAK+C,MAAM;QAC5CzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEF,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG,IAAK8C,MAAM;QAE5CzC,EAAE,CAAE,CAAC,CAAE,GAAGsC,GAAG,GAAGG,MAAM;QACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAED,GAAG,GAAGR,GAAG,GAAGM,GAAG,GAAGJ,GAAG,IAAKgD,MAAM;QAC5CzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEH,GAAG,GAAGL,GAAG,GAAGM,GAAG,GAAGP,GAAG,IAAKkD,MAAM;QAE5CzC,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG,GAAGE,MAAM;QACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEN,GAAG,GAAGD,GAAG,GAAGG,GAAG,GAAGL,GAAG,IAAKkD,MAAM;QAC5CzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEL,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG,IAAKiD,MAAM;QAE5C,OAAO,IAAI;MAEZ;IAAC;MAAAtjB,GAAA;MAAAE,KAAA,EAED,SAAAqjB,UAAA,EAAY;QAEX,IAAIC,GAAG;QACP,IAAM1L,CAAC,GAAG,IAAI,CAAC4F,QAAQ;QAEvB8F,GAAG,GAAG1L,CAAC,CAAE,CAAC,CAAE;QAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;QAAEA,CAAC,CAAE,CAAC,CAAE,GAAG0L,GAAG;QAC3CA,GAAG,GAAG1L,CAAC,CAAE,CAAC,CAAE;QAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;QAAEA,CAAC,CAAE,CAAC,CAAE,GAAG0L,GAAG;QAC3CA,GAAG,GAAG1L,CAAC,CAAE,CAAC,CAAE;QAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;QAAEA,CAAC,CAAE,CAAC,CAAE,GAAG0L,GAAG;QAE3C,OAAO,IAAI;MAEZ;IAAC;MAAAxjB,GAAA;MAAAE,KAAA,EAED,SAAAujB,gBAAiBC,OAAO,EAAG;QAE1B,OAAO,IAAI,CAACrC,cAAc,CAAEqC,OAAO,CAAE,CAACT,MAAM,EAAE,CAACM,SAAS,EAAE;MAE3D;IAAC;MAAAvjB,GAAA;MAAAE,KAAA,EAED,SAAAyjB,mBAAoBC,CAAC,EAAG;QAEvB,IAAM9L,CAAC,GAAG,IAAI,CAAC4F,QAAQ;QAEvBkG,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;QACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;QACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;QACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;QACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;QACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;QACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;QACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;QACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;QAEf,OAAO,IAAI;MAEZ;IAAC;MAAA9X,GAAA;MAAAE,KAAA,EAED,SAAA2jB,eAAgBC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,EAAE,EAAEC,EAAE,EAAG;QAElD,IAAM1J,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAEsJ,QAAQ,CAAE;QAC9B,IAAMzK,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEqJ,QAAQ,CAAE;QAE9B,IAAI,CAAC5I,GAAG,CACP0I,EAAE,GAAGtJ,CAAC,EAAEsJ,EAAE,GAAGvK,CAAC,EAAE,CAAEuK,EAAE,IAAKtJ,CAAC,GAAGyJ,EAAE,GAAG1K,CAAC,GAAG2K,EAAE,CAAE,GAAGD,EAAE,GAAGL,EAAE,EACpD,CAAEG,EAAE,GAAGxK,CAAC,EAAEwK,EAAE,GAAGvJ,CAAC,EAAE,CAAEuJ,EAAE,IAAK,CAAExK,CAAC,GAAG0K,EAAE,GAAGzJ,CAAC,GAAG0J,EAAE,CAAE,GAAGA,EAAE,GAAGL,EAAE,EACxD,CAAC,EAAE,CAAC,EAAE,CAAC,CACP;QAED,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAA/jB,GAAA;MAAAE,KAAA,EAEA,SAAAmkB,MAAOL,EAAE,EAAEC,EAAE,EAAG;QAEf,IAAI,CAAC1C,WAAW,CAAE+C,GAAG,CAACC,SAAS,CAAEP,EAAE,EAAEC,EAAE,CAAE,CAAE;QAE3C,OAAO,IAAI;MAEZ;IAAC;MAAAjkB,GAAA;MAAAE,KAAA,EAED,SAAAskB,OAAQ9F,KAAK,EAAG;QAEf,IAAI,CAAC6C,WAAW,CAAE+C,GAAG,CAACG,YAAY,CAAE,CAAE/F,KAAK,CAAE,CAAE;QAE/C,OAAO,IAAI;MAEZ;IAAC;MAAA1e,GAAA;MAAAE,KAAA,EAED,SAAAwkB,UAAWZ,EAAE,EAAEC,EAAE,EAAG;QAEnB,IAAI,CAACxC,WAAW,CAAE+C,GAAG,CAACK,eAAe,CAAEb,EAAE,EAAEC,EAAE,CAAE,CAAE;QAEjD,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAA/jB,GAAA;MAAAE,KAAA,EAEA,SAAAykB,gBAAiB3M,CAAC,EAAEM,CAAC,EAAG;QAEvB,IAAI,CAACgD,GAAG,CAEP,CAAC,EAAE,CAAC,EAAEtD,CAAC,EACP,CAAC,EAAE,CAAC,EAAEM,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAEP;QAED,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAukB,aAAc/F,KAAK,EAAG;QAErB;;QAEA,IAAMhE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;QAC3B,IAAMjF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;QAE3B,IAAI,CAACpD,GAAG,CAEPZ,CAAC,EAAE,CAAEjB,CAAC,EAAE,CAAC,EACTA,CAAC,EAAEiB,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAEP;QAED,OAAO,IAAI;MAEZ;IAAC;MAAA1a,GAAA;MAAAE,KAAA,EAED,SAAAqkB,UAAWvM,CAAC,EAAEM,CAAC,EAAG;QAEjB,IAAI,CAACgD,GAAG,CAEPtD,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAEM,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAEP;QAED,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAAtY,GAAA;MAAAE,KAAA,EAEA,SAAAof,OAAQsF,MAAM,EAAG;QAEhB,IAAM/D,EAAE,GAAG,IAAI,CAACnD,QAAQ;QACxB,IAAMqD,EAAE,GAAG6D,MAAM,CAAClH,QAAQ;QAE1B,KAAM,IAAI3X,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAK8a,EAAE,CAAE9a,CAAC,CAAE,KAAKgb,EAAE,CAAEhb,CAAC,CAAE,EAAG,OAAO,KAAK;QAExC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAqf,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAE9B,KAAM,IAAIzZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAI,CAAC2X,QAAQ,CAAE3X,CAAC,CAAE,GAAG0Q,KAAK,CAAE1Q,CAAC,GAAGyZ,MAAM,CAAE;QAEzC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAuf,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAEjC,IAAMqB,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExBjH,KAAK,CAAE+I,MAAM,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QACzBpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAE7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAE7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAE7B,OAAOpK,KAAK;MAEb;IAAC;MAAAzW,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACmZ,SAAS,CAAE,IAAI,CAAC7B,QAAQ,CAAE;MAEzD;IAAC;IAAA,OAAAwC,OAAA;EAAA;EAIF,IAAMoE,GAAG,GAAG,aAAc,IAAIpE,OAAO,EAAE;EAEvC,SAAS2E,gBAAgBA,CAAEpO,KAAK,EAAG;IAElC;;IAEA,KAAM,IAAI1Q,CAAC,GAAG0Q,KAAK,CAAC3Q,MAAM,GAAG,CAAC,EAAEC,CAAC,IAAI,CAAC,EAAE,EAAGA,CAAC,EAAG;MAE9C,IAAK0Q,KAAK,CAAE1Q,CAAC,CAAE,IAAI,KAAK,EAAG,OAAO,IAAI,CAAC,CAAC;IAEzC;;IAEA,OAAO,KAAK;EAEb;EAEA,IAAM+e,YAAY,GAAG;IACpBlJ,SAAS,EAAEA,SAAS;IACpBF,UAAU,EAAEA,UAAU;IACtBqJ,iBAAiB,EAAEA,iBAAiB;IACpCpJ,UAAU,EAAEA,UAAU;IACtBF,WAAW,EAAEA,WAAW;IACxBuJ,UAAU,EAAEA,UAAU;IACtBC,WAAW,EAAEA,WAAW;IACxBzJ,YAAY,EAAEA,YAAY;IAC1B0J,YAAY,EAAEA;EACf,CAAC;EAED,SAASC,aAAaA,CAAEpjB,IAAI,EAAEqjB,MAAM,EAAG;IAEtC,OAAO,IAAIN,YAAY,CAAE/iB,IAAI,CAAE,CAAEqjB,MAAM,CAAE;EAE1C;EAEA,SAASC,eAAeA,CAAEhf,IAAI,EAAG;IAEhC,OAAOif,QAAQ,CAACD,eAAe,CAAE,8BAA8B,EAAEhf,IAAI,CAAE;EAExE;EAEA,SAASkf,YAAYA,CAAE7K,CAAC,EAAG;IAE1B,OAASA,CAAC,GAAG,OAAO,GAAKA,CAAC,GAAG,YAAY,GAAG5D,IAAI,CAACmD,GAAG,CAAES,CAAC,GAAG,YAAY,GAAG,YAAY,EAAE,GAAG,CAAE;EAE7F;EAEA,SAAS8K,YAAYA,CAAE9K,CAAC,EAAG;IAE1B,OAASA,CAAC,GAAG,SAAS,GAAKA,CAAC,GAAG,KAAK,GAAG,KAAK,GAAK5D,IAAI,CAACmD,GAAG,CAAES,CAAC,EAAE,OAAO,CAAI,GAAG,KAAK;EAElF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC,IAAM+K,gCAAgC,GAAG,aAAc,IAAIvF,OAAO,EAAE,CAACX,SAAS,CAAE,CAC/E,SAAS,EAAE,SAAS,EAAE,SAAS,EAC/B,SAAS,EAAE,SAAS,EAAE,SAAS,EAC/B,CAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CACjC,CAAE;EAEH,IAAMmG,gCAAgC,GAAG,aAAc,IAAIxF,OAAO,EAAE,CAACX,SAAS,CAAE,CAC/E,SAAS,EAAE,CAAE,SAAS,EAAE,CAAE,SAAS,EACnC,CAAE,SAAS,EAAE,SAAS,EAAE,CAAE,SAAS,EACnC,SAAS,EAAE,SAAS,EAAE,SAAS,CAC/B,CAAE;EAEH,SAASoG,qBAAqBA,CAAEC,KAAK,EAAG;IAEvC;IACA,OAAOA,KAAK,CAACC,mBAAmB,EAAE,CAACrI,YAAY,CAAEkI,gCAAgC,CAAE;EAEpF;EAEA,SAASI,qBAAqBA,CAAEF,KAAK,EAAG;IAEvC;IACA,OAAOA,KAAK,CAACpI,YAAY,CAAEiI,gCAAgC,CAAE,CAACM,mBAAmB,EAAE;EAEpF;;EAEA;EACA,IAAMC,SAAS,IAAA/b,UAAA,OAAAgc,eAAA,CAAAhc,UAAA,EACZ6J,oBAAoB,EAAI,UAAE8R,KAAK;IAAA,OAAMA,KAAK;EAAA,IAAAK,eAAA,CAAAhc,UAAA,EAC1C4J,cAAc,EAAI,UAAE+R,KAAK;IAAA,OAAMA,KAAK,CAACC,mBAAmB,EAAE;EAAA,IAAAI,eAAA,CAAAhc,UAAA,EAC1D8J,mBAAmB,EAAI4R,qBAAqB,GAAA1b,UAAA,CAC9C;;EAED;EACA,IAAMic,WAAW,IAAAhc,YAAA,OAAA+b,eAAA,CAAA/b,YAAA,EACd4J,oBAAoB,EAAI,UAAE8R,KAAK;IAAA,OAAMA,KAAK;EAAA,IAAAK,eAAA,CAAA/b,YAAA,EAC1C2J,cAAc,EAAI,UAAE+R,KAAK;IAAA,OAAMA,KAAK,CAACG,mBAAmB,EAAE;EAAA,IAAAE,eAAA,CAAA/b,YAAA,EAC1D6J,mBAAmB,EAAI+R,qBAAqB,GAAA5b,YAAA,CAC9C;EAED,IAAMic,eAAe,GAAG;IAEvBC,OAAO,EAAE,KAAK;IAEd,IAAIC,UAAUA,CAAA,EAAG;MAEhB5c,OAAO,CAACC,IAAI,CAAE,4EAA4E,CAAE;MAE5F,OAAO,CAAE,IAAI,CAAC0c,OAAO;IAEtB,CAAC;IAED,IAAIC,UAAUA,CAAEA,UAAU,EAAG;MAE5B5c,OAAO,CAACC,IAAI,CAAE,4EAA4E,CAAE;MAE5F,IAAI,CAAC0c,OAAO,GAAG,CAAEC,UAAU;IAE5B,CAAC;IAED,IAAIC,iBAAiBA,CAAA,EAAG;MAEvB,OAAOxS,oBAAoB;IAE5B,CAAC;IAED,IAAIwS,iBAAiBA,CAAEC,UAAU,EAAG;MAEnC9c,OAAO,CAACC,IAAI,CAAE,wDAAwD,CAAE;IAEzE,CAAC;IAED8c,OAAO,EAAE,SAAAA,QAAWZ,KAAK,EAAEa,gBAAgB,EAAEC,gBAAgB,EAAG;MAE/D,IAAK,IAAI,CAACN,OAAO,KAAK,KAAK,IAAIK,gBAAgB,KAAKC,gBAAgB,IAAI,CAAED,gBAAgB,IAAI,CAAEC,gBAAgB,EAAG;QAElH,OAAOd,KAAK;MAEb;MAEA,IAAMe,cAAc,GAAGX,SAAS,CAAES,gBAAgB,CAAE;MACpD,IAAMG,gBAAgB,GAAGV,WAAW,CAAEQ,gBAAgB,CAAE;MAExD,IAAKC,cAAc,KAAKniB,SAAS,IAAIoiB,gBAAgB,KAAKpiB,SAAS,EAAG;QAErE,MAAM,IAAIX,KAAK,0CAAAgjB,MAAA,CAA2CJ,gBAAgB,cAAAI,MAAA,CAAWH,gBAAgB,SAAO;MAE7G;MAEA,OAAOE,gBAAgB,CAAED,cAAc,CAAEf,KAAK,CAAE,CAAE;IAEnD,CAAC;IAEDkB,qBAAqB,EAAE,SAAAA,sBAAWlB,KAAK,EAAEc,gBAAgB,EAAG;MAE3D,OAAO,IAAI,CAACF,OAAO,CAAEZ,KAAK,EAAE,IAAI,CAACU,iBAAiB,EAAEI,gBAAgB,CAAE;IAEvE,CAAC;IAEDK,mBAAmB,EAAE,SAAAA,oBAAWnB,KAAK,EAAEa,gBAAgB,EAAG;MAEzD,OAAO,IAAI,CAACD,OAAO,CAAEZ,KAAK,EAAEa,gBAAgB,EAAE,IAAI,CAACH,iBAAiB,CAAE;IAEvE;EAED,CAAC;EAED,IAAIU,OAAO;EAAC,IAENC,UAAU;IAAA,SAAAA,WAAA;MAAA3e,eAAA,OAAA2e,UAAA;IAAA;IAAAne,YAAA,CAAAme,UAAA;MAAAjnB,GAAA;MAAAE,KAAA,EAEf,SAAAgnB,WAAmBC,KAAK,EAAG;QAE1B,IAAK,SAAS,CAACC,IAAI,CAAED,KAAK,CAACE,GAAG,CAAE,EAAG;UAElC,OAAOF,KAAK,CAACE,GAAG;QAEjB;QAEA,IAAK,OAAOC,iBAAiB,KAAK,WAAW,EAAG;UAE/C,OAAOH,KAAK,CAACE,GAAG;QAEjB;QAEA,IAAIE,MAAM;QAEV,IAAKJ,KAAK,YAAYG,iBAAiB,EAAG;UAEzCC,MAAM,GAAGJ,KAAK;QAEf,CAAC,MAAM;UAEN,IAAKH,OAAO,KAAKxiB,SAAS,EAAGwiB,OAAO,GAAG3B,eAAe,CAAE,QAAQ,CAAE;UAElE2B,OAAO,CAACQ,KAAK,GAAGL,KAAK,CAACK,KAAK;UAC3BR,OAAO,CAACS,MAAM,GAAGN,KAAK,CAACM,MAAM;UAE7B,IAAMhmB,OAAO,GAAGulB,OAAO,CAACU,UAAU,CAAE,IAAI,CAAE;UAE1C,IAAKP,KAAK,YAAYQ,SAAS,EAAG;YAEjClmB,OAAO,CAACmmB,YAAY,CAAET,KAAK,EAAE,CAAC,EAAE,CAAC,CAAE;UAEpC,CAAC,MAAM;YAEN1lB,OAAO,CAAComB,SAAS,CAAEV,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;UAE5D;UAEAF,MAAM,GAAGP,OAAO;QAEjB;QAEA,IAAKO,MAAM,CAACC,KAAK,GAAG,IAAI,IAAID,MAAM,CAACE,MAAM,GAAG,IAAI,EAAG;UAElDhe,OAAO,CAACC,IAAI,CAAE,6EAA6E,EAAEyd,KAAK,CAAE;UAEpG,OAAOI,MAAM,CAACO,SAAS,CAAE,YAAY,EAAE,GAAG,CAAE;QAE7C,CAAC,MAAM;UAEN,OAAOP,MAAM,CAACO,SAAS,CAAE,WAAW,CAAE;QAEvC;MAED;IAAC;MAAA9nB,GAAA;MAAAE,KAAA,EAED,SAAA6nB,aAAqBZ,KAAK,EAAG;QAE5B,IAAO,OAAOa,gBAAgB,KAAK,WAAW,IAAIb,KAAK,YAAYa,gBAAgB,IAChF,OAAOV,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOW,WAAW,KAAK,WAAW,IAAId,KAAK,YAAYc,WAAa,EAAG;UAEzE,IAAMV,MAAM,GAAGlC,eAAe,CAAE,QAAQ,CAAE;UAE1CkC,MAAM,CAACC,KAAK,GAAGL,KAAK,CAACK,KAAK;UAC1BD,MAAM,CAACE,MAAM,GAAGN,KAAK,CAACM,MAAM;UAE5B,IAAMhmB,OAAO,GAAG8lB,MAAM,CAACG,UAAU,CAAE,IAAI,CAAE;UACzCjmB,OAAO,CAAComB,SAAS,CAAEV,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;UAE3D,IAAMS,SAAS,GAAGzmB,OAAO,CAAC0mB,YAAY,CAAE,CAAC,EAAE,CAAC,EAAEhB,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;UACzE,IAAMW,IAAI,GAAGF,SAAS,CAACE,IAAI;UAE3B,KAAM,IAAIriB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqiB,IAAI,CAACtiB,MAAM,EAAEC,CAAC,EAAG,EAAG;YAExCqiB,IAAI,CAAEriB,CAAC,CAAE,GAAGwf,YAAY,CAAE6C,IAAI,CAAEriB,CAAC,CAAE,GAAG,GAAG,CAAE,GAAG,GAAG;UAElD;UAEAtE,OAAO,CAACmmB,YAAY,CAAEM,SAAS,EAAE,CAAC,EAAE,CAAC,CAAE;UAEvC,OAAOX,MAAM;QAEd,CAAC,MAAM,IAAKJ,KAAK,CAACiB,IAAI,EAAG;UAExB,IAAMA,KAAI,GAAGjB,KAAK,CAACiB,IAAI,CAAC/gB,KAAK,CAAE,CAAC,CAAE;UAElC,KAAM,IAAItB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGqiB,KAAI,CAACtiB,MAAM,EAAEC,EAAC,EAAG,EAAG;YAExC,IAAKqiB,KAAI,YAAY1M,UAAU,IAAI0M,KAAI,YAAYrD,iBAAiB,EAAG;cAEtEqD,KAAI,CAAEriB,EAAC,CAAE,GAAG+Q,IAAI,CAACsC,KAAK,CAAEmM,YAAY,CAAE6C,KAAI,CAAEriB,EAAC,CAAE,GAAG,GAAG,CAAE,GAAG,GAAG,CAAE;YAEhE,CAAC,MAAM;cAEN;;cAEAqiB,KAAI,CAAEriB,EAAC,CAAE,GAAGwf,YAAY,CAAE6C,KAAI,CAAEriB,EAAC,CAAE,CAAE;YAEtC;UAED;UAEA,OAAO;YACNqiB,IAAI,EAAEA,KAAI;YACVZ,KAAK,EAAEL,KAAK,CAACK,KAAK;YAClBC,MAAM,EAAEN,KAAK,CAACM;UACf,CAAC;QAEF,CAAC,MAAM;UAENhe,OAAO,CAACC,IAAI,CAAE,6FAA6F,CAAE;UAC7G,OAAOyd,KAAK;QAEb;MAED;IAAC;IAAA,OAAAF,UAAA;EAAA;EAAA,IAIIoB,MAAM;IAEX,SAAAA,OAAaD,IAAI,GAAG,IAAI,EAAG;MAAA9f,eAAA,OAAA+f,MAAA;MAE1B,IAAI,CAACC,QAAQ,GAAG,IAAI;MAEpB,IAAI,CAAC/Q,IAAI,GAAGN,YAAY,EAAE;MAE1B,IAAI,CAACmR,IAAI,GAAGA,IAAI;MAEhB,IAAI,CAACG,OAAO,GAAG,CAAC;IAEjB;IAACzf,YAAA,CAAAuf,MAAA;MAAAroB,GAAA;MAAAsb,GAAA,EAED,SAAAA,IAAiBpb,KAAK,EAAG;QAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAACqoB,OAAO,EAAG;MAEtC;IAAC;MAAAvoB,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKjkB,SAAS,IAAI,OAAOikB,IAAI,KAAK,QAAU;QAEvE,IAAK,CAAEC,YAAY,IAAID,IAAI,CAACE,MAAM,CAAE,IAAI,CAACpR,IAAI,CAAE,KAAK/S,SAAS,EAAG;UAE/D,OAAOikB,IAAI,CAACE,MAAM,CAAE,IAAI,CAACpR,IAAI,CAAE;QAEhC;QAEA,IAAMqR,MAAM,GAAG;UACdrR,IAAI,EAAE,IAAI,CAACA,IAAI;UACfsR,GAAG,EAAE;QACN,CAAC;QAED,IAAMT,IAAI,GAAG,IAAI,CAACA,IAAI;QAEtB,IAAKA,IAAI,KAAK,IAAI,EAAG;UAEpB,IAAIS,GAAG;UAEP,IAAKC,KAAK,CAACC,OAAO,CAAEX,IAAI,CAAE,EAAG;YAE5B;;YAEAS,GAAG,GAAG,EAAE;YAER,KAAM,IAAI9iB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG0R,IAAI,CAACtiB,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;cAE/C,IAAKqiB,IAAI,CAAEriB,CAAC,CAAE,CAACijB,aAAa,EAAG;gBAE9BH,GAAG,CAACtjB,IAAI,CAAE0jB,cAAc,CAAEb,IAAI,CAAEriB,CAAC,CAAE,CAACohB,KAAK,CAAE,CAAE;cAE9C,CAAC,MAAM;gBAEN0B,GAAG,CAACtjB,IAAI,CAAE0jB,cAAc,CAAEb,IAAI,CAAEriB,CAAC,CAAE,CAAE,CAAE;cAExC;YAED;UAED,CAAC,MAAM;YAEN;;YAEA8iB,GAAG,GAAGI,cAAc,CAAEb,IAAI,CAAE;UAE7B;UAEAQ,MAAM,CAACC,GAAG,GAAGA,GAAG;QAEjB;QAEA,IAAK,CAAEH,YAAY,EAAG;UAErBD,IAAI,CAACE,MAAM,CAAE,IAAI,CAACpR,IAAI,CAAE,GAAGqR,MAAM;QAElC;QAEA,OAAOA,MAAM;MAEd;IAAC;IAAA,OAAAP,MAAA;EAAA;EAIF,SAASY,cAAcA,CAAE9B,KAAK,EAAG;IAEhC,IAAO,OAAOa,gBAAgB,KAAK,WAAW,IAAIb,KAAK,YAAYa,gBAAgB,IAChF,OAAOV,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOW,WAAW,KAAK,WAAW,IAAId,KAAK,YAAYc,WAAa,EAAG;MAEzE;;MAEA,OAAOhB,UAAU,CAACC,UAAU,CAAEC,KAAK,CAAE;IAEtC,CAAC,MAAM;MAEN,IAAKA,KAAK,CAACiB,IAAI,EAAG;QAEjB;;QAEA,OAAO;UACNA,IAAI,EAAEU,KAAK,CAACI,IAAI,CAAE/B,KAAK,CAACiB,IAAI,CAAE;UAC9BZ,KAAK,EAAEL,KAAK,CAACK,KAAK;UAClBC,MAAM,EAAEN,KAAK,CAACM,MAAM;UACpB1lB,IAAI,EAAEolB,KAAK,CAACiB,IAAI,CAAChiB,WAAW,CAACC;QAC9B,CAAC;MAEF,CAAC,MAAM;QAENoD,OAAO,CAACC,IAAI,CAAE,6CAA6C,CAAE;QAC7D,OAAO,CAAC,CAAC;MAEV;IAED;EAED;EAEA,IAAIyf,SAAS,GAAG,CAAC;EAAC,IAEZC,OAAO,0BAAAC,gBAAA;IAAAC,SAAA,CAAAF,OAAA,EAAAC,gBAAA;IAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,OAAA;IAEZ,SAAAA,QAAajC,KAAK,GAAGiC,OAAO,CAACK,aAAa,EAAEC,OAAO,GAAGN,OAAO,CAACO,eAAe,EAAEC,KAAK,GAAGpb,mBAAmB,EAAEqb,KAAK,GAAGrb,mBAAmB,EAAEsb,SAAS,GAAG/a,YAAY,EAAEgb,SAAS,GAAG7a,wBAAwB,EAAE8a,MAAM,GAAGha,UAAU,EAAEjO,IAAI,GAAGqN,gBAAgB,EAAE6a,UAAU,GAAGb,OAAO,CAACc,kBAAkB,EAAEC,QAAQ,GAAG7W,cAAc,EAAG;MAAA,IAAA8W,MAAA;MAAA9hB,eAAA,OAAA8gB,OAAA;MAE3TgB,MAAA,GAAAb,MAAA,CAAAvnB,IAAA;MAEAooB,MAAA,CAAKC,SAAS,GAAG,IAAI;MAErB3qB,MAAM,CAACI,cAAc,CAAAwqB,sBAAA,CAAAF,MAAA,GAAQ,IAAI,EAAE;QAAElqB,KAAK,EAAEipB,SAAS;MAAI,CAAC,CAAE;MAE5DiB,MAAA,CAAK7S,IAAI,GAAGN,YAAY,EAAE;MAE1BmT,MAAA,CAAK/jB,IAAI,GAAG,EAAE;MAEd+jB,MAAA,CAAKG,MAAM,GAAG,IAAIlC,MAAM,CAAElB,KAAK,CAAE;MACjCiD,MAAA,CAAKI,OAAO,GAAG,EAAE;MAEjBJ,MAAA,CAAKV,OAAO,GAAGA,OAAO;MACtBU,MAAA,CAAKK,OAAO,GAAG,CAAC;MAEhBL,MAAA,CAAKR,KAAK,GAAGA,KAAK;MAClBQ,MAAA,CAAKP,KAAK,GAAGA,KAAK;MAElBO,MAAA,CAAKN,SAAS,GAAGA,SAAS;MAC1BM,MAAA,CAAKL,SAAS,GAAGA,SAAS;MAE1BK,MAAA,CAAKH,UAAU,GAAGA,UAAU;MAE5BG,MAAA,CAAKJ,MAAM,GAAGA,MAAM;MACpBI,MAAA,CAAKM,cAAc,GAAG,IAAI;MAC1BN,MAAA,CAAKroB,IAAI,GAAGA,IAAI;MAEhBqoB,MAAA,CAAK5K,MAAM,GAAG,IAAIxD,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MACjCoO,MAAA,CAAKO,MAAM,GAAG,IAAI3O,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MACjCoO,MAAA,CAAKrK,MAAM,GAAG,IAAI/D,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MACjCoO,MAAA,CAAKlG,QAAQ,GAAG,CAAC;MAEjBkG,MAAA,CAAKQ,gBAAgB,GAAG,IAAI;MAC5BR,MAAA,CAAKxF,MAAM,GAAG,IAAI1E,OAAO,EAAE;MAE3BkK,MAAA,CAAKS,eAAe,GAAG,IAAI;MAC3BT,MAAA,CAAKU,gBAAgB,GAAG,KAAK;MAC7BV,MAAA,CAAKW,KAAK,GAAG,IAAI;MACjBX,MAAA,CAAKY,eAAe,GAAG,CAAC,CAAC,CAAC;;MAE1B;MACA;MACA;MACA;MACAZ,MAAA,CAAKD,QAAQ,GAAGA,QAAQ;MAExBC,MAAA,CAAKa,QAAQ,GAAG,CAAC,CAAC;MAElBb,MAAA,CAAK7B,OAAO,GAAG,CAAC;MAChB6B,MAAA,CAAKc,QAAQ,GAAG,IAAI;MAEpBd,MAAA,CAAKe,qBAAqB,GAAG,KAAK,CAAC,CAAC;MACpCf,MAAA,CAAKgB,gBAAgB,GAAG,KAAK,CAAC,CAAC;MAAA,OAAAhB,MAAA;IAEhC;IAACthB,YAAA,CAAAsgB,OAAA;MAAAppB,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAY;QAEX,OAAO,IAAI,CAACoO,MAAM,CAACnC,IAAI;MAExB,CAAC;MAAA9M,GAAA,EAED,SAAAA,IAAWpb,KAAK,GAAG,IAAI,EAAG;QAEzB,IAAI,CAACqqB,MAAM,CAACnC,IAAI,GAAGloB,KAAK;MAEzB;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAmrB,aAAA,EAAe;QAEd,IAAI,CAACzG,MAAM,CAACf,cAAc,CAAE,IAAI,CAACrE,MAAM,CAACxH,CAAC,EAAE,IAAI,CAACwH,MAAM,CAAClH,CAAC,EAAE,IAAI,CAACqS,MAAM,CAAC3S,CAAC,EAAE,IAAI,CAAC2S,MAAM,CAACrS,CAAC,EAAE,IAAI,CAAC4L,QAAQ,EAAE,IAAI,CAACnE,MAAM,CAAC/H,CAAC,EAAE,IAAI,CAAC+H,MAAM,CAACzH,CAAC,CAAE;MAEtI;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd,IAAI,CAAClkB,IAAI,GAAGkkB,MAAM,CAAClkB,IAAI;QAEvB,IAAI,CAACkkB,MAAM,GAAGA,MAAM,CAACA,MAAM;QAC3B,IAAI,CAACC,OAAO,GAAGD,MAAM,CAACC,OAAO,CAACnjB,KAAK,CAAE,CAAC,CAAE;QAExC,IAAI,CAACqiB,OAAO,GAAGa,MAAM,CAACb,OAAO;QAC7B,IAAI,CAACe,OAAO,GAAGF,MAAM,CAACE,OAAO;QAE7B,IAAI,CAACb,KAAK,GAAGW,MAAM,CAACX,KAAK;QACzB,IAAI,CAACC,KAAK,GAAGU,MAAM,CAACV,KAAK;QAEzB,IAAI,CAACC,SAAS,GAAGS,MAAM,CAACT,SAAS;QACjC,IAAI,CAACC,SAAS,GAAGQ,MAAM,CAACR,SAAS;QAEjC,IAAI,CAACE,UAAU,GAAGM,MAAM,CAACN,UAAU;QAEnC,IAAI,CAACD,MAAM,GAAGO,MAAM,CAACP,MAAM;QAC3B,IAAI,CAACU,cAAc,GAAGH,MAAM,CAACG,cAAc;QAC3C,IAAI,CAAC3oB,IAAI,GAAGwoB,MAAM,CAACxoB,IAAI;QAEvB,IAAI,CAACyd,MAAM,CAAC7C,IAAI,CAAE4N,MAAM,CAAC/K,MAAM,CAAE;QACjC,IAAI,CAACmL,MAAM,CAAChO,IAAI,CAAE4N,MAAM,CAACI,MAAM,CAAE;QACjC,IAAI,CAAC5K,MAAM,CAACpD,IAAI,CAAE4N,MAAM,CAACxK,MAAM,CAAE;QACjC,IAAI,CAACmE,QAAQ,GAAGqG,MAAM,CAACrG,QAAQ;QAE/B,IAAI,CAAC0G,gBAAgB,GAAGL,MAAM,CAACK,gBAAgB;QAC/C,IAAI,CAAChG,MAAM,CAACjI,IAAI,CAAE4N,MAAM,CAAC3F,MAAM,CAAE;QAEjC,IAAI,CAACiG,eAAe,GAAGN,MAAM,CAACM,eAAe;QAC7C,IAAI,CAACC,gBAAgB,GAAGP,MAAM,CAACO,gBAAgB;QAC/C,IAAI,CAACC,KAAK,GAAGR,MAAM,CAACQ,KAAK;QACzB,IAAI,CAACC,eAAe,GAAGT,MAAM,CAACS,eAAe;QAC7C,IAAI,CAACb,QAAQ,GAAGI,MAAM,CAACJ,QAAQ;QAE/B,IAAI,CAACc,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEjB,MAAM,CAACU,QAAQ,CAAE,CAAE;QAE/D,IAAI,CAACQ,WAAW,GAAG,IAAI;QAEvB,OAAO,IAAI;MAEZ;IAAC;MAAAzrB,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKjkB,SAAS,IAAI,OAAOikB,IAAI,KAAK,QAAU;QAEvE,IAAK,CAAEC,YAAY,IAAID,IAAI,CAACiD,QAAQ,CAAE,IAAI,CAACnU,IAAI,CAAE,KAAK/S,SAAS,EAAG;UAEjE,OAAOikB,IAAI,CAACiD,QAAQ,CAAE,IAAI,CAACnU,IAAI,CAAE;QAElC;QAEA,IAAMqR,MAAM,GAAG;UAEd+C,QAAQ,EAAE;YACTpD,OAAO,EAAE,GAAG;YACZxmB,IAAI,EAAE,SAAS;YACfR,SAAS,EAAE;UACZ,CAAC;UAEDgW,IAAI,EAAE,IAAI,CAACA,IAAI;UACflR,IAAI,EAAE,IAAI,CAACA,IAAI;UAEf8gB,KAAK,EAAE,IAAI,CAACoD,MAAM,CAAC/B,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;UAEtCmS,OAAO,EAAE,IAAI,CAACA,OAAO;UACrBe,OAAO,EAAE,IAAI,CAACA,OAAO;UAErBE,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAAC3S,CAAC,EAAE,IAAI,CAAC2S,MAAM,CAACrS,CAAC,CAAE;UACxCkH,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAACxH,CAAC,EAAE,IAAI,CAACwH,MAAM,CAAClH,CAAC,CAAE;UACxCyH,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAAC/H,CAAC,EAAE,IAAI,CAAC+H,MAAM,CAACzH,CAAC,CAAE;UACxC4L,QAAQ,EAAE,IAAI,CAACA,QAAQ;UAEvBljB,IAAI,EAAE,CAAE,IAAI,CAAC4oB,KAAK,EAAE,IAAI,CAACC,KAAK,CAAE;UAEhCG,MAAM,EAAE,IAAI,CAACA,MAAM;UACnBU,cAAc,EAAE,IAAI,CAACA,cAAc;UACnC3oB,IAAI,EAAE,IAAI,CAACA,IAAI;UACfooB,QAAQ,EAAE,IAAI,CAACA,QAAQ;UAEvBJ,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBD,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBG,UAAU,EAAE,IAAI,CAACA,UAAU;UAE3Bc,KAAK,EAAE,IAAI,CAACA,KAAK;UAEjBF,eAAe,EAAE,IAAI,CAACA,eAAe;UACrCC,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;UACvCE,eAAe,EAAE,IAAI,CAACA;QAEvB,CAAC;QAED,IAAKtrB,MAAM,CAACmH,IAAI,CAAE,IAAI,CAACokB,QAAQ,CAAE,CAACnlB,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACqC,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9E,IAAK,CAAEvC,YAAY,EAAG;UAErBD,IAAI,CAACiD,QAAQ,CAAE,IAAI,CAACnU,IAAI,CAAE,GAAGqR,MAAM;QAEpC;QAEA,OAAOA,MAAM;MAEd;IAAC;MAAA5oB,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAACrV,aAAa,CAAE;UAAExU,IAAI,EAAE;QAAU,CAAC,CAAE;MAE1C;IAAC;MAAA/B,GAAA;MAAAE,KAAA,EAED,SAAA2rB,YAAaC,EAAE,EAAG;QAEjB,IAAK,IAAI,CAACpC,OAAO,KAAKzb,SAAS,EAAG,OAAO6d,EAAE;QAE3CA,EAAE,CAACtO,YAAY,CAAE,IAAI,CAACoH,MAAM,CAAE;QAE9B,IAAKkH,EAAE,CAAC9T,CAAC,GAAG,CAAC,IAAI8T,EAAE,CAAC9T,CAAC,GAAG,CAAC,EAAG;UAE3B,QAAS,IAAI,CAAC4R,KAAK;YAElB,KAAKrb,cAAc;cAElBud,EAAE,CAAC9T,CAAC,GAAG8T,EAAE,CAAC9T,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE0S,EAAE,CAAC9T,CAAC,CAAE;cAChC;YAED,KAAKxJ,mBAAmB;cAEvBsd,EAAE,CAAC9T,CAAC,GAAG8T,EAAE,CAAC9T,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;cACvB;YAED,KAAKvJ,sBAAsB;cAE1B,IAAKqI,IAAI,CAACgC,GAAG,CAAEhC,IAAI,CAACsC,KAAK,CAAE0S,EAAE,CAAC9T,CAAC,CAAE,GAAG,CAAC,CAAE,KAAK,CAAC,EAAG;gBAE/C8T,EAAE,CAAC9T,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE4R,EAAE,CAAC9T,CAAC,CAAE,GAAG8T,EAAE,CAAC9T,CAAC;cAEhC,CAAC,MAAM;gBAEN8T,EAAE,CAAC9T,CAAC,GAAG8T,EAAE,CAAC9T,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE0S,EAAE,CAAC9T,CAAC,CAAE;cAEjC;cAEA;UAAM;QAIT;QAEA,IAAK8T,EAAE,CAACxT,CAAC,GAAG,CAAC,IAAIwT,EAAE,CAACxT,CAAC,GAAG,CAAC,EAAG;UAE3B,QAAS,IAAI,CAACuR,KAAK;YAElB,KAAKtb,cAAc;cAElBud,EAAE,CAACxT,CAAC,GAAGwT,EAAE,CAACxT,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE0S,EAAE,CAACxT,CAAC,CAAE;cAChC;YAED,KAAK9J,mBAAmB;cAEvBsd,EAAE,CAACxT,CAAC,GAAGwT,EAAE,CAACxT,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;cACvB;YAED,KAAK7J,sBAAsB;cAE1B,IAAKqI,IAAI,CAACgC,GAAG,CAAEhC,IAAI,CAACsC,KAAK,CAAE0S,EAAE,CAACxT,CAAC,CAAE,GAAG,CAAC,CAAE,KAAK,CAAC,EAAG;gBAE/CwT,EAAE,CAACxT,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE4R,EAAE,CAACxT,CAAC,CAAE,GAAGwT,EAAE,CAACxT,CAAC;cAEhC,CAAC,MAAM;gBAENwT,EAAE,CAACxT,CAAC,GAAGwT,EAAE,CAACxT,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE0S,EAAE,CAACxT,CAAC,CAAE;cAEjC;cAEA;UAAM;QAIT;QAEA,IAAK,IAAI,CAACyS,KAAK,EAAG;UAEjBe,EAAE,CAACxT,CAAC,GAAG,CAAC,GAAGwT,EAAE,CAACxT,CAAC;QAEhB;QAEA,OAAOwT,EAAE;MAEV;IAAC;MAAA9rB,GAAA;MAAAsb,GAAA,EAED,SAAAA,IAAiBpb,KAAK,EAAG;QAExB,IAAKA,KAAK,KAAK,IAAI,EAAG;UAErB,IAAI,CAACqoB,OAAO,EAAG;UACf,IAAI,CAACgC,MAAM,CAACkB,WAAW,GAAG,IAAI;QAE/B;MAED;IAAC;IAAA,OAAArC,OAAA;EAAA,EA9RoBxT,eAAe;EAkSrCwT,OAAO,CAACK,aAAa,GAAG,IAAI;EAC5BL,OAAO,CAACO,eAAe,GAAG1b,SAAS;EACnCmb,OAAO,CAACc,kBAAkB,GAAG,CAAC;EAAC,IAEzB6B,OAAO,0BAAAC,iBAAA;IAEZ,SAAAD,QAAa/T,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE2T,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAG;MAAA5jB,eAAA,OAAAyjB,OAAA;MAEzCA,OAAO,CAACpsB,SAAS,CAACwsB,SAAS,GAAG,IAAI;MAElC,IAAI,CAACnU,CAAC,GAAGA,CAAC;MACV,IAAI,CAACM,CAAC,GAAGA,CAAC;MACV,IAAI,CAAC2T,CAAC,GAAGA,CAAC;MACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IAEX;IAACpjB,YAAA,CAAAijB,OAAA;MAAA/rB,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAY;QAEX,OAAO,IAAI,CAAC8P,CAAC;MAEd,CAAC;MAAA3Q,GAAA,EAED,SAAAA,IAAWpb,KAAK,EAAG;QAElB,IAAI,CAAC+rB,CAAC,GAAG/rB,KAAK;MAEf;IAAC;MAAAF,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAa;QAEZ,OAAO,IAAI,CAAC+P,CAAC;MAEd,CAAC;MAAA5Q,GAAA,EAED,SAAAA,IAAYpb,KAAK,EAAG;QAEnB,IAAI,CAACgsB,CAAC,GAAGhsB,KAAK;MAEf;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKtD,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAEC,CAAC,EAAG;QAEjB,IAAI,CAAClU,CAAC,GAAGA,CAAC;QACV,IAAI,CAACM,CAAC,GAAGA,CAAC;QACV,IAAI,CAAC2T,CAAC,GAAGA,CAAC;QACV,IAAI,CAACC,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAkc,UAAWC,MAAM,EAAG;QAEnB,IAAI,CAACrE,CAAC,GAAGqE,MAAM;QACf,IAAI,CAAC/D,CAAC,GAAG+D,MAAM;QACf,IAAI,CAAC4P,CAAC,GAAG5P,MAAM;QACf,IAAI,CAAC6P,CAAC,GAAG7P,MAAM;QAEf,OAAO,IAAI;MAEZ;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAoc,KAAMtE,CAAC,EAAG;QAET,IAAI,CAACA,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAhY,GAAA;MAAAE,KAAA,EAED,SAAAqc,KAAMjE,CAAC,EAAG;QAET,IAAI,CAACA,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAksB,KAAMH,CAAC,EAAG;QAET,IAAI,CAACA,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAmsB,KAAMH,CAAC,EAAG;QAET,IAAI,CAACA,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAsc,aAAcnG,KAAK,EAAEnW,KAAK,EAAG;QAE5B,QAASmW,KAAK;UAEb,KAAK,CAAC;YAAE,IAAI,CAAC2B,CAAC,GAAG9X,KAAK;YAAE;UACxB,KAAK,CAAC;YAAE,IAAI,CAACoY,CAAC,GAAGpY,KAAK;YAAE;UACxB,KAAK,CAAC;YAAE,IAAI,CAAC+rB,CAAC,GAAG/rB,KAAK;YAAE;UACxB,KAAK,CAAC;YAAE,IAAI,CAACgsB,CAAC,GAAGhsB,KAAK;YAAE;UACxB;YAAS,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,GAAGwS,KAAK,CAAE;QAAC;QAI/D,OAAO,IAAI;MAEZ;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAuc,aAAcpG,KAAK,EAAG;QAErB,QAASA,KAAK;UAEb,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC2B,CAAC;UACrB,KAAK,CAAC;YAAE,OAAO,IAAI,CAACM,CAAC;UACrB,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC2T,CAAC;UACrB,KAAK,CAAC;YAAE,OAAO,IAAI,CAACC,CAAC;UACrB;YAAS,MAAM,IAAIroB,KAAK,CAAE,yBAAyB,GAAGwS,KAAK,CAAE;QAAC;MAIhE;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,CAAE,IAAI,CAAC4R,CAAC,EAAE,IAAI,CAACM,CAAC,EAAE,IAAI,CAAC2T,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE;MAE9D;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAMC,CAAC,EAAG;QAET,IAAI,CAAC5E,CAAC,GAAG4E,CAAC,CAAC5E,CAAC;QACZ,IAAI,CAACM,CAAC,GAAGsE,CAAC,CAACtE,CAAC;QACZ,IAAI,CAAC2T,CAAC,GAAGrP,CAAC,CAACqP,CAAC;QACZ,IAAI,CAACC,CAAC,GAAKtP,CAAC,CAACsP,CAAC,KAAK1nB,SAAS,GAAKoY,CAAC,CAACsP,CAAC,GAAG,CAAC;QAExC,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA2c,IAAKD,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QACb,IAAI,CAAC2T,CAAC,IAAIrP,CAAC,CAACqP,CAAC;QACb,IAAI,CAACC,CAAC,IAAItP,CAAC,CAACsP,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA4c,UAAWrD,CAAC,EAAG;QAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;QACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;QACX,IAAI,CAACwS,CAAC,IAAIxS,CAAC;QACX,IAAI,CAACyS,CAAC,IAAIzS,CAAC;QAEX,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAA6c,WAAYvC,CAAC,EAAEC,CAAC,EAAG;QAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;QAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;QAClB,IAAI,CAAC2T,CAAC,GAAGzR,CAAC,CAACyR,CAAC,GAAGxR,CAAC,CAACwR,CAAC;QAClB,IAAI,CAACC,CAAC,GAAG1R,CAAC,CAAC0R,CAAC,GAAGzR,CAAC,CAACyR,CAAC;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA8c,gBAAiBJ,CAAC,EAAEnD,CAAC,EAAG;QAEvB,IAAI,CAACzB,CAAC,IAAI4E,CAAC,CAAC5E,CAAC,GAAGyB,CAAC;QACjB,IAAI,CAACnB,CAAC,IAAIsE,CAAC,CAACtE,CAAC,GAAGmB,CAAC;QACjB,IAAI,CAACwS,CAAC,IAAIrP,CAAC,CAACqP,CAAC,GAAGxS,CAAC;QACjB,IAAI,CAACyS,CAAC,IAAItP,CAAC,CAACsP,CAAC,GAAGzS,CAAC;QAEjB,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAA+c,IAAKL,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QACb,IAAI,CAAC2T,CAAC,IAAIrP,CAAC,CAACqP,CAAC;QACb,IAAI,CAACC,CAAC,IAAItP,CAAC,CAACsP,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAgd,UAAWzD,CAAC,EAAG;QAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;QACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;QACX,IAAI,CAACwS,CAAC,IAAIxS,CAAC;QACX,IAAI,CAACyS,CAAC,IAAIzS,CAAC;QAEX,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAAid,WAAY3C,CAAC,EAAEC,CAAC,EAAG;QAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;QAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;QAClB,IAAI,CAAC2T,CAAC,GAAGzR,CAAC,CAACyR,CAAC,GAAGxR,CAAC,CAACwR,CAAC;QAClB,IAAI,CAACC,CAAC,GAAG1R,CAAC,CAAC0R,CAAC,GAAGzR,CAAC,CAACyR,CAAC;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAkd,SAAUR,CAAC,EAAG;QAEb,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QACb,IAAI,CAAC2T,CAAC,IAAIrP,CAAC,CAACqP,CAAC;QACb,IAAI,CAACC,CAAC,IAAItP,CAAC,CAACsP,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAmd,eAAgBhB,MAAM,EAAG;QAExB,IAAI,CAACrE,CAAC,IAAIqE,MAAM;QAChB,IAAI,CAAC/D,CAAC,IAAI+D,MAAM;QAChB,IAAI,CAAC4P,CAAC,IAAI5P,MAAM;QAChB,IAAI,CAAC6P,CAAC,IAAI7P,MAAM;QAEhB,OAAO,IAAI;MAEZ;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAosB,aAAcxU,CAAC,EAAG;QAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;UAAE2T,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;QACpD,IAAMzO,CAAC,GAAG3F,CAAC,CAAC4F,QAAQ;QAEpB,IAAI,CAAC1F,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGwO,CAAC,GAAGxO,CAAC,CAAE,EAAE,CAAE,GAAGyO,CAAC;QAC3D,IAAI,CAAC5T,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGwO,CAAC,GAAGxO,CAAC,CAAE,EAAE,CAAE,GAAGyO,CAAC;QAC3D,IAAI,CAACD,CAAC,GAAGxO,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,EAAE,CAAE,GAAGwO,CAAC,GAAGxO,CAAC,CAAE,EAAE,CAAE,GAAGyO,CAAC;QAC5D,IAAI,CAACA,CAAC,GAAGzO,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,EAAE,CAAE,GAAGwO,CAAC,GAAGxO,CAAC,CAAE,EAAE,CAAE,GAAGyO,CAAC;QAE5D,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAqd,aAAclB,MAAM,EAAG;QAEtB,OAAO,IAAI,CAACgB,cAAc,CAAE,CAAC,GAAGhB,MAAM,CAAE;MAEzC;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAqsB,2BAA4BhS,CAAC,EAAG;QAE/B;;QAEA;;QAEA,IAAI,CAAC2R,CAAC,GAAG,CAAC,GAAGpV,IAAI,CAAC6H,IAAI,CAAEpE,CAAC,CAAC2R,CAAC,CAAE;QAE7B,IAAMzS,CAAC,GAAG3C,IAAI,CAACsH,IAAI,CAAE,CAAC,GAAG7D,CAAC,CAAC2R,CAAC,GAAG3R,CAAC,CAAC2R,CAAC,CAAE;QAEpC,IAAKzS,CAAC,GAAG,MAAM,EAAG;UAEjB,IAAI,CAACzB,CAAC,GAAG,CAAC;UACV,IAAI,CAACM,CAAC,GAAG,CAAC;UACV,IAAI,CAAC2T,CAAC,GAAG,CAAC;QAEX,CAAC,MAAM;UAEN,IAAI,CAACjU,CAAC,GAAGuC,CAAC,CAACvC,CAAC,GAAGyB,CAAC;UAChB,IAAI,CAACnB,CAAC,GAAGiC,CAAC,CAACjC,CAAC,GAAGmB,CAAC;UAChB,IAAI,CAACwS,CAAC,GAAG1R,CAAC,CAAC0R,CAAC,GAAGxS,CAAC;QAEjB;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAAssB,+BAAgC1U,CAAC,EAAG;QAEnC;;QAEA;;QAEA,IAAIwG,KAAK,EAAEtG,CAAC,EAAEM,CAAC,EAAE2T,CAAC,CAAC,CAAC;QACpB,IAAMQ,OAAO,GAAG,IAAI;UAAG;UACtBC,QAAQ,GAAG,GAAG;UAAG;;UAEjB7L,EAAE,GAAG/I,CAAC,CAAC4F,QAAQ;UAEfiP,GAAG,GAAG9L,EAAE,CAAE,CAAC,CAAE;UAAE+L,GAAG,GAAG/L,EAAE,CAAE,CAAC,CAAE;UAAEgM,GAAG,GAAGhM,EAAE,CAAE,CAAC,CAAE;UAC3CiM,GAAG,GAAGjM,EAAE,CAAE,CAAC,CAAE;UAAEkM,GAAG,GAAGlM,EAAE,CAAE,CAAC,CAAE;UAAEmM,GAAG,GAAGnM,EAAE,CAAE,CAAC,CAAE;UAC3CoM,GAAG,GAAGpM,EAAE,CAAE,CAAC,CAAE;UAAEqM,GAAG,GAAGrM,EAAE,CAAE,CAAC,CAAE;UAAEsM,GAAG,GAAGtM,EAAE,CAAE,EAAE,CAAE;QAE7C,IAAO/J,IAAI,CAACgC,GAAG,CAAE8T,GAAG,GAAGE,GAAG,CAAE,GAAGL,OAAO,IAC/B3V,IAAI,CAACgC,GAAG,CAAE+T,GAAG,GAAGI,GAAG,CAAE,GAAGR,OAAS,IACjC3V,IAAI,CAACgC,GAAG,CAAEkU,GAAG,GAAGE,GAAG,CAAE,GAAGT,OAAS,EAAG;UAE1C;UACA;UACA;;UAEA,IAAO3V,IAAI,CAACgC,GAAG,CAAE8T,GAAG,GAAGE,GAAG,CAAE,GAAGJ,QAAQ,IAChC5V,IAAI,CAACgC,GAAG,CAAE+T,GAAG,GAAGI,GAAG,CAAE,GAAGP,QAAU,IAClC5V,IAAI,CAACgC,GAAG,CAAEkU,GAAG,GAAGE,GAAG,CAAE,GAAGR,QAAU,IAClC5V,IAAI,CAACgC,GAAG,CAAE6T,GAAG,GAAGI,GAAG,GAAGI,GAAG,GAAG,CAAC,CAAE,GAAGT,QAAU,EAAG;YAErD;;YAEA,IAAI,CAACpR,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YAEtB,OAAO,IAAI,CAAC,CAAC;UAEd;;UAEA;;UAEAgD,KAAK,GAAGxH,IAAI,CAACC,EAAE;UAEf,IAAMqW,EAAE,GAAG,CAAET,GAAG,GAAG,CAAC,IAAK,CAAC;UAC1B,IAAMU,EAAE,GAAG,CAAEN,GAAG,GAAG,CAAC,IAAK,CAAC;UAC1B,IAAMO,EAAE,GAAG,CAAEH,GAAG,GAAG,CAAC,IAAK,CAAC;UAC1B,IAAMI,EAAE,GAAG,CAAEX,GAAG,GAAGE,GAAG,IAAK,CAAC;UAC5B,IAAMU,EAAE,GAAG,CAAEX,GAAG,GAAGI,GAAG,IAAK,CAAC;UAC5B,IAAMQ,EAAE,GAAG,CAAET,GAAG,GAAGE,GAAG,IAAK,CAAC;UAE5B,IAAOE,EAAE,GAAGC,EAAE,IAAQD,EAAE,GAAGE,EAAI,EAAG;YAEjC;;YAEA,IAAKF,EAAE,GAAGX,OAAO,EAAG;cAEnBzU,CAAC,GAAG,CAAC;cACLM,CAAC,GAAG,WAAW;cACf2T,CAAC,GAAG,WAAW;YAEhB,CAAC,MAAM;cAENjU,CAAC,GAAGlB,IAAI,CAACsH,IAAI,CAAEgP,EAAE,CAAE;cACnB9U,CAAC,GAAGiV,EAAE,GAAGvV,CAAC;cACViU,CAAC,GAAGuB,EAAE,GAAGxV,CAAC;YAEX;UAED,CAAC,MAAM,IAAKqV,EAAE,GAAGC,EAAE,EAAG;YAErB;;YAEA,IAAKD,EAAE,GAAGZ,OAAO,EAAG;cAEnBzU,CAAC,GAAG,WAAW;cACfM,CAAC,GAAG,CAAC;cACL2T,CAAC,GAAG,WAAW;YAEhB,CAAC,MAAM;cAEN3T,CAAC,GAAGxB,IAAI,CAACsH,IAAI,CAAEiP,EAAE,CAAE;cACnBrV,CAAC,GAAGuV,EAAE,GAAGjV,CAAC;cACV2T,CAAC,GAAGwB,EAAE,GAAGnV,CAAC;YAEX;UAED,CAAC,MAAM;YAEN;;YAEA,IAAKgV,EAAE,GAAGb,OAAO,EAAG;cAEnBzU,CAAC,GAAG,WAAW;cACfM,CAAC,GAAG,WAAW;cACf2T,CAAC,GAAG,CAAC;YAEN,CAAC,MAAM;cAENA,CAAC,GAAGnV,IAAI,CAACsH,IAAI,CAAEkP,EAAE,CAAE;cACnBtV,CAAC,GAAGwV,EAAE,GAAGvB,CAAC;cACV3T,CAAC,GAAGmV,EAAE,GAAGxB,CAAC;YAEX;UAED;UAEA,IAAI,CAAC3Q,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAE3N,KAAK,CAAE;UAE1B,OAAO,IAAI,CAAC,CAAC;QAEd;;QAEA;;QAEA,IAAI7E,CAAC,GAAG3C,IAAI,CAACsH,IAAI,CAAE,CAAE8O,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAE,GAC/C,CAAEH,GAAG,GAAGI,GAAG,KAAOJ,GAAG,GAAGI,GAAG,CAAE,GAC7B,CAAEH,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAE,CAAE,CAAC,CAAC;;QAElC,IAAK9V,IAAI,CAACgC,GAAG,CAAEW,CAAC,CAAE,GAAG,KAAK,EAAGA,CAAC,GAAG,CAAC;;QAElC;QACA;;QAEA,IAAI,CAACzB,CAAC,GAAG,CAAEkV,GAAG,GAAGF,GAAG,IAAKvT,CAAC;QAC1B,IAAI,CAACnB,CAAC,GAAG,CAAEuU,GAAG,GAAGI,GAAG,IAAKxT,CAAC;QAC1B,IAAI,CAACwS,CAAC,GAAG,CAAEa,GAAG,GAAGF,GAAG,IAAKnT,CAAC;QAC1B,IAAI,CAACyS,CAAC,GAAGpV,IAAI,CAAC6H,IAAI,CAAE,CAAEgO,GAAG,GAAGI,GAAG,GAAGI,GAAG,GAAG,CAAC,IAAK,CAAC,CAAE;QAEjD,OAAO,IAAI;MAEZ;IAAC;MAAAntB,GAAA;MAAAE,KAAA,EAED,SAAAwX,IAAKkF,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,GAAGlB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACM,CAAC,EAAE4E,CAAC,CAAC5E,CAAC,CAAE;QAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACY,CAAC,EAAEsE,CAAC,CAACtE,CAAC,CAAE;QAChC,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACY,GAAG,CAAE,IAAI,CAACuU,CAAC,EAAErP,CAAC,CAACqP,CAAC,CAAE;QAChC,IAAI,CAACC,CAAC,GAAGpV,IAAI,CAACY,GAAG,CAAE,IAAI,CAACwU,CAAC,EAAEtP,CAAC,CAACsP,CAAC,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAyX,IAAKiF,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACK,CAAC,EAAE4E,CAAC,CAAC5E,CAAC,CAAE;QAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACW,CAAC,EAAEsE,CAAC,CAACtE,CAAC,CAAE;QAChC,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACa,GAAG,CAAE,IAAI,CAACsU,CAAC,EAAErP,CAAC,CAACqP,CAAC,CAAE;QAChC,IAAI,CAACC,CAAC,GAAGpV,IAAI,CAACa,GAAG,CAAE,IAAI,CAACuU,CAAC,EAAEtP,CAAC,CAACsP,CAAC,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAuX,MAAOC,GAAG,EAAEC,GAAG,EAAG;QAEjB;;QAEA,IAAI,CAACK,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACM,CAAC,EAAElB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACK,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;QACrD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACY,CAAC,EAAExB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACW,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;QACrD,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACa,GAAG,CAAED,GAAG,CAACuU,CAAC,EAAEnV,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACsU,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;QACrD,IAAI,CAACC,CAAC,GAAGpV,IAAI,CAACa,GAAG,CAAED,GAAG,CAACwU,CAAC,EAAEpV,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACuU,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;QAErD,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAyd,YAAaC,MAAM,EAAEC,MAAM,EAAG;QAE7B,IAAI,CAAC7F,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAEiG,MAAM,EAAE9G,IAAI,CAACY,GAAG,CAAEmG,MAAM,EAAE,IAAI,CAAC7F,CAAC,CAAE,CAAE;QACvD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAEiG,MAAM,EAAE9G,IAAI,CAACY,GAAG,CAAEmG,MAAM,EAAE,IAAI,CAACvF,CAAC,CAAE,CAAE;QACvD,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACa,GAAG,CAAEiG,MAAM,EAAE9G,IAAI,CAACY,GAAG,CAAEmG,MAAM,EAAE,IAAI,CAACoO,CAAC,CAAE,CAAE;QACvD,IAAI,CAACC,CAAC,GAAGpV,IAAI,CAACa,GAAG,CAAEiG,MAAM,EAAE9G,IAAI,CAACY,GAAG,CAAEmG,MAAM,EAAE,IAAI,CAACqO,CAAC,CAAE,CAAE;QAEvD,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA4d,YAAapG,GAAG,EAAEC,GAAG,EAAG;QAEvB,IAAM7R,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;QAE5B,OAAO,IAAI,CAACyX,YAAY,CAAEzX,MAAM,IAAI,CAAC,CAAE,CAACuX,cAAc,CAAEvG,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE7R,MAAM,CAAE,CAAE,CAAE;MAEnG;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAAkZ,MAAA,EAAQ;QAEP,IAAI,CAACpB,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;QAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;QAC7B,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC6S,CAAC,CAAE;QAC7B,IAAI,CAACC,CAAC,GAAGpV,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC8S,CAAC,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAga,KAAA,EAAO;QAEN,IAAI,CAAClC,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE;QAC5B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE;QAC5B,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC+R,CAAC,CAAE;QAC5B,IAAI,CAACC,CAAC,GAAGpV,IAAI,CAACoD,IAAI,CAAE,IAAI,CAACgS,CAAC,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA4b,MAAA,EAAQ;QAEP,IAAI,CAAC9D,CAAC,GAAGlB,IAAI,CAACgF,KAAK,CAAE,IAAI,CAAC9D,CAAC,CAAE;QAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACgF,KAAK,CAAE,IAAI,CAACxD,CAAC,CAAE;QAC7B,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACgF,KAAK,CAAE,IAAI,CAACmQ,CAAC,CAAE;QAC7B,IAAI,CAACC,CAAC,GAAGpV,IAAI,CAACgF,KAAK,CAAE,IAAI,CAACoQ,CAAC,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA6d,YAAA,EAAc;QAEb,IAAI,CAAC/F,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;QACpE,IAAI,CAACM,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;QACpE,IAAI,CAAC2T,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKnV,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC+R,CAAC,CAAE,GAAGnV,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC6S,CAAC,CAAE;QACpE,IAAI,CAACC,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKpV,IAAI,CAACoD,IAAI,CAAE,IAAI,CAACgS,CAAC,CAAE,GAAGpV,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC8S,CAAC,CAAE;QAEpE,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA8d,OAAA,EAAS;QAER,IAAI,CAAChG,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;QACjB,IAAI,CAACM,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;QACjB,IAAI,CAAC2T,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;QACjB,IAAI,CAACC,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;QAEjB,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA+d,IAAKrB,CAAC,EAAG;QAER,OAAO,IAAI,CAAC5E,CAAC,GAAG4E,CAAC,CAAC5E,CAAC,GAAG,IAAI,CAACM,CAAC,GAAGsE,CAAC,CAACtE,CAAC,GAAG,IAAI,CAAC2T,CAAC,GAAGrP,CAAC,CAACqP,CAAC,GAAG,IAAI,CAACC,CAAC,GAAGtP,CAAC,CAACsP,CAAC;MAEjE;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAie,SAAA,EAAW;QAEV,OAAO,IAAI,CAACnG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC2T,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC;MAE7E;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA4F,OAAA,EAAS;QAER,OAAOgR,IAAI,CAACsH,IAAI,CAAE,IAAI,CAACpG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC2T,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,CAAE;MAE1F;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAme,gBAAA,EAAkB;QAEjB,OAAOvH,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,CAAE,GAAGxB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACmT,CAAC,CAAE,GAAGnV,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACoT,CAAC,CAAE;MAEzF;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA2b,UAAA,EAAY;QAEX,OAAO,IAAI,CAAC0B,YAAY,CAAE,IAAI,CAACzX,MAAM,EAAE,IAAI,CAAC,CAAE;MAE/C;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAA+e,UAAWnZ,MAAM,EAAG;QAEnB,OAAO,IAAI,CAAC+V,SAAS,EAAE,CAACwB,cAAc,CAAEvX,MAAM,CAAE;MAEjD;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAAqY,KAAMqE,CAAC,EAAEsC,KAAK,EAAG;QAEhB,IAAI,CAAClH,CAAC,IAAI,CAAE4E,CAAC,CAAC5E,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKkH,KAAK;QAClC,IAAI,CAAC5G,CAAC,IAAI,CAAEsE,CAAC,CAACtE,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK4G,KAAK;QAClC,IAAI,CAAC+M,CAAC,IAAI,CAAErP,CAAC,CAACqP,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK/M,KAAK;QAClC,IAAI,CAACgN,CAAC,IAAI,CAAEtP,CAAC,CAACsP,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKhN,KAAK;QAElC,OAAO,IAAI;MAEZ;IAAC;MAAAlf,GAAA;MAAAE,KAAA,EAED,SAAAif,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;QAE5B,IAAI,CAAClH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,GAAG,CAAEqH,EAAE,CAACrH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,IAAKkH,KAAK;QACvC,IAAI,CAAC5G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,GAAG,CAAE+G,EAAE,CAAC/G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,IAAK4G,KAAK;QACvC,IAAI,CAAC+M,CAAC,GAAG7M,EAAE,CAAC6M,CAAC,GAAG,CAAE5M,EAAE,CAAC4M,CAAC,GAAG7M,EAAE,CAAC6M,CAAC,IAAK/M,KAAK;QACvC,IAAI,CAACgN,CAAC,GAAG9M,EAAE,CAAC8M,CAAC,GAAG,CAAE7M,EAAE,CAAC6M,CAAC,GAAG9M,EAAE,CAAC8M,CAAC,IAAKhN,KAAK;QAEvC,OAAO,IAAI;MAEZ;IAAC;MAAAlf,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQ1C,CAAC,EAAG;QAEX,OAAWA,CAAC,CAAC5E,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQ4E,CAAC,CAACtE,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMsE,CAAC,CAACqP,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMrP,CAAC,CAACsP,CAAC,KAAK,IAAI,CAACA,CAAG;MAE9F;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAqf,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAACxH,CAAC,GAAGvB,KAAK,CAAE+I,MAAM,CAAE;QACxB,IAAI,CAAClH,CAAC,GAAG7B,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAC5B,IAAI,CAACyM,CAAC,GAAGxV,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAC5B,IAAI,CAAC0M,CAAC,GAAGzV,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAuf,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACxH,CAAC;QACxBvB,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAClH,CAAC;QAC5B7B,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACyM,CAAC;QAC5BxV,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC0M,CAAC;QAE5B,OAAOzV,KAAK;MAEb;IAAC;MAAAzW,GAAA;MAAAE,KAAA,EAED,SAAAwf,oBAAqBC,SAAS,EAAEtJ,KAAK,EAAG;QAEvC,IAAI,CAAC2B,CAAC,GAAG2H,SAAS,CAACC,IAAI,CAAEvJ,KAAK,CAAE;QAChC,IAAI,CAACiC,CAAC,GAAGqH,SAAS,CAACE,IAAI,CAAExJ,KAAK,CAAE;QAChC,IAAI,CAAC4V,CAAC,GAAGtM,SAAS,CAAC+N,IAAI,CAAErX,KAAK,CAAE;QAChC,IAAI,CAAC6V,CAAC,GAAGvM,SAAS,CAACgO,IAAI,CAAEtX,KAAK,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAiX,OAAA,EAAS;QAER,IAAI,CAACa,CAAC,GAAGlB,IAAI,CAACK,MAAM,EAAE;QACtB,IAAI,CAACmB,CAAC,GAAGxB,IAAI,CAACK,MAAM,EAAE;QACtB,IAAI,CAAC8U,CAAC,GAAGnV,IAAI,CAACK,MAAM,EAAE;QACtB,IAAI,CAAC+U,CAAC,GAAGpV,IAAI,CAACK,MAAM,EAAE;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAnX,GAAA,EAAAgsB,iBAAA;MAAA9rB,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAED,SAAApG,MAAA;QAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAgf,OAAA4N,SAAA;UAAA,kBAAAA,SAAA,CAAAzmB,IAAA,GAAAymB,SAAA,CAAA/oB,IAAA;YAAA;cAAA+oB,SAAA,CAAA/oB,IAAA;cAEC,OAAM,IAAI,CAACmT,CAAC;YAAA;cAAA4V,SAAA,CAAA/oB,IAAA;cACZ,OAAM,IAAI,CAACyT,CAAC;YAAA;cAAAsV,SAAA,CAAA/oB,IAAA;cACZ,OAAM,IAAI,CAAConB,CAAC;YAAA;cAAA2B,SAAA,CAAA/oB,IAAA;cACZ,OAAM,IAAI,CAACqnB,CAAC;YAAA;YAAA;cAAA,OAAA0B,SAAA,CAAAtmB,IAAA;UAAA;QAAA,GAAApH,KAAA;MAAA,CAEZ;IAAA;IAAA,OAAA6rB,OAAA;EAAA,EAPE3rB,MAAM,CAACE,QAAQ;EAWnB;AACD;AACA;AACA;AACA;EAJC,IAKMutB,iBAAiB,0BAAAC,iBAAA;IAAAxE,SAAA,CAAAuE,iBAAA,EAAAC,iBAAA;IAAA,IAAAC,OAAA,GAAAvE,YAAA,CAAAqE,iBAAA;IAEtB,SAAAA,kBAAarG,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEuG,OAAO,GAAG,CAAC,CAAC,EAAG;MAAA,IAAAC,MAAA;MAAA3lB,eAAA,OAAAulB,iBAAA;MAElDI,MAAA,GAAAF,OAAA,CAAA/rB,IAAA;MAEAisB,MAAA,CAAKC,mBAAmB,GAAG,IAAI;MAE/BD,MAAA,CAAKzG,KAAK,GAAGA,KAAK;MAClByG,MAAA,CAAKxG,MAAM,GAAGA,MAAM;MACpBwG,MAAA,CAAKE,KAAK,GAAG,CAAC;MAEdF,MAAA,CAAKG,OAAO,GAAG,IAAIrC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEvE,KAAK,EAAEC,MAAM,CAAE;MACjDwG,MAAA,CAAKI,WAAW,GAAG,KAAK;MAExBJ,MAAA,CAAKK,QAAQ,GAAG,IAAIvC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEvE,KAAK,EAAEC,MAAM,CAAE;MAElD,IAAMN,KAAK,GAAG;QAAEK,KAAK,EAAEA,KAAK;QAAEC,MAAM,EAAEA,MAAM;QAAE0G,KAAK,EAAE;MAAE,CAAC;MAExDF,MAAA,CAAKM,OAAO,GAAG,IAAInF,OAAO,CAAEjC,KAAK,EAAE6G,OAAO,CAACtE,OAAO,EAAEsE,OAAO,CAACpE,KAAK,EAAEoE,OAAO,CAACnE,KAAK,EAAEmE,OAAO,CAAClE,SAAS,EAAEkE,OAAO,CAACjE,SAAS,EAAEiE,OAAO,CAAChE,MAAM,EAAEgE,OAAO,CAACjsB,IAAI,EAAEisB,OAAO,CAAC/D,UAAU,EAAE+D,OAAO,CAAC7D,QAAQ,CAAE;MAC5L8D,MAAA,CAAKM,OAAO,CAACpD,qBAAqB,GAAG,IAAI;MAEzC8C,MAAA,CAAKM,OAAO,CAACxD,KAAK,GAAG,KAAK;MAC1BkD,MAAA,CAAKM,OAAO,CAAC1D,eAAe,GAAGmD,OAAO,CAACnD,eAAe,KAAKrmB,SAAS,GAAGwpB,OAAO,CAACnD,eAAe,GAAG,KAAK;MACtGoD,MAAA,CAAKM,OAAO,CAAC7D,cAAc,GAAGsD,OAAO,CAACtD,cAAc,KAAKlmB,SAAS,GAAGwpB,OAAO,CAACtD,cAAc,GAAG,IAAI;MAClGuD,MAAA,CAAKM,OAAO,CAACxE,SAAS,GAAGiE,OAAO,CAACjE,SAAS,KAAKvlB,SAAS,GAAGwpB,OAAO,CAACjE,SAAS,GAAGhb,YAAY;MAE3Fkf,MAAA,CAAKO,WAAW,GAAGR,OAAO,CAACQ,WAAW,KAAKhqB,SAAS,GAAGwpB,OAAO,CAACQ,WAAW,GAAG,IAAI;MACjFP,MAAA,CAAKQ,aAAa,GAAGT,OAAO,CAACS,aAAa,KAAKjqB,SAAS,GAAGwpB,OAAO,CAACS,aAAa,GAAG,KAAK;MAExFR,MAAA,CAAKS,YAAY,GAAGV,OAAO,CAACU,YAAY,KAAKlqB,SAAS,GAAGwpB,OAAO,CAACU,YAAY,GAAG,IAAI;MAEpFT,MAAA,CAAKU,OAAO,GAAGX,OAAO,CAACW,OAAO,KAAKnqB,SAAS,GAAGwpB,OAAO,CAACW,OAAO,GAAG,CAAC;MAAC,OAAAV,MAAA;IAEpE;IAACnlB,YAAA,CAAA+kB,iBAAA;MAAA7tB,GAAA;MAAAE,KAAA,EAED,SAAA0uB,QAASpH,KAAK,EAAEC,MAAM,EAAE0G,KAAK,GAAG,CAAC,EAAG;QAEnC,IAAK,IAAI,CAAC3G,KAAK,KAAKA,KAAK,IAAI,IAAI,CAACC,MAAM,KAAKA,MAAM,IAAI,IAAI,CAAC0G,KAAK,KAAKA,KAAK,EAAG;UAE7E,IAAI,CAAC3G,KAAK,GAAGA,KAAK;UAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;UACpB,IAAI,CAAC0G,KAAK,GAAGA,KAAK;UAElB,IAAI,CAACI,OAAO,CAACpH,KAAK,CAACK,KAAK,GAAGA,KAAK;UAChC,IAAI,CAAC+G,OAAO,CAACpH,KAAK,CAACM,MAAM,GAAGA,MAAM;UAClC,IAAI,CAAC8G,OAAO,CAACpH,KAAK,CAACgH,KAAK,GAAGA,KAAK;UAEhC,IAAI,CAACvC,OAAO,EAAE;QAEf;QAEA,IAAI,CAAC0C,QAAQ,CAAChT,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEkM,KAAK,EAAEC,MAAM,CAAE;QACxC,IAAI,CAAC2G,OAAO,CAAC9S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEkM,KAAK,EAAEC,MAAM,CAAE;MAExC;IAAC;MAAAznB,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd,IAAI,CAAC/C,KAAK,GAAG+C,MAAM,CAAC/C,KAAK;QACzB,IAAI,CAACC,MAAM,GAAG8C,MAAM,CAAC9C,MAAM;QAC3B,IAAI,CAAC0G,KAAK,GAAG5D,MAAM,CAAC4D,KAAK;QAEzB,IAAI,CAACG,QAAQ,CAAC3R,IAAI,CAAE4N,MAAM,CAAC+D,QAAQ,CAAE;QAErC,IAAI,CAACC,OAAO,GAAGhE,MAAM,CAACgE,OAAO,CAAC7R,KAAK,EAAE;QACrC,IAAI,CAAC6R,OAAO,CAACpD,qBAAqB,GAAG,IAAI;;QAEzC;;QAEA,IAAMhE,KAAK,GAAGznB,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAACgE,OAAO,CAACpH,KAAK,CAAE;QACvD,IAAI,CAACoH,OAAO,CAAChE,MAAM,GAAG,IAAIlC,MAAM,CAAElB,KAAK,CAAE;QAEzC,IAAI,CAACqH,WAAW,GAAGjE,MAAM,CAACiE,WAAW;QACrC,IAAI,CAACC,aAAa,GAAGlE,MAAM,CAACkE,aAAa;QAEzC,IAAKlE,MAAM,CAACmE,YAAY,KAAK,IAAI,EAAG,IAAI,CAACA,YAAY,GAAGnE,MAAM,CAACmE,YAAY,CAAChS,KAAK,EAAE;QAEnF,IAAI,CAACiS,OAAO,GAAGpE,MAAM,CAACoE,OAAO;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAA3uB,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAACrV,aAAa,CAAE;UAAExU,IAAI,EAAE;QAAU,CAAC,CAAE;MAE1C;IAAC;IAAA,OAAA8rB,iBAAA;EAAA,EA9F8BjY,eAAe;EAAA,IAkGzCkZ,gBAAgB,0BAAAC,QAAA;IAAAzF,SAAA,CAAAwF,gBAAA,EAAAC,QAAA;IAAA,IAAAC,OAAA,GAAAxF,YAAA,CAAAsF,gBAAA;IAErB,SAAAA,iBAAa1G,IAAI,GAAG,IAAI,EAAEZ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE0G,KAAK,GAAG,CAAC,EAAG;MAAA,IAAAc,MAAA;MAAA3mB,eAAA,OAAAwmB,gBAAA;MAE5DG,MAAA,GAAAD,OAAA,CAAAhtB,IAAA,OAAO,IAAI;MAEXitB,MAAA,CAAKC,kBAAkB,GAAG,IAAI;MAE9BD,MAAA,CAAK9H,KAAK,GAAG;QAAEiB,IAAI,EAAJA,IAAI;QAAEZ,KAAK,EAALA,KAAK;QAAEC,MAAM,EAANA,MAAM;QAAE0G,KAAK,EAALA;MAAM,CAAC;MAE3Cc,MAAA,CAAKnF,SAAS,GAAGpb,aAAa;MAC9BugB,MAAA,CAAKlF,SAAS,GAAGrb,aAAa;MAE9BugB,MAAA,CAAKE,KAAK,GAAG3gB,mBAAmB;MAEhCygB,MAAA,CAAKpE,eAAe,GAAG,KAAK;MAC5BoE,MAAA,CAAKlE,KAAK,GAAG,KAAK;MAClBkE,MAAA,CAAKjE,eAAe,GAAG,CAAC;MAAC,OAAAiE,MAAA;IAE1B;IAAC,OAAAnmB,YAAA,CAAAgmB,gBAAA;EAAA,EAnB6B1F,OAAO;EAAA,IAuBhCgG,sBAAsB,0BAAAC,kBAAA;IAAA/F,SAAA,CAAA8F,sBAAA,EAAAC,kBAAA;IAAA,IAAAC,OAAA,GAAA9F,YAAA,CAAA4F,sBAAA;IAE3B,SAAAA,uBAAa5H,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE0G,KAAK,GAAG,CAAC,EAAG;MAAA,IAAAoB,MAAA;MAAAjnB,eAAA,OAAA8mB,sBAAA;MAE/CG,MAAA,GAAAD,OAAA,CAAAttB,IAAA,OAAOwlB,KAAK,EAAEC,MAAM;MAEpB8H,MAAA,CAAKC,wBAAwB,GAAG,IAAI;MAEpCD,MAAA,CAAKpB,KAAK,GAAGA,KAAK;MAElBoB,MAAA,CAAKhB,OAAO,GAAG,IAAIO,gBAAgB,CAAE,IAAI,EAAEtH,KAAK,EAAEC,MAAM,EAAE0G,KAAK,CAAE;MAEjEoB,MAAA,CAAKhB,OAAO,CAACpD,qBAAqB,GAAG,IAAI;MAAC,OAAAoE,MAAA;IAE3C;IAAC,OAAAzmB,YAAA,CAAAsmB,sBAAA;EAAA,EAdmCvB,iBAAiB;EAAA,IAkBhD4B,aAAa,0BAAAC,SAAA;IAAApG,SAAA,CAAAmG,aAAA,EAAAC,SAAA;IAAA,IAAAC,OAAA,GAAAnG,YAAA,CAAAiG,aAAA;IAElB,SAAAA,cAAarH,IAAI,GAAG,IAAI,EAAEZ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE0G,KAAK,GAAG,CAAC,EAAG;MAAA,IAAAyB,MAAA;MAAAtnB,eAAA,OAAAmnB,aAAA;MAE5D;MACA;MACA;MACA;MACA;MACA;MACA;;MAEAG,MAAA,GAAAD,OAAA,CAAA3tB,IAAA,OAAO,IAAI;MAEX4tB,MAAA,CAAKC,eAAe,GAAG,IAAI;MAE3BD,MAAA,CAAKzI,KAAK,GAAG;QAAEiB,IAAI,EAAJA,IAAI;QAAEZ,KAAK,EAALA,KAAK;QAAEC,MAAM,EAANA,MAAM;QAAE0G,KAAK,EAALA;MAAM,CAAC;MAE3CyB,MAAA,CAAK9F,SAAS,GAAGpb,aAAa;MAC9BkhB,MAAA,CAAK7F,SAAS,GAAGrb,aAAa;MAE9BkhB,MAAA,CAAKT,KAAK,GAAG3gB,mBAAmB;MAEhCohB,MAAA,CAAK/E,eAAe,GAAG,KAAK;MAC5B+E,MAAA,CAAK7E,KAAK,GAAG,KAAK;MAClB6E,MAAA,CAAK5E,eAAe,GAAG,CAAC;MAAC,OAAA4E,MAAA;IAE1B;IAAC,OAAA9mB,YAAA,CAAA2mB,aAAA;EAAA,EA3B0BrG,OAAO;EAAA,IA+B7B0G,mBAAmB,0BAAAC,mBAAA;IAAAzG,SAAA,CAAAwG,mBAAA,EAAAC,mBAAA;IAAA,IAAAC,OAAA,GAAAxG,YAAA,CAAAsG,mBAAA;IAExB,SAAAA,oBAAatI,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE0G,KAAK,GAAG,CAAC,EAAG;MAAA,IAAA8B,MAAA;MAAA3nB,eAAA,OAAAwnB,mBAAA;MAE/CG,MAAA,GAAAD,OAAA,CAAAhuB,IAAA,OAAOwlB,KAAK,EAAEC,MAAM;MAEpBwI,MAAA,CAAKC,qBAAqB,GAAG,IAAI;MAEjCD,MAAA,CAAK9B,KAAK,GAAGA,KAAK;MAElB8B,MAAA,CAAK1B,OAAO,GAAG,IAAIkB,aAAa,CAAE,IAAI,EAAEjI,KAAK,EAAEC,MAAM,EAAE0G,KAAK,CAAE;MAE9D8B,MAAA,CAAK1B,OAAO,CAACpD,qBAAqB,GAAG,IAAI;MAAC,OAAA8E,MAAA;IAE3C;IAAC,OAAAnnB,YAAA,CAAAgnB,mBAAA;EAAA,EAdgCjC,iBAAiB;EAAA,IAkB7CsC,0BAA0B,0BAAAC,mBAAA;IAAA9G,SAAA,CAAA6G,0BAAA,EAAAC,mBAAA;IAAA,IAAAC,OAAA,GAAA7G,YAAA,CAAA2G,0BAAA;IAE/B,SAAAA,2BAAa3I,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE6I,KAAK,GAAG,CAAC,EAAEtC,OAAO,GAAG,CAAC,CAAC,EAAG;MAAA,IAAAuC,MAAA;MAAAjoB,eAAA,OAAA6nB,0BAAA;MAE7DI,MAAA,GAAAF,OAAA,CAAAruB,IAAA,OAAOwlB,KAAK,EAAEC,MAAM,EAAEuG,OAAO;MAE7BuC,MAAA,CAAKC,4BAA4B,GAAG,IAAI;MAExC,IAAMjC,OAAO,GAAGgC,MAAA,CAAKhC,OAAO;MAE5BgC,MAAA,CAAKhC,OAAO,GAAG,EAAE;MAEjB,KAAM,IAAIxoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuqB,KAAK,EAAEvqB,CAAC,EAAG,EAAG;QAElCwqB,MAAA,CAAKhC,OAAO,CAAExoB,CAAC,CAAE,GAAGwoB,OAAO,CAAC7R,KAAK,EAAE;QACnC6T,MAAA,CAAKhC,OAAO,CAAExoB,CAAC,CAAE,CAAColB,qBAAqB,GAAG,IAAI;MAE/C;MAAC,OAAAoF,MAAA;IAEF;IAACznB,YAAA,CAAAqnB,0BAAA;MAAAnwB,GAAA;MAAAE,KAAA,EAED,SAAA0uB,QAASpH,KAAK,EAAEC,MAAM,EAAE0G,KAAK,GAAG,CAAC,EAAG;QAEnC,IAAK,IAAI,CAAC3G,KAAK,KAAKA,KAAK,IAAI,IAAI,CAACC,MAAM,KAAKA,MAAM,IAAI,IAAI,CAAC0G,KAAK,KAAKA,KAAK,EAAG;UAE7E,IAAI,CAAC3G,KAAK,GAAGA,KAAK;UAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;UACpB,IAAI,CAAC0G,KAAK,GAAGA,KAAK;UAElB,KAAM,IAAIpoB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG,IAAI,CAAClC,OAAO,CAACzoB,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;YAEzD,IAAI,CAACwoB,OAAO,CAAExoB,CAAC,CAAE,CAACohB,KAAK,CAACK,KAAK,GAAGA,KAAK;YACrC,IAAI,CAAC+G,OAAO,CAAExoB,CAAC,CAAE,CAACohB,KAAK,CAACM,MAAM,GAAGA,MAAM;YACvC,IAAI,CAAC8G,OAAO,CAAExoB,CAAC,CAAE,CAACohB,KAAK,CAACgH,KAAK,GAAGA,KAAK;UAEtC;UAEA,IAAI,CAACvC,OAAO,EAAE;QAEf;QAEA,IAAI,CAAC0C,QAAQ,CAAChT,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEkM,KAAK,EAAEC,MAAM,CAAE;QACxC,IAAI,CAAC2G,OAAO,CAAC9S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEkM,KAAK,EAAEC,MAAM,CAAE;QAEvC,OAAO,IAAI;MAEZ;IAAC;MAAAznB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd,IAAI,CAACqB,OAAO,EAAE;QAEd,IAAI,CAACpE,KAAK,GAAG+C,MAAM,CAAC/C,KAAK;QACzB,IAAI,CAACC,MAAM,GAAG8C,MAAM,CAAC9C,MAAM;QAC3B,IAAI,CAAC0G,KAAK,GAAG5D,MAAM,CAAC4D,KAAK;QAEzB,IAAI,CAACG,QAAQ,CAAChT,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACkM,KAAK,EAAE,IAAI,CAACC,MAAM,CAAE;QAClD,IAAI,CAAC2G,OAAO,CAAC9S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACkM,KAAK,EAAE,IAAI,CAACC,MAAM,CAAE;QAEjD,IAAI,CAAC+G,WAAW,GAAGjE,MAAM,CAACiE,WAAW;QACrC,IAAI,CAACC,aAAa,GAAGlE,MAAM,CAACkE,aAAa;QAEzC,IAAKlE,MAAM,CAACmE,YAAY,KAAK,IAAI,EAAG,IAAI,CAACA,YAAY,GAAGnE,MAAM,CAACmE,YAAY,CAAChS,KAAK,EAAE;QAEnF,IAAI,CAAC6R,OAAO,CAACzoB,MAAM,GAAG,CAAC;QAEvB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGlG,MAAM,CAACgE,OAAO,CAACzoB,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAE3D,IAAI,CAACwoB,OAAO,CAAExoB,CAAC,CAAE,GAAGwkB,MAAM,CAACgE,OAAO,CAAExoB,CAAC,CAAE,CAAC2W,KAAK,EAAE;UAC/C,IAAI,CAAC6R,OAAO,CAAExoB,CAAC,CAAE,CAAColB,qBAAqB,GAAG,IAAI;QAE/C;QAEA,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAgF,0BAAA;EAAA,EA3EuCtC,iBAAiB;EAAA,IA+EpD6C,UAAU,0BAAAC,iBAAA;IAEf,SAAAD,WAAa1Y,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE2T,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAG;MAAA5jB,eAAA,OAAAooB,UAAA;MAEzC,IAAI,CAACE,YAAY,GAAG,IAAI;MAExB,IAAI,CAACC,EAAE,GAAG7Y,CAAC;MACX,IAAI,CAAC8Y,EAAE,GAAGxY,CAAC;MACX,IAAI,CAACyY,EAAE,GAAG9E,CAAC;MACX,IAAI,CAAC+E,EAAE,GAAG9E,CAAC;IAEZ;IAACpjB,YAAA,CAAA4nB,UAAA;MAAA1wB,GAAA;MAAAmc,GAAA,EAuGD,SAAAA,IAAA,EAAQ;QAEP,OAAO,IAAI,CAAC0U,EAAE;MAEf,CAAC;MAAAvV,GAAA,EAED,SAAAA,IAAOpb,KAAK,EAAG;QAEd,IAAI,CAAC2wB,EAAE,GAAG3wB,KAAK;QACf,IAAI,CAAC+wB,iBAAiB,EAAE;MAEzB;IAAC;MAAAjxB,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAQ;QAEP,OAAO,IAAI,CAAC2U,EAAE;MAEf,CAAC;MAAAxV,GAAA,EAED,SAAAA,IAAOpb,KAAK,EAAG;QAEd,IAAI,CAAC4wB,EAAE,GAAG5wB,KAAK;QACf,IAAI,CAAC+wB,iBAAiB,EAAE;MAEzB;IAAC;MAAAjxB,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAQ;QAEP,OAAO,IAAI,CAAC4U,EAAE;MAEf,CAAC;MAAAzV,GAAA,EAED,SAAAA,IAAOpb,KAAK,EAAG;QAEd,IAAI,CAAC6wB,EAAE,GAAG7wB,KAAK;QACf,IAAI,CAAC+wB,iBAAiB,EAAE;MAEzB;IAAC;MAAAjxB,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAQ;QAEP,OAAO,IAAI,CAAC6U,EAAE;MAEf,CAAC;MAAA1V,GAAA,EAED,SAAAA,IAAOpb,KAAK,EAAG;QAEd,IAAI,CAAC8wB,EAAE,GAAG9wB,KAAK;QACf,IAAI,CAAC+wB,iBAAiB,EAAE;MAEzB;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKtD,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAEC,CAAC,EAAG;QAEjB,IAAI,CAAC2E,EAAE,GAAG7Y,CAAC;QACX,IAAI,CAAC8Y,EAAE,GAAGxY,CAAC;QACX,IAAI,CAACyY,EAAE,GAAG9E,CAAC;QACX,IAAI,CAAC+E,EAAE,GAAG9E,CAAC;QAEX,IAAI,CAAC+E,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,CAAE,IAAI,CAACyqB,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,CAAE;MAElE;IAAC;MAAAhxB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAMuU,UAAU,EAAG;QAElB,IAAI,CAACL,EAAE,GAAGK,UAAU,CAAClZ,CAAC;QACtB,IAAI,CAAC8Y,EAAE,GAAGI,UAAU,CAAC5Y,CAAC;QACtB,IAAI,CAACyY,EAAE,GAAGG,UAAU,CAACjF,CAAC;QACtB,IAAI,CAAC+E,EAAE,GAAGE,UAAU,CAAChF,CAAC;QAEtB,IAAI,CAAC+E,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAixB,aAAcC,KAAK,EAAEC,MAAM,EAAG;QAE7B,IAAMrZ,CAAC,GAAGoZ,KAAK,CAACP,EAAE;UAAEvY,CAAC,GAAG8Y,KAAK,CAACN,EAAE;UAAE7E,CAAC,GAAGmF,KAAK,CAACL,EAAE;UAAEpW,KAAK,GAAGyW,KAAK,CAACE,MAAM;;QAEpE;QACA;QACA;;QAEA,IAAM1W,GAAG,GAAG9D,IAAI,CAAC8D,GAAG;QACpB,IAAMC,GAAG,GAAG/D,IAAI,CAAC+D,GAAG;QAEpB,IAAM0W,EAAE,GAAG3W,GAAG,CAAE5C,CAAC,GAAG,CAAC,CAAE;QACvB,IAAM8C,EAAE,GAAGF,GAAG,CAAEtC,CAAC,GAAG,CAAC,CAAE;QACvB,IAAMkZ,EAAE,GAAG5W,GAAG,CAAEqR,CAAC,GAAG,CAAC,CAAE;QAEvB,IAAMwF,EAAE,GAAG5W,GAAG,CAAE7C,CAAC,GAAG,CAAC,CAAE;QACvB,IAAM+C,EAAE,GAAGF,GAAG,CAAEvC,CAAC,GAAG,CAAC,CAAE;QACvB,IAAMoZ,EAAE,GAAG7W,GAAG,CAAEoR,CAAC,GAAG,CAAC,CAAE;QAEvB,QAAStR,KAAK;UAEb,KAAK,KAAK;YACT,IAAI,CAACkW,EAAE,GAAGY,EAAE,GAAG3W,EAAE,GAAG0W,EAAE,GAAGD,EAAE,GAAGxW,EAAE,GAAG2W,EAAE;YACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGxW,EAAE,GAAGyW,EAAE,GAAGC,EAAE,GAAG3W,EAAE,GAAG4W,EAAE;YACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAGzW,EAAE,GAAG4W,EAAE,GAAGD,EAAE,GAAG1W,EAAE,GAAGyW,EAAE;YACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAGzW,EAAE,GAAG0W,EAAE,GAAGC,EAAE,GAAG1W,EAAE,GAAG2W,EAAE;YACrC;UAED,KAAK,KAAK;YACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG3W,EAAE,GAAG0W,EAAE,GAAGD,EAAE,GAAGxW,EAAE,GAAG2W,EAAE;YACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGxW,EAAE,GAAGyW,EAAE,GAAGC,EAAE,GAAG3W,EAAE,GAAG4W,EAAE;YACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAGzW,EAAE,GAAG4W,EAAE,GAAGD,EAAE,GAAG1W,EAAE,GAAGyW,EAAE;YACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAGzW,EAAE,GAAG0W,EAAE,GAAGC,EAAE,GAAG1W,EAAE,GAAG2W,EAAE;YACrC;UAED,KAAK,KAAK;YACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG3W,EAAE,GAAG0W,EAAE,GAAGD,EAAE,GAAGxW,EAAE,GAAG2W,EAAE;YACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGxW,EAAE,GAAGyW,EAAE,GAAGC,EAAE,GAAG3W,EAAE,GAAG4W,EAAE;YACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAGzW,EAAE,GAAG4W,EAAE,GAAGD,EAAE,GAAG1W,EAAE,GAAGyW,EAAE;YACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAGzW,EAAE,GAAG0W,EAAE,GAAGC,EAAE,GAAG1W,EAAE,GAAG2W,EAAE;YACrC;UAED,KAAK,KAAK;YACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG3W,EAAE,GAAG0W,EAAE,GAAGD,EAAE,GAAGxW,EAAE,GAAG2W,EAAE;YACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGxW,EAAE,GAAGyW,EAAE,GAAGC,EAAE,GAAG3W,EAAE,GAAG4W,EAAE;YACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAGzW,EAAE,GAAG4W,EAAE,GAAGD,EAAE,GAAG1W,EAAE,GAAGyW,EAAE;YACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAGzW,EAAE,GAAG0W,EAAE,GAAGC,EAAE,GAAG1W,EAAE,GAAG2W,EAAE;YACrC;UAED,KAAK,KAAK;YACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG3W,EAAE,GAAG0W,EAAE,GAAGD,EAAE,GAAGxW,EAAE,GAAG2W,EAAE;YACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGxW,EAAE,GAAGyW,EAAE,GAAGC,EAAE,GAAG3W,EAAE,GAAG4W,EAAE;YACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAGzW,EAAE,GAAG4W,EAAE,GAAGD,EAAE,GAAG1W,EAAE,GAAGyW,EAAE;YACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAGzW,EAAE,GAAG0W,EAAE,GAAGC,EAAE,GAAG1W,EAAE,GAAG2W,EAAE;YACrC;UAED,KAAK,KAAK;YACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG3W,EAAE,GAAG0W,EAAE,GAAGD,EAAE,GAAGxW,EAAE,GAAG2W,EAAE;YACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGxW,EAAE,GAAGyW,EAAE,GAAGC,EAAE,GAAG3W,EAAE,GAAG4W,EAAE;YACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAGzW,EAAE,GAAG4W,EAAE,GAAGD,EAAE,GAAG1W,EAAE,GAAGyW,EAAE;YACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAGzW,EAAE,GAAG0W,EAAE,GAAGC,EAAE,GAAG1W,EAAE,GAAG2W,EAAE;YACrC;UAED;YACCjoB,OAAO,CAACC,IAAI,CAAE,kEAAkE,GAAGiR,KAAK,CAAE;QAAC;QAI7F,IAAK0W,MAAM,KAAK,KAAK,EAAG,IAAI,CAACJ,iBAAiB,EAAE;QAEhD,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAyxB,iBAAkBC,IAAI,EAAEtT,KAAK,EAAG;QAE/B;;QAEA;;QAEA,IAAMuT,SAAS,GAAGvT,KAAK,GAAG,CAAC;UAAE7E,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEgX,SAAS,CAAE;QAEtD,IAAI,CAAChB,EAAE,GAAGe,IAAI,CAAC5Z,CAAC,GAAGyB,CAAC;QACpB,IAAI,CAACqX,EAAE,GAAGc,IAAI,CAACtZ,CAAC,GAAGmB,CAAC;QACpB,IAAI,CAACsX,EAAE,GAAGa,IAAI,CAAC3F,CAAC,GAAGxS,CAAC;QACpB,IAAI,CAACuX,EAAE,GAAGla,IAAI,CAAC8D,GAAG,CAAEiX,SAAS,CAAE;QAE/B,IAAI,CAACZ,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAA4xB,sBAAuBha,CAAC,EAAG;QAE1B;;QAEA;;QAEA,IAAM+I,EAAE,GAAG/I,CAAC,CAAC4F,QAAQ;UAEpBiP,GAAG,GAAG9L,EAAE,CAAE,CAAC,CAAE;UAAE+L,GAAG,GAAG/L,EAAE,CAAE,CAAC,CAAE;UAAEgM,GAAG,GAAGhM,EAAE,CAAE,CAAC,CAAE;UAC3CiM,GAAG,GAAGjM,EAAE,CAAE,CAAC,CAAE;UAAEkM,GAAG,GAAGlM,EAAE,CAAE,CAAC,CAAE;UAAEmM,GAAG,GAAGnM,EAAE,CAAE,CAAC,CAAE;UAC3CoM,GAAG,GAAGpM,EAAE,CAAE,CAAC,CAAE;UAAEqM,GAAG,GAAGrM,EAAE,CAAE,CAAC,CAAE;UAAEsM,GAAG,GAAGtM,EAAE,CAAE,EAAE,CAAE;UAE5CkR,KAAK,GAAGpF,GAAG,GAAGI,GAAG,GAAGI,GAAG;QAExB,IAAK4E,KAAK,GAAG,CAAC,EAAG;UAEhB,IAAMtY,CAAC,GAAG,GAAG,GAAG3C,IAAI,CAACsH,IAAI,CAAE2T,KAAK,GAAG,GAAG,CAAE;UAExC,IAAI,CAACf,EAAE,GAAG,IAAI,GAAGvX,CAAC;UAClB,IAAI,CAACoX,EAAE,GAAG,CAAE3D,GAAG,GAAGF,GAAG,IAAKvT,CAAC;UAC3B,IAAI,CAACqX,EAAE,GAAG,CAAEjE,GAAG,GAAGI,GAAG,IAAKxT,CAAC;UAC3B,IAAI,CAACsX,EAAE,GAAG,CAAEjE,GAAG,GAAGF,GAAG,IAAKnT,CAAC;QAE5B,CAAC,MAAM,IAAKkT,GAAG,GAAGI,GAAG,IAAIJ,GAAG,GAAGQ,GAAG,EAAG;UAEpC,IAAM1T,EAAC,GAAG,GAAG,GAAG3C,IAAI,CAACsH,IAAI,CAAE,GAAG,GAAGuO,GAAG,GAAGI,GAAG,GAAGI,GAAG,CAAE;UAElD,IAAI,CAAC6D,EAAE,GAAG,CAAE9D,GAAG,GAAGF,GAAG,IAAKvT,EAAC;UAC3B,IAAI,CAACoX,EAAE,GAAG,IAAI,GAAGpX,EAAC;UAClB,IAAI,CAACqX,EAAE,GAAG,CAAElE,GAAG,GAAGE,GAAG,IAAKrT,EAAC;UAC3B,IAAI,CAACsX,EAAE,GAAG,CAAElE,GAAG,GAAGI,GAAG,IAAKxT,EAAC;QAE5B,CAAC,MAAM,IAAKsT,GAAG,GAAGI,GAAG,EAAG;UAEvB,IAAM1T,GAAC,GAAG,GAAG,GAAG3C,IAAI,CAACsH,IAAI,CAAE,GAAG,GAAG2O,GAAG,GAAGJ,GAAG,GAAGQ,GAAG,CAAE;UAElD,IAAI,CAAC6D,EAAE,GAAG,CAAEnE,GAAG,GAAGI,GAAG,IAAKxT,GAAC;UAC3B,IAAI,CAACoX,EAAE,GAAG,CAAEjE,GAAG,GAAGE,GAAG,IAAKrT,GAAC;UAC3B,IAAI,CAACqX,EAAE,GAAG,IAAI,GAAGrX,GAAC;UAClB,IAAI,CAACsX,EAAE,GAAG,CAAE/D,GAAG,GAAGE,GAAG,IAAKzT,GAAC;QAE5B,CAAC,MAAM;UAEN,IAAMA,GAAC,GAAG,GAAG,GAAG3C,IAAI,CAACsH,IAAI,CAAE,GAAG,GAAG+O,GAAG,GAAGR,GAAG,GAAGI,GAAG,CAAE;UAElD,IAAI,CAACiE,EAAE,GAAG,CAAElE,GAAG,GAAGF,GAAG,IAAKnT,GAAC;UAC3B,IAAI,CAACoX,EAAE,GAAG,CAAEhE,GAAG,GAAGI,GAAG,IAAKxT,GAAC;UAC3B,IAAI,CAACqX,EAAE,GAAG,CAAE9D,GAAG,GAAGE,GAAG,IAAKzT,GAAC;UAC3B,IAAI,CAACsX,EAAE,GAAG,IAAI,GAAGtX,GAAC;QAEnB;QAEA,IAAI,CAACwX,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAA8xB,mBAAoBC,KAAK,EAAEC,GAAG,EAAG;QAEhC;;QAEA,IAAItO,CAAC,GAAGqO,KAAK,CAAChU,GAAG,CAAEiU,GAAG,CAAE,GAAG,CAAC;QAE5B,IAAKtO,CAAC,GAAGpa,MAAM,CAAC2oB,OAAO,EAAG;UAEzB;;UAEAvO,CAAC,GAAG,CAAC;UAEL,IAAK9M,IAAI,CAACgC,GAAG,CAAEmZ,KAAK,CAACja,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAEmZ,KAAK,CAAChG,CAAC,CAAE,EAAG;YAEhD,IAAI,CAAC4E,EAAE,GAAG,CAAEoB,KAAK,CAAC3Z,CAAC;YACnB,IAAI,CAACwY,EAAE,GAAGmB,KAAK,CAACja,CAAC;YACjB,IAAI,CAAC+Y,EAAE,GAAG,CAAC;YACX,IAAI,CAACC,EAAE,GAAGpN,CAAC;UAEZ,CAAC,MAAM;YAEN,IAAI,CAACiN,EAAE,GAAG,CAAC;YACX,IAAI,CAACC,EAAE,GAAG,CAAEmB,KAAK,CAAChG,CAAC;YACnB,IAAI,CAAC8E,EAAE,GAAGkB,KAAK,CAAC3Z,CAAC;YACjB,IAAI,CAAC0Y,EAAE,GAAGpN,CAAC;UAEZ;QAED,CAAC,MAAM;UAEN;;UAEA,IAAI,CAACiN,EAAE,GAAGoB,KAAK,CAAC3Z,CAAC,GAAG4Z,GAAG,CAACjG,CAAC,GAAGgG,KAAK,CAAChG,CAAC,GAAGiG,GAAG,CAAC5Z,CAAC;UAC3C,IAAI,CAACwY,EAAE,GAAGmB,KAAK,CAAChG,CAAC,GAAGiG,GAAG,CAACla,CAAC,GAAGia,KAAK,CAACja,CAAC,GAAGka,GAAG,CAACjG,CAAC;UAC3C,IAAI,CAAC8E,EAAE,GAAGkB,KAAK,CAACja,CAAC,GAAGka,GAAG,CAAC5Z,CAAC,GAAG2Z,KAAK,CAAC3Z,CAAC,GAAG4Z,GAAG,CAACla,CAAC;UAC3C,IAAI,CAACgZ,EAAE,GAAGpN,CAAC;QAEZ;QAEA,OAAO,IAAI,CAAC/H,SAAS,EAAE;MAExB;IAAC;MAAA7b,GAAA;MAAAE,KAAA,EAED,SAAAse,QAASjE,CAAC,EAAG;QAEZ,OAAO,CAAC,GAAGzD,IAAI,CAAC6H,IAAI,CAAE7H,IAAI,CAACgC,GAAG,CAAErB,KAAK,CAAE,IAAI,CAACwG,GAAG,CAAE1D,CAAC,CAAE,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAE;MAEnE;IAAC;MAAAva,GAAA;MAAAE,KAAA,EAED,SAAAkyB,cAAe7X,CAAC,EAAE8X,IAAI,EAAG;QAExB,IAAM/T,KAAK,GAAG,IAAI,CAACE,OAAO,CAAEjE,CAAC,CAAE;QAE/B,IAAK+D,KAAK,KAAK,CAAC,EAAG,OAAO,IAAI;QAE9B,IAAM9F,CAAC,GAAG1B,IAAI,CAACY,GAAG,CAAE,CAAC,EAAE2a,IAAI,GAAG/T,KAAK,CAAE;QAErC,IAAI,CAACgU,KAAK,CAAE/X,CAAC,EAAE/B,CAAC,CAAE;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAxY,GAAA;MAAAE,KAAA,EAED,SAAA4gB,SAAA,EAAW;QAEV,OAAO,IAAI,CAACxF,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAE9B;IAAC;MAAAtb,GAAA;MAAAE,KAAA,EAED,SAAA+iB,OAAA,EAAS;QAER;;QAEA,OAAO,IAAI,CAACsP,SAAS,EAAE;MAExB;IAAC;MAAAvyB,GAAA;MAAAE,KAAA,EAED,SAAAqyB,UAAA,EAAY;QAEX,IAAI,CAAC1B,EAAE,IAAI,CAAE,CAAC;QACd,IAAI,CAACC,EAAE,IAAI,CAAE,CAAC;QACd,IAAI,CAACC,EAAE,IAAI,CAAE,CAAC;QAEd,IAAI,CAACE,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAA+d,IAAKrB,CAAC,EAAG;QAER,OAAO,IAAI,CAACiU,EAAE,GAAGjU,CAAC,CAACiU,EAAE,GAAG,IAAI,CAACC,EAAE,GAAGlU,CAAC,CAACkU,EAAE,GAAG,IAAI,CAACC,EAAE,GAAGnU,CAAC,CAACmU,EAAE,GAAG,IAAI,CAACC,EAAE,GAAGpU,CAAC,CAACoU,EAAE;MAEzE;IAAC;MAAAhxB,GAAA;MAAAE,KAAA,EAED,SAAAie,SAAA,EAAW;QAEV,OAAO,IAAI,CAAC0S,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE;MAErF;IAAC;MAAAhxB,GAAA;MAAAE,KAAA,EAED,SAAA4F,OAAA,EAAS;QAER,OAAOgR,IAAI,CAACsH,IAAI,CAAE,IAAI,CAACyS,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,CAAE;MAElG;IAAC;MAAAhxB,GAAA;MAAAE,KAAA,EAED,SAAA2b,UAAA,EAAY;QAEX,IAAInF,CAAC,GAAG,IAAI,CAAC5Q,MAAM,EAAE;QAErB,IAAK4Q,CAAC,KAAK,CAAC,EAAG;UAEd,IAAI,CAACma,EAAE,GAAG,CAAC;UACX,IAAI,CAACC,EAAE,GAAG,CAAC;UACX,IAAI,CAACC,EAAE,GAAG,CAAC;UACX,IAAI,CAACC,EAAE,GAAG,CAAC;QAEZ,CAAC,MAAM;UAENta,CAAC,GAAG,CAAC,GAAGA,CAAC;UAET,IAAI,CAACma,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGna,CAAC;UACrB,IAAI,CAACoa,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGpa,CAAC;UACrB,IAAI,CAACqa,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGra,CAAC;UACrB,IAAI,CAACsa,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGta,CAAC;QAEtB;QAEA,IAAI,CAACua,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAkd,SAAU7C,CAAC,EAAG;QAEb,OAAO,IAAI,CAACiY,mBAAmB,CAAE,IAAI,EAAEjY,CAAC,CAAE;MAE3C;IAAC;MAAAva,GAAA;MAAAE,KAAA,EAED,SAAAqhB,YAAahH,CAAC,EAAG;QAEhB,OAAO,IAAI,CAACiY,mBAAmB,CAAEjY,CAAC,EAAE,IAAI,CAAE;MAE3C;IAAC;MAAAva,GAAA;MAAAE,KAAA,EAED,SAAAsyB,oBAAqBhY,CAAC,EAAEC,CAAC,EAAG;QAE3B;;QAEA,IAAMgY,GAAG,GAAGjY,CAAC,CAACqW,EAAE;UAAE6B,GAAG,GAAGlY,CAAC,CAACsW,EAAE;UAAE6B,GAAG,GAAGnY,CAAC,CAACuW,EAAE;UAAE6B,GAAG,GAAGpY,CAAC,CAACwW,EAAE;QACpD,IAAM6B,GAAG,GAAGpY,CAAC,CAACoW,EAAE;UAAEiC,GAAG,GAAGrY,CAAC,CAACqW,EAAE;UAAEiC,GAAG,GAAGtY,CAAC,CAACsW,EAAE;UAAEiC,GAAG,GAAGvY,CAAC,CAACuW,EAAE;QAEpD,IAAI,CAACH,EAAE,GAAG4B,GAAG,GAAGO,GAAG,GAAGJ,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG;QACvD,IAAI,CAAChC,EAAE,GAAG4B,GAAG,GAAGM,GAAG,GAAGJ,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGM,GAAG;QACvD,IAAI,CAAChC,EAAE,GAAG4B,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGN,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG;QACvD,IAAI,CAAC7B,EAAE,GAAG4B,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG;QAEvD,IAAI,CAAC9B,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAoyB,MAAOW,EAAE,EAAEza,CAAC,EAAG;QAEd,IAAKA,CAAC,KAAK,CAAC,EAAG,OAAO,IAAI;QAC1B,IAAKA,CAAC,KAAK,CAAC,EAAG,OAAO,IAAI,CAACmE,IAAI,CAAEsW,EAAE,CAAE;QAErC,IAAMjb,CAAC,GAAG,IAAI,CAAC6Y,EAAE;UAAEvY,CAAC,GAAG,IAAI,CAACwY,EAAE;UAAE7E,CAAC,GAAG,IAAI,CAAC8E,EAAE;UAAE7E,CAAC,GAAG,IAAI,CAAC8E,EAAE;;QAExD;;QAEA,IAAIkC,YAAY,GAAGhH,CAAC,GAAG+G,EAAE,CAACjC,EAAE,GAAGhZ,CAAC,GAAGib,EAAE,CAACpC,EAAE,GAAGvY,CAAC,GAAG2a,EAAE,CAACnC,EAAE,GAAG7E,CAAC,GAAGgH,EAAE,CAAClC,EAAE;QAEhE,IAAKmC,YAAY,GAAG,CAAC,EAAG;UAEvB,IAAI,CAAClC,EAAE,GAAG,CAAEiC,EAAE,CAACjC,EAAE;UACjB,IAAI,CAACH,EAAE,GAAG,CAAEoC,EAAE,CAACpC,EAAE;UACjB,IAAI,CAACC,EAAE,GAAG,CAAEmC,EAAE,CAACnC,EAAE;UACjB,IAAI,CAACC,EAAE,GAAG,CAAEkC,EAAE,CAAClC,EAAE;UAEjBmC,YAAY,GAAG,CAAEA,YAAY;QAE9B,CAAC,MAAM;UAEN,IAAI,CAACvW,IAAI,CAAEsW,EAAE,CAAE;QAEhB;QAEA,IAAKC,YAAY,IAAI,GAAG,EAAG;UAE1B,IAAI,CAAClC,EAAE,GAAG9E,CAAC;UACX,IAAI,CAAC2E,EAAE,GAAG7Y,CAAC;UACX,IAAI,CAAC8Y,EAAE,GAAGxY,CAAC;UACX,IAAI,CAACyY,EAAE,GAAG9E,CAAC;UAEX,OAAO,IAAI;QAEZ;QAEA,IAAMkH,eAAe,GAAG,GAAG,GAAGD,YAAY,GAAGA,YAAY;QAEzD,IAAKC,eAAe,IAAI3pB,MAAM,CAAC2oB,OAAO,EAAG;UAExC,IAAM1Y,CAAC,GAAG,CAAC,GAAGjB,CAAC;UACf,IAAI,CAACwY,EAAE,GAAGvX,CAAC,GAAGyS,CAAC,GAAG1T,CAAC,GAAG,IAAI,CAACwY,EAAE;UAC7B,IAAI,CAACH,EAAE,GAAGpX,CAAC,GAAGzB,CAAC,GAAGQ,CAAC,GAAG,IAAI,CAACqY,EAAE;UAC7B,IAAI,CAACC,EAAE,GAAGrX,CAAC,GAAGnB,CAAC,GAAGE,CAAC,GAAG,IAAI,CAACsY,EAAE;UAC7B,IAAI,CAACC,EAAE,GAAGtX,CAAC,GAAGwS,CAAC,GAAGzT,CAAC,GAAG,IAAI,CAACuY,EAAE;UAE7B,IAAI,CAAClV,SAAS,EAAE;UAChB,IAAI,CAACoV,iBAAiB,EAAE;UAExB,OAAO,IAAI;QAEZ;QAEA,IAAMmC,YAAY,GAAGtc,IAAI,CAACsH,IAAI,CAAE+U,eAAe,CAAE;QACjD,IAAME,SAAS,GAAGvc,IAAI,CAACyH,KAAK,CAAE6U,YAAY,EAAEF,YAAY,CAAE;QAC1D,IAAMI,MAAM,GAAGxc,IAAI,CAAC+D,GAAG,CAAE,CAAE,CAAC,GAAGrC,CAAC,IAAK6a,SAAS,CAAE,GAAGD,YAAY;UAC9DG,MAAM,GAAGzc,IAAI,CAAC+D,GAAG,CAAErC,CAAC,GAAG6a,SAAS,CAAE,GAAGD,YAAY;QAElD,IAAI,CAACpC,EAAE,GAAK9E,CAAC,GAAGoH,MAAM,GAAG,IAAI,CAACtC,EAAE,GAAGuC,MAAQ;QAC3C,IAAI,CAAC1C,EAAE,GAAK7Y,CAAC,GAAGsb,MAAM,GAAG,IAAI,CAACzC,EAAE,GAAG0C,MAAQ;QAC3C,IAAI,CAACzC,EAAE,GAAKxY,CAAC,GAAGgb,MAAM,GAAG,IAAI,CAACxC,EAAE,GAAGyC,MAAQ;QAC3C,IAAI,CAACxC,EAAE,GAAK9E,CAAC,GAAGqH,MAAM,GAAG,IAAI,CAACvC,EAAE,GAAGwC,MAAQ;QAE3C,IAAI,CAACtC,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAszB,iBAAkBC,EAAE,EAAER,EAAE,EAAEza,CAAC,EAAG;QAE7B,OAAO,IAAI,CAACmE,IAAI,CAAE8W,EAAE,CAAE,CAACnB,KAAK,CAAEW,EAAE,EAAEza,CAAC,CAAE;MAEtC;IAAC;MAAAxY,GAAA;MAAAE,KAAA,EAED,SAAAiX,OAAA,EAAS;QAER;QACA;QACA;;QAEA,IAAMuc,EAAE,GAAG5c,IAAI,CAACK,MAAM,EAAE;QACxB,IAAMwc,OAAO,GAAG7c,IAAI,CAACsH,IAAI,CAAE,CAAC,GAAGsV,EAAE,CAAE;QACnC,IAAME,MAAM,GAAG9c,IAAI,CAACsH,IAAI,CAAEsV,EAAE,CAAE;QAE9B,IAAMG,EAAE,GAAG,CAAC,GAAG/c,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACK,MAAM,EAAE;QAEtC,IAAM2c,EAAE,GAAG,CAAC,GAAGhd,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACK,MAAM,EAAE;QAEtC,OAAO,IAAI,CAACmE,GAAG,CACdqY,OAAO,GAAG7c,IAAI,CAAC8D,GAAG,CAAEiZ,EAAE,CAAE,EACxBD,MAAM,GAAG9c,IAAI,CAAC+D,GAAG,CAAEiZ,EAAE,CAAE,EACvBF,MAAM,GAAG9c,IAAI,CAAC8D,GAAG,CAAEkZ,EAAE,CAAE,EACvBH,OAAO,GAAG7c,IAAI,CAAC+D,GAAG,CAAEgZ,EAAE,CAAE,CACxB;MAEF;IAAC;MAAA7zB,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQ4R,UAAU,EAAG;QAEpB,OAASA,UAAU,CAACL,EAAE,KAAK,IAAI,CAACA,EAAE,IAAQK,UAAU,CAACJ,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMI,UAAU,CAACH,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMG,UAAU,CAACF,EAAE,KAAK,IAAI,CAACA,EAAI;MAExI;IAAC;MAAAhxB,GAAA;MAAAE,KAAA,EAED,SAAAqf,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAACqR,EAAE,GAAGpa,KAAK,CAAE+I,MAAM,CAAE;QACzB,IAAI,CAACsR,EAAE,GAAGra,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAC7B,IAAI,CAACuR,EAAE,GAAGta,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAC7B,IAAI,CAACwR,EAAE,GAAGva,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAE7B,IAAI,CAACyR,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAuf,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACqR,EAAE;QACzBpa,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACsR,EAAE;QAC7Bra,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACuR,EAAE;QAC7Bta,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACwR,EAAE;QAE7B,OAAOva,KAAK;MAEb;IAAC;MAAAzW,GAAA;MAAAE,KAAA,EAED,SAAAwf,oBAAqBC,SAAS,EAAEtJ,KAAK,EAAG;QAEvC,IAAI,CAACwa,EAAE,GAAGlR,SAAS,CAACC,IAAI,CAAEvJ,KAAK,CAAE;QACjC,IAAI,CAACya,EAAE,GAAGnR,SAAS,CAACE,IAAI,CAAExJ,KAAK,CAAE;QACjC,IAAI,CAAC0a,EAAE,GAAGpR,SAAS,CAAC+N,IAAI,CAAErX,KAAK,CAAE;QACjC,IAAI,CAAC2a,EAAE,GAAGrR,SAAS,CAACgO,IAAI,CAAEtX,KAAK,CAAE;QAEjC,OAAO,IAAI;MAEZ;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,OAAO,IAAI,CAAC/I,OAAO,EAAE;MAEtB;IAAC;MAAAzf,GAAA;MAAAE,KAAA,EAED,SAAA6zB,UAAWC,QAAQ,EAAG;QAErB,IAAI,CAAC/C,iBAAiB,GAAG+C,QAAQ;QAEjC,OAAO,IAAI;MAEZ;IAAC;MAAAh0B,GAAA;MAAAE,KAAA,EAED,SAAA+wB,kBAAA,EAAoB,CAAC;IAAC;MAAAjxB,GAAA,EAAA2wB,iBAAA;MAAAzwB,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAEtB,SAAApG,MAAA;QAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAgf,OAAAiU,SAAA;UAAA,kBAAAA,SAAA,CAAA9sB,IAAA,GAAA8sB,SAAA,CAAApvB,IAAA;YAAA;cAAAovB,SAAA,CAAApvB,IAAA;cAEC,OAAM,IAAI,CAACgsB,EAAE;YAAA;cAAAoD,SAAA,CAAApvB,IAAA;cACb,OAAM,IAAI,CAACisB,EAAE;YAAA;cAAAmD,SAAA,CAAApvB,IAAA;cACb,OAAM,IAAI,CAACksB,EAAE;YAAA;cAAAkD,SAAA,CAAApvB,IAAA;cACb,OAAM,IAAI,CAACmsB,EAAE;YAAA;YAAA;cAAA,OAAAiD,SAAA,CAAA3sB,IAAA;UAAA;QAAA,GAAApH,KAAA;MAAA,CAEb;IAAA;MAAAF,GAAA;MAAAE,KAAA,EAxpBD,SAAAg0B,UAAkBC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,UAAU,EAAEhc,CAAC,EAAG;QAEzE;;QAEA,IAAIic,EAAE,GAAGJ,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;UAC9BI,EAAE,GAAGL,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;UAC3BK,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;UAC3BM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAE5B,IAAMO,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;UAChCM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;UAC3BO,EAAE,GAAGR,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;UAC3BQ,EAAE,GAAGT,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAE5B,IAAKhc,CAAC,KAAK,CAAC,EAAG;UAEd2b,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGK,EAAE;UACzBN,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE;UACzBP,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE;UACzBR,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE;UACzB;QAED;QAEA,IAAKpc,CAAC,KAAK,CAAC,EAAG;UAEd2b,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGS,EAAE;UACzBV,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGU,EAAE;UACzBX,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGW,EAAE;UACzBZ,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGY,EAAE;UACzB;QAED;QAEA,IAAKJ,EAAE,KAAKI,EAAE,IAAIP,EAAE,KAAKI,EAAE,IAAIH,EAAE,KAAKI,EAAE,IAAIH,EAAE,KAAKI,EAAE,EAAG;UAEvD,IAAItb,CAAC,GAAG,CAAC,GAAGjB,CAAC;UACb,IAAMoC,GAAG,GAAG6Z,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE;YAChDC,GAAG,GAAKra,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAG;YAC5Bsa,MAAM,GAAG,CAAC,GAAGta,GAAG,GAAGA,GAAG;;UAEvB;UACA,IAAKsa,MAAM,GAAG1rB,MAAM,CAAC2oB,OAAO,EAAG;YAE9B,IAAMtX,GAAG,GAAG/D,IAAI,CAACsH,IAAI,CAAE8W,MAAM,CAAE;cAC9BC,GAAG,GAAGre,IAAI,CAACyH,KAAK,CAAE1D,GAAG,EAAED,GAAG,GAAGqa,GAAG,CAAE;YAEnCxb,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEpB,CAAC,GAAG0b,GAAG,CAAE,GAAGta,GAAG;YAC7BrC,CAAC,GAAG1B,IAAI,CAAC+D,GAAG,CAAErC,CAAC,GAAG2c,GAAG,CAAE,GAAGta,GAAG;UAE9B;UAEA,IAAMua,IAAI,GAAG5c,CAAC,GAAGyc,GAAG;UAEpBR,EAAE,GAAGA,EAAE,GAAGhb,CAAC,GAAGob,EAAE,GAAGO,IAAI;UACvBV,EAAE,GAAGA,EAAE,GAAGjb,CAAC,GAAGqb,EAAE,GAAGM,IAAI;UACvBT,EAAE,GAAGA,EAAE,GAAGlb,CAAC,GAAGsb,EAAE,GAAGK,IAAI;UACvBR,EAAE,GAAGA,EAAE,GAAGnb,CAAC,GAAGub,EAAE,GAAGI,IAAI;;UAEvB;UACA,IAAK3b,CAAC,KAAK,CAAC,GAAGjB,CAAC,EAAG;YAElB,IAAMsK,CAAC,GAAG,CAAC,GAAGhM,IAAI,CAACsH,IAAI,CAAEqW,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAE;YAEhEH,EAAE,IAAI3R,CAAC;YACP4R,EAAE,IAAI5R,CAAC;YACP6R,EAAE,IAAI7R,CAAC;YACP8R,EAAE,IAAI9R,CAAC;UAER;QAED;QAEAqR,GAAG,CAAEC,SAAS,CAAE,GAAGK,EAAE;QACrBN,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE;QACzBP,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE;QACzBR,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE;MAE1B;IAAC;MAAA50B,GAAA;MAAAE,KAAA,EAED,SAAAm1B,wBAAgClB,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,UAAU,EAAG;QAEpF,IAAMC,EAAE,GAAGJ,IAAI,CAAEC,UAAU,CAAE;QAC7B,IAAMI,EAAE,GAAGL,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QACjC,IAAMK,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QACjC,IAAMM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAEjC,IAAMO,EAAE,GAAGN,IAAI,CAAEC,UAAU,CAAE;QAC7B,IAAMM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QACjC,IAAMO,EAAE,GAAGR,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QACjC,IAAMQ,EAAE,GAAGT,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAEjCL,GAAG,CAAEC,SAAS,CAAE,GAAGK,EAAE,GAAGO,EAAE,GAAGJ,EAAE,GAAGC,EAAE,GAAGH,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE;QACxDX,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE,GAAGM,EAAE,GAAGJ,EAAE,GAAGE,EAAE,GAAGH,EAAE,GAAGE,EAAE,GAAGJ,EAAE,GAAGM,EAAE;QAC5DZ,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE,GAAGN,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE;QAC5DV,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE,GAAGI,EAAE,GAAGP,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE;QAE5D,OAAOZ,GAAG;MAEX;IAAC;IAAA,OAAAzD,UAAA;EAAA,EA8iBEtwB,MAAM,CAACE,QAAQ;EAAA,IAWbg1B,OAAO,0BAAAC,iBAAA;IAEZ,SAAAD,QAAatd,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE2T,CAAC,GAAG,CAAC,EAAG;MAAA3jB,eAAA,OAAAgtB,OAAA;MAElCA,OAAO,CAAC31B,SAAS,CAAC61B,SAAS,GAAG,IAAI;MAElC,IAAI,CAACxd,CAAC,GAAGA,CAAC;MACV,IAAI,CAACM,CAAC,GAAGA,CAAC;MACV,IAAI,CAAC2T,CAAC,GAAGA,CAAC;IAEX;IAACnjB,YAAA,CAAAwsB,OAAA;MAAAt1B,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKtD,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAEd,IAAKA,CAAC,KAAKznB,SAAS,EAAGynB,CAAC,GAAG,IAAI,CAACA,CAAC,CAAC,CAAC;;QAEnC,IAAI,CAACjU,CAAC,GAAGA,CAAC;QACV,IAAI,CAACM,CAAC,GAAGA,CAAC;QACV,IAAI,CAAC2T,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAkc,UAAWC,MAAM,EAAG;QAEnB,IAAI,CAACrE,CAAC,GAAGqE,MAAM;QACf,IAAI,CAAC/D,CAAC,GAAG+D,MAAM;QACf,IAAI,CAAC4P,CAAC,GAAG5P,MAAM;QAEf,OAAO,IAAI;MAEZ;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAoc,KAAMtE,CAAC,EAAG;QAET,IAAI,CAACA,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAhY,GAAA;MAAAE,KAAA,EAED,SAAAqc,KAAMjE,CAAC,EAAG;QAET,IAAI,CAACA,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAksB,KAAMH,CAAC,EAAG;QAET,IAAI,CAACA,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAsc,aAAcnG,KAAK,EAAEnW,KAAK,EAAG;QAE5B,QAASmW,KAAK;UAEb,KAAK,CAAC;YAAE,IAAI,CAAC2B,CAAC,GAAG9X,KAAK;YAAE;UACxB,KAAK,CAAC;YAAE,IAAI,CAACoY,CAAC,GAAGpY,KAAK;YAAE;UACxB,KAAK,CAAC;YAAE,IAAI,CAAC+rB,CAAC,GAAG/rB,KAAK;YAAE;UACxB;YAAS,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,GAAGwS,KAAK,CAAE;QAAC;QAI/D,OAAO,IAAI;MAEZ;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAuc,aAAcpG,KAAK,EAAG;QAErB,QAASA,KAAK;UAEb,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC2B,CAAC;UACrB,KAAK,CAAC;YAAE,OAAO,IAAI,CAACM,CAAC;UACrB,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC2T,CAAC;UACrB;YAAS,MAAM,IAAIpoB,KAAK,CAAE,yBAAyB,GAAGwS,KAAK,CAAE;QAAC;MAIhE;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,CAAE,IAAI,CAAC4R,CAAC,EAAE,IAAI,CAACM,CAAC,EAAE,IAAI,CAAC2T,CAAC,CAAE;MAEtD;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAMC,CAAC,EAAG;QAET,IAAI,CAAC5E,CAAC,GAAG4E,CAAC,CAAC5E,CAAC;QACZ,IAAI,CAACM,CAAC,GAAGsE,CAAC,CAACtE,CAAC;QACZ,IAAI,CAAC2T,CAAC,GAAGrP,CAAC,CAACqP,CAAC;QAEZ,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA2c,IAAKD,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QACb,IAAI,CAAC2T,CAAC,IAAIrP,CAAC,CAACqP,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA4c,UAAWrD,CAAC,EAAG;QAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;QACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;QACX,IAAI,CAACwS,CAAC,IAAIxS,CAAC;QAEX,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAA6c,WAAYvC,CAAC,EAAEC,CAAC,EAAG;QAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;QAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;QAClB,IAAI,CAAC2T,CAAC,GAAGzR,CAAC,CAACyR,CAAC,GAAGxR,CAAC,CAACwR,CAAC;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA8c,gBAAiBJ,CAAC,EAAEnD,CAAC,EAAG;QAEvB,IAAI,CAACzB,CAAC,IAAI4E,CAAC,CAAC5E,CAAC,GAAGyB,CAAC;QACjB,IAAI,CAACnB,CAAC,IAAIsE,CAAC,CAACtE,CAAC,GAAGmB,CAAC;QACjB,IAAI,CAACwS,CAAC,IAAIrP,CAAC,CAACqP,CAAC,GAAGxS,CAAC;QAEjB,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAA+c,IAAKL,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QACb,IAAI,CAAC2T,CAAC,IAAIrP,CAAC,CAACqP,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAgd,UAAWzD,CAAC,EAAG;QAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;QACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;QACX,IAAI,CAACwS,CAAC,IAAIxS,CAAC;QAEX,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAAid,WAAY3C,CAAC,EAAEC,CAAC,EAAG;QAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;QAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;QAClB,IAAI,CAAC2T,CAAC,GAAGzR,CAAC,CAACyR,CAAC,GAAGxR,CAAC,CAACwR,CAAC;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAkd,SAAUR,CAAC,EAAG;QAEb,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QACb,IAAI,CAAC2T,CAAC,IAAIrP,CAAC,CAACqP,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAmd,eAAgBhB,MAAM,EAAG;QAExB,IAAI,CAACrE,CAAC,IAAIqE,MAAM;QAChB,IAAI,CAAC/D,CAAC,IAAI+D,MAAM;QAChB,IAAI,CAAC4P,CAAC,IAAI5P,MAAM;QAEhB,OAAO,IAAI;MAEZ;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAu1B,gBAAiBjb,CAAC,EAAEC,CAAC,EAAG;QAEvB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;QAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;QAClB,IAAI,CAAC2T,CAAC,GAAGzR,CAAC,CAACyR,CAAC,GAAGxR,CAAC,CAACwR,CAAC;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAw1B,WAAYtE,KAAK,EAAG;QAEnB,OAAO,IAAI,CAACuE,eAAe,CAAEC,aAAa,CAACzE,YAAY,CAAEC,KAAK,CAAE,CAAE;MAEnE;IAAC;MAAApxB,GAAA;MAAAE,KAAA,EAED,SAAA21B,eAAgBjE,IAAI,EAAEtT,KAAK,EAAG;QAE7B,OAAO,IAAI,CAACqX,eAAe,CAAEC,aAAa,CAACjE,gBAAgB,CAAEC,IAAI,EAAEtT,KAAK,CAAE,CAAE;MAE7E;IAAC;MAAAte,GAAA;MAAAE,KAAA,EAED,SAAAsd,aAAc1F,CAAC,EAAG;QAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;UAAE2T,CAAC,GAAG,IAAI,CAACA,CAAC;QACxC,IAAMxO,CAAC,GAAG3F,CAAC,CAAC4F,QAAQ;QAEpB,IAAI,CAAC1F,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGwO,CAAC;QAC7C,IAAI,CAAC3T,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGwO,CAAC;QAC7C,IAAI,CAACA,CAAC,GAAGxO,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGwO,CAAC;QAE7C,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA41B,kBAAmBhe,CAAC,EAAG;QAEtB,OAAO,IAAI,CAAC0F,YAAY,CAAE1F,CAAC,CAAE,CAAC+D,SAAS,EAAE;MAE1C;IAAC;MAAA7b,GAAA;MAAAE,KAAA,EAED,SAAAosB,aAAcxU,CAAC,EAAG;QAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;UAAE2T,CAAC,GAAG,IAAI,CAACA,CAAC;QACxC,IAAMxO,CAAC,GAAG3F,CAAC,CAAC4F,QAAQ;QAEpB,IAAMwO,CAAC,GAAG,CAAC,IAAKzO,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,EAAE,CAAE,GAAGwO,CAAC,GAAGxO,CAAC,CAAE,EAAE,CAAE,CAAE;QAEjE,IAAI,CAACzF,CAAC,GAAG,CAAEyF,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGwO,CAAC,GAAGxO,CAAC,CAAE,EAAE,CAAE,IAAKyO,CAAC;QAC/D,IAAI,CAAC5T,CAAC,GAAG,CAAEmF,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGwO,CAAC,GAAGxO,CAAC,CAAE,EAAE,CAAE,IAAKyO,CAAC;QAC/D,IAAI,CAACD,CAAC,GAAG,CAAExO,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,EAAE,CAAE,GAAGwO,CAAC,GAAGxO,CAAC,CAAE,EAAE,CAAE,IAAKyO,CAAC;QAEhE,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAy1B,gBAAiBpb,CAAC,EAAG;QAEpB,IAAMvC,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;UAAE2T,CAAC,GAAG,IAAI,CAACA,CAAC;QACxC,IAAM8J,EAAE,GAAGxb,CAAC,CAACvC,CAAC;UAAEge,EAAE,GAAGzb,CAAC,CAACjC,CAAC;UAAE2d,EAAE,GAAG1b,CAAC,CAAC0R,CAAC;UAAEiK,EAAE,GAAG3b,CAAC,CAAC2R,CAAC;;QAE5C;;QAEA,IAAMiK,EAAE,GAAGD,EAAE,GAAGle,CAAC,GAAGge,EAAE,GAAG/J,CAAC,GAAGgK,EAAE,GAAG3d,CAAC;QACnC,IAAM8d,EAAE,GAAGF,EAAE,GAAG5d,CAAC,GAAG2d,EAAE,GAAGje,CAAC,GAAG+d,EAAE,GAAG9J,CAAC;QACnC,IAAMoK,EAAE,GAAGH,EAAE,GAAGjK,CAAC,GAAG8J,EAAE,GAAGzd,CAAC,GAAG0d,EAAE,GAAGhe,CAAC;QACnC,IAAMse,EAAE,GAAG,CAAEP,EAAE,GAAG/d,CAAC,GAAGge,EAAE,GAAG1d,CAAC,GAAG2d,EAAE,GAAGhK,CAAC;;QAErC;;QAEA,IAAI,CAACjU,CAAC,GAAGme,EAAE,GAAGD,EAAE,GAAGI,EAAE,GAAG,CAAEP,EAAE,GAAGK,EAAE,GAAG,CAAEH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE;QACpD,IAAI,CAAC1d,CAAC,GAAG8d,EAAE,GAAGF,EAAE,GAAGI,EAAE,GAAG,CAAEN,EAAE,GAAGK,EAAE,GAAG,CAAEN,EAAE,GAAGI,EAAE,GAAG,CAAEF,EAAE;QACpD,IAAI,CAAChK,CAAC,GAAGoK,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE,GAAGE,EAAE,GAAG,CAAEH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE;QAEpD,OAAO,IAAI;MAEZ;IAAC;MAAA/1B,GAAA;MAAAE,KAAA,EAED,SAAAq2B,QAASC,MAAM,EAAG;QAEjB,OAAO,IAAI,CAAClK,YAAY,CAAEkK,MAAM,CAACC,kBAAkB,CAAE,CAACnK,YAAY,CAAEkK,MAAM,CAACE,gBAAgB,CAAE;MAE9F;IAAC;MAAA12B,GAAA;MAAAE,KAAA,EAED,SAAAy2B,UAAWH,MAAM,EAAG;QAEnB,OAAO,IAAI,CAAClK,YAAY,CAAEkK,MAAM,CAACI,uBAAuB,CAAE,CAACtK,YAAY,CAAEkK,MAAM,CAACK,WAAW,CAAE;MAE9F;IAAC;MAAA72B,GAAA;MAAAE,KAAA,EAED,SAAA42B,mBAAoBhf,CAAC,EAAG;QAEvB;QACA;;QAEA,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;UAAE2T,CAAC,GAAG,IAAI,CAACA,CAAC;QACxC,IAAMxO,CAAC,GAAG3F,CAAC,CAAC4F,QAAQ;QAEpB,IAAI,CAAC1F,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGwO,CAAC;QAC7C,IAAI,CAAC3T,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,CAAC,CAAE,GAAGwO,CAAC;QAC7C,IAAI,CAACA,CAAC,GAAGxO,CAAC,CAAE,CAAC,CAAE,GAAGzF,CAAC,GAAGyF,CAAC,CAAE,CAAC,CAAE,GAAGnF,CAAC,GAAGmF,CAAC,CAAE,EAAE,CAAE,GAAGwO,CAAC;QAE9C,OAAO,IAAI,CAACpQ,SAAS,EAAE;MAExB;IAAC;MAAA7b,GAAA;MAAAE,KAAA,EAED,SAAAod,OAAQV,CAAC,EAAG;QAEX,IAAI,CAAC5E,CAAC,IAAI4E,CAAC,CAAC5E,CAAC;QACb,IAAI,CAACM,CAAC,IAAIsE,CAAC,CAACtE,CAAC;QACb,IAAI,CAAC2T,CAAC,IAAIrP,CAAC,CAACqP,CAAC;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAqd,aAAclB,MAAM,EAAG;QAEtB,OAAO,IAAI,CAACgB,cAAc,CAAE,CAAC,GAAGhB,MAAM,CAAE;MAEzC;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAwX,IAAKkF,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,GAAGlB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACM,CAAC,EAAE4E,CAAC,CAAC5E,CAAC,CAAE;QAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACY,CAAC,EAAEsE,CAAC,CAACtE,CAAC,CAAE;QAChC,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACY,GAAG,CAAE,IAAI,CAACuU,CAAC,EAAErP,CAAC,CAACqP,CAAC,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAyX,IAAKiF,CAAC,EAAG;QAER,IAAI,CAAC5E,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACK,CAAC,EAAE4E,CAAC,CAAC5E,CAAC,CAAE;QAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACW,CAAC,EAAEsE,CAAC,CAACtE,CAAC,CAAE;QAChC,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACa,GAAG,CAAE,IAAI,CAACsU,CAAC,EAAErP,CAAC,CAACqP,CAAC,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAuX,MAAOC,GAAG,EAAEC,GAAG,EAAG;QAEjB;;QAEA,IAAI,CAACK,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACM,CAAC,EAAElB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACK,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;QACrD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACY,CAAC,EAAExB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACW,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;QACrD,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACa,GAAG,CAAED,GAAG,CAACuU,CAAC,EAAEnV,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACsU,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;QAErD,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAyd,YAAaC,MAAM,EAAEC,MAAM,EAAG;QAE7B,IAAI,CAAC7F,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAEiG,MAAM,EAAE9G,IAAI,CAACY,GAAG,CAAEmG,MAAM,EAAE,IAAI,CAAC7F,CAAC,CAAE,CAAE;QACvD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAEiG,MAAM,EAAE9G,IAAI,CAACY,GAAG,CAAEmG,MAAM,EAAE,IAAI,CAACvF,CAAC,CAAE,CAAE;QACvD,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACa,GAAG,CAAEiG,MAAM,EAAE9G,IAAI,CAACY,GAAG,CAAEmG,MAAM,EAAE,IAAI,CAACoO,CAAC,CAAE,CAAE;QAEvD,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA4d,YAAapG,GAAG,EAAEC,GAAG,EAAG;QAEvB,IAAM7R,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;QAE5B,OAAO,IAAI,CAACyX,YAAY,CAAEzX,MAAM,IAAI,CAAC,CAAE,CAACuX,cAAc,CAAEvG,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE7R,MAAM,CAAE,CAAE,CAAE;MAEnG;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAAkZ,MAAA,EAAQ;QAEP,IAAI,CAACpB,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;QAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;QAC7B,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC6S,CAAC,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAga,KAAA,EAAO;QAEN,IAAI,CAAClC,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE;QAC5B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE;QAC5B,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC+R,CAAC,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA4b,MAAA,EAAQ;QAEP,IAAI,CAAC9D,CAAC,GAAGlB,IAAI,CAACgF,KAAK,CAAE,IAAI,CAAC9D,CAAC,CAAE;QAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACgF,KAAK,CAAE,IAAI,CAACxD,CAAC,CAAE;QAC7B,IAAI,CAAC2T,CAAC,GAAGnV,IAAI,CAACgF,KAAK,CAAE,IAAI,CAACmQ,CAAC,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA6d,YAAA,EAAc;QAEb,IAAI,CAAC/F,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;QACpE,IAAI,CAACM,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;QACpE,IAAI,CAAC2T,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKnV,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC+R,CAAC,CAAE,GAAGnV,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC6S,CAAC,CAAE;QAEpE,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA8d,OAAA,EAAS;QAER,IAAI,CAAChG,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;QACjB,IAAI,CAACM,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;QACjB,IAAI,CAAC2T,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;QAEjB,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA+d,IAAKrB,CAAC,EAAG;QAER,OAAO,IAAI,CAAC5E,CAAC,GAAG4E,CAAC,CAAC5E,CAAC,GAAG,IAAI,CAACM,CAAC,GAAGsE,CAAC,CAACtE,CAAC,GAAG,IAAI,CAAC2T,CAAC,GAAGrP,CAAC,CAACqP,CAAC;MAElD;;MAEA;IAAA;MAAAjsB,GAAA;MAAAE,KAAA,EAEA,SAAAie,SAAA,EAAW;QAEV,OAAO,IAAI,CAACnG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC2T,CAAC,GAAG,IAAI,CAACA,CAAC;MAE3D;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA4F,OAAA,EAAS;QAER,OAAOgR,IAAI,CAACsH,IAAI,CAAE,IAAI,CAACpG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC2T,CAAC,GAAG,IAAI,CAACA,CAAC,CAAE;MAExE;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAme,gBAAA,EAAkB;QAEjB,OAAOvH,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,CAAE,GAAGxB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACmT,CAAC,CAAE;MAEpE;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA2b,UAAA,EAAY;QAEX,OAAO,IAAI,CAAC0B,YAAY,CAAE,IAAI,CAACzX,MAAM,EAAE,IAAI,CAAC,CAAE;MAE/C;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAA+e,UAAWnZ,MAAM,EAAG;QAEnB,OAAO,IAAI,CAAC+V,SAAS,EAAE,CAACwB,cAAc,CAAEvX,MAAM,CAAE;MAEjD;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAAqY,KAAMqE,CAAC,EAAEsC,KAAK,EAAG;QAEhB,IAAI,CAAClH,CAAC,IAAI,CAAE4E,CAAC,CAAC5E,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKkH,KAAK;QAClC,IAAI,CAAC5G,CAAC,IAAI,CAAEsE,CAAC,CAACtE,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK4G,KAAK;QAClC,IAAI,CAAC+M,CAAC,IAAI,CAAErP,CAAC,CAACqP,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK/M,KAAK;QAElC,OAAO,IAAI;MAEZ;IAAC;MAAAlf,GAAA;MAAAE,KAAA,EAED,SAAAif,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;QAE5B,IAAI,CAAClH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,GAAG,CAAEqH,EAAE,CAACrH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,IAAKkH,KAAK;QACvC,IAAI,CAAC5G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,GAAG,CAAE+G,EAAE,CAAC/G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,IAAK4G,KAAK;QACvC,IAAI,CAAC+M,CAAC,GAAG7M,EAAE,CAAC6M,CAAC,GAAG,CAAE5M,EAAE,CAAC4M,CAAC,GAAG7M,EAAE,CAAC6M,CAAC,IAAK/M,KAAK;QAEvC,OAAO,IAAI;MAEZ;IAAC;MAAAlf,GAAA;MAAAE,KAAA,EAED,SAAAge,MAAOtB,CAAC,EAAG;QAEV,OAAO,IAAI,CAACma,YAAY,CAAE,IAAI,EAAEna,CAAC,CAAE;MAEpC;IAAC;MAAA5c,GAAA;MAAAE,KAAA,EAED,SAAA62B,aAAcvc,CAAC,EAAEC,CAAC,EAAG;QAEpB,IAAMuc,EAAE,GAAGxc,CAAC,CAACxC,CAAC;UAAEif,EAAE,GAAGzc,CAAC,CAAClC,CAAC;UAAE4e,EAAE,GAAG1c,CAAC,CAACyR,CAAC;QAClC,IAAMkL,EAAE,GAAG1c,CAAC,CAACzC,CAAC;UAAEof,EAAE,GAAG3c,CAAC,CAACnC,CAAC;UAAE+e,EAAE,GAAG5c,CAAC,CAACwR,CAAC;QAElC,IAAI,CAACjU,CAAC,GAAGif,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;QAC1B,IAAI,CAAC9e,CAAC,GAAG4e,EAAE,GAAGC,EAAE,GAAGH,EAAE,GAAGK,EAAE;QAC1B,IAAI,CAACpL,CAAC,GAAG+K,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;QAE1B,OAAO,IAAI;MAEZ;IAAC;MAAAn3B,GAAA;MAAAE,KAAA,EAED,SAAAo3B,gBAAiB1a,CAAC,EAAG;QAEpB,IAAM6B,WAAW,GAAG7B,CAAC,CAACuB,QAAQ,EAAE;QAEhC,IAAKM,WAAW,KAAK,CAAC,EAAG,OAAO,IAAI,CAACnD,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEnD,IAAMe,MAAM,GAAGO,CAAC,CAACqB,GAAG,CAAE,IAAI,CAAE,GAAGQ,WAAW;QAE1C,OAAO,IAAI,CAAC9B,IAAI,CAAEC,CAAC,CAAE,CAACS,cAAc,CAAEhB,MAAM,CAAE;MAE/C;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAq3B,eAAgBC,WAAW,EAAG;QAE7BC,SAAS,CAAC9a,IAAI,CAAE,IAAI,CAAE,CAAC2a,eAAe,CAAEE,WAAW,CAAE;QAErD,OAAO,IAAI,CAACva,GAAG,CAAEwa,SAAS,CAAE;MAE7B;IAAC;MAAAz3B,GAAA;MAAAE,KAAA,EAED,SAAAw3B,QAASC,MAAM,EAAG;QAEjB;QACA;;QAEA,OAAO,IAAI,CAAC1a,GAAG,CAAEwa,SAAS,CAAC9a,IAAI,CAAEgb,MAAM,CAAE,CAACta,cAAc,CAAE,CAAC,GAAG,IAAI,CAACY,GAAG,CAAE0Z,MAAM,CAAE,CAAE,CAAE;MAErF;IAAC;MAAA33B,GAAA;MAAAE,KAAA,EAED,SAAAse,QAAS5B,CAAC,EAAG;QAEZ,IAAM6B,WAAW,GAAG3H,IAAI,CAACsH,IAAI,CAAE,IAAI,CAACD,QAAQ,EAAE,GAAGvB,CAAC,CAACuB,QAAQ,EAAE,CAAE;QAE/D,IAAKM,WAAW,KAAK,CAAC,EAAG,OAAO3H,IAAI,CAACC,EAAE,GAAG,CAAC;QAE3C,IAAM2H,KAAK,GAAG,IAAI,CAACT,GAAG,CAAErB,CAAC,CAAE,GAAG6B,WAAW;;QAEzC;;QAEA,OAAO3H,IAAI,CAAC6H,IAAI,CAAElH,KAAK,CAAEiH,KAAK,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;MAE3C;IAAC;MAAA1e,GAAA;MAAAE,KAAA,EAED,SAAA0e,WAAYhC,CAAC,EAAG;QAEf,OAAO9F,IAAI,CAACsH,IAAI,CAAE,IAAI,CAACS,iBAAiB,CAAEjC,CAAC,CAAE,CAAE;MAEhD;IAAC;MAAA5c,GAAA;MAAAE,KAAA,EAED,SAAA2e,kBAAmBjC,CAAC,EAAG;QAEtB,IAAMkC,EAAE,GAAG,IAAI,CAAC9G,CAAC,GAAG4E,CAAC,CAAC5E,CAAC;UAAE+G,EAAE,GAAG,IAAI,CAACzG,CAAC,GAAGsE,CAAC,CAACtE,CAAC;UAAEsf,EAAE,GAAG,IAAI,CAAC3L,CAAC,GAAGrP,CAAC,CAACqP,CAAC;QAE7D,OAAOnN,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAG6Y,EAAE,GAAGA,EAAE;MAEnC;IAAC;MAAA53B,GAAA;MAAAE,KAAA,EAED,SAAA8e,oBAAqBpC,CAAC,EAAG;QAExB,OAAO9F,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,GAAG4E,CAAC,CAAC5E,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,GAAGsE,CAAC,CAACtE,CAAC,CAAE,GAAGxB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACmT,CAAC,GAAGrP,CAAC,CAACqP,CAAC,CAAE;MAEtF;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA23B,iBAAkBpe,CAAC,EAAG;QAErB,OAAO,IAAI,CAACqe,sBAAsB,CAAEre,CAAC,CAACse,MAAM,EAAEte,CAAC,CAACue,GAAG,EAAEve,CAAC,CAACiF,KAAK,CAAE;MAE/D;IAAC;MAAA1e,GAAA;MAAAE,KAAA,EAED,SAAA43B,uBAAwBC,MAAM,EAAEC,GAAG,EAAEtZ,KAAK,EAAG;QAE5C,IAAMuZ,YAAY,GAAGnhB,IAAI,CAAC+D,GAAG,CAAEmd,GAAG,CAAE,GAAGD,MAAM;QAE7C,IAAI,CAAC/f,CAAC,GAAGigB,YAAY,GAAGnhB,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;QACzC,IAAI,CAACpG,CAAC,GAAGxB,IAAI,CAAC8D,GAAG,CAAEod,GAAG,CAAE,GAAGD,MAAM;QACjC,IAAI,CAAC9L,CAAC,GAAGgM,YAAY,GAAGnhB,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;QAEzC,OAAO,IAAI;MAEZ;IAAC;MAAA1e,GAAA;MAAAE,KAAA,EAED,SAAAg4B,mBAAoBxd,CAAC,EAAG;QAEvB,OAAO,IAAI,CAACyd,wBAAwB,CAAEzd,CAAC,CAACqd,MAAM,EAAErd,CAAC,CAACgE,KAAK,EAAEhE,CAAC,CAACpC,CAAC,CAAE;MAE/D;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAi4B,yBAA0BJ,MAAM,EAAErZ,KAAK,EAAEpG,CAAC,EAAG;QAE5C,IAAI,CAACN,CAAC,GAAG+f,MAAM,GAAGjhB,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;QACnC,IAAI,CAACpG,CAAC,GAAGA,CAAC;QACV,IAAI,CAAC2T,CAAC,GAAG8L,MAAM,GAAGjhB,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;QAEnC,OAAO,IAAI;MAEZ;IAAC;MAAA1e,GAAA;MAAAE,KAAA,EAED,SAAAk4B,sBAAuBtgB,CAAC,EAAG;QAE1B,IAAM2F,CAAC,GAAG3F,CAAC,CAAC4F,QAAQ;QAEpB,IAAI,CAAC1F,CAAC,GAAGyF,CAAC,CAAE,EAAE,CAAE;QAChB,IAAI,CAACnF,CAAC,GAAGmF,CAAC,CAAE,EAAE,CAAE;QAChB,IAAI,CAACwO,CAAC,GAAGxO,CAAC,CAAE,EAAE,CAAE;QAEhB,OAAO,IAAI;MAEZ;IAAC;MAAAzd,GAAA;MAAAE,KAAA,EAED,SAAAm4B,mBAAoBvgB,CAAC,EAAG;QAEvB,IAAMkM,EAAE,GAAG,IAAI,CAACsU,mBAAmB,CAAExgB,CAAC,EAAE,CAAC,CAAE,CAAChS,MAAM,EAAE;QACpD,IAAMme,EAAE,GAAG,IAAI,CAACqU,mBAAmB,CAAExgB,CAAC,EAAE,CAAC,CAAE,CAAChS,MAAM,EAAE;QACpD,IAAMyyB,EAAE,GAAG,IAAI,CAACD,mBAAmB,CAAExgB,CAAC,EAAE,CAAC,CAAE,CAAChS,MAAM,EAAE;QAEpD,IAAI,CAACkS,CAAC,GAAGgM,EAAE;QACX,IAAI,CAAC1L,CAAC,GAAG2L,EAAE;QACX,IAAI,CAACgI,CAAC,GAAGsM,EAAE;QAEX,OAAO,IAAI;MAEZ;IAAC;MAAAv4B,GAAA;MAAAE,KAAA,EAED,SAAAo4B,oBAAqBxgB,CAAC,EAAEzB,KAAK,EAAG;QAE/B,OAAO,IAAI,CAACkJ,SAAS,CAAEzH,CAAC,CAAC4F,QAAQ,EAAErH,KAAK,GAAG,CAAC,CAAE;MAE/C;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAkhB,qBAAsBtJ,CAAC,EAAEzB,KAAK,EAAG;QAEhC,OAAO,IAAI,CAACkJ,SAAS,CAAEzH,CAAC,CAAC4F,QAAQ,EAAErH,KAAK,GAAG,CAAC,CAAE;MAE/C;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAixB,aAAc1T,CAAC,EAAG;QAEjB,IAAI,CAACzF,CAAC,GAAGyF,CAAC,CAACoT,EAAE;QACb,IAAI,CAACvY,CAAC,GAAGmF,CAAC,CAACqT,EAAE;QACb,IAAI,CAAC7E,CAAC,GAAGxO,CAAC,CAACsT,EAAE;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAA/wB,GAAA;MAAAE,KAAA,EAED,SAAAs4B,aAAc9d,CAAC,EAAG;QAEjB,IAAI,CAAC1C,CAAC,GAAG0C,CAAC,CAACkJ,CAAC;QACZ,IAAI,CAACtL,CAAC,GAAGoC,CAAC,CAACqI,CAAC;QACZ,IAAI,CAACkJ,CAAC,GAAGvR,CAAC,CAACD,CAAC;QAEZ,OAAO,IAAI;MAEZ;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQ1C,CAAC,EAAG;QAEX,OAAWA,CAAC,CAAC5E,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQ4E,CAAC,CAACtE,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMsE,CAAC,CAACqP,CAAC,KAAK,IAAI,CAACA,CAAG;MAExE;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAqf,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAACxH,CAAC,GAAGvB,KAAK,CAAE+I,MAAM,CAAE;QACxB,IAAI,CAAClH,CAAC,GAAG7B,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAC5B,IAAI,CAACyM,CAAC,GAAGxV,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAuf,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACxH,CAAC;QACxBvB,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAClH,CAAC;QAC5B7B,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACyM,CAAC;QAE5B,OAAOxV,KAAK;MAEb;IAAC;MAAAzW,GAAA;MAAAE,KAAA,EAED,SAAAwf,oBAAqBC,SAAS,EAAEtJ,KAAK,EAAG;QAEvC,IAAI,CAAC2B,CAAC,GAAG2H,SAAS,CAACC,IAAI,CAAEvJ,KAAK,CAAE;QAChC,IAAI,CAACiC,CAAC,GAAGqH,SAAS,CAACE,IAAI,CAAExJ,KAAK,CAAE;QAChC,IAAI,CAAC4V,CAAC,GAAGtM,SAAS,CAAC+N,IAAI,CAAErX,KAAK,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAiX,OAAA,EAAS;QAER,IAAI,CAACa,CAAC,GAAGlB,IAAI,CAACK,MAAM,EAAE;QACtB,IAAI,CAACmB,CAAC,GAAGxB,IAAI,CAACK,MAAM,EAAE;QACtB,IAAI,CAAC8U,CAAC,GAAGnV,IAAI,CAACK,MAAM,EAAE;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAnX,GAAA;MAAAE,KAAA,EAED,SAAAu4B,gBAAA,EAAkB;QAEjB;;QAEA,IAAMC,CAAC,GAAG,CAAE5hB,IAAI,CAACK,MAAM,EAAE,GAAG,GAAG,IAAK,CAAC;QACrC,IAAMqB,CAAC,GAAG1B,IAAI,CAACK,MAAM,EAAE,GAAGL,IAAI,CAACC,EAAE,GAAG,CAAC;QACrC,IAAM+L,CAAC,GAAGhM,IAAI,CAACsH,IAAI,CAAE,CAAC,GAAAtH,IAAA,CAAAmD,GAAA,CAAGye,CAAC,EAAI,CAAC,EAAE;QAEjC,IAAI,CAAC1gB,CAAC,GAAG8K,CAAC,GAAGhM,IAAI,CAAC8D,GAAG,CAAEpC,CAAC,CAAE;QAC1B,IAAI,CAACF,CAAC,GAAGwK,CAAC,GAAGhM,IAAI,CAAC+D,GAAG,CAAErC,CAAC,CAAE;QAC1B,IAAI,CAACyT,CAAC,GAAGyM,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAA14B,GAAA,EAAAu1B,iBAAA;MAAAr1B,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAED,SAAApG,MAAA;QAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAgf,OAAA2Y,SAAA;UAAA,kBAAAA,SAAA,CAAAxxB,IAAA,GAAAwxB,SAAA,CAAA9zB,IAAA;YAAA;cAAA8zB,SAAA,CAAA9zB,IAAA;cAEC,OAAM,IAAI,CAACmT,CAAC;YAAA;cAAA2gB,SAAA,CAAA9zB,IAAA;cACZ,OAAM,IAAI,CAACyT,CAAC;YAAA;cAAAqgB,SAAA,CAAA9zB,IAAA;cACZ,OAAM,IAAI,CAAConB,CAAC;YAAA;YAAA;cAAA,OAAA0M,SAAA,CAAArxB,IAAA;UAAA;QAAA,GAAApH,KAAA;MAAA,CAEZ;IAAA;IAAA,OAAAo1B,OAAA;EAAA,EANEl1B,MAAM,CAACE,QAAQ;EAUnB,IAAMm3B,SAAS,GAAG,aAAc,IAAInC,OAAO,EAAE;EAC7C,IAAMM,aAAa,GAAG,aAAc,IAAIlF,UAAU,EAAE;EAAC,IAE/CkI,IAAI;IAET,SAAAA,KAAalhB,GAAG,GAAG,IAAI4d,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAQ,CAAE,EAAElhB,GAAG,GAAG,IAAI2d,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAQ,CAAE,EAAG;MAAAvwB,eAAA,OAAAswB,IAAA;MAE/H,IAAI,CAACE,MAAM,GAAG,IAAI;MAElB,IAAI,CAACphB,GAAG,GAAGA,GAAG;MACd,IAAI,CAACC,GAAG,GAAGA,GAAG;IAEf;IAAC7O,YAAA,CAAA8vB,IAAA;MAAA54B,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAK5D,GAAG,EAAEC,GAAG,EAAG;QAEf,IAAI,CAACD,GAAG,CAACiF,IAAI,CAAEjF,GAAG,CAAE;QACpB,IAAI,CAACC,GAAG,CAACgF,IAAI,CAAEhF,GAAG,CAAE;QAEpB,OAAO,IAAI;MAEZ;IAAC;MAAA3X,GAAA;MAAAE,KAAA,EAED,SAAA64B,aAActiB,KAAK,EAAG;QAErB,IAAI,CAACuiB,SAAS,EAAE;QAEhB,KAAM,IAAIjzB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGha,KAAK,CAAC3Q,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,IAAI,CAAC,EAAG;UAEpD,IAAI,CAACkzB,aAAa,CAAEC,SAAS,CAAC3Z,SAAS,CAAE9I,KAAK,EAAE1Q,CAAC,CAAE,CAAE;QAEtD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAi5B,uBAAwBxZ,SAAS,EAAG;QAEnC,IAAI,CAACqZ,SAAS,EAAE;QAEhB,KAAM,IAAIjzB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG9Q,SAAS,CAAC2Q,KAAK,EAAEvqB,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAErD,IAAI,CAACkzB,aAAa,CAAEC,SAAS,CAACxZ,mBAAmB,CAAEC,SAAS,EAAE5Z,CAAC,CAAE,CAAE;QAEpE;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAk5B,cAAeC,MAAM,EAAG;QAEvB,IAAI,CAACL,SAAS,EAAE;QAEhB,KAAM,IAAIjzB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG4I,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAEnD,IAAI,CAACkzB,aAAa,CAAEI,MAAM,CAAEtzB,CAAC,CAAE,CAAE;QAElC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAo5B,qBAAsBvZ,MAAM,EAAEwZ,IAAI,EAAG;QAEpC,IAAMC,QAAQ,GAAGN,SAAS,CAACvc,IAAI,CAAE4c,IAAI,CAAE,CAAClc,cAAc,CAAE,GAAG,CAAE;QAE7D,IAAI,CAAC3F,GAAG,CAACiF,IAAI,CAAEoD,MAAM,CAAE,CAAC9C,GAAG,CAAEuc,QAAQ,CAAE;QACvC,IAAI,CAAC7hB,GAAG,CAACgF,IAAI,CAAEoD,MAAM,CAAE,CAAClD,GAAG,CAAE2c,QAAQ,CAAE;QAEvC,OAAO,IAAI;MAEZ;IAAC;MAAAx5B,GAAA;MAAAE,KAAA,EAED,SAAAu5B,cAAe1yB,MAAM,EAAE2yB,OAAO,GAAG,KAAK,EAAG;QAExC,IAAI,CAACV,SAAS,EAAE;QAEhB,OAAO,IAAI,CAACW,cAAc,CAAE5yB,MAAM,EAAE2yB,OAAO,CAAE;MAE9C;IAAC;MAAA15B,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAMid,GAAG,EAAG;QAEX,IAAI,CAACliB,GAAG,CAACiF,IAAI,CAAEid,GAAG,CAACliB,GAAG,CAAE;QACxB,IAAI,CAACC,GAAG,CAACgF,IAAI,CAAEid,GAAG,CAACjiB,GAAG,CAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAA3X,GAAA;MAAAE,KAAA,EAED,SAAA84B,UAAA,EAAY;QAEX,IAAI,CAACthB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACN,GAAG,CAACY,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACuU,CAAC,GAAG,CAAE4M,QAAQ;QACjD,IAAI,CAAClhB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,IAAI,CAACX,GAAG,CAACsU,CAAC,GAAG,CAAE4M,QAAQ;QAEjD,OAAO,IAAI;MAEZ;IAAC;MAAA74B,GAAA;MAAAE,KAAA,EAED,SAAA25B,QAAA,EAAU;QAET;;QAEA,OAAS,IAAI,CAACliB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAQ,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAG,IAAM,IAAI,CAACX,GAAG,CAACsU,CAAC,GAAG,IAAI,CAACvU,GAAG,CAACuU,CAAG;MAEjG;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA45B,UAAWpxB,MAAM,EAAG;QAEnB,OAAO,IAAI,CAACmxB,OAAO,EAAE,GAAGnxB,MAAM,CAAC4S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAG5S,MAAM,CAACqU,UAAU,CAAE,IAAI,CAACrF,GAAG,EAAE,IAAI,CAACC,GAAG,CAAE,CAAC0F,cAAc,CAAE,GAAG,CAAE;MAE9G;IAAC;MAAArd,GAAA;MAAAE,KAAA,EAED,SAAA65B,QAASrxB,MAAM,EAAG;QAEjB,OAAO,IAAI,CAACmxB,OAAO,EAAE,GAAGnxB,MAAM,CAAC4S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAG5S,MAAM,CAACyU,UAAU,CAAE,IAAI,CAACxF,GAAG,EAAE,IAAI,CAACD,GAAG,CAAE;MAExF;IAAC;MAAA1X,GAAA;MAAAE,KAAA,EAED,SAAA+4B,cAAee,KAAK,EAAG;QAEtB,IAAI,CAACtiB,GAAG,CAACA,GAAG,CAAEsiB,KAAK,CAAE;QACrB,IAAI,CAACriB,GAAG,CAACA,GAAG,CAAEqiB,KAAK,CAAE;QAErB,OAAO,IAAI;MAEZ;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAA+5B,eAAgBC,MAAM,EAAG;QAExB,IAAI,CAACxiB,GAAG,CAACuF,GAAG,CAAEid,MAAM,CAAE;QACtB,IAAI,CAACviB,GAAG,CAACkF,GAAG,CAAEqd,MAAM,CAAE;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAl6B,GAAA;MAAAE,KAAA,EAED,SAAAi6B,eAAgB9d,MAAM,EAAG;QAExB,IAAI,CAAC3E,GAAG,CAACoF,SAAS,CAAE,CAAET,MAAM,CAAE;QAC9B,IAAI,CAAC1E,GAAG,CAACmF,SAAS,CAAET,MAAM,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAAy5B,eAAgB5yB,MAAM,EAAE2yB,OAAO,GAAG,KAAK,EAAG;QAEzC;QACA;;QAEA3yB,MAAM,CAACqzB,iBAAiB,CAAE,KAAK,EAAE,KAAK,CAAE;QAExC,IAAKrzB,MAAM,CAACszB,WAAW,KAAK71B,SAAS,EAAG;UAEvC,IAAKuC,MAAM,CAACszB,WAAW,KAAK,IAAI,EAAG;YAElCtzB,MAAM,CAACuzB,kBAAkB,EAAE;UAE5B;UAEAC,MAAM,CAAC5d,IAAI,CAAE5V,MAAM,CAACszB,WAAW,CAAE;UACjCE,MAAM,CAACjO,YAAY,CAAEvlB,MAAM,CAAC8vB,WAAW,CAAE;UAEzC,IAAI,CAAC2D,KAAK,CAAED,MAAM,CAAE;QAErB,CAAC,MAAM;UAEN,IAAME,QAAQ,GAAG1zB,MAAM,CAAC0zB,QAAQ;UAEhC,IAAKA,QAAQ,KAAKj2B,SAAS,EAAG;YAE7B,IAAKk1B,OAAO,IAAIe,QAAQ,CAACC,UAAU,KAAKl2B,SAAS,IAAIi2B,QAAQ,CAACC,UAAU,CAACC,QAAQ,KAAKn2B,SAAS,EAAG;cAEjG,IAAMm2B,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;cAC7C,KAAM,IAAI50B,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGikB,QAAQ,CAACrK,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;gBAElDmzB,SAAS,CAACxZ,mBAAmB,CAAEib,QAAQ,EAAE50B,CAAC,CAAE,CAACumB,YAAY,CAAEvlB,MAAM,CAAC8vB,WAAW,CAAE;gBAC/E,IAAI,CAACoC,aAAa,CAAEC,SAAS,CAAE;cAEhC;YAED,CAAC,MAAM;cAEN,IAAKuB,QAAQ,CAACJ,WAAW,KAAK,IAAI,EAAG;gBAEpCI,QAAQ,CAACH,kBAAkB,EAAE;cAE9B;cAEAC,MAAM,CAAC5d,IAAI,CAAE8d,QAAQ,CAACJ,WAAW,CAAE;cACnCE,MAAM,CAACjO,YAAY,CAAEvlB,MAAM,CAAC8vB,WAAW,CAAE;cAEzC,IAAI,CAAC2D,KAAK,CAAED,MAAM,CAAE;YAErB;UAED;QAED;QAEA,IAAMK,QAAQ,GAAG7zB,MAAM,CAAC6zB,QAAQ;QAEhC,KAAM,IAAI70B,GAAC,GAAG,CAAC,EAAE2Q,EAAC,GAAGkkB,QAAQ,CAAC90B,MAAM,EAAEC,GAAC,GAAG2Q,EAAC,EAAE3Q,GAAC,EAAG,EAAG;UAEnD,IAAI,CAAC4zB,cAAc,CAAEiB,QAAQ,CAAE70B,GAAC,CAAE,EAAE2zB,OAAO,CAAE;QAE9C;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA15B,GAAA;MAAAE,KAAA,EAED,SAAA26B,cAAeb,KAAK,EAAG;QAEtB,OAAOA,KAAK,CAAChiB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAIgiB,KAAK,CAAChiB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAClDgiB,KAAK,CAAC1hB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAI0hB,KAAK,CAAC1hB,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,IAC5C0hB,KAAK,CAAC/N,CAAC,GAAG,IAAI,CAACvU,GAAG,CAACuU,CAAC,IAAI+N,KAAK,CAAC/N,CAAC,GAAG,IAAI,CAACtU,GAAG,CAACsU,CAAC,GAAG,KAAK,GAAG,IAAI;MAE7D;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA46B,YAAalB,GAAG,EAAG;QAElB,OAAO,IAAI,CAACliB,GAAG,CAACM,CAAC,IAAI4hB,GAAG,CAACliB,GAAG,CAACM,CAAC,IAAI4hB,GAAG,CAACjiB,GAAG,CAACK,CAAC,IAAI,IAAI,CAACL,GAAG,CAACK,CAAC,IACxD,IAAI,CAACN,GAAG,CAACY,CAAC,IAAIshB,GAAG,CAACliB,GAAG,CAACY,CAAC,IAAIshB,GAAG,CAACjiB,GAAG,CAACW,CAAC,IAAI,IAAI,CAACX,GAAG,CAACW,CAAC,IAClD,IAAI,CAACZ,GAAG,CAACuU,CAAC,IAAI2N,GAAG,CAACliB,GAAG,CAACuU,CAAC,IAAI2N,GAAG,CAACjiB,GAAG,CAACsU,CAAC,IAAI,IAAI,CAACtU,GAAG,CAACsU,CAAC;MAEpD;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA66B,aAAcf,KAAK,EAAEtxB,MAAM,EAAG;QAE7B;QACA;;QAEA,OAAOA,MAAM,CAAC4S,GAAG,CAChB,CAAE0e,KAAK,CAAChiB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,KAAO,IAAI,CAACL,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,CAAE,EACtD,CAAEgiB,KAAK,CAAC1hB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,KAAO,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,CAAE,EACtD,CAAE0hB,KAAK,CAAC/N,CAAC,GAAG,IAAI,CAACvU,GAAG,CAACuU,CAAC,KAAO,IAAI,CAACtU,GAAG,CAACsU,CAAC,GAAG,IAAI,CAACvU,GAAG,CAACuU,CAAC,CAAE,CACtD;MAEF;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA86B,cAAepB,GAAG,EAAG;QAEpB;QACA,OAAOA,GAAG,CAACjiB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAI4hB,GAAG,CAACliB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IACtD4hB,GAAG,CAACjiB,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAIshB,GAAG,CAACliB,GAAG,CAACY,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,IAChDshB,GAAG,CAACjiB,GAAG,CAACsU,CAAC,GAAG,IAAI,CAACvU,GAAG,CAACuU,CAAC,IAAI2N,GAAG,CAACliB,GAAG,CAACuU,CAAC,GAAG,IAAI,CAACtU,GAAG,CAACsU,CAAC,GAAG,KAAK,GAAG,IAAI;MAEjE;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA+6B,iBAAkBC,MAAM,EAAG;QAE1B;QACA,IAAI,CAACC,UAAU,CAAED,MAAM,CAACnb,MAAM,EAAEmZ,SAAS,CAAE;;QAE3C;QACA,OAAOA,SAAS,CAACra,iBAAiB,CAAEqc,MAAM,CAACnb,MAAM,CAAE,IAAMmb,MAAM,CAACnD,MAAM,GAAGmD,MAAM,CAACnD,MAAQ;MAEzF;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAAk7B,gBAAiBC,KAAK,EAAG;QAExB;QACA;;QAEA,IAAI3jB,GAAG,EAAEC,GAAG;QAEZ,IAAK0jB,KAAK,CAAC1D,MAAM,CAAC3f,CAAC,GAAG,CAAC,EAAG;UAEzBN,GAAG,GAAG2jB,KAAK,CAAC1D,MAAM,CAAC3f,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC;UACjCL,GAAG,GAAG0jB,KAAK,CAAC1D,MAAM,CAAC3f,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC;QAElC,CAAC,MAAM;UAENN,GAAG,GAAG2jB,KAAK,CAAC1D,MAAM,CAAC3f,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC;UACjCL,GAAG,GAAG0jB,KAAK,CAAC1D,MAAM,CAAC3f,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC;QAElC;QAEA,IAAKqjB,KAAK,CAAC1D,MAAM,CAACrf,CAAC,GAAG,CAAC,EAAG;UAEzBZ,GAAG,IAAI2jB,KAAK,CAAC1D,MAAM,CAACrf,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC;UAClCX,GAAG,IAAI0jB,KAAK,CAAC1D,MAAM,CAACrf,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC;QAEnC,CAAC,MAAM;UAENZ,GAAG,IAAI2jB,KAAK,CAAC1D,MAAM,CAACrf,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC;UAClCX,GAAG,IAAI0jB,KAAK,CAAC1D,MAAM,CAACrf,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC;QAEnC;QAEA,IAAK+iB,KAAK,CAAC1D,MAAM,CAAC1L,CAAC,GAAG,CAAC,EAAG;UAEzBvU,GAAG,IAAI2jB,KAAK,CAAC1D,MAAM,CAAC1L,CAAC,GAAG,IAAI,CAACvU,GAAG,CAACuU,CAAC;UAClCtU,GAAG,IAAI0jB,KAAK,CAAC1D,MAAM,CAAC1L,CAAC,GAAG,IAAI,CAACtU,GAAG,CAACsU,CAAC;QAEnC,CAAC,MAAM;UAENvU,GAAG,IAAI2jB,KAAK,CAAC1D,MAAM,CAAC1L,CAAC,GAAG,IAAI,CAACtU,GAAG,CAACsU,CAAC;UAClCtU,GAAG,IAAI0jB,KAAK,CAAC1D,MAAM,CAAC1L,CAAC,GAAG,IAAI,CAACvU,GAAG,CAACuU,CAAC;QAEnC;QAEA,OAASvU,GAAG,IAAI,CAAE2jB,KAAK,CAACC,QAAQ,IAAI3jB,GAAG,IAAI,CAAE0jB,KAAK,CAACC,QAAQ;MAE5D;IAAC;MAAAt7B,GAAA;MAAAE,KAAA,EAED,SAAAq7B,mBAAoBC,QAAQ,EAAG;QAE9B,IAAK,IAAI,CAAC3B,OAAO,EAAE,EAAG;UAErB,OAAO,KAAK;QAEb;;QAEA;QACA,IAAI,CAACC,SAAS,CAAE2B,OAAO,CAAE;QACzBC,QAAQ,CAACve,UAAU,CAAE,IAAI,CAACxF,GAAG,EAAE8jB,OAAO,CAAE;;QAExC;QACAE,KAAK,CAACxe,UAAU,CAAEqe,QAAQ,CAAChhB,CAAC,EAAEihB,OAAO,CAAE;QACvCG,KAAK,CAACze,UAAU,CAAEqe,QAAQ,CAAC/gB,CAAC,EAAEghB,OAAO,CAAE;QACvCI,KAAK,CAAC1e,UAAU,CAAEqe,QAAQ,CAAC9gB,CAAC,EAAE+gB,OAAO,CAAE;;QAEvC;QACAK,GAAG,CAAC3e,UAAU,CAAEye,KAAK,EAAED,KAAK,CAAE;QAC9BI,GAAG,CAAC5e,UAAU,CAAE0e,KAAK,EAAED,KAAK,CAAE;QAC9BI,GAAG,CAAC7e,UAAU,CAAEwe,KAAK,EAAEE,KAAK,CAAE;;QAE9B;QACA;QACA;QACA,IAAII,IAAI,GAAG,CACV,CAAC,EAAE,CAAEH,GAAG,CAAC7P,CAAC,EAAE6P,GAAG,CAACxjB,CAAC,EAAE,CAAC,EAAE,CAAEyjB,GAAG,CAAC9P,CAAC,EAAE8P,GAAG,CAACzjB,CAAC,EAAE,CAAC,EAAE,CAAE0jB,GAAG,CAAC/P,CAAC,EAAE+P,GAAG,CAAC1jB,CAAC,EACvDwjB,GAAG,CAAC7P,CAAC,EAAE,CAAC,EAAE,CAAE6P,GAAG,CAAC9jB,CAAC,EAAE+jB,GAAG,CAAC9P,CAAC,EAAE,CAAC,EAAE,CAAE8P,GAAG,CAAC/jB,CAAC,EAAEgkB,GAAG,CAAC/P,CAAC,EAAE,CAAC,EAAE,CAAE+P,GAAG,CAAChkB,CAAC,EACvD,CAAE8jB,GAAG,CAACxjB,CAAC,EAAEwjB,GAAG,CAAC9jB,CAAC,EAAE,CAAC,EAAE,CAAE+jB,GAAG,CAACzjB,CAAC,EAAEyjB,GAAG,CAAC/jB,CAAC,EAAE,CAAC,EAAE,CAAEgkB,GAAG,CAAC1jB,CAAC,EAAE0jB,GAAG,CAAChkB,CAAC,EAAE,CAAC,CACvD;QACD,IAAK,CAAEkkB,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAQ,CAAE,EAAG;UAE1D,OAAO,KAAK;QAEb;;QAEA;QACAO,IAAI,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACpC,IAAK,CAAEC,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAQ,CAAE,EAAG;UAE1D,OAAO,KAAK;QAEb;;QAEA;QACA;QACAS,eAAe,CAACpF,YAAY,CAAE+E,GAAG,EAAEC,GAAG,CAAE;QACxCE,IAAI,GAAG,CAAEE,eAAe,CAACnkB,CAAC,EAAEmkB,eAAe,CAAC7jB,CAAC,EAAE6jB,eAAe,CAAClQ,CAAC,CAAE;QAElE,OAAOiQ,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAQ,CAAE;MAEzD;IAAC;MAAA17B,GAAA;MAAAE,KAAA,EAED,SAAAi7B,WAAYnB,KAAK,EAAEtxB,MAAM,EAAG;QAE3B,OAAOA,MAAM,CAACiU,IAAI,CAAEqd,KAAK,CAAE,CAACviB,KAAK,CAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAG,CAAE;MAExD;IAAC;MAAA3X,GAAA;MAAAE,KAAA,EAED,SAAAk8B,gBAAiBpC,KAAK,EAAG;QAExB,OAAO,IAAI,CAACmB,UAAU,CAAEnB,KAAK,EAAEd,SAAS,CAAE,CAACta,UAAU,CAAEob,KAAK,CAAE;MAE/D;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAm8B,kBAAmB3zB,MAAM,EAAG;QAE3B,IAAK,IAAI,CAACmxB,OAAO,EAAE,EAAG;UAErBnxB,MAAM,CAACswB,SAAS,EAAE;QAEnB,CAAC,MAAM;UAEN,IAAI,CAACc,SAAS,CAAEpxB,MAAM,CAACqX,MAAM,CAAE;UAE/BrX,MAAM,CAACqvB,MAAM,GAAG,IAAI,CAACgC,OAAO,CAAEb,SAAS,CAAE,CAACpzB,MAAM,EAAE,GAAG,GAAG;QAEzD;QAEA,OAAO4C,MAAM;MAEd;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAAo8B,UAAW1C,GAAG,EAAG;QAEhB,IAAI,CAACliB,GAAG,CAACC,GAAG,CAAEiiB,GAAG,CAACliB,GAAG,CAAE;QACvB,IAAI,CAACC,GAAG,CAACD,GAAG,CAAEkiB,GAAG,CAACjiB,GAAG,CAAE;;QAEvB;QACA,IAAK,IAAI,CAACkiB,OAAO,EAAE,EAAG,IAAI,CAACb,SAAS,EAAE;QAEtC,OAAO,IAAI;MAEZ;IAAC;MAAAh5B,GAAA;MAAAE,KAAA,EAED,SAAAs6B,MAAOZ,GAAG,EAAG;QAEZ,IAAI,CAACliB,GAAG,CAACA,GAAG,CAAEkiB,GAAG,CAACliB,GAAG,CAAE;QACvB,IAAI,CAACC,GAAG,CAACA,GAAG,CAAEiiB,GAAG,CAACjiB,GAAG,CAAE;QAEvB,OAAO,IAAI;MAEZ;IAAC;MAAA3X,GAAA;MAAAE,KAAA,EAED,SAAAosB,aAAc1H,MAAM,EAAG;QAEtB;QACA,IAAK,IAAI,CAACiV,OAAO,EAAE,EAAG,OAAO,IAAI;;QAEjC;QACA0C,OAAO,CAAE,CAAC,CAAE,CAACjhB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACuU,CAAC,CAAE,CAACK,YAAY,CAAE1H,MAAM,CAAE,CAAC,CAAC;QAC/E2X,OAAO,CAAE,CAAC,CAAE,CAACjhB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACX,GAAG,CAACsU,CAAC,CAAE,CAACK,YAAY,CAAE1H,MAAM,CAAE,CAAC,CAAC;QAC/E2X,OAAO,CAAE,CAAC,CAAE,CAACjhB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACuU,CAAC,CAAE,CAACK,YAAY,CAAE1H,MAAM,CAAE,CAAC,CAAC;QAC/E2X,OAAO,CAAE,CAAC,CAAE,CAACjhB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACX,GAAG,CAACsU,CAAC,CAAE,CAACK,YAAY,CAAE1H,MAAM,CAAE,CAAC,CAAC;QAC/E2X,OAAO,CAAE,CAAC,CAAE,CAACjhB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACuU,CAAC,CAAE,CAACK,YAAY,CAAE1H,MAAM,CAAE,CAAC,CAAC;QAC/E2X,OAAO,CAAE,CAAC,CAAE,CAACjhB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACX,GAAG,CAACsU,CAAC,CAAE,CAACK,YAAY,CAAE1H,MAAM,CAAE,CAAC,CAAC;QAC/E2X,OAAO,CAAE,CAAC,CAAE,CAACjhB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACuU,CAAC,CAAE,CAACK,YAAY,CAAE1H,MAAM,CAAE,CAAC,CAAC;QAC/E2X,OAAO,CAAE,CAAC,CAAE,CAACjhB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACX,GAAG,CAACsU,CAAC,CAAE,CAACK,YAAY,CAAE1H,MAAM,CAAE,CAAC,CAAC;;QAE/E,IAAI,CAACwU,aAAa,CAAEmD,OAAO,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAv8B,GAAA;MAAAE,KAAA,EAED,SAAAwkB,UAAWlF,MAAM,EAAG;QAEnB,IAAI,CAAC9H,GAAG,CAACmF,GAAG,CAAE2C,MAAM,CAAE;QACtB,IAAI,CAAC7H,GAAG,CAACkF,GAAG,CAAE2C,MAAM,CAAE;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQsa,GAAG,EAAG;QAEb,OAAOA,GAAG,CAACliB,GAAG,CAAC4H,MAAM,CAAE,IAAI,CAAC5H,GAAG,CAAE,IAAIkiB,GAAG,CAACjiB,GAAG,CAAC2H,MAAM,CAAE,IAAI,CAAC3H,GAAG,CAAE;MAEhE;IAAC;IAAA,OAAAihB,IAAA;EAAA;EAIF,IAAM2D,OAAO,GAAG,CACf,aAAc,IAAIjH,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,CAC3B;EAED,IAAM4D,SAAS,GAAG,aAAc,IAAI5D,OAAO,EAAE;EAE7C,IAAMiF,MAAM,GAAG,aAAc,IAAI3B,IAAI,EAAE;;EAEvC;;EAEA,IAAM+C,KAAK,GAAG,aAAc,IAAIrG,OAAO,EAAE;EACzC,IAAMsG,KAAK,GAAG,aAAc,IAAItG,OAAO,EAAE;EACzC,IAAMuG,KAAK,GAAG,aAAc,IAAIvG,OAAO,EAAE;;EAEzC;;EAEA,IAAMwG,GAAG,GAAG,aAAc,IAAIxG,OAAO,EAAE;EACvC,IAAMyG,GAAG,GAAG,aAAc,IAAIzG,OAAO,EAAE;EACvC,IAAM0G,GAAG,GAAG,aAAc,IAAI1G,OAAO,EAAE;EAEvC,IAAMmG,OAAO,GAAG,aAAc,IAAInG,OAAO,EAAE;EAC3C,IAAMoG,QAAQ,GAAG,aAAc,IAAIpG,OAAO,EAAE;EAC5C,IAAM6G,eAAe,GAAG,aAAc,IAAI7G,OAAO,EAAE;EACnD,IAAMkH,SAAS,GAAG,aAAc,IAAIlH,OAAO,EAAE;EAE7C,SAAS4G,UAAUA,CAAED,IAAI,EAAEQ,EAAE,EAAErd,EAAE,EAAEC,EAAE,EAAEqd,OAAO,EAAG;IAEhD,KAAM,IAAI32B,CAAC,GAAG,CAAC,EAAE42B,CAAC,GAAGV,IAAI,CAACn2B,MAAM,GAAG,CAAC,EAAEC,CAAC,IAAI42B,CAAC,EAAE52B,CAAC,IAAI,CAAC,EAAG;MAEtDy2B,SAAS,CAACjd,SAAS,CAAE0c,IAAI,EAAEl2B,CAAC,CAAE;MAC9B;MACA,IAAM6d,CAAC,GAAG8Y,OAAO,CAAC1kB,CAAC,GAAGlB,IAAI,CAACgC,GAAG,CAAE0jB,SAAS,CAACxkB,CAAC,CAAE,GAAG0kB,OAAO,CAACpkB,CAAC,GAAGxB,IAAI,CAACgC,GAAG,CAAE0jB,SAAS,CAAClkB,CAAC,CAAE,GAAGokB,OAAO,CAACzQ,CAAC,GAAGnV,IAAI,CAACgC,GAAG,CAAE0jB,SAAS,CAACvQ,CAAC,CAAE;MACzH;MACA,IAAM2Q,EAAE,GAAGH,EAAE,CAACxe,GAAG,CAAEue,SAAS,CAAE;MAC9B,IAAMK,EAAE,GAAGzd,EAAE,CAACnB,GAAG,CAAEue,SAAS,CAAE;MAC9B,IAAMM,EAAE,GAAGzd,EAAE,CAACpB,GAAG,CAAEue,SAAS,CAAE;MAC9B;MACA,IAAK1lB,IAAI,CAACa,GAAG,CAAE,CAAEb,IAAI,CAACa,GAAG,CAAEilB,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAE,EAAEhmB,IAAI,CAACY,GAAG,CAAEklB,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAE,CAAE,GAAGlZ,CAAC,EAAG;QAEvE;QACA;QACA,OAAO,KAAK;MAEb;IAED;IAEA,OAAO,IAAI;EAEZ;EAEA,IAAMmZ,MAAM,GAAG,aAAc,IAAInE,IAAI,EAAE;EACvC,IAAMoE,KAAK,GAAG,aAAc,IAAI1H,OAAO,EAAE;EACzC,IAAM2H,KAAK,GAAG,aAAc,IAAI3H,OAAO,EAAE;EAAC,IAEpC4H,MAAM;IAEX,SAAAA,OAAand,MAAM,GAAG,IAAIuV,OAAO,EAAE,EAAEyC,MAAM,GAAG,CAAE,CAAC,EAAG;MAAAzvB,eAAA,OAAA40B,MAAA;MAEnD,IAAI,CAACnd,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACgY,MAAM,GAAGA,MAAM;IAErB;IAACjvB,YAAA,CAAAo0B,MAAA;MAAAl9B,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKyE,MAAM,EAAEgY,MAAM,EAAG;QAErB,IAAI,CAAChY,MAAM,CAACpD,IAAI,CAAEoD,MAAM,CAAE;QAC1B,IAAI,CAACgY,MAAM,GAAGA,MAAM;QAEpB,OAAO,IAAI;MAEZ;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAAk5B,cAAeC,MAAM,EAAE8D,cAAc,EAAG;QAEvC,IAAMpd,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAKod,cAAc,KAAK34B,SAAS,EAAG;UAEnCub,MAAM,CAACpD,IAAI,CAAEwgB,cAAc,CAAE;QAE9B,CAAC,MAAM;UAENJ,MAAM,CAAC3D,aAAa,CAAEC,MAAM,CAAE,CAACS,SAAS,CAAE/Z,MAAM,CAAE;QAEnD;QAEA,IAAIqd,WAAW,GAAG,CAAC;QAEnB,KAAM,IAAIr3B,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG4I,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAEnDq3B,WAAW,GAAGtmB,IAAI,CAACa,GAAG,CAAEylB,WAAW,EAAErd,MAAM,CAAClB,iBAAiB,CAAEwa,MAAM,CAAEtzB,CAAC,CAAE,CAAE,CAAE;QAE/E;QAEA,IAAI,CAACgyB,MAAM,GAAGjhB,IAAI,CAACsH,IAAI,CAAEgf,WAAW,CAAE;QAEtC,OAAO,IAAI;MAEZ;IAAC;MAAAp9B,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAMue,MAAM,EAAG;QAEd,IAAI,CAACnb,MAAM,CAACpD,IAAI,CAAEue,MAAM,CAACnb,MAAM,CAAE;QACjC,IAAI,CAACgY,MAAM,GAAGmD,MAAM,CAACnD,MAAM;QAE3B,OAAO,IAAI;MAEZ;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAA25B,QAAA,EAAU;QAET,OAAS,IAAI,CAAC9B,MAAM,GAAG,CAAC;MAEzB;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAA84B,UAAA,EAAY;QAEX,IAAI,CAACjZ,MAAM,CAACzE,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAC1B,IAAI,CAACyc,MAAM,GAAG,CAAE,CAAC;QAEjB,OAAO,IAAI;MAEZ;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAA26B,cAAeb,KAAK,EAAG;QAEtB,OAASA,KAAK,CAACnb,iBAAiB,CAAE,IAAI,CAACkB,MAAM,CAAE,IAAM,IAAI,CAACgY,MAAM,GAAG,IAAI,CAACA,MAAQ;MAEjF;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAAk8B,gBAAiBpC,KAAK,EAAG;QAExB,OAASA,KAAK,CAACpb,UAAU,CAAE,IAAI,CAACmB,MAAM,CAAE,GAAG,IAAI,CAACgY,MAAM;MAEvD;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAA+6B,iBAAkBC,MAAM,EAAG;QAE1B,IAAMmC,SAAS,GAAG,IAAI,CAACtF,MAAM,GAAGmD,MAAM,CAACnD,MAAM;QAE7C,OAAOmD,MAAM,CAACnb,MAAM,CAAClB,iBAAiB,CAAE,IAAI,CAACkB,MAAM,CAAE,IAAMsd,SAAS,GAAGA,SAAW;MAEnF;IAAC;MAAAr9B,GAAA;MAAAE,KAAA,EAED,SAAA86B,cAAepB,GAAG,EAAG;QAEpB,OAAOA,GAAG,CAACqB,gBAAgB,CAAE,IAAI,CAAE;MAEpC;IAAC;MAAAj7B,GAAA;MAAAE,KAAA,EAED,SAAAk7B,gBAAiBC,KAAK,EAAG;QAExB,OAAOvkB,IAAI,CAACgC,GAAG,CAAEuiB,KAAK,CAACe,eAAe,CAAE,IAAI,CAACrc,MAAM,CAAE,CAAE,IAAI,IAAI,CAACgY,MAAM;MAEvE;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAAi7B,WAAYnB,KAAK,EAAEtxB,MAAM,EAAG;QAE3B,IAAM40B,aAAa,GAAG,IAAI,CAACvd,MAAM,CAAClB,iBAAiB,CAAEmb,KAAK,CAAE;QAE5DtxB,MAAM,CAACiU,IAAI,CAAEqd,KAAK,CAAE;QAEpB,IAAKsD,aAAa,GAAK,IAAI,CAACvF,MAAM,GAAG,IAAI,CAACA,MAAQ,EAAG;UAEpDrvB,MAAM,CAACuU,GAAG,CAAE,IAAI,CAAC8C,MAAM,CAAE,CAAClE,SAAS,EAAE;UACrCnT,MAAM,CAAC2U,cAAc,CAAE,IAAI,CAAC0a,MAAM,CAAE,CAAClb,GAAG,CAAE,IAAI,CAACkD,MAAM,CAAE;QAExD;QAEA,OAAOrX,MAAM;MAEd;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAAq9B,eAAgB70B,MAAM,EAAG;QAExB,IAAK,IAAI,CAACmxB,OAAO,EAAE,EAAG;UAErB;UACAnxB,MAAM,CAACswB,SAAS,EAAE;UAClB,OAAOtwB,MAAM;QAEd;QAEAA,MAAM,CAAC4S,GAAG,CAAE,IAAI,CAACyE,MAAM,EAAE,IAAI,CAACA,MAAM,CAAE;QACtCrX,MAAM,CAACyxB,cAAc,CAAE,IAAI,CAACpC,MAAM,CAAE;QAEpC,OAAOrvB,MAAM;MAEd;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAAosB,aAAc1H,MAAM,EAAG;QAEtB,IAAI,CAAC7E,MAAM,CAACuM,YAAY,CAAE1H,MAAM,CAAE;QAClC,IAAI,CAACmT,MAAM,GAAG,IAAI,CAACA,MAAM,GAAGnT,MAAM,CAAC4Y,iBAAiB,EAAE;QAEtD,OAAO,IAAI;MAEZ;IAAC;MAAAx9B,GAAA;MAAAE,KAAA,EAED,SAAAwkB,UAAWlF,MAAM,EAAG;QAEnB,IAAI,CAACO,MAAM,CAAClD,GAAG,CAAE2C,MAAM,CAAE;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAA+4B,cAAee,KAAK,EAAG;QAEtB,IAAK,IAAI,CAACH,OAAO,EAAE,EAAG;UAErB,IAAI,CAAC9Z,MAAM,CAACpD,IAAI,CAAEqd,KAAK,CAAE;UAEzB,IAAI,CAACjC,MAAM,GAAG,CAAC;UAEf,OAAO,IAAI;QAEZ;QAEAiF,KAAK,CAAC7f,UAAU,CAAE6c,KAAK,EAAE,IAAI,CAACja,MAAM,CAAE;QAEtC,IAAM5B,QAAQ,GAAG6e,KAAK,CAAC7e,QAAQ,EAAE;QAEjC,IAAKA,QAAQ,GAAK,IAAI,CAAC4Z,MAAM,GAAG,IAAI,CAACA,MAAQ,EAAG;UAE/C;;UAEA,IAAMjyB,MAAM,GAAGgR,IAAI,CAACsH,IAAI,CAAED,QAAQ,CAAE;UAEpC,IAAMsf,KAAK,GAAG,CAAE33B,MAAM,GAAG,IAAI,CAACiyB,MAAM,IAAK,GAAG;UAE5C,IAAI,CAAChY,MAAM,CAAC/C,eAAe,CAAEggB,KAAK,EAAES,KAAK,GAAG33B,MAAM,CAAE;UAEpD,IAAI,CAACiyB,MAAM,IAAI0F,KAAK;QAErB;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAz9B,GAAA;MAAAE,KAAA,EAED,SAAAs6B,MAAOU,MAAM,EAAG;QAEf,IAAKA,MAAM,CAACrB,OAAO,EAAE,EAAG;UAEvB,OAAO,IAAI;QAEZ;QAEA,IAAK,IAAI,CAACA,OAAO,EAAE,EAAG;UAErB,IAAI,CAACld,IAAI,CAAEue,MAAM,CAAE;UAEnB,OAAO,IAAI;QAEZ;QAEA,IAAK,IAAI,CAACnb,MAAM,CAACT,MAAM,CAAE4b,MAAM,CAACnb,MAAM,CAAE,KAAK,IAAI,EAAG;UAElD,IAAI,CAACgY,MAAM,GAAGjhB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACogB,MAAM,EAAEmD,MAAM,CAACnD,MAAM,CAAE;QAEtD,CAAC,MAAM;UAENkF,KAAK,CAAC9f,UAAU,CAAE+d,MAAM,CAACnb,MAAM,EAAE,IAAI,CAACA,MAAM,CAAE,CAACd,SAAS,CAAEic,MAAM,CAACnD,MAAM,CAAE;UAEzE,IAAI,CAACkB,aAAa,CAAE+D,KAAK,CAACrgB,IAAI,CAAEue,MAAM,CAACnb,MAAM,CAAE,CAAClD,GAAG,CAAEogB,KAAK,CAAE,CAAE;UAE9D,IAAI,CAAChE,aAAa,CAAE+D,KAAK,CAACrgB,IAAI,CAAEue,MAAM,CAACnb,MAAM,CAAE,CAAC9C,GAAG,CAAEggB,KAAK,CAAE,CAAE;QAE/D;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAj9B,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQ4b,MAAM,EAAG;QAEhB,OAAOA,MAAM,CAACnb,MAAM,CAACT,MAAM,CAAE,IAAI,CAACS,MAAM,CAAE,IAAMmb,MAAM,CAACnD,MAAM,KAAK,IAAI,CAACA,MAAQ;MAEhF;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;IAAA,OAAAugB,MAAA;EAAA;EAIF,IAAMQ,SAAS,GAAG,aAAc,IAAIpI,OAAO,EAAE;EAC7C,IAAMqI,UAAU,GAAG,aAAc,IAAIrI,OAAO,EAAE;EAC9C,IAAMsI,OAAO,GAAG,aAAc,IAAItI,OAAO,EAAE;EAC3C,IAAMuI,KAAK,GAAG,aAAc,IAAIvI,OAAO,EAAE;EAEzC,IAAMwI,MAAM,GAAG,aAAc,IAAIxI,OAAO,EAAE;EAC1C,IAAMyI,MAAM,GAAG,aAAc,IAAIzI,OAAO,EAAE;EAC1C,IAAM0I,SAAS,GAAG,aAAc,IAAI1I,OAAO,EAAE;EAAC,IAExC2I,GAAG;IAER,SAAAA,IAAaC,MAAM,GAAG,IAAI5I,OAAO,EAAE,EAAE6I,SAAS,GAAG,IAAI7I,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,EAAG;MAAAhtB,eAAA,OAAA21B,GAAA;MAE3E,IAAI,CAACC,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAE3B;IAACr1B,YAAA,CAAAm1B,GAAA;MAAAj+B,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAK4iB,MAAM,EAAEC,SAAS,EAAG;QAExB,IAAI,CAACD,MAAM,CAACvhB,IAAI,CAAEuhB,MAAM,CAAE;QAC1B,IAAI,CAACC,SAAS,CAACxhB,IAAI,CAAEwhB,SAAS,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAn+B,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAMyhB,GAAG,EAAG;QAEX,IAAI,CAACF,MAAM,CAACvhB,IAAI,CAAEyhB,GAAG,CAACF,MAAM,CAAE;QAC9B,IAAI,CAACC,SAAS,CAACxhB,IAAI,CAAEyhB,GAAG,CAACD,SAAS,CAAE;QAEpC,OAAO,IAAI;MAEZ;IAAC;MAAAn+B,GAAA;MAAAE,KAAA,EAED,SAAAm+B,GAAI7lB,CAAC,EAAE9P,MAAM,EAAG;QAEf,OAAOA,MAAM,CAACiU,IAAI,CAAE,IAAI,CAACuhB,MAAM,CAAE,CAAClhB,eAAe,CAAE,IAAI,CAACmhB,SAAS,EAAE3lB,CAAC,CAAE;MAEvE;IAAC;MAAAxY,GAAA;MAAAE,KAAA,EAED,SAAAo+B,OAAQ1hB,CAAC,EAAG;QAEX,IAAI,CAACuhB,SAAS,CAACxhB,IAAI,CAAEC,CAAC,CAAE,CAACK,GAAG,CAAE,IAAI,CAACihB,MAAM,CAAE,CAACriB,SAAS,EAAE;QAEvD,OAAO,IAAI;MAEZ;IAAC;MAAA7b,GAAA;MAAAE,KAAA,EAED,SAAAq+B,OAAQ/lB,CAAC,EAAG;QAEX,IAAI,CAAC0lB,MAAM,CAACvhB,IAAI,CAAE,IAAI,CAAC0hB,EAAE,CAAE7lB,CAAC,EAAEklB,SAAS,CAAE,CAAE;QAE3C,OAAO,IAAI;MAEZ;IAAC;MAAA19B,GAAA;MAAAE,KAAA,EAED,SAAAs+B,oBAAqBxE,KAAK,EAAEtxB,MAAM,EAAG;QAEpCA,MAAM,CAACyU,UAAU,CAAE6c,KAAK,EAAE,IAAI,CAACkE,MAAM,CAAE;QAEvC,IAAMO,iBAAiB,GAAG/1B,MAAM,CAACuV,GAAG,CAAE,IAAI,CAACkgB,SAAS,CAAE;QAEtD,IAAKM,iBAAiB,GAAG,CAAC,EAAG;UAE5B,OAAO/1B,MAAM,CAACiU,IAAI,CAAE,IAAI,CAACuhB,MAAM,CAAE;QAElC;QAEA,OAAOx1B,MAAM,CAACiU,IAAI,CAAE,IAAI,CAACuhB,MAAM,CAAE,CAAClhB,eAAe,CAAE,IAAI,CAACmhB,SAAS,EAAEM,iBAAiB,CAAE;MAEvF;IAAC;MAAAz+B,GAAA;MAAAE,KAAA,EAED,SAAAk8B,gBAAiBpC,KAAK,EAAG;QAExB,OAAOljB,IAAI,CAACsH,IAAI,CAAE,IAAI,CAACsgB,iBAAiB,CAAE1E,KAAK,CAAE,CAAE;MAEpD;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAw+B,kBAAmB1E,KAAK,EAAG;QAE1B,IAAMyE,iBAAiB,GAAGf,SAAS,CAACvgB,UAAU,CAAE6c,KAAK,EAAE,IAAI,CAACkE,MAAM,CAAE,CAACjgB,GAAG,CAAE,IAAI,CAACkgB,SAAS,CAAE;;QAE1F;;QAEA,IAAKM,iBAAiB,GAAG,CAAC,EAAG;UAE5B,OAAO,IAAI,CAACP,MAAM,CAACrf,iBAAiB,CAAEmb,KAAK,CAAE;QAE9C;QAEA0D,SAAS,CAAC/gB,IAAI,CAAE,IAAI,CAACuhB,MAAM,CAAE,CAAClhB,eAAe,CAAE,IAAI,CAACmhB,SAAS,EAAEM,iBAAiB,CAAE;QAElF,OAAOf,SAAS,CAAC7e,iBAAiB,CAAEmb,KAAK,CAAE;MAE5C;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAy+B,oBAAqBlC,EAAE,EAAErd,EAAE,EAAEwf,kBAAkB,EAAEC,sBAAsB,EAAG;QAEzE;QACA;QACA;QACA;QACA;QACA;;QAEAlB,UAAU,CAAChhB,IAAI,CAAE8f,EAAE,CAAE,CAAC5f,GAAG,CAAEuC,EAAE,CAAE,CAAC/B,cAAc,CAAE,GAAG,CAAE;QACrDugB,OAAO,CAACjhB,IAAI,CAAEyC,EAAE,CAAE,CAACnC,GAAG,CAAEwf,EAAE,CAAE,CAAC5gB,SAAS,EAAE;QACxCgiB,KAAK,CAAClhB,IAAI,CAAE,IAAI,CAACuhB,MAAM,CAAE,CAACjhB,GAAG,CAAE0gB,UAAU,CAAE;QAE3C,IAAMmB,SAAS,GAAGrC,EAAE,CAAC7d,UAAU,CAAEQ,EAAE,CAAE,GAAG,GAAG;QAC3C,IAAM2f,GAAG,GAAG,CAAE,IAAI,CAACZ,SAAS,CAAClgB,GAAG,CAAE2f,OAAO,CAAE;QAC3C,IAAMoB,EAAE,GAAGnB,KAAK,CAAC5f,GAAG,CAAE,IAAI,CAACkgB,SAAS,CAAE;QACtC,IAAMhmB,EAAE,GAAG,CAAE0lB,KAAK,CAAC5f,GAAG,CAAE2f,OAAO,CAAE;QACjC,IAAMljB,CAAC,GAAGmjB,KAAK,CAAC1f,QAAQ,EAAE;QAC1B,IAAMkF,GAAG,GAAGvM,IAAI,CAACgC,GAAG,CAAE,CAAC,GAAGimB,GAAG,GAAGA,GAAG,CAAE;QACrC,IAAIE,EAAE,EAAExN,EAAE,EAAEyN,OAAO,EAAEC,MAAM;QAE3B,IAAK9b,GAAG,GAAG,CAAC,EAAG;UAEd;;UAEA4b,EAAE,GAAGF,GAAG,GAAG5mB,EAAE,GAAG6mB,EAAE;UAClBvN,EAAE,GAAGsN,GAAG,GAAGC,EAAE,GAAG7mB,EAAE;UAClBgnB,MAAM,GAAGL,SAAS,GAAGzb,GAAG;UAExB,IAAK4b,EAAE,IAAI,CAAC,EAAG;YAEd,IAAKxN,EAAE,IAAI,CAAE0N,MAAM,EAAG;cAErB,IAAK1N,EAAE,IAAI0N,MAAM,EAAG;gBAEnB;gBACA;;gBAEA,IAAMC,MAAM,GAAG,CAAC,GAAG/b,GAAG;gBACtB4b,EAAE,IAAIG,MAAM;gBACZ3N,EAAE,IAAI2N,MAAM;gBACZF,OAAO,GAAGD,EAAE,IAAKA,EAAE,GAAGF,GAAG,GAAGtN,EAAE,GAAG,CAAC,GAAGuN,EAAE,CAAE,GAAGvN,EAAE,IAAKsN,GAAG,GAAGE,EAAE,GAAGxN,EAAE,GAAG,CAAC,GAAGtZ,EAAE,CAAE,GAAGuC,CAAC;cAEhF,CAAC,MAAM;gBAEN;;gBAEA+W,EAAE,GAAGqN,SAAS;gBACdG,EAAE,GAAGnoB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIonB,GAAG,GAAGtN,EAAE,GAAGuN,EAAE,CAAE,CAAE;gBACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGtZ,EAAE,CAAE,GAAGuC,CAAC;cAE/C;YAED,CAAC,MAAM;cAEN;;cAEA+W,EAAE,GAAG,CAAEqN,SAAS;cAChBG,EAAE,GAAGnoB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIonB,GAAG,GAAGtN,EAAE,GAAGuN,EAAE,CAAE,CAAE;cACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGtZ,EAAE,CAAE,GAAGuC,CAAC;YAE/C;UAED,CAAC,MAAM;YAEN,IAAK+W,EAAE,IAAI,CAAE0N,MAAM,EAAG;cAErB;;cAEAF,EAAE,GAAGnoB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAI,CAAEonB,GAAG,GAAGD,SAAS,GAAGE,EAAE,CAAE,CAAE;cAChDvN,EAAE,GAAKwN,EAAE,GAAG,CAAC,GAAK,CAAEH,SAAS,GAAGhoB,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAEmnB,SAAS,EAAE,CAAE3mB,EAAE,CAAE,EAAE2mB,SAAS,CAAE;cACpFI,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGtZ,EAAE,CAAE,GAAGuC,CAAC;YAE/C,CAAC,MAAM,IAAK+W,EAAE,IAAI0N,MAAM,EAAG;cAE1B;;cAEAF,EAAE,GAAG,CAAC;cACNxN,EAAE,GAAG3a,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAEmnB,SAAS,EAAE,CAAE3mB,EAAE,CAAE,EAAE2mB,SAAS,CAAE;cACzDI,OAAO,GAAGzN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGtZ,EAAE,CAAE,GAAGuC,CAAC;YAEnC,CAAC,MAAM;cAEN;;cAEAukB,EAAE,GAAGnoB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIonB,GAAG,GAAGD,SAAS,GAAGE,EAAE,CAAE,CAAE;cAC9CvN,EAAE,GAAKwN,EAAE,GAAG,CAAC,GAAKH,SAAS,GAAGhoB,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAEmnB,SAAS,EAAE,CAAE3mB,EAAE,CAAE,EAAE2mB,SAAS,CAAE;cAClFI,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGtZ,EAAE,CAAE,GAAGuC,CAAC;YAE/C;UAED;QAED,CAAC,MAAM;UAEN;;UAEA+W,EAAE,GAAKsN,GAAG,GAAG,CAAC,GAAK,CAAED,SAAS,GAAGA,SAAS;UAC1CG,EAAE,GAAGnoB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIonB,GAAG,GAAGtN,EAAE,GAAGuN,EAAE,CAAE,CAAE;UACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGtZ,EAAE,CAAE,GAAGuC,CAAC;QAE/C;QAEA,IAAKkkB,kBAAkB,EAAG;UAEzBA,kBAAkB,CAACjiB,IAAI,CAAE,IAAI,CAACuhB,MAAM,CAAE,CAAClhB,eAAe,CAAE,IAAI,CAACmhB,SAAS,EAAEc,EAAE,CAAE;QAE7E;QAEA,IAAKJ,sBAAsB,EAAG;UAE7BA,sBAAsB,CAACliB,IAAI,CAAEghB,UAAU,CAAE,CAAC3gB,eAAe,CAAE4gB,OAAO,EAAEnM,EAAE,CAAE;QAEzE;QAEA,OAAOyN,OAAO;MAEf;IAAC;MAAAl/B,GAAA;MAAAE,KAAA,EAED,SAAAm/B,gBAAiBnE,MAAM,EAAExyB,MAAM,EAAG;QAEjCg1B,SAAS,CAACvgB,UAAU,CAAE+d,MAAM,CAACnb,MAAM,EAAE,IAAI,CAACme,MAAM,CAAE;QAClD,IAAMoB,GAAG,GAAG5B,SAAS,CAACzf,GAAG,CAAE,IAAI,CAACkgB,SAAS,CAAE;QAC3C,IAAM9mB,EAAE,GAAGqmB,SAAS,CAACzf,GAAG,CAAEyf,SAAS,CAAE,GAAG4B,GAAG,GAAGA,GAAG;QACjD,IAAMC,OAAO,GAAGrE,MAAM,CAACnD,MAAM,GAAGmD,MAAM,CAACnD,MAAM;QAE7C,IAAK1gB,EAAE,GAAGkoB,OAAO,EAAG,OAAO,IAAI;QAE/B,IAAMC,GAAG,GAAG1oB,IAAI,CAACsH,IAAI,CAAEmhB,OAAO,GAAGloB,EAAE,CAAE;;QAErC;QACA,IAAMooB,EAAE,GAAGH,GAAG,GAAGE,GAAG;;QAEpB;QACA,IAAME,EAAE,GAAGJ,GAAG,GAAGE,GAAG;;QAEpB;QACA,IAAKE,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI;;QAEzB;QACA;QACA;QACA,IAAKD,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI,CAACpB,EAAE,CAAEqB,EAAE,EAAEh3B,MAAM,CAAE;;QAE1C;QACA,OAAO,IAAI,CAAC21B,EAAE,CAAEoB,EAAE,EAAE/2B,MAAM,CAAE;MAE7B;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAA+6B,iBAAkBC,MAAM,EAAG;QAE1B,OAAO,IAAI,CAACwD,iBAAiB,CAAExD,MAAM,CAACnb,MAAM,CAAE,IAAMmb,MAAM,CAACnD,MAAM,GAAGmD,MAAM,CAACnD,MAAQ;MAEpF;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAAy/B,gBAAiBtE,KAAK,EAAG;QAExB,IAAM5c,WAAW,GAAG4c,KAAK,CAAC1D,MAAM,CAAC1Z,GAAG,CAAE,IAAI,CAACkgB,SAAS,CAAE;QAEtD,IAAK1f,WAAW,KAAK,CAAC,EAAG;UAExB;UACA,IAAK4c,KAAK,CAACe,eAAe,CAAE,IAAI,CAAC8B,MAAM,CAAE,KAAK,CAAC,EAAG;YAEjD,OAAO,CAAC;UAET;;UAEA;;UAEA,OAAO,IAAI;QAEZ;QAEA,IAAM1lB,CAAC,GAAG,EAAI,IAAI,CAAC0lB,MAAM,CAACjgB,GAAG,CAAEod,KAAK,CAAC1D,MAAM,CAAE,GAAG0D,KAAK,CAACC,QAAQ,CAAE,GAAG7c,WAAW;;QAE9E;;QAEA,OAAOjG,CAAC,IAAI,CAAC,GAAGA,CAAC,GAAG,IAAI;MAEzB;IAAC;MAAAxY,GAAA;MAAAE,KAAA,EAED,SAAA0/B,eAAgBvE,KAAK,EAAE3yB,MAAM,EAAG;QAE/B,IAAM8P,CAAC,GAAG,IAAI,CAACmnB,eAAe,CAAEtE,KAAK,CAAE;QAEvC,IAAK7iB,CAAC,KAAK,IAAI,EAAG;UAEjB,OAAO,IAAI;QAEZ;QAEA,OAAO,IAAI,CAAC6lB,EAAE,CAAE7lB,CAAC,EAAE9P,MAAM,CAAE;MAE5B;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAAk7B,gBAAiBC,KAAK,EAAG;QAExB;;QAEA,IAAMwE,WAAW,GAAGxE,KAAK,CAACe,eAAe,CAAE,IAAI,CAAC8B,MAAM,CAAE;QAExD,IAAK2B,WAAW,KAAK,CAAC,EAAG;UAExB,OAAO,IAAI;QAEZ;QAEA,IAAMphB,WAAW,GAAG4c,KAAK,CAAC1D,MAAM,CAAC1Z,GAAG,CAAE,IAAI,CAACkgB,SAAS,CAAE;QAEtD,IAAK1f,WAAW,GAAGohB,WAAW,GAAG,CAAC,EAAG;UAEpC,OAAO,IAAI;QAEZ;;QAEA;;QAEA,OAAO,KAAK;MAEb;IAAC;MAAA7/B,GAAA;MAAAE,KAAA,EAED,SAAA4/B,aAAclG,GAAG,EAAElxB,MAAM,EAAG;QAE3B,IAAIq3B,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK;QAE1C,IAAMC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAClC,SAAS,CAACnmB,CAAC;UACnCsoB,OAAO,GAAG,CAAC,GAAG,IAAI,CAACnC,SAAS,CAAC7lB,CAAC;UAC9BioB,OAAO,GAAG,CAAC,GAAG,IAAI,CAACpC,SAAS,CAAClS,CAAC;QAE/B,IAAMiS,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAKmC,OAAO,IAAI,CAAC,EAAG;UAEnBN,IAAI,GAAG,CAAEnG,GAAG,CAACliB,GAAG,CAACM,CAAC,GAAGkmB,MAAM,CAAClmB,CAAC,IAAKqoB,OAAO;UACzCL,IAAI,GAAG,CAAEpG,GAAG,CAACjiB,GAAG,CAACK,CAAC,GAAGkmB,MAAM,CAAClmB,CAAC,IAAKqoB,OAAO;QAE1C,CAAC,MAAM;UAENN,IAAI,GAAG,CAAEnG,GAAG,CAACjiB,GAAG,CAACK,CAAC,GAAGkmB,MAAM,CAAClmB,CAAC,IAAKqoB,OAAO;UACzCL,IAAI,GAAG,CAAEpG,GAAG,CAACliB,GAAG,CAACM,CAAC,GAAGkmB,MAAM,CAAClmB,CAAC,IAAKqoB,OAAO;QAE1C;QAEA,IAAKC,OAAO,IAAI,CAAC,EAAG;UAEnBL,KAAK,GAAG,CAAErG,GAAG,CAACliB,GAAG,CAACY,CAAC,GAAG4lB,MAAM,CAAC5lB,CAAC,IAAKgoB,OAAO;UAC1CJ,KAAK,GAAG,CAAEtG,GAAG,CAACjiB,GAAG,CAACW,CAAC,GAAG4lB,MAAM,CAAC5lB,CAAC,IAAKgoB,OAAO;QAE3C,CAAC,MAAM;UAENL,KAAK,GAAG,CAAErG,GAAG,CAACjiB,GAAG,CAACW,CAAC,GAAG4lB,MAAM,CAAC5lB,CAAC,IAAKgoB,OAAO;UAC1CJ,KAAK,GAAG,CAAEtG,GAAG,CAACliB,GAAG,CAACY,CAAC,GAAG4lB,MAAM,CAAC5lB,CAAC,IAAKgoB,OAAO;QAE3C;QAEA,IAAOP,IAAI,GAAGG,KAAK,IAAQD,KAAK,GAAGD,IAAM,EAAG,OAAO,IAAI;QAEvD,IAAKC,KAAK,GAAGF,IAAI,IAAIl6B,KAAK,CAAEk6B,IAAI,CAAE,EAAGA,IAAI,GAAGE,KAAK;QAEjD,IAAKC,KAAK,GAAGF,IAAI,IAAIn6B,KAAK,CAAEm6B,IAAI,CAAE,EAAGA,IAAI,GAAGE,KAAK;QAEjD,IAAKK,OAAO,IAAI,CAAC,EAAG;UAEnBJ,KAAK,GAAG,CAAEvG,GAAG,CAACliB,GAAG,CAACuU,CAAC,GAAGiS,MAAM,CAACjS,CAAC,IAAKsU,OAAO;UAC1CH,KAAK,GAAG,CAAExG,GAAG,CAACjiB,GAAG,CAACsU,CAAC,GAAGiS,MAAM,CAACjS,CAAC,IAAKsU,OAAO;QAE3C,CAAC,MAAM;UAENJ,KAAK,GAAG,CAAEvG,GAAG,CAACjiB,GAAG,CAACsU,CAAC,GAAGiS,MAAM,CAACjS,CAAC,IAAKsU,OAAO;UAC1CH,KAAK,GAAG,CAAExG,GAAG,CAACliB,GAAG,CAACuU,CAAC,GAAGiS,MAAM,CAACjS,CAAC,IAAKsU,OAAO;QAE3C;QAEA,IAAOR,IAAI,GAAGK,KAAK,IAAQD,KAAK,GAAGH,IAAM,EAAG,OAAO,IAAI;QAEvD,IAAKG,KAAK,GAAGJ,IAAI,IAAIA,IAAI,KAAKA,IAAI,EAAGA,IAAI,GAAGI,KAAK;QAEjD,IAAKC,KAAK,GAAGJ,IAAI,IAAIA,IAAI,KAAKA,IAAI,EAAGA,IAAI,GAAGI,KAAK;;QAEjD;;QAEA,IAAKJ,IAAI,GAAG,CAAC,EAAG,OAAO,IAAI;QAE3B,OAAO,IAAI,CAAC3B,EAAE,CAAE0B,IAAI,IAAI,CAAC,GAAGA,IAAI,GAAGC,IAAI,EAAEt3B,MAAM,CAAE;MAElD;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAA86B,cAAepB,GAAG,EAAG;QAEpB,OAAO,IAAI,CAACkG,YAAY,CAAElG,GAAG,EAAE8D,SAAS,CAAE,KAAK,IAAI;MAEpD;IAAC;MAAA19B,GAAA;MAAAE,KAAA,EAED,SAAAsgC,kBAAmBhmB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE+lB,eAAe,EAAE/3B,MAAM,EAAG;QAErD;;QAEA;;QAEAo1B,MAAM,CAAC3gB,UAAU,CAAE1C,CAAC,EAAED,CAAC,CAAE;QACzBujB,MAAM,CAAC5gB,UAAU,CAAEzC,CAAC,EAAEF,CAAC,CAAE;QACzBwjB,SAAS,CAACjH,YAAY,CAAE+G,MAAM,EAAEC,MAAM,CAAE;;QAExC;QACA;QACA;QACA;QACA;QACA,IAAI2C,GAAG,GAAG,IAAI,CAACvC,SAAS,CAAClgB,GAAG,CAAE+f,SAAS,CAAE;QACzC,IAAI2C,IAAI;QAER,IAAKD,GAAG,GAAG,CAAC,EAAG;UAEd,IAAKD,eAAe,EAAG,OAAO,IAAI;UAClCE,IAAI,GAAG,CAAC;QAET,CAAC,MAAM,IAAKD,GAAG,GAAG,CAAC,EAAG;UAErBC,IAAI,GAAG,CAAE,CAAC;UACVD,GAAG,GAAG,CAAEA,GAAG;QAEZ,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;QAEA7C,KAAK,CAAC1gB,UAAU,CAAE,IAAI,CAAC+gB,MAAM,EAAE1jB,CAAC,CAAE;QAClC,IAAMomB,MAAM,GAAGD,IAAI,GAAG,IAAI,CAACxC,SAAS,CAAClgB,GAAG,CAAE8f,MAAM,CAAChH,YAAY,CAAE8G,KAAK,EAAEE,MAAM,CAAE,CAAE;;QAEhF;QACA,IAAK6C,MAAM,GAAG,CAAC,EAAG;UAEjB,OAAO,IAAI;QAEZ;QAEA,IAAMC,MAAM,GAAGF,IAAI,GAAG,IAAI,CAACxC,SAAS,CAAClgB,GAAG,CAAE6f,MAAM,CAAC5f,KAAK,CAAE2f,KAAK,CAAE,CAAE;;QAEjE;QACA,IAAKgD,MAAM,GAAG,CAAC,EAAG;UAEjB,OAAO,IAAI;QAEZ;;QAEA;QACA,IAAKD,MAAM,GAAGC,MAAM,GAAGH,GAAG,EAAG;UAE5B,OAAO,IAAI;QAEZ;;QAEA;QACA,IAAMI,GAAG,GAAG,CAAEH,IAAI,GAAG9C,KAAK,CAAC5f,GAAG,CAAE+f,SAAS,CAAE;;QAE3C;QACA,IAAK8C,GAAG,GAAG,CAAC,EAAG;UAEd,OAAO,IAAI;QAEZ;;QAEA;QACA,OAAO,IAAI,CAACzC,EAAE,CAAEyC,GAAG,GAAGJ,GAAG,EAAEh4B,MAAM,CAAE;MAEpC;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAAosB,aAAc5I,OAAO,EAAG;QAEvB,IAAI,CAACwa,MAAM,CAAC5R,YAAY,CAAE5I,OAAO,CAAE;QACnC,IAAI,CAACya,SAAS,CAACrH,kBAAkB,CAAEpT,OAAO,CAAE;QAE5C,OAAO,IAAI;MAEZ;IAAC;MAAA1jB,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQ8e,GAAG,EAAG;QAEb,OAAOA,GAAG,CAACF,MAAM,CAAC5e,MAAM,CAAE,IAAI,CAAC4e,MAAM,CAAE,IAAIE,GAAG,CAACD,SAAS,CAAC7e,MAAM,CAAE,IAAI,CAAC6e,SAAS,CAAE;MAElF;IAAC;MAAAn+B,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;IAAA,OAAAshB,GAAA;EAAA;EAAA,IAII8C,OAAO;IAEZ,SAAAA,QAAA,EAAc;MAAAz4B,eAAA,OAAAy4B,OAAA;MAEbA,OAAO,CAACphC,SAAS,CAACqhC,SAAS,GAAG,IAAI;MAElC,IAAI,CAACtjB,QAAQ,GAAG,CAEf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;IAEF;IAAC5U,YAAA,CAAAi4B,OAAA;MAAA/gC,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAK8E,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE2gB,GAAG,EAAE1gB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEygB,GAAG,EAAExgB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEugB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;QAErF,IAAM1gB,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExBmD,EAAE,CAAE,CAAC,CAAE,GAAGT,GAAG;QAAES,EAAE,CAAE,CAAC,CAAE,GAAGR,GAAG;QAAEQ,EAAE,CAAE,CAAC,CAAE,GAAGP,GAAG;QAAEO,EAAE,CAAE,EAAE,CAAE,GAAGogB,GAAG;QAC3DpgB,EAAE,CAAE,CAAC,CAAE,GAAGN,GAAG;QAAEM,EAAE,CAAE,CAAC,CAAE,GAAGL,GAAG;QAAEK,EAAE,CAAE,CAAC,CAAE,GAAGJ,GAAG;QAAEI,EAAE,CAAE,EAAE,CAAE,GAAGqgB,GAAG;QAC3DrgB,EAAE,CAAE,CAAC,CAAE,GAAGH,GAAG;QAAEG,EAAE,CAAE,CAAC,CAAE,GAAGF,GAAG;QAAEE,EAAE,CAAE,EAAE,CAAE,GAAGD,GAAG;QAAEC,EAAE,CAAE,EAAE,CAAE,GAAGsgB,GAAG;QAC5DtgB,EAAE,CAAE,CAAC,CAAE,GAAGugB,GAAG;QAAEvgB,EAAE,CAAE,CAAC,CAAE,GAAGwgB,GAAG;QAAExgB,EAAE,CAAE,EAAE,CAAE,GAAGygB,GAAG;QAAEzgB,EAAE,CAAE,EAAE,CAAE,GAAG0gB,GAAG;QAE5D,OAAO,IAAI;MAEZ;IAAC;MAAAvhC,GAAA;MAAAE,KAAA,EAED,SAAA4gB,SAAA,EAAW;QAEV,IAAI,CAACxF,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;QAED,OAAO,IAAI;MAEZ;IAAC;MAAAtb,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAIqkB,OAAO,EAAE,CAACxhB,SAAS,CAAE,IAAI,CAAC7B,QAAQ,CAAE;MAEhD;IAAC;MAAA1d,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM7E,CAAC,EAAG;QAET,IAAM+I,EAAE,GAAG,IAAI,CAACnD,QAAQ;QACxB,IAAMqD,EAAE,GAAGjJ,CAAC,CAAC4F,QAAQ;QAErBmD,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAC1EF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAC1EF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;QAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;QAC9EF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;QAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;QAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;QAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;QAElF,OAAO,IAAI;MAEZ;IAAC;MAAA/gB,GAAA;MAAAE,KAAA,EAED,SAAAshC,aAAc1pB,CAAC,EAAG;QAEjB,IAAM+I,EAAE,GAAG,IAAI,CAACnD,QAAQ;UAAEqD,EAAE,GAAGjJ,CAAC,CAAC4F,QAAQ;QAEzCmD,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;QACnBF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;QACnBF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;QAEnB,OAAO,IAAI;MAEZ;IAAC;MAAA/gB,GAAA;MAAAE,KAAA,EAED,SAAAuhC,eAAgB3pB,CAAC,EAAG;QAEnB,IAAMiJ,EAAE,GAAGjJ,CAAC,CAAC4F,QAAQ;QAErB,IAAI,CAACpC,GAAG,CAEPyF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5BA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5BA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;QAED,OAAO,IAAI;MAEZ;IAAC;MAAA/gB,GAAA;MAAAE,KAAA,EAED,SAAA8gB,aAAcC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;QAEnCF,KAAK,CAACqX,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE;QACpCpX,KAAK,CAACoX,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE;QACpCnX,KAAK,CAACmX,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE;QAEpC,OAAO,IAAI;MAEZ;IAAC;MAAAt4B,GAAA;MAAAE,KAAA,EAED,SAAAwhC,UAAWzgB,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;QAEhC,IAAI,CAAC7F,GAAG,CACP2F,KAAK,CAACjJ,CAAC,EAAEkJ,KAAK,CAAClJ,CAAC,EAAEmJ,KAAK,CAACnJ,CAAC,EAAE,CAAC,EAC5BiJ,KAAK,CAAC3I,CAAC,EAAE4I,KAAK,CAAC5I,CAAC,EAAE6I,KAAK,CAAC7I,CAAC,EAAE,CAAC,EAC5B2I,KAAK,CAACgL,CAAC,EAAE/K,KAAK,CAAC+K,CAAC,EAAE9K,KAAK,CAAC8K,CAAC,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACV;QAED,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAyhC,gBAAiB7pB,CAAC,EAAG;QAEpB;;QAEA,IAAM+I,EAAE,GAAG,IAAI,CAACnD,QAAQ;QACxB,IAAMqD,EAAE,GAAGjJ,CAAC,CAAC4F,QAAQ;QAErB,IAAMkkB,MAAM,GAAG,CAAC,GAAGC,KAAK,CAACvJ,mBAAmB,CAAExgB,CAAC,EAAE,CAAC,CAAE,CAAChS,MAAM,EAAE;QAC7D,IAAMg8B,MAAM,GAAG,CAAC,GAAGD,KAAK,CAACvJ,mBAAmB,CAAExgB,CAAC,EAAE,CAAC,CAAE,CAAChS,MAAM,EAAE;QAC7D,IAAMi8B,MAAM,GAAG,CAAC,GAAGF,KAAK,CAACvJ,mBAAmB,CAAExgB,CAAC,EAAE,CAAC,CAAE,CAAChS,MAAM,EAAE;QAE7D+a,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG6gB,MAAM;QAC1B/gB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG6gB,MAAM;QAC1B/gB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG6gB,MAAM;QAC1B/gB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAEXA,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG+gB,MAAM;QAC1BjhB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG+gB,MAAM;QAC1BjhB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG+gB,MAAM;QAC1BjhB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAEXA,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAGghB,MAAM;QAC1BlhB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAGghB,MAAM;QAC1BlhB,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE,GAAGghB,MAAM;QAC5BlhB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QAEZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QAEZ,OAAO,IAAI;MAEZ;IAAC;MAAA7gB,GAAA;MAAAE,KAAA,EAED,SAAA8hC,sBAAuB5Q,KAAK,EAAG;QAE9B,IAAMvQ,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExB,IAAM1F,CAAC,GAAGoZ,KAAK,CAACpZ,CAAC;UAAEM,CAAC,GAAG8Y,KAAK,CAAC9Y,CAAC;UAAE2T,CAAC,GAAGmF,KAAK,CAACnF,CAAC;QAC3C,IAAMzR,CAAC,GAAG1D,IAAI,CAAC8D,GAAG,CAAE5C,CAAC,CAAE;UAAEyC,CAAC,GAAG3D,IAAI,CAAC+D,GAAG,CAAE7C,CAAC,CAAE;QAC1C,IAAM0C,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAEtC,CAAC,CAAE;UAAEuK,CAAC,GAAG/L,IAAI,CAAC+D,GAAG,CAAEvC,CAAC,CAAE;QAC1C,IAAMmF,CAAC,GAAG3G,IAAI,CAAC8D,GAAG,CAAEqR,CAAC,CAAE;UAAEnJ,CAAC,GAAGhM,IAAI,CAAC+D,GAAG,CAAEoR,CAAC,CAAE;QAE1C,IAAKmF,KAAK,CAACzW,KAAK,KAAK,KAAK,EAAG;UAE5B,IAAM6G,EAAE,GAAGhH,CAAC,GAAGiD,CAAC;YAAEwkB,EAAE,GAAGznB,CAAC,GAAGsI,CAAC;YAAErB,EAAE,GAAGhH,CAAC,GAAGgD,CAAC;YAAEykB,EAAE,GAAGznB,CAAC,GAAGqI,CAAC;UAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAG+C,CAAC;UACfoD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEnG,CAAC,GAAGoI,CAAC;UACjBjC,EAAE,CAAE,CAAC,CAAE,GAAGgC,CAAC;UAEXhC,EAAE,CAAE,CAAC,CAAE,GAAGohB,EAAE,GAAGxgB,EAAE,GAAGoB,CAAC;UACrBhC,EAAE,CAAE,CAAC,CAAE,GAAGW,EAAE,GAAG0gB,EAAE,GAAGrf,CAAC;UACrBhC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEpG,CAAC,GAAGC,CAAC;UAEjBmG,EAAE,CAAE,CAAC,CAAE,GAAGqhB,EAAE,GAAG1gB,EAAE,GAAGqB,CAAC;UACrBhC,EAAE,CAAE,CAAC,CAAE,GAAGY,EAAE,GAAGwgB,EAAE,GAAGpf,CAAC;UACrBhC,EAAE,CAAE,EAAE,CAAE,GAAGrG,CAAC,GAAGE,CAAC;QAEjB,CAAC,MAAM,IAAK0W,KAAK,CAACzW,KAAK,KAAK,KAAK,EAAG;UAEnC,IAAMwnB,EAAE,GAAGznB,CAAC,GAAG+C,CAAC;YAAE2kB,EAAE,GAAG1nB,CAAC,GAAGoI,CAAC;YAAEuf,EAAE,GAAGxf,CAAC,GAAGpF,CAAC;YAAE6kB,EAAE,GAAGzf,CAAC,GAAGC,CAAC;UAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGshB,EAAE,GAAGG,EAAE,GAAG7nB,CAAC;UACrBoG,EAAE,CAAE,CAAC,CAAE,GAAGwhB,EAAE,GAAG5nB,CAAC,GAAG2nB,EAAE;UACrBvhB,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGqI,CAAC;UAEfhC,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGsI,CAAC;UACfjC,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGiD,CAAC;UACfoD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEpG,CAAC;UAEboG,EAAE,CAAE,CAAC,CAAE,GAAGuhB,EAAE,GAAG3nB,CAAC,GAAG4nB,EAAE;UACrBxhB,EAAE,CAAE,CAAC,CAAE,GAAGyhB,EAAE,GAAGH,EAAE,GAAG1nB,CAAC;UACrBoG,EAAE,CAAE,EAAE,CAAE,GAAGrG,CAAC,GAAGE,CAAC;QAEjB,CAAC,MAAM,IAAK0W,KAAK,CAACzW,KAAK,KAAK,KAAK,EAAG;UAEnC,IAAMwnB,GAAE,GAAGznB,CAAC,GAAG+C,CAAC;YAAE2kB,GAAE,GAAG1nB,CAAC,GAAGoI,CAAC;YAAEuf,GAAE,GAAGxf,CAAC,GAAGpF,CAAC;YAAE6kB,GAAE,GAAGzf,CAAC,GAAGC,CAAC;UAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGshB,GAAE,GAAGG,GAAE,GAAG7nB,CAAC;UACrBoG,EAAE,CAAE,CAAC,CAAE,GAAG,CAAErG,CAAC,GAAGsI,CAAC;UACjBjC,EAAE,CAAE,CAAC,CAAE,GAAGwhB,GAAE,GAAGD,GAAE,GAAG3nB,CAAC;UAErBoG,EAAE,CAAE,CAAC,CAAE,GAAGuhB,GAAE,GAAGC,GAAE,GAAG5nB,CAAC;UACrBoG,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGiD,CAAC;UACfoD,EAAE,CAAE,CAAC,CAAE,GAAGyhB,GAAE,GAAGH,GAAE,GAAG1nB,CAAC;UAErBoG,EAAE,CAAE,CAAC,CAAE,GAAG,CAAErG,CAAC,GAAGqI,CAAC;UACjBhC,EAAE,CAAE,CAAC,CAAE,GAAGpG,CAAC;UACXoG,EAAE,CAAE,EAAE,CAAE,GAAGrG,CAAC,GAAGE,CAAC;QAEjB,CAAC,MAAM,IAAK0W,KAAK,CAACzW,KAAK,KAAK,KAAK,EAAG;UAEnC,IAAM6G,GAAE,GAAGhH,CAAC,GAAGiD,CAAC;YAAEwkB,GAAE,GAAGznB,CAAC,GAAGsI,CAAC;YAAErB,GAAE,GAAGhH,CAAC,GAAGgD,CAAC;YAAEykB,GAAE,GAAGznB,CAAC,GAAGqI,CAAC;UAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAG+C,CAAC;UACfoD,EAAE,CAAE,CAAC,CAAE,GAAGY,GAAE,GAAGoB,CAAC,GAAGof,GAAE;UACrBphB,EAAE,CAAE,CAAC,CAAE,GAAGW,GAAE,GAAGqB,CAAC,GAAGqf,GAAE;UAErBrhB,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAGoI,CAAC;UACfjC,EAAE,CAAE,CAAC,CAAE,GAAGqhB,GAAE,GAAGrf,CAAC,GAAGrB,GAAE;UACrBX,EAAE,CAAE,CAAC,CAAE,GAAGohB,GAAE,GAAGpf,CAAC,GAAGpB,GAAE;UAErBZ,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEgC,CAAC;UACbhC,EAAE,CAAE,CAAC,CAAE,GAAGpG,CAAC,GAAGC,CAAC;UACfmG,EAAE,CAAE,EAAE,CAAE,GAAGrG,CAAC,GAAGE,CAAC;QAEjB,CAAC,MAAM,IAAK0W,KAAK,CAACzW,KAAK,KAAK,KAAK,EAAG;UAEnC,IAAM4nB,EAAE,GAAG/nB,CAAC,GAAGE,CAAC;YAAE8nB,EAAE,GAAGhoB,CAAC,GAAGqI,CAAC;YAAE4f,EAAE,GAAGhoB,CAAC,GAAGC,CAAC;YAAEgoB,EAAE,GAAGjoB,CAAC,GAAGoI,CAAC;UAEpDhC,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAG+C,CAAC;UACfoD,EAAE,CAAE,CAAC,CAAE,GAAG6hB,EAAE,GAAGH,EAAE,GAAGzf,CAAC;UACrBjC,EAAE,CAAE,CAAC,CAAE,GAAG4hB,EAAE,GAAG3f,CAAC,GAAG0f,EAAE;UAErB3hB,EAAE,CAAE,CAAC,CAAE,GAAGiC,CAAC;UACXjC,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGiD,CAAC;UACfoD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEpG,CAAC,GAAGgD,CAAC;UAEjBoD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEgC,CAAC,GAAGpF,CAAC;UACjBoD,EAAE,CAAE,CAAC,CAAE,GAAG2hB,EAAE,GAAG1f,CAAC,GAAG2f,EAAE;UACrB5hB,EAAE,CAAE,EAAE,CAAE,GAAG0hB,EAAE,GAAGG,EAAE,GAAG5f,CAAC;QAEvB,CAAC,MAAM,IAAKsO,KAAK,CAACzW,KAAK,KAAK,KAAK,EAAG;UAEnC,IAAM4nB,GAAE,GAAG/nB,CAAC,GAAGE,CAAC;YAAE8nB,GAAE,GAAGhoB,CAAC,GAAGqI,CAAC;YAAE4f,GAAE,GAAGhoB,CAAC,GAAGC,CAAC;YAAEgoB,GAAE,GAAGjoB,CAAC,GAAGoI,CAAC;UAEpDhC,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAG+C,CAAC;UACfoD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEiC,CAAC;UACbjC,EAAE,CAAE,CAAC,CAAE,GAAGgC,CAAC,GAAGpF,CAAC;UAEfoD,EAAE,CAAE,CAAC,CAAE,GAAG0hB,GAAE,GAAGzf,CAAC,GAAG4f,GAAE;UACrB7hB,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGiD,CAAC;UACfoD,EAAE,CAAE,CAAC,CAAE,GAAG2hB,GAAE,GAAG1f,CAAC,GAAG2f,GAAE;UAErB5hB,EAAE,CAAE,CAAC,CAAE,GAAG4hB,GAAE,GAAG3f,CAAC,GAAG0f,GAAE;UACrB3hB,EAAE,CAAE,CAAC,CAAE,GAAGpG,CAAC,GAAGgD,CAAC;UACfoD,EAAE,CAAE,EAAE,CAAE,GAAG6hB,GAAE,GAAG5f,CAAC,GAAGyf,GAAE;QAEvB;;QAEA;QACA1hB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QACXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QACXA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;;QAEZ;QACAA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QAEZ,OAAO,IAAI;MAEZ;IAAC;MAAA7gB,GAAA;MAAAE,KAAA,EAED,SAAAyiC,2BAA4BpoB,CAAC,EAAG;QAE/B,OAAO,IAAI,CAACqoB,OAAO,CAAEC,KAAK,EAAEtoB,CAAC,EAAEuoB,IAAI,CAAE;MAEtC;IAAC;MAAA9iC,GAAA;MAAAE,KAAA,EAED,SAAAo+B,OAAQyE,GAAG,EAAEr6B,MAAM,EAAEs6B,EAAE,EAAG;QAEzB,IAAMniB,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExBqT,EAAE,CAAC5T,UAAU,CAAE4lB,GAAG,EAAEr6B,MAAM,CAAE;QAE5B,IAAKqoB,EAAE,CAAC5S,QAAQ,EAAE,KAAK,CAAC,EAAG;UAE1B;;UAEA4S,EAAE,CAAC9E,CAAC,GAAG,CAAC;QAET;QAEA8E,EAAE,CAAClV,SAAS,EAAE;QACdgV,EAAE,CAACkG,YAAY,CAAEiM,EAAE,EAAEjS,EAAE,CAAE;QAEzB,IAAKF,EAAE,CAAC1S,QAAQ,EAAE,KAAK,CAAC,EAAG;UAE1B;;UAEA,IAAKrH,IAAI,CAACgC,GAAG,CAAEkqB,EAAE,CAAC/W,CAAC,CAAE,KAAK,CAAC,EAAG;YAE7B8E,EAAE,CAAC/Y,CAAC,IAAI,MAAM;UAEf,CAAC,MAAM;YAEN+Y,EAAE,CAAC9E,CAAC,IAAI,MAAM;UAEf;UAEA8E,EAAE,CAAClV,SAAS,EAAE;UACdgV,EAAE,CAACkG,YAAY,CAAEiM,EAAE,EAAEjS,EAAE,CAAE;QAE1B;QAEAF,EAAE,CAAChV,SAAS,EAAE;QACdiV,EAAE,CAACiG,YAAY,CAAEhG,EAAE,EAAEF,EAAE,CAAE;QAEzBhQ,EAAE,CAAE,CAAC,CAAE,GAAGgQ,EAAE,CAAC7Y,CAAC;QAAE6I,EAAE,CAAE,CAAC,CAAE,GAAGiQ,EAAE,CAAC9Y,CAAC;QAAE6I,EAAE,CAAE,CAAC,CAAE,GAAGkQ,EAAE,CAAC/Y,CAAC;QAC9C6I,EAAE,CAAE,CAAC,CAAE,GAAGgQ,EAAE,CAACvY,CAAC;QAAEuI,EAAE,CAAE,CAAC,CAAE,GAAGiQ,EAAE,CAACxY,CAAC;QAAEuI,EAAE,CAAE,CAAC,CAAE,GAAGkQ,EAAE,CAACzY,CAAC;QAC9CuI,EAAE,CAAE,CAAC,CAAE,GAAGgQ,EAAE,CAAC5E,CAAC;QAAEpL,EAAE,CAAE,CAAC,CAAE,GAAGiQ,EAAE,CAAC7E,CAAC;QAAEpL,EAAE,CAAE,EAAE,CAAE,GAAGkQ,EAAE,CAAC9E,CAAC;QAE/C,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAkd,SAAUtF,CAAC,EAAG;QAEb,OAAO,IAAI,CAACwJ,gBAAgB,CAAE,IAAI,EAAExJ,CAAC,CAAE;MAExC;IAAC;MAAA9X,GAAA;MAAAE,KAAA,EAED,SAAAqhB,YAAazJ,CAAC,EAAG;QAEhB,OAAO,IAAI,CAACwJ,gBAAgB,CAAExJ,CAAC,EAAE,IAAI,CAAE;MAExC;IAAC;MAAA9X,GAAA;MAAAE,KAAA,EAED,SAAAohB,iBAAkB9G,CAAC,EAAEC,CAAC,EAAG;QAExB,IAAM+G,EAAE,GAAGhH,CAAC,CAACkD,QAAQ;QACrB,IAAM+D,EAAE,GAAGhH,CAAC,CAACiD,QAAQ;QACrB,IAAMmD,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExB,IAAMgE,GAAG,GAAGF,EAAE,CAAE,CAAC,CAAE;UAAEG,GAAG,GAAGH,EAAE,CAAE,CAAC,CAAE;UAAEI,GAAG,GAAGJ,EAAE,CAAE,CAAC,CAAE;UAAEyhB,GAAG,GAAGzhB,EAAE,CAAE,EAAE,CAAE;QACjE,IAAMK,GAAG,GAAGL,EAAE,CAAE,CAAC,CAAE;UAAEM,GAAG,GAAGN,EAAE,CAAE,CAAC,CAAE;UAAEO,GAAG,GAAGP,EAAE,CAAE,CAAC,CAAE;UAAE0hB,GAAG,GAAG1hB,EAAE,CAAE,EAAE,CAAE;QACjE,IAAMQ,GAAG,GAAGR,EAAE,CAAE,CAAC,CAAE;UAAES,GAAG,GAAGT,EAAE,CAAE,CAAC,CAAE;UAAEU,GAAG,GAAGV,EAAE,CAAE,EAAE,CAAE;UAAE2hB,GAAG,GAAG3hB,EAAE,CAAE,EAAE,CAAE;QAClE,IAAM4hB,GAAG,GAAG5hB,EAAE,CAAE,CAAC,CAAE;UAAE6hB,GAAG,GAAG7hB,EAAE,CAAE,CAAC,CAAE;UAAE8hB,GAAG,GAAG9hB,EAAE,CAAE,EAAE,CAAE;UAAE+hB,GAAG,GAAG/hB,EAAE,CAAE,EAAE,CAAE;QAElE,IAAMW,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;UAAEW,GAAG,GAAGX,EAAE,CAAE,CAAC,CAAE;UAAEY,GAAG,GAAGZ,EAAE,CAAE,CAAC,CAAE;UAAE+hB,GAAG,GAAG/hB,EAAE,CAAE,EAAE,CAAE;QACjE,IAAMa,GAAG,GAAGb,EAAE,CAAE,CAAC,CAAE;UAAEc,GAAG,GAAGd,EAAE,CAAE,CAAC,CAAE;UAAEe,GAAG,GAAGf,EAAE,CAAE,CAAC,CAAE;UAAEgiB,GAAG,GAAGhiB,EAAE,CAAE,EAAE,CAAE;QACjE,IAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAC,CAAE;UAAEiB,GAAG,GAAGjB,EAAE,CAAE,CAAC,CAAE;UAAEkB,GAAG,GAAGlB,EAAE,CAAE,EAAE,CAAE;UAAEiiB,GAAG,GAAGjiB,EAAE,CAAE,EAAE,CAAE;QAClE,IAAMkiB,GAAG,GAAGliB,EAAE,CAAE,CAAC,CAAE;UAAEmiB,GAAG,GAAGniB,EAAE,CAAE,CAAC,CAAE;UAAEoiB,GAAG,GAAGpiB,EAAE,CAAE,EAAE,CAAE;UAAEqiB,GAAG,GAAGriB,EAAE,CAAE,EAAE,CAAE;QAElEZ,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGwgB,GAAG,GAAGU,GAAG;QACvD9iB,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGX,GAAG,GAAGc,GAAG,GAAGugB,GAAG,GAAGW,GAAG;QACvD/iB,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGZ,GAAG,GAAGe,GAAG,GAAGsgB,GAAG,GAAGY,GAAG;QACvDhjB,EAAE,CAAE,EAAE,CAAE,GAAGa,GAAG,GAAG8hB,GAAG,GAAG7hB,GAAG,GAAG8hB,GAAG,GAAG7hB,GAAG,GAAG8hB,GAAG,GAAGT,GAAG,GAAGa,GAAG;QAExDjjB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGygB,GAAG,GAAGS,GAAG;QACvD9iB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGwgB,GAAG,GAAGU,GAAG;QACvD/iB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGugB,GAAG,GAAGW,GAAG;QACvDhjB,EAAE,CAAE,EAAE,CAAE,GAAGgB,GAAG,GAAG2hB,GAAG,GAAG1hB,GAAG,GAAG2hB,GAAG,GAAG1hB,GAAG,GAAG2hB,GAAG,GAAGR,GAAG,GAAGY,GAAG;QAExDjjB,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGG,GAAG,GAAGF,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAG0gB,GAAG,GAAGQ,GAAG;QACvD9iB,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGygB,GAAG,GAAGS,GAAG;QACvD/iB,EAAE,CAAE,EAAE,CAAE,GAAGmB,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGwgB,GAAG,GAAGU,GAAG;QACxDhjB,EAAE,CAAE,EAAE,CAAE,GAAGmB,GAAG,GAAGwhB,GAAG,GAAGvhB,GAAG,GAAGwhB,GAAG,GAAGvhB,GAAG,GAAGwhB,GAAG,GAAGP,GAAG,GAAGW,GAAG;QAExDjjB,EAAE,CAAE,CAAC,CAAE,GAAGuiB,GAAG,GAAGjhB,GAAG,GAAGkhB,GAAG,GAAG/gB,GAAG,GAAGghB,GAAG,GAAG7gB,GAAG,GAAG8gB,GAAG,GAAGI,GAAG;QACvD9iB,EAAE,CAAE,CAAC,CAAE,GAAGuiB,GAAG,GAAGhhB,GAAG,GAAGihB,GAAG,GAAG9gB,GAAG,GAAG+gB,GAAG,GAAG5gB,GAAG,GAAG6gB,GAAG,GAAGK,GAAG;QACvD/iB,EAAE,CAAE,EAAE,CAAE,GAAGuiB,GAAG,GAAG/gB,GAAG,GAAGghB,GAAG,GAAG7gB,GAAG,GAAG8gB,GAAG,GAAG3gB,GAAG,GAAG4gB,GAAG,GAAGM,GAAG;QACxDhjB,EAAE,CAAE,EAAE,CAAE,GAAGuiB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGO,GAAG;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAA9jC,GAAA;MAAAE,KAAA,EAED,SAAAmd,eAAgB5D,CAAC,EAAG;QAEnB,IAAMoH,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExBmD,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;QACvDoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;QACvDoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;QACxDoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;QAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAA0iB,YAAA,EAAc;QAEb,IAAM/B,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExB,IAAM0C,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;UAAER,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;UAAEP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;UAAEogB,GAAG,GAAGpgB,EAAE,CAAE,EAAE,CAAE;QACjE,IAAMN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;UAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;UAAEJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;UAAEqgB,GAAG,GAAGrgB,EAAE,CAAE,EAAE,CAAE;QACjE,IAAMH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;UAAEF,GAAG,GAAGE,EAAE,CAAE,CAAC,CAAE;UAAED,GAAG,GAAGC,EAAE,CAAE,EAAE,CAAE;UAAEsgB,GAAG,GAAGtgB,EAAE,CAAE,EAAE,CAAE;QAClE,IAAMugB,GAAG,GAAGvgB,EAAE,CAAE,CAAC,CAAE;UAAEwgB,GAAG,GAAGxgB,EAAE,CAAE,CAAC,CAAE;UAAEygB,GAAG,GAAGzgB,EAAE,CAAE,EAAE,CAAE;UAAE0gB,GAAG,GAAG1gB,EAAE,CAAE,EAAE,CAAE;;QAElE;QACA;;QAEA,OACCugB,GAAG,IACF,CAAEH,GAAG,GAAGxgB,GAAG,GAAGE,GAAG,GACdL,GAAG,GAAG4gB,GAAG,GAAGvgB,GAAG,GACfsgB,GAAG,GAAGzgB,GAAG,GAAGI,GAAG,GACfP,GAAG,GAAG6gB,GAAG,GAAGtgB,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAG2gB,GAAG,GACf9gB,GAAG,GAAGI,GAAG,GAAG0gB,GAAG,CAClB,GACDE,GAAG,IACF,CAAEjhB,GAAG,GAAGK,GAAG,GAAG0gB,GAAG,GACd/gB,GAAG,GAAG8gB,GAAG,GAAGtgB,GAAG,GACfqgB,GAAG,GAAG1gB,GAAG,GAAGK,GAAG,GACfN,GAAG,GAAGC,GAAG,GAAG4gB,GAAG,GACf7gB,GAAG,GAAG4gB,GAAG,GAAGxgB,GAAG,GACfugB,GAAG,GAAGxgB,GAAG,GAAGC,GAAG,CAClB,GACD4gB,GAAG,IACF,CAAElhB,GAAG,GAAG8gB,GAAG,GAAGvgB,GAAG,GACdP,GAAG,GAAGI,GAAG,GAAG2gB,GAAG,GACfF,GAAG,GAAG1gB,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAG4gB,GAAG,GACfF,GAAG,GAAGzgB,GAAG,GAAGE,GAAG,GACfL,GAAG,GAAG6gB,GAAG,GAAGxgB,GAAG,CAClB,GACD6gB,GAAG,IACF,CAAEjhB,GAAG,GAAGE,GAAG,GAAGE,GAAG,GACdN,GAAG,GAAGK,GAAG,GAAGE,GAAG,GACfP,GAAG,GAAGI,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGC,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAGK,GAAG,GACfP,GAAG,GAAGI,GAAG,GAAGC,GAAG,CAClB;MAIH;IAAC;MAAA1gB,GAAA;MAAAE,KAAA,EAED,SAAAqjB,UAAA,EAAY;QAEX,IAAM1C,EAAE,GAAG,IAAI,CAACnD,QAAQ;QACxB,IAAI8F,GAAG;QAEPA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAG2C,GAAG;QAC/CA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAG2C,GAAG;QAC/CA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAG2C,GAAG;QAE/CA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAG2C,GAAG;QACjDA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAG2C,GAAG;QACjDA,GAAG,GAAG3C,EAAE,CAAE,EAAE,CAAE;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAG2C,GAAG;QAEnD,OAAO,IAAI;MAEZ;IAAC;MAAAxjB,GAAA;MAAAE,KAAA,EAED,SAAA6jC,YAAa/rB,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAEtB,IAAMpL,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExB,IAAK1F,CAAC,CAACwd,SAAS,EAAG;UAElB3U,EAAE,CAAE,EAAE,CAAE,GAAG7I,CAAC,CAACA,CAAC;UACd6I,EAAE,CAAE,EAAE,CAAE,GAAG7I,CAAC,CAACM,CAAC;UACduI,EAAE,CAAE,EAAE,CAAE,GAAG7I,CAAC,CAACiU,CAAC;QAEf,CAAC,MAAM;UAENpL,EAAE,CAAE,EAAE,CAAE,GAAG7I,CAAC;UACZ6I,EAAE,CAAE,EAAE,CAAE,GAAGvI,CAAC;UACZuI,EAAE,CAAE,EAAE,CAAE,GAAGoL,CAAC;QAEb;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA+iB,OAAA,EAAS;QAER;QACA,IAAMpC,EAAE,GAAG,IAAI,CAACnD,QAAQ;UAEvB0C,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;UAAEN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;UAAEH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;UAAEugB,GAAG,GAAGvgB,EAAE,CAAE,CAAC,CAAE;UAC1DR,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;UAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;UAAEF,GAAG,GAAGE,EAAE,CAAE,CAAC,CAAE;UAAEwgB,GAAG,GAAGxgB,EAAE,CAAE,CAAC,CAAE;UAC1DP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;UAAEJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;UAAED,GAAG,GAAGC,EAAE,CAAE,EAAE,CAAE;UAAEygB,GAAG,GAAGzgB,EAAE,CAAE,EAAE,CAAE;UAC5DogB,GAAG,GAAGpgB,EAAE,CAAE,EAAE,CAAE;UAAEqgB,GAAG,GAAGrgB,EAAE,CAAE,EAAE,CAAE;UAAEsgB,GAAG,GAAGtgB,EAAE,CAAE,EAAE,CAAE;UAAE0gB,GAAG,GAAG1gB,EAAE,CAAE,EAAE,CAAE;UAE9DqC,GAAG,GAAGzC,GAAG,GAAG0gB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGtgB,GAAG,GAAGygB,GAAG,GAAGH,GAAG,GAAGvgB,GAAG,GAAG2gB,GAAG,GAAG9gB,GAAG,GAAG2gB,GAAG,GAAGG,GAAG,GAAG7gB,GAAG,GAAGE,GAAG,GAAG4gB,GAAG,GAAG/gB,GAAG,GAAGI,GAAG,GAAG2gB,GAAG;UAC/Gpe,GAAG,GAAG8d,GAAG,GAAGrgB,GAAG,GAAGygB,GAAG,GAAG/gB,GAAG,GAAG6gB,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGtgB,GAAG,GAAG2gB,GAAG,GAAGjhB,GAAG,GAAG8gB,GAAG,GAAGG,GAAG,GAAGhhB,GAAG,GAAGK,GAAG,GAAG4gB,GAAG,GAAGlhB,GAAG,GAAGO,GAAG,GAAG2gB,GAAG;UAC/Gne,GAAG,GAAG9C,GAAG,GAAG4gB,GAAG,GAAGG,GAAG,GAAGJ,GAAG,GAAGxgB,GAAG,GAAG4gB,GAAG,GAAGJ,GAAG,GAAGzgB,GAAG,GAAG8gB,GAAG,GAAGjhB,GAAG,GAAG6gB,GAAG,GAAGI,GAAG,GAAGhhB,GAAG,GAAGE,GAAG,GAAG+gB,GAAG,GAAGlhB,GAAG,GAAGI,GAAG,GAAG8gB,GAAG;UAC/GyC,GAAG,GAAG/C,GAAG,GAAGxgB,GAAG,GAAGE,GAAG,GAAGL,GAAG,GAAG4gB,GAAG,GAAGvgB,GAAG,GAAGsgB,GAAG,GAAGzgB,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAG6gB,GAAG,GAAGtgB,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAG2gB,GAAG,GAAG9gB,GAAG,GAAGI,GAAG,GAAG0gB,GAAG;QAEhH,IAAM9d,GAAG,GAAGjD,GAAG,GAAG8C,GAAG,GAAG3C,GAAG,GAAG4C,GAAG,GAAGzC,GAAG,GAAG0C,GAAG,GAAGge,GAAG,GAAG4C,GAAG;QAEzD,IAAK3gB,GAAG,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC/H,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAElF,IAAMgI,MAAM,GAAG,CAAC,GAAGD,GAAG;QAEtBxC,EAAE,CAAE,CAAC,CAAE,GAAGqC,GAAG,GAAGI,MAAM;QACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEqgB,GAAG,GAAGtgB,GAAG,GAAGwgB,GAAG,GAAG3gB,GAAG,GAAG0gB,GAAG,GAAGC,GAAG,GAAGF,GAAG,GAAGxgB,GAAG,GAAG4gB,GAAG,GAAG/gB,GAAG,GAAG4gB,GAAG,GAAGG,GAAG,GAAG7gB,GAAG,GAAGC,GAAG,GAAG6gB,GAAG,GAAGhhB,GAAG,GAAGK,GAAG,GAAG2gB,GAAG,IAAKje,MAAM;QAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEL,GAAG,GAAG2gB,GAAG,GAAGC,GAAG,GAAGF,GAAG,GAAGvgB,GAAG,GAAGygB,GAAG,GAAGF,GAAG,GAAGxgB,GAAG,GAAG2gB,GAAG,GAAG9gB,GAAG,GAAG4gB,GAAG,GAAGE,GAAG,GAAG7gB,GAAG,GAAGE,GAAG,GAAG6gB,GAAG,GAAGhhB,GAAG,GAAGI,GAAG,GAAG4gB,GAAG,IAAKje,MAAM;QAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEJ,GAAG,GAAGE,GAAG,GAAGygB,GAAG,GAAG5gB,GAAG,GAAGI,GAAG,GAAGwgB,GAAG,GAAG3gB,GAAG,GAAGC,GAAG,GAAG2gB,GAAG,GAAG9gB,GAAG,GAAGK,GAAG,GAAGygB,GAAG,GAAG7gB,GAAG,GAAGE,GAAG,GAAG4gB,GAAG,GAAG/gB,GAAG,GAAGI,GAAG,GAAG2gB,GAAG,IAAKhe,MAAM;QAEhIzC,EAAE,CAAE,CAAC,CAAE,GAAGsC,GAAG,GAAGG,MAAM;QACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEP,GAAG,GAAG6gB,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGrgB,GAAG,GAAGwgB,GAAG,GAAGH,GAAG,GAAGvgB,GAAG,GAAG4gB,GAAG,GAAGlhB,GAAG,GAAG+gB,GAAG,GAAGG,GAAG,GAAGhhB,GAAG,GAAGI,GAAG,GAAG6gB,GAAG,GAAGnhB,GAAG,GAAGQ,GAAG,GAAG2gB,GAAG,IAAKje,MAAM;QAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEogB,GAAG,GAAGtgB,GAAG,GAAGygB,GAAG,GAAG/gB,GAAG,GAAG8gB,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGvgB,GAAG,GAAG2gB,GAAG,GAAGjhB,GAAG,GAAG+gB,GAAG,GAAGE,GAAG,GAAGhhB,GAAG,GAAGK,GAAG,GAAG6gB,GAAG,GAAGnhB,GAAG,GAAGO,GAAG,GAAG4gB,GAAG,IAAKje,MAAM;QAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAER,GAAG,GAAGO,GAAG,GAAGwgB,GAAG,GAAG9gB,GAAG,GAAGK,GAAG,GAAGygB,GAAG,GAAG9gB,GAAG,GAAGI,GAAG,GAAG2gB,GAAG,GAAGjhB,GAAG,GAAGQ,GAAG,GAAGygB,GAAG,GAAGhhB,GAAG,GAAGK,GAAG,GAAG4gB,GAAG,GAAGlhB,GAAG,GAAGO,GAAG,GAAG2gB,GAAG,IAAKhe,MAAM;QAEhIzC,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG,GAAGE,MAAM;QACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEogB,GAAG,GAAGxgB,GAAG,GAAG2gB,GAAG,GAAG9gB,GAAG,GAAG4gB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAG1gB,GAAG,GAAG+gB,GAAG,GAAGlhB,GAAG,GAAG8gB,GAAG,GAAGI,GAAG,GAAGhhB,GAAG,GAAGC,GAAG,GAAGghB,GAAG,GAAGnhB,GAAG,GAAGK,GAAG,GAAG8gB,GAAG,IAAKje,MAAM;QAChIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAER,GAAG,GAAG6gB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGzgB,GAAG,GAAG4gB,GAAG,GAAGH,GAAG,GAAG1gB,GAAG,GAAG8gB,GAAG,GAAGjhB,GAAG,GAAG8gB,GAAG,GAAGG,GAAG,GAAGhhB,GAAG,GAAGE,GAAG,GAAGghB,GAAG,GAAGnhB,GAAG,GAAGI,GAAG,GAAG+gB,GAAG,IAAKje,MAAM;QACjIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEP,GAAG,GAAGE,GAAG,GAAG4gB,GAAG,GAAG/gB,GAAG,GAAGI,GAAG,GAAG2gB,GAAG,GAAG9gB,GAAG,GAAGC,GAAG,GAAG8gB,GAAG,GAAGjhB,GAAG,GAAGK,GAAG,GAAG4gB,GAAG,GAAGhhB,GAAG,GAAGE,GAAG,GAAG+gB,GAAG,GAAGlhB,GAAG,GAAGI,GAAG,GAAG8gB,GAAG,IAAKhe,MAAM;QAEjIzC,EAAE,CAAE,EAAE,CAAE,GAAGmjB,GAAG,GAAG1gB,MAAM;QACvBzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEP,GAAG,GAAG4gB,GAAG,GAAGxgB,GAAG,GAAGugB,GAAG,GAAGxgB,GAAG,GAAGC,GAAG,GAAGugB,GAAG,GAAG1gB,GAAG,GAAGK,GAAG,GAAGR,GAAG,GAAG8gB,GAAG,GAAGtgB,GAAG,GAAGN,GAAG,GAAGC,GAAG,GAAG4gB,GAAG,GAAG/gB,GAAG,GAAGK,GAAG,GAAG0gB,GAAG,IAAK7d,MAAM;QACjIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEogB,GAAG,GAAGzgB,GAAG,GAAGE,GAAG,GAAGL,GAAG,GAAG6gB,GAAG,GAAGxgB,GAAG,GAAGugB,GAAG,GAAG1gB,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAG8gB,GAAG,GAAGvgB,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAG4gB,GAAG,GAAG/gB,GAAG,GAAGI,GAAG,GAAG2gB,GAAG,IAAK7d,MAAM;QACjIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAER,GAAG,GAAGI,GAAG,GAAGC,GAAG,GAAGJ,GAAG,GAAGE,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGC,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGK,GAAG,GAAGE,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAGK,GAAG,GAAGR,GAAG,GAAGI,GAAG,GAAGI,GAAG,IAAK0C,MAAM;QAEjI,OAAO,IAAI;MAEZ;IAAC;MAAAtjB,GAAA;MAAAE,KAAA,EAED,SAAAmkB,MAAOzH,CAAC,EAAG;QAEV,IAAMiE,EAAE,GAAG,IAAI,CAACnD,QAAQ;QACxB,IAAM1F,CAAC,GAAG4E,CAAC,CAAC5E,CAAC;UAAEM,CAAC,GAAGsE,CAAC,CAACtE,CAAC;UAAE2T,CAAC,GAAGrP,CAAC,CAACqP,CAAC;QAE/BpL,EAAE,CAAE,CAAC,CAAE,IAAI7I,CAAC;QAAE6I,EAAE,CAAE,CAAC,CAAE,IAAIvI,CAAC;QAAEuI,EAAE,CAAE,CAAC,CAAE,IAAIoL,CAAC;QACxCpL,EAAE,CAAE,CAAC,CAAE,IAAI7I,CAAC;QAAE6I,EAAE,CAAE,CAAC,CAAE,IAAIvI,CAAC;QAAEuI,EAAE,CAAE,CAAC,CAAE,IAAIoL,CAAC;QACxCpL,EAAE,CAAE,CAAC,CAAE,IAAI7I,CAAC;QAAE6I,EAAE,CAAE,CAAC,CAAE,IAAIvI,CAAC;QAAEuI,EAAE,CAAE,EAAE,CAAE,IAAIoL,CAAC;QACzCpL,EAAE,CAAE,CAAC,CAAE,IAAI7I,CAAC;QAAE6I,EAAE,CAAE,CAAC,CAAE,IAAIvI,CAAC;QAAEuI,EAAE,CAAE,EAAE,CAAE,IAAIoL,CAAC;QAEzC,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAs9B,kBAAA,EAAoB;QAEnB,IAAM3c,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExB,IAAMumB,QAAQ,GAAGpjB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;QAC1E,IAAMqjB,QAAQ,GAAGrjB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;QAC1E,IAAMsjB,QAAQ,GAAGtjB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;QAE5E,OAAO/J,IAAI,CAACsH,IAAI,CAAEtH,IAAI,CAACa,GAAG,CAAEssB,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,CAAE,CAAE;MAE7D;IAAC;MAAAnkC,GAAA;MAAAE,KAAA,EAED,SAAAykB,gBAAiB3M,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAE1B,IAAI,CAAC3Q,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEtD,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEM,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE2T,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;QAED,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAkkC,cAAe1lB,KAAK,EAAG;QAEtB,IAAMhE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;UAAEjF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;QAElD,IAAI,CAACpD,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAEZ,CAAC,EAAE,CAAEjB,CAAC,EAAE,CAAC,EACZ,CAAC,EAAEA,CAAC,EAAEiB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;QAED,OAAO,IAAI;MAEZ;IAAC;MAAA1a,GAAA;MAAAE,KAAA,EAED,SAAAmkC,cAAe3lB,KAAK,EAAG;QAEtB,IAAMhE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;UAAEjF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;QAElD,IAAI,CAACpD,GAAG,CAENZ,CAAC,EAAE,CAAC,EAAEjB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAEA,CAAC,EAAE,CAAC,EAAEiB,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEX;QAED,OAAO,IAAI;MAEZ;IAAC;MAAA1a,GAAA;MAAAE,KAAA,EAED,SAAAokC,cAAe5lB,KAAK,EAAG;QAEtB,IAAMhE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;UAAEjF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;QAElD,IAAI,CAACpD,GAAG,CAEPZ,CAAC,EAAE,CAAEjB,CAAC,EAAE,CAAC,EAAE,CAAC,EACZA,CAAC,EAAEiB,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;QAED,OAAO,IAAI;MAEZ;IAAC;MAAA1a,GAAA;MAAAE,KAAA,EAED,SAAAqkC,iBAAkB3S,IAAI,EAAEtT,KAAK,EAAG;QAE/B;;QAEA,IAAM5D,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE0D,KAAK,CAAE;QAC3B,IAAM7E,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEyD,KAAK,CAAE;QAC3B,IAAM9F,CAAC,GAAG,CAAC,GAAGkC,CAAC;QACf,IAAM1C,CAAC,GAAG4Z,IAAI,CAAC5Z,CAAC;UAAEM,CAAC,GAAGsZ,IAAI,CAACtZ,CAAC;UAAE2T,CAAC,GAAG2F,IAAI,CAAC3F,CAAC;QACxC,IAAMnI,EAAE,GAAGtL,CAAC,GAAGR,CAAC;UAAE+L,EAAE,GAAGvL,CAAC,GAAGF,CAAC;QAE5B,IAAI,CAACgD,GAAG,CAEPwI,EAAE,GAAG9L,CAAC,GAAG0C,CAAC,EAAEoJ,EAAE,GAAGxL,CAAC,GAAGmB,CAAC,GAAGwS,CAAC,EAAEnI,EAAE,GAAGmI,CAAC,GAAGxS,CAAC,GAAGnB,CAAC,EAAE,CAAC,EAC7CwL,EAAE,GAAGxL,CAAC,GAAGmB,CAAC,GAAGwS,CAAC,EAAElI,EAAE,GAAGzL,CAAC,GAAGoC,CAAC,EAAEqJ,EAAE,GAAGkI,CAAC,GAAGxS,CAAC,GAAGzB,CAAC,EAAE,CAAC,EAC7C8L,EAAE,GAAGmI,CAAC,GAAGxS,CAAC,GAAGnB,CAAC,EAAEyL,EAAE,GAAGkI,CAAC,GAAGxS,CAAC,GAAGzB,CAAC,EAAEQ,CAAC,GAAGyT,CAAC,GAAGA,CAAC,GAAGvR,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;QAED,OAAO,IAAI;MAEZ;IAAC;MAAA1a,GAAA;MAAAE,KAAA,EAED,SAAAqkB,UAAWvM,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAEpB,IAAI,CAAC3Q,GAAG,CAEPtD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAEM,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE2T,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;QAED,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAskC,UAAWjX,EAAE,EAAEC,EAAE,EAAEiX,EAAE,EAAEhX,EAAE,EAAEiX,EAAE,EAAEC,EAAE,EAAG;QAEnC,IAAI,CAACrpB,GAAG,CAEP,CAAC,EAAEmpB,EAAE,EAAEC,EAAE,EAAE,CAAC,EACZnX,EAAE,EAAE,CAAC,EAAEoX,EAAE,EAAE,CAAC,EACZnX,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;QAED,OAAO,IAAI;MAEZ;IAAC;MAAAztB,GAAA;MAAAE,KAAA,EAED,SAAA0iC,QAASjI,QAAQ,EAAEzJ,UAAU,EAAE7M,KAAK,EAAG;QAEtC,IAAMxD,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExB,IAAM1F,CAAC,GAAGkZ,UAAU,CAACL,EAAE;UAAEvY,CAAC,GAAG4Y,UAAU,CAACJ,EAAE;UAAE7E,CAAC,GAAGiF,UAAU,CAACH,EAAE;UAAE7E,CAAC,GAAGgF,UAAU,CAACF,EAAE;QAChF,IAAM4T,EAAE,GAAG5sB,CAAC,GAAGA,CAAC;UAAE6sB,EAAE,GAAGvsB,CAAC,GAAGA,CAAC;UAAEwsB,EAAE,GAAG7Y,CAAC,GAAGA,CAAC;QACxC,IAAMmB,EAAE,GAAGpV,CAAC,GAAG4sB,EAAE;UAAErX,EAAE,GAAGvV,CAAC,GAAG6sB,EAAE;UAAErX,EAAE,GAAGxV,CAAC,GAAG8sB,EAAE;QAC3C,IAAMzX,EAAE,GAAG/U,CAAC,GAAGusB,EAAE;UAAEpX,EAAE,GAAGnV,CAAC,GAAGwsB,EAAE;UAAExX,EAAE,GAAGrB,CAAC,GAAG6Y,EAAE;QAC3C,IAAMC,EAAE,GAAG7Y,CAAC,GAAG0Y,EAAE;UAAEI,EAAE,GAAG9Y,CAAC,GAAG2Y,EAAE;UAAEI,EAAE,GAAG/Y,CAAC,GAAG4Y,EAAE;QAE3C,IAAM9gB,EAAE,GAAGK,KAAK,CAACrM,CAAC;UAAEiM,EAAE,GAAGI,KAAK,CAAC/L,CAAC;UAAEigB,EAAE,GAAGlU,KAAK,CAAC4H,CAAC;QAE9CpL,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,IAAKwM,EAAE,GAAGC,EAAE,CAAE,IAAKtJ,EAAE;QAClCnD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE0M,EAAE,GAAG0X,EAAE,IAAKjhB,EAAE;QAC1BnD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE2M,EAAE,GAAGwX,EAAE,IAAKhhB,EAAE;QAC1BnD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAEXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE0M,EAAE,GAAG0X,EAAE,IAAKhhB,EAAE;QAC1BpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,IAAKuM,EAAE,GAAGE,EAAE,CAAE,IAAKrJ,EAAE;QAClCpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE4M,EAAE,GAAGsX,EAAE,IAAK9gB,EAAE;QAC1BpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAEXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE2M,EAAE,GAAGwX,EAAE,IAAKzM,EAAE;QAC1B1X,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE4M,EAAE,GAAGsX,EAAE,IAAKxM,EAAE;QAC1B1X,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC,IAAKuM,EAAE,GAAGC,EAAE,CAAE,IAAKkL,EAAE;QACnC1X,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QAEZA,EAAE,CAAE,EAAE,CAAE,GAAG8Z,QAAQ,CAAC3iB,CAAC;QACrB6I,EAAE,CAAE,EAAE,CAAE,GAAG8Z,QAAQ,CAACriB,CAAC;QACrBuI,EAAE,CAAE,EAAE,CAAE,GAAG8Z,QAAQ,CAAC1O,CAAC;QACrBpL,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QAEZ,OAAO,IAAI;MAEZ;IAAC;MAAA7gB,GAAA;MAAAE,KAAA,EAED,SAAAglC,UAAWvK,QAAQ,EAAEzJ,UAAU,EAAE7M,KAAK,EAAG;QAExC,IAAMxD,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExB,IAAIsG,EAAE,GAAG6d,KAAK,CAACvmB,GAAG,CAAEuF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,CAAE,CAAC/a,MAAM,EAAE;QACxD,IAAMme,EAAE,GAAG4d,KAAK,CAACvmB,GAAG,CAAEuF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,CAAE,CAAC/a,MAAM,EAAE;QAC1D,IAAMyyB,EAAE,GAAGsJ,KAAK,CAACvmB,GAAG,CAAEuF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,EAAE,CAAE,CAAE,CAAC/a,MAAM,EAAE;;QAE3D;QACA,IAAMud,GAAG,GAAG,IAAI,CAACT,WAAW,EAAE;QAC9B,IAAKS,GAAG,GAAG,CAAC,EAAGW,EAAE,GAAG,CAAEA,EAAE;QAExB2W,QAAQ,CAAC3iB,CAAC,GAAG6I,EAAE,CAAE,EAAE,CAAE;QACrB8Z,QAAQ,CAACriB,CAAC,GAAGuI,EAAE,CAAE,EAAE,CAAE;QACrB8Z,QAAQ,CAAC1O,CAAC,GAAGpL,EAAE,CAAE,EAAE,CAAE;;QAErB;QACAskB,KAAK,CAACxoB,IAAI,CAAE,IAAI,CAAE;QAElB,IAAMyoB,KAAK,GAAG,CAAC,GAAGphB,EAAE;QACpB,IAAMqhB,KAAK,GAAG,CAAC,GAAGphB,EAAE;QACpB,IAAMqhB,KAAK,GAAG,CAAC,GAAG/M,EAAE;QAEpB4M,KAAK,CAACznB,QAAQ,CAAE,CAAC,CAAE,IAAI0nB,KAAK;QAC5BD,KAAK,CAACznB,QAAQ,CAAE,CAAC,CAAE,IAAI0nB,KAAK;QAC5BD,KAAK,CAACznB,QAAQ,CAAE,CAAC,CAAE,IAAI0nB,KAAK;QAE5BD,KAAK,CAACznB,QAAQ,CAAE,CAAC,CAAE,IAAI2nB,KAAK;QAC5BF,KAAK,CAACznB,QAAQ,CAAE,CAAC,CAAE,IAAI2nB,KAAK;QAC5BF,KAAK,CAACznB,QAAQ,CAAE,CAAC,CAAE,IAAI2nB,KAAK;QAE5BF,KAAK,CAACznB,QAAQ,CAAE,CAAC,CAAE,IAAI4nB,KAAK;QAC5BH,KAAK,CAACznB,QAAQ,CAAE,CAAC,CAAE,IAAI4nB,KAAK;QAC5BH,KAAK,CAACznB,QAAQ,CAAE,EAAE,CAAE,IAAI4nB,KAAK;QAE7BpU,UAAU,CAACY,qBAAqB,CAAEqT,KAAK,CAAE;QAEzC9gB,KAAK,CAACrM,CAAC,GAAGgM,EAAE;QACZK,KAAK,CAAC/L,CAAC,GAAG2L,EAAE;QACZI,KAAK,CAAC4H,CAAC,GAAGsM,EAAE;QAEZ,OAAO,IAAI;MAEZ;IAAC;MAAAv4B,GAAA;MAAAE,KAAA,EAED,SAAAqlC,gBAAiBC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAG;QAEtD,IAAMhlB,EAAE,GAAG,IAAI,CAACnD,QAAQ;QACxB,IAAM1F,CAAC,GAAG,CAAC,GAAG4tB,IAAI,IAAKH,KAAK,GAAGD,IAAI,CAAE;QACrC,IAAMltB,CAAC,GAAG,CAAC,GAAGstB,IAAI,IAAKF,GAAG,GAAGC,MAAM,CAAE;QAErC,IAAMnrB,CAAC,GAAG,CAAEirB,KAAK,GAAGD,IAAI,KAAOC,KAAK,GAAGD,IAAI,CAAE;QAC7C,IAAM/qB,CAAC,GAAG,CAAEirB,GAAG,GAAGC,MAAM,KAAOD,GAAG,GAAGC,MAAM,CAAE;QAC7C,IAAMjrB,CAAC,GAAG,EAAImrB,GAAG,GAAGD,IAAI,CAAE,IAAKC,GAAG,GAAGD,IAAI,CAAE;QAC3C,IAAM/iB,CAAC,GAAG,CAAE,CAAC,GAAGgjB,GAAG,GAAGD,IAAI,IAAKC,GAAG,GAAGD,IAAI,CAAE;QAE3C/kB,EAAE,CAAE,CAAC,CAAE,GAAG7I,CAAC;QAAE6I,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC;QAAEqG,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QACnDA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAGvI,CAAC;QAAEuI,EAAE,CAAE,CAAC,CAAE,GAAGpG,CAAC;QAAEoG,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QACnDA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAGnG,CAAC;QAAEmG,EAAE,CAAE,EAAE,CAAE,GAAGgC,CAAC;QACpDhC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QAEtD,OAAO,IAAI;MAEZ;IAAC;MAAA7gB,GAAA;MAAAE,KAAA,EAED,SAAA4lC,iBAAkBN,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAG;QAEvD,IAAMhlB,EAAE,GAAG,IAAI,CAACnD,QAAQ;QACxB,IAAMwO,CAAC,GAAG,GAAG,IAAKuZ,KAAK,GAAGD,IAAI,CAAE;QAChC,IAAMxiB,CAAC,GAAG,GAAG,IAAK0iB,GAAG,GAAGC,MAAM,CAAE;QAChC,IAAMI,CAAC,GAAG,GAAG,IAAKF,GAAG,GAAGD,IAAI,CAAE;QAE9B,IAAM5tB,CAAC,GAAG,CAAEytB,KAAK,GAAGD,IAAI,IAAKtZ,CAAC;QAC9B,IAAM5T,CAAC,GAAG,CAAEotB,GAAG,GAAGC,MAAM,IAAK3iB,CAAC;QAC9B,IAAMiJ,CAAC,GAAG,CAAE4Z,GAAG,GAAGD,IAAI,IAAKG,CAAC;QAE5BllB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAGqL,CAAC;QAAErL,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE7I,CAAC;QACzD6I,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAGmC,CAAC;QAAEnC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEvI,CAAC;QACzDuI,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC,GAAGklB,CAAC;QAAEllB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEoL,CAAC;QAC5DpL,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;QAEpD,OAAO,IAAI;MAEZ;IAAC;MAAA7gB,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQsF,MAAM,EAAG;QAEhB,IAAM/D,EAAE,GAAG,IAAI,CAACnD,QAAQ;QACxB,IAAMqD,EAAE,GAAG6D,MAAM,CAAClH,QAAQ;QAE1B,KAAM,IAAI3X,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAG,EAAG;UAE/B,IAAK8a,EAAE,CAAE9a,CAAC,CAAE,KAAKgb,EAAE,CAAEhb,CAAC,CAAE,EAAG,OAAO,KAAK;QAExC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAqf,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAE9B,KAAM,IAAIzZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAG,EAAG;UAE/B,IAAI,CAAC2X,QAAQ,CAAE3X,CAAC,CAAE,GAAG0Q,KAAK,CAAE1Q,CAAC,GAAGyZ,MAAM,CAAE;QAEzC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAuf,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAEjC,IAAMqB,EAAE,GAAG,IAAI,CAACnD,QAAQ;QAExBjH,KAAK,CAAE+I,MAAM,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QACzBpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAE7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAE7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;QAC7BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;QAC/BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;QAE/BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;QAC/BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;QAC/BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;QAC/BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;QAE/B,OAAOpK,KAAK;MAEb;IAAC;IAAA,OAAAsqB,OAAA;EAAA;EAIF,IAAMc,KAAK,GAAG,aAAc,IAAIvM,OAAO,EAAE;EACzC,IAAM6P,KAAK,GAAG,aAAc,IAAIpE,OAAO,EAAE;EACzC,IAAM8B,KAAK,GAAG,aAAc,IAAIvN,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;EAClD,IAAMwN,IAAI,GAAG,aAAc,IAAIxN,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;EACjD,IAAMzE,EAAE,GAAG,aAAc,IAAIyE,OAAO,EAAE;EACtC,IAAMxE,EAAE,GAAG,aAAc,IAAIwE,OAAO,EAAE;EACtC,IAAMvE,EAAE,GAAG,aAAc,IAAIuE,OAAO,EAAE;EAEtC,IAAM0Q,OAAO,GAAG,aAAc,IAAIjF,OAAO,EAAE;EAC3C,IAAMkF,aAAa,GAAG,aAAc,IAAIvV,UAAU,EAAE;EAAC,IAE/CwV,KAAK,0BAAAC,iBAAA;IAEV,SAAAD,MAAaluB,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE2T,CAAC,GAAG,CAAC,EAAEtR,KAAK,GAAGurB,KAAK,CAACE,aAAa,EAAG;MAAA99B,eAAA,OAAA49B,KAAA;MAE/D,IAAI,CAACG,OAAO,GAAG,IAAI;MAEnB,IAAI,CAACxV,EAAE,GAAG7Y,CAAC;MACX,IAAI,CAAC8Y,EAAE,GAAGxY,CAAC;MACX,IAAI,CAACyY,EAAE,GAAG9E,CAAC;MACX,IAAI,CAACqF,MAAM,GAAG3W,KAAK;IAEpB;IAAC7R,YAAA,CAAAo9B,KAAA;MAAAlmC,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAQ;QAEP,OAAO,IAAI,CAAC0U,EAAE;MAEf,CAAC;MAAAvV,GAAA,EAED,SAAAA,IAAOpb,KAAK,EAAG;QAEd,IAAI,CAAC2wB,EAAE,GAAG3wB,KAAK;QACf,IAAI,CAAC+wB,iBAAiB,EAAE;MAEzB;IAAC;MAAAjxB,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAQ;QAEP,OAAO,IAAI,CAAC2U,EAAE;MAEf,CAAC;MAAAxV,GAAA,EAED,SAAAA,IAAOpb,KAAK,EAAG;QAEd,IAAI,CAAC4wB,EAAE,GAAG5wB,KAAK;QACf,IAAI,CAAC+wB,iBAAiB,EAAE;MAEzB;IAAC;MAAAjxB,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAQ;QAEP,OAAO,IAAI,CAAC4U,EAAE;MAEf,CAAC;MAAAzV,GAAA,EAED,SAAAA,IAAOpb,KAAK,EAAG;QAEd,IAAI,CAAC6wB,EAAE,GAAG7wB,KAAK;QACf,IAAI,CAAC+wB,iBAAiB,EAAE;MAEzB;IAAC;MAAAjxB,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAY;QAEX,OAAO,IAAI,CAACmV,MAAM;MAEnB,CAAC;MAAAhW,GAAA,EAED,SAAAA,IAAWpb,KAAK,EAAG;QAElB,IAAI,CAACoxB,MAAM,GAAGpxB,KAAK;QACnB,IAAI,CAAC+wB,iBAAiB,EAAE;MAEzB;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKtD,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAEtR,KAAK,GAAG,IAAI,CAAC2W,MAAM,EAAG;QAEnC,IAAI,CAACT,EAAE,GAAG7Y,CAAC;QACX,IAAI,CAAC8Y,EAAE,GAAGxY,CAAC;QACX,IAAI,CAACyY,EAAE,GAAG9E,CAAC;QACX,IAAI,CAACqF,MAAM,GAAG3W,KAAK;QAEnB,IAAI,CAACsW,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,CAAE,IAAI,CAACyqB,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACO,MAAM,CAAE;MAEtE;IAAC;MAAAtxB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAMyU,KAAK,EAAG;QAEb,IAAI,CAACP,EAAE,GAAGO,KAAK,CAACP,EAAE;QAClB,IAAI,CAACC,EAAE,GAAGM,KAAK,CAACN,EAAE;QAClB,IAAI,CAACC,EAAE,GAAGK,KAAK,CAACL,EAAE;QAClB,IAAI,CAACO,MAAM,GAAGF,KAAK,CAACE,MAAM;QAE1B,IAAI,CAACL,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAA4xB,sBAAuBha,CAAC,EAAE6C,KAAK,GAAG,IAAI,CAAC2W,MAAM,EAAED,MAAM,GAAG,IAAI,EAAG;QAE9D;;QAEA,IAAMxQ,EAAE,GAAG/I,CAAC,CAAC4F,QAAQ;QACrB,IAAMiP,GAAG,GAAG9L,EAAE,CAAE,CAAC,CAAE;UAAE+L,GAAG,GAAG/L,EAAE,CAAE,CAAC,CAAE;UAAEgM,GAAG,GAAGhM,EAAE,CAAE,CAAC,CAAE;QACjD,IAAMiM,GAAG,GAAGjM,EAAE,CAAE,CAAC,CAAE;UAAEkM,GAAG,GAAGlM,EAAE,CAAE,CAAC,CAAE;UAAEmM,GAAG,GAAGnM,EAAE,CAAE,CAAC,CAAE;QACjD,IAAMoM,GAAG,GAAGpM,EAAE,CAAE,CAAC,CAAE;UAAEqM,GAAG,GAAGrM,EAAE,CAAE,CAAC,CAAE;UAAEsM,GAAG,GAAGtM,EAAE,CAAE,EAAE,CAAE;QAElD,QAASlG,KAAK;UAEb,KAAK,KAAK;YAET,IAAI,CAACmW,EAAE,GAAGha,IAAI,CAACwvB,IAAI,CAAE7uB,KAAK,CAAEoV,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;YAE3C,IAAK/V,IAAI,CAACgC,GAAG,CAAE+T,GAAG,CAAE,GAAG,SAAS,EAAG;cAElC,IAAI,CAACgE,EAAE,GAAG/Z,IAAI,CAACyH,KAAK,CAAE,CAAEyO,GAAG,EAAEG,GAAG,CAAE;cAClC,IAAI,CAAC4D,EAAE,GAAGja,IAAI,CAACyH,KAAK,CAAE,CAAEqO,GAAG,EAAED,GAAG,CAAE;YAEnC,CAAC,MAAM;cAEN,IAAI,CAACkE,EAAE,GAAG/Z,IAAI,CAACyH,KAAK,CAAE2O,GAAG,EAAEH,GAAG,CAAE;cAChC,IAAI,CAACgE,EAAE,GAAG,CAAC;YAEZ;YAEA;UAED,KAAK,KAAK;YAET,IAAI,CAACF,EAAE,GAAG/Z,IAAI,CAACwvB,IAAI,CAAE,CAAE7uB,KAAK,CAAEuV,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;YAE7C,IAAKlW,IAAI,CAACgC,GAAG,CAAEkU,GAAG,CAAE,GAAG,SAAS,EAAG;cAElC,IAAI,CAAC8D,EAAE,GAAGha,IAAI,CAACyH,KAAK,CAAEsO,GAAG,EAAEM,GAAG,CAAE;cAChC,IAAI,CAAC4D,EAAE,GAAGja,IAAI,CAACyH,KAAK,CAAEuO,GAAG,EAAEC,GAAG,CAAE;YAEjC,CAAC,MAAM;cAEN,IAAI,CAAC+D,EAAE,GAAGha,IAAI,CAACyH,KAAK,CAAE,CAAE0O,GAAG,EAAEN,GAAG,CAAE;cAClC,IAAI,CAACoE,EAAE,GAAG,CAAC;YAEZ;YAEA;UAED,KAAK,KAAK;YAET,IAAI,CAACF,EAAE,GAAG/Z,IAAI,CAACwvB,IAAI,CAAE7uB,KAAK,CAAEyV,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;YAE3C,IAAKpW,IAAI,CAACgC,GAAG,CAAEoU,GAAG,CAAE,GAAG,SAAS,EAAG;cAElC,IAAI,CAAC4D,EAAE,GAAGha,IAAI,CAACyH,KAAK,CAAE,CAAE0O,GAAG,EAAEE,GAAG,CAAE;cAClC,IAAI,CAAC4D,EAAE,GAAGja,IAAI,CAACyH,KAAK,CAAE,CAAEqO,GAAG,EAAEG,GAAG,CAAE;YAEnC,CAAC,MAAM;cAEN,IAAI,CAAC+D,EAAE,GAAG,CAAC;cACX,IAAI,CAACC,EAAE,GAAGja,IAAI,CAACyH,KAAK,CAAEuO,GAAG,EAAEH,GAAG,CAAE;YAEjC;YAEA;UAED,KAAK,KAAK;YAET,IAAI,CAACmE,EAAE,GAAGha,IAAI,CAACwvB,IAAI,CAAE,CAAE7uB,KAAK,CAAEwV,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;YAE7C,IAAKnW,IAAI,CAACgC,GAAG,CAAEmU,GAAG,CAAE,GAAG,SAAS,EAAG;cAElC,IAAI,CAAC4D,EAAE,GAAG/Z,IAAI,CAACyH,KAAK,CAAE2O,GAAG,EAAEC,GAAG,CAAE;cAChC,IAAI,CAAC4D,EAAE,GAAGja,IAAI,CAACyH,KAAK,CAAEuO,GAAG,EAAEH,GAAG,CAAE;YAEjC,CAAC,MAAM;cAEN,IAAI,CAACkE,EAAE,GAAG,CAAC;cACX,IAAI,CAACE,EAAE,GAAGja,IAAI,CAACyH,KAAK,CAAE,CAAEqO,GAAG,EAAEG,GAAG,CAAE;YAEnC;YAEA;UAED,KAAK,KAAK;YAET,IAAI,CAACgE,EAAE,GAAGja,IAAI,CAACwvB,IAAI,CAAE7uB,KAAK,CAAEqV,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;YAE3C,IAAKhW,IAAI,CAACgC,GAAG,CAAEgU,GAAG,CAAE,GAAG,SAAS,EAAG;cAElC,IAAI,CAAC+D,EAAE,GAAG/Z,IAAI,CAACyH,KAAK,CAAE,CAAEyO,GAAG,EAAED,GAAG,CAAE;cAClC,IAAI,CAAC+D,EAAE,GAAGha,IAAI,CAACyH,KAAK,CAAE,CAAE0O,GAAG,EAAEN,GAAG,CAAE;YAEnC,CAAC,MAAM;cAEN,IAAI,CAACkE,EAAE,GAAG,CAAC;cACX,IAAI,CAACC,EAAE,GAAGha,IAAI,CAACyH,KAAK,CAAEsO,GAAG,EAAEM,GAAG,CAAE;YAEjC;YAEA;UAED,KAAK,KAAK;YAET,IAAI,CAAC4D,EAAE,GAAGja,IAAI,CAACwvB,IAAI,CAAE,CAAE7uB,KAAK,CAAEmV,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;YAE7C,IAAK9V,IAAI,CAACgC,GAAG,CAAE8T,GAAG,CAAE,GAAG,SAAS,EAAG;cAElC,IAAI,CAACiE,EAAE,GAAG/Z,IAAI,CAACyH,KAAK,CAAE2O,GAAG,EAAEH,GAAG,CAAE;cAChC,IAAI,CAAC+D,EAAE,GAAGha,IAAI,CAACyH,KAAK,CAAEsO,GAAG,EAAEF,GAAG,CAAE;YAEjC,CAAC,MAAM;cAEN,IAAI,CAACkE,EAAE,GAAG/Z,IAAI,CAACyH,KAAK,CAAE,CAAEyO,GAAG,EAAEG,GAAG,CAAE;cAClC,IAAI,CAAC2D,EAAE,GAAG,CAAC;YAEZ;YAEA;UAED;YAECrnB,OAAO,CAACC,IAAI,CAAE,sEAAsE,GAAGiR,KAAK,CAAE;QAAC;QAIjG,IAAI,CAAC2W,MAAM,GAAG3W,KAAK;QAEnB,IAAK0W,MAAM,KAAK,IAAI,EAAG,IAAI,CAACJ,iBAAiB,EAAE;QAE/C,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAqmC,kBAAmBhsB,CAAC,EAAEI,KAAK,EAAE0W,MAAM,EAAG;QAErC2U,OAAO,CAACrD,0BAA0B,CAAEpoB,CAAC,CAAE;QAEvC,OAAO,IAAI,CAACuX,qBAAqB,CAAEkU,OAAO,EAAErrB,KAAK,EAAE0W,MAAM,CAAE;MAE5D;IAAC;MAAArxB,GAAA;MAAAE,KAAA,EAED,SAAAsmC,eAAgB5pB,CAAC,EAAEjC,KAAK,GAAG,IAAI,CAAC2W,MAAM,EAAG;QAExC,OAAO,IAAI,CAAChW,GAAG,CAAEsB,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,EAAEsE,CAAC,CAACqP,CAAC,EAAEtR,KAAK,CAAE;MAExC;IAAC;MAAA3a,GAAA;MAAAE,KAAA,EAED,SAAAumC,QAASC,QAAQ,EAAG;QAEnB;;QAEAT,aAAa,CAAC9U,YAAY,CAAE,IAAI,CAAE;QAElC,OAAO,IAAI,CAACoV,iBAAiB,CAAEN,aAAa,EAAES,QAAQ,CAAE;MAEzD;IAAC;MAAA1mC,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQ8R,KAAK,EAAG;QAEf,OAASA,KAAK,CAACP,EAAE,KAAK,IAAI,CAACA,EAAE,IAAQO,KAAK,CAACN,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMM,KAAK,CAACL,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMK,KAAK,CAACE,MAAM,KAAK,IAAI,CAACA,MAAQ;MAE5H;IAAC;MAAAtxB,GAAA;MAAAE,KAAA,EAED,SAAAqf,UAAW9I,KAAK,EAAG;QAElB,IAAI,CAACoa,EAAE,GAAGpa,KAAK,CAAE,CAAC,CAAE;QACpB,IAAI,CAACqa,EAAE,GAAGra,KAAK,CAAE,CAAC,CAAE;QACpB,IAAI,CAACsa,EAAE,GAAGta,KAAK,CAAE,CAAC,CAAE;QACpB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKjS,SAAS,EAAG,IAAI,CAAC8sB,MAAM,GAAG7a,KAAK,CAAE,CAAC,CAAE;QAExD,IAAI,CAACwa,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAjxB,GAAA;MAAAE,KAAA,EAED,SAAAuf,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACqR,EAAE;QACzBpa,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACsR,EAAE;QAC7Bra,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACuR,EAAE;QAC7Bta,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC8R,MAAM;QAEjC,OAAO7a,KAAK;MAEb;IAAC;MAAAzW,GAAA;MAAAE,KAAA,EAED,SAAA6zB,UAAWC,QAAQ,EAAG;QAErB,IAAI,CAAC/C,iBAAiB,GAAG+C,QAAQ;QAEjC,OAAO,IAAI;MAEZ;IAAC;MAAAh0B,GAAA;MAAAE,KAAA,EAED,SAAA+wB,kBAAA,EAAoB,CAAC;IAAC;MAAAjxB,GAAA,EAAAmmC,iBAAA;MAAAjmC,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAEtB,SAAApG,MAAA;QAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAgf,OAAA2mB,SAAA;UAAA,kBAAAA,SAAA,CAAAx/B,IAAA,GAAAw/B,SAAA,CAAA9hC,IAAA;YAAA;cAAA8hC,SAAA,CAAA9hC,IAAA;cAEC,OAAM,IAAI,CAACgsB,EAAE;YAAA;cAAA8V,SAAA,CAAA9hC,IAAA;cACb,OAAM,IAAI,CAACisB,EAAE;YAAA;cAAA6V,SAAA,CAAA9hC,IAAA;cACb,OAAM,IAAI,CAACksB,EAAE;YAAA;cAAA4V,SAAA,CAAA9hC,IAAA;cACb,OAAM,IAAI,CAACysB,MAAM;YAAA;YAAA;cAAA,OAAAqV,SAAA,CAAAr/B,IAAA;UAAA;QAAA,GAAApH,KAAA;MAAA,CAEjB;IAAA;IAAA,OAAAgmC,KAAA;EAAA,EAPE9lC,MAAM,CAACE,QAAQ;EAWnB4lC,KAAK,CAACE,aAAa,GAAG,KAAK;EAAC,IAEtBQ,MAAM;IAEX,SAAAA,OAAA,EAAc;MAAAt+B,eAAA,OAAAs+B,MAAA;MAEb,IAAI,CAACC,IAAI,GAAG,CAAC,GAAG,CAAC;IAElB;IAAC/9B,YAAA,CAAA89B,MAAA;MAAA5mC,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKmP,OAAO,EAAG;QAEd,IAAI,CAACoc,IAAI,GAAG,CAAE,CAAC,IAAIpc,OAAO,GAAG,CAAC,MAAO,CAAC;MAEvC;IAAC;MAAAzqB,GAAA;MAAAE,KAAA,EAED,SAAA4mC,OAAQrc,OAAO,EAAG;QAEjB,IAAI,CAACoc,IAAI,IAAI,CAAC,IAAIpc,OAAO,GAAG,CAAC;MAE9B;IAAC;MAAAzqB,GAAA;MAAAE,KAAA,EAED,SAAA6mC,UAAA,EAAY;QAEX,IAAI,CAACF,IAAI,GAAG,UAAU,GAAG,CAAC;MAE3B;IAAC;MAAA7mC,GAAA;MAAAE,KAAA,EAED,SAAA8mC,OAAQvc,OAAO,EAAG;QAEjB,IAAI,CAACoc,IAAI,IAAI,CAAC,IAAIpc,OAAO,GAAG,CAAC;MAE9B;IAAC;MAAAzqB,GAAA;MAAAE,KAAA,EAED,SAAA+mC,QAASxc,OAAO,EAAG;QAElB,IAAI,CAACoc,IAAI,IAAI,EAAI,CAAC,IAAIpc,OAAO,GAAG,CAAC,CAAE;MAEpC;IAAC;MAAAzqB,GAAA;MAAAE,KAAA,EAED,SAAAgnC,WAAA,EAAa;QAEZ,IAAI,CAACL,IAAI,GAAG,CAAC;MAEd;IAAC;MAAA7mC,GAAA;MAAAE,KAAA,EAED,SAAAknB,KAAM+f,MAAM,EAAG;QAEd,OAAO,CAAE,IAAI,CAACN,IAAI,GAAGM,MAAM,CAACN,IAAI,MAAO,CAAC;MAEzC;IAAC;MAAA7mC,GAAA;MAAAE,KAAA,EAED,SAAAknC,UAAW3c,OAAO,EAAG;QAEpB,OAAO,CAAE,IAAI,CAACoc,IAAI,IAAK,CAAC,IAAIpc,OAAO,GAAG,CAAC,CAAE,MAAO,CAAC;MAElD;IAAC;IAAA,OAAAmc,MAAA;EAAA;EAIF,IAAIS,WAAW,GAAG,CAAC;EAEnB,IAAMC,KAAK,GAAG,aAAc,IAAIhS,OAAO,EAAE;EACzC,IAAMiS,GAAG,GAAG,aAAc,IAAI7W,UAAU,EAAE;EAC1C,IAAM8W,KAAK,GAAG,aAAc,IAAIzG,OAAO,EAAE;EACzC,IAAM0G,OAAO,GAAG,aAAc,IAAInS,OAAO,EAAE;EAE3C,IAAMoS,WAAW,GAAG,aAAc,IAAIpS,OAAO,EAAE;EAC/C,IAAMqS,QAAQ,GAAG,aAAc,IAAIrS,OAAO,EAAE;EAC5C,IAAMsS,aAAa,GAAG,aAAc,IAAIlX,UAAU,EAAE;EAEpD,IAAMmX,MAAM,GAAG,aAAc,IAAIvS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;EACnD,IAAMwS,MAAM,GAAG,aAAc,IAAIxS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;EACnD,IAAMyS,MAAM,GAAG,aAAc,IAAIzS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;EAEnD,IAAM0S,WAAW,GAAG;IAAEjmC,IAAI,EAAE;EAAQ,CAAC;EACrC,IAAMkmC,aAAa,GAAG;IAAElmC,IAAI,EAAE;EAAU,CAAC;EAAC,IAEpCmmC,QAAQ,0BAAAC,iBAAA;IAAA7e,SAAA,CAAA4e,QAAA,EAAAC,iBAAA;IAAA,IAAAC,OAAA,GAAA5e,YAAA,CAAA0e,QAAA;IAEb,SAAAA,SAAA,EAAc;MAAA,IAAAG,MAAA;MAAA//B,eAAA,OAAA4/B,QAAA;MAEbG,MAAA,GAAAD,OAAA,CAAApmC,IAAA;MAEAqmC,MAAA,CAAKC,UAAU,GAAG,IAAI;MAEtB5oC,MAAM,CAACI,cAAc,CAAAwqB,sBAAA,CAAA+d,MAAA,GAAQ,IAAI,EAAE;QAAEnoC,KAAK,EAAEmnC,WAAW;MAAI,CAAC,CAAE;MAE9DgB,MAAA,CAAK9wB,IAAI,GAAGN,YAAY,EAAE;MAE1BoxB,MAAA,CAAKhiC,IAAI,GAAG,EAAE;MACdgiC,MAAA,CAAKtmC,IAAI,GAAG,UAAU;MAEtBsmC,MAAA,CAAKE,MAAM,GAAG,IAAI;MAClBF,MAAA,CAAKzN,QAAQ,GAAG,EAAE;MAElByN,MAAA,CAAKrF,EAAE,GAAGkF,QAAQ,CAACM,UAAU,CAAC9rB,KAAK,EAAE;MAErC,IAAMie,QAAQ,GAAG,IAAIrF,OAAO,EAAE;MAC9B,IAAMpR,QAAQ,GAAG,IAAIgiB,KAAK,EAAE;MAC5B,IAAMhV,UAAU,GAAG,IAAIR,UAAU,EAAE;MACnC,IAAMrM,KAAK,GAAG,IAAIiR,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEpC,SAASmT,gBAAgBA,CAAA,EAAG;QAE3BvX,UAAU,CAACC,YAAY,CAAEjN,QAAQ,EAAE,KAAK,CAAE;MAE3C;MAEA,SAASwkB,kBAAkBA,CAAA,EAAG;QAE7BxkB,QAAQ,CAACqiB,iBAAiB,CAAErV,UAAU,EAAE1sB,SAAS,EAAE,KAAK,CAAE;MAE3D;MAEA0f,QAAQ,CAAC6P,SAAS,CAAE0U,gBAAgB,CAAE;MACtCvX,UAAU,CAAC6C,SAAS,CAAE2U,kBAAkB,CAAE;MAE1ChpC,MAAM,CAACipC,gBAAgB,CAAAre,sBAAA,CAAA+d,MAAA,GAAQ;QAC9B1N,QAAQ,EAAE;UACT95B,YAAY,EAAE,IAAI;UAClBD,UAAU,EAAE,IAAI;UAChBV,KAAK,EAAEy6B;QACR,CAAC;QACDzW,QAAQ,EAAE;UACTrjB,YAAY,EAAE,IAAI;UAClBD,UAAU,EAAE,IAAI;UAChBV,KAAK,EAAEgkB;QACR,CAAC;QACDgN,UAAU,EAAE;UACXrwB,YAAY,EAAE,IAAI;UAClBD,UAAU,EAAE,IAAI;UAChBV,KAAK,EAAEgxB;QACR,CAAC;QACD7M,KAAK,EAAE;UACNxjB,YAAY,EAAE,IAAI;UAClBD,UAAU,EAAE,IAAI;UAChBV,KAAK,EAAEmkB;QACR,CAAC;QACDukB,eAAe,EAAE;UAChB1oC,KAAK,EAAE,IAAI6gC,OAAO;QACnB,CAAC;QACD8H,YAAY,EAAE;UACb3oC,KAAK,EAAE,IAAIggB,OAAO;QACnB;MACD,CAAC,CAAE;MAEHmoB,MAAA,CAAKzjB,MAAM,GAAG,IAAImc,OAAO,EAAE;MAC3BsH,MAAA,CAAKxR,WAAW,GAAG,IAAIkK,OAAO,EAAE;MAEhCsH,MAAA,CAAKzd,gBAAgB,GAAGsd,QAAQ,CAACY,0BAA0B;MAC3DT,MAAA,CAAKU,sBAAsB,GAAG,KAAK;MAEnCV,MAAA,CAAKW,qBAAqB,GAAGd,QAAQ,CAACe,gCAAgC,CAAC,CAAC;;MAExEZ,MAAA,CAAKlB,MAAM,GAAG,IAAIP,MAAM,EAAE;MAC1ByB,MAAA,CAAKa,OAAO,GAAG,IAAI;MAEnBb,MAAA,CAAKc,UAAU,GAAG,KAAK;MACvBd,MAAA,CAAKe,aAAa,GAAG,KAAK;MAE1Bf,MAAA,CAAKgB,aAAa,GAAG,IAAI;MACzBhB,MAAA,CAAKiB,WAAW,GAAG,CAAC;MAEpBjB,MAAA,CAAKkB,UAAU,GAAG,EAAE;MAEpBlB,MAAA,CAAKpd,QAAQ,GAAG,CAAC,CAAC;MAAC,OAAAod,MAAA;IAEpB;IAACv/B,YAAA,CAAAo/B,QAAA;MAAAloC,GAAA;MAAAE,KAAA,EAED,SAAAspC,eAAA,CAAgB,0DAA2D,CAAC;IAAC;MAAAxpC,GAAA;MAAAE,KAAA,EAE7E,SAAAupC,cAAA,CAAe,0DAA2D,CAAC;IAAC;MAAAzpC,GAAA;MAAAE,KAAA,EAE5E,SAAAosB,aAAc1H,MAAM,EAAG;QAEtB,IAAK,IAAI,CAACgG,gBAAgB,EAAG,IAAI,CAACS,YAAY,EAAE;QAEhD,IAAI,CAACzG,MAAM,CAACrD,WAAW,CAAEqD,MAAM,CAAE;QAEjC,IAAI,CAACA,MAAM,CAACsgB,SAAS,CAAE,IAAI,CAACvK,QAAQ,EAAE,IAAI,CAACzJ,UAAU,EAAE,IAAI,CAAC7M,KAAK,CAAE;MAEpE;IAAC;MAAArkB,GAAA;MAAAE,KAAA,EAED,SAAAy1B,gBAAiBpb,CAAC,EAAG;QAEpB,IAAI,CAAC2W,UAAU,CAAC3P,WAAW,CAAEhH,CAAC,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAva,GAAA;MAAAE,KAAA,EAED,SAAAwpC,yBAA0B9X,IAAI,EAAEtT,KAAK,EAAG;QAEvC;;QAEA,IAAI,CAAC4S,UAAU,CAACS,gBAAgB,CAAEC,IAAI,EAAEtT,KAAK,CAAE;MAEhD;IAAC;MAAAte,GAAA;MAAAE,KAAA,EAED,SAAAypC,qBAAsBvY,KAAK,EAAG;QAE7B,IAAI,CAACF,UAAU,CAACC,YAAY,CAAEC,KAAK,EAAE,IAAI,CAAE;MAE5C;IAAC;MAAApxB,GAAA;MAAAE,KAAA,EAED,SAAA0pC,sBAAuB9xB,CAAC,EAAG;QAE1B;;QAEA,IAAI,CAACoZ,UAAU,CAACY,qBAAqB,CAAEha,CAAC,CAAE;MAE3C;IAAC;MAAA9X,GAAA;MAAAE,KAAA,EAED,SAAA2pC,0BAA2BtvB,CAAC,EAAG;QAE9B;;QAEA,IAAI,CAAC2W,UAAU,CAACvU,IAAI,CAAEpC,CAAC,CAAE;MAE1B;IAAC;MAAAva,GAAA;MAAAE,KAAA,EAED,SAAA4pC,aAAclY,IAAI,EAAEtT,KAAK,EAAG;QAE3B;QACA;;QAEAipB,GAAG,CAAC5V,gBAAgB,CAAEC,IAAI,EAAEtT,KAAK,CAAE;QAEnC,IAAI,CAAC4S,UAAU,CAAC9T,QAAQ,CAAEmqB,GAAG,CAAE;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAvnC,GAAA;MAAAE,KAAA,EAED,SAAA6pC,kBAAmBnY,IAAI,EAAEtT,KAAK,EAAG;QAEhC;QACA;QACA;;QAEAipB,GAAG,CAAC5V,gBAAgB,CAAEC,IAAI,EAAEtT,KAAK,CAAE;QAEnC,IAAI,CAAC4S,UAAU,CAAC3P,WAAW,CAAEgmB,GAAG,CAAE;QAElC,OAAO,IAAI;MAEZ;IAAC;MAAAvnC,GAAA;MAAAE,KAAA,EAED,SAAA8pC,QAAS1rB,KAAK,EAAG;QAEhB,OAAO,IAAI,CAACwrB,YAAY,CAAEjC,MAAM,EAAEvpB,KAAK,CAAE;MAE1C;IAAC;MAAAte,GAAA;MAAAE,KAAA,EAED,SAAA+pC,QAAS3rB,KAAK,EAAG;QAEhB,OAAO,IAAI,CAACwrB,YAAY,CAAEhC,MAAM,EAAExpB,KAAK,CAAE;MAE1C;IAAC;MAAAte,GAAA;MAAAE,KAAA,EAED,SAAAgqC,QAAS5rB,KAAK,EAAG;QAEhB,OAAO,IAAI,CAACwrB,YAAY,CAAE/B,MAAM,EAAEzpB,KAAK,CAAE;MAE1C;IAAC;MAAAte,GAAA;MAAAE,KAAA,EAED,SAAAiqC,gBAAiBvY,IAAI,EAAEwY,QAAQ,EAAG;QAEjC;QACA;;QAEA9C,KAAK,CAAC3qB,IAAI,CAAEiV,IAAI,CAAE,CAAC+D,eAAe,CAAE,IAAI,CAACzE,UAAU,CAAE;QAErD,IAAI,CAACyJ,QAAQ,CAAC9d,GAAG,CAAEyqB,KAAK,CAACjqB,cAAc,CAAE+sB,QAAQ,CAAE,CAAE;QAErD,OAAO,IAAI;MAEZ;IAAC;MAAApqC,GAAA;MAAAE,KAAA,EAED,SAAAmqC,WAAYD,QAAQ,EAAG;QAEtB,OAAO,IAAI,CAACD,eAAe,CAAEtC,MAAM,EAAEuC,QAAQ,CAAE;MAEhD;IAAC;MAAApqC,GAAA;MAAAE,KAAA,EAED,SAAAoqC,WAAYF,QAAQ,EAAG;QAEtB,OAAO,IAAI,CAACD,eAAe,CAAErC,MAAM,EAAEsC,QAAQ,CAAE;MAEhD;IAAC;MAAApqC,GAAA;MAAAE,KAAA,EAED,SAAAqqC,WAAYH,QAAQ,EAAG;QAEtB,OAAO,IAAI,CAACD,eAAe,CAAEpC,MAAM,EAAEqC,QAAQ,CAAE;MAEhD;IAAC;MAAApqC,GAAA;MAAAE,KAAA,EAED,SAAAsqC,aAActQ,MAAM,EAAG;QAEtB,IAAI,CAACE,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAErC,OAAOF,MAAM,CAAC5N,YAAY,CAAE,IAAI,CAACuK,WAAW,CAAE;MAE/C;IAAC;MAAA72B,GAAA;MAAAE,KAAA,EAED,SAAAuqC,aAAcvQ,MAAM,EAAG;QAEtB,IAAI,CAACE,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAErC,OAAOF,MAAM,CAAC5N,YAAY,CAAEkb,KAAK,CAAC7qB,IAAI,CAAE,IAAI,CAACka,WAAW,CAAE,CAAC5T,MAAM,EAAE,CAAE;MAEtE;IAAC;MAAAjjB,GAAA;MAAAE,KAAA,EAED,SAAAo+B,OAAQtmB,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAEjB;;QAEA,IAAKjU,CAAC,CAACwd,SAAS,EAAG;UAElBiS,OAAO,CAAC9qB,IAAI,CAAE3E,CAAC,CAAE;QAElB,CAAC,MAAM;UAENyvB,OAAO,CAACnsB,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE2T,CAAC,CAAE;QAEvB;QAEA,IAAMsc,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAI,CAACnO,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAErCsN,WAAW,CAACtP,qBAAqB,CAAE,IAAI,CAACvB,WAAW,CAAE;QAErD,IAAK,IAAI,CAAC6T,QAAQ,IAAI,IAAI,CAACC,OAAO,EAAG;UAEpCnD,KAAK,CAAClJ,MAAM,CAAEoJ,WAAW,EAAED,OAAO,EAAE,IAAI,CAACzE,EAAE,CAAE;QAE9C,CAAC,MAAM;UAENwE,KAAK,CAAClJ,MAAM,CAAEmJ,OAAO,EAAEC,WAAW,EAAE,IAAI,CAAC1E,EAAE,CAAE;QAE9C;QAEA,IAAI,CAAC9R,UAAU,CAACY,qBAAqB,CAAE0V,KAAK,CAAE;QAE9C,IAAKe,MAAM,EAAG;UAEbf,KAAK,CAAC7F,eAAe,CAAE4G,MAAM,CAAC1R,WAAW,CAAE;UAC3C0Q,GAAG,CAACzV,qBAAqB,CAAE0V,KAAK,CAAE;UAClC,IAAI,CAACtW,UAAU,CAAC3P,WAAW,CAAEgmB,GAAG,CAACtkB,MAAM,EAAE,CAAE;QAE5C;MAED;IAAC;MAAAjjB,GAAA;MAAAE,KAAA,EAED,SAAA2c,IAAK9V,MAAM,EAAG;QAEb,IAAK6jC,SAAS,CAAC9kC,MAAM,GAAG,CAAC,EAAG;UAE3B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6kC,SAAS,CAAC9kC,MAAM,EAAEC,CAAC,EAAG,EAAG;YAE7C,IAAI,CAAC8W,GAAG,CAAE+tB,SAAS,CAAE7kC,CAAC,CAAE,CAAE;UAE3B;UAEA,OAAO,IAAI;QAEZ;QAEA,IAAKgB,MAAM,KAAK,IAAI,EAAG;UAEtB0C,OAAO,CAAChG,KAAK,CAAE,kEAAkE,EAAEsD,MAAM,CAAE;UAC3F,OAAO,IAAI;QAEZ;QAEA,IAAKA,MAAM,IAAIA,MAAM,CAACuhC,UAAU,EAAG;UAElC,IAAKvhC,MAAM,CAACwhC,MAAM,KAAK,IAAI,EAAG;YAE7BxhC,MAAM,CAACwhC,MAAM,CAACsC,MAAM,CAAE9jC,MAAM,CAAE;UAE/B;UAEAA,MAAM,CAACwhC,MAAM,GAAG,IAAI;UACpB,IAAI,CAAC3N,QAAQ,CAACr1B,IAAI,CAAEwB,MAAM,CAAE;UAE5BA,MAAM,CAACwP,aAAa,CAAEyxB,WAAW,CAAE;QAEpC,CAAC,MAAM;UAENv+B,OAAO,CAAChG,KAAK,CAAE,+DAA+D,EAAEsD,MAAM,CAAE;QAEzF;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/G,GAAA;MAAAE,KAAA,EAED,SAAA2qC,OAAQ9jC,MAAM,EAAG;QAEhB,IAAK6jC,SAAS,CAAC9kC,MAAM,GAAG,CAAC,EAAG;UAE3B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6kC,SAAS,CAAC9kC,MAAM,EAAEC,CAAC,EAAG,EAAG;YAE7C,IAAI,CAAC8kC,MAAM,CAAED,SAAS,CAAE7kC,CAAC,CAAE,CAAE;UAE9B;UAEA,OAAO,IAAI;QAEZ;QAEA,IAAMsQ,KAAK,GAAG,IAAI,CAACukB,QAAQ,CAAC3kB,OAAO,CAAElP,MAAM,CAAE;QAE7C,IAAKsP,KAAK,KAAK,CAAE,CAAC,EAAG;UAEpBtP,MAAM,CAACwhC,MAAM,GAAG,IAAI;UACpB,IAAI,CAAC3N,QAAQ,CAACtkB,MAAM,CAAED,KAAK,EAAE,CAAC,CAAE;UAEhCtP,MAAM,CAACwP,aAAa,CAAE0xB,aAAa,CAAE;QAEtC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAjoC,GAAA;MAAAE,KAAA,EAED,SAAA4qC,iBAAA,EAAmB;QAElB,IAAMvC,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAKA,MAAM,KAAK,IAAI,EAAG;UAEtBA,MAAM,CAACsC,MAAM,CAAE,IAAI,CAAE;QAEtB;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA7qC,GAAA;MAAAE,KAAA,EAED,SAAA6qC,MAAA,EAAQ;QAEP,KAAM,IAAIhlC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC60B,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEjD,IAAMgB,MAAM,GAAG,IAAI,CAAC6zB,QAAQ,CAAE70B,CAAC,CAAE;UAEjCgB,MAAM,CAACwhC,MAAM,GAAG,IAAI;UAEpBxhC,MAAM,CAACwP,aAAa,CAAE0xB,aAAa,CAAE;QAEtC;QAEA,IAAI,CAACrN,QAAQ,CAAC90B,MAAM,GAAG,CAAC;QAExB,OAAO,IAAI;MAGZ;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAA8qC,OAAQjkC,MAAM,EAAG;QAEhB;;QAEA;;QAEA,IAAI,CAACqzB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAErCoN,KAAK,CAAC7qB,IAAI,CAAE,IAAI,CAACka,WAAW,CAAE,CAAC5T,MAAM,EAAE;QAEvC,IAAKlc,MAAM,CAACwhC,MAAM,KAAK,IAAI,EAAG;UAE7BxhC,MAAM,CAACwhC,MAAM,CAACnO,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;UAE9CoN,KAAK,CAACpqB,QAAQ,CAAErW,MAAM,CAACwhC,MAAM,CAAC1R,WAAW,CAAE;QAE5C;QAEA9vB,MAAM,CAACulB,YAAY,CAAEkb,KAAK,CAAE;QAE5B,IAAI,CAAC3qB,GAAG,CAAE9V,MAAM,CAAE;QAElBA,MAAM,CAACqzB,iBAAiB,CAAE,KAAK,EAAE,IAAI,CAAE;QAEvC,OAAO,IAAI;MAEZ;IAAC;MAAAp6B,GAAA;MAAAE,KAAA,EAED,SAAA+qC,cAAeC,EAAE,EAAG;QAEnB,OAAO,IAAI,CAACC,mBAAmB,CAAE,IAAI,EAAED,EAAE,CAAE;MAE5C;IAAC;MAAAlrC,GAAA;MAAAE,KAAA,EAED,SAAAkrC,gBAAiB/kC,IAAI,EAAG;QAEvB,OAAO,IAAI,CAAC8kC,mBAAmB,CAAE,MAAM,EAAE9kC,IAAI,CAAE;MAEhD;IAAC;MAAArG,GAAA;MAAAE,KAAA,EAED,SAAAirC,oBAAqB9kC,IAAI,EAAEnG,KAAK,EAAG;QAElC,IAAK,IAAI,CAAEmG,IAAI,CAAE,KAAKnG,KAAK,EAAG,OAAO,IAAI;QAEzC,KAAM,IAAI6F,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAACkkB,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAExD,IAAMslC,KAAK,GAAG,IAAI,CAACzQ,QAAQ,CAAE70B,CAAC,CAAE;UAChC,IAAMgB,MAAM,GAAGskC,KAAK,CAACF,mBAAmB,CAAE9kC,IAAI,EAAEnG,KAAK,CAAE;UAEvD,IAAK6G,MAAM,KAAKvC,SAAS,EAAG;YAE3B,OAAOuC,MAAM;UAEd;QAED;QAEA,OAAOvC,SAAS;MAEjB;IAAC;MAAAxE,GAAA;MAAAE,KAAA,EAED,SAAAorC,qBAAsBjlC,IAAI,EAAEnG,KAAK,EAAG;QAEnC,IAAIkD,MAAM,GAAG,EAAE;QAEf,IAAK,IAAI,CAAEiD,IAAI,CAAE,KAAKnG,KAAK,EAAGkD,MAAM,CAACmC,IAAI,CAAE,IAAI,CAAE;QAEjD,KAAM,IAAIQ,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAACkkB,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAExD,IAAMwlC,WAAW,GAAG,IAAI,CAAC3Q,QAAQ,CAAE70B,CAAC,CAAE,CAACulC,oBAAoB,CAAEjlC,IAAI,EAAEnG,KAAK,CAAE;UAE1E,IAAKqrC,WAAW,CAACzlC,MAAM,GAAG,CAAC,EAAG;YAE7B1C,MAAM,GAAGA,MAAM,CAACyjB,MAAM,CAAE0kB,WAAW,CAAE;UAEtC;QAED;QAEA,OAAOnoC,MAAM;MAEd;IAAC;MAAApD,GAAA;MAAAE,KAAA,EAED,SAAAsrC,iBAAkB9iC,MAAM,EAAG;QAE1B,IAAI,CAAC0xB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAErC,OAAO1xB,MAAM,CAAC0vB,qBAAqB,CAAE,IAAI,CAACvB,WAAW,CAAE;MAExD;IAAC;MAAA72B,GAAA;MAAAE,KAAA,EAED,SAAAurC,mBAAoB/iC,MAAM,EAAG;QAE5B,IAAI,CAAC0xB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAErC,IAAI,CAACvD,WAAW,CAACqO,SAAS,CAAEwC,WAAW,EAAEh/B,MAAM,EAAEi/B,QAAQ,CAAE;QAE3D,OAAOj/B,MAAM;MAEd;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAAwrC,cAAehjC,MAAM,EAAG;QAEvB,IAAI,CAAC0xB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAErC,IAAI,CAACvD,WAAW,CAACqO,SAAS,CAAEwC,WAAW,EAAEE,aAAa,EAAEl/B,MAAM,CAAE;QAEhE,OAAOA,MAAM;MAEd;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAAyrC,kBAAmBjjC,MAAM,EAAG;QAE3B,IAAI,CAAC0xB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAErC,IAAM3c,CAAC,GAAG,IAAI,CAACoZ,WAAW,CAACnZ,QAAQ;QAEnC,OAAOhV,MAAM,CAAC4S,GAAG,CAAEmC,CAAC,CAAE,CAAC,CAAE,EAAEA,CAAC,CAAE,CAAC,CAAE,EAAEA,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC5B,SAAS,EAAE;MAEzD;IAAC;MAAA7b,GAAA;MAAAE,KAAA,EAED,SAAA0rC,QAAA,CAAS,6BAA8B,CAAC;IAAC;MAAA5rC,GAAA;MAAAE,KAAA,EAEzC,SAAA2rC,SAAU7X,QAAQ,EAAG;QAEpBA,QAAQ,CAAE,IAAI,CAAE;QAEhB,IAAM4G,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,KAAM,IAAI70B,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGkkB,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEnD60B,QAAQ,CAAE70B,CAAC,CAAE,CAAC8lC,QAAQ,CAAE7X,QAAQ,CAAE;QAEnC;MAED;IAAC;MAAAh0B,GAAA;MAAAE,KAAA,EAED,SAAA4rC,gBAAiB9X,QAAQ,EAAG;QAE3B,IAAK,IAAI,CAACkV,OAAO,KAAK,KAAK,EAAG;QAE9BlV,QAAQ,CAAE,IAAI,CAAE;QAEhB,IAAM4G,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,KAAM,IAAI70B,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGkkB,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEnD60B,QAAQ,CAAE70B,CAAC,CAAE,CAAC+lC,eAAe,CAAE9X,QAAQ,CAAE;QAE1C;MAED;IAAC;MAAAh0B,GAAA;MAAAE,KAAA,EAED,SAAA6rC,kBAAmB/X,QAAQ,EAAG;QAE7B,IAAMuU,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAKA,MAAM,KAAK,IAAI,EAAG;UAEtBvU,QAAQ,CAAEuU,MAAM,CAAE;UAElBA,MAAM,CAACwD,iBAAiB,CAAE/X,QAAQ,CAAE;QAErC;MAED;IAAC;MAAAh0B,GAAA;MAAAE,KAAA,EAED,SAAAmrB,aAAA,EAAe;QAEd,IAAI,CAACzG,MAAM,CAACge,OAAO,CAAE,IAAI,CAACjI,QAAQ,EAAE,IAAI,CAACzJ,UAAU,EAAE,IAAI,CAAC7M,KAAK,CAAE;QAEjE,IAAI,CAAC0kB,sBAAsB,GAAG,IAAI;MAEnC;IAAC;MAAA/oC,GAAA;MAAAE,KAAA,EAED,SAAA8rC,kBAAmBC,KAAK,EAAG;QAE1B,IAAK,IAAI,CAACrhB,gBAAgB,EAAG,IAAI,CAACS,YAAY,EAAE;QAEhD,IAAK,IAAI,CAAC0d,sBAAsB,IAAIkD,KAAK,EAAG;UAE3C,IAAK,IAAI,CAAC1D,MAAM,KAAK,IAAI,EAAG;YAE3B,IAAI,CAAC1R,WAAW,CAACla,IAAI,CAAE,IAAI,CAACiI,MAAM,CAAE;UAErC,CAAC,MAAM;YAEN,IAAI,CAACiS,WAAW,CAACvV,gBAAgB,CAAE,IAAI,CAACinB,MAAM,CAAC1R,WAAW,EAAE,IAAI,CAACjS,MAAM,CAAE;UAE1E;UAEA,IAAI,CAACmkB,sBAAsB,GAAG,KAAK;UAEnCkD,KAAK,GAAG,IAAI;QAEb;;QAEA;;QAEA,IAAMrR,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,KAAM,IAAI70B,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGkkB,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEnD,IAAMslC,KAAK,GAAGzQ,QAAQ,CAAE70B,CAAC,CAAE;UAE3B,IAAKslC,KAAK,CAACrC,qBAAqB,KAAK,IAAI,IAAIiD,KAAK,KAAK,IAAI,EAAG;YAE7DZ,KAAK,CAACW,iBAAiB,CAAEC,KAAK,CAAE;UAEjC;QAED;MAED;IAAC;MAAAjsC,GAAA;MAAAE,KAAA,EAED,SAAAk6B,kBAAmB8R,aAAa,EAAEC,cAAc,EAAG;QAElD,IAAM5D,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAK2D,aAAa,KAAK,IAAI,IAAI3D,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACS,qBAAqB,KAAK,IAAI,EAAG;UAEzFT,MAAM,CAACnO,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAExC;QAEA,IAAK,IAAI,CAACxP,gBAAgB,EAAG,IAAI,CAACS,YAAY,EAAE;QAEhD,IAAK,IAAI,CAACkd,MAAM,KAAK,IAAI,EAAG;UAE3B,IAAI,CAAC1R,WAAW,CAACla,IAAI,CAAE,IAAI,CAACiI,MAAM,CAAE;QAErC,CAAC,MAAM;UAEN,IAAI,CAACiS,WAAW,CAACvV,gBAAgB,CAAE,IAAI,CAACinB,MAAM,CAAC1R,WAAW,EAAE,IAAI,CAACjS,MAAM,CAAE;QAE1E;;QAEA;;QAEA,IAAKunB,cAAc,KAAK,IAAI,EAAG;UAE9B,IAAMvR,QAAQ,GAAG,IAAI,CAACA,QAAQ;UAE9B,KAAM,IAAI70B,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGkkB,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAEnD,IAAMslC,KAAK,GAAGzQ,QAAQ,CAAE70B,CAAC,CAAE;YAE3B,IAAKslC,KAAK,CAACrC,qBAAqB,KAAK,IAAI,EAAG;cAE3CqC,KAAK,CAACjR,iBAAiB,CAAE,KAAK,EAAE,IAAI,CAAE;YAEvC;UAED;QAED;MAED;IAAC;MAAAp6B,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd;QACA,IAAMC,YAAY,GAAKD,IAAI,KAAKjkB,SAAS,IAAI,OAAOikB,IAAI,KAAK,QAAU;QAEvE,IAAMG,MAAM,GAAG,CAAC,CAAC;;QAEjB;QACA;QACA;QACA,IAAKF,YAAY,EAAG;UAEnB;UACAD,IAAI,GAAG;YACN2jB,UAAU,EAAE,CAAC,CAAC;YACdC,SAAS,EAAE,CAAC,CAAC;YACb3gB,QAAQ,EAAE,CAAC,CAAC;YACZ/C,MAAM,EAAE,CAAC,CAAC;YACV2jB,MAAM,EAAE,CAAC,CAAC;YACVC,SAAS,EAAE,CAAC,CAAC;YACbhD,UAAU,EAAE,CAAC,CAAC;YACdiD,KAAK,EAAE,CAAC;UACT,CAAC;UAED5jB,MAAM,CAAC+C,QAAQ,GAAG;YACjBpD,OAAO,EAAE,GAAG;YACZxmB,IAAI,EAAE,QAAQ;YACdR,SAAS,EAAE;UACZ,CAAC;QAEF;;QAEA;;QAEA,IAAMwF,MAAM,GAAG,CAAC,CAAC;QAEjBA,MAAM,CAACwQ,IAAI,GAAG,IAAI,CAACA,IAAI;QACvBxQ,MAAM,CAAChF,IAAI,GAAG,IAAI,CAACA,IAAI;QAEvB,IAAK,IAAI,CAACsE,IAAI,KAAK,EAAE,EAAGU,MAAM,CAACV,IAAI,GAAG,IAAI,CAACA,IAAI;QAC/C,IAAK,IAAI,CAAC8iC,UAAU,KAAK,IAAI,EAAGpiC,MAAM,CAACoiC,UAAU,GAAG,IAAI;QACxD,IAAK,IAAI,CAACC,aAAa,KAAK,IAAI,EAAGriC,MAAM,CAACqiC,aAAa,GAAG,IAAI;QAC9D,IAAK,IAAI,CAACF,OAAO,KAAK,KAAK,EAAGniC,MAAM,CAACmiC,OAAO,GAAG,KAAK;QACpD,IAAK,IAAI,CAACG,aAAa,KAAK,KAAK,EAAGtiC,MAAM,CAACsiC,aAAa,GAAG,KAAK;QAChE,IAAK,IAAI,CAACC,WAAW,KAAK,CAAC,EAAGviC,MAAM,CAACuiC,WAAW,GAAG,IAAI,CAACA,WAAW;QACnE,IAAK5pC,MAAM,CAACmH,IAAI,CAAE,IAAI,CAACokB,QAAQ,CAAE,CAACnlB,MAAM,GAAG,CAAC,EAAGiB,MAAM,CAACkkB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9ElkB,MAAM,CAACogC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACN,IAAI;QAChC9/B,MAAM,CAAC6d,MAAM,GAAG,IAAI,CAACA,MAAM,CAACnF,OAAO,EAAE;QACrC1Y,MAAM,CAACi8B,EAAE,GAAG,IAAI,CAACA,EAAE,CAACvjB,OAAO,EAAE;QAE7B,IAAK,IAAI,CAACmL,gBAAgB,KAAK,KAAK,EAAG7jB,MAAM,CAAC6jB,gBAAgB,GAAG,KAAK;;QAEtE;;QAEA,IAAK,IAAI,CAAC6hB,eAAe,EAAG;UAE3B1lC,MAAM,CAAChF,IAAI,GAAG,eAAe;UAC7BgF,MAAM,CAACupB,KAAK,GAAG,IAAI,CAACA,KAAK;UACzBvpB,MAAM,CAAC2lC,cAAc,GAAG,IAAI,CAACA,cAAc,CAAClkB,MAAM,EAAE;UACpD,IAAK,IAAI,CAACmkB,aAAa,KAAK,IAAI,EAAG5lC,MAAM,CAAC4lC,aAAa,GAAG,IAAI,CAACA,aAAa,CAACnkB,MAAM,EAAE;QAEtF;;QAEA;;QAEA,SAASokB,SAASA,CAAEC,OAAO,EAAEC,OAAO,EAAG;UAEtC,IAAKD,OAAO,CAAEC,OAAO,CAACv1B,IAAI,CAAE,KAAK/S,SAAS,EAAG;YAE5CqoC,OAAO,CAAEC,OAAO,CAACv1B,IAAI,CAAE,GAAGu1B,OAAO,CAACtkB,MAAM,CAAEC,IAAI,CAAE;UAEjD;UAEA,OAAOqkB,OAAO,CAACv1B,IAAI;QAEpB;QAEA,IAAK,IAAI,CAACw1B,OAAO,EAAG;UAEnB,IAAK,IAAI,CAACC,UAAU,EAAG;YAEtB,IAAK,IAAI,CAACA,UAAU,CAACC,OAAO,EAAG;cAE9BlmC,MAAM,CAACimC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACxkB,MAAM,EAAE;YAE7C,CAAC,MAAM,IAAK,IAAI,CAACwkB,UAAU,CAAC3iB,SAAS,EAAG;cAEvCtjB,MAAM,CAACimC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACxkB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;YAExD;UAED;UAEA,IAAK,IAAI,CAAC21B,WAAW,IAAI,IAAI,CAACA,WAAW,CAAC7iB,SAAS,IAAI,IAAI,CAAC6iB,WAAW,CAAC/hB,qBAAqB,KAAK,IAAI,EAAG;YAExGpkB,MAAM,CAACmmC,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC1kB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;UAE1D;QAED,CAAC,MAAM,IAAK,IAAI,CAAC41B,MAAM,IAAI,IAAI,CAACC,MAAM,IAAI,IAAI,CAACC,QAAQ,EAAG;UAEzDtmC,MAAM,CAAC0zB,QAAQ,GAAGmS,SAAS,CAAEnkB,IAAI,CAAC2jB,UAAU,EAAE,IAAI,CAAC3R,QAAQ,CAAE;UAE7D,IAAM6S,UAAU,GAAG,IAAI,CAAC7S,QAAQ,CAAC6S,UAAU;UAE3C,IAAKA,UAAU,KAAK9oC,SAAS,IAAI8oC,UAAU,CAAChB,MAAM,KAAK9nC,SAAS,EAAG;YAElE,IAAM8nC,MAAM,GAAGgB,UAAU,CAAChB,MAAM;YAEhC,IAAKxjB,KAAK,CAACC,OAAO,CAAEujB,MAAM,CAAE,EAAG;cAE9B,KAAM,IAAIvmC,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG41B,MAAM,CAACxmC,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;gBAEjD,IAAMwnC,KAAK,GAAGjB,MAAM,CAAEvmC,CAAC,CAAE;gBAEzB6mC,SAAS,CAAEnkB,IAAI,CAAC6jB,MAAM,EAAEiB,KAAK,CAAE;cAEhC;YAED,CAAC,MAAM;cAENX,SAAS,CAAEnkB,IAAI,CAAC6jB,MAAM,EAAEA,MAAM,CAAE;YAEjC;UAED;QAED;QAEA,IAAK,IAAI,CAACkB,aAAa,EAAG;UAEzBzmC,MAAM,CAAC0mC,QAAQ,GAAG,IAAI,CAACA,QAAQ;UAC/B1mC,MAAM,CAAC2mC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACjuB,OAAO,EAAE;UAE7C,IAAK,IAAI,CAACkuB,QAAQ,KAAKnpC,SAAS,EAAG;YAElCooC,SAAS,CAAEnkB,IAAI,CAAC8jB,SAAS,EAAE,IAAI,CAACoB,QAAQ,CAAE;YAE1C5mC,MAAM,CAAC4mC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACp2B,IAAI;UAErC;QAED;QAEA,IAAK,IAAI,CAACq2B,QAAQ,KAAKppC,SAAS,EAAG;UAElC,IAAKskB,KAAK,CAACC,OAAO,CAAE,IAAI,CAAC6kB,QAAQ,CAAE,EAAG;YAErC,IAAMC,KAAK,GAAG,EAAE;YAEhB,KAAM,IAAI9nC,GAAC,GAAG,CAAC,EAAE2Q,GAAC,GAAG,IAAI,CAACk3B,QAAQ,CAAC9nC,MAAM,EAAEC,GAAC,GAAG2Q,GAAC,EAAE3Q,GAAC,EAAG,EAAG;cAExD8nC,KAAK,CAACtoC,IAAI,CAAEqnC,SAAS,CAAEnkB,IAAI,CAAC4jB,SAAS,EAAE,IAAI,CAACuB,QAAQ,CAAE7nC,GAAC,CAAE,CAAE,CAAE;YAE9D;YAEAgB,MAAM,CAAC6mC,QAAQ,GAAGC,KAAK;UAExB,CAAC,MAAM;YAEN9mC,MAAM,CAAC6mC,QAAQ,GAAGhB,SAAS,CAAEnkB,IAAI,CAAC4jB,SAAS,EAAE,IAAI,CAACuB,QAAQ,CAAE;UAE7D;QAED;;QAEA;;QAEA,IAAK,IAAI,CAAChT,QAAQ,CAAC90B,MAAM,GAAG,CAAC,EAAG;UAE/BiB,MAAM,CAAC6zB,QAAQ,GAAG,EAAE;UAEpB,KAAM,IAAI70B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAAC60B,QAAQ,CAAC90B,MAAM,EAAEC,GAAC,EAAG,EAAG;YAEjDgB,MAAM,CAAC6zB,QAAQ,CAACr1B,IAAI,CAAE,IAAI,CAACq1B,QAAQ,CAAE70B,GAAC,CAAE,CAACyiB,MAAM,CAAEC,IAAI,CAAE,CAAC1hB,MAAM,CAAE;UAEjE;QAED;;QAEA;;QAEA,IAAK,IAAI,CAACwiC,UAAU,CAACzjC,MAAM,GAAG,CAAC,EAAG;UAEjCiB,MAAM,CAACwiC,UAAU,GAAG,EAAE;UAEtB,KAAM,IAAIxjC,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAACwjC,UAAU,CAACzjC,MAAM,EAAEC,GAAC,EAAG,EAAG;YAEnD,IAAM+nC,SAAS,GAAG,IAAI,CAACvE,UAAU,CAAExjC,GAAC,CAAE;YAEtCgB,MAAM,CAACwiC,UAAU,CAAChkC,IAAI,CAAEqnC,SAAS,CAAEnkB,IAAI,CAAC8gB,UAAU,EAAEuE,SAAS,CAAE,CAAE;UAElE;QAED;QAEA,IAAKplB,YAAY,EAAG;UAEnB,IAAM0jB,UAAU,GAAG2B,gBAAgB,CAAEtlB,IAAI,CAAC2jB,UAAU,CAAE;UACtD,IAAMC,SAAS,GAAG0B,gBAAgB,CAAEtlB,IAAI,CAAC4jB,SAAS,CAAE;UACpD,IAAM3gB,QAAQ,GAAGqiB,gBAAgB,CAAEtlB,IAAI,CAACiD,QAAQ,CAAE;UAClD,IAAM/C,MAAM,GAAGolB,gBAAgB,CAAEtlB,IAAI,CAACE,MAAM,CAAE;UAC9C,IAAM2jB,OAAM,GAAGyB,gBAAgB,CAAEtlB,IAAI,CAAC6jB,MAAM,CAAE;UAC9C,IAAMC,SAAS,GAAGwB,gBAAgB,CAAEtlB,IAAI,CAAC8jB,SAAS,CAAE;UACpD,IAAMhD,UAAU,GAAGwE,gBAAgB,CAAEtlB,IAAI,CAAC8gB,UAAU,CAAE;UACtD,IAAMiD,KAAK,GAAGuB,gBAAgB,CAAEtlB,IAAI,CAAC+jB,KAAK,CAAE;UAE5C,IAAKJ,UAAU,CAACtmC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACwjB,UAAU,GAAGA,UAAU;UAC3D,IAAKC,SAAS,CAACvmC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACyjB,SAAS,GAAGA,SAAS;UACxD,IAAK3gB,QAAQ,CAAC5lB,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAAC8C,QAAQ,GAAGA,QAAQ;UACrD,IAAK/C,MAAM,CAAC7iB,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAACD,MAAM,GAAGA,MAAM;UAC/C,IAAK2jB,OAAM,CAACxmC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAAC0jB,MAAM,GAAGA,OAAM;UAC/C,IAAKC,SAAS,CAACzmC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAAC2jB,SAAS,GAAGA,SAAS;UACxD,IAAKhD,UAAU,CAACzjC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAAC2gB,UAAU,GAAGA,UAAU;UAC3D,IAAKiD,KAAK,CAAC1mC,MAAM,GAAG,CAAC,EAAG8iB,MAAM,CAAC4jB,KAAK,GAAGA,KAAK;QAE7C;QAEA5jB,MAAM,CAAC7hB,MAAM,GAAGA,MAAM;QAEtB,OAAO6hB,MAAM;;QAEb;QACA;QACA;QACA,SAASmlB,gBAAgBA,CAAEC,KAAK,EAAG;UAElC,IAAMxrC,MAAM,GAAG,EAAE;UACjB,KAAM,IAAMxC,GAAG,IAAIguC,KAAK,EAAG;YAE1B,IAAM5lB,IAAI,GAAG4lB,KAAK,CAAEhuC,GAAG,CAAE;YACzB,OAAOooB,IAAI,CAACuD,QAAQ;YACpBnpB,MAAM,CAAC+C,IAAI,CAAE6iB,IAAI,CAAE;UAEpB;UAEA,OAAO5lB,MAAM;QAEd;MAED;IAAC;MAAAxC,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAOuxB,SAAS,EAAG;QAElB,OAAO,IAAI,IAAI,CAAC7nC,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,EAAEsxB,SAAS,CAAE;MAEtD;IAAC;MAAAjuC,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,GAAG,IAAI,EAAG;QAEhC,IAAI,CAAC5nC,IAAI,GAAGkkB,MAAM,CAAClkB,IAAI;QAEvB,IAAI,CAAC28B,EAAE,CAACrmB,IAAI,CAAE4N,MAAM,CAACyY,EAAE,CAAE;QAEzB,IAAI,CAACrI,QAAQ,CAAChe,IAAI,CAAE4N,MAAM,CAACoQ,QAAQ,CAAE;QACrC,IAAI,CAACzW,QAAQ,CAACvJ,KAAK,GAAG4P,MAAM,CAACrG,QAAQ,CAACvJ,KAAK;QAC3C,IAAI,CAACuW,UAAU,CAACvU,IAAI,CAAE4N,MAAM,CAAC2G,UAAU,CAAE;QACzC,IAAI,CAAC7M,KAAK,CAAC1H,IAAI,CAAE4N,MAAM,CAAClG,KAAK,CAAE;QAE/B,IAAI,CAACO,MAAM,CAACjI,IAAI,CAAE4N,MAAM,CAAC3F,MAAM,CAAE;QACjC,IAAI,CAACiS,WAAW,CAACla,IAAI,CAAE4N,MAAM,CAACsM,WAAW,CAAE;QAE3C,IAAI,CAACjM,gBAAgB,GAAGL,MAAM,CAACK,gBAAgB;QAC/C,IAAI,CAACme,sBAAsB,GAAGxe,MAAM,CAACwe,sBAAsB;QAE3D,IAAI,CAACC,qBAAqB,GAAGze,MAAM,CAACye,qBAAqB;QAEzD,IAAI,CAAC7B,MAAM,CAACN,IAAI,GAAGtc,MAAM,CAAC4c,MAAM,CAACN,IAAI;QACrC,IAAI,CAACqC,OAAO,GAAG3e,MAAM,CAAC2e,OAAO;QAE7B,IAAI,CAACC,UAAU,GAAG5e,MAAM,CAAC4e,UAAU;QACnC,IAAI,CAACC,aAAa,GAAG7e,MAAM,CAAC6e,aAAa;QAEzC,IAAI,CAACC,aAAa,GAAG9e,MAAM,CAAC8e,aAAa;QACzC,IAAI,CAACC,WAAW,GAAG/e,MAAM,CAAC+e,WAAW;QAErC,IAAI,CAACre,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEjB,MAAM,CAACU,QAAQ,CAAE,CAAE;QAE/D,IAAKgjB,SAAS,KAAK,IAAI,EAAG;UAEzB,KAAM,IAAIloC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwkB,MAAM,CAACqQ,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,EAAG,EAAG;YAEnD,IAAMslC,KAAK,GAAG9gB,MAAM,CAACqQ,QAAQ,CAAE70B,CAAC,CAAE;YAClC,IAAI,CAAC8W,GAAG,CAAEwuB,KAAK,CAAC3uB,KAAK,EAAE,CAAE;UAE1B;QAED;QAEA,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAwrB,QAAA;EAAA,EAv6BqBtyB,eAAe;EA26BtCsyB,QAAQ,CAACM,UAAU,GAAG,aAAc,IAAIlT,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;EAC1D4S,QAAQ,CAACY,0BAA0B,GAAG,IAAI;EAC1CZ,QAAQ,CAACe,gCAAgC,GAAG,IAAI;EAEhD,IAAMiF,KAAK,GAAG,aAAc,IAAI5Y,OAAO,EAAE;EACzC,IAAM6Y,KAAK,GAAG,aAAc,IAAI7Y,OAAO,EAAE;EACzC,IAAM8Y,KAAK,GAAG,aAAc,IAAI9Y,OAAO,EAAE;EACzC,IAAM+Y,KAAK,GAAG,aAAc,IAAI/Y,OAAO,EAAE;EAEzC,IAAMgZ,IAAI,GAAG,aAAc,IAAIhZ,OAAO,EAAE;EACxC,IAAMiZ,IAAI,GAAG,aAAc,IAAIjZ,OAAO,EAAE;EACxC,IAAMkZ,IAAI,GAAG,aAAc,IAAIlZ,OAAO,EAAE;EACxC,IAAMmZ,IAAI,GAAG,aAAc,IAAInZ,OAAO,EAAE;EACxC,IAAMoZ,IAAI,GAAG,aAAc,IAAIpZ,OAAO,EAAE;EACxC,IAAMqZ,IAAI,GAAG,aAAc,IAAIrZ,OAAO,EAAE;EAExC,IAAIsZ,WAAW,GAAG,KAAK;EAAC,IAElBC,QAAQ;IAEb,SAAAA,SAAar0B,CAAC,GAAG,IAAI8a,OAAO,EAAE,EAAE7a,CAAC,GAAG,IAAI6a,OAAO,EAAE,EAAE5a,CAAC,GAAG,IAAI4a,OAAO,EAAE,EAAG;MAAAhtB,eAAA,OAAAumC,QAAA;MAEtE,IAAI,CAACr0B,CAAC,GAAGA,CAAC;MACV,IAAI,CAACC,CAAC,GAAGA,CAAC;MACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IAEX;IAAC5R,YAAA,CAAA+lC,QAAA;MAAA7uC,GAAA;MAAAE,KAAA,EAkGD,SAAAob,IAAKd,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;QAEd,IAAI,CAACF,CAAC,CAACmC,IAAI,CAAEnC,CAAC,CAAE;QAChB,IAAI,CAACC,CAAC,CAACkC,IAAI,CAAElC,CAAC,CAAE;QAChB,IAAI,CAACC,CAAC,CAACiC,IAAI,CAAEjC,CAAC,CAAE;QAEhB,OAAO,IAAI;MAEZ;IAAC;MAAA1a,GAAA;MAAAE,KAAA,EAED,SAAA4uC,wBAAyBzV,MAAM,EAAE0V,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;QAE7C,IAAI,CAACz0B,CAAC,CAACmC,IAAI,CAAE0c,MAAM,CAAE0V,EAAE,CAAE,CAAE;QAC3B,IAAI,CAACt0B,CAAC,CAACkC,IAAI,CAAE0c,MAAM,CAAE2V,EAAE,CAAE,CAAE;QAC3B,IAAI,CAACt0B,CAAC,CAACiC,IAAI,CAAE0c,MAAM,CAAE4V,EAAE,CAAE,CAAE;QAE3B,OAAO,IAAI;MAEZ;IAAC;MAAAjvC,GAAA;MAAAE,KAAA,EAED,SAAAgvC,2BAA4BvvB,SAAS,EAAEovB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;QAEnD,IAAI,CAACz0B,CAAC,CAACkF,mBAAmB,CAAEC,SAAS,EAAEovB,EAAE,CAAE;QAC3C,IAAI,CAACt0B,CAAC,CAACiF,mBAAmB,CAAEC,SAAS,EAAEqvB,EAAE,CAAE;QAC3C,IAAI,CAACt0B,CAAC,CAACgF,mBAAmB,CAAEC,SAAS,EAAEsvB,EAAE,CAAE;QAE3C,OAAO,IAAI;MAEZ;IAAC;MAAAjvC,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM6e,QAAQ,EAAG;QAEhB,IAAI,CAAChhB,CAAC,CAACmC,IAAI,CAAE6e,QAAQ,CAAChhB,CAAC,CAAE;QACzB,IAAI,CAACC,CAAC,CAACkC,IAAI,CAAE6e,QAAQ,CAAC/gB,CAAC,CAAE;QACzB,IAAI,CAACC,CAAC,CAACiC,IAAI,CAAE6e,QAAQ,CAAC9gB,CAAC,CAAE;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAA1a,GAAA;MAAAE,KAAA,EAED,SAAAivC,QAAA,EAAU;QAETjB,KAAK,CAAC/wB,UAAU,CAAE,IAAI,CAACzC,CAAC,EAAE,IAAI,CAACD,CAAC,CAAE;QAClC0zB,KAAK,CAAChxB,UAAU,CAAE,IAAI,CAAC3C,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE;QAElC,OAAOyzB,KAAK,CAAChwB,KAAK,CAAEiwB,KAAK,CAAE,CAACroC,MAAM,EAAE,GAAG,GAAG;MAE3C;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAAkvC,YAAa1mC,MAAM,EAAG;QAErB,OAAOA,MAAM,CAACqU,UAAU,CAAE,IAAI,CAACvC,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE,CAACoC,GAAG,CAAE,IAAI,CAACnC,CAAC,CAAE,CAAC2C,cAAc,CAAE,CAAC,GAAG,CAAC,CAAE;MAEjF;IAAC;MAAArd,GAAA;MAAAE,KAAA,EAED,SAAAmvC,UAAW3mC,MAAM,EAAG;QAEnB,OAAOmmC,QAAQ,CAACQ,SAAS,CAAE,IAAI,CAAC70B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEhS,MAAM,CAAE;MAE5D;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAAovC,SAAU5mC,MAAM,EAAG;QAElB,OAAOA,MAAM,CAAC6mC,qBAAqB,CAAE,IAAI,CAAC/0B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE;MAE9D;IAAC;MAAA1a,GAAA;MAAAE,KAAA,EAED,SAAAsvC,aAAcxV,KAAK,EAAEtxB,MAAM,EAAG;QAE7B,OAAOmmC,QAAQ,CAACW,YAAY,CAAExV,KAAK,EAAE,IAAI,CAACxf,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEhS,MAAM,CAAE;MAEtE;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAAuvC,MAAOzV,KAAK,EAAE0V,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAElnC,MAAM,EAAG;QAAE;;QAEvC,IAAKkmC,WAAW,KAAK,KAAK,EAAG;UAE5BnlC,OAAO,CAACC,IAAI,CAAE,+EAA+E,CAAE;UAE/FklC,WAAW,GAAG,IAAI;QAEnB;QAEA,OAAOC,QAAQ,CAACgB,gBAAgB,CAAE7V,KAAK,EAAE,IAAI,CAACxf,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEg1B,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAElnC,MAAM,CAAE;MAEzF;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAA2vC,iBAAkB7V,KAAK,EAAE5a,EAAE,EAAEC,EAAE,EAAEywB,EAAE,EAAEpnC,MAAM,EAAG;QAE7C,OAAOmmC,QAAQ,CAACgB,gBAAgB,CAAE7V,KAAK,EAAE,IAAI,CAACxf,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE0E,EAAE,EAAEC,EAAE,EAAEywB,EAAE,EAAEpnC,MAAM,CAAE;MAEtF;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAA26B,cAAeb,KAAK,EAAG;QAEtB,OAAO6U,QAAQ,CAAChU,aAAa,CAAEb,KAAK,EAAE,IAAI,CAACxf,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE;MAE/D;IAAC;MAAA1a,GAAA;MAAAE,KAAA,EAED,SAAA6vC,cAAe5R,SAAS,EAAG;QAE1B,OAAO0Q,QAAQ,CAACkB,aAAa,CAAE,IAAI,CAACv1B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEyjB,SAAS,CAAE;MAEnE;IAAC;MAAAn+B,GAAA;MAAAE,KAAA,EAED,SAAA86B,cAAepB,GAAG,EAAG;QAEpB,OAAOA,GAAG,CAAC2B,kBAAkB,CAAE,IAAI,CAAE;MAEtC;IAAC;MAAAv7B,GAAA;MAAAE,KAAA,EAED,SAAAs+B,oBAAqBuH,CAAC,EAAEr9B,MAAM,EAAG;QAEhC,IAAM8R,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;QACxC,IAAIkC,CAAC,EAAEsP,CAAC;;QAER;QACA;QACA;QACA;QACA;;QAEAoiB,IAAI,CAACnxB,UAAU,CAAE1C,CAAC,EAAED,CAAC,CAAE;QACvB+zB,IAAI,CAACpxB,UAAU,CAAEzC,CAAC,EAAEF,CAAC,CAAE;QACvBi0B,IAAI,CAACtxB,UAAU,CAAE4oB,CAAC,EAAEvrB,CAAC,CAAE;QACvB,IAAMpD,EAAE,GAAGk3B,IAAI,CAACrwB,GAAG,CAAEwwB,IAAI,CAAE;QAC3B,IAAMp3B,EAAE,GAAGk3B,IAAI,CAACtwB,GAAG,CAAEwwB,IAAI,CAAE;QAC3B,IAAKr3B,EAAE,IAAI,CAAC,IAAIC,EAAE,IAAI,CAAC,EAAG;UAEzB;UACA,OAAO3O,MAAM,CAACiU,IAAI,CAAEnC,CAAC,CAAE;QAExB;QAEAk0B,IAAI,CAACvxB,UAAU,CAAE4oB,CAAC,EAAEtrB,CAAC,CAAE;QACvB,IAAMnD,EAAE,GAAGg3B,IAAI,CAACrwB,GAAG,CAAEywB,IAAI,CAAE;QAC3B,IAAMsB,EAAE,GAAGzB,IAAI,CAACtwB,GAAG,CAAEywB,IAAI,CAAE;QAC3B,IAAKp3B,EAAE,IAAI,CAAC,IAAI04B,EAAE,IAAI14B,EAAE,EAAG;UAE1B;UACA,OAAO5O,MAAM,CAACiU,IAAI,CAAElC,CAAC,CAAE;QAExB;QAEA,IAAMw1B,EAAE,GAAG74B,EAAE,GAAG44B,EAAE,GAAG14B,EAAE,GAAGD,EAAE;QAC5B,IAAK44B,EAAE,IAAI,CAAC,IAAI74B,EAAE,IAAI,CAAC,IAAIE,EAAE,IAAI,CAAC,EAAG;UAEpCsF,CAAC,GAAGxF,EAAE,IAAKA,EAAE,GAAGE,EAAE,CAAE;UACpB;UACA,OAAO5O,MAAM,CAACiU,IAAI,CAAEnC,CAAC,CAAE,CAACwC,eAAe,CAAEsxB,IAAI,EAAE1xB,CAAC,CAAE;QAEnD;QAEA+xB,IAAI,CAACxxB,UAAU,CAAE4oB,CAAC,EAAErrB,CAAC,CAAE;QACvB,IAAMw1B,EAAE,GAAG5B,IAAI,CAACrwB,GAAG,CAAE0wB,IAAI,CAAE;QAC3B,IAAMwB,EAAE,GAAG5B,IAAI,CAACtwB,GAAG,CAAE0wB,IAAI,CAAE;QAC3B,IAAKwB,EAAE,IAAI,CAAC,IAAID,EAAE,IAAIC,EAAE,EAAG;UAE1B;UACA,OAAOznC,MAAM,CAACiU,IAAI,CAAEjC,CAAC,CAAE;QAExB;QAEA,IAAM01B,EAAE,GAAGF,EAAE,GAAG74B,EAAE,GAAGD,EAAE,GAAG+4B,EAAE;QAC5B,IAAKC,EAAE,IAAI,CAAC,IAAI/4B,EAAE,IAAI,CAAC,IAAI84B,EAAE,IAAI,CAAC,EAAG;UAEpCjkB,CAAC,GAAG7U,EAAE,IAAKA,EAAE,GAAG84B,EAAE,CAAE;UACpB;UACA,OAAOznC,MAAM,CAACiU,IAAI,CAAEnC,CAAC,CAAE,CAACwC,eAAe,CAAEuxB,IAAI,EAAEriB,CAAC,CAAE;QAEnD;QAEA,IAAMmkB,EAAE,GAAG/4B,EAAE,GAAG64B,EAAE,GAAGD,EAAE,GAAGF,EAAE;QAC5B,IAAKK,EAAE,IAAI,CAAC,IAAML,EAAE,GAAG14B,EAAE,IAAM,CAAC,IAAM44B,EAAE,GAAGC,EAAE,IAAM,CAAC,EAAG;UAEtD3B,IAAI,CAACrxB,UAAU,CAAEzC,CAAC,EAAED,CAAC,CAAE;UACvByR,CAAC,GAAG,CAAE8jB,EAAE,GAAG14B,EAAE,KAAS04B,EAAE,GAAG14B,EAAE,IAAO44B,EAAE,GAAGC,EAAE,CAAE,CAAE;UAC/C;UACA,OAAOznC,MAAM,CAACiU,IAAI,CAAElC,CAAC,CAAE,CAACuC,eAAe,CAAEwxB,IAAI,EAAEtiB,CAAC,CAAE,CAAC,CAAC;QAErD;;QAEA;QACA,IAAMokB,KAAK,GAAG,CAAC,IAAKD,EAAE,GAAGD,EAAE,GAAGH,EAAE,CAAE;QAClC;QACArzB,CAAC,GAAGwzB,EAAE,GAAGE,KAAK;QACdpkB,CAAC,GAAG+jB,EAAE,GAAGK,KAAK;QAEd,OAAO5nC,MAAM,CAACiU,IAAI,CAAEnC,CAAC,CAAE,CAACwC,eAAe,CAAEsxB,IAAI,EAAE1xB,CAAC,CAAE,CAACI,eAAe,CAAEuxB,IAAI,EAAEriB,CAAC,CAAE;MAE9E;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQkc,QAAQ,EAAG;QAElB,OAAOA,QAAQ,CAAChhB,CAAC,CAAC8E,MAAM,CAAE,IAAI,CAAC9E,CAAC,CAAE,IAAIghB,QAAQ,CAAC/gB,CAAC,CAAC6E,MAAM,CAAE,IAAI,CAAC7E,CAAC,CAAE,IAAI+gB,QAAQ,CAAC9gB,CAAC,CAAC4E,MAAM,CAAE,IAAI,CAAC5E,CAAC,CAAE;MAEjG;IAAC;MAAA1a,GAAA;MAAAE,KAAA,EA1SD,SAAAmvC,UAAkB70B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEhS,MAAM,EAAG;QAEnCA,MAAM,CAACyU,UAAU,CAAEzC,CAAC,EAAED,CAAC,CAAE;QACzByzB,KAAK,CAAC/wB,UAAU,CAAE3C,CAAC,EAAEC,CAAC,CAAE;QACxB/R,MAAM,CAACwV,KAAK,CAAEgwB,KAAK,CAAE;QAErB,IAAMqC,cAAc,GAAG7nC,MAAM,CAACyV,QAAQ,EAAE;QACxC,IAAKoyB,cAAc,GAAG,CAAC,EAAG;UAEzB,OAAO7nC,MAAM,CAAC2U,cAAc,CAAE,CAAC,GAAGvG,IAAI,CAACsH,IAAI,CAAEmyB,cAAc,CAAE,CAAE;QAEhE;QAEA,OAAO7nC,MAAM,CAAC4S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAE7B;;MAEA;MACA;IAAA;MAAAtb,GAAA;MAAAE,KAAA,EACA,SAAAsvC,aAAqBxV,KAAK,EAAExf,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEhS,MAAM,EAAG;QAE7CwlC,KAAK,CAAC/wB,UAAU,CAAEzC,CAAC,EAAEF,CAAC,CAAE;QACxB2zB,KAAK,CAAChxB,UAAU,CAAE1C,CAAC,EAAED,CAAC,CAAE;QACxB4zB,KAAK,CAACjxB,UAAU,CAAE6c,KAAK,EAAExf,CAAC,CAAE;QAE5B,IAAMg2B,KAAK,GAAGtC,KAAK,CAACjwB,GAAG,CAAEiwB,KAAK,CAAE;QAChC,IAAMuC,KAAK,GAAGvC,KAAK,CAACjwB,GAAG,CAAEkwB,KAAK,CAAE;QAChC,IAAMuC,KAAK,GAAGxC,KAAK,CAACjwB,GAAG,CAAEmwB,KAAK,CAAE;QAChC,IAAMuC,KAAK,GAAGxC,KAAK,CAAClwB,GAAG,CAAEkwB,KAAK,CAAE;QAChC,IAAMyC,KAAK,GAAGzC,KAAK,CAAClwB,GAAG,CAAEmwB,KAAK,CAAE;QAEhC,IAAMkC,KAAK,GAAKE,KAAK,GAAGG,KAAK,GAAGF,KAAK,GAAGA,KAAO;;QAE/C;QACA,IAAKH,KAAK,KAAK,CAAC,EAAG;UAElB;UACA;UACA,OAAO5nC,MAAM,CAAC4S,GAAG,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;QAEnC;QAEA,IAAMu1B,QAAQ,GAAG,CAAC,GAAGP,KAAK;QAC1B,IAAM5X,CAAC,GAAG,CAAEiY,KAAK,GAAGD,KAAK,GAAGD,KAAK,GAAGG,KAAK,IAAKC,QAAQ;QACtD,IAAMj0B,CAAC,GAAG,CAAE4zB,KAAK,GAAGI,KAAK,GAAGH,KAAK,GAAGC,KAAK,IAAKG,QAAQ;;QAEtD;QACA,OAAOnoC,MAAM,CAAC4S,GAAG,CAAE,CAAC,GAAGod,CAAC,GAAG9b,CAAC,EAAEA,CAAC,EAAE8b,CAAC,CAAE;MAErC;IAAC;MAAA14B,GAAA;MAAAE,KAAA,EAED,SAAA26B,cAAsBb,KAAK,EAAExf,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;QAEtC,IAAI,CAAC80B,YAAY,CAAExV,KAAK,EAAExf,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE2zB,KAAK,CAAE;QAE1C,OAASA,KAAK,CAACr2B,CAAC,IAAI,CAAC,IAAQq2B,KAAK,CAAC/1B,CAAC,IAAI,CAAG,IAAQ+1B,KAAK,CAACr2B,CAAC,GAAGq2B,KAAK,CAAC/1B,CAAC,IAAM,CAAG;MAE9E;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAuvC,MAAczV,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEgU,EAAE,EAAEpB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAElnC,MAAM,EAAG;QAAE;;QAE1D,IAAKkmC,WAAW,KAAK,KAAK,EAAG;UAE5BnlC,OAAO,CAACC,IAAI,CAAE,+EAA+E,CAAE;UAE/FklC,WAAW,GAAG,IAAI;QAEnB;QAEA,OAAO,IAAI,CAACiB,gBAAgB,CAAE7V,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEgU,EAAE,EAAEpB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAElnC,MAAM,CAAE;MAEzE;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAA2vC,iBAAyB7V,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEgU,EAAE,EAAE1xB,EAAE,EAAEC,EAAE,EAAEywB,EAAE,EAAEpnC,MAAM,EAAG;QAEhE,IAAI,CAAC8mC,YAAY,CAAExV,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEgU,EAAE,EAAEzC,KAAK,CAAE;QAE7C3lC,MAAM,CAAC0T,SAAS,CAAE,CAAC,CAAE;QACrB1T,MAAM,CAACsU,eAAe,CAAEoC,EAAE,EAAEivB,KAAK,CAACr2B,CAAC,CAAE;QACrCtP,MAAM,CAACsU,eAAe,CAAEqC,EAAE,EAAEgvB,KAAK,CAAC/1B,CAAC,CAAE;QACrC5P,MAAM,CAACsU,eAAe,CAAE8yB,EAAE,EAAEzB,KAAK,CAACpiB,CAAC,CAAE;QAErC,OAAOvjB,MAAM;MAEd;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAA6vC,cAAsBv1B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEyjB,SAAS,EAAG;QAE1C+P,KAAK,CAAC/wB,UAAU,CAAEzC,CAAC,EAAED,CAAC,CAAE;QACxB0zB,KAAK,CAAChxB,UAAU,CAAE3C,CAAC,EAAEC,CAAC,CAAE;;QAExB;QACA,OAASyzB,KAAK,CAAChwB,KAAK,CAAEiwB,KAAK,CAAE,CAAClwB,GAAG,CAAEkgB,SAAS,CAAE,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK;MAEpE;IAAC;IAAA,OAAA0Q,QAAA;EAAA;EAgNF,IAAIkC,UAAU,GAAG,CAAC;EAAC,IAEbC,QAAQ,0BAAAC,iBAAA;IAAA3nB,SAAA,CAAA0nB,QAAA,EAAAC,iBAAA;IAAA,IAAAC,OAAA,GAAA1nB,YAAA,CAAAwnB,QAAA;IAEb,SAAAA,SAAA,EAAc;MAAA,IAAAG,OAAA;MAAA7oC,eAAA,OAAA0oC,QAAA;MAEbG,OAAA,GAAAD,OAAA,CAAAlvC,IAAA;MAEAmvC,OAAA,CAAKC,UAAU,GAAG,IAAI;MAEtB1xC,MAAM,CAACI,cAAc,CAAAwqB,sBAAA,CAAA6mB,OAAA,GAAQ,IAAI,EAAE;QAAEjxC,KAAK,EAAE6wC,UAAU;MAAI,CAAC,CAAE;MAE7DI,OAAA,CAAK55B,IAAI,GAAGN,YAAY,EAAE;MAE1Bk6B,OAAA,CAAK9qC,IAAI,GAAG,EAAE;MACd8qC,OAAA,CAAKpvC,IAAI,GAAG,UAAU;MAEtBovC,OAAA,CAAKE,QAAQ,GAAG1lC,cAAc;MAC9BwlC,OAAA,CAAKG,IAAI,GAAGhmC,SAAS;MACrB6lC,OAAA,CAAKI,YAAY,GAAG,KAAK;MAEzBJ,OAAA,CAAKK,OAAO,GAAG,CAAC;MAChBL,OAAA,CAAKM,WAAW,GAAG,KAAK;MAExBN,OAAA,CAAKO,QAAQ,GAAGjlC,cAAc;MAC9B0kC,OAAA,CAAKQ,QAAQ,GAAGjlC,sBAAsB;MACtCykC,OAAA,CAAKS,aAAa,GAAG5lC,WAAW;MAChCmlC,OAAA,CAAKU,aAAa,GAAG,IAAI;MACzBV,OAAA,CAAKW,aAAa,GAAG,IAAI;MACzBX,OAAA,CAAKY,kBAAkB,GAAG,IAAI;MAE9BZ,OAAA,CAAKa,SAAS,GAAG7kC,cAAc;MAC/BgkC,OAAA,CAAKc,SAAS,GAAG,IAAI;MACrBd,OAAA,CAAKe,UAAU,GAAG,IAAI;MAEtBf,OAAA,CAAKgB,gBAAgB,GAAG,IAAI;MAC5BhB,OAAA,CAAKiB,WAAW,GAAGr9B,iBAAiB;MACpCo8B,OAAA,CAAKkB,UAAU,GAAG,CAAC;MACnBlB,OAAA,CAAKmB,eAAe,GAAG,IAAI;MAC3BnB,OAAA,CAAKoB,WAAW,GAAGt+B,aAAa;MAChCk9B,OAAA,CAAKqB,YAAY,GAAGv+B,aAAa;MACjCk9B,OAAA,CAAKsB,YAAY,GAAGx+B,aAAa;MACjCk9B,OAAA,CAAKuB,YAAY,GAAG,KAAK;MAEzBvB,OAAA,CAAKwB,cAAc,GAAG,IAAI;MAC1BxB,OAAA,CAAKyB,gBAAgB,GAAG,KAAK;MAC7BzB,OAAA,CAAK0B,WAAW,GAAG,KAAK;MAExB1B,OAAA,CAAK2B,UAAU,GAAG,IAAI;MAEtB3B,OAAA,CAAK4B,UAAU,GAAG,IAAI;MAEtB5B,OAAA,CAAK6B,SAAS,GAAG,IAAI,CAAC,CAAC;;MAEvB7B,OAAA,CAAK8B,aAAa,GAAG,KAAK;MAC1B9B,OAAA,CAAK+B,mBAAmB,GAAG,CAAC;MAC5B/B,OAAA,CAAKgC,kBAAkB,GAAG,CAAC;MAE3BhC,OAAA,CAAKiC,SAAS,GAAG,KAAK;MAEtBjC,OAAA,CAAKkC,eAAe,GAAG,KAAK;MAC5BlC,OAAA,CAAKmC,kBAAkB,GAAG,KAAK;MAC/BnC,OAAA,CAAKoC,eAAe,GAAG,KAAK;MAE5BpC,OAAA,CAAKjI,OAAO,GAAG,IAAI;MAEnBiI,OAAA,CAAKqC,UAAU,GAAG,IAAI;MAEtBrC,OAAA,CAAKlmB,QAAQ,GAAG,CAAC,CAAC;MAElBkmB,OAAA,CAAK5oB,OAAO,GAAG,CAAC;MAEhB4oB,OAAA,CAAKsC,UAAU,GAAG,CAAC;MAAC,OAAAtC,OAAA;IAErB;IAACroC,YAAA,CAAAkoC,QAAA;MAAAhxC,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAgB;QAEf,OAAO,IAAI,CAACs3B,UAAU;MAEvB,CAAC;MAAAn4B,GAAA,EAED,SAAAA,IAAepb,KAAK,EAAG;QAEtB,IAAK,IAAI,CAACuzC,UAAU,GAAG,CAAC,KAAKvzC,KAAK,GAAG,CAAC,EAAG;UAExC,IAAI,CAACqoB,OAAO,EAAG;QAEhB;QAEA,IAAI,CAACkrB,UAAU,GAAGvzC,KAAK;MAExB;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAwzC,QAAA,CAAS,8BAA+B,CAAC;IAAC;MAAA1zC,GAAA;MAAAE,KAAA,EAE1C,SAAAspC,eAAA,CAAgB,wDAAyD,CAAC;IAAC;MAAAxpC,GAAA;MAAAE,KAAA,EAE3E,SAAAyzC,gBAAA,CAAiB,8BAA+B,CAAC;IAAC;MAAA3zC,GAAA;MAAAE,KAAA,EAElD,SAAA0zC,sBAAA,EAAwB;QAEvB,OAAO,IAAI,CAACD,eAAe,CAACE,QAAQ,EAAE;MAEvC;IAAC;MAAA7zC,GAAA;MAAAE,KAAA,EAED,SAAA4zC,UAAWtxC,MAAM,EAAG;QAEnB,IAAKA,MAAM,KAAKgC,SAAS,EAAG;QAE5B,KAAM,IAAMxE,GAAG,IAAIwC,MAAM,EAAG;UAE3B,IAAMuxC,QAAQ,GAAGvxC,MAAM,CAAExC,GAAG,CAAE;UAE9B,IAAK+zC,QAAQ,KAAKvvC,SAAS,EAAG;YAE7BiF,OAAO,CAACC,IAAI,+BAAAmd,MAAA,CAAiC7mB,GAAG,+BAA8B;YAC9E;UAED;UAEA,IAAMg0C,YAAY,GAAG,IAAI,CAAEh0C,GAAG,CAAE;UAEhC,IAAKg0C,YAAY,KAAKxvC,SAAS,EAAG;YAEjCiF,OAAO,CAACC,IAAI,qBAAAmd,MAAA,CAAuB7mB,GAAG,mCAAA6mB,MAAA,CAAkC,IAAI,CAAC9kB,IAAI,OAAM;YACvF;UAED;UAEA,IAAKiyC,YAAY,IAAIA,YAAY,CAAC/G,OAAO,EAAG;YAE3C+G,YAAY,CAAC14B,GAAG,CAAEy4B,QAAQ,CAAE;UAE7B,CAAC,MAAM,IAAOC,YAAY,IAAIA,YAAY,CAACxe,SAAS,IAAQue,QAAQ,IAAIA,QAAQ,CAACve,SAAW,EAAG;YAE9Fwe,YAAY,CAACr3B,IAAI,CAAEo3B,QAAQ,CAAE;UAE9B,CAAC,MAAM;YAEN,IAAI,CAAE/zC,GAAG,CAAE,GAAG+zC,QAAQ;UAEvB;QAED;MAED;IAAC;MAAA/zC,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKjkB,SAAS,IAAI,OAAOikB,IAAI,KAAK,QAAU;QAEvE,IAAKC,YAAY,EAAG;UAEnBD,IAAI,GAAG;YACNiD,QAAQ,EAAE,CAAC,CAAC;YACZ/C,MAAM,EAAE,CAAC;UACV,CAAC;QAEF;QAEA,IAAMP,IAAI,GAAG;UACZuD,QAAQ,EAAE;YACTpD,OAAO,EAAE,GAAG;YACZxmB,IAAI,EAAE,UAAU;YAChBR,SAAS,EAAE;UACZ;QACD,CAAC;;QAED;QACA6mB,IAAI,CAAC7Q,IAAI,GAAG,IAAI,CAACA,IAAI;QACrB6Q,IAAI,CAACrmB,IAAI,GAAG,IAAI,CAACA,IAAI;QAErB,IAAK,IAAI,CAACsE,IAAI,KAAK,EAAE,EAAG+hB,IAAI,CAAC/hB,IAAI,GAAG,IAAI,CAACA,IAAI;QAE7C,IAAK,IAAI,CAACuf,KAAK,IAAI,IAAI,CAACA,KAAK,CAACqnB,OAAO,EAAG7kB,IAAI,CAACxC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACquB,MAAM,EAAE;QAExE,IAAK,IAAI,CAACC,SAAS,KAAK1vC,SAAS,EAAG4jB,IAAI,CAAC8rB,SAAS,GAAG,IAAI,CAACA,SAAS;QACnE,IAAK,IAAI,CAACC,SAAS,KAAK3vC,SAAS,EAAG4jB,IAAI,CAAC+rB,SAAS,GAAG,IAAI,CAACA,SAAS;QAEnE,IAAK,IAAI,CAACC,KAAK,KAAK5vC,SAAS,EAAG4jB,IAAI,CAACgsB,KAAK,GAAG,IAAI,CAACA,KAAK;QACvD,IAAK,IAAI,CAACC,UAAU,IAAI,IAAI,CAACA,UAAU,CAACpH,OAAO,EAAG7kB,IAAI,CAACisB,UAAU,GAAG,IAAI,CAACA,UAAU,CAACJ,MAAM,EAAE;QAC5F,IAAK,IAAI,CAACK,cAAc,KAAK9vC,SAAS,EAAG4jB,IAAI,CAACksB,cAAc,GAAG,IAAI,CAACA,cAAc;QAClF,IAAK,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACtH,OAAO,EAAG7kB,IAAI,CAACmsB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACN,MAAM,EAAE;QACpF,IAAK,IAAI,CAACO,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,KAAK,CAAC,EAAGpsB,IAAI,CAACosB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;QAE7G,IAAK,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACxH,OAAO,EAAG7kB,IAAI,CAACqsB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACR,MAAM,EAAE;QACpF,IAAK,IAAI,CAACS,iBAAiB,KAAKlwC,SAAS,EAAG4jB,IAAI,CAACssB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;QAC3F,IAAK,IAAI,CAACC,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC1H,OAAO,EAAG7kB,IAAI,CAACusB,aAAa,GAAG,IAAI,CAACA,aAAa,CAACV,MAAM,EAAE;QACxG,IAAK,IAAI,CAACW,SAAS,KAAKpwC,SAAS,EAAG4jB,IAAI,CAACwsB,SAAS,GAAG,IAAI,CAACA,SAAS;QACnE,IAAK,IAAI,CAACC,SAAS,KAAKrwC,SAAS,EAAG4jB,IAAI,CAACysB,SAAS,GAAG,IAAI,CAACA,SAAS;QACnE,IAAK,IAAI,CAACC,kBAAkB,KAAKtwC,SAAS,EAAG4jB,IAAI,CAAC0sB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;QAE9F,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC1qB,SAAS,EAAG;UAEvDjC,IAAI,CAAC2sB,YAAY,GAAG,IAAI,CAACA,YAAY,CAACvsB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAE1D;QAEA,IAAK,IAAI,CAACy9B,qBAAqB,IAAI,IAAI,CAACA,qBAAqB,CAAC3qB,SAAS,EAAG;UAEzEjC,IAAI,CAAC4sB,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACxsB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAE5E;QAEA,IAAK,IAAI,CAAC09B,kBAAkB,IAAI,IAAI,CAACA,kBAAkB,CAAC5qB,SAAS,EAAG;UAEnEjC,IAAI,CAAC6sB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACzsB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;UACrE6Q,IAAI,CAAC8sB,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACz1B,OAAO,EAAE;QAEhE;QAEA,IAAK,IAAI,CAAC01B,WAAW,KAAK3wC,SAAS,EAAG4jB,IAAI,CAAC+sB,WAAW,GAAG,IAAI,CAACA,WAAW;QACzE,IAAK,IAAI,CAACC,cAAc,KAAK5wC,SAAS,EAAG4jB,IAAI,CAACgtB,cAAc,GAAG,IAAI,CAACA,cAAc;QAClF,IAAK,IAAI,CAACC,yBAAyB,KAAK7wC,SAAS,EAAG4jB,IAAI,CAACitB,yBAAyB,GAAG,IAAI,CAACA,yBAAyB;QAEnH,IAAK,IAAI,CAACC,cAAc,IAAI,IAAI,CAACA,cAAc,CAACjrB,SAAS,EAAG;UAE3DjC,IAAI,CAACktB,cAAc,GAAG,IAAI,CAACA,cAAc,CAAC9sB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAE9D;QAEA,IAAK,IAAI,CAACg+B,uBAAuB,IAAI,IAAI,CAACA,uBAAuB,CAAClrB,SAAS,EAAG;UAE7EjC,IAAI,CAACmtB,uBAAuB,GAAG,IAAI,CAACA,uBAAuB,CAAC/sB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAEhF;QAEA,IAAK,IAAI,CAACi+B,GAAG,IAAI,IAAI,CAACA,GAAG,CAACnrB,SAAS,EAAGjC,IAAI,CAACotB,GAAG,GAAG,IAAI,CAACA,GAAG,CAAChtB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAC7E,IAAK,IAAI,CAACk+B,MAAM,IAAI,IAAI,CAACA,MAAM,CAACprB,SAAS,EAAGjC,IAAI,CAACqtB,MAAM,GAAG,IAAI,CAACA,MAAM,CAACjtB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QACzF,IAAK,IAAI,CAACm+B,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACrrB,SAAS,EAAGjC,IAAI,CAACstB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACltB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAEjG,IAAK,IAAI,CAACo+B,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACtrB,SAAS,EAAG;UAE/CjC,IAAI,CAACutB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACntB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;UACjD6Q,IAAI,CAACwtB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;QAEhD;QAEA,IAAK,IAAI,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,CAACxrB,SAAS,EAAG;UAEzCjC,IAAI,CAACytB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACrtB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;UAC3C6Q,IAAI,CAAC0tB,cAAc,GAAG,IAAI,CAACA,cAAc;QAE1C;QAEA,IAAK,IAAI,CAACC,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC1rB,SAAS,EAAG;UAE7CjC,IAAI,CAAC2tB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACvtB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;UAC/C6Q,IAAI,CAAC4tB,SAAS,GAAG,IAAI,CAACA,SAAS;QAEhC;QAEA,IAAK,IAAI,CAACC,SAAS,IAAI,IAAI,CAACA,SAAS,CAAC5rB,SAAS,EAAG;UAEjDjC,IAAI,CAAC6tB,SAAS,GAAG,IAAI,CAACA,SAAS,CAACztB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;UACnD6Q,IAAI,CAAC8tB,aAAa,GAAG,IAAI,CAACA,aAAa;UACvC9tB,IAAI,CAAC+tB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC12B,OAAO,EAAE;QAE9C;QAEA,IAAK,IAAI,CAAC22B,eAAe,IAAI,IAAI,CAACA,eAAe,CAAC/rB,SAAS,EAAG;UAE7DjC,IAAI,CAACguB,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC5tB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;UAC/D6Q,IAAI,CAACiuB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;UAC/CjuB,IAAI,CAACkuB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;QAE9C;QAEA,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAAClsB,SAAS,EAAGjC,IAAI,CAACmuB,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC/tB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QACjH,IAAK,IAAI,CAACi/B,YAAY,IAAI,IAAI,CAACA,YAAY,CAACnsB,SAAS,EAAGjC,IAAI,CAACouB,YAAY,GAAG,IAAI,CAACA,YAAY,CAAChuB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAEjH,IAAK,IAAI,CAACk/B,WAAW,IAAI,IAAI,CAACA,WAAW,CAACpsB,SAAS,EAAGjC,IAAI,CAACquB,WAAW,GAAG,IAAI,CAACA,WAAW,CAACjuB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAC7G,IAAK,IAAI,CAACm/B,WAAW,IAAI,IAAI,CAACA,WAAW,CAACrsB,SAAS,EAAGjC,IAAI,CAACsuB,WAAW,GAAG,IAAI,CAACA,WAAW,CAACluB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAC7G,IAAK,IAAI,CAACo/B,oBAAoB,IAAI,IAAI,CAACA,oBAAoB,CAACtsB,SAAS,EAAGjC,IAAI,CAACuuB,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACnuB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QACjJ,IAAK,IAAI,CAACq/B,gBAAgB,IAAI,IAAI,CAACA,gBAAgB,CAACvsB,SAAS,EAAGjC,IAAI,CAACwuB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACpuB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAEjI,IAAK,IAAI,CAACs/B,MAAM,IAAI,IAAI,CAACA,MAAM,CAACxsB,SAAS,EAAG;UAE3CjC,IAAI,CAACyuB,MAAM,GAAG,IAAI,CAACA,MAAM,CAACruB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;UAE7C,IAAK,IAAI,CAACu/B,OAAO,KAAKtyC,SAAS,EAAG4jB,IAAI,CAAC0uB,OAAO,GAAG,IAAI,CAACA,OAAO;QAE9D;QAEA,IAAK,IAAI,CAACC,eAAe,KAAKvyC,SAAS,EAAG4jB,IAAI,CAAC2uB,eAAe,GAAG,IAAI,CAACA,eAAe;QACrF,IAAK,IAAI,CAACC,YAAY,KAAKxyC,SAAS,EAAG4jB,IAAI,CAAC4uB,YAAY,GAAG,IAAI,CAACA,YAAY;QAC5E,IAAK,IAAI,CAACC,eAAe,KAAKzyC,SAAS,EAAG4jB,IAAI,CAAC6uB,eAAe,GAAG,IAAI,CAACA,eAAe;QAErF,IAAK,IAAI,CAACC,WAAW,IAAI,IAAI,CAACA,WAAW,CAAC7sB,SAAS,EAAG;UAErDjC,IAAI,CAAC8uB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC1uB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAExD;QAEA,IAAK,IAAI,CAAC4/B,YAAY,KAAK3yC,SAAS,EAAG4jB,IAAI,CAAC+uB,YAAY,GAAG,IAAI,CAACA,YAAY;QAC5E,IAAK,IAAI,CAACC,eAAe,IAAI,IAAI,CAACA,eAAe,CAAC/sB,SAAS,EAAGjC,IAAI,CAACgvB,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC5uB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QAC7H,IAAK,IAAI,CAAC8/B,SAAS,KAAK7yC,SAAS,EAAG4jB,IAAI,CAACivB,SAAS,GAAG,IAAI,CAACA,SAAS;QACnE,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACjtB,SAAS,EAAGjC,IAAI,CAACkvB,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC9uB,MAAM,CAAEC,IAAI,CAAE,CAAClR,IAAI;QACjH,IAAK,IAAI,CAACggC,mBAAmB,KAAK/yC,SAAS,IAAI,IAAI,CAAC+yC,mBAAmB,KAAK1e,QAAQ,EAAGzQ,IAAI,CAACmvB,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;QAC1I,IAAK,IAAI,CAACC,gBAAgB,KAAKhzC,SAAS,EAAG4jB,IAAI,CAACovB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACvD,MAAM,EAAE;QAEjG,IAAK,IAAI,CAAC1a,IAAI,KAAK/0B,SAAS,EAAG4jB,IAAI,CAACmR,IAAI,GAAG,IAAI,CAACA,IAAI;QACpD,IAAK,IAAI,CAACuZ,UAAU,KAAK,IAAI,EAAG1qB,IAAI,CAAC0qB,UAAU,GAAG,IAAI,CAACA,UAAU;QACjE,IAAK,IAAI,CAAC2E,eAAe,KAAKjzC,SAAS,EAAG4jB,IAAI,CAACqvB,eAAe,GAAG,IAAI,CAACA,eAAe;QAErF,IAAK,IAAI,CAACpG,QAAQ,KAAK1lC,cAAc,EAAGyc,IAAI,CAACipB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QACrE,IAAK,IAAI,CAACC,IAAI,KAAKhmC,SAAS,EAAG8c,IAAI,CAACkpB,IAAI,GAAG,IAAI,CAACA,IAAI;QACpD,IAAK,IAAI,CAACC,YAAY,EAAGnpB,IAAI,CAACmpB,YAAY,GAAG,IAAI;QAEjD,IAAK,IAAI,CAACC,OAAO,GAAG,CAAC,EAAGppB,IAAI,CAACopB,OAAO,GAAG,IAAI,CAACA,OAAO;QACnD,IAAK,IAAI,CAACC,WAAW,KAAK,IAAI,EAAGrpB,IAAI,CAACqpB,WAAW,GAAG,IAAI,CAACA,WAAW;QAEpErpB,IAAI,CAAC4pB,SAAS,GAAG,IAAI,CAACA,SAAS;QAC/B5pB,IAAI,CAAC6pB,SAAS,GAAG,IAAI,CAACA,SAAS;QAC/B7pB,IAAI,CAAC8pB,UAAU,GAAG,IAAI,CAACA,UAAU;QACjC9pB,IAAI,CAAC2qB,UAAU,GAAG,IAAI,CAACA,UAAU;QAEjC3qB,IAAI,CAACsqB,YAAY,GAAG,IAAI,CAACA,YAAY;QACrCtqB,IAAI,CAAC+pB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;QAC7C/pB,IAAI,CAACgqB,WAAW,GAAG,IAAI,CAACA,WAAW;QACnChqB,IAAI,CAACiqB,UAAU,GAAG,IAAI,CAACA,UAAU;QACjCjqB,IAAI,CAACkqB,eAAe,GAAG,IAAI,CAACA,eAAe;QAC3ClqB,IAAI,CAACmqB,WAAW,GAAG,IAAI,CAACA,WAAW;QACnCnqB,IAAI,CAACoqB,YAAY,GAAG,IAAI,CAACA,YAAY;QACrCpqB,IAAI,CAACqqB,YAAY,GAAG,IAAI,CAACA,YAAY;;QAErC;QACA,IAAK,IAAI,CAACvuB,QAAQ,KAAK1f,SAAS,IAAI,IAAI,CAAC0f,QAAQ,KAAK,CAAC,EAAGkE,IAAI,CAAClE,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAEvF,IAAK,IAAI,CAAC+uB,aAAa,KAAK,IAAI,EAAG7qB,IAAI,CAAC6qB,aAAa,GAAG,IAAI;QAC5D,IAAK,IAAI,CAACC,mBAAmB,KAAK,CAAC,EAAG9qB,IAAI,CAAC8qB,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;QACzF,IAAK,IAAI,CAACC,kBAAkB,KAAK,CAAC,EAAG/qB,IAAI,CAAC+qB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;QAEtF,IAAK,IAAI,CAACuE,SAAS,KAAKlzC,SAAS,IAAI,IAAI,CAACkzC,SAAS,KAAK,CAAC,EAAGtvB,IAAI,CAACsvB,SAAS,GAAG,IAAI,CAACA,SAAS;QAC3F,IAAK,IAAI,CAACC,QAAQ,KAAKnzC,SAAS,EAAG4jB,IAAI,CAACuvB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAChE,IAAK,IAAI,CAACC,OAAO,KAAKpzC,SAAS,EAAG4jB,IAAI,CAACwvB,OAAO,GAAG,IAAI,CAACA,OAAO;QAC7D,IAAK,IAAI,CAACvzB,KAAK,KAAK7f,SAAS,EAAG4jB,IAAI,CAAC/D,KAAK,GAAG,IAAI,CAACA,KAAK;QAEvD,IAAK,IAAI,CAAC+uB,SAAS,KAAK,IAAI,EAAGhrB,IAAI,CAACgrB,SAAS,GAAG,IAAI;QAEpD,IAAK,IAAI,CAACyE,SAAS,GAAG,CAAC,EAAGzvB,IAAI,CAACyvB,SAAS,GAAG,IAAI,CAACA,SAAS;QACzD,IAAK,IAAI,CAACxE,eAAe,KAAK,IAAI,EAAGjrB,IAAI,CAACirB,eAAe,GAAG,IAAI,CAACA,eAAe;QAChF,IAAK,IAAI,CAACC,kBAAkB,KAAK,IAAI,EAAGlrB,IAAI,CAACkrB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;QACzF,IAAK,IAAI,CAACC,eAAe,KAAK,IAAI,EAAGnrB,IAAI,CAACmrB,eAAe,GAAG,IAAI,CAACA,eAAe;QAEhF,IAAK,IAAI,CAACuE,SAAS,KAAK,IAAI,EAAG1vB,IAAI,CAAC0vB,SAAS,GAAG,IAAI,CAACA,SAAS;QAC9D,IAAK,IAAI,CAACC,kBAAkB,GAAG,CAAC,EAAG3vB,IAAI,CAAC2vB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;QACpF,IAAK,IAAI,CAACC,gBAAgB,KAAK,OAAO,EAAG5vB,IAAI,CAAC4vB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;QACtF,IAAK,IAAI,CAACC,iBAAiB,KAAK,OAAO,EAAG7vB,IAAI,CAAC6vB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;QAEzF,IAAK,IAAI,CAACC,WAAW,KAAK,IAAI,EAAG9vB,IAAI,CAAC8vB,WAAW,GAAG,IAAI,CAACA,WAAW;QAEpE,IAAK,IAAI,CAAChP,OAAO,KAAK,KAAK,EAAG9gB,IAAI,CAAC8gB,OAAO,GAAG,KAAK;QAElD,IAAK,IAAI,CAACsK,UAAU,KAAK,KAAK,EAAGprB,IAAI,CAACorB,UAAU,GAAG,KAAK;QAExD,IAAK,IAAI,CAAC2E,GAAG,KAAK,KAAK,EAAG/vB,IAAI,CAAC+vB,GAAG,GAAG,KAAK;QAE1C,IAAKz4C,MAAM,CAACmH,IAAI,CAAE,IAAI,CAACokB,QAAQ,CAAE,CAACnlB,MAAM,GAAG,CAAC,EAAGsiB,IAAI,CAAC6C,QAAQ,GAAG,IAAI,CAACA,QAAQ;;QAE5E;;QAEA,SAAS8iB,gBAAgBA,CAAEC,KAAK,EAAG;UAElC,IAAMxrC,MAAM,GAAG,EAAE;UAEjB,KAAM,IAAMxC,GAAG,IAAIguC,KAAK,EAAG;YAE1B,IAAM5lB,MAAI,GAAG4lB,KAAK,CAAEhuC,GAAG,CAAE;YACzB,OAAOooB,MAAI,CAACuD,QAAQ;YACpBnpB,MAAM,CAAC+C,IAAI,CAAE6iB,MAAI,CAAE;UAEpB;UAEA,OAAO5lB,MAAM;QAEd;QAEA,IAAKkmB,YAAY,EAAG;UAEnB,IAAMgD,QAAQ,GAAGqiB,gBAAgB,CAAEtlB,IAAI,CAACiD,QAAQ,CAAE;UAClD,IAAM/C,MAAM,GAAGolB,gBAAgB,CAAEtlB,IAAI,CAACE,MAAM,CAAE;UAE9C,IAAK+C,QAAQ,CAAC5lB,MAAM,GAAG,CAAC,EAAGsiB,IAAI,CAACsD,QAAQ,GAAGA,QAAQ;UACnD,IAAK/C,MAAM,CAAC7iB,MAAM,GAAG,CAAC,EAAGsiB,IAAI,CAACO,MAAM,GAAGA,MAAM;QAE9C;QAEA,OAAOP,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd,IAAI,CAAClkB,IAAI,GAAGkkB,MAAM,CAAClkB,IAAI;QAEvB,IAAI,CAACgrC,QAAQ,GAAG9mB,MAAM,CAAC8mB,QAAQ;QAC/B,IAAI,CAACC,IAAI,GAAG/mB,MAAM,CAAC+mB,IAAI;QACvB,IAAI,CAACC,YAAY,GAAGhnB,MAAM,CAACgnB,YAAY;QAEvC,IAAI,CAACC,OAAO,GAAGjnB,MAAM,CAACinB,OAAO;QAC7B,IAAI,CAACC,WAAW,GAAGlnB,MAAM,CAACknB,WAAW;QAErC,IAAI,CAACC,QAAQ,GAAGnnB,MAAM,CAACmnB,QAAQ;QAC/B,IAAI,CAACC,QAAQ,GAAGpnB,MAAM,CAAConB,QAAQ;QAC/B,IAAI,CAACC,aAAa,GAAGrnB,MAAM,CAACqnB,aAAa;QACzC,IAAI,CAACC,aAAa,GAAGtnB,MAAM,CAACsnB,aAAa;QACzC,IAAI,CAACC,aAAa,GAAGvnB,MAAM,CAACunB,aAAa;QACzC,IAAI,CAACC,kBAAkB,GAAGxnB,MAAM,CAACwnB,kBAAkB;QAEnD,IAAI,CAACC,SAAS,GAAGznB,MAAM,CAACynB,SAAS;QACjC,IAAI,CAACC,SAAS,GAAG1nB,MAAM,CAAC0nB,SAAS;QACjC,IAAI,CAACC,UAAU,GAAG3nB,MAAM,CAAC2nB,UAAU;QAEnC,IAAI,CAACC,gBAAgB,GAAG5nB,MAAM,CAAC4nB,gBAAgB;QAC/C,IAAI,CAACC,WAAW,GAAG7nB,MAAM,CAAC6nB,WAAW;QACrC,IAAI,CAACC,UAAU,GAAG9nB,MAAM,CAAC8nB,UAAU;QACnC,IAAI,CAACC,eAAe,GAAG/nB,MAAM,CAAC+nB,eAAe;QAC7C,IAAI,CAACC,WAAW,GAAGhoB,MAAM,CAACgoB,WAAW;QACrC,IAAI,CAACC,YAAY,GAAGjoB,MAAM,CAACioB,YAAY;QACvC,IAAI,CAACC,YAAY,GAAGloB,MAAM,CAACkoB,YAAY;QACvC,IAAI,CAACC,YAAY,GAAGnoB,MAAM,CAACmoB,YAAY;QAEvC,IAAM0F,SAAS,GAAG7tB,MAAM,CAACooB,cAAc;QACvC,IAAI0F,SAAS,GAAG,IAAI;QAEpB,IAAKD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAMvgC,CAAC,GAAGugC,SAAS,CAACtyC,MAAM;UAC1BuyC,SAAS,GAAG,IAAIvvB,KAAK,CAAEjR,CAAC,CAAE;UAE1B,KAAM,IAAI9R,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;YAEhCsyC,SAAS,CAAEtyC,CAAC,CAAE,GAAGqyC,SAAS,CAAEryC,CAAC,CAAE,CAAC2W,KAAK,EAAE;UAExC;QAED;QAEA,IAAI,CAACi2B,cAAc,GAAG0F,SAAS;QAC/B,IAAI,CAACzF,gBAAgB,GAAGroB,MAAM,CAACqoB,gBAAgB;QAC/C,IAAI,CAACC,WAAW,GAAGtoB,MAAM,CAACsoB,WAAW;QAErC,IAAI,CAACC,UAAU,GAAGvoB,MAAM,CAACuoB,UAAU;QAEnC,IAAI,CAACC,UAAU,GAAGxoB,MAAM,CAACwoB,UAAU;QAEnC,IAAI,CAACC,SAAS,GAAGzoB,MAAM,CAACyoB,SAAS;QAEjC,IAAI,CAACC,aAAa,GAAG1oB,MAAM,CAAC0oB,aAAa;QACzC,IAAI,CAACC,mBAAmB,GAAG3oB,MAAM,CAAC2oB,mBAAmB;QACrD,IAAI,CAACC,kBAAkB,GAAG5oB,MAAM,CAAC4oB,kBAAkB;QAEnD,IAAI,CAACC,SAAS,GAAG7oB,MAAM,CAAC6oB,SAAS;QAEjC,IAAI,CAACyE,SAAS,GAAGttB,MAAM,CAACstB,SAAS;QACjC,IAAI,CAACxE,eAAe,GAAG9oB,MAAM,CAAC8oB,eAAe;QAC7C,IAAI,CAACC,kBAAkB,GAAG/oB,MAAM,CAAC+oB,kBAAkB;QACnD,IAAI,CAACC,eAAe,GAAGhpB,MAAM,CAACgpB,eAAe;QAE7C,IAAI,CAACrK,OAAO,GAAG3e,MAAM,CAAC2e,OAAO;QAE7B,IAAI,CAACsK,UAAU,GAAGjpB,MAAM,CAACipB,UAAU;QAEnC,IAAI,CAACvoB,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEjB,MAAM,CAACU,QAAQ,CAAE,CAAE;QAE/D,OAAO,IAAI;MAEZ;IAAC;MAAAjrB,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAACrV,aAAa,CAAE;UAAExU,IAAI,EAAE;QAAU,CAAC,CAAE;MAE1C;IAAC;MAAA/B,GAAA;MAAAsb,GAAA,EAED,SAAAA,IAAiBpb,KAAK,EAAG;QAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAACqoB,OAAO,EAAG;MAEtC;IAAC;IAAA,OAAAyoB,QAAA;EAAA,EAreqBp7B,eAAe;EAyetC,IAAM0iC,cAAc,GAAG;IAAE,WAAW,EAAE,QAAQ;IAAE,cAAc,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,OAAO,EAAE,QAAQ;IACpI,OAAO,EAAE,QAAQ;IAAE,QAAQ,EAAE,QAAQ;IAAE,OAAO,EAAE,QAAQ;IAAE,gBAAgB,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAC9H,OAAO,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,OAAO,EAAE,QAAQ;IACjI,gBAAgB,EAAE,QAAQ;IAAE,UAAU,EAAE,QAAQ;IAAE,SAAS,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IAAE,UAAU,EAAE,QAAQ;IAAE,UAAU,EAAE,QAAQ;IACnI,eAAe,EAAE,QAAQ;IAAE,UAAU,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,UAAU,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,aAAa,EAAE,QAAQ;IAC5I,gBAAgB,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,SAAS,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,cAAc,EAAE,QAAQ;IACjJ,eAAe,EAAE,QAAQ;IAAE,eAAe,EAAE,QAAQ;IAAE,eAAe,EAAE,QAAQ;IAAE,eAAe,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAClI,UAAU,EAAE,QAAQ;IAAE,aAAa,EAAE,QAAQ;IAAE,SAAS,EAAE,QAAQ;IAAE,SAAS,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IACtI,aAAa,EAAE,QAAQ;IAAE,aAAa,EAAE,QAAQ;IAAE,SAAS,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IACtI,WAAW,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IAAE,OAAO,EAAE,QAAQ;IAAE,aAAa,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IAAE,UAAU,EAAE,QAAQ;IAAE,SAAS,EAAE,QAAQ;IAChJ,WAAW,EAAE,QAAQ;IAAE,QAAQ,EAAE,QAAQ;IAAE,OAAO,EAAE,QAAQ;IAAE,OAAO,EAAE,QAAQ;IAAE,UAAU,EAAE,QAAQ;IAAE,eAAe,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IACvJ,cAAc,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,sBAAsB,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IACvJ,YAAY,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,aAAa,EAAE,QAAQ;IAAE,eAAe,EAAE,QAAQ;IAAE,cAAc,EAAE,QAAQ;IAClJ,gBAAgB,EAAE,QAAQ;IAAE,gBAAgB,EAAE,QAAQ;IAAE,gBAAgB,EAAE,QAAQ;IAAE,aAAa,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IACpJ,OAAO,EAAE,QAAQ;IAAE,SAAS,EAAE,QAAQ;IAAE,QAAQ,EAAE,QAAQ;IAAE,kBAAkB,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,cAAc,EAAE,QAAQ;IAC1I,cAAc,EAAE,QAAQ;IAAE,gBAAgB,EAAE,QAAQ;IAAE,iBAAiB,EAAE,QAAQ;IAAE,mBAAmB,EAAE,QAAQ;IAAE,iBAAiB,EAAE,QAAQ;IAC7I,iBAAiB,EAAE,QAAQ;IAAE,cAAc,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,UAAU,EAAE,QAAQ;IAAE,aAAa,EAAE,QAAQ;IAClJ,MAAM,EAAE,QAAQ;IAAE,SAAS,EAAE,QAAQ;IAAE,OAAO,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,QAAQ,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,QAAQ,EAAE,QAAQ;IAC9I,eAAe,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,eAAe,EAAE,QAAQ;IAAE,eAAe,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IACrJ,MAAM,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,QAAQ,EAAE,QAAQ;IAAE,eAAe,EAAE,QAAQ;IAAE,KAAK,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IACnK,WAAW,EAAE,QAAQ;IAAE,aAAa,EAAE,QAAQ;IAAE,QAAQ,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,UAAU,EAAE,QAAQ;IAAE,UAAU,EAAE,QAAQ;IACtI,QAAQ,EAAE,QAAQ;IAAE,QAAQ,EAAE,QAAQ;IAAE,SAAS,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IAClJ,aAAa,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IAAE,KAAK,EAAE,QAAQ;IAAE,MAAM,EAAE,QAAQ;IAAE,SAAS,EAAE,QAAQ;IAAE,QAAQ,EAAE,QAAQ;IAAE,WAAW,EAAE,QAAQ;IACjJ,QAAQ,EAAE,QAAQ;IAAE,OAAO,EAAE,QAAQ;IAAE,OAAO,EAAE,QAAQ;IAAE,YAAY,EAAE,QAAQ;IAAE,QAAQ,EAAE,QAAQ;IAAE,aAAa,EAAE;EAAS,CAAC;EAEhI,IAAMC,KAAK,GAAG;IAAEv1B,CAAC,EAAE,CAAC;IAAEvJ,CAAC,EAAE,CAAC;IAAE/C,CAAC,EAAE;EAAE,CAAC;EAClC,IAAM8hC,KAAK,GAAG;IAAEx1B,CAAC,EAAE,CAAC;IAAEvJ,CAAC,EAAE,CAAC;IAAE/C,CAAC,EAAE;EAAE,CAAC;EAElC,SAAS+hC,OAAOA,CAAE1S,CAAC,EAAExrB,CAAC,EAAE/B,CAAC,EAAG;IAE3B,IAAKA,CAAC,GAAG,CAAC,EAAGA,CAAC,IAAI,CAAC;IACnB,IAAKA,CAAC,GAAG,CAAC,EAAGA,CAAC,IAAI,CAAC;IACnB,IAAKA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAOutB,CAAC,GAAG,CAAExrB,CAAC,GAAGwrB,CAAC,IAAK,CAAC,GAAGvtB,CAAC;IAC7C,IAAKA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAO+B,CAAC;IACzB,IAAK/B,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAOutB,CAAC,GAAG,CAAExrB,CAAC,GAAGwrB,CAAC,IAAK,CAAC,IAAK,CAAC,GAAG,CAAC,GAAGvtB,CAAC,CAAE;IACzD,OAAOutB,CAAC;EAET;EAAC,IAEK2S,KAAK,0BAAAC,iBAAA;IAEV,SAAAD,MAAa90B,CAAC,EAAEb,CAAC,EAAEtI,CAAC,EAAG;MAAAnS,eAAA,OAAAowC,KAAA;MAEtB,IAAI,CAACzL,OAAO,GAAG,IAAI;MAEnB,IAAI,CAACrpB,CAAC,GAAG,CAAC;MACV,IAAI,CAACb,CAAC,GAAG,CAAC;MACV,IAAI,CAACtI,CAAC,GAAG,CAAC;MAEV,IAAKsI,CAAC,KAAKve,SAAS,IAAIiW,CAAC,KAAKjW,SAAS,EAAG;QAEzC;QACA,OAAO,IAAI,CAAC8W,GAAG,CAAEsI,CAAC,CAAE;MAErB;MAEA,OAAO,IAAI,CAACg1B,MAAM,CAAEh1B,CAAC,EAAEb,CAAC,EAAEtI,CAAC,CAAE;IAE9B;IAAC3R,YAAA,CAAA4vC,KAAA;MAAA14C,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKpb,KAAK,EAAG;QAEZ,IAAKA,KAAK,IAAIA,KAAK,CAAC+sC,OAAO,EAAG;UAE7B,IAAI,CAACtwB,IAAI,CAAEzc,KAAK,CAAE;QAEnB,CAAC,MAAM,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;UAEvC,IAAI,CAAC24C,MAAM,CAAE34C,KAAK,CAAE;QAErB,CAAC,MAAM,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;UAEvC,IAAI,CAAC44C,QAAQ,CAAE54C,KAAK,CAAE;QAEvB;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAkc,UAAWC,MAAM,EAAG;QAEnB,IAAI,CAACuH,CAAC,GAAGvH,MAAM;QACf,IAAI,CAAC0G,CAAC,GAAG1G,MAAM;QACf,IAAI,CAAC5B,CAAC,GAAG4B,MAAM;QAEf,OAAO,IAAI;MAEZ;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAA24C,OAAQE,GAAG,EAAExyB,UAAU,GAAG1S,cAAc,EAAG;QAE1CklC,GAAG,GAAGjiC,IAAI,CAACsC,KAAK,CAAE2/B,GAAG,CAAE;QAEvB,IAAI,CAACn1B,CAAC,GAAG,CAAEm1B,GAAG,IAAI,EAAE,GAAG,GAAG,IAAK,GAAG;QAClC,IAAI,CAACh2B,CAAC,GAAG,CAAEg2B,GAAG,IAAI,CAAC,GAAG,GAAG,IAAK,GAAG;QACjC,IAAI,CAACt+B,CAAC,GAAG,CAAEs+B,GAAG,GAAG,GAAG,IAAK,GAAG;QAE5B5yB,eAAe,CAACY,mBAAmB,CAAE,IAAI,EAAER,UAAU,CAAE;QAEvD,OAAO,IAAI;MAEZ;IAAC;MAAAvmB,GAAA;MAAAE,KAAA,EAED,SAAA04C,OAAQh1B,CAAC,EAAEb,CAAC,EAAEtI,CAAC,EAAE8L,UAAU,GAAGJ,eAAe,CAACG,iBAAiB,EAAG;QAEjE,IAAI,CAAC1C,CAAC,GAAGA,CAAC;QACV,IAAI,CAACb,CAAC,GAAGA,CAAC;QACV,IAAI,CAACtI,CAAC,GAAGA,CAAC;QAEV0L,eAAe,CAACY,mBAAmB,CAAE,IAAI,EAAER,UAAU,CAAE;QAEvD,OAAO,IAAI;MAEZ;IAAC;MAAAvmB,GAAA;MAAAE,KAAA,EAED,SAAA84C,OAAQh2B,CAAC,EAAEvJ,CAAC,EAAE/C,CAAC,EAAE6P,UAAU,GAAGJ,eAAe,CAACG,iBAAiB,EAAG;QAEjE;QACAtD,CAAC,GAAGpL,eAAe,CAAEoL,CAAC,EAAE,CAAC,CAAE;QAC3BvJ,CAAC,GAAGhC,KAAK,CAAEgC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACpB/C,CAAC,GAAGe,KAAK,CAAEf,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEpB,IAAK+C,CAAC,KAAK,CAAC,EAAG;UAEd,IAAI,CAACmK,CAAC,GAAG,IAAI,CAACb,CAAC,GAAG,IAAI,CAACtI,CAAC,GAAG/D,CAAC;QAE7B,CAAC,MAAM;UAEN,IAAMqvB,CAAC,GAAGrvB,CAAC,IAAI,GAAG,GAAGA,CAAC,IAAK,CAAC,GAAG+C,CAAC,CAAE,GAAG/C,CAAC,GAAG+C,CAAC,GAAK/C,CAAC,GAAG+C,CAAG;UACtD,IAAMc,CAAC,GAAK,CAAC,GAAG7D,CAAC,GAAKqvB,CAAC;UAEvB,IAAI,CAACniB,CAAC,GAAG60B,OAAO,CAAEl+B,CAAC,EAAEwrB,CAAC,EAAE/iB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE;UACnC,IAAI,CAACD,CAAC,GAAG01B,OAAO,CAAEl+B,CAAC,EAAEwrB,CAAC,EAAE/iB,CAAC,CAAE;UAC3B,IAAI,CAACvI,CAAC,GAAGg+B,OAAO,CAAEl+B,CAAC,EAAEwrB,CAAC,EAAE/iB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE;QAEpC;QAEAmD,eAAe,CAACY,mBAAmB,CAAE,IAAI,EAAER,UAAU,CAAE;QAEvD,OAAO,IAAI;MAEZ;IAAC;MAAAvmB,GAAA;MAAAE,KAAA,EAED,SAAA44C,SAAUG,KAAK,EAAE1yB,UAAU,GAAG1S,cAAc,EAAG;QAE9C,SAASqlC,WAAWA,CAAEC,MAAM,EAAG;UAE9B,IAAKA,MAAM,KAAK30C,SAAS,EAAG;UAE5B,IAAK40C,UAAU,CAAED,MAAM,CAAE,GAAG,CAAC,EAAG;YAE/B1vC,OAAO,CAACC,IAAI,CAAE,kCAAkC,GAAGuvC,KAAK,GAAG,mBAAmB,CAAE;UAEjF;QAED;QAGA,IAAInhC,CAAC;QAEL,IAAKA,CAAC,GAAG,oBAAoB,CAACuhC,IAAI,CAAEJ,KAAK,CAAE,EAAG;UAE7C;;UAEA,IAAIrzB,KAAK;UACT,IAAMvf,IAAI,GAAGyR,CAAC,CAAE,CAAC,CAAE;UACnB,IAAMwhC,UAAU,GAAGxhC,CAAC,CAAE,CAAC,CAAE;UAEzB,QAASzR,IAAI;YAEZ,KAAK,KAAK;YACV,KAAK,MAAM;cAEV,IAAKuf,KAAK,GAAG,8DAA8D,CAACyzB,IAAI,CAAEC,UAAU,CAAE,EAAG;gBAEhG;gBACA,IAAI,CAAC11B,CAAC,GAAG9M,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE6hC,QAAQ,CAAE3zB,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;gBAC1D,IAAI,CAAC7C,CAAC,GAAGjM,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE6hC,QAAQ,CAAE3zB,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;gBAC1D,IAAI,CAACnL,CAAC,GAAG3D,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE6hC,QAAQ,CAAE3zB,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;gBAE1DO,eAAe,CAACY,mBAAmB,CAAE,IAAI,EAAER,UAAU,CAAE;gBAEvD2yB,WAAW,CAAEtzB,KAAK,CAAE,CAAC,CAAE,CAAE;gBAEzB,OAAO,IAAI;cAEZ;cAEA,IAAKA,KAAK,GAAG,oEAAoE,CAACyzB,IAAI,CAAEC,UAAU,CAAE,EAAG;gBAEtG;gBACA,IAAI,CAAC11B,CAAC,GAAG9M,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE6hC,QAAQ,CAAE3zB,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;gBAC1D,IAAI,CAAC7C,CAAC,GAAGjM,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE6hC,QAAQ,CAAE3zB,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;gBAC1D,IAAI,CAACnL,CAAC,GAAG3D,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE6hC,QAAQ,CAAE3zB,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;gBAE1DO,eAAe,CAACY,mBAAmB,CAAE,IAAI,EAAER,UAAU,CAAE;gBAEvD2yB,WAAW,CAAEtzB,KAAK,CAAE,CAAC,CAAE,CAAE;gBAEzB,OAAO,IAAI;cAEZ;cAEA;YAED,KAAK,KAAK;YACV,KAAK,MAAM;cAEV,IAAKA,KAAK,GAAG,oFAAoF,CAACyzB,IAAI,CAAEC,UAAU,CAAE,EAAG;gBAEtH;gBACA,IAAMt2B,CAAC,GAAGo2B,UAAU,CAAExzB,KAAK,CAAE,CAAC,CAAE,CAAE,GAAG,GAAG;gBACxC,IAAMnM,CAAC,GAAG2/B,UAAU,CAAExzB,KAAK,CAAE,CAAC,CAAE,CAAE,GAAG,GAAG;gBACxC,IAAMlP,CAAC,GAAG0iC,UAAU,CAAExzB,KAAK,CAAE,CAAC,CAAE,CAAE,GAAG,GAAG;gBAExCszB,WAAW,CAAEtzB,KAAK,CAAE,CAAC,CAAE,CAAE;gBAEzB,OAAO,IAAI,CAACozB,MAAM,CAAEh2B,CAAC,EAAEvJ,CAAC,EAAE/C,CAAC,EAAE6P,UAAU,CAAE;cAE1C;cAEA;YAED;cAEC9c,OAAO,CAACC,IAAI,CAAE,mCAAmC,GAAGuvC,KAAK,CAAE;UAAC;QAI/D,CAAC,MAAM,IAAKnhC,CAAC,GAAG,mBAAmB,CAACuhC,IAAI,CAAEJ,KAAK,CAAE,EAAG;UAEnD;;UAEA,IAAMF,GAAG,GAAGjhC,CAAC,CAAE,CAAC,CAAE;UAClB,IAAMyhB,IAAI,GAAGwf,GAAG,CAACjzC,MAAM;UAEvB,IAAKyzB,IAAI,KAAK,CAAC,EAAG;YAEjB;YACA,OAAO,IAAI,CAACqf,MAAM,CACjBW,QAAQ,CAAER,GAAG,CAAC3xC,MAAM,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,EAAE,EACpCmyC,QAAQ,CAAER,GAAG,CAAC3xC,MAAM,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,EAAE,EACpCmyC,QAAQ,CAAER,GAAG,CAAC3xC,MAAM,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,EAAE,EACpCmf,UAAU,CACV;UAEF,CAAC,MAAM,IAAKgT,IAAI,KAAK,CAAC,EAAG;YAExB;YACA,OAAO,IAAI,CAACsf,MAAM,CAAEU,QAAQ,CAAER,GAAG,EAAE,EAAE,CAAE,EAAExyB,UAAU,CAAE;UAEtD,CAAC,MAAM;YAEN9c,OAAO,CAACC,IAAI,CAAE,iCAAiC,GAAGuvC,KAAK,CAAE;UAE1D;QAED,CAAC,MAAM,IAAKA,KAAK,IAAIA,KAAK,CAACnzC,MAAM,GAAG,CAAC,EAAG;UAEvC,OAAO,IAAI,CAAC0zC,YAAY,CAAEP,KAAK,EAAE1yB,UAAU,CAAE;QAE9C;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAvmB,GAAA;MAAAE,KAAA,EAED,SAAAs5C,aAAcP,KAAK,EAAE1yB,UAAU,GAAG1S,cAAc,EAAG;QAElD;QACA,IAAMklC,GAAG,GAAGT,cAAc,CAAEW,KAAK,CAACzhC,WAAW,EAAE,CAAE;QAEjD,IAAKuhC,GAAG,KAAKv0C,SAAS,EAAG;UAExB;UACA,IAAI,CAACq0C,MAAM,CAAEE,GAAG,EAAExyB,UAAU,CAAE;QAE/B,CAAC,MAAM;UAEN;UACA9c,OAAO,CAACC,IAAI,CAAE,6BAA6B,GAAGuvC,KAAK,CAAE;QAEtD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAj5C,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,CAAE,IAAI,CAACwd,CAAC,EAAE,IAAI,CAACb,CAAC,EAAE,IAAI,CAACtI,CAAC,CAAE;MAEtD;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAMiJ,KAAK,EAAG;QAEb,IAAI,CAAChC,CAAC,GAAGgC,KAAK,CAAChC,CAAC;QAChB,IAAI,CAACb,CAAC,GAAG6C,KAAK,CAAC7C,CAAC;QAChB,IAAI,CAACtI,CAAC,GAAGmL,KAAK,CAACnL,CAAC;QAEhB,OAAO,IAAI;MAEZ;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAAu5C,iBAAkB7zB,KAAK,EAAG;QAEzB,IAAI,CAAChC,CAAC,GAAG2B,YAAY,CAAEK,KAAK,CAAChC,CAAC,CAAE;QAChC,IAAI,CAACb,CAAC,GAAGwC,YAAY,CAAEK,KAAK,CAAC7C,CAAC,CAAE;QAChC,IAAI,CAACtI,CAAC,GAAG8K,YAAY,CAAEK,KAAK,CAACnL,CAAC,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAAw5C,iBAAkB9zB,KAAK,EAAG;QAEzB,IAAI,CAAChC,CAAC,GAAG4B,YAAY,CAAEI,KAAK,CAAChC,CAAC,CAAE;QAChC,IAAI,CAACb,CAAC,GAAGyC,YAAY,CAAEI,KAAK,CAAC7C,CAAC,CAAE;QAChC,IAAI,CAACtI,CAAC,GAAG+K,YAAY,CAAEI,KAAK,CAACnL,CAAC,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAA2lB,oBAAA,EAAsB;QAErB,IAAI,CAAC4zB,gBAAgB,CAAE,IAAI,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAz5C,GAAA;MAAAE,KAAA,EAED,SAAA6lB,oBAAA,EAAsB;QAErB,IAAI,CAAC2zB,gBAAgB,CAAE,IAAI,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAA15C,GAAA;MAAAE,KAAA,EAED,SAAA+zC,OAAQ1tB,UAAU,GAAG1S,cAAc,EAAG;QAErCsS,eAAe,CAACW,qBAAqB,CAAE6yB,MAAM,CAACh9B,IAAI,CAAE,IAAI,CAAE,EAAE4J,UAAU,CAAE;QAExE,OAAO9O,KAAK,CAAEkiC,MAAM,CAAC/1B,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE,IAAI,EAAE,GAAGnM,KAAK,CAAEkiC,MAAM,CAAC52B,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE,IAAI,CAAC,GAAGtL,KAAK,CAAEkiC,MAAM,CAACl/B,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE,IAAI,CAAC;MAE3H;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAA05C,aAAcrzB,UAAU,GAAG1S,cAAc,EAAG;QAE3C,OAAO,CAAE,QAAQ,GAAG,IAAI,CAACogC,MAAM,CAAE1tB,UAAU,CAAE,CAACstB,QAAQ,CAAE,EAAE,CAAE,EAAGxsC,KAAK,CAAE,CAAE,CAAC,CAAE;MAE5E;IAAC;MAAArH,GAAA;MAAAE,KAAA,EAED,SAAA25C,OAAQnxC,MAAM,EAAE6d,UAAU,GAAGJ,eAAe,CAACG,iBAAiB,EAAG;QAEhE;;QAEAH,eAAe,CAACW,qBAAqB,CAAE6yB,MAAM,CAACh9B,IAAI,CAAE,IAAI,CAAE,EAAE4J,UAAU,CAAE;QAExE,IAAM3C,CAAC,GAAG+1B,MAAM,CAAC/1B,CAAC;UAAEb,CAAC,GAAG42B,MAAM,CAAC52B,CAAC;UAAEtI,CAAC,GAAGk/B,MAAM,CAACl/B,CAAC;QAE9C,IAAM9C,GAAG,GAAGb,IAAI,CAACa,GAAG,CAAEiM,CAAC,EAAEb,CAAC,EAAEtI,CAAC,CAAE;QAC/B,IAAM/C,GAAG,GAAGZ,IAAI,CAACY,GAAG,CAAEkM,CAAC,EAAEb,CAAC,EAAEtI,CAAC,CAAE;QAE/B,IAAIq/B,GAAG,EAAEC,UAAU;QACnB,IAAMC,SAAS,GAAG,CAAEtiC,GAAG,GAAGC,GAAG,IAAK,GAAG;QAErC,IAAKD,GAAG,KAAKC,GAAG,EAAG;UAElBmiC,GAAG,GAAG,CAAC;UACPC,UAAU,GAAG,CAAC;QAEf,CAAC,MAAM;UAEN,IAAMtc,KAAK,GAAG9lB,GAAG,GAAGD,GAAG;UAEvBqiC,UAAU,GAAGC,SAAS,IAAI,GAAG,GAAGvc,KAAK,IAAK9lB,GAAG,GAAGD,GAAG,CAAE,GAAG+lB,KAAK,IAAK,CAAC,GAAG9lB,GAAG,GAAGD,GAAG,CAAE;UAEjF,QAASC,GAAG;YAEX,KAAKiM,CAAC;cAAEk2B,GAAG,GAAG,CAAE/2B,CAAC,GAAGtI,CAAC,IAAKgjB,KAAK,IAAK1a,CAAC,GAAGtI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE;cAAE;YACrD,KAAKsI,CAAC;cAAE+2B,GAAG,GAAG,CAAEr/B,CAAC,GAAGmJ,CAAC,IAAK6Z,KAAK,GAAG,CAAC;cAAE;YACrC,KAAKhjB,CAAC;cAAEq/B,GAAG,GAAG,CAAEl2B,CAAC,GAAGb,CAAC,IAAK0a,KAAK,GAAG,CAAC;cAAE;UAAM;UAI5Cqc,GAAG,IAAI,CAAC;QAET;QAEApxC,MAAM,CAACsa,CAAC,GAAG82B,GAAG;QACdpxC,MAAM,CAAC+Q,CAAC,GAAGsgC,UAAU;QACrBrxC,MAAM,CAACgO,CAAC,GAAGsjC,SAAS;QAEpB,OAAOtxC,MAAM;MAEd;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAA+5C,OAAQvxC,MAAM,EAAE6d,UAAU,GAAGJ,eAAe,CAACG,iBAAiB,EAAG;QAEhEH,eAAe,CAACW,qBAAqB,CAAE6yB,MAAM,CAACh9B,IAAI,CAAE,IAAI,CAAE,EAAE4J,UAAU,CAAE;QAExE7d,MAAM,CAACkb,CAAC,GAAG+1B,MAAM,CAAC/1B,CAAC;QACnBlb,MAAM,CAACqa,CAAC,GAAG42B,MAAM,CAAC52B,CAAC;QACnBra,MAAM,CAAC+R,CAAC,GAAGk/B,MAAM,CAACl/B,CAAC;QAEnB,OAAO/R,MAAM;MAEd;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAAg6C,SAAU3zB,UAAU,GAAG1S,cAAc,EAAG;QAEvCsS,eAAe,CAACW,qBAAqB,CAAE6yB,MAAM,CAACh9B,IAAI,CAAE,IAAI,CAAE,EAAE4J,UAAU,CAAE;QAExE,IAAM3C,CAAC,GAAG+1B,MAAM,CAAC/1B,CAAC;UAAEb,CAAC,GAAG42B,MAAM,CAAC52B,CAAC;UAAEtI,CAAC,GAAGk/B,MAAM,CAACl/B,CAAC;QAE9C,IAAK8L,UAAU,KAAK1S,cAAc,EAAG;UAEpC;UACA,gBAAAgT,MAAA,CAAiBN,UAAU,OAAAM,MAAA,CAAMjD,CAAC,CAACu2B,OAAO,CAAE,CAAC,CAAE,OAAAtzB,MAAA,CAAM9D,CAAC,CAACo3B,OAAO,CAAE,CAAC,CAAE,OAAAtzB,MAAA,CAAMpM,CAAC,CAAC0/B,OAAO,CAAE,CAAC,CAAE;QAExF;QAEA,cAAAtzB,MAAA,CAAgBjD,CAAC,GAAG,GAAG,GAAK,CAAC,OAAAiD,MAAA,CAAM9D,CAAC,GAAG,GAAG,GAAK,CAAC,OAAA8D,MAAA,CAAMpM,CAAC,GAAG,GAAG,GAAK,CAAC;MAEpE;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAAk6C,UAAWp3B,CAAC,EAAEvJ,CAAC,EAAE/C,CAAC,EAAG;QAEpB,IAAI,CAACmjC,MAAM,CAAEtB,KAAK,CAAE;QAEpBA,KAAK,CAACv1B,CAAC,IAAIA,CAAC;QAAEu1B,KAAK,CAAC9+B,CAAC,IAAIA,CAAC;QAAE8+B,KAAK,CAAC7hC,CAAC,IAAIA,CAAC;QAExC,IAAI,CAACsiC,MAAM,CAAET,KAAK,CAACv1B,CAAC,EAAEu1B,KAAK,CAAC9+B,CAAC,EAAE8+B,KAAK,CAAC7hC,CAAC,CAAE;QAExC,OAAO,IAAI;MAEZ;IAAC;MAAA1W,GAAA;MAAAE,KAAA,EAED,SAAA2c,IAAK+I,KAAK,EAAG;QAEZ,IAAI,CAAChC,CAAC,IAAIgC,KAAK,CAAChC,CAAC;QACjB,IAAI,CAACb,CAAC,IAAI6C,KAAK,CAAC7C,CAAC;QACjB,IAAI,CAACtI,CAAC,IAAImL,KAAK,CAACnL,CAAC;QAEjB,OAAO,IAAI;MAEZ;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAAm6C,UAAWC,MAAM,EAAEC,MAAM,EAAG;QAE3B,IAAI,CAAC32B,CAAC,GAAG02B,MAAM,CAAC12B,CAAC,GAAG22B,MAAM,CAAC32B,CAAC;QAC5B,IAAI,CAACb,CAAC,GAAGu3B,MAAM,CAACv3B,CAAC,GAAGw3B,MAAM,CAACx3B,CAAC;QAC5B,IAAI,CAACtI,CAAC,GAAG6/B,MAAM,CAAC7/B,CAAC,GAAG8/B,MAAM,CAAC9/B,CAAC;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAA4c,UAAWrD,CAAC,EAAG;QAEd,IAAI,CAACmK,CAAC,IAAInK,CAAC;QACX,IAAI,CAACsJ,CAAC,IAAItJ,CAAC;QACX,IAAI,CAACgB,CAAC,IAAIhB,CAAC;QAEX,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAA+c,IAAK2I,KAAK,EAAG;QAEZ,IAAI,CAAChC,CAAC,GAAG9M,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAACiM,CAAC,GAAGgC,KAAK,CAAChC,CAAC,CAAE;QACxC,IAAI,CAACb,CAAC,GAAGjM,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAACoL,CAAC,GAAG6C,KAAK,CAAC7C,CAAC,CAAE;QACxC,IAAI,CAACtI,CAAC,GAAG3D,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAAC8C,CAAC,GAAGmL,KAAK,CAACnL,CAAC,CAAE;QAExC,OAAO,IAAI;MAEZ;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAAkd,SAAUwI,KAAK,EAAG;QAEjB,IAAI,CAAChC,CAAC,IAAIgC,KAAK,CAAChC,CAAC;QACjB,IAAI,CAACb,CAAC,IAAI6C,KAAK,CAAC7C,CAAC;QACjB,IAAI,CAACtI,CAAC,IAAImL,KAAK,CAACnL,CAAC;QAEjB,OAAO,IAAI;MAEZ;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAAmd,eAAgB5D,CAAC,EAAG;QAEnB,IAAI,CAACmK,CAAC,IAAInK,CAAC;QACX,IAAI,CAACsJ,CAAC,IAAItJ,CAAC;QACX,IAAI,CAACgB,CAAC,IAAIhB,CAAC;QAEX,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAAqY,KAAMqN,KAAK,EAAE1G,KAAK,EAAG;QAEpB,IAAI,CAAC0E,CAAC,IAAI,CAAEgC,KAAK,CAAChC,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK1E,KAAK;QACtC,IAAI,CAAC6D,CAAC,IAAI,CAAE6C,KAAK,CAAC7C,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK7D,KAAK;QACtC,IAAI,CAACzE,CAAC,IAAI,CAAEmL,KAAK,CAACnL,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKyE,KAAK;QAEtC,OAAO,IAAI;MAEZ;IAAC;MAAAlf,GAAA;MAAAE,KAAA,EAED,SAAAs6C,WAAYF,MAAM,EAAEC,MAAM,EAAEr7B,KAAK,EAAG;QAEnC,IAAI,CAAC0E,CAAC,GAAG02B,MAAM,CAAC12B,CAAC,GAAG,CAAE22B,MAAM,CAAC32B,CAAC,GAAG02B,MAAM,CAAC12B,CAAC,IAAK1E,KAAK;QACnD,IAAI,CAAC6D,CAAC,GAAGu3B,MAAM,CAACv3B,CAAC,GAAG,CAAEw3B,MAAM,CAACx3B,CAAC,GAAGu3B,MAAM,CAACv3B,CAAC,IAAK7D,KAAK;QACnD,IAAI,CAACzE,CAAC,GAAG6/B,MAAM,CAAC7/B,CAAC,GAAG,CAAE8/B,MAAM,CAAC9/B,CAAC,GAAG6/B,MAAM,CAAC7/B,CAAC,IAAKyE,KAAK;QAEnD,OAAO,IAAI;MAEZ;IAAC;MAAAlf,GAAA;MAAAE,KAAA,EAED,SAAAu6C,QAAS70B,KAAK,EAAE1G,KAAK,EAAG;QAEvB,IAAI,CAAC26B,MAAM,CAAEtB,KAAK,CAAE;QACpB3yB,KAAK,CAACi0B,MAAM,CAAErB,KAAK,CAAE;QAErB,IAAMx1B,CAAC,GAAGzK,IAAI,CAAEggC,KAAK,CAACv1B,CAAC,EAAEw1B,KAAK,CAACx1B,CAAC,EAAE9D,KAAK,CAAE;QACzC,IAAMzF,CAAC,GAAGlB,IAAI,CAAEggC,KAAK,CAAC9+B,CAAC,EAAE++B,KAAK,CAAC/+B,CAAC,EAAEyF,KAAK,CAAE;QACzC,IAAMxI,CAAC,GAAG6B,IAAI,CAAEggC,KAAK,CAAC7hC,CAAC,EAAE8hC,KAAK,CAAC9hC,CAAC,EAAEwI,KAAK,CAAE;QAEzC,IAAI,CAAC85B,MAAM,CAAEh2B,CAAC,EAAEvJ,CAAC,EAAE/C,CAAC,CAAE;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAA1W,GAAA;MAAAE,KAAA,EAED,SAAAsmC,eAAgB5pB,CAAC,EAAG;QAEnB,IAAI,CAACgH,CAAC,GAAGhH,CAAC,CAAC5E,CAAC;QACZ,IAAI,CAAC+K,CAAC,GAAGnG,CAAC,CAACtE,CAAC;QACZ,IAAI,CAACmC,CAAC,GAAGmC,CAAC,CAACqP,CAAC;QAEZ,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAsd,aAAc1F,CAAC,EAAG;QAEjB,IAAM8L,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEb,CAAC,GAAG,IAAI,CAACA,CAAC;UAAEtI,CAAC,GAAG,IAAI,CAACA,CAAC;QACxC,IAAMgD,CAAC,GAAG3F,CAAC,CAAC4F,QAAQ;QAEpB,IAAI,CAACkG,CAAC,GAAGnG,CAAC,CAAE,CAAC,CAAE,GAAGmG,CAAC,GAAGnG,CAAC,CAAE,CAAC,CAAE,GAAGsF,CAAC,GAAGtF,CAAC,CAAE,CAAC,CAAE,GAAGhD,CAAC;QAC7C,IAAI,CAACsI,CAAC,GAAGtF,CAAC,CAAE,CAAC,CAAE,GAAGmG,CAAC,GAAGnG,CAAC,CAAE,CAAC,CAAE,GAAGsF,CAAC,GAAGtF,CAAC,CAAE,CAAC,CAAE,GAAGhD,CAAC;QAC7C,IAAI,CAACA,CAAC,GAAGgD,CAAC,CAAE,CAAC,CAAE,GAAGmG,CAAC,GAAGnG,CAAC,CAAE,CAAC,CAAE,GAAGsF,CAAC,GAAGtF,CAAC,CAAE,CAAC,CAAE,GAAGhD,CAAC;QAE7C,OAAO,IAAI;MAEZ;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQ5E,CAAC,EAAG;QAEX,OAASA,CAAC,CAACkJ,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQlJ,CAAC,CAACqI,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMrI,CAAC,CAACD,CAAC,KAAK,IAAI,CAACA,CAAG;MAEtE;IAAC;MAAAza,GAAA;MAAAE,KAAA,EAED,SAAAqf,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAACoE,CAAC,GAAGnN,KAAK,CAAE+I,MAAM,CAAE;QACxB,IAAI,CAACuD,CAAC,GAAGtM,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAC5B,IAAI,CAAC/E,CAAC,GAAGhE,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAuf,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACoE,CAAC;QACxBnN,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACuD,CAAC;QAC5BtM,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC/E,CAAC;QAE5B,OAAOhE,KAAK;MAEb;IAAC;MAAAzW,GAAA;MAAAE,KAAA,EAED,SAAAwf,oBAAqBC,SAAS,EAAEtJ,KAAK,EAAG;QAEvC,IAAI,CAACuN,CAAC,GAAGjE,SAAS,CAACC,IAAI,CAAEvJ,KAAK,CAAE;QAChC,IAAI,CAAC0M,CAAC,GAAGpD,SAAS,CAACE,IAAI,CAAExJ,KAAK,CAAE;QAChC,IAAI,CAACoE,CAAC,GAAGkF,SAAS,CAAC+N,IAAI,CAAErX,KAAK,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,OAAO,IAAI,CAACyrB,MAAM,EAAE;MAErB;IAAC;MAAAj0C,GAAA,EAAA24C,iBAAA;MAAAz4C,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAED,SAAApG,MAAA;QAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAgf,OAAA06B,SAAA;UAAA,kBAAAA,SAAA,CAAAvzC,IAAA,GAAAuzC,SAAA,CAAA71C,IAAA;YAAA;cAAA61C,SAAA,CAAA71C,IAAA;cAEC,OAAM,IAAI,CAAC+e,CAAC;YAAA;cAAA82B,SAAA,CAAA71C,IAAA;cACZ,OAAM,IAAI,CAACke,CAAC;YAAA;cAAA23B,SAAA,CAAA71C,IAAA;cACZ,OAAM,IAAI,CAAC4V,CAAC;YAAA;YAAA;cAAA,OAAAigC,SAAA,CAAApzC,IAAA;UAAA;QAAA,GAAApH,KAAA;MAAA,CAEZ;IAAA;IAAA,OAAAw4C,KAAA;EAAA,EANEt4C,MAAM,CAACE,QAAQ;EAUnB,IAAMq5C,MAAM,GAAG,aAAc,IAAIjB,KAAK,EAAE;EAExCA,KAAK,CAACiC,KAAK,GAAGrC,cAAc;EAAC,IAEvBsC,iBAAiB,0BAAAC,SAAA;IAAAvxB,SAAA,CAAAsxB,iBAAA,EAAAC,SAAA;IAAA,IAAAC,QAAA,GAAAtxB,YAAA,CAAAoxB,iBAAA;IAEtB,SAAAA,kBAAatN,UAAU,EAAG;MAAA,IAAAyN,OAAA;MAAAzyC,eAAA,OAAAsyC,iBAAA;MAEzBG,OAAA,GAAAD,QAAA,CAAA94C,IAAA;MAEA+4C,OAAA,CAAKC,mBAAmB,GAAG,IAAI;MAE/BD,OAAA,CAAKh5C,IAAI,GAAG,mBAAmB;MAE/Bg5C,OAAA,CAAKn1B,KAAK,GAAG,IAAI8yB,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;;MAEpCqC,OAAA,CAAKvF,GAAG,GAAG,IAAI;MAEfuF,OAAA,CAAKpF,QAAQ,GAAG,IAAI;MACpBoF,OAAA,CAAKnF,iBAAiB,GAAG,GAAG;MAE5BmF,OAAA,CAAKlF,KAAK,GAAG,IAAI;MACjBkF,OAAA,CAAKjF,cAAc,GAAG,GAAG;MAEzBiF,OAAA,CAAKrE,WAAW,GAAG,IAAI;MAEvBqE,OAAA,CAAKrF,QAAQ,GAAG,IAAI;MAEpBqF,OAAA,CAAKlE,MAAM,GAAG,IAAI;MAClBkE,OAAA,CAAKjE,OAAO,GAAGtpC,iBAAiB;MAChCutC,OAAA,CAAK/D,YAAY,GAAG,CAAC;MACrB+D,OAAA,CAAK9D,eAAe,GAAG,IAAI;MAE3B8D,OAAA,CAAKjD,SAAS,GAAG,KAAK;MACtBiD,OAAA,CAAKhD,kBAAkB,GAAG,CAAC;MAC3BgD,OAAA,CAAK/C,gBAAgB,GAAG,OAAO;MAC/B+C,OAAA,CAAK9C,iBAAiB,GAAG,OAAO;MAEhC8C,OAAA,CAAK5C,GAAG,GAAG,IAAI;MAEf4C,OAAA,CAAKjH,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAyN,OAAA;IAE9B;IAACjyC,YAAA,CAAA8xC,iBAAA;MAAA56C,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAN,iBAAA,CAAAj7C,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC3E,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAE/B,IAAI,CAAC4vB,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QAErB,IAAI,CAACG,QAAQ,GAAGprB,MAAM,CAACorB,QAAQ;QAC/B,IAAI,CAACC,iBAAiB,GAAGrrB,MAAM,CAACqrB,iBAAiB;QAEjD,IAAI,CAACC,KAAK,GAAGtrB,MAAM,CAACsrB,KAAK;QACzB,IAAI,CAACC,cAAc,GAAGvrB,MAAM,CAACurB,cAAc;QAE3C,IAAI,CAACY,WAAW,GAAGnsB,MAAM,CAACmsB,WAAW;QAErC,IAAI,CAAChB,QAAQ,GAAGnrB,MAAM,CAACmrB,QAAQ;QAE/B,IAAI,CAACmB,MAAM,GAAGtsB,MAAM,CAACssB,MAAM;QAC3B,IAAI,CAACC,OAAO,GAAGvsB,MAAM,CAACusB,OAAO;QAC7B,IAAI,CAACE,YAAY,GAAGzsB,MAAM,CAACysB,YAAY;QACvC,IAAI,CAACC,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;QAE7C,IAAI,CAACa,SAAS,GAAGvtB,MAAM,CAACutB,SAAS;QACjC,IAAI,CAACC,kBAAkB,GAAGxtB,MAAM,CAACwtB,kBAAkB;QACnD,IAAI,CAACC,gBAAgB,GAAGztB,MAAM,CAACytB,gBAAgB;QAC/C,IAAI,CAACC,iBAAiB,GAAG1tB,MAAM,CAAC0tB,iBAAiB;QAEjD,IAAI,CAACE,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QAErB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAyC,iBAAA;EAAA,EAxE8B5J,QAAQ,GA4ExC;EAEA,IAAMmK,OAAO,GAAG,aAAcC,eAAe,EAAE;EAE/C,SAASA,eAAeA,CAAA,EAAG;IAE1B;;IAEA,IAAMh2B,MAAM,GAAG,IAAIi2B,WAAW,CAAE,CAAC,CAAE;IACnC,IAAMC,SAAS,GAAG,IAAI9/B,YAAY,CAAE4J,MAAM,CAAE;IAC5C,IAAMm2B,UAAU,GAAG,IAAIt2B,WAAW,CAAEG,MAAM,CAAE;IAE5C,IAAMo2B,SAAS,GAAG,IAAIv2B,WAAW,CAAE,GAAG,CAAE;IACxC,IAAMw2B,UAAU,GAAG,IAAIx2B,WAAW,CAAE,GAAG,CAAE;IAEzC,KAAM,IAAIlf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAGA,CAAC,EAAG;MAEhC,IAAM0X,CAAC,GAAG1X,CAAC,GAAG,GAAG;;MAEjB;;MAEA,IAAK0X,CAAC,GAAG,CAAE,EAAE,EAAG;QAEf+9B,SAAS,CAAEz1C,CAAC,CAAE,GAAG,MAAM;QACvBy1C,SAAS,CAAEz1C,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;QAC/B01C,UAAU,CAAE11C,CAAC,CAAE,GAAG,EAAE;QACpB01C,UAAU,CAAE11C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;QAE5B;MAED,CAAC,MAAM,IAAK0X,CAAC,GAAG,CAAE,EAAE,EAAG;QAEtB+9B,SAAS,CAAEz1C,CAAC,CAAE,GAAG,MAAM,IAAM,CAAE0X,CAAC,GAAG,EAAI;QACvC+9B,SAAS,CAAEz1C,CAAC,GAAG,KAAK,CAAE,GAAK,MAAM,IAAM,CAAE0X,CAAC,GAAG,EAAI,GAAK,MAAM;QAC5Dg+B,UAAU,CAAE11C,CAAC,CAAE,GAAG,CAAE0X,CAAC,GAAG,CAAC;QACzBg+B,UAAU,CAAE11C,CAAC,GAAG,KAAK,CAAE,GAAG,CAAE0X,CAAC,GAAG,CAAC;;QAEjC;MAED,CAAC,MAAM,IAAKA,CAAC,IAAI,EAAE,EAAG;QAErB+9B,SAAS,CAAEz1C,CAAC,CAAE,GAAK0X,CAAC,GAAG,EAAE,IAAM,EAAE;QACjC+9B,SAAS,CAAEz1C,CAAC,GAAG,KAAK,CAAE,GAAO0X,CAAC,GAAG,EAAE,IAAM,EAAE,GAAK,MAAM;QACtDg+B,UAAU,CAAE11C,CAAC,CAAE,GAAG,EAAE;QACpB01C,UAAU,CAAE11C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;QAE5B;MAED,CAAC,MAAM,IAAK0X,CAAC,GAAG,GAAG,EAAG;QAErB+9B,SAAS,CAAEz1C,CAAC,CAAE,GAAG,MAAM;QACvBy1C,SAAS,CAAEz1C,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;QAC/B01C,UAAU,CAAE11C,CAAC,CAAE,GAAG,EAAE;QACpB01C,UAAU,CAAE11C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;QAE5B;MAED,CAAC,MAAM;QAENy1C,SAAS,CAAEz1C,CAAC,CAAE,GAAG,MAAM;QACvBy1C,SAAS,CAAEz1C,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;QAC/B01C,UAAU,CAAE11C,CAAC,CAAE,GAAG,EAAE;QACpB01C,UAAU,CAAE11C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;MAE7B;IAED;;IAEA;;IAEA,IAAM21C,aAAa,GAAG,IAAIz2B,WAAW,CAAE,IAAI,CAAE;IAC7C,IAAM02B,aAAa,GAAG,IAAI12B,WAAW,CAAE,EAAE,CAAE;IAC3C,IAAM22B,WAAW,GAAG,IAAI32B,WAAW,CAAE,EAAE,CAAE;IAEzC,KAAM,IAAIlf,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,EAAE,EAAGA,GAAC,EAAG;MAEjC,IAAI+R,CAAC,GAAG/R,GAAC,IAAI,EAAE,CAAC,CAAC;MACjB,IAAI0X,EAAC,GAAG,CAAC,CAAC,CAAC;;MAEX;MACA,OAAQ,CAAE3F,CAAC,GAAG,UAAU,MAAO,CAAC,EAAG;QAElCA,CAAC,KAAK,CAAC;QACP2F,EAAC,IAAI,UAAU,CAAC,CAAC;MAElB;;MAEA3F,CAAC,IAAI,CAAE,UAAU,CAAC,CAAC;MACnB2F,EAAC,IAAI,UAAU,CAAC,CAAC;;MAEjBi+B,aAAa,CAAE31C,GAAC,CAAE,GAAG+R,CAAC,GAAG2F,EAAC;IAE3B;IAEA,KAAM,IAAI1X,GAAC,GAAG,IAAI,EAAEA,GAAC,GAAG,IAAI,EAAE,EAAGA,GAAC,EAAG;MAEpC21C,aAAa,CAAE31C,GAAC,CAAE,GAAG,UAAU,IAAOA,GAAC,GAAG,IAAI,IAAM,EAAE,CAAE;IAEzD;IAEA,KAAM,IAAIA,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,EAAE,EAAE,EAAGA,GAAC,EAAG;MAE/B41C,aAAa,CAAE51C,GAAC,CAAE,GAAGA,GAAC,IAAI,EAAE;IAE7B;IAEA41C,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;IAChCA,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;IAEhC,KAAM,IAAI51C,GAAC,GAAG,EAAE,EAAEA,GAAC,GAAG,EAAE,EAAE,EAAGA,GAAC,EAAG;MAEhC41C,aAAa,CAAE51C,GAAC,CAAE,GAAG,UAAU,IAAOA,GAAC,GAAG,EAAE,IAAM,EAAE,CAAE;IAEvD;IAEA41C,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;IAEhC,KAAM,IAAI51C,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,EAAE,EAAE,EAAGA,IAAC,EAAG;MAE/B,IAAKA,IAAC,KAAK,EAAE,EAAG;QAEf61C,WAAW,CAAE71C,IAAC,CAAE,GAAG,IAAI;MAExB;IAED;IAEA,OAAO;MACNu1C,SAAS,EAAEA,SAAS;MACpBC,UAAU,EAAEA,UAAU;MACtBC,SAAS,EAAEA,SAAS;MACpBC,UAAU,EAAEA,UAAU;MACtBC,aAAa,EAAEA,aAAa;MAC5BC,aAAa,EAAEA,aAAa;MAC5BC,WAAW,EAAEA;IACd,CAAC;EAEF;;EAEA;;EAEA,SAASC,WAAWA,CAAE/0C,GAAG,EAAG;IAE3B,IAAKgQ,IAAI,CAACgC,GAAG,CAAEhS,GAAG,CAAE,GAAG,KAAK,EAAG2C,OAAO,CAACC,IAAI,CAAE,oDAAoD,CAAE;IAEnG5C,GAAG,GAAG2Q,KAAK,CAAE3Q,GAAG,EAAE,CAAE,KAAK,EAAE,KAAK,CAAE;IAElCq0C,OAAO,CAACG,SAAS,CAAE,CAAC,CAAE,GAAGx0C,GAAG;IAC5B,IAAMgc,CAAC,GAAGq4B,OAAO,CAACI,UAAU,CAAE,CAAC,CAAE;IACjC,IAAM99B,CAAC,GAAKqF,CAAC,IAAI,EAAE,GAAK,KAAK;IAC7B,OAAOq4B,OAAO,CAACK,SAAS,CAAE/9B,CAAC,CAAE,IAAK,CAAEqF,CAAC,GAAG,UAAU,KAAMq4B,OAAO,CAACM,UAAU,CAAEh+B,CAAC,CAAE,CAAE;EAElF;;EAEA;;EAEA,SAASq+B,aAAaA,CAAEh1C,GAAG,EAAG;IAE7B,IAAMgR,CAAC,GAAGhR,GAAG,IAAI,EAAE;IACnBq0C,OAAO,CAACI,UAAU,CAAE,CAAC,CAAE,GAAGJ,OAAO,CAACO,aAAa,CAAEP,OAAO,CAACS,WAAW,CAAE9jC,CAAC,CAAE,IAAKhR,GAAG,GAAG,KAAK,CAAE,CAAE,GAAGq0C,OAAO,CAACQ,aAAa,CAAE7jC,CAAC,CAAE;IAC1H,OAAOqjC,OAAO,CAACG,SAAS,CAAE,CAAC,CAAE;EAE9B;EAEA,IAAMS,SAAS,GAAG;IACjBF,WAAW,EAAEA,WAAW;IACxBC,aAAa,EAAEA;EAChB,CAAC;EAED,IAAME,SAAS,GAAG,aAAc,IAAI1mB,OAAO,EAAE;EAC7C,IAAM2mB,UAAU,GAAG,aAAc,IAAIjgC,OAAO,EAAE;EAAC,IAEzCkgC,eAAe;IAEpB,SAAAA,gBAAazlC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,GAAG,KAAK,EAAG;MAAA9zC,eAAA,OAAA4zC,eAAA;MAElD,IAAKpzB,KAAK,CAACC,OAAO,CAAEtS,KAAK,CAAE,EAAG;QAE7B,MAAM,IAAI/R,SAAS,CAAE,uDAAuD,CAAE;MAE/E;MAEA,IAAI,CAAC23C,iBAAiB,GAAG,IAAI;MAE7B,IAAI,CAACh2C,IAAI,GAAG,EAAE;MAEd,IAAI,CAACoQ,KAAK,GAAGA,KAAK;MAClB,IAAI,CAAC0lC,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAAC7rB,KAAK,GAAG7Z,KAAK,KAAKjS,SAAS,GAAGiS,KAAK,CAAC3Q,MAAM,GAAGq2C,QAAQ,GAAG,CAAC;MAC9D,IAAI,CAACC,UAAU,GAAGA,UAAU;MAE5B,IAAI,CAACE,KAAK,GAAGtnC,eAAe;MAC5B,IAAI,CAACunC,WAAW,GAAG;QAAE/8B,MAAM,EAAE,CAAC;QAAE8Q,KAAK,EAAE,CAAE;MAAE,CAAC;MAE5C,IAAI,CAAC/H,OAAO,GAAG,CAAC;IAEjB;IAACzf,YAAA,CAAAozC,eAAA;MAAAl8C,GAAA;MAAAE,KAAA,EAED,SAAAs8C,iBAAA,EAAmB,CAAC;IAAC;MAAAx8C,GAAA;MAAAsb,GAAA,EAErB,SAAAA,IAAiBpb,KAAK,EAAG;QAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAACqoB,OAAO,EAAG;MAEtC;IAAC;MAAAvoB,GAAA;MAAAE,KAAA,EAED,SAAAu8C,SAAUv8C,KAAK,EAAG;QAEjB,IAAI,CAACo8C,KAAK,GAAGp8C,KAAK;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd,IAAI,CAAClkB,IAAI,GAAGkkB,MAAM,CAAClkB,IAAI;QACvB,IAAI,CAACoQ,KAAK,GAAG,IAAI8T,MAAM,CAAC9T,KAAK,CAACrQ,WAAW,CAAEmkB,MAAM,CAAC9T,KAAK,CAAE;QACzD,IAAI,CAAC0lC,QAAQ,GAAG5xB,MAAM,CAAC4xB,QAAQ;QAC/B,IAAI,CAAC7rB,KAAK,GAAG/F,MAAM,CAAC+F,KAAK;QACzB,IAAI,CAAC8rB,UAAU,GAAG7xB,MAAM,CAAC6xB,UAAU;QAEnC,IAAI,CAACE,KAAK,GAAG/xB,MAAM,CAAC+xB,KAAK;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAAt8C,GAAA;MAAAE,KAAA,EAED,SAAAw8C,OAAQC,MAAM,EAAEh9B,SAAS,EAAEi9B,MAAM,EAAG;QAEnCD,MAAM,IAAI,IAAI,CAACR,QAAQ;QACvBS,MAAM,IAAIj9B,SAAS,CAACw8B,QAAQ;QAE5B,KAAM,IAAIp2C,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAACylC,QAAQ,EAAEp2C,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEjD,IAAI,CAAC0Q,KAAK,CAAEkmC,MAAM,GAAG52C,CAAC,CAAE,GAAG4Z,SAAS,CAAClJ,KAAK,CAAEmmC,MAAM,GAAG72C,CAAC,CAAE;QAEzD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAA28C,UAAWpmC,KAAK,EAAG;QAElB,IAAI,CAACA,KAAK,CAAC6E,GAAG,CAAE7E,KAAK,CAAE;QAEvB,OAAO,IAAI;MAEZ;IAAC;MAAAzW,GAAA;MAAAE,KAAA,EAED,SAAAsd,aAAc1F,CAAC,EAAG;QAEjB,IAAK,IAAI,CAACqkC,QAAQ,KAAK,CAAC,EAAG;UAE1B,KAAM,IAAIp2C,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC4Z,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAE9Ck2C,UAAU,CAACv8B,mBAAmB,CAAE,IAAI,EAAE3Z,CAAC,CAAE;YACzCk2C,UAAU,CAACz+B,YAAY,CAAE1F,CAAC,CAAE;YAE5B,IAAI,CAACglC,KAAK,CAAE/2C,CAAC,EAAEk2C,UAAU,CAACjkC,CAAC,EAAEikC,UAAU,CAAC3jC,CAAC,CAAE;UAE5C;QAED,CAAC,MAAM,IAAK,IAAI,CAAC6jC,QAAQ,KAAK,CAAC,EAAG;UAEjC,KAAM,IAAIp2C,IAAC,GAAG,CAAC,EAAE2Q,GAAC,GAAG,IAAI,CAAC4Z,KAAK,EAAEvqB,IAAC,GAAG2Q,GAAC,EAAE3Q,IAAC,EAAG,EAAG;YAE9Ci2C,SAAS,CAACt8B,mBAAmB,CAAE,IAAI,EAAE3Z,IAAC,CAAE;YACxCi2C,SAAS,CAACx+B,YAAY,CAAE1F,CAAC,CAAE;YAE3B,IAAI,CAACilC,MAAM,CAAEh3C,IAAC,EAAEi2C,SAAS,CAAChkC,CAAC,EAAEgkC,SAAS,CAAC1jC,CAAC,EAAE0jC,SAAS,CAAC/vB,CAAC,CAAE;UAExD;QAED;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAosB,aAAcxU,CAAC,EAAG;QAEjB,KAAM,IAAI/R,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC4Z,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAE9Ci2C,SAAS,CAACt8B,mBAAmB,CAAE,IAAI,EAAE3Z,CAAC,CAAE;UAExCi2C,SAAS,CAAC1vB,YAAY,CAAExU,CAAC,CAAE;UAE3B,IAAI,CAACilC,MAAM,CAAEh3C,CAAC,EAAEi2C,SAAS,CAAChkC,CAAC,EAAEgkC,SAAS,CAAC1jC,CAAC,EAAE0jC,SAAS,CAAC/vB,CAAC,CAAE;QAExD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA41B,kBAAmBhe,CAAC,EAAG;QAEtB,KAAM,IAAI/R,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC4Z,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAE9Ci2C,SAAS,CAACt8B,mBAAmB,CAAE,IAAI,EAAE3Z,CAAC,CAAE;UAExCi2C,SAAS,CAAClmB,iBAAiB,CAAEhe,CAAC,CAAE;UAEhC,IAAI,CAACilC,MAAM,CAAEh3C,CAAC,EAAEi2C,SAAS,CAAChkC,CAAC,EAAEgkC,SAAS,CAAC1jC,CAAC,EAAE0jC,SAAS,CAAC/vB,CAAC,CAAE;QAExD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA42B,mBAAoBhf,CAAC,EAAG;QAEvB,KAAM,IAAI/R,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC4Z,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAE9Ci2C,SAAS,CAACt8B,mBAAmB,CAAE,IAAI,EAAE3Z,CAAC,CAAE;UAExCi2C,SAAS,CAACllB,kBAAkB,CAAEhf,CAAC,CAAE;UAEjC,IAAI,CAACilC,MAAM,CAAEh3C,CAAC,EAAEi2C,SAAS,CAAChkC,CAAC,EAAEgkC,SAAS,CAAC1jC,CAAC,EAAE0jC,SAAS,CAAC/vB,CAAC,CAAE;QAExD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKpb,KAAK,EAAEsf,MAAM,GAAG,CAAC,EAAG;QAExB;QACA,IAAI,CAAC/I,KAAK,CAAC6E,GAAG,CAAEpb,KAAK,EAAEsf,MAAM,CAAE;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAA0f,KAAMvJ,KAAK,EAAG;QAEb,IAAI2B,CAAC,GAAG,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,CAAE;QAE3C,IAAK,IAAI,CAACC,UAAU,EAAGpkC,CAAC,GAAGuD,WAAW,CAAEvD,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;QAEvD,OAAOuB,CAAC;MAET;IAAC;MAAAhY,GAAA;MAAAE,KAAA,EAED,SAAAoc,KAAMjG,KAAK,EAAE2B,CAAC,EAAG;QAEhB,IAAK,IAAI,CAACokC,UAAU,EAAGpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;QAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,CAAE,GAAGnkC,CAAC;QAEvC,OAAO,IAAI;MAEZ;IAAC;MAAAhY,GAAA;MAAAE,KAAA,EAED,SAAA2f,KAAMxJ,KAAK,EAAG;QAEb,IAAIiC,CAAC,GAAG,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE;QAE/C,IAAK,IAAI,CAACC,UAAU,EAAG9jC,CAAC,GAAGiD,WAAW,CAAEjD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;QAEvD,OAAO6B,CAAC;MAET;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAqc,KAAMlG,KAAK,EAAEiC,CAAC,EAAG;QAEhB,IAAK,IAAI,CAAC8jC,UAAU,EAAG9jC,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;QAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE,GAAG7jC,CAAC;QAE3C,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAwtB,KAAMrX,KAAK,EAAG;QAEb,IAAI4V,CAAC,GAAG,IAAI,CAACxV,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE;QAE/C,IAAK,IAAI,CAACC,UAAU,EAAGnwB,CAAC,GAAG1Q,WAAW,CAAE0Q,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;QAEvD,OAAOwV,CAAC;MAET;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAksB,KAAM/V,KAAK,EAAE4V,CAAC,EAAG;QAEhB,IAAK,IAAI,CAACmwB,UAAU,EAAGnwB,CAAC,GAAGpQ,SAAS,CAAEoQ,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;QAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE,GAAGlwB,CAAC;QAE3C,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAytB,KAAMtX,KAAK,EAAG;QAEb,IAAI6V,CAAC,GAAG,IAAI,CAACzV,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE;QAE/C,IAAK,IAAI,CAACC,UAAU,EAAGlwB,CAAC,GAAG3Q,WAAW,CAAE2Q,CAAC,EAAE,IAAI,CAACzV,KAAK,CAAE;QAEvD,OAAOyV,CAAC;MAET;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAmsB,KAAMhW,KAAK,EAAE6V,CAAC,EAAG;QAEhB,IAAK,IAAI,CAACkwB,UAAU,EAAGlwB,CAAC,GAAGrQ,SAAS,CAAEqQ,CAAC,EAAE,IAAI,CAACzV,KAAK,CAAE;QAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE,GAAGjwB,CAAC;QAE3C,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA48C,MAAOzmC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAG;QAEpBjC,KAAK,IAAI,IAAI,CAAC8lC,QAAQ;QAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;UAEtBpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;UAC9B6B,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;QAE/B;QAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;QAC3B,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;QAE3B,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA68C,OAAQ1mC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAExB5V,KAAK,IAAI,IAAI,CAAC8lC,QAAQ;QAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;UAEtBpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;UAC9B6B,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;UAC9BwV,CAAC,GAAGpQ,SAAS,CAAEoQ,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;QAE/B;QAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;QAC3B,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;QAC3B,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG4V,CAAC;QAE3B,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA88C,QAAS3mC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAEC,CAAC,EAAG;QAE5B7V,KAAK,IAAI,IAAI,CAAC8lC,QAAQ;QAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;UAEtBpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;UAC9B6B,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;UAC9BwV,CAAC,GAAGpQ,SAAS,CAAEoQ,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;UAC9ByV,CAAC,GAAGrQ,SAAS,CAAEqQ,CAAC,EAAE,IAAI,CAACzV,KAAK,CAAE;QAE/B;QAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;QAC3B,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;QAC3B,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG4V,CAAC;QAC3B,IAAI,CAACxV,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG6V,CAAC;QAE3B,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA+8C,SAAUjpB,QAAQ,EAAG;QAEpB,IAAI,CAACwoB,gBAAgB,GAAGxoB,QAAQ;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAh0B,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,CAAE,IAAI,CAACqQ,KAAK,EAAE,IAAI,CAAC0lC,QAAQ,CAAE,CAACx/B,IAAI,CAAE,IAAI,CAAE;MAEtE;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAG;UACZ+zB,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBp6C,IAAI,EAAE,IAAI,CAAC0U,KAAK,CAACrQ,WAAW,CAACC,IAAI;UACjCoQ,KAAK,EAAEqS,KAAK,CAACI,IAAI,CAAE,IAAI,CAACzS,KAAK,CAAE;UAC/B2lC,UAAU,EAAE,IAAI,CAACA;QAClB,CAAC;QAED,IAAK,IAAI,CAAC/1C,IAAI,KAAK,EAAE,EAAG+hB,IAAI,CAAC/hB,IAAI,GAAG,IAAI,CAACA,IAAI;QAC7C,IAAK,IAAI,CAACi2C,KAAK,KAAKtnC,eAAe,EAAGoT,IAAI,CAACk0B,KAAK,GAAG,IAAI,CAACA,KAAK;QAC7D,IAAK,IAAI,CAACC,WAAW,CAAC/8B,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC+8B,WAAW,CAACjsB,KAAK,KAAK,CAAE,CAAC,EAAGlI,IAAI,CAACm0B,WAAW,GAAG,IAAI,CAACA,WAAW;QAE1G,OAAOn0B,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAg9C,gBAAA,EAAkB;QAAE;;QAEnBzzC,OAAO,CAAChG,KAAK,CAAE,+DAA+D,CAAE;MAEjF;IAAC;MAAAzD,GAAA;MAAAE,KAAA,EAED,SAAAi9C,kBAAA,EAAoB;QAAE;;QAErB1zC,OAAO,CAAChG,KAAK,CAAE,iEAAiE,CAAE;MAEnF;IAAC;MAAAzD,GAAA;MAAAE,KAAA,EAED,SAAAk9C,kBAAA,EAAoB;QAAE;;QAErB3zC,OAAO,CAAChG,KAAK,CAAE,iEAAiE,CAAE;MAEnF;IAAC;MAAAzD,GAAA;MAAAE,KAAA,EAED,SAAAm9C,kBAAA,EAAoB;QAAE;;QAErB5zC,OAAO,CAAChG,KAAK,CAAE,iEAAiE,CAAE;MAEnF;IAAC;IAAA,OAAAy4C,eAAA;EAAA,KAIF;EAAA,IAEMoB,mBAAmB,0BAAAC,gBAAA;IAAAj0B,SAAA,CAAAg0B,mBAAA,EAAAC,gBAAA;IAAA,IAAAC,QAAA,GAAAh0B,YAAA,CAAA8zB,mBAAA;IAExB,SAAAA,oBAAa7mC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAG;MAAA9zC,eAAA,OAAAg1C,mBAAA;MAAA,OAAAE,QAAA,CAAAx7C,IAAA,OAEnC,IAAI4Z,SAAS,CAAEnF,KAAK,CAAE,EAAE0lC,QAAQ,EAAEC,UAAU;IAEpD;IAAC,OAAAtzC,YAAA,CAAAw0C,mBAAA;EAAA,EANgCpB,eAAe;EAAA,IAU3CuB,oBAAoB,0BAAAC,iBAAA;IAAAp0B,SAAA,CAAAm0B,oBAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAAn0B,YAAA,CAAAi0B,oBAAA;IAEzB,SAAAA,qBAAahnC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAG;MAAA9zC,eAAA,OAAAm1C,oBAAA;MAAA,OAAAE,QAAA,CAAA37C,IAAA,OAEnC,IAAI0Z,UAAU,CAAEjF,KAAK,CAAE,EAAE0lC,QAAQ,EAAEC,UAAU;IAErD;IAAC,OAAAtzC,YAAA,CAAA20C,oBAAA;EAAA,EANiCvB,eAAe;EAAA,IAU5C0B,2BAA2B,0BAAAC,iBAAA;IAAAv0B,SAAA,CAAAs0B,2BAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAAt0B,YAAA,CAAAo0B,2BAAA;IAEhC,SAAAA,4BAAannC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAG;MAAA9zC,eAAA,OAAAs1C,2BAAA;MAAA,OAAAE,QAAA,CAAA97C,IAAA,OAEnC,IAAI+iB,iBAAiB,CAAEtO,KAAK,CAAE,EAAE0lC,QAAQ,EAAEC,UAAU;IAE5D;IAAC,OAAAtzC,YAAA,CAAA80C,2BAAA;EAAA,EANwC1B,eAAe;EAAA,IAUnD6B,oBAAoB,0BAAAC,iBAAA;IAAA10B,SAAA,CAAAy0B,oBAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAAz0B,YAAA,CAAAu0B,oBAAA;IAEzB,SAAAA,qBAAatnC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAG;MAAA9zC,eAAA,OAAAy1C,oBAAA;MAAA,OAAAE,QAAA,CAAAj8C,IAAA,OAEnC,IAAI2Z,UAAU,CAAElF,KAAK,CAAE,EAAE0lC,QAAQ,EAAEC,UAAU;IAErD;IAAC,OAAAtzC,YAAA,CAAAi1C,oBAAA;EAAA,EANiC7B,eAAe;EAAA,IAU5CgC,qBAAqB,0BAAAC,iBAAA;IAAA70B,SAAA,CAAA40B,qBAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAA50B,YAAA,CAAA00B,qBAAA;IAE1B,SAAAA,sBAAaznC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAG;MAAA9zC,eAAA,OAAA41C,qBAAA;MAAA,OAAAE,QAAA,CAAAp8C,IAAA,OAEnC,IAAIyZ,WAAW,CAAEhF,KAAK,CAAE,EAAE0lC,QAAQ,EAAEC,UAAU;IAEtD;IAAC,OAAAtzC,YAAA,CAAAo1C,qBAAA;EAAA,EANkChC,eAAe;EAAA,IAU7CmC,oBAAoB,0BAAAC,iBAAA;IAAAh1B,SAAA,CAAA+0B,oBAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAA/0B,YAAA,CAAA60B,oBAAA;IAEzB,SAAAA,qBAAa5nC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAG;MAAA9zC,eAAA,OAAA+1C,oBAAA;MAAA,OAAAE,QAAA,CAAAv8C,IAAA,OAEnC,IAAIgjB,UAAU,CAAEvO,KAAK,CAAE,EAAE0lC,QAAQ,EAAEC,UAAU;IAErD;IAAC,OAAAtzC,YAAA,CAAAu1C,oBAAA;EAAA,EANiCnC,eAAe;EAAA,IAU5CsC,qBAAqB,0BAAAC,iBAAA;IAAAn1B,SAAA,CAAAk1B,qBAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAAl1B,YAAA,CAAAg1B,qBAAA;IAE1B,SAAAA,sBAAa/nC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAG;MAAA9zC,eAAA,OAAAk2C,qBAAA;MAAA,OAAAE,QAAA,CAAA18C,IAAA,OAEnC,IAAIijB,WAAW,CAAExO,KAAK,CAAE,EAAE0lC,QAAQ,EAAEC,UAAU;IAEtD;IAAC,OAAAtzC,YAAA,CAAA01C,qBAAA;EAAA,EANkCtC,eAAe;EAAA,IAU7CyC,sBAAsB,0BAAAC,iBAAA;IAAAt1B,SAAA,CAAAq1B,sBAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAAr1B,YAAA,CAAAm1B,sBAAA;IAE3B,SAAAA,uBAAaloC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAG;MAAA,IAAA0C,OAAA;MAAAx2C,eAAA,OAAAq2C,sBAAA;MAE1CG,OAAA,GAAAD,QAAA,CAAA78C,IAAA,OAAO,IAAIyZ,WAAW,CAAEhF,KAAK,CAAE,EAAE0lC,QAAQ,EAAEC,UAAU;MAErD0C,OAAA,CAAKC,wBAAwB,GAAG,IAAI;MAAC,OAAAD,OAAA;IAEtC;IAACh2C,YAAA,CAAA61C,sBAAA;MAAA3+C,GAAA;MAAAE,KAAA,EAED,SAAA0f,KAAMvJ,KAAK,EAAG;QAEb,IAAI2B,CAAC,GAAG8jC,aAAa,CAAE,IAAI,CAACrlC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,CAAE,CAAE;QAE5D,IAAK,IAAI,CAACC,UAAU,EAAGpkC,CAAC,GAAGuD,WAAW,CAAEvD,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;QAEvD,OAAOuB,CAAC;MAET;IAAC;MAAAhY,GAAA;MAAAE,KAAA,EAED,SAAAoc,KAAMjG,KAAK,EAAE2B,CAAC,EAAG;QAEhB,IAAK,IAAI,CAACokC,UAAU,EAAGpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;QAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,CAAE,GAAGN,WAAW,CAAE7jC,CAAC,CAAE;QAEtD,OAAO,IAAI;MAEZ;IAAC;MAAAhY,GAAA;MAAAE,KAAA,EAED,SAAA2f,KAAMxJ,KAAK,EAAG;QAEb,IAAIiC,CAAC,GAAGwjC,aAAa,CAAE,IAAI,CAACrlC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE,CAAE;QAEhE,IAAK,IAAI,CAACC,UAAU,EAAG9jC,CAAC,GAAGiD,WAAW,CAAEjD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;QAEvD,OAAO6B,CAAC;MAET;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAqc,KAAMlG,KAAK,EAAEiC,CAAC,EAAG;QAEhB,IAAK,IAAI,CAAC8jC,UAAU,EAAG9jC,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;QAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE,GAAGN,WAAW,CAAEvjC,CAAC,CAAE;QAE1D,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAwtB,KAAMrX,KAAK,EAAG;QAEb,IAAI4V,CAAC,GAAG6vB,aAAa,CAAE,IAAI,CAACrlC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE,CAAE;QAEhE,IAAK,IAAI,CAACC,UAAU,EAAGnwB,CAAC,GAAG1Q,WAAW,CAAE0Q,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;QAEvD,OAAOwV,CAAC;MAET;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAksB,KAAM/V,KAAK,EAAE4V,CAAC,EAAG;QAEhB,IAAK,IAAI,CAACmwB,UAAU,EAAGnwB,CAAC,GAAGpQ,SAAS,CAAEoQ,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;QAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE,GAAGN,WAAW,CAAE5vB,CAAC,CAAE;QAE1D,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAytB,KAAMtX,KAAK,EAAG;QAEb,IAAI6V,CAAC,GAAG4vB,aAAa,CAAE,IAAI,CAACrlC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE,CAAE;QAEhE,IAAK,IAAI,CAACC,UAAU,EAAGlwB,CAAC,GAAG3Q,WAAW,CAAE2Q,CAAC,EAAE,IAAI,CAACzV,KAAK,CAAE;QAEvD,OAAOyV,CAAC;MAET;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAmsB,KAAMhW,KAAK,EAAE6V,CAAC,EAAG;QAEhB,IAAK,IAAI,CAACkwB,UAAU,EAAGlwB,CAAC,GAAGrQ,SAAS,CAAEqQ,CAAC,EAAE,IAAI,CAACzV,KAAK,CAAE;QAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8lC,QAAQ,GAAG,CAAC,CAAE,GAAGN,WAAW,CAAE3vB,CAAC,CAAE;QAE1D,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA48C,MAAOzmC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAG;QAEpBjC,KAAK,IAAI,IAAI,CAAC8lC,QAAQ;QAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;UAEtBpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;UAC9B6B,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;QAE/B;QAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwlC,WAAW,CAAE7jC,CAAC,CAAE;QAC1C,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwlC,WAAW,CAAEvjC,CAAC,CAAE;QAE1C,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA68C,OAAQ1mC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAExB5V,KAAK,IAAI,IAAI,CAAC8lC,QAAQ;QAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;UAEtBpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;UAC9B6B,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;UAC9BwV,CAAC,GAAGpQ,SAAS,CAAEoQ,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;QAE/B;QAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwlC,WAAW,CAAE7jC,CAAC,CAAE;QAC1C,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwlC,WAAW,CAAEvjC,CAAC,CAAE;QAC1C,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwlC,WAAW,CAAE5vB,CAAC,CAAE;QAE1C,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA88C,QAAS3mC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAEC,CAAC,EAAG;QAE5B7V,KAAK,IAAI,IAAI,CAAC8lC,QAAQ;QAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;UAEtBpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;UAC9B6B,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;UAC9BwV,CAAC,GAAGpQ,SAAS,CAAEoQ,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;UAC9ByV,CAAC,GAAGrQ,SAAS,CAAEqQ,CAAC,EAAE,IAAI,CAACzV,KAAK,CAAE;QAE/B;QAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwlC,WAAW,CAAE7jC,CAAC,CAAE;QAC1C,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwlC,WAAW,CAAEvjC,CAAC,CAAE;QAC1C,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwlC,WAAW,CAAE5vB,CAAC,CAAE;QAC1C,IAAI,CAACxV,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwlC,WAAW,CAAE3vB,CAAC,CAAE;QAE1C,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAyyB,sBAAA;EAAA,EApJmCzC,eAAe;EAAA,IAyJ9C8C,sBAAsB,0BAAAC,iBAAA;IAAA31B,SAAA,CAAA01B,sBAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAA11B,YAAA,CAAAw1B,sBAAA;IAE3B,SAAAA,uBAAavoC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAG;MAAA9zC,eAAA,OAAA02C,sBAAA;MAAA,OAAAE,QAAA,CAAAl9C,IAAA,OAEnC,IAAIwZ,YAAY,CAAE/E,KAAK,CAAE,EAAE0lC,QAAQ,EAAEC,UAAU;IAEvD;IAAC,OAAAtzC,YAAA,CAAAk2C,sBAAA;EAAA,EANmC9C,eAAe;EAAA,IAU9CiD,sBAAsB,0BAAAC,kBAAA;IAAA91B,SAAA,CAAA61B,sBAAA,EAAAC,kBAAA;IAAA,IAAAC,QAAA,GAAA71B,YAAA,CAAA21B,sBAAA;IAE3B,SAAAA,uBAAa1oC,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAG;MAAA9zC,eAAA,OAAA62C,sBAAA;MAAA,OAAAE,QAAA,CAAAr9C,IAAA,OAEnC,IAAIkjB,YAAY,CAAEzO,KAAK,CAAE,EAAE0lC,QAAQ,EAAEC,UAAU;IAEvD;IAAC,OAAAtzC,YAAA,CAAAq2C,sBAAA;EAAA,EANmCjD,eAAe;EAUpD,IAAIoD,KAAK,GAAG,CAAC;EAEb,IAAMC,GAAG,GAAG,aAAc,IAAIxe,OAAO,EAAE;EACvC,IAAMye,IAAI,GAAG,aAAc,IAAItX,QAAQ,EAAE;EACzC,IAAMuX,OAAO,GAAG,aAAc,IAAInqB,OAAO,EAAE;EAC3C,IAAMoqB,MAAM,GAAG,aAAc,IAAI9mB,IAAI,EAAE;EACvC,IAAM+mB,gBAAgB,GAAG,aAAc,IAAI/mB,IAAI,EAAE;EACjD,IAAMgnB,SAAS,GAAG,aAAc,IAAItqB,OAAO,EAAE;EAAC,IAExCuqB,cAAc,0BAAAC,iBAAA;IAAAx2B,SAAA,CAAAu2B,cAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAAv2B,YAAA,CAAAq2B,cAAA;IAEnB,SAAAA,eAAA,EAAc;MAAA,IAAAG,OAAA;MAAA13C,eAAA,OAAAu3C,cAAA;MAEbG,OAAA,GAAAD,QAAA,CAAA/9C,IAAA;MAEAg+C,OAAA,CAAKC,gBAAgB,GAAG,IAAI;MAE5BvgD,MAAM,CAACI,cAAc,CAAAwqB,sBAAA,CAAA01B,OAAA,GAAQ,IAAI,EAAE;QAAE9/C,KAAK,EAAEo/C,KAAK;MAAI,CAAC,CAAE;MAExDU,OAAA,CAAKzoC,IAAI,GAAGN,YAAY,EAAE;MAE1B+oC,OAAA,CAAK35C,IAAI,GAAG,EAAE;MACd25C,OAAA,CAAKj+C,IAAI,GAAG,gBAAgB;MAE5Bi+C,OAAA,CAAK3pC,KAAK,GAAG,IAAI;MACjB2pC,OAAA,CAAKtlB,UAAU,GAAG,CAAC,CAAC;MAEpBslB,OAAA,CAAKE,eAAe,GAAG,CAAC,CAAC;MACzBF,OAAA,CAAKG,oBAAoB,GAAG,KAAK;MAEjCH,OAAA,CAAKI,MAAM,GAAG,EAAE;MAEhBJ,OAAA,CAAK3lB,WAAW,GAAG,IAAI;MACvB2lB,OAAA,CAAKK,cAAc,GAAG,IAAI;MAE1BL,OAAA,CAAKM,SAAS,GAAG;QAAEC,KAAK,EAAE,CAAC;QAAEjwB,KAAK,EAAEuI;MAAS,CAAC;MAE9CmnB,OAAA,CAAK/0B,QAAQ,GAAG,CAAC,CAAC;MAAC,OAAA+0B,OAAA;IAEpB;IAACl3C,YAAA,CAAA+2C,cAAA;MAAA7/C,GAAA;MAAAE,KAAA,EAED,SAAAsgD,SAAA,EAAW;QAEV,OAAO,IAAI,CAACnqC,KAAK;MAElB;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAugD,SAAUpqC,KAAK,EAAG;QAEjB,IAAKyS,KAAK,CAACC,OAAO,CAAE1S,KAAK,CAAE,EAAG;UAE7B,IAAI,CAACA,KAAK,GAAG,KAAMwO,gBAAgB,CAAExO,KAAK,CAAE,GAAGmoC,qBAAqB,GAAGN,qBAAqB,EAAI7nC,KAAK,EAAE,CAAC,CAAE;QAE3G,CAAC,MAAM;UAEN,IAAI,CAACA,KAAK,GAAGA,KAAK;QAEnB;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAwgD,aAAcr6C,IAAI,EAAG;QAEpB,OAAO,IAAI,CAACq0B,UAAU,CAAEr0B,IAAI,CAAE;MAE/B;IAAC;MAAArG,GAAA;MAAAE,KAAA,EAED,SAAAygD,aAAct6C,IAAI,EAAEsZ,SAAS,EAAG;QAE/B,IAAI,CAAC+a,UAAU,CAAEr0B,IAAI,CAAE,GAAGsZ,SAAS;QAEnC,OAAO,IAAI;MAEZ;IAAC;MAAA3f,GAAA;MAAAE,KAAA,EAED,SAAA0gD,gBAAiBv6C,IAAI,EAAG;QAEvB,OAAO,IAAI,CAACq0B,UAAU,CAAEr0B,IAAI,CAAE;QAE9B,OAAO,IAAI;MAEZ;IAAC;MAAArG,GAAA;MAAAE,KAAA,EAED,SAAA2gD,aAAcx6C,IAAI,EAAG;QAEpB,OAAO,IAAI,CAACq0B,UAAU,CAAEr0B,IAAI,CAAE,KAAK7B,SAAS;MAE7C;IAAC;MAAAxE,GAAA;MAAAE,KAAA,EAED,SAAA4gD,SAAUP,KAAK,EAAEjwB,KAAK,EAAEywB,aAAa,GAAG,CAAC,EAAG;QAE3C,IAAI,CAACX,MAAM,CAAC76C,IAAI,CAAE;UAEjBg7C,KAAK,EAAEA,KAAK;UACZjwB,KAAK,EAAEA,KAAK;UACZywB,aAAa,EAAEA;QAEhB,CAAC,CAAE;MAEJ;IAAC;MAAA/gD,GAAA;MAAAE,KAAA,EAED,SAAA8gD,YAAA,EAAc;QAEb,IAAI,CAACZ,MAAM,GAAG,EAAE;MAEjB;IAAC;MAAApgD,GAAA;MAAAE,KAAA,EAED,SAAA+gD,aAAcV,KAAK,EAAEjwB,KAAK,EAAG;QAE5B,IAAI,CAACgwB,SAAS,CAACC,KAAK,GAAGA,KAAK;QAC5B,IAAI,CAACD,SAAS,CAAChwB,KAAK,GAAGA,KAAK;MAE7B;IAAC;MAAAtwB,GAAA;MAAAE,KAAA,EAED,SAAAosB,aAAc1H,MAAM,EAAG;QAEtB,IAAM+V,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;QAEzC,IAAKA,QAAQ,KAAKn2B,SAAS,EAAG;UAE7Bm2B,QAAQ,CAACrO,YAAY,CAAE1H,MAAM,CAAE;UAE/B+V,QAAQ,CAAClP,WAAW,GAAG,IAAI;QAE5B;QAEA,IAAMkM,MAAM,GAAG,IAAI,CAAC+C,UAAU,CAAC/C,MAAM;QAErC,IAAKA,MAAM,KAAKnzB,SAAS,EAAG;UAE3B,IAAMqkC,YAAY,GAAG,IAAI3oB,OAAO,EAAE,CAACuD,eAAe,CAAEmB,MAAM,CAAE;UAE5D+S,MAAM,CAAC7B,iBAAiB,CAAE+S,YAAY,CAAE;UAExClR,MAAM,CAAClM,WAAW,GAAG,IAAI;QAE1B;QAEA,IAAMy1B,OAAO,GAAG,IAAI,CAACxmB,UAAU,CAACwmB,OAAO;QAEvC,IAAKA,OAAO,KAAK18C,SAAS,EAAG;UAE5B08C,OAAO,CAACpqB,kBAAkB,CAAElS,MAAM,CAAE;UAEpCs8B,OAAO,CAACz1B,WAAW,GAAG,IAAI;QAE3B;QAEA,IAAK,IAAI,CAAC4O,WAAW,KAAK,IAAI,EAAG;UAEhC,IAAI,CAACC,kBAAkB,EAAE;QAE1B;QAEA,IAAK,IAAI,CAAC+lB,cAAc,KAAK,IAAI,EAAG;UAEnC,IAAI,CAACc,qBAAqB,EAAE;QAE7B;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAnhD,GAAA;MAAAE,KAAA,EAED,SAAAy1B,gBAAiBpb,CAAC,EAAG;QAEpBglC,GAAG,CAAC5c,0BAA0B,CAAEpoB,CAAC,CAAE;QAEnC,IAAI,CAAC+R,YAAY,CAAEizB,GAAG,CAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAv/C,GAAA;MAAAE,KAAA,EAED,SAAA8pC,QAAS1rB,KAAK,EAAG;QAEhB;;QAEAihC,GAAG,CAACnb,aAAa,CAAE9lB,KAAK,CAAE;QAE1B,IAAI,CAACgO,YAAY,CAAEizB,GAAG,CAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAv/C,GAAA;MAAAE,KAAA,EAED,SAAA+pC,QAAS3rB,KAAK,EAAG;QAEhB;;QAEAihC,GAAG,CAAClb,aAAa,CAAE/lB,KAAK,CAAE;QAE1B,IAAI,CAACgO,YAAY,CAAEizB,GAAG,CAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAv/C,GAAA;MAAAE,KAAA,EAED,SAAAgqC,QAAS5rB,KAAK,EAAG;QAEhB;;QAEAihC,GAAG,CAACjb,aAAa,CAAEhmB,KAAK,CAAE;QAE1B,IAAI,CAACgO,YAAY,CAAEizB,GAAG,CAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAv/C,GAAA;MAAAE,KAAA,EAED,SAAAwkB,UAAW1M,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAEpB;;QAEAszB,GAAG,CAAC56B,eAAe,CAAE3M,CAAC,EAAEM,CAAC,EAAE2T,CAAC,CAAE;QAE9B,IAAI,CAACK,YAAY,CAAEizB,GAAG,CAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAv/C,GAAA;MAAAE,KAAA,EAED,SAAAmkB,MAAOrM,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAEhB;;QAEAszB,GAAG,CAACh7B,SAAS,CAAEvM,CAAC,EAAEM,CAAC,EAAE2T,CAAC,CAAE;QAExB,IAAI,CAACK,YAAY,CAAEizB,GAAG,CAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAv/C,GAAA;MAAAE,KAAA,EAED,SAAAo+B,OAAQpE,MAAM,EAAG;QAEhBslB,IAAI,CAAClhB,MAAM,CAAEpE,MAAM,CAAE;QAErBslB,IAAI,CAACn0B,YAAY,EAAE;QAEnB,IAAI,CAACiB,YAAY,CAAEkzB,IAAI,CAAC56B,MAAM,CAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAA5kB,GAAA;MAAAE,KAAA,EAED,SAAA6f,OAAA,EAAS;QAER,IAAI,CAACua,kBAAkB,EAAE;QAEzB,IAAI,CAACD,WAAW,CAACP,SAAS,CAAE2lB,OAAO,CAAE,CAACzhC,MAAM,EAAE;QAE9C,IAAI,CAAC0G,SAAS,CAAE+6B,OAAO,CAACznC,CAAC,EAAEynC,OAAO,CAACnnC,CAAC,EAAEmnC,OAAO,CAACxzB,CAAC,CAAE;QAEjD,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAk5B,cAAeC,MAAM,EAAG;QAEvB,IAAMsB,QAAQ,GAAG,EAAE;QAEnB,KAAM,IAAI50B,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG2iB,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEjD,IAAMi0B,KAAK,GAAGX,MAAM,CAAEtzB,CAAC,CAAE;UACzB40B,QAAQ,CAACp1B,IAAI,CAAEy0B,KAAK,CAAChiB,CAAC,EAAEgiB,KAAK,CAAC1hB,CAAC,EAAE0hB,KAAK,CAAC/N,CAAC,IAAI,CAAC,CAAE;QAEhD;QAEA,IAAI,CAAC00B,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAErkB,QAAQ,EAAE,CAAC,CAAE,CAAE;QAE1E,OAAO,IAAI;MAEZ;IAAC;MAAA36B,GAAA;MAAAE,KAAA,EAED,SAAAo6B,mBAAA,EAAqB;QAEpB,IAAK,IAAI,CAACD,WAAW,KAAK,IAAI,EAAG;UAEhC,IAAI,CAACA,WAAW,GAAG,IAAIzB,IAAI,EAAE;QAE9B;QAEA,IAAM+B,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;QACzC,IAAMymB,uBAAuB,GAAG,IAAI,CAAClB,eAAe,CAACvlB,QAAQ;QAE7D,IAAKA,QAAQ,IAAIA,QAAQ,CAAC0mB,mBAAmB,EAAG;UAE/C53C,OAAO,CAAChG,KAAK,CAAE,iJAAiJ,EAAE,IAAI,CAAE;UAExK,IAAI,CAAC42B,WAAW,CAAC/e,GAAG,CACnB,IAAIga,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAQ,CAAE,EACjD,IAAIvD,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAQ,CAAE,CACjD;UAED;QAED;QAEA,IAAK8B,QAAQ,KAAKn2B,SAAS,EAAG;UAE7B,IAAI,CAAC61B,WAAW,CAAClB,sBAAsB,CAAEwB,QAAQ,CAAE;;UAEnD;;UAEA,IAAKymB,uBAAuB,EAAG;YAE9B,KAAM,IAAIr7C,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG2wB,uBAAuB,CAACt7C,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;cAEpE,IAAMu7C,cAAc,GAAGF,uBAAuB,CAAEr7C,CAAC,CAAE;cACnD25C,MAAM,CAACvmB,sBAAsB,CAAEmoB,cAAc,CAAE;cAE/C,IAAK,IAAI,CAACnB,oBAAoB,EAAG;gBAEhCP,SAAS,CAAC7iC,UAAU,CAAE,IAAI,CAACsd,WAAW,CAAC3iB,GAAG,EAAEgoC,MAAM,CAAChoC,GAAG,CAAE;gBACxD,IAAI,CAAC2iB,WAAW,CAACpB,aAAa,CAAE2mB,SAAS,CAAE;gBAE3CA,SAAS,CAAC7iC,UAAU,CAAE,IAAI,CAACsd,WAAW,CAAC1iB,GAAG,EAAE+nC,MAAM,CAAC/nC,GAAG,CAAE;gBACxD,IAAI,CAAC0iB,WAAW,CAACpB,aAAa,CAAE2mB,SAAS,CAAE;cAE5C,CAAC,MAAM;gBAEN,IAAI,CAACvlB,WAAW,CAACpB,aAAa,CAAEymB,MAAM,CAAChoC,GAAG,CAAE;gBAC5C,IAAI,CAAC2iB,WAAW,CAACpB,aAAa,CAAEymB,MAAM,CAAC/nC,GAAG,CAAE;cAE7C;YAED;UAED;QAED,CAAC,MAAM;UAEN,IAAI,CAAC0iB,WAAW,CAACrB,SAAS,EAAE;QAE7B;QAEA,IAAKnzB,KAAK,CAAE,IAAI,CAACw0B,WAAW,CAAC3iB,GAAG,CAACM,CAAC,CAAE,IAAInS,KAAK,CAAE,IAAI,CAACw0B,WAAW,CAAC3iB,GAAG,CAACY,CAAC,CAAE,IAAIzS,KAAK,CAAE,IAAI,CAACw0B,WAAW,CAAC3iB,GAAG,CAACuU,CAAC,CAAE,EAAG;UAE5GxiB,OAAO,CAAChG,KAAK,CAAE,qIAAqI,EAAE,IAAI,CAAE;QAE7J;MAED;IAAC;MAAAzD,GAAA;MAAAE,KAAA,EAED,SAAAihD,sBAAA,EAAwB;QAEvB,IAAK,IAAI,CAACd,cAAc,KAAK,IAAI,EAAG;UAEnC,IAAI,CAACA,cAAc,GAAG,IAAInjB,MAAM,EAAE;QAEnC;QAEA,IAAMvC,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;QACzC,IAAMymB,uBAAuB,GAAG,IAAI,CAAClB,eAAe,CAACvlB,QAAQ;QAE7D,IAAKA,QAAQ,IAAIA,QAAQ,CAAC0mB,mBAAmB,EAAG;UAE/C53C,OAAO,CAAChG,KAAK,CAAE,uJAAuJ,EAAE,IAAI,CAAE;UAE9K,IAAI,CAAC48C,cAAc,CAAC/kC,GAAG,CAAE,IAAIga,OAAO,EAAE,EAAEuD,QAAQ,CAAE;UAElD;QAED;QAEA,IAAK8B,QAAQ,EAAG;UAEf;;UAEA,IAAM5a,MAAM,GAAG,IAAI,CAACsgC,cAAc,CAACtgC,MAAM;UAEzC2/B,MAAM,CAACvmB,sBAAsB,CAAEwB,QAAQ,CAAE;;UAEzC;;UAEA,IAAKymB,uBAAuB,EAAG;YAE9B,KAAM,IAAIr7C,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG2wB,uBAAuB,CAACt7C,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;cAEpE,IAAMu7C,cAAc,GAAGF,uBAAuB,CAAEr7C,CAAC,CAAE;cACnD45C,gBAAgB,CAACxmB,sBAAsB,CAAEmoB,cAAc,CAAE;cAEzD,IAAK,IAAI,CAACnB,oBAAoB,EAAG;gBAEhCP,SAAS,CAAC7iC,UAAU,CAAE2iC,MAAM,CAAChoC,GAAG,EAAEioC,gBAAgB,CAACjoC,GAAG,CAAE;gBACxDgoC,MAAM,CAACzmB,aAAa,CAAE2mB,SAAS,CAAE;gBAEjCA,SAAS,CAAC7iC,UAAU,CAAE2iC,MAAM,CAAC/nC,GAAG,EAAEgoC,gBAAgB,CAAChoC,GAAG,CAAE;gBACxD+nC,MAAM,CAACzmB,aAAa,CAAE2mB,SAAS,CAAE;cAElC,CAAC,MAAM;gBAENF,MAAM,CAACzmB,aAAa,CAAE0mB,gBAAgB,CAACjoC,GAAG,CAAE;gBAC5CgoC,MAAM,CAACzmB,aAAa,CAAE0mB,gBAAgB,CAAChoC,GAAG,CAAE;cAE7C;YAED;UAED;UAEA+nC,MAAM,CAAC5lB,SAAS,CAAE/Z,MAAM,CAAE;;UAE1B;UACA;;UAEA,IAAIqd,WAAW,GAAG,CAAC;UAEnB,KAAM,IAAIr3B,IAAC,GAAG,CAAC,EAAE0qB,GAAE,GAAGkK,QAAQ,CAACrK,KAAK,EAAEvqB,IAAC,GAAG0qB,GAAE,EAAE1qB,IAAC,EAAG,EAAG;YAEpD65C,SAAS,CAAClgC,mBAAmB,CAAEib,QAAQ,EAAE50B,IAAC,CAAE;YAE5Cq3B,WAAW,GAAGtmB,IAAI,CAACa,GAAG,CAAEylB,WAAW,EAAErd,MAAM,CAAClB,iBAAiB,CAAE+gC,SAAS,CAAE,CAAE;UAE7E;;UAEA;;UAEA,IAAKwB,uBAAuB,EAAG;YAE9B,KAAM,IAAIr7C,IAAC,GAAG,CAAC,EAAE0qB,IAAE,GAAG2wB,uBAAuB,CAACt7C,MAAM,EAAEC,IAAC,GAAG0qB,IAAE,EAAE1qB,IAAC,EAAG,EAAG;cAEpE,IAAMu7C,eAAc,GAAGF,uBAAuB,CAAEr7C,IAAC,CAAE;cACnD,IAAMo6C,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;cAEtD,KAAM,IAAIxjB,CAAC,GAAG,CAAC,EAAE4kB,EAAE,GAAGD,eAAc,CAAChxB,KAAK,EAAEqM,CAAC,GAAG4kB,EAAE,EAAE5kB,CAAC,EAAG,EAAG;gBAE1DijB,SAAS,CAAClgC,mBAAmB,CAAE4hC,eAAc,EAAE3kB,CAAC,CAAE;gBAElD,IAAKwjB,oBAAoB,EAAG;kBAE3BV,OAAO,CAAC//B,mBAAmB,CAAEib,QAAQ,EAAEgC,CAAC,CAAE;kBAC1CijB,SAAS,CAAC/iC,GAAG,CAAE4iC,OAAO,CAAE;gBAEzB;gBAEAriB,WAAW,GAAGtmB,IAAI,CAACa,GAAG,CAAEylB,WAAW,EAAErd,MAAM,CAAClB,iBAAiB,CAAE+gC,SAAS,CAAE,CAAE;cAE7E;YAED;UAED;UAEA,IAAI,CAACS,cAAc,CAACtoB,MAAM,GAAGjhB,IAAI,CAACsH,IAAI,CAAEgf,WAAW,CAAE;UAErD,IAAKv3B,KAAK,CAAE,IAAI,CAACw6C,cAAc,CAACtoB,MAAM,CAAE,EAAG;YAE1CtuB,OAAO,CAAChG,KAAK,CAAE,8HAA8H,EAAE,IAAI,CAAE;UAEtJ;QAED;MAED;IAAC;MAAAzD,GAAA;MAAAE,KAAA,EAED,SAAAshD,gBAAA,EAAkB;QAEjB,IAAMnrC,KAAK,GAAG,IAAI,CAACA,KAAK;QACxB,IAAMqkB,UAAU,GAAG,IAAI,CAACA,UAAU;;QAElC;QACA;;QAEA,IAAKrkB,KAAK,KAAK,IAAI,IACjBqkB,UAAU,CAACC,QAAQ,KAAKn2B,SAAS,IACjCk2B,UAAU,CAAC/C,MAAM,KAAKnzB,SAAS,IAC/Bk2B,UAAU,CAAC5O,EAAE,KAAKtnB,SAAS,EAAG;UAE/BiF,OAAO,CAAChG,KAAK,CAAE,8GAA8G,CAAE;UAC/H;QAED;QAEA,IAAMg+C,OAAO,GAAGprC,KAAK,CAACI,KAAK;QAC3B,IAAMirC,SAAS,GAAGhnB,UAAU,CAACC,QAAQ,CAAClkB,KAAK;QAC3C,IAAMkrC,OAAO,GAAGjnB,UAAU,CAAC/C,MAAM,CAAClhB,KAAK;QACvC,IAAMmrC,GAAG,GAAGlnB,UAAU,CAAC5O,EAAE,CAACrV,KAAK;QAE/B,IAAMorC,SAAS,GAAGH,SAAS,CAAC57C,MAAM,GAAG,CAAC;QAEtC,IAAK,IAAI,CAAC+6C,YAAY,CAAE,SAAS,CAAE,KAAK,KAAK,EAAG;UAE/C,IAAI,CAACF,YAAY,CAAE,SAAS,EAAE,IAAIzE,eAAe,CAAE,IAAI1gC,YAAY,CAAE,CAAC,GAAGqmC,SAAS,CAAE,EAAE,CAAC,CAAE,CAAE;QAE5F;QAEA,IAAMC,QAAQ,GAAG,IAAI,CAACpB,YAAY,CAAE,SAAS,CAAE,CAACjqC,KAAK;QAErD,IAAMsrC,IAAI,GAAG,EAAE;UAAEC,IAAI,GAAG,EAAE;QAE1B,KAAM,IAAIj8C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG87C,SAAS,EAAE97C,CAAC,EAAG,EAAG;UAEtCg8C,IAAI,CAAEh8C,CAAC,CAAE,GAAG,IAAIuvB,OAAO,EAAE;UACzB0sB,IAAI,CAAEj8C,CAAC,CAAE,GAAG,IAAIuvB,OAAO,EAAE;QAE1B;QAEA,IAAM2sB,EAAE,GAAG,IAAI3sB,OAAO,EAAE;UACvB4sB,EAAE,GAAG,IAAI5sB,OAAO,EAAE;UAClB6sB,EAAE,GAAG,IAAI7sB,OAAO,EAAE;UAElB8sB,GAAG,GAAG,IAAIpmC,OAAO,EAAE;UACnBqmC,GAAG,GAAG,IAAIrmC,OAAO,EAAE;UACnBsmC,GAAG,GAAG,IAAItmC,OAAO,EAAE;UAEnBumC,IAAI,GAAG,IAAIjtB,OAAO,EAAE;UACpBktB,IAAI,GAAG,IAAIltB,OAAO,EAAE;QAErB,SAASmtB,cAAcA,CAAEjoC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;UAElCunC,EAAE,CAAC1iC,SAAS,CAAEmiC,SAAS,EAAElnC,CAAC,GAAG,CAAC,CAAE;UAChC0nC,EAAE,CAAC3iC,SAAS,CAAEmiC,SAAS,EAAEjnC,CAAC,GAAG,CAAC,CAAE;UAChC0nC,EAAE,CAAC5iC,SAAS,CAAEmiC,SAAS,EAAEhnC,CAAC,GAAG,CAAC,CAAE;UAEhC0nC,GAAG,CAAC7iC,SAAS,CAAEqiC,GAAG,EAAEpnC,CAAC,GAAG,CAAC,CAAE;UAC3B6nC,GAAG,CAAC9iC,SAAS,CAAEqiC,GAAG,EAAEnnC,CAAC,GAAG,CAAC,CAAE;UAC3B6nC,GAAG,CAAC/iC,SAAS,CAAEqiC,GAAG,EAAElnC,CAAC,GAAG,CAAC,CAAE;UAE3BwnC,EAAE,CAACjlC,GAAG,CAAEglC,EAAE,CAAE;UACZE,EAAE,CAACllC,GAAG,CAAEglC,EAAE,CAAE;UAEZI,GAAG,CAACplC,GAAG,CAAEmlC,GAAG,CAAE;UACdE,GAAG,CAACrlC,GAAG,CAAEmlC,GAAG,CAAE;UAEd,IAAMx+B,CAAC,GAAG,GAAG,IAAKy+B,GAAG,CAACrqC,CAAC,GAAGsqC,GAAG,CAAChqC,CAAC,GAAGgqC,GAAG,CAACtqC,CAAC,GAAGqqC,GAAG,CAAC/pC,CAAC,CAAE;;UAEjD;;UAEA,IAAK,CAAEoqC,QAAQ,CAAE9+B,CAAC,CAAE,EAAG;UAEvB2+B,IAAI,CAAC5lC,IAAI,CAAEulC,EAAE,CAAE,CAAC7kC,cAAc,CAAEilC,GAAG,CAAChqC,CAAC,CAAE,CAAC0E,eAAe,CAAEmlC,EAAE,EAAE,CAAEE,GAAG,CAAC/pC,CAAC,CAAE,CAAC+E,cAAc,CAAEuG,CAAC,CAAE;UAC1F4+B,IAAI,CAAC7lC,IAAI,CAAEwlC,EAAE,CAAE,CAAC9kC,cAAc,CAAEglC,GAAG,CAACrqC,CAAC,CAAE,CAACgF,eAAe,CAAEklC,EAAE,EAAE,CAAEI,GAAG,CAACtqC,CAAC,CAAE,CAACqF,cAAc,CAAEuG,CAAC,CAAE;UAE1Fm+B,IAAI,CAAEvnC,CAAC,CAAE,CAACqC,GAAG,CAAE0lC,IAAI,CAAE;UACrBR,IAAI,CAAEtnC,CAAC,CAAE,CAACoC,GAAG,CAAE0lC,IAAI,CAAE;UACrBR,IAAI,CAAErnC,CAAC,CAAE,CAACmC,GAAG,CAAE0lC,IAAI,CAAE;UAErBP,IAAI,CAAExnC,CAAC,CAAE,CAACqC,GAAG,CAAE2lC,IAAI,CAAE;UACrBR,IAAI,CAAEvnC,CAAC,CAAE,CAACoC,GAAG,CAAE2lC,IAAI,CAAE;UACrBR,IAAI,CAAEtnC,CAAC,CAAE,CAACmC,GAAG,CAAE2lC,IAAI,CAAE;QAEtB;QAEA,IAAIpC,MAAM,GAAG,IAAI,CAACA,MAAM;QAExB,IAAKA,MAAM,CAACt6C,MAAM,KAAK,CAAC,EAAG;UAE1Bs6C,MAAM,GAAG,CAAE;YACVG,KAAK,EAAE,CAAC;YACRjwB,KAAK,EAAEmxB,OAAO,CAAC37C;UAChB,CAAC,CAAE;QAEJ;QAEA,KAAM,IAAIC,IAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG2vB,MAAM,CAACt6C,MAAM,EAAEC,IAAC,GAAG0qB,EAAE,EAAE,EAAG1qB,IAAC,EAAG;UAEnD,IAAM48C,KAAK,GAAGvC,MAAM,CAAEr6C,IAAC,CAAE;UAEzB,IAAMw6C,KAAK,GAAGoC,KAAK,CAACpC,KAAK;UACzB,IAAMjwB,KAAK,GAAGqyB,KAAK,CAACryB,KAAK;UAEzB,KAAM,IAAIqM,CAAC,GAAG4jB,KAAK,EAAEgB,EAAE,GAAGhB,KAAK,GAAGjwB,KAAK,EAAEqM,CAAC,GAAG4kB,EAAE,EAAE5kB,CAAC,IAAI,CAAC,EAAG;YAEzD8lB,cAAc,CACbhB,OAAO,CAAE9kB,CAAC,GAAG,CAAC,CAAE,EAChB8kB,OAAO,CAAE9kB,CAAC,GAAG,CAAC,CAAE,EAChB8kB,OAAO,CAAE9kB,CAAC,GAAG,CAAC,CAAE,CAChB;UAEF;QAED;QAEA,IAAMnZ,GAAG,GAAG,IAAI8R,OAAO,EAAE;UAAEstB,IAAI,GAAG,IAAIttB,OAAO,EAAE;QAC/C,IAAMzd,CAAC,GAAG,IAAIyd,OAAO,EAAE;UAAEutB,EAAE,GAAG,IAAIvtB,OAAO,EAAE;QAE3C,SAASwtB,YAAYA,CAAElmC,CAAC,EAAG;UAE1B/E,CAAC,CAAC0H,SAAS,CAAEoiC,OAAO,EAAE/kC,CAAC,GAAG,CAAC,CAAE;UAC7BimC,EAAE,CAAClmC,IAAI,CAAE9E,CAAC,CAAE;UAEZ,IAAMW,CAAC,GAAGupC,IAAI,CAAEnlC,CAAC,CAAE;;UAEnB;;UAEA4G,GAAG,CAAC7G,IAAI,CAAEnE,CAAC,CAAE;UACbgL,GAAG,CAACvG,GAAG,CAAEpF,CAAC,CAACwF,cAAc,CAAExF,CAAC,CAACoG,GAAG,CAAEzF,CAAC,CAAE,CAAE,CAAE,CAACqD,SAAS,EAAE;;UAErD;;UAEA+mC,IAAI,CAAC7rB,YAAY,CAAE8rB,EAAE,EAAErqC,CAAC,CAAE;UAC1B,IAAM4O,IAAI,GAAGw7B,IAAI,CAAC3kC,GAAG,CAAE+jC,IAAI,CAAEplC,CAAC,CAAE,CAAE;UAClC,IAAMsP,CAAC,GAAK9E,IAAI,GAAG,GAAG,GAAK,CAAE,GAAG,GAAG,GAAG;UAEtC06B,QAAQ,CAAEllC,CAAC,GAAG,CAAC,CAAE,GAAG4G,GAAG,CAACxL,CAAC;UACzB8pC,QAAQ,CAAEllC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG4G,GAAG,CAAClL,CAAC;UAC7BwpC,QAAQ,CAAEllC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG4G,GAAG,CAACyI,CAAC;UAC7B61B,QAAQ,CAAEllC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAGsP,CAAC;QAE1B;QAEA,KAAM,IAAInmB,IAAC,GAAG,CAAC,EAAE0qB,IAAE,GAAG2vB,MAAM,CAACt6C,MAAM,EAAEC,IAAC,GAAG0qB,IAAE,EAAE,EAAG1qB,IAAC,EAAG;UAEnD,IAAM48C,MAAK,GAAGvC,MAAM,CAAEr6C,IAAC,CAAE;UAEzB,IAAMw6C,OAAK,GAAGoC,MAAK,CAACpC,KAAK;UACzB,IAAMjwB,MAAK,GAAGqyB,MAAK,CAACryB,KAAK;UAEzB,KAAM,IAAIqM,EAAC,GAAG4jB,OAAK,EAAEgB,GAAE,GAAGhB,OAAK,GAAGjwB,MAAK,EAAEqM,EAAC,GAAG4kB,GAAE,EAAE5kB,EAAC,IAAI,CAAC,EAAG;YAEzDmmB,YAAY,CAAErB,OAAO,CAAE9kB,EAAC,GAAG,CAAC,CAAE,CAAE;YAChCmmB,YAAY,CAAErB,OAAO,CAAE9kB,EAAC,GAAG,CAAC,CAAE,CAAE;YAChCmmB,YAAY,CAAErB,OAAO,CAAE9kB,EAAC,GAAG,CAAC,CAAE,CAAE;UAEjC;QAED;MAED;IAAC;MAAA38B,GAAA;MAAAE,KAAA,EAED,SAAA6iD,qBAAA,EAAuB;QAEtB,IAAM1sC,KAAK,GAAG,IAAI,CAACA,KAAK;QACxB,IAAM2sC,iBAAiB,GAAG,IAAI,CAACtC,YAAY,CAAE,UAAU,CAAE;QAEzD,IAAKsC,iBAAiB,KAAKx+C,SAAS,EAAG;UAEtC,IAAIy+C,eAAe,GAAG,IAAI,CAACvC,YAAY,CAAE,QAAQ,CAAE;UAEnD,IAAKuC,eAAe,KAAKz+C,SAAS,EAAG;YAEpCy+C,eAAe,GAAG,IAAI/G,eAAe,CAAE,IAAI1gC,YAAY,CAAEwnC,iBAAiB,CAAC1yB,KAAK,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE;YAC3F,IAAI,CAACqwB,YAAY,CAAE,QAAQ,EAAEsC,eAAe,CAAE;UAE/C,CAAC,MAAM;YAEN;;YAEA,KAAM,IAAIl9C,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGwyB,eAAe,CAAC3yB,KAAK,EAAEvqB,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;cAE3Dk9C,eAAe,CAAClG,MAAM,CAAEh3C,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YAErC;UAED;UAEA,IAAMm9C,EAAE,GAAG,IAAI5tB,OAAO,EAAE;YAAE6tB,EAAE,GAAG,IAAI7tB,OAAO,EAAE;YAAE8tB,EAAE,GAAG,IAAI9tB,OAAO,EAAE;UAChE,IAAM+tB,EAAE,GAAG,IAAI/tB,OAAO,EAAE;YAAEguB,EAAE,GAAG,IAAIhuB,OAAO,EAAE;YAAEiuB,EAAE,GAAG,IAAIjuB,OAAO,EAAE;UAChE,IAAMkuB,EAAE,GAAG,IAAIluB,OAAO,EAAE;YAAEmuB,EAAE,GAAG,IAAInuB,OAAO,EAAE;;UAE5C;;UAEA,IAAKjf,KAAK,EAAG;YAEZ,KAAM,IAAItQ,IAAC,GAAG,CAAC,EAAE0qB,IAAE,GAAGpa,KAAK,CAACia,KAAK,EAAEvqB,IAAC,GAAG0qB,IAAE,EAAE1qB,IAAC,IAAI,CAAC,EAAG;cAEnD,IAAMk8C,EAAE,GAAG5rC,KAAK,CAACuJ,IAAI,CAAE7Z,IAAC,GAAG,CAAC,CAAE;cAC9B,IAAMm8C,EAAE,GAAG7rC,KAAK,CAACuJ,IAAI,CAAE7Z,IAAC,GAAG,CAAC,CAAE;cAC9B,IAAMo8C,EAAE,GAAG9rC,KAAK,CAACuJ,IAAI,CAAE7Z,IAAC,GAAG,CAAC,CAAE;cAE9Bm9C,EAAE,CAACxjC,mBAAmB,CAAEsjC,iBAAiB,EAAEf,EAAE,CAAE;cAC/CkB,EAAE,CAACzjC,mBAAmB,CAAEsjC,iBAAiB,EAAEd,EAAE,CAAE;cAC/CkB,EAAE,CAAC1jC,mBAAmB,CAAEsjC,iBAAiB,EAAEb,EAAE,CAAE;cAE/CqB,EAAE,CAACrmC,UAAU,CAAEimC,EAAE,EAAED,EAAE,CAAE;cACvBM,EAAE,CAACtmC,UAAU,CAAE+lC,EAAE,EAAEC,EAAE,CAAE;cACvBK,EAAE,CAACtlC,KAAK,CAAEulC,EAAE,CAAE;cAEdJ,EAAE,CAAC3jC,mBAAmB,CAAEujC,eAAe,EAAEhB,EAAE,CAAE;cAC7CqB,EAAE,CAAC5jC,mBAAmB,CAAEujC,eAAe,EAAEf,EAAE,CAAE;cAC7CqB,EAAE,CAAC7jC,mBAAmB,CAAEujC,eAAe,EAAEd,EAAE,CAAE;cAE7CkB,EAAE,CAACxmC,GAAG,CAAE2mC,EAAE,CAAE;cACZF,EAAE,CAACzmC,GAAG,CAAE2mC,EAAE,CAAE;cACZD,EAAE,CAAC1mC,GAAG,CAAE2mC,EAAE,CAAE;cAEZP,eAAe,CAAClG,MAAM,CAAEkF,EAAE,EAAEoB,EAAE,CAACrrC,CAAC,EAAEqrC,EAAE,CAAC/qC,CAAC,EAAE+qC,EAAE,CAACp3B,CAAC,CAAE;cAC9Cg3B,eAAe,CAAClG,MAAM,CAAEmF,EAAE,EAAEoB,EAAE,CAACtrC,CAAC,EAAEsrC,EAAE,CAAChrC,CAAC,EAAEgrC,EAAE,CAACr3B,CAAC,CAAE;cAC9Cg3B,eAAe,CAAClG,MAAM,CAAEoF,EAAE,EAAEoB,EAAE,CAACvrC,CAAC,EAAEurC,EAAE,CAACjrC,CAAC,EAAEirC,EAAE,CAACt3B,CAAC,CAAE;YAE/C;UAED,CAAC,MAAM;YAEN;;YAEA,KAAM,IAAIlmB,IAAC,GAAG,CAAC,EAAE0qB,IAAE,GAAGuyB,iBAAiB,CAAC1yB,KAAK,EAAEvqB,IAAC,GAAG0qB,IAAE,EAAE1qB,IAAC,IAAI,CAAC,EAAG;cAE/Dm9C,EAAE,CAACxjC,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,IAAC,GAAG,CAAC,CAAE;cAClDo9C,EAAE,CAACzjC,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,IAAC,GAAG,CAAC,CAAE;cAClDq9C,EAAE,CAAC1jC,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,IAAC,GAAG,CAAC,CAAE;cAElDy9C,EAAE,CAACrmC,UAAU,CAAEimC,EAAE,EAAED,EAAE,CAAE;cACvBM,EAAE,CAACtmC,UAAU,CAAE+lC,EAAE,EAAEC,EAAE,CAAE;cACvBK,EAAE,CAACtlC,KAAK,CAAEulC,EAAE,CAAE;cAEdR,eAAe,CAAClG,MAAM,CAAEh3C,IAAC,GAAG,CAAC,EAAEy9C,EAAE,CAACxrC,CAAC,EAAEwrC,EAAE,CAAClrC,CAAC,EAAEkrC,EAAE,CAACv3B,CAAC,CAAE;cACjDg3B,eAAe,CAAClG,MAAM,CAAEh3C,IAAC,GAAG,CAAC,EAAEy9C,EAAE,CAACxrC,CAAC,EAAEwrC,EAAE,CAAClrC,CAAC,EAAEkrC,EAAE,CAACv3B,CAAC,CAAE;cACjDg3B,eAAe,CAAClG,MAAM,CAAEh3C,IAAC,GAAG,CAAC,EAAEy9C,EAAE,CAACxrC,CAAC,EAAEwrC,EAAE,CAAClrC,CAAC,EAAEkrC,EAAE,CAACv3B,CAAC,CAAE;YAElD;UAED;UAEA,IAAI,CAACy3B,gBAAgB,EAAE;UAEvBT,eAAe,CAACx3B,WAAW,GAAG,IAAI;QAEnC;MAED;IAAC;MAAAzrB,GAAA;MAAAE,KAAA,EAED,SAAAyjD,MAAA,EAAQ;QAAE;;QAETl6C,OAAO,CAAChG,KAAK,CAAE,yGAAyG,CAAE;QAC1H,OAAO,IAAI;MAEZ;IAAC;MAAAzD,GAAA;MAAAE,KAAA,EAED,SAAAwjD,iBAAA,EAAmB;QAElB,IAAM/B,OAAO,GAAG,IAAI,CAACjnB,UAAU,CAAC/C,MAAM;QAEtC,KAAM,IAAI5xB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGkxB,OAAO,CAACrxB,KAAK,EAAEvqB,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAEnD65C,SAAS,CAAClgC,mBAAmB,CAAEiiC,OAAO,EAAE57C,CAAC,CAAE;UAE3C65C,SAAS,CAAC/jC,SAAS,EAAE;UAErB8lC,OAAO,CAAC5E,MAAM,CAAEh3C,CAAC,EAAE65C,SAAS,CAAC5nC,CAAC,EAAE4nC,SAAS,CAACtnC,CAAC,EAAEsnC,SAAS,CAAC3zB,CAAC,CAAE;QAE3D;MAED;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA0jD,aAAA,EAAe;QAEd,SAASC,sBAAsBA,CAAElkC,SAAS,EAAE8hC,OAAO,EAAG;UAErD,IAAMhrC,KAAK,GAAGkJ,SAAS,CAAClJ,KAAK;UAC7B,IAAM0lC,QAAQ,GAAGx8B,SAAS,CAACw8B,QAAQ;UACnC,IAAMC,UAAU,GAAGz8B,SAAS,CAACy8B,UAAU;UAEvC,IAAM0H,MAAM,GAAG,IAAIrtC,KAAK,CAACrQ,WAAW,CAAEq7C,OAAO,CAAC37C,MAAM,GAAGq2C,QAAQ,CAAE;UAEjE,IAAI9lC,KAAK,GAAG,CAAC;YAAEumC,MAAM,GAAG,CAAC;UAEzB,KAAM,IAAI72C,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG+qC,OAAO,CAAC37C,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAElD,IAAK4Z,SAAS,CAACokC,4BAA4B,EAAG;cAE7C1tC,KAAK,GAAGorC,OAAO,CAAE17C,CAAC,CAAE,GAAG4Z,SAAS,CAACyI,IAAI,CAAC47B,MAAM,GAAGrkC,SAAS,CAACH,MAAM;YAEhE,CAAC,MAAM;cAENnJ,KAAK,GAAGorC,OAAO,CAAE17C,CAAC,CAAE,GAAGo2C,QAAQ;YAEhC;YAEA,KAAM,IAAIxf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwf,QAAQ,EAAExf,CAAC,EAAG,EAAG;cAErCmnB,MAAM,CAAElH,MAAM,EAAG,CAAE,GAAGnmC,KAAK,CAAEJ,KAAK,EAAG,CAAE;YAExC;UAED;UAEA,OAAO,IAAI6lC,eAAe,CAAE4H,MAAM,EAAE3H,QAAQ,EAAEC,UAAU,CAAE;QAE3D;;QAEA;;QAEA,IAAK,IAAI,CAAC/lC,KAAK,KAAK,IAAI,EAAG;UAE1B5M,OAAO,CAACC,IAAI,CAAE,6EAA6E,CAAE;UAC7F,OAAO,IAAI;QAEZ;QAEA,IAAMu6C,SAAS,GAAG,IAAIpE,cAAc,EAAE;QAEtC,IAAM4B,OAAO,GAAG,IAAI,CAACprC,KAAK,CAACI,KAAK;QAChC,IAAMikB,UAAU,GAAG,IAAI,CAACA,UAAU;;QAElC;;QAEA,KAAM,IAAMr0B,IAAI,IAAIq0B,UAAU,EAAG;UAEhC,IAAM/a,SAAS,GAAG+a,UAAU,CAAEr0B,IAAI,CAAE;UAEpC,IAAM69C,YAAY,GAAGL,sBAAsB,CAAElkC,SAAS,EAAE8hC,OAAO,CAAE;UAEjEwC,SAAS,CAACtD,YAAY,CAAEt6C,IAAI,EAAE69C,YAAY,CAAE;QAE7C;;QAEA;;QAEA,IAAMhE,eAAe,GAAG,IAAI,CAACA,eAAe;QAE5C,KAAM,IAAM75C,KAAI,IAAI65C,eAAe,EAAG;UAErC,IAAMiE,UAAU,GAAG,EAAE;UACrB,IAAM7C,cAAc,GAAGpB,eAAe,CAAE75C,KAAI,CAAE,CAAC,CAAC;;UAEhD,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG6wB,cAAc,CAACx7C,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;YAE3D,IAAM4Z,UAAS,GAAG2hC,cAAc,CAAEv7C,CAAC,CAAE;YAErC,IAAMm+C,aAAY,GAAGL,sBAAsB,CAAElkC,UAAS,EAAE8hC,OAAO,CAAE;YAEjE0C,UAAU,CAAC5+C,IAAI,CAAE2+C,aAAY,CAAE;UAEhC;UAEAD,SAAS,CAAC/D,eAAe,CAAE75C,KAAI,CAAE,GAAG89C,UAAU;QAE/C;QAEAF,SAAS,CAAC9D,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;;QAE1D;;QAEA,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,KAAM,IAAIr6C,IAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG0pC,MAAM,CAACt6C,MAAM,EAAEC,IAAC,GAAG2Q,CAAC,EAAE3Q,IAAC,EAAG,EAAG;UAEjD,IAAM48C,KAAK,GAAGvC,MAAM,CAAEr6C,IAAC,CAAE;UACzBk+C,SAAS,CAACnD,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAACryB,KAAK,EAAEqyB,KAAK,CAAC5B,aAAa,CAAE;QAEpE;QAEA,OAAOkD,SAAS;MAEjB;IAAC;MAAAjkD,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAG;UACZuD,QAAQ,EAAE;YACTpD,OAAO,EAAE,GAAG;YACZxmB,IAAI,EAAE,gBAAgB;YACtBR,SAAS,EAAE;UACZ;QACD,CAAC;;QAED;;QAEA6mB,IAAI,CAAC7Q,IAAI,GAAG,IAAI,CAACA,IAAI;QACrB6Q,IAAI,CAACrmB,IAAI,GAAG,IAAI,CAACA,IAAI;QACrB,IAAK,IAAI,CAACsE,IAAI,KAAK,EAAE,EAAG+hB,IAAI,CAAC/hB,IAAI,GAAG,IAAI,CAACA,IAAI;QAC7C,IAAK3G,MAAM,CAACmH,IAAI,CAAE,IAAI,CAACokB,QAAQ,CAAE,CAACnlB,MAAM,GAAG,CAAC,EAAGsiB,IAAI,CAAC6C,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE5E,IAAK,IAAI,CAACqiB,UAAU,KAAK9oC,SAAS,EAAG;UAEpC,IAAM8oC,UAAU,GAAG,IAAI,CAACA,UAAU;UAElC,KAAM,IAAMttC,GAAG,IAAIstC,UAAU,EAAG;YAE/B,IAAKA,UAAU,CAAEttC,GAAG,CAAE,KAAKwE,SAAS,EAAG4jB,IAAI,CAAEpoB,GAAG,CAAE,GAAGstC,UAAU,CAAEttC,GAAG,CAAE;UAEvE;UAEA,OAAOooB,IAAI;QAEZ;;QAEA;;QAEAA,IAAI,CAACA,IAAI,GAAG;UAAEsS,UAAU,EAAE,CAAC;QAAE,CAAC;QAE9B,IAAMrkB,KAAK,GAAG,IAAI,CAACA,KAAK;QAExB,IAAKA,KAAK,KAAK,IAAI,EAAG;UAErB+R,IAAI,CAACA,IAAI,CAAC/R,KAAK,GAAG;YACjBtU,IAAI,EAAEsU,KAAK,CAACI,KAAK,CAACrQ,WAAW,CAACC,IAAI;YAClCoQ,KAAK,EAAEqS,KAAK,CAACnpB,SAAS,CAAC0H,KAAK,CAACrF,IAAI,CAAEqU,KAAK,CAACI,KAAK;UAC/C,CAAC;QAEF;QAEA,IAAMikB,UAAU,GAAG,IAAI,CAACA,UAAU;QAElC,KAAM,IAAM16B,IAAG,IAAI06B,UAAU,EAAG;UAE/B,IAAM/a,SAAS,GAAG+a,UAAU,CAAE16B,IAAG,CAAE;UAEnCooB,IAAI,CAACA,IAAI,CAACsS,UAAU,CAAE16B,IAAG,CAAE,GAAG2f,SAAS,CAAC6I,MAAM,CAAEJ,IAAI,CAACA,IAAI,CAAE;QAE5D;QAEA,IAAM83B,eAAe,GAAG,CAAC,CAAC;QAC1B,IAAIkE,kBAAkB,GAAG,KAAK;QAE9B,KAAM,IAAMpkD,KAAG,IAAI,IAAI,CAACkgD,eAAe,EAAG;UAEzC,IAAMmE,cAAc,GAAG,IAAI,CAACnE,eAAe,CAAElgD,KAAG,CAAE;UAElD,IAAMyW,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI1Q,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG4zB,cAAc,CAACv+C,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;YAE3D,IAAM4Z,WAAS,GAAG0kC,cAAc,CAAEt+C,CAAC,CAAE;YAErC0Q,KAAK,CAAClR,IAAI,CAAEoa,WAAS,CAAC6I,MAAM,CAAEJ,IAAI,CAACA,IAAI,CAAE,CAAE;UAE5C;UAEA,IAAK3R,KAAK,CAAC3Q,MAAM,GAAG,CAAC,EAAG;YAEvBo6C,eAAe,CAAElgD,KAAG,CAAE,GAAGyW,KAAK;YAE9B2tC,kBAAkB,GAAG,IAAI;UAE1B;QAED;QAEA,IAAKA,kBAAkB,EAAG;UAEzBh8B,IAAI,CAACA,IAAI,CAAC83B,eAAe,GAAGA,eAAe;UAC3C93B,IAAI,CAACA,IAAI,CAAC+3B,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;QAE3D;QAEA,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAKA,MAAM,CAACt6C,MAAM,GAAG,CAAC,EAAG;UAExBsiB,IAAI,CAACA,IAAI,CAACg4B,MAAM,GAAG90B,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAE40B,MAAM,CAAE,CAAE;QAE1D;QAEA,IAAMC,cAAc,GAAG,IAAI,CAACA,cAAc;QAE1C,IAAKA,cAAc,KAAK,IAAI,EAAG;UAE9Bj4B,IAAI,CAACA,IAAI,CAACi4B,cAAc,GAAG;YAC1BtgC,MAAM,EAAEsgC,cAAc,CAACtgC,MAAM,CAACN,OAAO,EAAE;YACvCsY,MAAM,EAAEsoB,cAAc,CAACtoB;UACxB,CAAC;QAEF;QAEA,OAAO3P,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd;;QAEA,IAAI,CAAClU,KAAK,GAAG,IAAI;QACjB,IAAI,CAACqkB,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAACwlB,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAACE,MAAM,GAAG,EAAE;QAChB,IAAI,CAAC/lB,WAAW,GAAG,IAAI;QACvB,IAAI,CAACgmB,cAAc,GAAG,IAAI;;QAE1B;;QAEA,IAAMj4B,IAAI,GAAG,CAAC,CAAC;;QAEf;;QAEA,IAAI,CAAC/hB,IAAI,GAAGkkB,MAAM,CAAClkB,IAAI;;QAEvB;;QAEA,IAAMgQ,KAAK,GAAGkU,MAAM,CAAClU,KAAK;QAE1B,IAAKA,KAAK,KAAK,IAAI,EAAG;UAErB,IAAI,CAACoqC,QAAQ,CAAEpqC,KAAK,CAACqG,KAAK,CAAE0L,IAAI,CAAE,CAAE;QAErC;;QAEA;;QAEA,IAAMsS,UAAU,GAAGnQ,MAAM,CAACmQ,UAAU;QAEpC,KAAM,IAAMr0B,IAAI,IAAIq0B,UAAU,EAAG;UAEhC,IAAM/a,SAAS,GAAG+a,UAAU,CAAEr0B,IAAI,CAAE;UACpC,IAAI,CAACs6C,YAAY,CAAEt6C,IAAI,EAAEsZ,SAAS,CAACjD,KAAK,CAAE0L,IAAI,CAAE,CAAE;QAEnD;;QAEA;;QAEA,IAAM83B,eAAe,GAAG31B,MAAM,CAAC21B,eAAe;QAE9C,KAAM,IAAM75C,MAAI,IAAI65C,eAAe,EAAG;UAErC,IAAMzpC,KAAK,GAAG,EAAE;UAChB,IAAM6qC,cAAc,GAAGpB,eAAe,CAAE75C,MAAI,CAAE,CAAC,CAAC;;UAEhD,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG4qC,cAAc,CAACx7C,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAEzD0Q,KAAK,CAAClR,IAAI,CAAE+7C,cAAc,CAAEv7C,CAAC,CAAE,CAAC2W,KAAK,CAAE0L,IAAI,CAAE,CAAE;UAEhD;UAEA,IAAI,CAAC83B,eAAe,CAAE75C,MAAI,CAAE,GAAGoQ,KAAK;QAErC;QAEA,IAAI,CAAC0pC,oBAAoB,GAAG51B,MAAM,CAAC41B,oBAAoB;;QAEvD;;QAEA,IAAMC,MAAM,GAAG71B,MAAM,CAAC61B,MAAM;QAE5B,KAAM,IAAIr6C,IAAC,GAAG,CAAC,EAAE2Q,GAAC,GAAG0pC,MAAM,CAACt6C,MAAM,EAAEC,IAAC,GAAG2Q,GAAC,EAAE3Q,IAAC,EAAG,EAAG;UAEjD,IAAM48C,KAAK,GAAGvC,MAAM,CAAEr6C,IAAC,CAAE;UACzB,IAAI,CAAC+6C,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAACryB,KAAK,EAAEqyB,KAAK,CAAC5B,aAAa,CAAE;QAE/D;;QAEA;;QAEA,IAAM1mB,WAAW,GAAG9P,MAAM,CAAC8P,WAAW;QAEtC,IAAKA,WAAW,KAAK,IAAI,EAAG;UAE3B,IAAI,CAACA,WAAW,GAAGA,WAAW,CAAC3d,KAAK,EAAE;QAEvC;;QAEA;;QAEA,IAAM2jC,cAAc,GAAG91B,MAAM,CAAC81B,cAAc;QAE5C,IAAKA,cAAc,KAAK,IAAI,EAAG;UAE9B,IAAI,CAACA,cAAc,GAAGA,cAAc,CAAC3jC,KAAK,EAAE;QAE7C;;QAEA;;QAEA,IAAI,CAAC4jC,SAAS,CAACC,KAAK,GAAGh2B,MAAM,CAAC+1B,SAAS,CAACC,KAAK;QAC7C,IAAI,CAACD,SAAS,CAAChwB,KAAK,GAAG/F,MAAM,CAAC+1B,SAAS,CAAChwB,KAAK;;QAE7C;;QAEA,IAAI,CAACrF,QAAQ,GAAGV,MAAM,CAACU,QAAQ;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAjrB,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAACrV,aAAa,CAAE;UAAExU,IAAI,EAAE;QAAU,CAAC,CAAE;MAE1C;IAAC;IAAA,OAAA89C,cAAA;EAAA,EApiC2BjqC,eAAe;EAwiC5C,IAAM0uC,gBAAgB,GAAG,aAAc,IAAIvjB,OAAO,EAAE;EACpD,IAAMwjB,MAAM,GAAG,aAAc,IAAItmB,GAAG,EAAE;EACtC,IAAMumB,SAAS,GAAG,aAAc,IAAItnB,MAAM,EAAE;EAC5C,IAAMunB,YAAY,GAAG,aAAc,IAAInvB,OAAO,EAAE;EAEhD,IAAMovB,KAAK,GAAG,aAAc,IAAIpvB,OAAO,EAAE;EACzC,IAAMqvB,KAAK,GAAG,aAAc,IAAIrvB,OAAO,EAAE;EACzC,IAAMsvB,KAAK,GAAG,aAAc,IAAItvB,OAAO,EAAE;EAEzC,IAAMuvB,MAAM,GAAG,aAAc,IAAIvvB,OAAO,EAAE;EAC1C,IAAMwvB,OAAO,GAAG,aAAc,IAAIxvB,OAAO,EAAE;EAE3C,IAAMyvB,MAAM,GAAG,aAAc,IAAI/oC,OAAO,EAAE;EAC1C,IAAMgpC,MAAM,GAAG,aAAc,IAAIhpC,OAAO,EAAE;EAC1C,IAAMipC,MAAM,GAAG,aAAc,IAAIjpC,OAAO,EAAE;EAE1C,IAAMkpC,QAAQ,GAAG,aAAc,IAAI5vB,OAAO,EAAE;EAC5C,IAAM6vB,QAAQ,GAAG,aAAc,IAAI7vB,OAAO,EAAE;EAC5C,IAAM8vB,QAAQ,GAAG,aAAc,IAAI9vB,OAAO,EAAE;EAE5C,IAAM+vB,kBAAkB,GAAG,aAAc,IAAI/vB,OAAO,EAAE;EACtD,IAAMgwB,uBAAuB,GAAG,aAAc,IAAIhwB,OAAO,EAAE;EAAC,IAEtDiwB,IAAI,0BAAAC,SAAA;IAAAl8B,SAAA,CAAAi8B,IAAA,EAAAC,SAAA;IAAA,IAAAC,QAAA,GAAAj8B,YAAA,CAAA+7B,IAAA;IAET,SAAAA,KAAa9qB,QAAQ,GAAG,IAAIolB,cAAc,EAAE,EAAEjS,QAAQ,GAAG,IAAIgN,iBAAiB,EAAE,EAAG;MAAA,IAAA8K,OAAA;MAAAp9C,eAAA,OAAAi9C,IAAA;MAElFG,OAAA,GAAAD,QAAA,CAAAzjD,IAAA;MAEA0jD,OAAA,CAAKvY,MAAM,GAAG,IAAI;MAElBuY,OAAA,CAAK3jD,IAAI,GAAG,MAAM;MAElB2jD,OAAA,CAAKjrB,QAAQ,GAAGA,QAAQ;MACxBirB,OAAA,CAAK9X,QAAQ,GAAGA,QAAQ;MAExB8X,OAAA,CAAKC,kBAAkB,EAAE;MAAC,OAAAD,OAAA;IAE3B;IAAC58C,YAAA,CAAAy8C,IAAA;MAAAvlD,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAAqK,IAAA,CAAA5lD,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAK1jB,MAAM,CAACq7B,qBAAqB,KAAKphD,SAAS,EAAG;UAEjD,IAAI,CAACohD,qBAAqB,GAAGr7B,MAAM,CAACq7B,qBAAqB,CAACv+C,KAAK,EAAE;QAElE;QAEA,IAAKkjB,MAAM,CAACs7B,qBAAqB,KAAKrhD,SAAS,EAAG;UAEjD,IAAI,CAACqhD,qBAAqB,GAAGnmD,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAACs7B,qBAAqB,CAAE;QAE/E;QAEA,IAAI,CAACjY,QAAQ,GAAGrjB,MAAM,CAACqjB,QAAQ;QAC/B,IAAI,CAACnT,QAAQ,GAAGlQ,MAAM,CAACkQ,QAAQ;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAz6B,GAAA;MAAAE,KAAA,EAED,SAAAylD,mBAAA,EAAqB;QAEpB,IAAMlrB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,IAAMylB,eAAe,GAAGzlB,QAAQ,CAACylB,eAAe;QAChD,IAAMr5C,IAAI,GAAGnH,MAAM,CAACmH,IAAI,CAAEq5C,eAAe,CAAE;QAE3C,IAAKr5C,IAAI,CAACf,MAAM,GAAG,CAAC,EAAG;UAEtB,IAAMw7C,cAAc,GAAGpB,eAAe,CAAEr5C,IAAI,CAAE,CAAC,CAAE,CAAE;UAEnD,IAAKy6C,cAAc,KAAK98C,SAAS,EAAG;YAEnC,IAAI,CAACohD,qBAAqB,GAAG,EAAE;YAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;YAE/B,KAAM,IAAI/tC,CAAC,GAAG,CAAC,EAAEguC,EAAE,GAAGxE,cAAc,CAACx7C,MAAM,EAAEgS,CAAC,GAAGguC,EAAE,EAAEhuC,CAAC,EAAG,EAAG;cAE3D,IAAMzR,IAAI,GAAGi7C,cAAc,CAAExpC,CAAC,CAAE,CAACzR,IAAI,IAAI6C,MAAM,CAAE4O,CAAC,CAAE;cAEpD,IAAI,CAAC8tC,qBAAqB,CAACrgD,IAAI,CAAE,CAAC,CAAE;cACpC,IAAI,CAACsgD,qBAAqB,CAAEx/C,IAAI,CAAE,GAAGyR,CAAC;YAEvC;UAED;QAED;MAED;IAAC;MAAA9X,GAAA;MAAAE,KAAA,EAED,SAAA6lD,kBAAmB1vC,KAAK,EAAE3N,MAAM,EAAG;QAElC,IAAM+xB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAME,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;QAC7C,IAAMqrB,aAAa,GAAGvrB,QAAQ,CAACylB,eAAe,CAACvlB,QAAQ;QACvD,IAAMwlB,oBAAoB,GAAG1lB,QAAQ,CAAC0lB,oBAAoB;QAE1Dz3C,MAAM,CAACgX,mBAAmB,CAAEib,QAAQ,EAAEtkB,KAAK,CAAE;QAE7C,IAAM4vC,eAAe,GAAG,IAAI,CAACL,qBAAqB;QAElD,IAAKI,aAAa,IAAIC,eAAe,EAAG;UAEvCnB,OAAO,CAACxpC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UAEtB,KAAM,IAAIvV,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGu1B,aAAa,CAAClgD,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;YAE1D,IAAMmgD,SAAS,GAAGD,eAAe,CAAElgD,CAAC,CAAE;YACtC,IAAMu7C,cAAc,GAAG0E,aAAa,CAAEjgD,CAAC,CAAE;YAEzC,IAAKmgD,SAAS,KAAK,CAAC,EAAG;YAEvBrB,MAAM,CAACnlC,mBAAmB,CAAE4hC,cAAc,EAAEjrC,KAAK,CAAE;YAEnD,IAAK8pC,oBAAoB,EAAG;cAE3B2E,OAAO,CAAC9nC,eAAe,CAAE6nC,MAAM,EAAEqB,SAAS,CAAE;YAE7C,CAAC,MAAM;cAENpB,OAAO,CAAC9nC,eAAe,CAAE6nC,MAAM,CAAC5nC,GAAG,CAAEvU,MAAM,CAAE,EAAEw9C,SAAS,CAAE;YAE3D;UAED;UAEAx9C,MAAM,CAACmU,GAAG,CAAEioC,OAAO,CAAE;QAEtB;QAEA,IAAK,IAAI,CAACtX,aAAa,EAAG;UAEzB,IAAI,CAAC2Y,kBAAkB,CAAE9vC,KAAK,EAAE3N,MAAM,CAAE;QAEzC;QAEA,OAAOA,MAAM;MAEd;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAA0rC,QAASwa,SAAS,EAAEC,UAAU,EAAG;QAEhC,IAAM5rB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAMmT,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAM/W,WAAW,GAAG,IAAI,CAACA,WAAW;QAEpC,IAAK+W,QAAQ,KAAKppC,SAAS,EAAG;;QAE9B;;QAEA,IAAKi2B,QAAQ,CAAC4lB,cAAc,KAAK,IAAI,EAAG5lB,QAAQ,CAAC0mB,qBAAqB,EAAE;QAExEqD,SAAS,CAAC7nC,IAAI,CAAE8d,QAAQ,CAAC4lB,cAAc,CAAE;QACzCmE,SAAS,CAACl4B,YAAY,CAAEuK,WAAW,CAAE;QAErC0tB,MAAM,CAAC5nC,IAAI,CAAEypC,SAAS,CAAChoB,GAAG,CAAE,CAACG,MAAM,CAAE6nB,SAAS,CAACxgB,IAAI,CAAE;QAErD,IAAK4e,SAAS,CAAC3pB,aAAa,CAAE0pB,MAAM,CAACrmB,MAAM,CAAE,KAAK,KAAK,EAAG;UAEzD,IAAKqmB,MAAM,CAACllB,eAAe,CAAEmlB,SAAS,EAAEC,YAAY,CAAE,KAAK,IAAI,EAAG;UAElE,IAAKF,MAAM,CAACrmB,MAAM,CAACrf,iBAAiB,CAAE4lC,YAAY,CAAE,GAAA3tC,IAAA,CAAAmD,GAAA,CAAKmsC,SAAS,CAACvgB,GAAG,GAAGugB,SAAS,CAACxgB,IAAI,EAAM,CAAC,GAAG;QAElG;;QAEA;;QAEA0e,gBAAgB,CAAC3nC,IAAI,CAAEka,WAAW,CAAE,CAAC5T,MAAM,EAAE;QAC7CshC,MAAM,CAAC5nC,IAAI,CAAEypC,SAAS,CAAChoB,GAAG,CAAE,CAAC9R,YAAY,CAAEg4B,gBAAgB,CAAE;;QAE7D;;QAEA,IAAK7pB,QAAQ,CAACJ,WAAW,KAAK,IAAI,EAAG;UAEpC,IAAKkqB,MAAM,CAACvpB,aAAa,CAAEP,QAAQ,CAACJ,WAAW,CAAE,KAAK,KAAK,EAAG;QAE/D;QAEA,IAAIisB,YAAY;QAEhB,IAAMjwC,KAAK,GAAGokB,QAAQ,CAACpkB,KAAK;QAC5B,IAAMskB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;QAC7C,IAAM7O,EAAE,GAAG2O,QAAQ,CAACC,UAAU,CAAC5O,EAAE;QACjC,IAAM6jB,GAAG,GAAGlV,QAAQ,CAACC,UAAU,CAACiV,GAAG;QACnC,IAAMhY,MAAM,GAAG8C,QAAQ,CAACC,UAAU,CAAC/C,MAAM;QACzC,IAAMyoB,MAAM,GAAG3lB,QAAQ,CAAC2lB,MAAM;QAC9B,IAAME,SAAS,GAAG7lB,QAAQ,CAAC6lB,SAAS;QAEpC,IAAKjqC,KAAK,KAAK,IAAI,EAAG;UAErB;;UAEA,IAAKyS,KAAK,CAACC,OAAO,CAAE6kB,QAAQ,CAAE,EAAG;YAEhC,KAAM,IAAI7nC,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG2vB,MAAM,CAACt6C,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;cAEnD,IAAM48C,KAAK,GAAGvC,MAAM,CAAEr6C,CAAC,CAAE;cACzB,IAAMwgD,aAAa,GAAG3Y,QAAQ,CAAE+U,KAAK,CAAC5B,aAAa,CAAE;cAErD,IAAMR,KAAK,GAAGzpC,IAAI,CAACa,GAAG,CAAEgrC,KAAK,CAACpC,KAAK,EAAED,SAAS,CAACC,KAAK,CAAE;cACtD,IAAMiG,GAAG,GAAG1vC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACia,KAAK,EAAExZ,IAAI,CAACY,GAAG,CAAIirC,KAAK,CAACpC,KAAK,GAAGoC,KAAK,CAACryB,KAAK,EAAMgwB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAChwB,KAAK,CAAI,CAAE;cAErH,KAAM,IAAIqM,CAAC,GAAG4jB,KAAK,EAAEgB,EAAE,GAAGiF,GAAG,EAAE7pB,CAAC,GAAG4kB,EAAE,EAAE5kB,CAAC,IAAI,CAAC,EAAG;gBAE/C,IAAMniB,CAAC,GAAGnE,KAAK,CAACuJ,IAAI,CAAE+c,CAAC,CAAE;gBACzB,IAAMliB,CAAC,GAAGpE,KAAK,CAACuJ,IAAI,CAAE+c,CAAC,GAAG,CAAC,CAAE;gBAC7B,IAAMjiB,CAAC,GAAGrE,KAAK,CAACuJ,IAAI,CAAE+c,CAAC,GAAG,CAAC,CAAE;gBAE7B2pB,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAEF,aAAa,EAAEH,SAAS,EAAE7B,MAAM,EAAEz4B,EAAE,EAAE6jB,GAAG,EAAEhY,MAAM,EAAEnd,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAE;gBAE5G,IAAK4rC,YAAY,EAAG;kBAEnBA,YAAY,CAACI,SAAS,GAAG5vC,IAAI,CAACsC,KAAK,CAAEujB,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;kBAC9C2pB,YAAY,CAACK,IAAI,CAAC5F,aAAa,GAAG4B,KAAK,CAAC5B,aAAa;kBACrDsF,UAAU,CAAC9gD,IAAI,CAAE+gD,YAAY,CAAE;gBAEhC;cAED;YAED;UAED,CAAC,MAAM;YAEN,IAAM/F,OAAK,GAAGzpC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE2oC,SAAS,CAACC,KAAK,CAAE;YAC5C,IAAMiG,KAAG,GAAG1vC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACia,KAAK,EAAIgwB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAChwB,KAAK,CAAI;YAE1E,KAAM,IAAIvqB,IAAC,GAAGw6C,OAAK,EAAE9vB,IAAE,GAAG+1B,KAAG,EAAEzgD,IAAC,GAAG0qB,IAAE,EAAE1qB,IAAC,IAAI,CAAC,EAAG;cAE/C,IAAMyU,EAAC,GAAGnE,KAAK,CAACuJ,IAAI,CAAE7Z,IAAC,CAAE;cACzB,IAAM0U,EAAC,GAAGpE,KAAK,CAACuJ,IAAI,CAAE7Z,IAAC,GAAG,CAAC,CAAE;cAC7B,IAAM2U,EAAC,GAAGrE,KAAK,CAACuJ,IAAI,CAAE7Z,IAAC,GAAG,CAAC,CAAE;cAE7BugD,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAE7Y,QAAQ,EAAEwY,SAAS,EAAE7B,MAAM,EAAEz4B,EAAE,EAAE6jB,GAAG,EAAEhY,MAAM,EAAEnd,EAAC,EAAEC,EAAC,EAAEC,EAAC,CAAE;cAEvG,IAAK4rC,YAAY,EAAG;gBAEnBA,YAAY,CAACI,SAAS,GAAG5vC,IAAI,CAACsC,KAAK,CAAErT,IAAC,GAAG,CAAC,CAAE,CAAC,CAAC;gBAC9CsgD,UAAU,CAAC9gD,IAAI,CAAE+gD,YAAY,CAAE;cAEhC;YAED;UAED;QAED,CAAC,MAAM,IAAK3rB,QAAQ,KAAKn2B,SAAS,EAAG;UAEpC;;UAEA,IAAKskB,KAAK,CAACC,OAAO,CAAE6kB,QAAQ,CAAE,EAAG;YAEhC,KAAM,IAAI7nC,IAAC,GAAG,CAAC,EAAE0qB,IAAE,GAAG2vB,MAAM,CAACt6C,MAAM,EAAEC,IAAC,GAAG0qB,IAAE,EAAE1qB,IAAC,EAAG,EAAG;cAEnD,IAAM48C,OAAK,GAAGvC,MAAM,CAAEr6C,IAAC,CAAE;cACzB,IAAMwgD,cAAa,GAAG3Y,QAAQ,CAAE+U,OAAK,CAAC5B,aAAa,CAAE;cAErD,IAAMR,OAAK,GAAGzpC,IAAI,CAACa,GAAG,CAAEgrC,OAAK,CAACpC,KAAK,EAAED,SAAS,CAACC,KAAK,CAAE;cACtD,IAAMiG,KAAG,GAAG1vC,IAAI,CAACY,GAAG,CAAEijB,QAAQ,CAACrK,KAAK,EAAExZ,IAAI,CAACY,GAAG,CAAIirC,OAAK,CAACpC,KAAK,GAAGoC,OAAK,CAACryB,KAAK,EAAMgwB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAChwB,KAAK,CAAI,CAAE;cAExH,KAAM,IAAIqM,GAAC,GAAG4jB,OAAK,EAAEgB,IAAE,GAAGiF,KAAG,EAAE7pB,GAAC,GAAG4kB,IAAE,EAAE5kB,GAAC,IAAI,CAAC,EAAG;gBAE/C,IAAMniB,GAAC,GAAGmiB,GAAC;gBACX,IAAMliB,GAAC,GAAGkiB,GAAC,GAAG,CAAC;gBACf,IAAMjiB,GAAC,GAAGiiB,GAAC,GAAG,CAAC;gBAEf2pB,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAEF,cAAa,EAAEH,SAAS,EAAE7B,MAAM,EAAEz4B,EAAE,EAAE6jB,GAAG,EAAEhY,MAAM,EAAEnd,GAAC,EAAEC,GAAC,EAAEC,GAAC,CAAE;gBAE5G,IAAK4rC,YAAY,EAAG;kBAEnBA,YAAY,CAACI,SAAS,GAAG5vC,IAAI,CAACsC,KAAK,CAAEujB,GAAC,GAAG,CAAC,CAAE,CAAC,CAAC;kBAC9C2pB,YAAY,CAACK,IAAI,CAAC5F,aAAa,GAAG4B,OAAK,CAAC5B,aAAa;kBACrDsF,UAAU,CAAC9gD,IAAI,CAAE+gD,YAAY,CAAE;gBAEhC;cAED;YAED;UAED,CAAC,MAAM;YAEN,IAAM/F,OAAK,GAAGzpC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE2oC,SAAS,CAACC,KAAK,CAAE;YAC5C,IAAMiG,KAAG,GAAG1vC,IAAI,CAACY,GAAG,CAAEijB,QAAQ,CAACrK,KAAK,EAAIgwB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAChwB,KAAK,CAAI;YAE7E,KAAM,IAAIvqB,IAAC,GAAGw6C,OAAK,EAAE9vB,IAAE,GAAG+1B,KAAG,EAAEzgD,IAAC,GAAG0qB,IAAE,EAAE1qB,IAAC,IAAI,CAAC,EAAG;cAE/C,IAAMyU,GAAC,GAAGzU,IAAC;cACX,IAAM0U,GAAC,GAAG1U,IAAC,GAAG,CAAC;cACf,IAAM2U,GAAC,GAAG3U,IAAC,GAAG,CAAC;cAEfugD,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAE7Y,QAAQ,EAAEwY,SAAS,EAAE7B,MAAM,EAAEz4B,EAAE,EAAE6jB,GAAG,EAAEhY,MAAM,EAAEnd,GAAC,EAAEC,GAAC,EAAEC,GAAC,CAAE;cAEvG,IAAK4rC,YAAY,EAAG;gBAEnBA,YAAY,CAACI,SAAS,GAAG5vC,IAAI,CAACsC,KAAK,CAAErT,IAAC,GAAG,CAAC,CAAE,CAAC,CAAC;gBAC9CsgD,UAAU,CAAC9gD,IAAI,CAAE+gD,YAAY,CAAE;cAEhC;YAED;UAED;QAED;MAED;IAAC;IAAA,OAAAf,IAAA;EAAA,EA/RiBrd,QAAQ;EAmS3B,SAAS0e,iBAAiBA,CAAE7/C,MAAM,EAAE6mC,QAAQ,EAAEwY,SAAS,EAAEhoB,GAAG,EAAE8kB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEppB,KAAK,EAAG;IAEjF,IAAIsC,SAAS;IAEb,IAAKsR,QAAQ,CAAC0D,IAAI,KAAK/lC,QAAQ,EAAG;MAEjC+wB,SAAS,GAAG8B,GAAG,CAACoC,iBAAiB,CAAE4iB,EAAE,EAAED,EAAE,EAAED,EAAE,EAAE,IAAI,EAAElpB,KAAK,CAAE;IAE7D,CAAC,MAAM;MAENsC,SAAS,GAAG8B,GAAG,CAACoC,iBAAiB,CAAE0iB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAIxV,QAAQ,CAAC0D,IAAI,KAAKhmC,SAAS,EAAI0uB,KAAK,CAAE;IAExF;IAEA,IAAKsC,SAAS,KAAK,IAAI,EAAG,OAAO,IAAI;IAErCgpB,uBAAuB,CAAC3oC,IAAI,CAAEqd,KAAK,CAAE;IACrCsrB,uBAAuB,CAACh5B,YAAY,CAAEvlB,MAAM,CAAC8vB,WAAW,CAAE;IAE1D,IAAMuT,QAAQ,GAAGgc,SAAS,CAAChoB,GAAG,CAACF,MAAM,CAACtf,UAAU,CAAE0mC,uBAAuB,CAAE;IAE3E,IAAKlb,QAAQ,GAAGgc,SAAS,CAACxgB,IAAI,IAAIwE,QAAQ,GAAGgc,SAAS,CAACvgB,GAAG,EAAG,OAAO,IAAI;IAExE,OAAO;MACNuE,QAAQ,EAAEA,QAAQ;MAClBpQ,KAAK,EAAEsrB,uBAAuB,CAAC5oC,KAAK,EAAE;MACtC3V,MAAM,EAAEA;IACT,CAAC;EAEF;EAEA,SAAS0/C,yBAAyBA,CAAE1/C,MAAM,EAAE6mC,QAAQ,EAAEwY,SAAS,EAAEhoB,GAAG,EAAEtS,EAAE,EAAE6jB,GAAG,EAAEhY,MAAM,EAAEnd,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;IAEhG3T,MAAM,CAACg/C,iBAAiB,CAAEvrC,CAAC,EAAEkqC,KAAK,CAAE;IACpC39C,MAAM,CAACg/C,iBAAiB,CAAEtrC,CAAC,EAAEkqC,KAAK,CAAE;IACpC59C,MAAM,CAACg/C,iBAAiB,CAAErrC,CAAC,EAAEkqC,KAAK,CAAE;IAEpC,IAAM0B,YAAY,GAAGM,iBAAiB,CAAE7/C,MAAM,EAAE6mC,QAAQ,EAAEwY,SAAS,EAAEhoB,GAAG,EAAEsmB,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAES,kBAAkB,CAAE;IAEnH,IAAKiB,YAAY,EAAG;MAEnB,IAAKx6B,EAAE,EAAG;QAETi5B,MAAM,CAACrlC,mBAAmB,CAAEoM,EAAE,EAAEtR,CAAC,CAAE;QACnCwqC,MAAM,CAACtlC,mBAAmB,CAAEoM,EAAE,EAAErR,CAAC,CAAE;QACnCwqC,MAAM,CAACvlC,mBAAmB,CAAEoM,EAAE,EAAEpR,CAAC,CAAE;QAEnC4rC,YAAY,CAACx6B,EAAE,GAAG+iB,QAAQ,CAACgB,gBAAgB,CAAEwV,kBAAkB,EAAEX,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEG,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,IAAIjpC,OAAO,EAAE,CAAE;MAE9H;MAEA,IAAK2zB,GAAG,EAAG;QAEVoV,MAAM,CAACrlC,mBAAmB,CAAEiwB,GAAG,EAAEn1B,CAAC,CAAE;QACpCwqC,MAAM,CAACtlC,mBAAmB,CAAEiwB,GAAG,EAAEl1B,CAAC,CAAE;QACpCwqC,MAAM,CAACvlC,mBAAmB,CAAEiwB,GAAG,EAAEj1B,CAAC,CAAE;QAEpC4rC,YAAY,CAAC3W,GAAG,GAAGd,QAAQ,CAACgB,gBAAgB,CAAEwV,kBAAkB,EAAEX,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEG,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,IAAIjpC,OAAO,EAAE,CAAE;MAE/H;MAEA,IAAK2b,MAAM,EAAG;QAEbutB,QAAQ,CAACxlC,mBAAmB,CAAEiY,MAAM,EAAEnd,CAAC,CAAE;QACzC2qC,QAAQ,CAACzlC,mBAAmB,CAAEiY,MAAM,EAAEld,CAAC,CAAE;QACzC2qC,QAAQ,CAAC1lC,mBAAmB,CAAEiY,MAAM,EAAEjd,CAAC,CAAE;QAEzC4rC,YAAY,CAAC3uB,MAAM,GAAGkX,QAAQ,CAACgB,gBAAgB,CAAEwV,kBAAkB,EAAEX,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEM,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAE,IAAI9vB,OAAO,EAAE,CAAE;QAEvI,IAAKgxB,YAAY,CAAC3uB,MAAM,CAAC1Z,GAAG,CAAEmgB,GAAG,CAACD,SAAS,CAAE,GAAG,CAAC,EAAG;UAEnDmoB,YAAY,CAAC3uB,MAAM,CAACta,cAAc,CAAE,CAAE,CAAC,CAAE;QAE1C;MAED;MAEA,IAAMspC,IAAI,GAAG;QACZnsC,CAAC,EAAEA,CAAC;QACJC,CAAC,EAAEA,CAAC;QACJC,CAAC,EAAEA,CAAC;QACJid,MAAM,EAAE,IAAIrC,OAAO,EAAE;QACrByrB,aAAa,EAAE;MAChB,CAAC;MAEDlS,QAAQ,CAACQ,SAAS,CAAEqV,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAE+B,IAAI,CAAChvB,MAAM,CAAE;MAEtD2uB,YAAY,CAACK,IAAI,GAAGA,IAAI;IAEzB;IAEA,OAAOL,YAAY;EAEpB;EAAC,IAEKO,WAAW,0BAAAC,eAAA;IAAAx9B,SAAA,CAAAu9B,WAAA,EAAAC,eAAA;IAAA,IAAAC,QAAA,GAAAv9B,YAAA,CAAAq9B,WAAA;IAEhB,SAAAA,YAAar/B,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE0G,KAAK,GAAG,CAAC,EAAE64B,aAAa,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAEC,aAAa,GAAG,CAAC,EAAG;MAAA,IAAAC,OAAA;MAAA7+C,eAAA,OAAAu+C,WAAA;MAEzGM,OAAA,GAAAJ,QAAA,CAAA/kD,IAAA;MAEAmlD,OAAA,CAAKplD,IAAI,GAAG,aAAa;MAEzBolD,OAAA,CAAK7Z,UAAU,GAAG;QACjB9lB,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA,MAAM;QACd0G,KAAK,EAAEA,KAAK;QACZ64B,aAAa,EAAEA,aAAa;QAC5BC,cAAc,EAAEA,cAAc;QAC9BC,aAAa,EAAEA;MAChB,CAAC;MAED,IAAME,KAAK,GAAA98B,sBAAA,CAAA68B,OAAA,CAAO;;MAElB;;MAEAH,aAAa,GAAGlwC,IAAI,CAACsC,KAAK,CAAE4tC,aAAa,CAAE;MAC3CC,cAAc,GAAGnwC,IAAI,CAACsC,KAAK,CAAE6tC,cAAc,CAAE;MAC7CC,aAAa,GAAGpwC,IAAI,CAACsC,KAAK,CAAE8tC,aAAa,CAAE;;MAE3C;;MAEA,IAAMzF,OAAO,GAAG,EAAE;MAClB,IAAM4F,QAAQ,GAAG,EAAE;MACnB,IAAM1F,OAAO,GAAG,EAAE;MAClB,IAAMC,GAAG,GAAG,EAAE;;MAEd;;MAEA,IAAI0F,gBAAgB,GAAG,CAAC;MACxB,IAAIC,UAAU,GAAG,CAAC;;MAElB;;MAEAC,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAEr5B,KAAK,EAAE1G,MAAM,EAAED,KAAK,EAAE0/B,aAAa,EAAED,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC;MAC/FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAEr5B,KAAK,EAAE1G,MAAM,EAAE,CAAED,KAAK,EAAE0/B,aAAa,EAAED,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC;MAC/FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEhgC,KAAK,EAAE2G,KAAK,EAAE1G,MAAM,EAAEu/B,aAAa,EAAEE,aAAa,EAAE,CAAC,CAAE,CAAC,CAAC;MAC1FM,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAEhgC,KAAK,EAAE2G,KAAK,EAAE,CAAE1G,MAAM,EAAEu/B,aAAa,EAAEE,aAAa,EAAE,CAAC,CAAE,CAAC,CAAC;MAC9FM,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAEhgC,KAAK,EAAEC,MAAM,EAAE0G,KAAK,EAAE64B,aAAa,EAAEC,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC;MAC7FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAEhgC,KAAK,EAAEC,MAAM,EAAE,CAAE0G,KAAK,EAAE64B,aAAa,EAAEC,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC;;MAEjG;;MAEAE,OAAA,CAAK1G,QAAQ,CAAEgB,OAAO,CAAE;MACxB0F,OAAA,CAAKxG,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1EF,OAAA,CAAKxG,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MACvEwF,OAAA,CAAKxG,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;MAE/D,SAAS4F,UAAUA,CAAE9uB,CAAC,EAAE9b,CAAC,EAAEsP,CAAC,EAAEu7B,IAAI,EAAEC,IAAI,EAAElgC,KAAK,EAAEC,MAAM,EAAE0G,KAAK,EAAEw5B,KAAK,EAAEC,KAAK,EAAE7G,aAAa,EAAG;QAE7F,IAAM8G,YAAY,GAAGrgC,KAAK,GAAGmgC,KAAK;QAClC,IAAMG,aAAa,GAAGrgC,MAAM,GAAGmgC,KAAK;QAEpC,IAAMG,SAAS,GAAGvgC,KAAK,GAAG,CAAC;QAC3B,IAAMwgC,UAAU,GAAGvgC,MAAM,GAAG,CAAC;QAC7B,IAAMwgC,SAAS,GAAG95B,KAAK,GAAG,CAAC;QAE3B,IAAM+5B,MAAM,GAAGP,KAAK,GAAG,CAAC;QACxB,IAAMQ,MAAM,GAAGP,KAAK,GAAG,CAAC;QAExB,IAAIQ,aAAa,GAAG,CAAC;QACrB,IAAIC,UAAU,GAAG,CAAC;QAElB,IAAMnuB,MAAM,GAAG,IAAI5E,OAAO,EAAE;;QAE5B;;QAEA,KAAM,IAAIc,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG+xB,MAAM,EAAE/xB,EAAE,EAAG,EAAG;UAEtC,IAAM9d,CAAC,GAAG8d,EAAE,GAAG0xB,aAAa,GAAGE,UAAU;UAEzC,KAAM,IAAI7xB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG+xB,MAAM,EAAE/xB,EAAE,EAAG,EAAG;YAEtC,IAAMne,CAAC,GAAGme,EAAE,GAAG0xB,YAAY,GAAGE,SAAS;;YAEvC;;YAEA7tB,MAAM,CAAExB,CAAC,CAAE,GAAG1gB,CAAC,GAAGyvC,IAAI;YACtBvtB,MAAM,CAAEtd,CAAC,CAAE,GAAGtE,CAAC,GAAGovC,IAAI;YACtBxtB,MAAM,CAAEhO,CAAC,CAAE,GAAG+7B,SAAS;;YAEvB;;YAEAZ,QAAQ,CAAC9hD,IAAI,CAAE20B,MAAM,CAACliB,CAAC,EAAEkiB,MAAM,CAAC5hB,CAAC,EAAE4hB,MAAM,CAACjO,CAAC,CAAE;;YAE7C;;YAEAiO,MAAM,CAAExB,CAAC,CAAE,GAAG,CAAC;YACfwB,MAAM,CAAEtd,CAAC,CAAE,GAAG,CAAC;YACfsd,MAAM,CAAEhO,CAAC,CAAE,GAAGiC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;;YAEjC;;YAEAwzB,OAAO,CAACp8C,IAAI,CAAE20B,MAAM,CAACliB,CAAC,EAAEkiB,MAAM,CAAC5hB,CAAC,EAAE4hB,MAAM,CAACjO,CAAC,CAAE;;YAE5C;;YAEA21B,GAAG,CAACr8C,IAAI,CAAE4wB,EAAE,GAAGwxB,KAAK,CAAE;YACtB/F,GAAG,CAACr8C,IAAI,CAAE,CAAC,GAAK6wB,EAAE,GAAGwxB,KAAO,CAAE;;YAE9B;;YAEAQ,aAAa,IAAI,CAAC;UAEnB;QAED;;QAEA;;QAEA;QACA;QACA;;QAEA,KAAM,IAAIhyB,GAAE,GAAG,CAAC,EAAEA,GAAE,GAAGwxB,KAAK,EAAExxB,GAAE,EAAG,EAAG;UAErC,KAAM,IAAID,GAAE,GAAG,CAAC,EAAEA,GAAE,GAAGwxB,KAAK,EAAExxB,GAAE,EAAG,EAAG;YAErC,IAAM3b,CAAC,GAAG8sC,gBAAgB,GAAGnxB,GAAE,GAAG+xB,MAAM,GAAG9xB,GAAE;YAC7C,IAAM3b,CAAC,GAAG6sC,gBAAgB,GAAGnxB,GAAE,GAAG+xB,MAAM,IAAK9xB,GAAE,GAAG,CAAC,CAAE;YACrD,IAAM1b,CAAC,GAAG4sC,gBAAgB,IAAKnxB,GAAE,GAAG,CAAC,CAAE,GAAG+xB,MAAM,IAAK9xB,GAAE,GAAG,CAAC,CAAE;YAC7D,IAAMvT,CAAC,GAAGykC,gBAAgB,IAAKnxB,GAAE,GAAG,CAAC,CAAE,GAAG+xB,MAAM,GAAG9xB,GAAE;;YAErD;;YAEAqrB,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;YACvB4+B,OAAO,CAACl8C,IAAI,CAAEkV,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;;YAEvB;;YAEAwlC,UAAU,IAAI,CAAC;UAEhB;QAED;;QAEA;;QAEAjB,KAAK,CAACtG,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAEtH,aAAa,CAAE;;QAEvD;;QAEAwG,UAAU,IAAIc,UAAU;;QAExB;;QAEAf,gBAAgB,IAAIc,aAAa;MAElC;MAAC,OAAAjB,OAAA;IAEF;IAACr+C,YAAA,CAAA+9C,WAAA;MAAA7mD,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA2L,WAAA,CAAAlnD,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAIy+B,WAAW,CAAEz+B,IAAI,CAACZ,KAAK,EAAEY,IAAI,CAACX,MAAM,EAAEW,IAAI,CAAC+F,KAAK,EAAE/F,IAAI,CAAC4+B,aAAa,EAAE5+B,IAAI,CAAC6+B,cAAc,EAAE7+B,IAAI,CAAC8+B,aAAa,CAAE;MAE3H;IAAC;IAAA,OAAAL,WAAA;EAAA,EA3KwBhH,cAAc;EA+KxC;AACD;AACA;EAEC,SAAS0I,aAAaA,CAAElhC,GAAG,EAAG;IAE7B,IAAM8M,GAAG,GAAG,CAAC,CAAC;IAEd,KAAM,IAAMuE,CAAC,IAAIrR,GAAG,EAAG;MAEtB8M,GAAG,CAAEuE,CAAC,CAAE,GAAG,CAAC,CAAC;MAEb,KAAM,IAAMqN,CAAC,IAAI1e,GAAG,CAAEqR,CAAC,CAAE,EAAG;QAE3B,IAAM8vB,QAAQ,GAAGnhC,GAAG,CAAEqR,CAAC,CAAE,CAAEqN,CAAC,CAAE;QAE9B,IAAKyiB,QAAQ,KAAMA,QAAQ,CAACvb,OAAO,IAClCub,QAAQ,CAACroC,SAAS,IAAIqoC,QAAQ,CAACxnB,SAAS,IACxCwnB,QAAQ,CAACtsC,SAAS,IAAIssC,QAAQ,CAAChzB,SAAS,IAAIgzB,QAAQ,CAACr8B,SAAS,IAC9Dq8B,QAAQ,CAACn+B,SAAS,IAAIm+B,QAAQ,CAAC53B,YAAY,CAAE,EAAG;UAEhD,IAAK43B,QAAQ,CAACr9B,qBAAqB,EAAG;YAErC1hB,OAAO,CAACC,IAAI,CAAE,oGAAoG,CAAE;YACpHyqB,GAAG,CAAEuE,CAAC,CAAE,CAAEqN,CAAC,CAAE,GAAG,IAAI;UAErB,CAAC,MAAM;YAEN5R,GAAG,CAAEuE,CAAC,CAAE,CAAEqN,CAAC,CAAE,GAAGyiB,QAAQ,CAAC9rC,KAAK,EAAE;UAEjC;QAED,CAAC,MAAM,IAAKoM,KAAK,CAACC,OAAO,CAAEy/B,QAAQ,CAAE,EAAG;UAEvCr0B,GAAG,CAAEuE,CAAC,CAAE,CAAEqN,CAAC,CAAE,GAAGyiB,QAAQ,CAACnhD,KAAK,EAAE;QAEjC,CAAC,MAAM;UAEN8sB,GAAG,CAAEuE,CAAC,CAAE,CAAEqN,CAAC,CAAE,GAAGyiB,QAAQ;QAEzB;MAED;IAED;IAEA,OAAOr0B,GAAG;EAEX;EAEA,SAASs0B,aAAaA,CAAEC,QAAQ,EAAG;IAElC,IAAMC,MAAM,GAAG,CAAC,CAAC;IAEjB,KAAM,IAAIjwB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgwB,QAAQ,CAAC5iD,MAAM,EAAE4yB,CAAC,EAAG,EAAG;MAE5C,IAAMlV,IAAG,GAAG+kC,aAAa,CAAEG,QAAQ,CAAEhwB,CAAC,CAAE,CAAE;MAE1C,KAAM,IAAMqN,CAAC,IAAIviB,IAAG,EAAG;QAEtBmlC,MAAM,CAAE5iB,CAAC,CAAE,GAAGviB,IAAG,CAAEuiB,CAAC,CAAE;MAEvB;IAED;IAEA,OAAO4iB,MAAM;EAEd;EAEA,SAASC,mBAAmBA,CAAEvhC,GAAG,EAAG;IAEnC,IAAM8M,GAAG,GAAG,EAAE;IAEd,KAAM,IAAIuE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrR,GAAG,CAACvhB,MAAM,EAAE4yB,CAAC,EAAG,EAAG;MAEvCvE,GAAG,CAAC5uB,IAAI,CAAE8hB,GAAG,CAAEqR,CAAC,CAAE,CAAChc,KAAK,EAAE,CAAE;IAE7B;IAEA,OAAOyX,GAAG;EAEX;EAEA,SAAS00B,yBAAyBA,CAAEC,QAAQ,EAAG;IAE9C,IAAKA,QAAQ,CAACC,eAAe,EAAE,KAAK,IAAI,EAAG;MAE1C;MACA,OAAOD,QAAQ,CAACE,cAAc,KAAKz1C,YAAY,GAAGM,cAAc,GAAGC,oBAAoB;IAExF;IAEA,OAAOA,oBAAoB;EAE5B;;EAEA;;EAEA,IAAMm1C,aAAa,GAAG;IAAEvsC,KAAK,EAAE6rC,aAAa;IAAE5E,KAAK,EAAE8E;EAAc,CAAC;EAEpE,IAAIS,cAAc,GAAG,+FAA+F;EAEpH,IAAIC,gBAAgB,GAAG,gEAAgE;EAAC,IAElFC,cAAc,0BAAAC,UAAA;IAAA//B,SAAA,CAAA8/B,cAAA,EAAAC,UAAA;IAAA,IAAAC,QAAA,GAAA9/B,YAAA,CAAA4/B,cAAA;IAEnB,SAAAA,eAAa9b,UAAU,EAAG;MAAA,IAAAic,OAAA;MAAAjhD,eAAA,OAAA8gD,cAAA;MAEzBG,OAAA,GAAAD,QAAA,CAAAtnD,IAAA;MAEAunD,OAAA,CAAKC,gBAAgB,GAAG,IAAI;MAE5BD,OAAA,CAAKxnD,IAAI,GAAG,gBAAgB;MAE5BwnD,OAAA,CAAKE,OAAO,GAAG,CAAC,CAAC;MACjBF,OAAA,CAAKb,QAAQ,GAAG,CAAC,CAAC;MAClBa,OAAA,CAAKG,cAAc,GAAG,EAAE;MAExBH,OAAA,CAAKI,YAAY,GAAGT,cAAc;MAClCK,OAAA,CAAKK,cAAc,GAAGT,gBAAgB;MAEtCI,OAAA,CAAK7R,SAAS,GAAG,CAAC;MAElB6R,OAAA,CAAKzR,SAAS,GAAG,KAAK;MACtByR,OAAA,CAAKxR,kBAAkB,GAAG,CAAC;MAE3BwR,OAAA,CAAKpR,GAAG,GAAG,KAAK,CAAC,CAAC;MAClBoR,OAAA,CAAKM,MAAM,GAAG,KAAK,CAAC,CAAC;MACrBN,OAAA,CAAKO,QAAQ,GAAG,KAAK,CAAC,CAAC;;MAEvBP,OAAA,CAAKhW,eAAe,GAAG,IAAI;MAE3BgW,OAAA,CAAKQ,UAAU,GAAG;QACjBC,WAAW,EAAE,KAAK;QAAE;QACpBC,SAAS,EAAE,KAAK;QAAE;QAClBC,WAAW,EAAE,KAAK;QAAE;QACpBC,gBAAgB,EAAE,KAAK,CAAC;MACzB,CAAC;;MAED;MACA;MACAZ,OAAA,CAAKa,sBAAsB,GAAG;QAC7B,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACpB,IAAI,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;QACd,KAAK,EAAE,CAAE,CAAC,EAAE,CAAC;MACd,CAAC;MAEDb,OAAA,CAAKc,mBAAmB,GAAG7lD,SAAS;MACpC+kD,OAAA,CAAKe,kBAAkB,GAAG,KAAK;MAE/Bf,OAAA,CAAKgB,WAAW,GAAG,IAAI;MAEvB,IAAKjd,UAAU,KAAK9oC,SAAS,EAAG;QAE/B+kD,OAAA,CAAKzV,SAAS,CAAExG,UAAU,CAAE;MAE7B;MAAC,OAAAic,OAAA;IAEF;IAACzgD,YAAA,CAAAsgD,cAAA;MAAAppD,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAkO,cAAA,CAAAzpD,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACq/B,cAAc,GAAGr/B,MAAM,CAACq/B,cAAc;QAC3C,IAAI,CAACD,YAAY,GAAGp/B,MAAM,CAACo/B,YAAY;QAEvC,IAAI,CAACjB,QAAQ,GAAGH,aAAa,CAAEh+B,MAAM,CAACm+B,QAAQ,CAAE;QAChD,IAAI,CAACgB,cAAc,GAAGd,mBAAmB,CAAEr+B,MAAM,CAACm/B,cAAc,CAAE;QAElE,IAAI,CAACD,OAAO,GAAG/pD,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAACk/B,OAAO,CAAE;QAElD,IAAI,CAAC3R,SAAS,GAAGvtB,MAAM,CAACutB,SAAS;QACjC,IAAI,CAACC,kBAAkB,GAAGxtB,MAAM,CAACwtB,kBAAkB;QAEnD,IAAI,CAACI,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QACrB,IAAI,CAAC0R,MAAM,GAAGt/B,MAAM,CAACs/B,MAAM;QAC3B,IAAI,CAACC,QAAQ,GAAGv/B,MAAM,CAACu/B,QAAQ;QAE/B,IAAI,CAACC,UAAU,GAAGrqD,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAACw/B,UAAU,CAAE;QAExD,IAAI,CAACQ,WAAW,GAAGhgC,MAAM,CAACggC,WAAW;QAErC,OAAO,IAAI;MAEZ;IAAC;MAAAvqD,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAML,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAkO,cAAA,CAAAzpD,SAAA,mBAAAqC,IAAA,OAAiBymB,IAAI,CAAE;QAEjCL,IAAI,CAACmiC,WAAW,GAAG,IAAI,CAACA,WAAW;QACnCniC,IAAI,CAACsgC,QAAQ,GAAG,CAAC,CAAC;QAElB,KAAM,IAAMriD,IAAI,IAAI,IAAI,CAACqiD,QAAQ,EAAG;UAEnC,IAAM8B,OAAO,GAAG,IAAI,CAAC9B,QAAQ,CAAEriD,IAAI,CAAE;UACrC,IAAMnG,MAAK,GAAGsqD,OAAO,CAACtqD,KAAK;UAE3B,IAAKA,MAAK,IAAIA,MAAK,CAACmqB,SAAS,EAAG;YAE/BjC,IAAI,CAACsgC,QAAQ,CAAEriD,IAAI,CAAE,GAAG;cACvBtE,IAAI,EAAE,GAAG;cACT7B,KAAK,EAAEA,MAAK,CAACsoB,MAAM,CAAEC,IAAI,CAAE,CAAClR;YAC7B,CAAC;UAEF,CAAC,MAAM,IAAKrX,MAAK,IAAIA,MAAK,CAAC+sC,OAAO,EAAG;YAEpC7kB,IAAI,CAACsgC,QAAQ,CAAEriD,IAAI,CAAE,GAAG;cACvBtE,IAAI,EAAE,GAAG;cACT7B,KAAK,EAAEA,MAAK,CAAC+zC,MAAM;YACpB,CAAC;UAEF,CAAC,MAAM,IAAK/zC,MAAK,IAAIA,MAAK,CAACgc,SAAS,EAAG;YAEtCkM,IAAI,CAACsgC,QAAQ,CAAEriD,IAAI,CAAE,GAAG;cACvBtE,IAAI,EAAE,IAAI;cACV7B,KAAK,EAAEA,MAAK,CAACuf,OAAO;YACrB,CAAC;UAEF,CAAC,MAAM,IAAKvf,MAAK,IAAIA,MAAK,CAACs1B,SAAS,EAAG;YAEtCpN,IAAI,CAACsgC,QAAQ,CAAEriD,IAAI,CAAE,GAAG;cACvBtE,IAAI,EAAE,IAAI;cACV7B,KAAK,EAAEA,MAAK,CAACuf,OAAO;YACrB,CAAC;UAEF,CAAC,MAAM,IAAKvf,MAAK,IAAIA,MAAK,CAACisB,SAAS,EAAG;YAEtC/D,IAAI,CAACsgC,QAAQ,CAAEriD,IAAI,CAAE,GAAG;cACvBtE,IAAI,EAAE,IAAI;cACV7B,KAAK,EAAEA,MAAK,CAACuf,OAAO;YACrB,CAAC;UAEF,CAAC,MAAM,IAAKvf,MAAK,IAAIA,MAAK,CAACigB,SAAS,EAAG;YAEtCiI,IAAI,CAACsgC,QAAQ,CAAEriD,IAAI,CAAE,GAAG;cACvBtE,IAAI,EAAE,IAAI;cACV7B,KAAK,EAAEA,MAAK,CAACuf,OAAO;YACrB,CAAC;UAEF,CAAC,MAAM,IAAKvf,MAAK,IAAIA,MAAK,CAAC8gC,SAAS,EAAG;YAEtC5Y,IAAI,CAACsgC,QAAQ,CAAEriD,IAAI,CAAE,GAAG;cACvBtE,IAAI,EAAE,IAAI;cACV7B,KAAK,EAAEA,MAAK,CAACuf,OAAO;YACrB,CAAC;UAEF,CAAC,MAAM;YAEN2I,IAAI,CAACsgC,QAAQ,CAAEriD,IAAI,CAAE,GAAG;cACvBnG,KAAK,EAAEA;YACR,CAAC;;YAED;UAED;QAED;;QAEA,IAAKR,MAAM,CAACmH,IAAI,CAAE,IAAI,CAAC4iD,OAAO,CAAE,CAAC3jD,MAAM,GAAG,CAAC,EAAGsiB,IAAI,CAACqhC,OAAO,GAAG,IAAI,CAACA,OAAO;QAEzErhC,IAAI,CAACuhC,YAAY,GAAG,IAAI,CAACA,YAAY;QACrCvhC,IAAI,CAACwhC,cAAc,GAAG,IAAI,CAACA,cAAc;QAEzC,IAAMG,UAAU,GAAG,CAAC,CAAC;QAErB,KAAM,IAAM/pD,GAAG,IAAI,IAAI,CAAC+pD,UAAU,EAAG;UAEpC,IAAK,IAAI,CAACA,UAAU,CAAE/pD,GAAG,CAAE,KAAK,IAAI,EAAG+pD,UAAU,CAAE/pD,GAAG,CAAE,GAAG,IAAI;QAEhE;QAEA,IAAKN,MAAM,CAACmH,IAAI,CAAEkjD,UAAU,CAAE,CAACjkD,MAAM,GAAG,CAAC,EAAGsiB,IAAI,CAAC2hC,UAAU,GAAGA,UAAU;QAExE,OAAO3hC,IAAI;MAEZ;IAAC;IAAA,OAAAghC,cAAA;EAAA,EA7K2BpY,QAAQ;EAAA,IAiL/ByZ,MAAM,0BAAAC,UAAA;IAAAphC,SAAA,CAAAmhC,MAAA,EAAAC,UAAA;IAAA,IAAAC,QAAA,GAAAnhC,YAAA,CAAAihC,MAAA;IAEX,SAAAA,OAAA,EAAc;MAAA,IAAAG,OAAA;MAAAtiD,eAAA,OAAAmiD,MAAA;MAEbG,OAAA,GAAAD,QAAA,CAAA3oD,IAAA;MAEA4oD,OAAA,CAAKlgB,QAAQ,GAAG,IAAI;MAEpBkgB,OAAA,CAAK7oD,IAAI,GAAG,QAAQ;MAEpB6oD,OAAA,CAAKn0B,kBAAkB,GAAG,IAAIsK,OAAO,EAAE;MAEvC6pB,OAAA,CAAKl0B,gBAAgB,GAAG,IAAIqK,OAAO,EAAE;MACrC6pB,OAAA,CAAKh0B,uBAAuB,GAAG,IAAImK,OAAO,EAAE;MAAC,OAAA6pB,OAAA;IAE9C;IAAC9hD,YAAA,CAAA2hD,MAAA;MAAAzqD,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAAuP,MAAA,CAAA9qD,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAACxX,kBAAkB,CAAC9Z,IAAI,CAAE4N,MAAM,CAACkM,kBAAkB,CAAE;QAEzD,IAAI,CAACC,gBAAgB,CAAC/Z,IAAI,CAAE4N,MAAM,CAACmM,gBAAgB,CAAE;QACrD,IAAI,CAACE,uBAAuB,CAACja,IAAI,CAAE4N,MAAM,CAACqM,uBAAuB,CAAE;QAEnE,OAAO,IAAI;MAEZ;IAAC;MAAA52B,GAAA;MAAAE,KAAA,EAED,SAAAyrC,kBAAmBjjC,MAAM,EAAG;QAE3B,IAAI,CAAC0xB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAErC,IAAM3c,CAAC,GAAG,IAAI,CAACoZ,WAAW,CAACnZ,QAAQ;QAEnC,OAAOhV,MAAM,CAAC4S,GAAG,CAAE,CAAEmC,CAAC,CAAE,CAAC,CAAE,EAAE,CAAEA,CAAC,CAAE,CAAC,CAAE,EAAE,CAAEA,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC5B,SAAS,EAAE;MAE/D;IAAC;MAAA7b,GAAA;MAAAE,KAAA,EAED,SAAA8rC,kBAAmBC,KAAK,EAAG;QAE1BgP,IAAA,CAAAC,eAAA,CAAAuP,MAAA,CAAA9qD,SAAA,8BAAAqC,IAAA,OAAyBiqC,KAAK;QAE9B,IAAI,CAACxV,kBAAkB,CAAC9Z,IAAI,CAAE,IAAI,CAACka,WAAW,CAAE,CAAC5T,MAAM,EAAE;MAE1D;IAAC;MAAAjjB,GAAA;MAAAE,KAAA,EAED,SAAAk6B,kBAAmB8R,aAAa,EAAEC,cAAc,EAAG;QAElD8O,IAAA,CAAAC,eAAA,CAAAuP,MAAA,CAAA9qD,SAAA,8BAAAqC,IAAA,OAAyBkqC,aAAa,EAAEC,cAAc;QAEtD,IAAI,CAAC1V,kBAAkB,CAAC9Z,IAAI,CAAE,IAAI,CAACka,WAAW,CAAE,CAAC5T,MAAM,EAAE;MAE1D;IAAC;MAAAjjB,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;IAAA,OAAA8tC,MAAA;EAAA,EA5DmBviB,QAAQ;EAAA,IAgEvB2iB,iBAAiB,0BAAAC,OAAA;IAAAxhC,SAAA,CAAAuhC,iBAAA,EAAAC,OAAA;IAAA,IAAAC,QAAA,GAAAvhC,YAAA,CAAAqhC,iBAAA;IAEtB,SAAAA,kBAAaG,GAAG,GAAG,EAAE,EAAEC,MAAM,GAAG,CAAC,EAAErlB,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,IAAI,EAAG;MAAA,IAAAqlB,OAAA;MAAA5iD,eAAA,OAAAuiD,iBAAA;MAE3DK,OAAA,GAAAH,QAAA,CAAA/oD,IAAA;MAEAkpD,OAAA,CAAKC,mBAAmB,GAAG,IAAI;MAE/BD,OAAA,CAAKnpD,IAAI,GAAG,mBAAmB;MAE/BmpD,OAAA,CAAKF,GAAG,GAAGA,GAAG;MACdE,OAAA,CAAKE,IAAI,GAAG,CAAC;MAEbF,OAAA,CAAKtlB,IAAI,GAAGA,IAAI;MAChBslB,OAAA,CAAKrlB,GAAG,GAAGA,GAAG;MACdqlB,OAAA,CAAKG,KAAK,GAAG,EAAE;MAEfH,OAAA,CAAKD,MAAM,GAAGA,MAAM;MACpBC,OAAA,CAAKI,IAAI,GAAG,IAAI;MAEhBJ,OAAA,CAAKK,SAAS,GAAG,EAAE,CAAC,CAAC;MACrBL,OAAA,CAAKM,UAAU,GAAG,CAAC,CAAC,CAAC;;MAErBN,OAAA,CAAKO,sBAAsB,EAAE;MAAC,OAAAP,OAAA;IAE/B;IAACpiD,YAAA,CAAA+hD,iBAAA;MAAA7qD,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAA2P,iBAAA,CAAAlrD,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAAC+c,GAAG,GAAGzgC,MAAM,CAACygC,GAAG;QACrB,IAAI,CAACI,IAAI,GAAG7gC,MAAM,CAAC6gC,IAAI;QAEvB,IAAI,CAACxlB,IAAI,GAAGrb,MAAM,CAACqb,IAAI;QACvB,IAAI,CAACC,GAAG,GAAGtb,MAAM,CAACsb,GAAG;QACrB,IAAI,CAACwlB,KAAK,GAAG9gC,MAAM,CAAC8gC,KAAK;QAEzB,IAAI,CAACJ,MAAM,GAAG1gC,MAAM,CAAC0gC,MAAM;QAC3B,IAAI,CAACK,IAAI,GAAG/gC,MAAM,CAAC+gC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG5rD,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+gC,IAAI,CAAE;QAE1E,IAAI,CAACC,SAAS,GAAGhhC,MAAM,CAACghC,SAAS;QACjC,IAAI,CAACC,UAAU,GAAGjhC,MAAM,CAACihC,UAAU;QAEnC,OAAO,IAAI;MAEZ;;MAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IAPE;MAAAxrD,GAAA;MAAAE,KAAA,EAQA,SAAAwrD,eAAgBC,WAAW,EAAG;QAE7B;QACA,IAAMC,YAAY,GAAG,GAAG,GAAG,IAAI,CAACC,aAAa,EAAE,GAAGF,WAAW;QAE7D,IAAI,CAACX,GAAG,GAAGh0C,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACg1C,IAAI,CAAEF,YAAY,CAAE;QAClD,IAAI,CAACH,sBAAsB,EAAE;MAE9B;;MAEA;AACF;AACA;IAFE;MAAAzrD,GAAA;MAAAE,KAAA,EAGA,SAAA6rD,eAAA,EAAiB;QAEhB,IAAMH,YAAY,GAAG90C,IAAI,CAACk1C,GAAG,CAAEn1C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACm0C,GAAG,CAAE;QAEzD,OAAO,GAAG,GAAG,IAAI,CAACa,aAAa,EAAE,GAAGD,YAAY;MAEjD;IAAC;MAAA5rD,GAAA;MAAAE,KAAA,EAED,SAAA+rD,gBAAA,EAAkB;QAEjB,OAAOj1C,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACg1C,IAAI,CAC7Bh1C,IAAI,CAACk1C,GAAG,CAAEn1C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACm0C,GAAG,CAAE,GAAG,IAAI,CAACI,IAAI,CAAE;MAEpD;IAAC;MAAAprD,GAAA;MAAAE,KAAA,EAED,SAAAgsD,aAAA,EAAe;QAEd;QACA,OAAO,IAAI,CAACX,SAAS,GAAGz0C,IAAI,CAACY,GAAG,CAAE,IAAI,CAACuzC,MAAM,EAAE,CAAC,CAAE;MAEnD;IAAC;MAAAjrD,GAAA;MAAAE,KAAA,EAED,SAAA2rD,cAAA,EAAgB;QAEf;QACA,OAAO,IAAI,CAACN,SAAS,GAAGz0C,IAAI,CAACa,GAAG,CAAE,IAAI,CAACszC,MAAM,EAAE,CAAC,CAAE;MAEnD;;MAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAlCE;MAAAjrD,GAAA;MAAAE,KAAA,EAmCA,SAAAisD,cAAeC,SAAS,EAAEC,UAAU,EAAEr0C,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,EAAG;QAE3D,IAAI,CAACwjC,MAAM,GAAGmB,SAAS,GAAGC,UAAU;QAEpC,IAAK,IAAI,CAACf,IAAI,KAAK,IAAI,EAAG;UAEzB,IAAI,CAACA,IAAI,GAAG;YACXllC,OAAO,EAAE,IAAI;YACbgmC,SAAS,EAAE,CAAC;YACZC,UAAU,EAAE,CAAC;YACbC,OAAO,EAAE,CAAC;YACVC,OAAO,EAAE,CAAC;YACV/kC,KAAK,EAAE,CAAC;YACRC,MAAM,EAAE;UACT,CAAC;QAEF;QAEA,IAAI,CAAC6jC,IAAI,CAACllC,OAAO,GAAG,IAAI;QACxB,IAAI,CAACklC,IAAI,CAACc,SAAS,GAAGA,SAAS;QAC/B,IAAI,CAACd,IAAI,CAACe,UAAU,GAAGA,UAAU;QACjC,IAAI,CAACf,IAAI,CAACgB,OAAO,GAAGt0C,CAAC;QACrB,IAAI,CAACszC,IAAI,CAACiB,OAAO,GAAGj0C,CAAC;QACrB,IAAI,CAACgzC,IAAI,CAAC9jC,KAAK,GAAGA,KAAK;QACvB,IAAI,CAAC8jC,IAAI,CAAC7jC,MAAM,GAAGA,MAAM;QAEzB,IAAI,CAACgkC,sBAAsB,EAAE;MAE9B;IAAC;MAAAzrD,GAAA;MAAAE,KAAA,EAED,SAAAssD,gBAAA,EAAkB;QAEjB,IAAK,IAAI,CAAClB,IAAI,KAAK,IAAI,EAAG;UAEzB,IAAI,CAACA,IAAI,CAACllC,OAAO,GAAG,KAAK;QAE1B;QAEA,IAAI,CAACqlC,sBAAsB,EAAE;MAE9B;IAAC;MAAAzrD,GAAA;MAAAE,KAAA,EAED,SAAAurD,uBAAA,EAAyB;QAExB,IAAM7lB,IAAI,GAAG,IAAI,CAACA,IAAI;QACtB,IAAIF,GAAG,GAAGE,IAAI,GAAG9uB,IAAI,CAACk1C,GAAG,CAAEn1C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACm0C,GAAG,CAAE,GAAG,IAAI,CAACI,IAAI;QACjE,IAAI3jC,MAAM,GAAG,CAAC,GAAGie,GAAG;QACpB,IAAIle,KAAK,GAAG,IAAI,CAACyjC,MAAM,GAAGxjC,MAAM;QAChC,IAAI+d,IAAI,GAAG,CAAE,GAAG,GAAGhe,KAAK;QACxB,IAAM8jC,IAAI,GAAG,IAAI,CAACA,IAAI;QAEtB,IAAK,IAAI,CAACA,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,IAAI,CAACllC,OAAO,EAAG;UAE9C,IAAMgmC,SAAS,GAAGd,IAAI,CAACc,SAAS;YAC/BC,UAAU,GAAGf,IAAI,CAACe,UAAU;UAE7B7mB,IAAI,IAAI8lB,IAAI,CAACgB,OAAO,GAAG9kC,KAAK,GAAG4kC,SAAS;UACxC1mB,GAAG,IAAI4lB,IAAI,CAACiB,OAAO,GAAG9kC,MAAM,GAAG4kC,UAAU;UACzC7kC,KAAK,IAAI8jC,IAAI,CAAC9jC,KAAK,GAAG4kC,SAAS;UAC/B3kC,MAAM,IAAI6jC,IAAI,CAAC7jC,MAAM,GAAG4kC,UAAU;QAEnC;QAEA,IAAMI,IAAI,GAAG,IAAI,CAACjB,UAAU;QAC5B,IAAKiB,IAAI,KAAK,CAAC,EAAGjnB,IAAI,IAAII,IAAI,GAAG6mB,IAAI,GAAG,IAAI,CAACP,YAAY,EAAE;QAE3D,IAAI,CAACx1B,gBAAgB,CAAC6O,eAAe,CAAEC,IAAI,EAAEA,IAAI,GAAGhe,KAAK,EAAEke,GAAG,EAAEA,GAAG,GAAGje,MAAM,EAAEme,IAAI,EAAE,IAAI,CAACC,GAAG,CAAE;QAE9F,IAAI,CAACjP,uBAAuB,CAACja,IAAI,CAAE,IAAI,CAAC+Z,gBAAgB,CAAE,CAACzT,MAAM,EAAE;MAEpE;IAAC;MAAAjjB,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAML,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAA2P,iBAAA,CAAAlrD,SAAA,mBAAAqC,IAAA,OAAiBymB,IAAI,CAAE;QAEjCL,IAAI,CAACrhB,MAAM,CAACikD,GAAG,GAAG,IAAI,CAACA,GAAG;QAC1B5iC,IAAI,CAACrhB,MAAM,CAACqkD,IAAI,GAAG,IAAI,CAACA,IAAI;QAE5BhjC,IAAI,CAACrhB,MAAM,CAAC6+B,IAAI,GAAG,IAAI,CAACA,IAAI;QAC5Bxd,IAAI,CAACrhB,MAAM,CAAC8+B,GAAG,GAAG,IAAI,CAACA,GAAG;QAC1Bzd,IAAI,CAACrhB,MAAM,CAACskD,KAAK,GAAG,IAAI,CAACA,KAAK;QAE9BjjC,IAAI,CAACrhB,MAAM,CAACkkD,MAAM,GAAG,IAAI,CAACA,MAAM;QAEhC,IAAK,IAAI,CAACK,IAAI,KAAK,IAAI,EAAGljC,IAAI,CAACrhB,MAAM,CAACukD,IAAI,GAAG5rD,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAE,IAAI,CAACy8B,IAAI,CAAE;QAE3EljC,IAAI,CAACrhB,MAAM,CAACwkD,SAAS,GAAG,IAAI,CAACA,SAAS;QACtCnjC,IAAI,CAACrhB,MAAM,CAACykD,UAAU,GAAG,IAAI,CAACA,UAAU;QAExC,OAAOpjC,IAAI;MAEZ;IAAC;IAAA,OAAAyiC,iBAAA;EAAA,EAjO8BJ,MAAM;EAqOtC,IAAMO,GAAG,GAAG,CAAE,EAAE,CAAC,CAAC;EAClB,IAAMC,MAAM,GAAG,CAAC;EAAC,IAEXyB,UAAU,0BAAAC,UAAA;IAAArjC,SAAA,CAAAojC,UAAA,EAAAC,UAAA;IAAA,IAAAC,QAAA,GAAApjC,YAAA,CAAAkjC,UAAA;IAEf,SAAAA,WAAa9mB,IAAI,EAAEC,GAAG,EAAEgnB,YAAY,EAAG;MAAA,IAAAC,OAAA;MAAAxkD,eAAA,OAAAokD,UAAA;MAEtCI,OAAA,GAAAF,QAAA,CAAA5qD,IAAA;MAEA8qD,OAAA,CAAK/qD,IAAI,GAAG,YAAY;MAExB+qD,OAAA,CAAKD,YAAY,GAAGA,YAAY;MAEhC,IAAME,QAAQ,GAAG,IAAIlC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAErlB,IAAI,EAAEC,GAAG,CAAE;MAChEknB,QAAQ,CAAC5lB,MAAM,GAAG2lB,OAAA,CAAK3lB,MAAM;MAC7B4lB,QAAQ,CAAC/pB,EAAE,CAAC1nB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC1ByxC,QAAQ,CAACzuB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC1BwuB,OAAA,CAAKjwC,GAAG,CAAEkwC,QAAQ,CAAE;MAEpB,IAAMC,QAAQ,GAAG,IAAInC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAErlB,IAAI,EAAEC,GAAG,CAAE;MAChEmnB,QAAQ,CAAC7lB,MAAM,GAAG2lB,OAAA,CAAK3lB,MAAM;MAC7B6lB,QAAQ,CAAChqB,EAAE,CAAC1nB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC1B0xC,QAAQ,CAAC1uB,MAAM,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC5BwuB,OAAA,CAAKjwC,GAAG,CAAEmwC,QAAQ,CAAE;MAEpB,IAAMC,QAAQ,GAAG,IAAIpC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAErlB,IAAI,EAAEC,GAAG,CAAE;MAChEonB,QAAQ,CAAC9lB,MAAM,GAAG2lB,OAAA,CAAK3lB,MAAM;MAC7B8lB,QAAQ,CAACjqB,EAAE,CAAC1nB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MAC5B2xC,QAAQ,CAAC3uB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC1BwuB,OAAA,CAAKjwC,GAAG,CAAEowC,QAAQ,CAAE;MAEpB,IAAMC,QAAQ,GAAG,IAAIrC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAErlB,IAAI,EAAEC,GAAG,CAAE;MAChEqnB,QAAQ,CAAC/lB,MAAM,GAAG2lB,OAAA,CAAK3lB,MAAM;MAC7B+lB,QAAQ,CAAClqB,EAAE,CAAC1nB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC1B4xC,QAAQ,CAAC5uB,MAAM,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;MAC5BwuB,OAAA,CAAKjwC,GAAG,CAAEqwC,QAAQ,CAAE;MAEpB,IAAMC,QAAQ,GAAG,IAAItC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAErlB,IAAI,EAAEC,GAAG,CAAE;MAChEsnB,QAAQ,CAAChmB,MAAM,GAAG2lB,OAAA,CAAK3lB,MAAM;MAC7BgmB,QAAQ,CAACnqB,EAAE,CAAC1nB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC1B6xC,QAAQ,CAAC7uB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC1BwuB,OAAA,CAAKjwC,GAAG,CAAEswC,QAAQ,CAAE;MAEpB,IAAMC,QAAQ,GAAG,IAAIvC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAErlB,IAAI,EAAEC,GAAG,CAAE;MAChEunB,QAAQ,CAACjmB,MAAM,GAAG2lB,OAAA,CAAK3lB,MAAM;MAC7BimB,QAAQ,CAACpqB,EAAE,CAAC1nB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC1B8xC,QAAQ,CAAC9uB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MAC5BwuB,OAAA,CAAKjwC,GAAG,CAAEuwC,QAAQ,CAAE;MAAC,OAAAN,OAAA;IAEtB;IAAChkD,YAAA,CAAA4jD,UAAA;MAAA1sD,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAQy3B,QAAQ,EAAEuE,KAAK,EAAG;QAEzB,IAAK,IAAI,CAAC9kB,MAAM,KAAK,IAAI,EAAG,IAAI,CAACyD,iBAAiB,EAAE;QAEpD,IAAM6gB,YAAY,GAAG,IAAI,CAACA,YAAY;QAEtC,IAAAS,cAAA,GAAAC,cAAA,CAAuE,IAAI,CAAC3yB,QAAQ;UAA5EmyB,QAAQ,GAAAO,cAAA;UAAEN,QAAQ,GAAAM,cAAA;UAAEL,QAAQ,GAAAK,cAAA;UAAEJ,QAAQ,GAAAI,cAAA;UAAEH,QAAQ,GAAAG,cAAA;UAAEF,QAAQ,GAAAE,cAAA;QAElE,IAAME,mBAAmB,GAAG1E,QAAQ,CAACC,eAAe,EAAE;QAEtD,IAAM0E,kBAAkB,GAAG3E,QAAQ,CAAC4E,WAAW;QAC/C,IAAMC,gBAAgB,GAAG7E,QAAQ,CAAC8E,EAAE,CAACxnC,OAAO;QAE5C0iC,QAAQ,CAAC4E,WAAW,GAAG//C,aAAa;QACpCm7C,QAAQ,CAAC8E,EAAE,CAACxnC,OAAO,GAAG,KAAK;QAE3B,IAAMyE,eAAe,GAAGgiC,YAAY,CAACt+B,OAAO,CAAC1D,eAAe;QAE5DgiC,YAAY,CAACt+B,OAAO,CAAC1D,eAAe,GAAG,KAAK;QAE5Ci+B,QAAQ,CAAC+E,eAAe,CAAEhB,YAAY,EAAE,CAAC,CAAE;QAC3C/D,QAAQ,CAACgF,MAAM,CAAET,KAAK,EAAEN,QAAQ,CAAE;QAElCjE,QAAQ,CAAC+E,eAAe,CAAEhB,YAAY,EAAE,CAAC,CAAE;QAC3C/D,QAAQ,CAACgF,MAAM,CAAET,KAAK,EAAEL,QAAQ,CAAE;QAElClE,QAAQ,CAAC+E,eAAe,CAAEhB,YAAY,EAAE,CAAC,CAAE;QAC3C/D,QAAQ,CAACgF,MAAM,CAAET,KAAK,EAAEJ,QAAQ,CAAE;QAElCnE,QAAQ,CAAC+E,eAAe,CAAEhB,YAAY,EAAE,CAAC,CAAE;QAC3C/D,QAAQ,CAACgF,MAAM,CAAET,KAAK,EAAEH,QAAQ,CAAE;QAElCpE,QAAQ,CAAC+E,eAAe,CAAEhB,YAAY,EAAE,CAAC,CAAE;QAC3C/D,QAAQ,CAACgF,MAAM,CAAET,KAAK,EAAEF,QAAQ,CAAE;QAElCN,YAAY,CAACt+B,OAAO,CAAC1D,eAAe,GAAGA,eAAe;QAEtDi+B,QAAQ,CAAC+E,eAAe,CAAEhB,YAAY,EAAE,CAAC,CAAE;QAC3C/D,QAAQ,CAACgF,MAAM,CAAET,KAAK,EAAED,QAAQ,CAAE;QAElCtE,QAAQ,CAAC+E,eAAe,CAAEL,mBAAmB,CAAE;QAE/C1E,QAAQ,CAAC4E,WAAW,GAAGD,kBAAkB;QACzC3E,QAAQ,CAAC8E,EAAE,CAACxnC,OAAO,GAAGunC,gBAAgB;QAEtCd,YAAY,CAACt+B,OAAO,CAACnD,gBAAgB,GAAG,IAAI;MAE7C;IAAC;IAAA,OAAAshC,UAAA;EAAA,EA/FuBxkB,QAAQ;EAAA,IAmG3B6lB,WAAW,0BAAAC,SAAA;IAAA1kC,SAAA,CAAAykC,WAAA,EAAAC,SAAA;IAAA,IAAAC,QAAA,GAAAzkC,YAAA,CAAAukC,WAAA;IAEhB,SAAAA,YAAaplC,MAAM,EAAEe,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEjoB,IAAI,EAAEkoB,UAAU,EAAEE,QAAQ,EAAG;MAAA,IAAA+jC,OAAA;MAAA5lD,eAAA,OAAAylD,WAAA;MAEtGplC,MAAM,GAAGA,MAAM,KAAKnkB,SAAS,GAAGmkB,MAAM,GAAG,EAAE;MAC3Ce,OAAO,GAAGA,OAAO,KAAKllB,SAAS,GAAGklB,OAAO,GAAGxb,qBAAqB;MAEjEggD,OAAA,GAAAD,QAAA,CAAAjsD,IAAA,OAAO2mB,MAAM,EAAEe,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEjoB,IAAI,EAAEkoB,UAAU,EAAEE,QAAQ;MAE9F+jC,OAAA,CAAKC,aAAa,GAAG,IAAI;MAEzBD,OAAA,CAAKnjC,KAAK,GAAG,KAAK;MAAC,OAAAmjC,OAAA;IAEpB;IAACplD,YAAA,CAAAilD,WAAA;MAAA/tD,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAa;QAEZ,OAAO,IAAI,CAACgL,KAAK;MAElB,CAAC;MAAA7L,GAAA,EAED,SAAAA,IAAYpb,KAAK,EAAG;QAEnB,IAAI,CAACinB,KAAK,GAAGjnB,KAAK;MAEnB;IAAC;IAAA,OAAA6tD,WAAA;EAAA,EAzBwB3kC,OAAO;EAAA,IA6B3BglC,qBAAqB,0BAAAC,mBAAA;IAAA/kC,SAAA,CAAA8kC,qBAAA,EAAAC,mBAAA;IAAA,IAAAC,QAAA,GAAA9kC,YAAA,CAAA4kC,qBAAA;IAE1B,SAAAA,sBAAa70B,IAAI,GAAG,CAAC,EAAEvL,OAAO,GAAG,CAAC,CAAC,EAAG;MAAA,IAAAugC,OAAA;MAAAjmD,eAAA,OAAA8lD,qBAAA;MAErCG,OAAA,GAAAD,QAAA,CAAAtsD,IAAA,OAAOu3B,IAAI,EAAEA,IAAI,EAAEvL,OAAO;MAE1BugC,OAAA,CAAKC,uBAAuB,GAAG,IAAI;MAEnC,IAAMrnC,KAAK,GAAG;QAAEK,KAAK,EAAE+R,IAAI;QAAE9R,MAAM,EAAE8R,IAAI;QAAEpL,KAAK,EAAE;MAAE,CAAC;MACrD,IAAMxF,MAAM,GAAG,CAAExB,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,CAAE;MAE3DonC,OAAA,CAAKhgC,OAAO,GAAG,IAAIw/B,WAAW,CAAEplC,MAAM,EAAEqF,OAAO,CAACtE,OAAO,EAAEsE,OAAO,CAACpE,KAAK,EAAEoE,OAAO,CAACnE,KAAK,EAAEmE,OAAO,CAAClE,SAAS,EAAEkE,OAAO,CAACjE,SAAS,EAAEiE,OAAO,CAAChE,MAAM,EAAEgE,OAAO,CAACjsB,IAAI,EAAEisB,OAAO,CAAC/D,UAAU,EAAE+D,OAAO,CAAC7D,QAAQ,CAAE;;MAEjM;MACA;MACA;;MAEA;MACA;MACA;;MAEAokC,OAAA,CAAKhgC,OAAO,CAACpD,qBAAqB,GAAG,IAAI;MAEzCojC,OAAA,CAAKhgC,OAAO,CAAC1D,eAAe,GAAGmD,OAAO,CAACnD,eAAe,KAAKrmB,SAAS,GAAGwpB,OAAO,CAACnD,eAAe,GAAG,KAAK;MACtG0jC,OAAA,CAAKhgC,OAAO,CAACxE,SAAS,GAAGiE,OAAO,CAACjE,SAAS,KAAKvlB,SAAS,GAAGwpB,OAAO,CAACjE,SAAS,GAAGhb,YAAY;MAAC,OAAAw/C,OAAA;IAE7F;IAACzlD,YAAA,CAAAslD,qBAAA;MAAApuD,GAAA;MAAAE,KAAA,EAED,SAAAuuD,2BAA4B3F,QAAQ,EAAEv6B,OAAO,EAAG;QAE/C,IAAI,CAACA,OAAO,CAACxsB,IAAI,GAAGwsB,OAAO,CAACxsB,IAAI;QAChC,IAAI,CAACwsB,OAAO,CAACpE,QAAQ,GAAGoE,OAAO,CAACpE,QAAQ;QAExC,IAAI,CAACoE,OAAO,CAAC1D,eAAe,GAAG0D,OAAO,CAAC1D,eAAe;QACtD,IAAI,CAAC0D,OAAO,CAACxE,SAAS,GAAGwE,OAAO,CAACxE,SAAS;QAC1C,IAAI,CAACwE,OAAO,CAACzE,SAAS,GAAGyE,OAAO,CAACzE,SAAS;QAE1C,IAAM4kC,MAAM,GAAG;UAEdhG,QAAQ,EAAE;YACTiG,SAAS,EAAE;cAAEzuD,KAAK,EAAE;YAAK;UAC1B,CAAC;UAEDypD,YAAY,EAAE,8YAkBd;UAEAC,cAAc,EAAE;QAkBjB,CAAC;QAED,IAAMnvB,QAAQ,GAAG,IAAIosB,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAE3C,IAAMjZ,QAAQ,GAAG,IAAIwb,cAAc,CAAE;UAEpC/iD,IAAI,EAAE,qBAAqB;UAE3BqiD,QAAQ,EAAEH,aAAa,CAAEmG,MAAM,CAAChG,QAAQ,CAAE;UAC1CiB,YAAY,EAAE+E,MAAM,CAAC/E,YAAY;UACjCC,cAAc,EAAE8E,MAAM,CAAC9E,cAAc;UACrCtY,IAAI,EAAE/lC,QAAQ;UACd8lC,QAAQ,EAAE3lC;QAEX,CAAC,CAAE;QAEHkiC,QAAQ,CAAC8a,QAAQ,CAACiG,SAAS,CAACzuD,KAAK,GAAGquB,OAAO;QAE3C,IAAMqgC,IAAI,GAAG,IAAIrJ,IAAI,CAAE9qB,QAAQ,EAAEmT,QAAQ,CAAE;QAE3C,IAAMihB,gBAAgB,GAAGtgC,OAAO,CAACxE,SAAS;;QAE1C;QACA,IAAKwE,OAAO,CAACxE,SAAS,KAAK7a,wBAAwB,EAAGqf,OAAO,CAACxE,SAAS,GAAGhb,YAAY;QAEtF,IAAMynB,MAAM,GAAG,IAAIk2B,UAAU,CAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAE;QAC5Cl2B,MAAM,CAACnF,MAAM,CAAEy3B,QAAQ,EAAE8F,IAAI,CAAE;QAE/BrgC,OAAO,CAACxE,SAAS,GAAG8kC,gBAAgB;QAEpCD,IAAI,CAACn0B,QAAQ,CAAC7O,OAAO,EAAE;QACvBgjC,IAAI,CAAChhB,QAAQ,CAAChiB,OAAO,EAAE;QAEvB,OAAO,IAAI;MAEZ;IAAC;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAA6qC,MAAO+d,QAAQ,EAAEljC,KAAK,EAAEuI,KAAK,EAAE2gC,OAAO,EAAG;QAExC,IAAMtB,mBAAmB,GAAG1E,QAAQ,CAACC,eAAe,EAAE;QAEtD,KAAM,IAAIhjD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B+iD,QAAQ,CAAC+E,eAAe,CAAE,IAAI,EAAE9nD,CAAC,CAAE;UAEnC+iD,QAAQ,CAAC/d,KAAK,CAAEnlB,KAAK,EAAEuI,KAAK,EAAE2gC,OAAO,CAAE;QAExC;QAEAhG,QAAQ,CAAC+E,eAAe,CAAEL,mBAAmB,CAAE;MAEhD;IAAC;IAAA,OAAAY,qBAAA;EAAA,EApIkCvgC,iBAAiB;EAwIrD,IAAMkhC,QAAQ,GAAG,aAAc,IAAIz5B,OAAO,EAAE;EAC5C,IAAM05B,QAAQ,GAAG,aAAc,IAAI15B,OAAO,EAAE;EAC5C,IAAM25B,aAAa,GAAG,aAAc,IAAI/uC,OAAO,EAAE;EAAC,IAE5CgvC,KAAK;IAEV,SAAAA,MAAav3B,MAAM,GAAG,IAAIrC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAEgG,QAAQ,GAAG,CAAC,EAAG;MAAAhzB,eAAA,OAAA4mD,KAAA;MAE5D,IAAI,CAACC,OAAO,GAAG,IAAI;;MAEnB;;MAEA,IAAI,CAACx3B,MAAM,GAAGA,MAAM;MACpB,IAAI,CAAC2D,QAAQ,GAAGA,QAAQ;IAEzB;IAACxyB,YAAA,CAAAomD,KAAA;MAAAlvD,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKqc,MAAM,EAAE2D,QAAQ,EAAG;QAEvB,IAAI,CAAC3D,MAAM,CAAChb,IAAI,CAAEgb,MAAM,CAAE;QAC1B,IAAI,CAAC2D,QAAQ,GAAGA,QAAQ;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAt7B,GAAA;MAAAE,KAAA,EAED,SAAAkvD,cAAep3C,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAEC,CAAC,EAAG;QAE3B,IAAI,CAACyL,MAAM,CAACrc,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE2T,CAAC,CAAE;QAC1B,IAAI,CAACqP,QAAQ,GAAGpP,CAAC;QAEjB,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAmvD,8BAA+B13B,MAAM,EAAEqC,KAAK,EAAG;QAE9C,IAAI,CAACrC,MAAM,CAAChb,IAAI,CAAEgb,MAAM,CAAE;QAC1B,IAAI,CAAC2D,QAAQ,GAAG,CAAEtB,KAAK,CAAC/b,GAAG,CAAE,IAAI,CAAC0Z,MAAM,CAAE;QAE1C,OAAO,IAAI;MAEZ;IAAC;MAAA33B,GAAA;MAAAE,KAAA,EAED,SAAAqvC,sBAAuB/0B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;QAEhC,IAAMid,MAAM,GAAGo3B,QAAQ,CAAC5xC,UAAU,CAAEzC,CAAC,EAAED,CAAC,CAAE,CAACyD,KAAK,CAAE8wC,QAAQ,CAAC7xC,UAAU,CAAE3C,CAAC,EAAEC,CAAC,CAAE,CAAE,CAACoB,SAAS,EAAE;;QAE3F;;QAEA,IAAI,CAACwzC,6BAA6B,CAAE13B,MAAM,EAAEnd,CAAC,CAAE;QAE/C,OAAO,IAAI;MAEZ;IAAC;MAAAxa,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM0e,KAAK,EAAG;QAEb,IAAI,CAAC1D,MAAM,CAAChb,IAAI,CAAE0e,KAAK,CAAC1D,MAAM,CAAE;QAChC,IAAI,CAAC2D,QAAQ,GAAGD,KAAK,CAACC,QAAQ;QAE9B,OAAO,IAAI;MAEZ;IAAC;MAAAt7B,GAAA;MAAAE,KAAA,EAED,SAAA2b,UAAA,EAAY;QAEX;;QAEA,IAAMyzC,mBAAmB,GAAG,GAAG,GAAG,IAAI,CAAC33B,MAAM,CAAC7xB,MAAM,EAAE;QACtD,IAAI,CAAC6xB,MAAM,CAACta,cAAc,CAAEiyC,mBAAmB,CAAE;QACjD,IAAI,CAACh0B,QAAQ,IAAIg0B,mBAAmB;QAEpC,OAAO,IAAI;MAEZ;IAAC;MAAAtvD,GAAA;MAAAE,KAAA,EAED,SAAA8d,OAAA,EAAS;QAER,IAAI,CAACsd,QAAQ,IAAI,CAAE,CAAC;QACpB,IAAI,CAAC3D,MAAM,CAAC3Z,MAAM,EAAE;QAEpB,OAAO,IAAI;MAEZ;IAAC;MAAAhe,GAAA;MAAAE,KAAA,EAED,SAAAk8B,gBAAiBpC,KAAK,EAAG;QAExB,OAAO,IAAI,CAACrC,MAAM,CAAC1Z,GAAG,CAAE+b,KAAK,CAAE,GAAG,IAAI,CAACsB,QAAQ;MAEhD;IAAC;MAAAt7B,GAAA;MAAAE,KAAA,EAED,SAAAqvD,iBAAkBr0B,MAAM,EAAG;QAE1B,OAAO,IAAI,CAACkB,eAAe,CAAElB,MAAM,CAACnb,MAAM,CAAE,GAAGmb,MAAM,CAACnD,MAAM;MAE7D;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAAsvD,aAAcx1B,KAAK,EAAEtxB,MAAM,EAAG;QAE7B,OAAOA,MAAM,CAACiU,IAAI,CAAEqd,KAAK,CAAE,CAAChd,eAAe,CAAE,IAAI,CAAC2a,MAAM,EAAE,CAAE,IAAI,CAACyE,eAAe,CAAEpC,KAAK,CAAE,CAAE;MAE5F;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAuvD,cAAeC,IAAI,EAAEhnD,MAAM,EAAG;QAE7B,IAAMy1B,SAAS,GAAGuxB,IAAI,CAACjyB,KAAK,CAAEsxB,QAAQ,CAAE;QAExC,IAAMtwC,WAAW,GAAG,IAAI,CAACkZ,MAAM,CAAC1Z,GAAG,CAAEkgB,SAAS,CAAE;QAEhD,IAAK1f,WAAW,KAAK,CAAC,EAAG;UAExB;UACA,IAAK,IAAI,CAAC2d,eAAe,CAAEszB,IAAI,CAACnP,KAAK,CAAE,KAAK,CAAC,EAAG;YAE/C,OAAO73C,MAAM,CAACiU,IAAI,CAAE+yC,IAAI,CAACnP,KAAK,CAAE;UAEjC;;UAEA;UACA,OAAO,IAAI;QAEZ;QAEA,IAAM/nC,CAAC,GAAG,EAAIk3C,IAAI,CAACnP,KAAK,CAACtiC,GAAG,CAAE,IAAI,CAAC0Z,MAAM,CAAE,GAAG,IAAI,CAAC2D,QAAQ,CAAE,GAAG7c,WAAW;QAE3E,IAAKjG,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAG;UAErB,OAAO,IAAI;QAEZ;QAEA,OAAO9P,MAAM,CAACiU,IAAI,CAAE+yC,IAAI,CAACnP,KAAK,CAAE,CAACvjC,eAAe,CAAEmhB,SAAS,EAAE3lB,CAAC,CAAE;MAEjE;IAAC;MAAAxY,GAAA;MAAAE,KAAA,EAED,SAAAyvD,eAAgBD,IAAI,EAAG;QAEtB;;QAEA,IAAME,SAAS,GAAG,IAAI,CAACxzB,eAAe,CAAEszB,IAAI,CAACnP,KAAK,CAAE;QACpD,IAAMsP,OAAO,GAAG,IAAI,CAACzzB,eAAe,CAAEszB,IAAI,CAAClJ,GAAG,CAAE;QAEhD,OAASoJ,SAAS,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,IAAQA,OAAO,GAAG,CAAC,IAAID,SAAS,GAAG,CAAG;MAE5E;IAAC;MAAA5vD,GAAA;MAAAE,KAAA,EAED,SAAA86B,cAAepB,GAAG,EAAG;QAEpB,OAAOA,GAAG,CAACwB,eAAe,CAAE,IAAI,CAAE;MAEnC;IAAC;MAAAp7B,GAAA;MAAAE,KAAA,EAED,SAAA+6B,iBAAkBC,MAAM,EAAG;QAE1B,OAAOA,MAAM,CAACE,eAAe,CAAE,IAAI,CAAE;MAEtC;IAAC;MAAAp7B,GAAA;MAAAE,KAAA,EAED,SAAA4vD,cAAepnD,MAAM,EAAG;QAEvB,OAAOA,MAAM,CAACiU,IAAI,CAAE,IAAI,CAACgb,MAAM,CAAE,CAACta,cAAc,CAAE,CAAE,IAAI,CAACie,QAAQ,CAAE;MAEpE;IAAC;MAAAt7B,GAAA;MAAAE,KAAA,EAED,SAAAosB,aAAc1H,MAAM,EAAEmrC,oBAAoB,EAAG;QAE5C,IAAMlnB,YAAY,GAAGknB,oBAAoB,IAAId,aAAa,CAACxrC,eAAe,CAAEmB,MAAM,CAAE;QAEpF,IAAMorC,cAAc,GAAG,IAAI,CAACF,aAAa,CAAEf,QAAQ,CAAE,CAACziC,YAAY,CAAE1H,MAAM,CAAE;QAE5E,IAAM+S,MAAM,GAAG,IAAI,CAACA,MAAM,CAACna,YAAY,CAAEqrB,YAAY,CAAE,CAAChtB,SAAS,EAAE;QAEnE,IAAI,CAACyf,QAAQ,GAAG,CAAE00B,cAAc,CAAC/xC,GAAG,CAAE0Z,MAAM,CAAE;QAE9C,OAAO,IAAI;MAEZ;IAAC;MAAA33B,GAAA;MAAAE,KAAA,EAED,SAAAwkB,UAAWlF,MAAM,EAAG;QAEnB,IAAI,CAAC8b,QAAQ,IAAI9b,MAAM,CAACvB,GAAG,CAAE,IAAI,CAAC0Z,MAAM,CAAE;QAE1C,OAAO,IAAI;MAEZ;IAAC;MAAA33B,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQ+b,KAAK,EAAG;QAEf,OAAOA,KAAK,CAAC1D,MAAM,CAACrY,MAAM,CAAE,IAAI,CAACqY,MAAM,CAAE,IAAM0D,KAAK,CAACC,QAAQ,KAAK,IAAI,CAACA,QAAU;MAElF;IAAC;MAAAt7B,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;IAAA,OAAAuyC,KAAA;EAAA;EAIF,IAAMe,SAAS,GAAG,aAAc,IAAI/yB,MAAM,EAAE;EAC5C,IAAMgzB,SAAS,GAAG,aAAc,IAAI56B,OAAO,EAAE;EAAC,IAExC66B,OAAO;IAEZ,SAAAA,QAAavzB,EAAE,GAAG,IAAIsyB,KAAK,EAAE,EAAEryB,EAAE,GAAG,IAAIqyB,KAAK,EAAE,EAAEpyB,EAAE,GAAG,IAAIoyB,KAAK,EAAE,EAAEpe,EAAE,GAAG,IAAIoe,KAAK,EAAE,EAAEkB,EAAE,GAAG,IAAIlB,KAAK,EAAE,EAAEmB,EAAE,GAAG,IAAInB,KAAK,EAAE,EAAG;MAAA5mD,eAAA,OAAA6nD,OAAA;MAEzH,IAAI,CAACG,MAAM,GAAG,CAAE1zB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEgU,EAAE,EAAEsf,EAAE,EAAEC,EAAE,CAAE;IAEzC;IAACvnD,YAAA,CAAAqnD,OAAA;MAAAnwD,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKshB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEgU,EAAE,EAAEsf,EAAE,EAAEC,EAAE,EAAG;QAE7B,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1BA,MAAM,CAAE,CAAC,CAAE,CAAC3zC,IAAI,CAAEigB,EAAE,CAAE;QACtB0zB,MAAM,CAAE,CAAC,CAAE,CAAC3zC,IAAI,CAAEkgB,EAAE,CAAE;QACtByzB,MAAM,CAAE,CAAC,CAAE,CAAC3zC,IAAI,CAAEmgB,EAAE,CAAE;QACtBwzB,MAAM,CAAE,CAAC,CAAE,CAAC3zC,IAAI,CAAEm0B,EAAE,CAAE;QACtBwf,MAAM,CAAE,CAAC,CAAE,CAAC3zC,IAAI,CAAEyzC,EAAE,CAAE;QACtBE,MAAM,CAAE,CAAC,CAAE,CAAC3zC,IAAI,CAAE0zC,EAAE,CAAE;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAArwD,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4zC,OAAO,EAAG;QAEf,IAAMD,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,KAAM,IAAIvqD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9BuqD,MAAM,CAAEvqD,CAAC,CAAE,CAAC4W,IAAI,CAAE4zC,OAAO,CAACD,MAAM,CAAEvqD,CAAC,CAAE,CAAE;QAExC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAswD,wBAAyB14C,CAAC,EAAG;QAE5B,IAAMw4C,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1B,IAAMvvC,EAAE,GAAGjJ,CAAC,CAAC4F,QAAQ;QACrB,IAAM+yC,GAAG,GAAG1vC,EAAE,CAAE,CAAC,CAAE;UAAE2vC,GAAG,GAAG3vC,EAAE,CAAE,CAAC,CAAE;UAAE4vC,GAAG,GAAG5vC,EAAE,CAAE,CAAC,CAAE;UAAE6vC,GAAG,GAAG7vC,EAAE,CAAE,CAAC,CAAE;QAChE,IAAM8vC,GAAG,GAAG9vC,EAAE,CAAE,CAAC,CAAE;UAAE+vC,GAAG,GAAG/vC,EAAE,CAAE,CAAC,CAAE;UAAEgwC,GAAG,GAAGhwC,EAAE,CAAE,CAAC,CAAE;UAAEiwC,GAAG,GAAGjwC,EAAE,CAAE,CAAC,CAAE;QAChE,IAAMkwC,GAAG,GAAGlwC,EAAE,CAAE,CAAC,CAAE;UAAEmwC,GAAG,GAAGnwC,EAAE,CAAE,CAAC,CAAE;UAAEowC,IAAI,GAAGpwC,EAAE,CAAE,EAAE,CAAE;UAAEqwC,IAAI,GAAGrwC,EAAE,CAAE,EAAE,CAAE;QACpE,IAAMswC,IAAI,GAAGtwC,EAAE,CAAE,EAAE,CAAE;UAAEuwC,IAAI,GAAGvwC,EAAE,CAAE,EAAE,CAAE;UAAEwwC,IAAI,GAAGxwC,EAAE,CAAE,EAAE,CAAE;UAAEywC,IAAI,GAAGzwC,EAAE,CAAE,EAAE,CAAE;QAExEuvC,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGH,GAAG,EAAEO,GAAG,GAAGH,GAAG,EAAEO,IAAI,GAAGH,GAAG,EAAEO,IAAI,GAAGH,IAAI,CAAE,CAACx1C,SAAS,EAAE;QACtFy0C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGH,GAAG,EAAEO,GAAG,GAAGH,GAAG,EAAEO,IAAI,GAAGH,GAAG,EAAEO,IAAI,GAAGH,IAAI,CAAE,CAACx1C,SAAS,EAAE;QACtFy0C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGF,GAAG,EAAEM,GAAG,GAAGF,GAAG,EAAEM,IAAI,GAAGF,GAAG,EAAEM,IAAI,GAAGF,IAAI,CAAE,CAACz1C,SAAS,EAAE;QACtFy0C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGF,GAAG,EAAEM,GAAG,GAAGF,GAAG,EAAEM,IAAI,GAAGF,GAAG,EAAEM,IAAI,GAAGF,IAAI,CAAE,CAACz1C,SAAS,EAAE;QACtFy0C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGD,GAAG,EAAEK,GAAG,GAAGD,GAAG,EAAEK,IAAI,GAAGD,IAAI,EAAEK,IAAI,GAAGD,IAAI,CAAE,CAAC11C,SAAS,EAAE;QACvFy0C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGD,GAAG,EAAEK,GAAG,GAAGD,GAAG,EAAEK,IAAI,GAAGD,IAAI,EAAEK,IAAI,GAAGD,IAAI,CAAE,CAAC11C,SAAS,EAAE;QAEvF,OAAO,IAAI;MAEZ;IAAC;MAAA7b,GAAA;MAAAE,KAAA,EAED,SAAAuxD,iBAAkB1qD,MAAM,EAAG;QAE1B,IAAKA,MAAM,CAACs5C,cAAc,KAAK77C,SAAS,EAAG;UAE1C,IAAKuC,MAAM,CAACs5C,cAAc,KAAK,IAAI,EAAGt5C,MAAM,CAACo6C,qBAAqB,EAAE;UAEpE8O,SAAS,CAACtzC,IAAI,CAAE5V,MAAM,CAACs5C,cAAc,CAAE,CAAC/zB,YAAY,CAAEvlB,MAAM,CAAC8vB,WAAW,CAAE;QAE3E,CAAC,MAAM;UAEN,IAAM4D,QAAQ,GAAG1zB,MAAM,CAAC0zB,QAAQ;UAEhC,IAAKA,QAAQ,CAAC4lB,cAAc,KAAK,IAAI,EAAG5lB,QAAQ,CAAC0mB,qBAAqB,EAAE;UAExE8O,SAAS,CAACtzC,IAAI,CAAE8d,QAAQ,CAAC4lB,cAAc,CAAE,CAAC/zB,YAAY,CAAEvlB,MAAM,CAAC8vB,WAAW,CAAE;QAE7E;QAEA,OAAO,IAAI,CAACoE,gBAAgB,CAAEg1B,SAAS,CAAE;MAE1C;IAAC;MAAAjwD,GAAA;MAAAE,KAAA,EAED,SAAAwxD,iBAAkBC,MAAM,EAAG;QAE1B1B,SAAS,CAAClwC,MAAM,CAACzE,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAC/B20C,SAAS,CAACl4B,MAAM,GAAG,kBAAkB;QACrCk4B,SAAS,CAAC3jC,YAAY,CAAEqlC,MAAM,CAAC96B,WAAW,CAAE;QAE5C,OAAO,IAAI,CAACoE,gBAAgB,CAAEg1B,SAAS,CAAE;MAE1C;IAAC;MAAAjwD,GAAA;MAAAE,KAAA,EAED,SAAA+6B,iBAAkBC,MAAM,EAAG;QAE1B,IAAMo1B,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1B,IAAMvwC,MAAM,GAAGmb,MAAM,CAACnb,MAAM;QAC5B,IAAM6xC,SAAS,GAAG,CAAE12B,MAAM,CAACnD,MAAM;QAEjC,KAAM,IAAIhyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAMqkC,QAAQ,GAAGkmB,MAAM,CAAEvqD,CAAC,CAAE,CAACq2B,eAAe,CAAErc,MAAM,CAAE;UAEtD,IAAKqqB,QAAQ,GAAGwnB,SAAS,EAAG;YAE3B,OAAO,KAAK;UAEb;QAED;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA5xD,GAAA;MAAAE,KAAA,EAED,SAAA86B,cAAepB,GAAG,EAAG;QAEpB,IAAM02B,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,KAAM,IAAIvqD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAMs1B,KAAK,GAAGi1B,MAAM,CAAEvqD,CAAC,CAAE;;UAEzB;;UAEAmqD,SAAS,CAACl4C,CAAC,GAAGqjB,KAAK,CAAC1D,MAAM,CAAC3f,CAAC,GAAG,CAAC,GAAG4hB,GAAG,CAACjiB,GAAG,CAACK,CAAC,GAAG4hB,GAAG,CAACliB,GAAG,CAACM,CAAC;UACxDk4C,SAAS,CAAC53C,CAAC,GAAG+iB,KAAK,CAAC1D,MAAM,CAACrf,CAAC,GAAG,CAAC,GAAGshB,GAAG,CAACjiB,GAAG,CAACW,CAAC,GAAGshB,GAAG,CAACliB,GAAG,CAACY,CAAC;UACxD43C,SAAS,CAACjkC,CAAC,GAAGoP,KAAK,CAAC1D,MAAM,CAAC1L,CAAC,GAAG,CAAC,GAAG2N,GAAG,CAACjiB,GAAG,CAACsU,CAAC,GAAG2N,GAAG,CAACliB,GAAG,CAACuU,CAAC;UAExD,IAAKoP,KAAK,CAACe,eAAe,CAAE8zB,SAAS,CAAE,GAAG,CAAC,EAAG;YAE7C,OAAO,KAAK;UAEb;QAED;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAlwD,GAAA;MAAAE,KAAA,EAED,SAAA26B,cAAeb,KAAK,EAAG;QAEtB,IAAMs2B,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,KAAM,IAAIvqD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAKuqD,MAAM,CAAEvqD,CAAC,CAAE,CAACq2B,eAAe,CAAEpC,KAAK,CAAE,GAAG,CAAC,EAAG;YAE/C,OAAO,KAAK;UAEb;QAED;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;IAAA,OAAAwzC,OAAA;EAAA;EAIF,SAAS0B,cAAcA,CAAA,EAAG;IAEzB,IAAIpwD,OAAO,GAAG,IAAI;IAClB,IAAIqwD,WAAW,GAAG,KAAK;IACvB,IAAIC,aAAa,GAAG,IAAI;IACxB,IAAIC,SAAS,GAAG,IAAI;IAEpB,SAASC,gBAAgBA,CAAEC,IAAI,EAAEC,KAAK,EAAG;MAExCJ,aAAa,CAAEG,IAAI,EAAEC,KAAK,CAAE;MAE5BH,SAAS,GAAGvwD,OAAO,CAAC2wD,qBAAqB,CAAEH,gBAAgB,CAAE;IAE9D;IAEA,OAAO;MAEN1R,KAAK,EAAE,SAAAA,MAAA,EAAY;QAElB,IAAKuR,WAAW,KAAK,IAAI,EAAG;QAC5B,IAAKC,aAAa,KAAK,IAAI,EAAG;QAE9BC,SAAS,GAAGvwD,OAAO,CAAC2wD,qBAAqB,CAAEH,gBAAgB,CAAE;QAE7DH,WAAW,GAAG,IAAI;MAEnB,CAAC;MAEDxqD,IAAI,EAAE,SAAAA,KAAA,EAAY;QAEjB7F,OAAO,CAAC4wD,oBAAoB,CAAEL,SAAS,CAAE;QAEzCF,WAAW,GAAG,KAAK;MAEpB,CAAC;MAEDQ,gBAAgB,EAAE,SAAAA,iBAAWt+B,QAAQ,EAAG;QAEvC+9B,aAAa,GAAG/9B,QAAQ;MAEzB,CAAC;MAEDu+B,UAAU,EAAE,SAAAA,WAAWryD,KAAK,EAAG;QAE9BuB,OAAO,GAAGvB,KAAK;MAEhB;IAED,CAAC;EAEF;EAEA,SAASsyD,eAAeA,CAAEC,EAAE,EAAEC,YAAY,EAAG;IAE5C,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;IAEtC,IAAMC,OAAO,GAAG,IAAIC,OAAO,EAAE;IAE7B,SAASC,YAAYA,CAAEnzC,SAAS,EAAEozC,UAAU,EAAG;MAE9C,IAAMt8C,KAAK,GAAGkJ,SAAS,CAAClJ,KAAK;MAC7B,IAAM6lC,KAAK,GAAG38B,SAAS,CAAC28B,KAAK;MAE7B,IAAMl3B,MAAM,GAAGqtC,EAAE,CAACK,YAAY,EAAE;MAEhCL,EAAE,CAACO,UAAU,CAAED,UAAU,EAAE3tC,MAAM,CAAE;MACnCqtC,EAAE,CAACQ,UAAU,CAAEF,UAAU,EAAEt8C,KAAK,EAAE6lC,KAAK,CAAE;MAEzC38B,SAAS,CAAC68B,gBAAgB,EAAE;MAE5B,IAAIz6C,IAAI;MAER,IAAK0U,KAAK,YAAY+E,YAAY,EAAG;QAEpCzZ,IAAI,GAAG0wD,EAAE,CAACS,KAAK;MAEhB,CAAC,MAAM,IAAKz8C,KAAK,YAAYgF,WAAW,EAAG;QAE1C,IAAKkE,SAAS,CAACo/B,wBAAwB,EAAG;UAEzC,IAAK4T,QAAQ,EAAG;YAEf5wD,IAAI,GAAG0wD,EAAE,CAACU,UAAU;UAErB,CAAC,MAAM;YAEN,MAAM,IAAItvD,KAAK,CAAE,yEAAyE,CAAE;UAE7F;QAED,CAAC,MAAM;UAEN9B,IAAI,GAAG0wD,EAAE,CAACW,cAAc;QAEzB;MAED,CAAC,MAAM,IAAK38C,KAAK,YAAYkF,UAAU,EAAG;QAEzC5Z,IAAI,GAAG0wD,EAAE,CAACY,KAAK;MAEhB,CAAC,MAAM,IAAK58C,KAAK,YAAYwO,WAAW,EAAG;QAE1CljB,IAAI,GAAG0wD,EAAE,CAACa,YAAY;MAEvB,CAAC,MAAM,IAAK78C,KAAK,YAAYuO,UAAU,EAAG;QAEzCjjB,IAAI,GAAG0wD,EAAE,CAACc,GAAG;MAEd,CAAC,MAAM,IAAK98C,KAAK,YAAYmF,SAAS,EAAG;QAExC7Z,IAAI,GAAG0wD,EAAE,CAACe,IAAI;MAEf,CAAC,MAAM,IAAK/8C,KAAK,YAAYiF,UAAU,EAAG;QAEzC3Z,IAAI,GAAG0wD,EAAE,CAACgB,aAAa;MAExB,CAAC,MAAM,IAAKh9C,KAAK,YAAYsO,iBAAiB,EAAG;QAEhDhjB,IAAI,GAAG0wD,EAAE,CAACgB,aAAa;MAExB,CAAC,MAAM;QAEN,MAAM,IAAI5vD,KAAK,CAAE,yDAAyD,GAAG4S,KAAK,CAAE;MAErF;MAEA,OAAO;QACN2O,MAAM,EAAEA,MAAM;QACdrjB,IAAI,EAAEA,IAAI;QACV2xD,eAAe,EAAEj9C,KAAK,CAACk9C,iBAAiB;QACxCprC,OAAO,EAAE5I,SAAS,CAAC4I;MACpB,CAAC;IAEF;IAEA,SAASqrC,YAAYA,CAAExuC,MAAM,EAAEzF,SAAS,EAAEozC,UAAU,EAAG;MAEtD,IAAMt8C,KAAK,GAAGkJ,SAAS,CAAClJ,KAAK;MAC7B,IAAM8lC,WAAW,GAAG58B,SAAS,CAAC48B,WAAW;MAEzCkW,EAAE,CAACO,UAAU,CAAED,UAAU,EAAE3tC,MAAM,CAAE;MAEnC,IAAKm3B,WAAW,CAACjsB,KAAK,KAAK,CAAE,CAAC,EAAG;QAEhC;;QAEAmiC,EAAE,CAACoB,aAAa,CAAEd,UAAU,EAAE,CAAC,EAAEt8C,KAAK,CAAE;MAEzC,CAAC,MAAM;QAEN,IAAKk8C,QAAQ,EAAG;UAEfF,EAAE,CAACoB,aAAa,CAAEd,UAAU,EAAExW,WAAW,CAAC/8B,MAAM,GAAG/I,KAAK,CAACk9C,iBAAiB,EACzEl9C,KAAK,EAAE8lC,WAAW,CAAC/8B,MAAM,EAAE+8B,WAAW,CAACjsB,KAAK,CAAE;QAEhD,CAAC,MAAM;UAENmiC,EAAE,CAACoB,aAAa,CAAEd,UAAU,EAAExW,WAAW,CAAC/8B,MAAM,GAAG/I,KAAK,CAACk9C,iBAAiB,EACzEl9C,KAAK,CAACq9C,QAAQ,CAAEvX,WAAW,CAAC/8B,MAAM,EAAE+8B,WAAW,CAAC/8B,MAAM,GAAG+8B,WAAW,CAACjsB,KAAK,CAAE,CAAE;QAEhF;QAEAisB,WAAW,CAACjsB,KAAK,GAAG,CAAE,CAAC,CAAC,CAAC;MAE1B;;MAEA3Q,SAAS,CAAC68B,gBAAgB,EAAE;IAE7B;;IAEA;;IAEA,SAASrgC,GAAGA,CAAEwD,SAAS,EAAG;MAEzB,IAAKA,SAAS,CAACokC,4BAA4B,EAAGpkC,SAAS,GAAGA,SAAS,CAACyI,IAAI;MAExE,OAAOwqC,OAAO,CAACz2C,GAAG,CAAEwD,SAAS,CAAE;IAEhC;IAEA,SAASkrB,MAAMA,CAAElrB,SAAS,EAAG;MAE5B,IAAKA,SAAS,CAACokC,4BAA4B,EAAGpkC,SAAS,GAAGA,SAAS,CAACyI,IAAI;MAExE,IAAMA,IAAI,GAAGwqC,OAAO,CAACz2C,GAAG,CAAEwD,SAAS,CAAE;MAErC,IAAKyI,IAAI,EAAG;QAEXqqC,EAAE,CAACsB,YAAY,CAAE3rC,IAAI,CAAChD,MAAM,CAAE;QAE9BwtC,OAAO,CAACoB,MAAM,CAAEr0C,SAAS,CAAE;MAE5B;IAED;IAEA,SAAS0R,MAAMA,CAAE1R,SAAS,EAAEozC,UAAU,EAAG;MAExC,IAAKpzC,SAAS,CAAC0hC,mBAAmB,EAAG;QAEpC,IAAM4S,MAAM,GAAGrB,OAAO,CAACz2C,GAAG,CAAEwD,SAAS,CAAE;QAEvC,IAAK,CAAEs0C,MAAM,IAAIA,MAAM,CAAC1rC,OAAO,GAAG5I,SAAS,CAAC4I,OAAO,EAAG;UAErDqqC,OAAO,CAACt3C,GAAG,CAAEqE,SAAS,EAAE;YACvByF,MAAM,EAAEzF,SAAS,CAACyF,MAAM;YACxBrjB,IAAI,EAAE4d,SAAS,CAAC5d,IAAI;YACpB2xD,eAAe,EAAE/zC,SAAS,CAACu0C,WAAW;YACtC3rC,OAAO,EAAE5I,SAAS,CAAC4I;UACpB,CAAC,CAAE;QAEJ;QAEA;MAED;MAEA,IAAK5I,SAAS,CAACokC,4BAA4B,EAAGpkC,SAAS,GAAGA,SAAS,CAACyI,IAAI;MAExE,IAAMA,IAAI,GAAGwqC,OAAO,CAACz2C,GAAG,CAAEwD,SAAS,CAAE;MAErC,IAAKyI,IAAI,KAAK5jB,SAAS,EAAG;QAEzBouD,OAAO,CAACt3C,GAAG,CAAEqE,SAAS,EAAEmzC,YAAY,CAAEnzC,SAAS,EAAEozC,UAAU,CAAE,CAAE;MAEhE,CAAC,MAAM,IAAK3qC,IAAI,CAACG,OAAO,GAAG5I,SAAS,CAAC4I,OAAO,EAAG;QAE9CqrC,YAAY,CAAExrC,IAAI,CAAChD,MAAM,EAAEzF,SAAS,EAAEozC,UAAU,CAAE;QAElD3qC,IAAI,CAACG,OAAO,GAAG5I,SAAS,CAAC4I,OAAO;MAEjC;IAED;IAEA,OAAO;MAENpM,GAAG,EAAEA,GAAG;MACR0uB,MAAM,EAAEA,MAAM;MACdxZ,MAAM,EAAEA;IAET,CAAC;EAEF;EAAC,IAEK8iC,aAAa,0BAAAC,gBAAA;IAAA9qC,SAAA,CAAA6qC,aAAA,EAAAC,gBAAA;IAAA,IAAAC,QAAA,GAAA7qC,YAAA,CAAA2qC,aAAA;IAElB,SAAAA,cAAa3sC,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEu/B,aAAa,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAG;MAAA,IAAAqN,OAAA;MAAAhsD,eAAA,OAAA6rD,aAAA;MAE3EG,OAAA,GAAAD,QAAA,CAAAryD,IAAA;MAEAsyD,OAAA,CAAKvyD,IAAI,GAAG,eAAe;MAE3BuyD,OAAA,CAAKhnB,UAAU,GAAG;QACjB9lB,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA,MAAM;QACdu/B,aAAa,EAAEA,aAAa;QAC5BC,cAAc,EAAEA;MACjB,CAAC;MAED,IAAMsN,UAAU,GAAG/sC,KAAK,GAAG,CAAC;MAC5B,IAAMgtC,WAAW,GAAG/sC,MAAM,GAAG,CAAC;MAE9B,IAAMkgC,KAAK,GAAG7wC,IAAI,CAACsC,KAAK,CAAE4tC,aAAa,CAAE;MACzC,IAAMY,KAAK,GAAG9wC,IAAI,CAACsC,KAAK,CAAE6tC,cAAc,CAAE;MAE1C,IAAMiB,MAAM,GAAGP,KAAK,GAAG,CAAC;MACxB,IAAMQ,MAAM,GAAGP,KAAK,GAAG,CAAC;MAExB,IAAM6M,aAAa,GAAGjtC,KAAK,GAAGmgC,KAAK;MACnC,IAAM+M,cAAc,GAAGjtC,MAAM,GAAGmgC,KAAK;;MAErC;;MAEA,IAAMnG,OAAO,GAAG,EAAE;MAClB,IAAM4F,QAAQ,GAAG,EAAE;MACnB,IAAM1F,OAAO,GAAG,EAAE;MAClB,IAAMC,GAAG,GAAG,EAAE;MAEd,KAAM,IAAIxrB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG+xB,MAAM,EAAE/xB,EAAE,EAAG,EAAG;QAEtC,IAAM9d,CAAC,GAAG8d,EAAE,GAAGs+B,cAAc,GAAGF,WAAW;QAE3C,KAAM,IAAIr+B,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG+xB,MAAM,EAAE/xB,EAAE,EAAG,EAAG;UAEtC,IAAMne,CAAC,GAAGme,EAAE,GAAGs+B,aAAa,GAAGF,UAAU;UAEzClN,QAAQ,CAAC9hD,IAAI,CAAEyS,CAAC,EAAE,CAAEM,CAAC,EAAE,CAAC,CAAE;UAE1BqpC,OAAO,CAACp8C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UAEvBq8C,GAAG,CAACr8C,IAAI,CAAE4wB,EAAE,GAAGwxB,KAAK,CAAE;UACtB/F,GAAG,CAACr8C,IAAI,CAAE,CAAC,GAAK6wB,EAAE,GAAGwxB,KAAO,CAAE;QAE/B;MAED;MAEA,KAAM,IAAIxxB,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAGwxB,KAAK,EAAExxB,IAAE,EAAG,EAAG;QAErC,KAAM,IAAID,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAGwxB,KAAK,EAAExxB,IAAE,EAAG,EAAG;UAErC,IAAM3b,CAAC,GAAG2b,IAAE,GAAG+xB,MAAM,GAAG9xB,IAAE;UAC1B,IAAM3b,CAAC,GAAG0b,IAAE,GAAG+xB,MAAM,IAAK9xB,IAAE,GAAG,CAAC,CAAE;UAClC,IAAM1b,CAAC,GAAKyb,IAAE,GAAG,CAAC,GAAK+xB,MAAM,IAAK9xB,IAAE,GAAG,CAAC,CAAE;UAC1C,IAAMvT,CAAC,GAAKsT,IAAE,GAAG,CAAC,GAAK+xB,MAAM,GAAG9xB,IAAE;UAElCqrB,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;UACvB4+B,OAAO,CAACl8C,IAAI,CAAEkV,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;QAExB;MAED;MAEAyxC,OAAA,CAAK7T,QAAQ,CAAEgB,OAAO,CAAE;MACxB6S,OAAA,CAAK3T,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1EiN,OAAA,CAAK3T,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MACvE2S,OAAA,CAAK3T,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;MAAC,OAAA0S,OAAA;IAEjE;IAACxrD,YAAA,CAAAqrD,aAAA;MAAAn0D,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAiZ,aAAA,CAAAx0D,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAI+rC,aAAa,CAAE/rC,IAAI,CAACZ,KAAK,EAAEY,IAAI,CAACX,MAAM,EAAEW,IAAI,CAAC4+B,aAAa,EAAE5+B,IAAI,CAAC6+B,cAAc,CAAE;MAE7F;IAAC;IAAA,OAAAkN,aAAA;EAAA,EA1F0BtU,cAAc;EA8F1C,IAAI8U,iBAAiB,GAAG,wFAAwF;EAEhH,IAAIC,sBAAsB,GAAG,4DAA4D;EAEzF,IAAIC,kBAAkB,GAAG,4EAA4E;EAErG,IAAIC,uBAAuB,GAAG,0DAA0D;EAExF,IAAIC,cAAc,GAAG,saAAsa;EAE3b,IAAIC,mBAAmB,GAAG,uFAAuF;EAEjH,IAAIC,YAAY,GAAG,sCAAsC;EAEzD,IAAIC,kBAAkB,GAAG,8GAA8G;EAEvI,IAAIC,KAAK,GAAG,srBAAsrB;EAElsB,IAAIC,oBAAoB,GAAG,u2FAAu2F;EAEl4F,IAAIC,qBAAqB,GAAG,s4BAAs4B;EAEl6B,IAAIC,wBAAwB,GAAG,4nBAA4nB;EAE3pB,IAAIC,6BAA6B,GAAG,2HAA2H;EAE/J,IAAIC,2BAA2B,GAAG,oEAAoE;EAEtG,IAAIC,sBAAsB,GAAG,0EAA0E;EAEvG,IAAIC,cAAc,GAAG,8HAA8H;EAEnJ,IAAIC,mBAAmB,GAAG,oHAAoH;EAE9I,IAAIC,iBAAiB,GAAG,uJAAuJ;EAE/K,IAAIC,YAAY,GAAG,gRAAgR;EAEnS,IAAIC,MAAM,GAAG,yzFAAyzF;EAEt0F,IAAIC,2BAA2B,GAAG,gqHAAgqH;EAElsH,IAAIC,oBAAoB,GAAG,0jBAA0jB;EAErlB,IAAIC,2BAA2B,GAAG,iJAAiJ;EAEnL,IAAIC,sBAAsB,GAAG,iLAAiL;EAE9M,IAAIC,oBAAoB,GAAG,iJAAiJ;EAE5K,IAAIC,yBAAyB,GAAG,kEAAkE;EAElG,IAAIC,kBAAkB,GAAG,qDAAqD;EAE9E,IAAIC,uBAAuB,GAAG,4QAA4Q;EAE1S,IAAIC,eAAe,GAAG,8qCAA8qC;EAEpsC,IAAIC,2BAA2B,GAAG,4MAA4M;EAE9O,IAAIC,oBAAoB,GAAG,8UAA8U;EAEzW,IAAIC,kBAAkB,GAAG,qTAAqT;EAE9U,IAAIC,aAAa,GAAG,2oBAA2oB;EAE/pB,IAAIC,UAAU,GAAG,uDAAuD;EAExE,IAAIC,eAAe,GAAG,oDAAoD;EAE1E,IAAIC,YAAY,GAAG,0RAA0R;EAE7S,IAAIC,iBAAiB,GAAG,0MAA0M;EAElO,IAAIC,yBAAyB,GAAG,6cAA6c;EAE7e,IAAIC,iBAAiB,GAAG,sNAAsN;EAE9O,IAAIC,sBAAsB,GAAG,gGAAgG;EAE7H,IAAIC,uBAAuB,GAAG,qHAAqH;EAEnJ,IAAIC,4BAA4B,GAAG,21BAA21B;EAE93B,IAAIC,iBAAiB,GAAG,ovJAAovJ;EAE5wJ,IAAIC,6BAA6B,GAAG,y4BAAy4B;EAE76B,IAAIC,oBAAoB,GAAG,mEAAmE;EAE9F,IAAIC,yBAAyB,GAAG,yxBAAyxB;EAEzzB,IAAIC,qBAAqB,GAAG,qMAAqM;EAEjO,IAAIC,0BAA0B,GAAG,inCAAinC;EAElpC,IAAIC,wBAAwB,GAAG,m8FAAm8F;EAEl+F,IAAIC,6BAA6B,GAAG,y8ZAAy8Z;EAE7+Z,IAAIC,qBAAqB,GAAG,otKAAotK;EAEhvK,IAAIC,oBAAoB,GAAG,ssBAAssB;EAEjuB,IAAIC,mBAAmB,GAAG,0QAA0Q;EAEpS,IAAIC,oBAAoB,GAAG,kLAAkL;EAE7M,IAAIC,yBAAyB,GAAG,wKAAwK;EAExM,IAAIC,uBAAuB,GAAG,qLAAqL;EAEnN,IAAIC,kBAAkB,GAAG,8XAA8X;EAEvZ,IAAIC,YAAY,GAAG,gaAAga;EAEnb,IAAIC,iBAAiB,GAAG,kDAAkD;EAE1E,IAAIC,qBAAqB,GAAG,yWAAyW;EAErY,IAAIC,0BAA0B,GAAG,8QAA8Q;EAE/S,IAAIC,qBAAqB,GAAG,kLAAkL;EAE9M,IAAIC,0BAA0B,GAAG,oEAAoE;EAErG,IAAIC,iBAAiB,GAAG,4eAA4e;EAEpgB,IAAIC,kBAAkB,GAAG,8jBAA8jB;EAEvlB,IAAIC,uBAAuB,GAAG,i1BAAi1B;EAE/2B,IAAIC,kBAAkB,GAAG,s2BAAs2B;EAE/3B,IAAIC,qBAAqB,GAAG,gkCAAgkC;EAE5lC,IAAIC,oBAAoB,GAAG,+jBAA+jB;EAE1lB,IAAIC,oBAAoB,GAAG,gJAAgJ;EAE3K,IAAIC,kBAAkB,GAAG,gJAAgJ;EAEzK,IAAIC,aAAa,GAAG,kOAAkO;EAEtP,IAAIC,uBAAuB,GAAG,u0BAAu0B;EAEr2B,IAAIC,+BAA+B,GAAG,wEAAwE;EAE9G,IAAIC,8BAA8B,GAAG,6OAA6O;EAElR,IAAIC,uBAAuB,GAAG,kRAAkR;EAEhT,IAAIC,yBAAyB,GAAG,mKAAmK;EAEnM,IAAIC,eAAe,GAAG,2LAA2L;EAEjN,IAAIC,OAAO,GAAG,quDAAquD;EAEnvD,IAAIC,4BAA4B,GAAG,2EAA2E;EAE9G,IAAIC,cAAc,GAAG,mNAAmN;EAExO,IAAIC,kBAAkB,GAAG,+EAA+E;EAExG,IAAIC,uBAAuB,GAAG,0UAA0U;EAExW,IAAIC,qBAAqB,GAAG,kLAAkL;EAE9M,IAAIC,0BAA0B,GAAG,oEAAoE;EAErG,IAAIC,uBAAuB,GAAG,y7RAAy7R;EAEv9R,IAAIC,qBAAqB,GAAG,izCAAizC;EAE70C,IAAIC,gBAAgB,GAAG,g+CAAg+C;EAEv/C,IAAIC,wBAAwB,GAAG,g5CAAg5C;EAE/6C,IAAIC,eAAe,GAAG,iOAAiO;EAEvP,IAAIC,oBAAoB,GAAG,oyBAAoyB;EAE/zB,IAAIC,eAAe,GAAG,8XAA8X;EAEpZ,IAAIC,iBAAiB,GAAG,odAAod;EAE5e,IAAIC,oBAAoB,GAAG,oMAAoM;EAE/N,IAAIC,yBAAyB,GAAG,kEAAkE;EAElG,IAAIC,oBAAoB,GAAG,4FAA4F;EAEvH,IAAIC,yBAAyB,GAAG,myCAAmyC;EAEn0C,IAAIC,qBAAqB,GAAG,glCAAglC;EAE5mC,IAAIC,0BAA0B,GAAG,8jKAA8jK;EAE/lK,IAAIC,gBAAgB,GAAG,4gDAA4gD;EAEniD,IAAIC,cAAc,GAAG,85EAA85E;EAEn7E,IAAIC,SAAS,GAAG,8jFAA8jF;EAE9kF,IAAIC,eAAe,GAAG,8UAA8U;EAEpW,IAAMC,QAAQ,GAAG,6JAA6J;EAE9K,IAAMC,UAAU,GAAG,ogBAAogB;EAEvhB,IAAMC,QAAQ,GAAG,gOAAgO;EAEjP,IAAMC,UAAU,GAAG,4wBAA4wB;EAE/xB,IAAMC,QAAQ,GAAG,gOAAgO;EAEjP,IAAMC,UAAU,GAAG,yVAAyV;EAE5W,IAAMC,QAAQ,GAAG,uuBAAuuB;EAExvB,IAAMC,UAAU,GAAG,63BAA63B;EAEh5B,IAAMC,QAAQ,GAAG,itBAAitB;EAEluB,IAAMC,UAAU,GAAG,guBAAguB;EAEnvB,IAAMC,QAAQ,GAAG,8LAA8L;EAE/M,IAAMC,UAAU,GAAG,wTAAwT;EAE3U,IAAMC,QAAQ,GAAG,inBAAinB;EAEloB,IAAMC,UAAU,GAAG,61BAA61B;EAEh3B,IAAMC,QAAQ,GAAG,83BAA83B;EAE/4B,IAAMC,UAAU,GAAG,6lDAA6lD;EAEhnD,IAAMC,QAAQ,GAAG,4kCAA4kC;EAE7lC,IAAMC,UAAU,GAAG,u5DAAu5D;EAE16D,IAAMC,QAAQ,GAAG,i7BAAi7B;EAEl8B,IAAMC,UAAU,GAAG,w+CAAw+C;EAE3/C,IAAMC,QAAQ,GAAG,m/BAAm/B;EAEpgC,IAAMC,UAAU,GAAG,6qBAA6qB;EAEhsB,IAAMC,QAAQ,GAAG,0kCAA0kC;EAE3lC,IAAMC,UAAU,GAAG,qgEAAqgE;EAExhE,IAAMC,QAAQ,GAAG,2pCAA2pC;EAE5qC,IAAMC,UAAU,GAAG,00HAA00H;EAE71H,IAAMC,QAAQ,GAAG,8gCAA8gC;EAE/hC,IAAMC,UAAU,GAAG,owDAAowD;EAEvxD,IAAMC,QAAQ,GAAG,q3BAAq3B;EAEt4B,IAAMC,UAAU,GAAG,4vBAA4vB;EAE/wB,IAAMC,QAAQ,GAAG,6lBAA6lB;EAE9mB,IAAMC,UAAU,GAAG,2eAA2e;EAE9f,IAAMC,QAAQ,GAAG,qnCAAqnC;EAEtoC,IAAMC,UAAU,GAAG,kuBAAkuB;EAErvB,IAAMC,WAAW,GAAG;IACnBzI,iBAAiB,EAAEA,iBAAiB;IACpCC,sBAAsB,EAAEA,sBAAsB;IAC9CC,kBAAkB,EAAEA,kBAAkB;IACtCC,uBAAuB,EAAEA,uBAAuB;IAChDC,cAAc,EAAEA,cAAc;IAC9BC,mBAAmB,EAAEA,mBAAmB;IACxCC,YAAY,EAAEA,YAAY;IAC1BC,kBAAkB,EAAEA,kBAAkB;IACtCC,KAAK,EAAEA,KAAK;IACZC,oBAAoB,EAAEA,oBAAoB;IAC1CC,qBAAqB,EAAEA,qBAAqB;IAC5CC,wBAAwB,EAAEA,wBAAwB;IAClDC,6BAA6B,EAAEA,6BAA6B;IAC5DC,2BAA2B,EAAEA,2BAA2B;IACxDC,sBAAsB,EAAEA,sBAAsB;IAC9CC,cAAc,EAAEA,cAAc;IAC9BC,mBAAmB,EAAEA,mBAAmB;IACxCC,iBAAiB,EAAEA,iBAAiB;IACpCC,YAAY,EAAEA,YAAY;IAC1BC,MAAM,EAAEA,MAAM;IACdC,2BAA2B,EAAEA,2BAA2B;IACxDC,oBAAoB,EAAEA,oBAAoB;IAC1CC,2BAA2B,EAAEA,2BAA2B;IACxDC,sBAAsB,EAAEA,sBAAsB;IAC9CC,oBAAoB,EAAEA,oBAAoB;IAC1CC,yBAAyB,EAAEA,yBAAyB;IACpDC,kBAAkB,EAAEA,kBAAkB;IACtCC,uBAAuB,EAAEA,uBAAuB;IAChDC,eAAe,EAAEA,eAAe;IAChCC,2BAA2B,EAAEA,2BAA2B;IACxDC,oBAAoB,EAAEA,oBAAoB;IAC1CC,kBAAkB,EAAEA,kBAAkB;IACtCY,6BAA6B,EAAEA,6BAA6B;IAC5DX,aAAa,EAAEA,aAAa;IAC5BC,UAAU,EAAEA,UAAU;IACtBC,eAAe,EAAEA,eAAe;IAChCC,YAAY,EAAEA,YAAY;IAC1BC,iBAAiB,EAAEA,iBAAiB;IACpCC,yBAAyB,EAAEA,yBAAyB;IACpDC,iBAAiB,EAAEA,iBAAiB;IACpCC,sBAAsB,EAAEA,sBAAsB;IAC9CC,uBAAuB,EAAEA,uBAAuB;IAChDC,4BAA4B,EAAEA,4BAA4B;IAC1DC,iBAAiB,EAAEA,iBAAiB;IACpCE,oBAAoB,EAAEA,oBAAoB;IAC1CC,yBAAyB,EAAEA,yBAAyB;IACpDC,qBAAqB,EAAEA,qBAAqB;IAC5CC,0BAA0B,EAAEA,0BAA0B;IACtDC,wBAAwB,EAAEA,wBAAwB;IAClDC,6BAA6B,EAAEA,6BAA6B;IAC5DC,qBAAqB,EAAEA,qBAAqB;IAC5CC,oBAAoB,EAAEA,oBAAoB;IAC1CC,mBAAmB,EAAEA,mBAAmB;IACxCC,oBAAoB,EAAEA,oBAAoB;IAC1CC,yBAAyB,EAAEA,yBAAyB;IACpDC,uBAAuB,EAAEA,uBAAuB;IAChDC,kBAAkB,EAAEA,kBAAkB;IACtCC,YAAY,EAAEA,YAAY;IAC1BC,iBAAiB,EAAEA,iBAAiB;IACpCC,qBAAqB,EAAEA,qBAAqB;IAC5CC,0BAA0B,EAAEA,0BAA0B;IACtDC,qBAAqB,EAAEA,qBAAqB;IAC5CC,0BAA0B,EAAEA,0BAA0B;IACtDC,iBAAiB,EAAEA,iBAAiB;IACpCC,kBAAkB,EAAEA,kBAAkB;IACtCC,uBAAuB,EAAEA,uBAAuB;IAChDC,kBAAkB,EAAEA,kBAAkB;IACtCC,qBAAqB,EAAEA,qBAAqB;IAC5CC,oBAAoB,EAAEA,oBAAoB;IAC1CC,oBAAoB,EAAEA,oBAAoB;IAC1CC,kBAAkB,EAAEA,kBAAkB;IACtCC,aAAa,EAAEA,aAAa;IAC5BC,uBAAuB,EAAEA,uBAAuB;IAChDC,+BAA+B,EAAEA,+BAA+B;IAChEC,8BAA8B,EAAEA,8BAA8B;IAC9DC,uBAAuB,EAAEA,uBAAuB;IAChDC,yBAAyB,EAAEA,yBAAyB;IACpDC,eAAe,EAAEA,eAAe;IAChCC,OAAO,EAAEA,OAAO;IAChBC,4BAA4B,EAAEA,4BAA4B;IAC1DC,cAAc,EAAEA,cAAc;IAC9BC,kBAAkB,EAAEA,kBAAkB;IACtCC,uBAAuB,EAAEA,uBAAuB;IAChDC,qBAAqB,EAAEA,qBAAqB;IAC5CC,0BAA0B,EAAEA,0BAA0B;IACtDC,uBAAuB,EAAEA,uBAAuB;IAChDC,qBAAqB,EAAEA,qBAAqB;IAC5CC,gBAAgB,EAAEA,gBAAgB;IAClCC,wBAAwB,EAAEA,wBAAwB;IAClDC,eAAe,EAAEA,eAAe;IAChCC,oBAAoB,EAAEA,oBAAoB;IAC1CC,eAAe,EAAEA,eAAe;IAChCC,iBAAiB,EAAEA,iBAAiB;IACpCC,oBAAoB,EAAEA,oBAAoB;IAC1CC,yBAAyB,EAAEA,yBAAyB;IACpDC,oBAAoB,EAAEA,oBAAoB;IAC1CC,yBAAyB,EAAEA,yBAAyB;IACpDC,qBAAqB,EAAEA,qBAAqB;IAC5CC,0BAA0B,EAAEA,0BAA0B;IACtDC,gBAAgB,EAAEA,gBAAgB;IAClCC,cAAc,EAAEA,cAAc;IAC9BC,SAAS,EAAEA,SAAS;IACpBC,eAAe,EAAEA,eAAe;IAEhCoC,eAAe,EAAEnC,QAAQ;IACzBoC,eAAe,EAAEnC,UAAU;IAC3BoC,mBAAmB,EAAEnC,QAAQ;IAC7BoC,mBAAmB,EAAEnC,UAAU;IAC/BoC,SAAS,EAAEnC,QAAQ;IACnBoC,SAAS,EAAEnC,UAAU;IACrBoC,UAAU,EAAEnC,QAAQ;IACpBoC,UAAU,EAAEnC,UAAU;IACtBoC,iBAAiB,EAAEnC,QAAQ;IAC3BoC,iBAAiB,EAAEnC,UAAU;IAC7BoC,aAAa,EAAEnC,QAAQ;IACvBoC,aAAa,EAAEnC,UAAU;IACzBoC,eAAe,EAAEnC,QAAQ;IACzBoC,eAAe,EAAEnC,UAAU;IAC3BoC,cAAc,EAAEnC,QAAQ;IACxBoC,cAAc,EAAEnC,UAAU;IAC1BoC,gBAAgB,EAAEnC,QAAQ;IAC1BoC,gBAAgB,EAAEnC,UAAU;IAC5BoC,eAAe,EAAEnC,QAAQ;IACzBoC,eAAe,EAAEnC,UAAU;IAC3BoC,eAAe,EAAEnC,QAAQ;IACzBoC,eAAe,EAAEnC,UAAU;IAC3BoC,cAAc,EAAEnC,QAAQ;IACxBoC,cAAc,EAAEnC,UAAU;IAC1BoC,iBAAiB,EAAEnC,QAAQ;IAC3BoC,iBAAiB,EAAEnC,UAAU;IAC7BoC,aAAa,EAAEnC,QAAQ;IACvBoC,aAAa,EAAEnC,UAAU;IACzBoC,WAAW,EAAEnC,QAAQ;IACrBoC,WAAW,EAAEnC,UAAU;IACvBoC,WAAW,EAAEnC,QAAQ;IACrBoC,WAAW,EAAEnC,UAAU;IACvBoC,WAAW,EAAEnC,QAAQ;IACrBoC,WAAW,EAAEnC;EACd,CAAC;;EAED;AACD;AACA;;EAEC,IAAMoC,WAAW,GAAG;IAEnBzJ,MAAM,EAAE;MAEP0J,OAAO,EAAE;QAAEt/D,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;MAAG,CAAC;MACvDlH,OAAO,EAAE;QAAEtxC,KAAK,EAAE;MAAI,CAAC;MAEvBs1C,GAAG,EAAE;QAAEt1C,KAAK,EAAE;MAAK,CAAC;MACpBu/D,YAAY,EAAE;QAAEv/D,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MAEpDw1B,QAAQ,EAAE;QAAEx1C,KAAK,EAAE;MAAK,CAAC;MACzBw/D,iBAAiB,EAAE;QAAEx/D,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MAEzD23B,SAAS,EAAE;QAAE33C,KAAK,EAAE;MAAE;IAEvB,CAAC;IAEDy/D,WAAW,EAAE;MAEZjpB,WAAW,EAAE;QAAEx2C,KAAK,EAAE;MAAK,CAAC;MAC5B0/D,oBAAoB,EAAE;QAAE1/D,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG;IAE5D,CAAC;IAED2/C,MAAM,EAAE;MAEPhpB,MAAM,EAAE;QAAE32C,KAAK,EAAE;MAAK,CAAC;MACvB4/D,UAAU,EAAE;QAAE5/D,KAAK,EAAE,CAAE;MAAE,CAAC;MAC1B82C,YAAY,EAAE;QAAE92C,KAAK,EAAE;MAAI,CAAC;MAAE;MAC9B6/D,GAAG,EAAE;QAAE7/D,KAAK,EAAE;MAAI,CAAC;MAAE;MACrB+2C,eAAe,EAAE;QAAE/2C,KAAK,EAAE;MAAK,CAAC,CAAE;IAEnC,CAAC;;IAED8/D,KAAK,EAAE;MAENnqB,KAAK,EAAE;QAAE31C,KAAK,EAAE;MAAK,CAAC;MACtB41C,cAAc,EAAE;QAAE51C,KAAK,EAAE;MAAE,CAAC;MAC5B+/D,cAAc,EAAE;QAAE//D,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG;IAEtD,CAAC;IAEDggD,QAAQ,EAAE;MAETvqB,QAAQ,EAAE;QAAEz1C,KAAK,EAAE;MAAK,CAAC;MACzB01C,iBAAiB,EAAE;QAAE11C,KAAK,EAAE;MAAE,CAAC;MAC/BigE,iBAAiB,EAAE;QAAEjgE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG;IAEzD,CAAC;IAEDkgD,OAAO,EAAE;MAERrqB,OAAO,EAAE;QAAE71C,KAAK,EAAE;MAAK,CAAC;MACxBmgE,gBAAgB,EAAE;QAAEngE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MACxD81B,SAAS,EAAE;QAAE91C,KAAK,EAAE;MAAE;IAEvB,CAAC;IAEDogE,SAAS,EAAE;MAEVrqB,SAAS,EAAE;QAAE/1C,KAAK,EAAE;MAAK,CAAC;MAC1BqgE,kBAAkB,EAAE;QAAErgE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MAC1Di2B,WAAW,EAAE;QAAEj2C,KAAK,EAAE,aAAc,IAAI8b,OAAO,CAAE,CAAC,EAAE,CAAC;MAAG;IAEzD,CAAC;IAEDwkD,eAAe,EAAE;MAEhBpqB,eAAe,EAAE;QAAEl2C,KAAK,EAAE;MAAK,CAAC;MAChCugE,wBAAwB,EAAE;QAAEvgE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MAChEm2B,iBAAiB,EAAE;QAAEn2C,KAAK,EAAE;MAAE,CAAC;MAC/Bo2C,gBAAgB,EAAE;QAAEp2C,KAAK,EAAE;MAAE;IAE9B,CAAC;IAEDwgE,WAAW,EAAE;MAEZjqB,WAAW,EAAE;QAAEv2C,KAAK,EAAE;MAAK,CAAC;MAC5BygE,oBAAoB,EAAE;QAAEzgE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG;IAE5D,CAAC;IAED0gD,YAAY,EAAE;MAEbpqB,YAAY,EAAE;QAAEt2C,KAAK,EAAE;MAAK,CAAC;MAC7B2gE,qBAAqB,EAAE;QAAE3gE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG;IAE7D,CAAC;IAED4gD,YAAY,EAAE;MAEbvqB,YAAY,EAAE;QAAEr2C,KAAK,EAAE;MAAK,CAAC;MAC7B6gE,qBAAqB,EAAE;QAAE7gE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG;IAE7D,CAAC;IAED8gD,WAAW,EAAE;MAEZ9pB,WAAW,EAAE;QAAEh3C,KAAK,EAAE;MAAK;IAE5B,CAAC;IAEDi4C,GAAG,EAAE;MAEJ8oB,UAAU,EAAE;QAAE/gE,KAAK,EAAE;MAAQ,CAAC;MAC9BghE,OAAO,EAAE;QAAEhhE,KAAK,EAAE;MAAE,CAAC;MACrBihE,MAAM,EAAE;QAAEjhE,KAAK,EAAE;MAAK,CAAC;MACvBkhE,QAAQ,EAAE;QAAElhE,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;MAAG;IAExD,CAAC;IAEDmR,MAAM,EAAE;MAEPwX,iBAAiB,EAAE;QAAEnhE,KAAK,EAAE;MAAG,CAAC;MAEhCohE,UAAU,EAAE;QAAEphE,KAAK,EAAE;MAAG,CAAC;MAEzBqhE,iBAAiB,EAAE;QAAErhE,KAAK,EAAE,EAAE;QAAEshE,UAAU,EAAE;UAC3CrjC,SAAS,EAAE,CAAC,CAAC;UACbvY,KAAK,EAAE,CAAC;QACT;MAAE,CAAC;MAEH67C,uBAAuB,EAAE;QAAEvhE,KAAK,EAAE,EAAE;QAAEshE,UAAU,EAAE;UACjDE,UAAU,EAAE,CAAC,CAAC;UACdC,gBAAgB,EAAE,CAAC,CAAC;UACpBC,YAAY,EAAE,CAAC,CAAC;UAChBC,aAAa,EAAE,CAAC;QACjB;MAAE,CAAC;MAEHC,oBAAoB,EAAE;QAAE5hE,KAAK,EAAE;MAAG,CAAC;MACnC6hE,uBAAuB,EAAE;QAAE7hE,KAAK,EAAE;MAAG,CAAC;MAEtC8hE,UAAU,EAAE;QAAE9hE,KAAK,EAAE,EAAE;QAAEshE,UAAU,EAAE;UACpC57C,KAAK,EAAE,CAAC,CAAC;UACT+U,QAAQ,EAAE,CAAC,CAAC;UACZwD,SAAS,EAAE,CAAC,CAAC;UACbiM,QAAQ,EAAE,CAAC,CAAC;UACZ63B,OAAO,EAAE,CAAC,CAAC;UACXC,WAAW,EAAE,CAAC,CAAC;UACfC,KAAK,EAAE,CAAC;QACT;MAAE,CAAC;MAEHC,gBAAgB,EAAE;QAAEliE,KAAK,EAAE,EAAE;QAAEshE,UAAU,EAAE;UAC1CE,UAAU,EAAE,CAAC,CAAC;UACdC,gBAAgB,EAAE,CAAC,CAAC;UACpBC,YAAY,EAAE,CAAC,CAAC;UAChBC,aAAa,EAAE,CAAC;QACjB;MAAE,CAAC;MAEHQ,YAAY,EAAE;QAAEniE,KAAK,EAAE;MAAG,CAAC;MAC3BoiE,aAAa,EAAE;QAAEpiE,KAAK,EAAE;MAAG,CAAC;MAC5BqiE,eAAe,EAAE;QAAEriE,KAAK,EAAE;MAAG,CAAC;MAE9BsiE,WAAW,EAAE;QAAEtiE,KAAK,EAAE,EAAE;QAAEshE,UAAU,EAAE;UACrC57C,KAAK,EAAE,CAAC,CAAC;UACT+U,QAAQ,EAAE,CAAC,CAAC;UACZwnC,KAAK,EAAE,CAAC,CAAC;UACT/3B,QAAQ,EAAE,CAAC;QACZ;MAAE,CAAC;MAEHq4B,iBAAiB,EAAE;QAAEviE,KAAK,EAAE,EAAE;QAAEshE,UAAU,EAAE;UAC3CE,UAAU,EAAE,CAAC,CAAC;UACdC,gBAAgB,EAAE,CAAC,CAAC;UACpBC,YAAY,EAAE,CAAC,CAAC;UAChBC,aAAa,EAAE,CAAC,CAAC;UACjBa,gBAAgB,EAAE,CAAC,CAAC;UACpBC,eAAe,EAAE,CAAC;QACnB;MAAE,CAAC;MAEHC,cAAc,EAAE;QAAE1iE,KAAK,EAAE;MAAG,CAAC;MAC7B2iE,iBAAiB,EAAE;QAAE3iE,KAAK,EAAE;MAAG,CAAC;MAEhC4iE,gBAAgB,EAAE;QAAE5iE,KAAK,EAAE,EAAE;QAAEshE,UAAU,EAAE;UAC1CrjC,SAAS,EAAE,CAAC,CAAC;UACb4kC,QAAQ,EAAE,CAAC,CAAC;UACZC,WAAW,EAAE,CAAC;QACf;MAAE,CAAC;MAEH;MACAC,cAAc,EAAE;QAAE/iE,KAAK,EAAE,EAAE;QAAEshE,UAAU,EAAE;UACxC57C,KAAK,EAAE,CAAC,CAAC;UACT+U,QAAQ,EAAE,CAAC,CAAC;UACZnT,KAAK,EAAE,CAAC,CAAC;UACTC,MAAM,EAAE,CAAC;QACV;MAAE,CAAC;MAEHy7C,KAAK,EAAE;QAAEhjE,KAAK,EAAE;MAAK,CAAC;MACtBijE,KAAK,EAAE;QAAEjjE,KAAK,EAAE;MAAK;IAEtB,CAAC;IAEDm5B,MAAM,EAAE;MAEPmmC,OAAO,EAAE;QAAEt/D,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;MAAG,CAAC;MACvDlH,OAAO,EAAE;QAAEtxC,KAAK,EAAE;MAAI,CAAC;MACvBq5B,IAAI,EAAE;QAAEr5B,KAAK,EAAE;MAAI,CAAC;MACpBmkB,KAAK,EAAE;QAAEnkB,KAAK,EAAE;MAAI,CAAC;MACrBs1C,GAAG,EAAE;QAAEt1C,KAAK,EAAE;MAAK,CAAC;MACpBw1C,QAAQ,EAAE;QAAEx1C,KAAK,EAAE;MAAK,CAAC;MACzB23C,SAAS,EAAE;QAAE33C,KAAK,EAAE;MAAE,CAAC;MACvBkjE,WAAW,EAAE;QAAEljE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG;IAEnD,CAAC;IAEDyxC,MAAM,EAAE;MAEP6N,OAAO,EAAE;QAAEt/D,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;MAAG,CAAC;MACvDlH,OAAO,EAAE;QAAEtxC,KAAK,EAAE;MAAI,CAAC;MACvB6f,MAAM,EAAE;QAAE7f,KAAK,EAAE,aAAc,IAAI8b,OAAO,CAAE,GAAG,EAAE,GAAG;MAAG,CAAC;MACxDkI,QAAQ,EAAE;QAAEhkB,KAAK,EAAE;MAAI,CAAC;MACxBs1C,GAAG,EAAE;QAAEt1C,KAAK,EAAE;MAAK,CAAC;MACpBu/D,YAAY,EAAE;QAAEv/D,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MACpDw1B,QAAQ,EAAE;QAAEx1C,KAAK,EAAE;MAAK,CAAC;MACzB23C,SAAS,EAAE;QAAE33C,KAAK,EAAE;MAAE;IAEvB;EAED,CAAC;EAED,IAAMmjE,SAAS,GAAG;IAEjBC,KAAK,EAAE;MAEN5a,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACpnB,GAAG,CACf,CAAE;MAEHwR,YAAY,EAAEyT,WAAW,CAACe,cAAc;MACxCvU,cAAc,EAAEwT,WAAW,CAACgB;IAE7B,CAAC;IAEDmF,OAAO,EAAE;MAER7a,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACpnB,GAAG,EACfonB,WAAW,CAAC1V,MAAM,EAClB;QACCtV,QAAQ,EAAE;UAAEr0C,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;QAAG;MACxD,CAAC,CACD,CAAE;MAEHiR,YAAY,EAAEyT,WAAW,CAACiB,gBAAgB;MAC1CzU,cAAc,EAAEwT,WAAW,CAACkB;IAE7B,CAAC;IAEDkF,KAAK,EAAE;MAEN9a,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACpnB,GAAG,EACfonB,WAAW,CAAC1V,MAAM,EAClB;QACCtV,QAAQ,EAAE;UAAEr0C,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;QAAG,CAAC;QACxDjE,QAAQ,EAAE;UAAEv0C,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;QAAG,CAAC;QACxD9D,SAAS,EAAE;UAAE10C,KAAK,EAAE;QAAG;MACxB,CAAC,CACD,CAAE;MAEHypD,YAAY,EAAEyT,WAAW,CAACuB,cAAc;MACxC/U,cAAc,EAAEwT,WAAW,CAACwB;IAE7B,CAAC;IAED6E,QAAQ,EAAE;MAET/a,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACuB,YAAY,EACxBvB,WAAW,CAACqB,YAAY,EACxBrB,WAAW,CAACpnB,GAAG,EACfonB,WAAW,CAAC1V,MAAM,EAClB;QACCtV,QAAQ,EAAE;UAAEr0C,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;QAAG,CAAC;QACxDxE,SAAS,EAAE;UAAEh0C,KAAK,EAAE;QAAI,CAAC;QACzBi0C,SAAS,EAAE;UAAEj0C,KAAK,EAAE;QAAI,CAAC;QACzB62C,eAAe,EAAE;UAAE72C,KAAK,EAAE;QAAE,CAAC,CAAC;MAC/B,CAAC,CACD,CAAE;;MAEHypD,YAAY,EAAEyT,WAAW,CAACyB,iBAAiB;MAC3CjV,cAAc,EAAEwT,WAAW,CAAC0B;IAE7B,CAAC;IAED4E,IAAI,EAAE;MAELhb,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACyB,WAAW,EACvBzB,WAAW,CAACpnB,GAAG,EACfonB,WAAW,CAAC1V,MAAM,EAClB;QACCtV,QAAQ,EAAE;UAAEr0C,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;QAAG;MACxD,CAAC,CACD,CAAE;MAEHiR,YAAY,EAAEyT,WAAW,CAAC2B,aAAa;MACvCnV,cAAc,EAAEwT,WAAW,CAAC4B;IAE7B,CAAC;IAEDvpB,MAAM,EAAE;MAEPiT,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACpnB,GAAG,EACf;QACC1C,MAAM,EAAE;UAAEv1C,KAAK,EAAE;QAAK;MACvB,CAAC,CACD,CAAE;MAEHypD,YAAY,EAAEyT,WAAW,CAACmB,eAAe;MACzC3U,cAAc,EAAEwT,WAAW,CAACoB;IAE7B,CAAC;IAEDnlC,MAAM,EAAE;MAEPqvB,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAAClmC,MAAM,EAClBkmC,WAAW,CAACpnB,GAAG,CACf,CAAE;MAEHwR,YAAY,EAAEyT,WAAW,CAAC6B,WAAW;MACrCrV,cAAc,EAAEwT,WAAW,CAAC8B;IAE7B,CAAC;IAEDyE,MAAM,EAAE;MAEPjb,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACpnB,GAAG,EACf;QACC9zB,KAAK,EAAE;UAAEnkB,KAAK,EAAE;QAAE,CAAC;QACnBy3C,QAAQ,EAAE;UAAEz3C,KAAK,EAAE;QAAE,CAAC;QACtB0jE,SAAS,EAAE;UAAE1jE,KAAK,EAAE;QAAE;MACvB,CAAC,CACD,CAAE;MAEHypD,YAAY,EAAEyT,WAAW,CAACa,eAAe;MACzCrU,cAAc,EAAEwT,WAAW,CAACc;IAE7B,CAAC;IAED/vC,KAAK,EAAE;MAENu6B,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACiB,eAAe,CAC3B,CAAE;MAEH7W,YAAY,EAAEyT,WAAW,CAACO,UAAU;MACpC/T,cAAc,EAAEwT,WAAW,CAACQ;IAE7B,CAAC;IAEDjmC,MAAM,EAAE;MAEP+wB,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3B;QACChvB,OAAO,EAAE;UAAEtxC,KAAK,EAAE;QAAI;MACvB,CAAC,CACD,CAAE;MAEHypD,YAAY,EAAEyT,WAAW,CAACqB,eAAe;MACzC7U,cAAc,EAAEwT,WAAW,CAACsB;IAE7B,CAAC;IAED/M,MAAM,EAAE;MAEPjJ,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAAC5N,MAAM,EAClB4N,WAAW,CAACpnB,GAAG,CACf,CAAE;MAEHwR,YAAY,EAAEyT,WAAW,CAACiC,WAAW;MACrCzV,cAAc,EAAEwT,WAAW,CAACkC;IAE7B,CAAC;IAEDtyB,UAAU,EAAE;MAEX0b,QAAQ,EAAE;QACT0a,WAAW,EAAE;UAAEljE,KAAK,EAAE,aAAc,IAAIggB,OAAO;QAAG,CAAC;QACnD2jD,GAAG,EAAE;UAAE3jE,KAAK,EAAE;QAAK,CAAC;QACpB4jE,mBAAmB,EAAE;UAAE5jE,KAAK,EAAE;QAAE;MACjC,CAAC;MAEDypD,YAAY,EAAEyT,WAAW,CAACC,eAAe;MACzCzT,cAAc,EAAEwT,WAAW,CAACE;IAE7B,CAAC;IAEDyG,cAAc,EAAE;MAEfrb,QAAQ,EAAE;QACT7R,MAAM,EAAE;UAAE32C,KAAK,EAAE;QAAK,CAAC;QACvB4/D,UAAU,EAAE;UAAE5/D,KAAK,EAAE,CAAE;QAAE,CAAC;QAC1B8jE,oBAAoB,EAAE;UAAE9jE,KAAK,EAAE;QAAE,CAAC;QAClC4jE,mBAAmB,EAAE;UAAE5jE,KAAK,EAAE;QAAE;MACjC,CAAC;MAEDypD,YAAY,EAAEyT,WAAW,CAACG,mBAAmB;MAC7C3T,cAAc,EAAEwT,WAAW,CAACI;IAE7B,CAAC;IAEDyG,IAAI,EAAE;MAELvb,QAAQ,EAAE;QACTwb,KAAK,EAAE;UAAEhkE,KAAK,EAAE;QAAK,CAAC;QACtBikE,KAAK,EAAE;UAAEjkE,KAAK,EAAE,CAAE;QAAE,CAAC;QACrBsxC,OAAO,EAAE;UAAEtxC,KAAK,EAAE;QAAI;MACvB,CAAC;MAEDypD,YAAY,EAAEyT,WAAW,CAACK,SAAS;MACnC7T,cAAc,EAAEwT,WAAW,CAACM;IAE7B,CAAC;IAED0G,QAAQ,EAAE;MAET1b,QAAQ,EAAE;QACTiG,SAAS,EAAE;UAAEzuD,KAAK,EAAE;QAAK;MAC1B,CAAC;MAEDypD,YAAY,EAAEyT,WAAW,CAACW,aAAa;MACvCnU,cAAc,EAAEwT,WAAW,CAACY;IAE7B,CAAC;IAEDqG,YAAY,EAAE;MAEb3b,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACiB,eAAe,EAC3B;QACC8D,iBAAiB,EAAE;UAAEpkE,KAAK,EAAE,aAAc,IAAIo1B,OAAO;QAAG,CAAC;QACzDivC,YAAY,EAAE;UAAErkE,KAAK,EAAE;QAAE,CAAC;QAC1BskE,WAAW,EAAE;UAAEtkE,KAAK,EAAE;QAAK;MAC5B,CAAC,CACD,CAAE;MAEHypD,YAAY,EAAEyT,WAAW,CAACS,iBAAiB;MAC3CjU,cAAc,EAAEwT,WAAW,CAACU;IAE7B,CAAC;IAED2G,MAAM,EAAE;MAEP/b,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC8W,WAAW,CAAC1V,MAAM,EAClB0V,WAAW,CAACpnB,GAAG,EACf;QACCvyB,KAAK,EAAE;UAAE1lB,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,OAAO;QAAG,CAAC;QACpDlH,OAAO,EAAE;UAAEtxC,KAAK,EAAE;QAAI;MACvB,CAAC,CACD,CAAE;MAEHypD,YAAY,EAAEyT,WAAW,CAAC+B,WAAW;MACrCvV,cAAc,EAAEwT,WAAW,CAACgC;IAE7B;EAED,CAAC;EAEDiE,SAAS,CAACqB,QAAQ,GAAG;IAEpBhc,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtC4a,SAAS,CAACI,QAAQ,CAAC/a,QAAQ,EAC3B;MACC7T,SAAS,EAAE;QAAE30C,KAAK,EAAE;MAAE,CAAC;MACvB60C,YAAY,EAAE;QAAE70C,KAAK,EAAE;MAAK,CAAC;MAC7BykE,qBAAqB,EAAE;QAAEzkE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MAC7D+0B,kBAAkB,EAAE;QAAE/0C,KAAK,EAAE;MAAK,CAAC;MACnC0kE,2BAA2B,EAAE;QAAE1kE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MACnEg1B,oBAAoB,EAAE;QAAEh1C,KAAK,EAAE,aAAc,IAAI8b,OAAO,CAAE,CAAC,EAAE,CAAC;MAAG,CAAC;MAClE84B,kBAAkB,EAAE;QAAE50C,KAAK,EAAE;MAAE,CAAC;MAChC80C,qBAAqB,EAAE;QAAE90C,KAAK,EAAE;MAAK,CAAC;MACtC2kE,8BAA8B,EAAE;QAAE3kE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MACtEi1B,WAAW,EAAE;QAAEj1C,KAAK,EAAE;MAAE,CAAC;MACzBo1C,cAAc,EAAE;QAAEp1C,KAAK,EAAE;MAAK,CAAC;MAC/B4kE,uBAAuB,EAAE;QAAE5kE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MAC/Dk1B,cAAc,EAAE;QAAEl1C,KAAK,EAAE;MAAI,CAAC;MAC9B6kE,2BAA2B,EAAE;QAAE7kE,KAAK,EAAE;MAAI,CAAC;MAC3C8kE,2BAA2B,EAAE;QAAE9kE,KAAK,EAAE;MAAI,CAAC;MAC3Cq1C,uBAAuB,EAAE;QAAEr1C,KAAK,EAAE;MAAK,CAAC;MACxC+kE,gCAAgC,EAAE;QAAE/kE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MACxEk0B,KAAK,EAAE;QAAEl0C,KAAK,EAAE;MAAE,CAAC;MACnBm0C,UAAU,EAAE;QAAEn0C,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;MAAG,CAAC;MAC1DwsB,aAAa,EAAE;QAAEhlE,KAAK,EAAE;MAAK,CAAC;MAC9BilE,sBAAsB,EAAE;QAAEjlE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MAC9Do0B,cAAc,EAAE;QAAEp0C,KAAK,EAAE;MAAE,CAAC;MAC5BklE,iBAAiB,EAAE;QAAEllE,KAAK,EAAE;MAAK,CAAC;MAClCmlE,0BAA0B,EAAE;QAAEnlE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MAClEi3B,YAAY,EAAE;QAAEj3C,KAAK,EAAE;MAAE,CAAC;MAC1Bk3C,eAAe,EAAE;QAAEl3C,KAAK,EAAE;MAAK,CAAC;MAChColE,wBAAwB,EAAE;QAAEplE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MAChEqlD,uBAAuB,EAAE;QAAErlE,KAAK,EAAE,aAAc,IAAI8b,OAAO;MAAG,CAAC;MAC/DwpD,sBAAsB,EAAE;QAAEtlE,KAAK,EAAE;MAAK,CAAC;MACvCm3C,SAAS,EAAE;QAAEn3C,KAAK,EAAE;MAAE,CAAC;MACvBo3C,YAAY,EAAE;QAAEp3C,KAAK,EAAE;MAAK,CAAC;MAC7BulE,qBAAqB,EAAE;QAAEvlE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MAC7Dq3B,mBAAmB,EAAE;QAAEr3C,KAAK,EAAE;MAAE,CAAC;MACjCs3C,gBAAgB,EAAE;QAAEt3C,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,QAAQ;MAAG,CAAC;MAChE/D,aAAa,EAAE;QAAEz0C,KAAK,EAAE,aAAc,IAAIw4C,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC;MAAG,CAAC;MAC5D9B,gBAAgB,EAAE;QAAE12C,KAAK,EAAE;MAAK,CAAC;MACjCwlE,yBAAyB,EAAE;QAAExlE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG,CAAC;MACjEw0B,iBAAiB,EAAE;QAAEx0C,KAAK,EAAE;MAAE,CAAC;MAC/By2C,oBAAoB,EAAE;QAAEz2C,KAAK,EAAE;MAAK,CAAC;MACrCylE,6BAA6B,EAAE;QAAEzlE,KAAK,EAAE,aAAc,IAAIggB,OAAO;MAAG;IACrE,CAAC,CACD,CAAE;IAEHypC,YAAY,EAAEyT,WAAW,CAACyB,iBAAiB;IAC3CjV,cAAc,EAAEwT,WAAW,CAAC0B;EAE7B,CAAC;EAED,IAAM8G,IAAI,GAAG;IAAEhiD,CAAC,EAAE,CAAC;IAAEnJ,CAAC,EAAE,CAAC;IAAEsI,CAAC,EAAE;EAAE,CAAC;EAEjC,SAAS8iD,eAAeA,CAAE/c,QAAQ,EAAEgd,QAAQ,EAAEC,UAAU,EAAEniE,KAAK,EAAEoiE,OAAO,EAAE9mD,KAAK,EAAEo0B,kBAAkB,EAAG;IAErG,IAAM2yB,UAAU,GAAG,IAAIvtB,KAAK,CAAE,QAAQ,CAAE;IACxC,IAAIwtB,UAAU,GAAGhnD,KAAK,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;IAEvC,IAAIinD,SAAS;IACb,IAAIC,OAAO;IAEX,IAAIC,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,wBAAwB,GAAG,CAAC;IAChC,IAAIC,kBAAkB,GAAG,IAAI;IAE7B,SAASzY,MAAMA,CAAE0Y,UAAU,EAAEnZ,KAAK,EAAG;MAEpC,IAAIoZ,UAAU,GAAG,KAAK;MACtB,IAAIz5B,UAAU,GAAGqgB,KAAK,CAACtgB,OAAO,KAAK,IAAI,GAAGsgB,KAAK,CAACrgB,UAAU,GAAG,IAAI;MAEjE,IAAKA,UAAU,IAAIA,UAAU,CAAC3iB,SAAS,EAAG;QAEzC,IAAMq8C,QAAQ,GAAGrZ,KAAK,CAAC2W,oBAAoB,GAAG,CAAC,CAAC,CAAC;QACjDh3B,UAAU,GAAG,CAAE05B,QAAQ,GAAGX,UAAU,GAAGD,QAAQ,EAAG3pD,GAAG,CAAE6wB,UAAU,CAAE;MAEpE;;MAEA;MACA;;MAEA,IAAM4gB,EAAE,GAAG9E,QAAQ,CAAC8E,EAAE;MACtB,IAAM+Y,OAAO,GAAG/Y,EAAE,CAACgZ,UAAU,IAAIhZ,EAAE,CAACgZ,UAAU,EAAE;MAEhD,IAAKD,OAAO,IAAIA,OAAO,CAACE,oBAAoB,KAAK,UAAU,EAAG;QAE7D75B,UAAU,GAAG,IAAI;MAElB;MAEA,IAAKA,UAAU,KAAK,IAAI,EAAG;QAE1B85B,QAAQ,CAAEb,UAAU,EAAEC,UAAU,CAAE;MAEnC,CAAC,MAAM,IAAKl5B,UAAU,IAAIA,UAAU,CAACC,OAAO,EAAG;QAE9C65B,QAAQ,CAAE95B,UAAU,EAAE,CAAC,CAAE;QACzBy5B,UAAU,GAAG,IAAI;MAElB;MAEA,IAAK3d,QAAQ,CAACie,SAAS,IAAIN,UAAU,EAAG;QAEvC3d,QAAQ,CAAC/d,KAAK,CAAE+d,QAAQ,CAACke,cAAc,EAAEle,QAAQ,CAACme,cAAc,EAAEne,QAAQ,CAACoe,gBAAgB,CAAE;MAE9F;MAEA,IAAKl6B,UAAU,KAAMA,UAAU,CAACmhB,aAAa,IAAInhB,UAAU,CAACtjB,OAAO,KAAKpb,uBAAuB,CAAE,EAAG;QAEnG,IAAK83D,OAAO,KAAK5hE,SAAS,EAAG;UAE5B4hE,OAAO,GAAG,IAAI7gB,IAAI,CACjB,IAAIsB,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAC1B,IAAIuC,cAAc,CAAE;YACnB/iD,IAAI,EAAE,wBAAwB;YAC9BqiD,QAAQ,EAAEH,aAAa,CAAE8a,SAAS,CAACU,cAAc,CAACrb,QAAQ,CAAE;YAC5DiB,YAAY,EAAE0Z,SAAS,CAACU,cAAc,CAACpa,YAAY;YACnDC,cAAc,EAAEyZ,SAAS,CAACU,cAAc,CAACna,cAAc;YACvDtY,IAAI,EAAE/lC,QAAQ;YACd0mC,SAAS,EAAE,KAAK;YAChBC,UAAU,EAAE,KAAK;YACjBiG,GAAG,EAAE;UACN,CAAC,CAAE,CACH;UAEDiuB,OAAO,CAAC3rC,QAAQ,CAACmmB,eAAe,CAAE,QAAQ,CAAE;UAC5CwlB,OAAO,CAAC3rC,QAAQ,CAACmmB,eAAe,CAAE,IAAI,CAAE;UAExCwlB,OAAO,CAAC58B,cAAc,GAAG,UAAWsf,QAAQ,EAAEuE,KAAK,EAAE72B,MAAM,EAAG;YAE7D,IAAI,CAACK,WAAW,CAAC2K,YAAY,CAAEhL,MAAM,CAACK,WAAW,CAAE;UAEpD,CAAC;;UAED;UACAn3B,MAAM,CAACI,cAAc,CAAEsmE,OAAO,CAACx4B,QAAQ,EAAE,QAAQ,EAAE;YAElDzxB,GAAG,EAAE,SAAAA,IAAA,EAAY;cAEhB,OAAO,IAAI,CAACusC,QAAQ,CAAC7R,MAAM,CAAC32C,KAAK;YAElC;UAED,CAAC,CAAE;UAEH8lE,OAAO,CAAC30C,MAAM,CAAE+0C,OAAO,CAAE;QAE1B;QAEAA,OAAO,CAACx4B,QAAQ,CAAC8a,QAAQ,CAAC7R,MAAM,CAAC32C,KAAK,GAAG8sC,UAAU;QACnDo5B,OAAO,CAACx4B,QAAQ,CAAC8a,QAAQ,CAACoX,UAAU,CAAC5/D,KAAK,GAAK8sC,UAAU,CAACmhB,aAAa,IAAInhB,UAAU,CAAC7hB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;QACjIi7C,OAAO,CAACx4B,QAAQ,CAAC8a,QAAQ,CAACsb,oBAAoB,CAAC9jE,KAAK,GAAGmtD,KAAK,CAAC2W,oBAAoB;QACjFoC,OAAO,CAACx4B,QAAQ,CAAC8a,QAAQ,CAACob,mBAAmB,CAAC5jE,KAAK,GAAGmtD,KAAK,CAACyW,mBAAmB;QAC/EsC,OAAO,CAACx4B,QAAQ,CAAC4F,UAAU,GAAKxG,UAAU,CAAC7iB,QAAQ,KAAK5W,YAAY,GAAK,KAAK,GAAG,IAAI;QAErF,IAAK8yD,iBAAiB,KAAKr5B,UAAU,IACpCs5B,wBAAwB,KAAKt5B,UAAU,CAACzkB,OAAO,IAC/Cg+C,kBAAkB,KAAKzd,QAAQ,CAAC4E,WAAW,EAAG;UAE9C0Y,OAAO,CAACx4B,QAAQ,CAACniB,WAAW,GAAG,IAAI;UAEnC46C,iBAAiB,GAAGr5B,UAAU;UAC9Bs5B,wBAAwB,GAAGt5B,UAAU,CAACzkB,OAAO;UAC7Cg+C,kBAAkB,GAAGzd,QAAQ,CAAC4E,WAAW;QAE1C;QAEA0Y,OAAO,CAACj/B,MAAM,CAACJ,SAAS,EAAE;;QAE1B;QACAy/B,UAAU,CAACW,OAAO,CAAEf,OAAO,EAAEA,OAAO,CAAC3rC,QAAQ,EAAE2rC,OAAO,CAACx4B,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAE;MAE9E,CAAC,MAAM,IAAKZ,UAAU,IAAIA,UAAU,CAAC3iB,SAAS,EAAG;QAEhD,IAAK87C,SAAS,KAAK3hE,SAAS,EAAG;UAE9B2hE,SAAS,GAAG,IAAI5gB,IAAI,CACnB,IAAI4O,aAAa,CAAE,CAAC,EAAE,CAAC,CAAE,EACzB,IAAI/K,cAAc,CAAE;YACnB/iD,IAAI,EAAE,oBAAoB;YAC1BqiD,QAAQ,EAAEH,aAAa,CAAE8a,SAAS,CAACr2B,UAAU,CAAC0b,QAAQ,CAAE;YACxDiB,YAAY,EAAE0Z,SAAS,CAACr2B,UAAU,CAAC2c,YAAY;YAC/CC,cAAc,EAAEyZ,SAAS,CAACr2B,UAAU,CAAC4c,cAAc;YACnDtY,IAAI,EAAEhmC,SAAS;YACf2mC,SAAS,EAAE,KAAK;YAChBC,UAAU,EAAE,KAAK;YACjBiG,GAAG,EAAE;UACN,CAAC,CAAE,CACH;UAEDguB,SAAS,CAAC1rC,QAAQ,CAACmmB,eAAe,CAAE,QAAQ,CAAE;;UAE9C;UACAlhD,MAAM,CAACI,cAAc,CAAEqmE,SAAS,CAACv4B,QAAQ,EAAE,KAAK,EAAE;YAEjDzxB,GAAG,EAAE,SAAAA,IAAA,EAAY;cAEhB,OAAO,IAAI,CAACusC,QAAQ,CAACmb,GAAG,CAAC3jE,KAAK;YAE/B;UAED,CAAC,CAAE;UAEH8lE,OAAO,CAAC30C,MAAM,CAAE80C,SAAS,CAAE;QAE5B;QAEAA,SAAS,CAACv4B,QAAQ,CAAC8a,QAAQ,CAACmb,GAAG,CAAC3jE,KAAK,GAAG8sC,UAAU;QAClDm5B,SAAS,CAACv4B,QAAQ,CAAC8a,QAAQ,CAACob,mBAAmB,CAAC5jE,KAAK,GAAGmtD,KAAK,CAACyW,mBAAmB;QACjFqC,SAAS,CAACv4B,QAAQ,CAAC4F,UAAU,GAAKxG,UAAU,CAAC7iB,QAAQ,KAAK5W,YAAY,GAAK,KAAK,GAAG,IAAI;QAEvF,IAAKy5B,UAAU,CAACpiB,gBAAgB,KAAK,IAAI,EAAG;UAE3CoiB,UAAU,CAAC3hB,YAAY,EAAE;QAE1B;QAEA86C,SAAS,CAACv4B,QAAQ,CAAC8a,QAAQ,CAAC0a,WAAW,CAACljE,KAAK,CAACyc,IAAI,CAAEqwB,UAAU,CAACpoB,MAAM,CAAE;QAEvE,IAAKyhD,iBAAiB,KAAKr5B,UAAU,IACpCs5B,wBAAwB,KAAKt5B,UAAU,CAACzkB,OAAO,IAC/Cg+C,kBAAkB,KAAKzd,QAAQ,CAAC4E,WAAW,EAAG;UAE9CyY,SAAS,CAACv4B,QAAQ,CAACniB,WAAW,GAAG,IAAI;UAErC46C,iBAAiB,GAAGr5B,UAAU;UAC9Bs5B,wBAAwB,GAAGt5B,UAAU,CAACzkB,OAAO;UAC7Cg+C,kBAAkB,GAAGzd,QAAQ,CAAC4E,WAAW;QAE1C;QAEAyY,SAAS,CAACh/B,MAAM,CAACJ,SAAS,EAAE;;QAE5B;QACAy/B,UAAU,CAACW,OAAO,CAAEhB,SAAS,EAAEA,SAAS,CAAC1rC,QAAQ,EAAE0rC,SAAS,CAACv4B,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAE;MAEpF;IAED;IAEA,SAASk5B,QAAQA,CAAElhD,KAAK,EAAE1G,KAAK,EAAG;MAEjC0G,KAAK,CAACq0B,MAAM,CAAE2rB,IAAI,EAAE/c,yBAAyB,CAAEC,QAAQ,CAAE,CAAE;MAE3DllD,KAAK,CAACgvD,OAAO,CAAChtC,KAAK,CAACkhD,QAAQ,CAAElB,IAAI,CAAChiD,CAAC,EAAEgiD,IAAI,CAAC7iD,CAAC,EAAE6iD,IAAI,CAACnrD,CAAC,EAAEyE,KAAK,EAAEo0B,kBAAkB,CAAE;IAElF;IAEA,OAAO;MAEN8zB,aAAa,EAAE,SAAAA,cAAA,EAAY;QAE1B,OAAOnB,UAAU;MAElB,CAAC;MACDoB,aAAa,EAAE,SAAAA,cAAWzhD,KAAK,EAAE1G,KAAK,GAAG,CAAC,EAAG;QAE5C+mD,UAAU,CAAC3qD,GAAG,CAAEsK,KAAK,CAAE;QACvBsgD,UAAU,GAAGhnD,KAAK;QAClB4nD,QAAQ,CAAEb,UAAU,EAAEC,UAAU,CAAE;MAEnC,CAAC;MACDoB,aAAa,EAAE,SAAAA,cAAA,EAAY;QAE1B,OAAOpB,UAAU;MAElB,CAAC;MACDqB,aAAa,EAAE,SAAAA,cAAWroD,KAAK,EAAG;QAEjCgnD,UAAU,GAAGhnD,KAAK;QAClB4nD,QAAQ,CAAEb,UAAU,EAAEC,UAAU,CAAE;MAEnC,CAAC;MACDpY,MAAM,EAAEA;IAET,CAAC;EAEF;EAEA,SAAS0Z,kBAAkBA,CAAE/U,EAAE,EAAE1I,UAAU,EAAErvB,UAAU,EAAEg4B,YAAY,EAAG;IAEvE,IAAM+U,mBAAmB,GAAGhV,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACiV,kBAAkB,CAAE;IAEpE,IAAMC,SAAS,GAAGjV,YAAY,CAACC,QAAQ,GAAG,IAAI,GAAG5I,UAAU,CAAC5tC,GAAG,CAAE,yBAAyB,CAAE;IAC5F,IAAMyrD,YAAY,GAAGlV,YAAY,CAACC,QAAQ,IAAIgV,SAAS,KAAK,IAAI;IAEhE,IAAME,aAAa,GAAG,CAAC,CAAC;IAExB,IAAMC,YAAY,GAAGC,kBAAkB,CAAE,IAAI,CAAE;IAC/C,IAAIC,YAAY,GAAGF,YAAY;IAC/B,IAAIG,WAAW,GAAG,KAAK;IAEvB,SAASC,KAAKA,CAAEnhE,MAAM,EAAE6mC,QAAQ,EAAEu6B,OAAO,EAAE1tC,QAAQ,EAAEpkB,KAAK,EAAG;MAE5D,IAAI+xD,aAAa,GAAG,KAAK;MAEzB,IAAKR,YAAY,EAAG;QAEnB,IAAMhkE,KAAK,GAAGykE,eAAe,CAAE5tC,QAAQ,EAAE0tC,OAAO,EAAEv6B,QAAQ,CAAE;QAE5D,IAAKo6B,YAAY,KAAKpkE,KAAK,EAAG;UAE7BokE,YAAY,GAAGpkE,KAAK;UACpB0kE,qBAAqB,CAAEN,YAAY,CAACjhE,MAAM,CAAE;QAE7C;QAEAqhE,aAAa,GAAG38C,WAAW,CAAE1kB,MAAM,EAAE0zB,QAAQ,EAAE0tC,OAAO,EAAE9xD,KAAK,CAAE;QAE/D,IAAK+xD,aAAa,EAAGG,SAAS,CAAExhE,MAAM,EAAE0zB,QAAQ,EAAE0tC,OAAO,EAAE9xD,KAAK,CAAE;MAEnE,CAAC,MAAM;QAEN,IAAMyhC,SAAS,GAAKlK,QAAQ,CAACkK,SAAS,KAAK,IAAM;QAEjD,IAAKkwB,YAAY,CAACvtC,QAAQ,KAAKA,QAAQ,CAACyQ,EAAE,IACzC88B,YAAY,CAACG,OAAO,KAAKA,OAAO,CAACj9B,EAAE,IACnC88B,YAAY,CAAClwB,SAAS,KAAKA,SAAS,EAAG;UAEvCkwB,YAAY,CAACvtC,QAAQ,GAAGA,QAAQ,CAACyQ,EAAE;UACnC88B,YAAY,CAACG,OAAO,GAAGA,OAAO,CAACj9B,EAAE;UACjC88B,YAAY,CAAClwB,SAAS,GAAGA,SAAS;UAElCswB,aAAa,GAAG,IAAI;QAErB;MAED;MAEA,IAAK/xD,KAAK,KAAK,IAAI,EAAG;QAErBqkB,UAAU,CAACrJ,MAAM,CAAEhb,KAAK,EAAEo8C,EAAE,CAAC+V,oBAAoB,CAAE;MAEpD;MAEA,IAAKJ,aAAa,IAAIH,WAAW,EAAG;QAEnCA,WAAW,GAAG,KAAK;QAEnBQ,qBAAqB,CAAE1hE,MAAM,EAAE6mC,QAAQ,EAAEu6B,OAAO,EAAE1tC,QAAQ,CAAE;QAE5D,IAAKpkB,KAAK,KAAK,IAAI,EAAG;UAErBo8C,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC+V,oBAAoB,EAAE9tC,UAAU,CAACve,GAAG,CAAE9F,KAAK,CAAE,CAAC+O,MAAM,CAAE;QAEzE;MAED;IAED;IAEA,SAASsjD,uBAAuBA,CAAA,EAAG;MAElC,IAAKhW,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAACkW,iBAAiB,EAAE;MAE1D,OAAOhB,SAAS,CAACiB,oBAAoB,EAAE;IAExC;IAEA,SAASN,qBAAqBA,CAAEO,GAAG,EAAG;MAErC,IAAKnW,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAACqW,eAAe,CAAED,GAAG,CAAE;MAE7D,OAAOlB,SAAS,CAACoB,kBAAkB,CAAEF,GAAG,CAAE;IAE3C;IAEA,SAASG,uBAAuBA,CAAEH,GAAG,EAAG;MAEvC,IAAKnW,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAACwW,iBAAiB,CAAEJ,GAAG,CAAE;MAE/D,OAAOlB,SAAS,CAACuB,oBAAoB,CAAEL,GAAG,CAAE;IAE7C;IAEA,SAASR,eAAeA,CAAE5tC,QAAQ,EAAE0tC,OAAO,EAAEv6B,QAAQ,EAAG;MAEvD,IAAMkK,SAAS,GAAKlK,QAAQ,CAACkK,SAAS,KAAK,IAAM;MAEjD,IAAIqxB,UAAU,GAAGtB,aAAa,CAAEptC,QAAQ,CAACyQ,EAAE,CAAE;MAE7C,IAAKi+B,UAAU,KAAK3kE,SAAS,EAAG;QAE/B2kE,UAAU,GAAG,CAAC,CAAC;QACftB,aAAa,CAAEptC,QAAQ,CAACyQ,EAAE,CAAE,GAAGi+B,UAAU;MAE1C;MAEA,IAAIC,QAAQ,GAAGD,UAAU,CAAEhB,OAAO,CAACj9B,EAAE,CAAE;MAEvC,IAAKk+B,QAAQ,KAAK5kE,SAAS,EAAG;QAE7B4kE,QAAQ,GAAG,CAAC,CAAC;QACbD,UAAU,CAAEhB,OAAO,CAACj9B,EAAE,CAAE,GAAGk+B,QAAQ;MAEpC;MAEA,IAAIxlE,KAAK,GAAGwlE,QAAQ,CAAEtxB,SAAS,CAAE;MAEjC,IAAKl0C,KAAK,KAAKY,SAAS,EAAG;QAE1BZ,KAAK,GAAGmkE,kBAAkB,CAAEW,uBAAuB,EAAE,CAAE;QACvDU,QAAQ,CAAEtxB,SAAS,CAAE,GAAGl0C,KAAK;MAE9B;MAEA,OAAOA,KAAK;IAEb;IAEA,SAASmkE,kBAAkBA,CAAEc,GAAG,EAAG;MAElC,IAAMQ,aAAa,GAAG,EAAE;MACxB,IAAMC,iBAAiB,GAAG,EAAE;MAC5B,IAAMC,iBAAiB,GAAG,EAAE;MAE5B,KAAM,IAAIxjE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0hE,mBAAmB,EAAE1hE,CAAC,EAAG,EAAG;QAEhDsjE,aAAa,CAAEtjE,CAAC,CAAE,GAAG,CAAC;QACtBujE,iBAAiB,CAAEvjE,CAAC,CAAE,GAAG,CAAC;QAC1BwjE,iBAAiB,CAAExjE,CAAC,CAAE,GAAG,CAAC;MAE3B;MAEA,OAAO;QAEN;QACA00B,QAAQ,EAAE,IAAI;QACd0tC,OAAO,EAAE,IAAI;QACbrwB,SAAS,EAAE,KAAK;QAEhBuxB,aAAa,EAAEA,aAAa;QAC5BC,iBAAiB,EAAEA,iBAAiB;QACpCC,iBAAiB,EAAEA,iBAAiB;QACpCxiE,MAAM,EAAE8hE,GAAG;QACXnuC,UAAU,EAAE,CAAC,CAAC;QACdrkB,KAAK,EAAE;MAER,CAAC;IAEF;IAEA,SAASoV,WAAWA,CAAE1kB,MAAM,EAAE0zB,QAAQ,EAAE0tC,OAAO,EAAE9xD,KAAK,EAAG;MAExD,IAAMmzD,gBAAgB,GAAGxB,YAAY,CAACttC,UAAU;MAChD,IAAM+uC,kBAAkB,GAAGhvC,QAAQ,CAACC,UAAU;MAE9C,IAAIgvC,aAAa,GAAG,CAAC;MAErB,IAAMC,iBAAiB,GAAGxB,OAAO,CAACyB,aAAa,EAAE;MAEjD,KAAM,IAAMvjE,IAAI,IAAIsjE,iBAAiB,EAAG;QAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEtjE,IAAI,CAAE;QAElD,IAAKwjE,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;UAErC,IAAMC,eAAe,GAAGP,gBAAgB,CAAEnjE,IAAI,CAAE;UAChD,IAAI2jE,iBAAiB,GAAGP,kBAAkB,CAAEpjE,IAAI,CAAE;UAElD,IAAK2jE,iBAAiB,KAAKxlE,SAAS,EAAG;YAEtC,IAAK6B,IAAI,KAAK,gBAAgB,IAAIU,MAAM,CAAC2lC,cAAc,EAAGs9B,iBAAiB,GAAGjjE,MAAM,CAAC2lC,cAAc;YACnG,IAAKrmC,IAAI,KAAK,eAAe,IAAIU,MAAM,CAAC4lC,aAAa,EAAGq9B,iBAAiB,GAAGjjE,MAAM,CAAC4lC,aAAa;UAEjG;UAEA,IAAKo9B,eAAe,KAAKvlE,SAAS,EAAG,OAAO,IAAI;UAEhD,IAAKulE,eAAe,CAACpqD,SAAS,KAAKqqD,iBAAiB,EAAG,OAAO,IAAI;UAElE,IAAKA,iBAAiB,IAAID,eAAe,CAAC3hD,IAAI,KAAK4hD,iBAAiB,CAAC5hD,IAAI,EAAG,OAAO,IAAI;UAEvFshD,aAAa,EAAG;QAEjB;MAED;MAEA,IAAK1B,YAAY,CAAC0B,aAAa,KAAKA,aAAa,EAAG,OAAO,IAAI;MAE/D,IAAK1B,YAAY,CAAC3xD,KAAK,KAAKA,KAAK,EAAG,OAAO,IAAI;MAE/C,OAAO,KAAK;IAEb;IAEA,SAASkyD,SAASA,CAAExhE,MAAM,EAAE0zB,QAAQ,EAAE0tC,OAAO,EAAE9xD,KAAK,EAAG;MAEtD,IAAM23B,KAAK,GAAG,CAAC,CAAC;MAChB,IAAMtT,UAAU,GAAGD,QAAQ,CAACC,UAAU;MACtC,IAAIgvC,aAAa,GAAG,CAAC;MAErB,IAAMC,iBAAiB,GAAGxB,OAAO,CAACyB,aAAa,EAAE;MAEjD,KAAM,IAAMvjE,IAAI,IAAIsjE,iBAAiB,EAAG;QAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEtjE,IAAI,CAAE;QAElD,IAAKwjE,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;UAErC,IAAInqD,SAAS,GAAG+a,UAAU,CAAEr0B,IAAI,CAAE;UAElC,IAAKsZ,SAAS,KAAKnb,SAAS,EAAG;YAE9B,IAAK6B,IAAI,KAAK,gBAAgB,IAAIU,MAAM,CAAC2lC,cAAc,EAAG/sB,SAAS,GAAG5Y,MAAM,CAAC2lC,cAAc;YAC3F,IAAKrmC,IAAI,KAAK,eAAe,IAAIU,MAAM,CAAC4lC,aAAa,EAAGhtB,SAAS,GAAG5Y,MAAM,CAAC4lC,aAAa;UAEzF;UAEA,IAAMvkB,IAAI,GAAG,CAAC,CAAC;UACfA,IAAI,CAACzI,SAAS,GAAGA,SAAS;UAE1B,IAAKA,SAAS,IAAIA,SAAS,CAACyI,IAAI,EAAG;YAElCA,IAAI,CAACA,IAAI,GAAGzI,SAAS,CAACyI,IAAI;UAE3B;UAEA4lB,KAAK,CAAE3nC,IAAI,CAAE,GAAG+hB,IAAI;UAEpBshD,aAAa,EAAG;QAEjB;MAED;MAEA1B,YAAY,CAACttC,UAAU,GAAGsT,KAAK;MAC/Bg6B,YAAY,CAAC0B,aAAa,GAAGA,aAAa;MAE1C1B,YAAY,CAAC3xD,KAAK,GAAGA,KAAK;IAE3B;IAEA,SAAS4zD,cAAcA,CAAA,EAAG;MAEzB,IAAMZ,aAAa,GAAGrB,YAAY,CAACqB,aAAa;MAEhD,KAAM,IAAItjE,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG44C,aAAa,CAACvjE,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;QAE1DsjE,aAAa,CAAEtjE,CAAC,CAAE,GAAG,CAAC;MAEvB;IAED;IAEA,SAASmkE,eAAeA,CAAEvqD,SAAS,EAAG;MAErCwqD,yBAAyB,CAAExqD,SAAS,EAAE,CAAC,CAAE;IAE1C;IAEA,SAASwqD,yBAAyBA,CAAExqD,SAAS,EAAEyqD,gBAAgB,EAAG;MAEjE,IAAMf,aAAa,GAAGrB,YAAY,CAACqB,aAAa;MAChD,IAAMC,iBAAiB,GAAGtB,YAAY,CAACsB,iBAAiB;MACxD,IAAMC,iBAAiB,GAAGvB,YAAY,CAACuB,iBAAiB;MAExDF,aAAa,CAAE1pD,SAAS,CAAE,GAAG,CAAC;MAE9B,IAAK2pD,iBAAiB,CAAE3pD,SAAS,CAAE,KAAK,CAAC,EAAG;QAE3C8yC,EAAE,CAAC4X,uBAAuB,CAAE1qD,SAAS,CAAE;QACvC2pD,iBAAiB,CAAE3pD,SAAS,CAAE,GAAG,CAAC;MAEnC;MAEA,IAAK4pD,iBAAiB,CAAE5pD,SAAS,CAAE,KAAKyqD,gBAAgB,EAAG;QAE1D,IAAMzC,UAAS,GAAGjV,YAAY,CAACC,QAAQ,GAAGF,EAAE,GAAG1I,UAAU,CAAC5tC,GAAG,CAAE,wBAAwB,CAAE;QAEzFwrD,UAAS,CAAEjV,YAAY,CAACC,QAAQ,GAAG,qBAAqB,GAAG,0BAA0B,CAAE,CAAEhzC,SAAS,EAAEyqD,gBAAgB,CAAE;QACtHb,iBAAiB,CAAE5pD,SAAS,CAAE,GAAGyqD,gBAAgB;MAElD;IAED;IAEA,SAASE,uBAAuBA,CAAA,EAAG;MAElC,IAAMjB,aAAa,GAAGrB,YAAY,CAACqB,aAAa;MAChD,IAAMC,iBAAiB,GAAGtB,YAAY,CAACsB,iBAAiB;MAExD,KAAM,IAAIvjE,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG64C,iBAAiB,CAACxjE,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;QAE9D,IAAKujE,iBAAiB,CAAEvjE,CAAC,CAAE,KAAKsjE,aAAa,CAAEtjE,CAAC,CAAE,EAAG;UAEpD0sD,EAAE,CAAC8X,wBAAwB,CAAExkE,CAAC,CAAE;UAChCujE,iBAAiB,CAAEvjE,CAAC,CAAE,GAAG,CAAC;QAE3B;MAED;IAED;IAEA,SAASykE,mBAAmBA,CAAEn0D,KAAK,EAAEkjB,IAAI,EAAEx3B,IAAI,EAAEq6C,UAAU,EAAE4H,MAAM,EAAExkC,MAAM,EAAG;MAE7E,IAAKkzC,YAAY,CAACC,QAAQ,KAAK,IAAI,KAAM5wD,IAAI,KAAK0wD,EAAE,CAACc,GAAG,IAAIxxD,IAAI,KAAK0wD,EAAE,CAACa,YAAY,CAAE,EAAG;QAExFb,EAAE,CAACgY,oBAAoB,CAAEp0D,KAAK,EAAEkjB,IAAI,EAAEx3B,IAAI,EAAEiiD,MAAM,EAAExkC,MAAM,CAAE;MAE7D,CAAC,MAAM;QAENizC,EAAE,CAAC+X,mBAAmB,CAAEn0D,KAAK,EAAEkjB,IAAI,EAAEx3B,IAAI,EAAEq6C,UAAU,EAAE4H,MAAM,EAAExkC,MAAM,CAAE;MAExE;IAED;IAEA,SAASipD,qBAAqBA,CAAE1hE,MAAM,EAAE6mC,QAAQ,EAAEu6B,OAAO,EAAE1tC,QAAQ,EAAG;MAErE,IAAKi4B,YAAY,CAACC,QAAQ,KAAK,KAAK,KAAM5rD,MAAM,CAAC0lC,eAAe,IAAIhS,QAAQ,CAACiwC,yBAAyB,CAAE,EAAG;QAE1G,IAAK3gB,UAAU,CAAC5tC,GAAG,CAAE,wBAAwB,CAAE,KAAK,IAAI,EAAG;MAE5D;MAEA8tD,cAAc,EAAE;MAEhB,IAAMR,kBAAkB,GAAGhvC,QAAQ,CAACC,UAAU;MAE9C,IAAMivC,iBAAiB,GAAGxB,OAAO,CAACyB,aAAa,EAAE;MAEjD,IAAMe,8BAA8B,GAAG/8B,QAAQ,CAACwc,sBAAsB;MAEtE,KAAM,IAAM/jD,IAAI,IAAIsjE,iBAAiB,EAAG;QAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEtjE,IAAI,CAAE;QAElD,IAAKwjE,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;UAErC,IAAIE,iBAAiB,GAAGP,kBAAkB,CAAEpjE,IAAI,CAAE;UAElD,IAAK2jE,iBAAiB,KAAKxlE,SAAS,EAAG;YAEtC,IAAK6B,IAAI,KAAK,gBAAgB,IAAIU,MAAM,CAAC2lC,cAAc,EAAGs9B,iBAAiB,GAAGjjE,MAAM,CAAC2lC,cAAc;YACnG,IAAKrmC,IAAI,KAAK,eAAe,IAAIU,MAAM,CAAC4lC,aAAa,EAAGq9B,iBAAiB,GAAGjjE,MAAM,CAAC4lC,aAAa;UAEjG;UAEA,IAAKq9B,iBAAiB,KAAKxlE,SAAS,EAAG;YAEtC,IAAM43C,UAAU,GAAG4tB,iBAAiB,CAAC5tB,UAAU;YAC/C,IAAM7iB,IAAI,GAAGywC,iBAAiB,CAAC7tB,QAAQ;YAEvC,IAAMx8B,SAAS,GAAG+a,UAAU,CAACve,GAAG,CAAE6tD,iBAAiB,CAAE;;YAErD;;YAEA,IAAKrqD,SAAS,KAAKnb,SAAS,EAAG;YAE/B,IAAM4gB,MAAM,GAAGzF,SAAS,CAACyF,MAAM;YAC/B,IAAMrjB,IAAI,GAAG4d,SAAS,CAAC5d,IAAI;YAC3B,IAAM2xD,eAAe,GAAG/zC,SAAS,CAAC+zC,eAAe;YAEjD,IAAKsW,iBAAiB,CAACjmB,4BAA4B,EAAG;cAErD,IAAM37B,IAAI,GAAG4hD,iBAAiB,CAAC5hD,IAAI;cACnC,IAAM47B,MAAM,GAAG57B,IAAI,CAAC47B,MAAM;cAC1B,IAAMxkC,MAAM,GAAGwqD,iBAAiB,CAACxqD,MAAM;cAEvC,IAAK4I,IAAI,CAACwiD,4BAA4B,EAAG;gBAExC,KAAM,IAAI7kE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8jE,gBAAgB,CAACgB,YAAY,EAAE9kE,CAAC,EAAG,EAAG;kBAE1DokE,yBAAyB,CAAEN,gBAAgB,CAACC,QAAQ,GAAG/jE,CAAC,EAAEqiB,IAAI,CAACgiD,gBAAgB,CAAE;gBAElF;gBAEA,IAAKrjE,MAAM,CAAC0lC,eAAe,KAAK,IAAI,IAAIhS,QAAQ,CAACqwC,iBAAiB,KAAKtmE,SAAS,EAAG;kBAElFi2B,QAAQ,CAACqwC,iBAAiB,GAAG1iD,IAAI,CAACgiD,gBAAgB,GAAGhiD,IAAI,CAACkI,KAAK;gBAEhE;cAED,CAAC,MAAM;gBAEN,KAAM,IAAIvqB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8jE,gBAAgB,CAACgB,YAAY,EAAE9kE,IAAC,EAAG,EAAG;kBAE1DmkE,eAAe,CAAEL,gBAAgB,CAACC,QAAQ,GAAG/jE,IAAC,CAAE;gBAEjD;cAED;cAEA0sD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAACsY,YAAY,EAAE3lD,MAAM,CAAE;cAExC,KAAM,IAAIrf,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8jE,gBAAgB,CAACgB,YAAY,EAAE9kE,IAAC,EAAG,EAAG;gBAE1DykE,mBAAmB,CAClBX,gBAAgB,CAACC,QAAQ,GAAG/jE,IAAC,EAC7BwzB,IAAI,GAAGswC,gBAAgB,CAACgB,YAAY,EACpC9oE,IAAI,EACJq6C,UAAU,EACV4H,MAAM,GAAG0P,eAAe,EACxB,CAAEl0C,MAAM,GAAK+Z,IAAI,GAAGswC,gBAAgB,CAACgB,YAAY,GAAK9kE,IAAC,IAAK2tD,eAAe,CAC3E;cAEF;YAED,CAAC,MAAM;cAEN,IAAKsW,iBAAiB,CAACgB,0BAA0B,EAAG;gBAEnD,KAAM,IAAIjlE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8jE,gBAAgB,CAACgB,YAAY,EAAE9kE,IAAC,EAAG,EAAG;kBAE1DokE,yBAAyB,CAAEN,gBAAgB,CAACC,QAAQ,GAAG/jE,IAAC,EAAEikE,iBAAiB,CAACI,gBAAgB,CAAE;gBAE/F;gBAEA,IAAKrjE,MAAM,CAAC0lC,eAAe,KAAK,IAAI,IAAIhS,QAAQ,CAACqwC,iBAAiB,KAAKtmE,SAAS,EAAG;kBAElFi2B,QAAQ,CAACqwC,iBAAiB,GAAGd,iBAAiB,CAACI,gBAAgB,GAAGJ,iBAAiB,CAAC15C,KAAK;gBAE1F;cAED,CAAC,MAAM;gBAEN,KAAM,IAAIvqB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8jE,gBAAgB,CAACgB,YAAY,EAAE9kE,IAAC,EAAG,EAAG;kBAE1DmkE,eAAe,CAAEL,gBAAgB,CAACC,QAAQ,GAAG/jE,IAAC,CAAE;gBAEjD;cAED;cAEA0sD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAACsY,YAAY,EAAE3lD,MAAM,CAAE;cAExC,KAAM,IAAIrf,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8jE,gBAAgB,CAACgB,YAAY,EAAE9kE,IAAC,EAAG,EAAG;gBAE1DykE,mBAAmB,CAClBX,gBAAgB,CAACC,QAAQ,GAAG/jE,IAAC,EAC7BwzB,IAAI,GAAGswC,gBAAgB,CAACgB,YAAY,EACpC9oE,IAAI,EACJq6C,UAAU,EACV7iB,IAAI,GAAGm6B,eAAe,EACpBn6B,IAAI,GAAGswC,gBAAgB,CAACgB,YAAY,GAAK9kE,IAAC,GAAG2tD,eAAe,CAC9D;cAEF;YAED;UAED,CAAC,MAAM,IAAKiX,8BAA8B,KAAKnmE,SAAS,EAAG;YAE1D,IAAMtE,OAAK,GAAGyqE,8BAA8B,CAAEtkE,IAAI,CAAE;YAEpD,IAAKnG,OAAK,KAAKsE,SAAS,EAAG;cAE1B,QAAStE,OAAK,CAAC4F,MAAM;gBAEpB,KAAK,CAAC;kBACL2sD,EAAE,CAACwY,eAAe,CAAEpB,gBAAgB,CAACC,QAAQ,EAAE5pE,OAAK,CAAE;kBACtD;gBAED,KAAK,CAAC;kBACLuyD,EAAE,CAACyY,eAAe,CAAErB,gBAAgB,CAACC,QAAQ,EAAE5pE,OAAK,CAAE;kBACtD;gBAED,KAAK,CAAC;kBACLuyD,EAAE,CAAC0Y,eAAe,CAAEtB,gBAAgB,CAACC,QAAQ,EAAE5pE,OAAK,CAAE;kBACtD;gBAED;kBACCuyD,EAAE,CAAC2Y,eAAe,CAAEvB,gBAAgB,CAACC,QAAQ,EAAE5pE,OAAK,CAAE;cAAC;YAI1D;UAED;QAED;MAED;MAEAoqE,uBAAuB,EAAE;IAE1B;IAEA,SAAS1+C,OAAOA,CAAA,EAAG;MAElBlmB,KAAK,EAAE;MAEP,KAAM,IAAM2lE,UAAU,IAAIxD,aAAa,EAAG;QAEzC,IAAMsB,UAAU,GAAGtB,aAAa,CAAEwD,UAAU,CAAE;QAE9C,KAAM,IAAMC,SAAS,IAAInC,UAAU,EAAG;UAErC,IAAMC,QAAQ,GAAGD,UAAU,CAAEmC,SAAS,CAAE;UAExC,KAAM,IAAMxzB,SAAS,IAAIsxB,QAAQ,EAAG;YAEnCJ,uBAAuB,CAAEI,QAAQ,CAAEtxB,SAAS,CAAE,CAAC/wC,MAAM,CAAE;YAEvD,OAAOqiE,QAAQ,CAAEtxB,SAAS,CAAE;UAE7B;UAEA,OAAOqxB,UAAU,CAAEmC,SAAS,CAAE;QAE/B;QAEA,OAAOzD,aAAa,CAAEwD,UAAU,CAAE;MAEnC;IAED;IAEA,SAASE,uBAAuBA,CAAE9wC,QAAQ,EAAG;MAE5C,IAAKotC,aAAa,CAAEptC,QAAQ,CAACyQ,EAAE,CAAE,KAAK1mC,SAAS,EAAG;MAElD,IAAM2kE,UAAU,GAAGtB,aAAa,CAAEptC,QAAQ,CAACyQ,EAAE,CAAE;MAE/C,KAAM,IAAMogC,SAAS,IAAInC,UAAU,EAAG;QAErC,IAAMC,QAAQ,GAAGD,UAAU,CAAEmC,SAAS,CAAE;QAExC,KAAM,IAAMxzB,SAAS,IAAIsxB,QAAQ,EAAG;UAEnCJ,uBAAuB,CAAEI,QAAQ,CAAEtxB,SAAS,CAAE,CAAC/wC,MAAM,CAAE;UAEvD,OAAOqiE,QAAQ,CAAEtxB,SAAS,CAAE;QAE7B;QAEA,OAAOqxB,UAAU,CAAEmC,SAAS,CAAE;MAE/B;MAEA,OAAOzD,aAAa,CAAEptC,QAAQ,CAACyQ,EAAE,CAAE;IAEpC;IAEA,SAASsgC,sBAAsBA,CAAErD,OAAO,EAAG;MAE1C,KAAM,IAAMkD,UAAU,IAAIxD,aAAa,EAAG;QAEzC,IAAMsB,UAAU,GAAGtB,aAAa,CAAEwD,UAAU,CAAE;QAE9C,IAAKlC,UAAU,CAAEhB,OAAO,CAACj9B,EAAE,CAAE,KAAK1mC,SAAS,EAAG;QAE9C,IAAM4kE,QAAQ,GAAGD,UAAU,CAAEhB,OAAO,CAACj9B,EAAE,CAAE;QAEzC,KAAM,IAAM4M,SAAS,IAAIsxB,QAAQ,EAAG;UAEnCJ,uBAAuB,CAAEI,QAAQ,CAAEtxB,SAAS,CAAE,CAAC/wC,MAAM,CAAE;UAEvD,OAAOqiE,QAAQ,CAAEtxB,SAAS,CAAE;QAE7B;QAEA,OAAOqxB,UAAU,CAAEhB,OAAO,CAACj9B,EAAE,CAAE;MAEhC;IAED;IAEA,SAASxlC,KAAKA,CAAA,EAAG;MAEhB+lE,iBAAiB,EAAE;MACnBxD,WAAW,GAAG,IAAI;MAElB,IAAKD,YAAY,KAAKF,YAAY,EAAG;MAErCE,YAAY,GAAGF,YAAY;MAC3BQ,qBAAqB,CAAEN,YAAY,CAACjhE,MAAM,CAAE;IAE7C;;IAEA;;IAEA,SAAS0kE,iBAAiBA,CAAA,EAAG;MAE5B3D,YAAY,CAACrtC,QAAQ,GAAG,IAAI;MAC5BqtC,YAAY,CAACK,OAAO,GAAG,IAAI;MAC3BL,YAAY,CAAChwB,SAAS,GAAG,KAAK;IAE/B;IAEA,OAAO;MAENowB,KAAK,EAAEA,KAAK;MACZxiE,KAAK,EAAEA,KAAK;MACZ+lE,iBAAiB,EAAEA,iBAAiB;MACpC7/C,OAAO,EAAEA,OAAO;MAChB2/C,uBAAuB,EAAEA,uBAAuB;MAChDC,sBAAsB,EAAEA,sBAAsB;MAE9CvB,cAAc,EAAEA,cAAc;MAC9BC,eAAe,EAAEA,eAAe;MAChCI,uBAAuB,EAAEA;IAE1B,CAAC;EAEF;EAEA,SAASoB,mBAAmBA,CAAEjZ,EAAE,EAAE1I,UAAU,EAAEplD,IAAI,EAAE+tD,YAAY,EAAG;IAElE,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;IAEtC,IAAIgZ,IAAI;IAER,SAASC,OAAOA,CAAE1rE,KAAK,EAAG;MAEzByrE,IAAI,GAAGzrE,KAAK;IAEb;IAEA,SAAS4tD,MAAMA,CAAEvN,KAAK,EAAEjwB,KAAK,EAAG;MAE/BmiC,EAAE,CAACoZ,UAAU,CAAEF,IAAI,EAAEprB,KAAK,EAAEjwB,KAAK,CAAE;MAEnC3rB,IAAI,CAAC0sB,MAAM,CAAEf,KAAK,EAAEq7C,IAAI,EAAE,CAAC,CAAE;IAE9B;IAEA,SAASG,eAAeA,CAAEvrB,KAAK,EAAEjwB,KAAK,EAAEy7C,SAAS,EAAG;MAEnD,IAAKA,SAAS,KAAK,CAAC,EAAG;MAEvB,IAAIpE,SAAS,EAAEpjE,UAAU;MAEzB,IAAKouD,QAAQ,EAAG;QAEfgV,SAAS,GAAGlV,EAAE;QACdluD,UAAU,GAAG,qBAAqB;MAEnC,CAAC,MAAM;QAENojE,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,wBAAwB,CAAE;QACtD5X,UAAU,GAAG,0BAA0B;QAEvC,IAAKojE,SAAS,KAAK,IAAI,EAAG;UAEzBl+D,OAAO,CAAChG,KAAK,CAAE,gIAAgI,CAAE;UACjJ;QAED;MAED;MAEAkkE,SAAS,CAAEpjE,UAAU,CAAE,CAAEonE,IAAI,EAAEprB,KAAK,EAAEjwB,KAAK,EAAEy7C,SAAS,CAAE;MAExDpnE,IAAI,CAAC0sB,MAAM,CAAEf,KAAK,EAAEq7C,IAAI,EAAEI,SAAS,CAAE;IAEtC;;IAEA;;IAEA,IAAI,CAACH,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC9d,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACge,eAAe,GAAGA,eAAe;EAEvC;EAEA,SAASE,iBAAiBA,CAAEvZ,EAAE,EAAE1I,UAAU,EAAEzc,UAAU,EAAG;IAExD,IAAI2+B,aAAa;IAEjB,SAASC,gBAAgBA,CAAA,EAAG;MAE3B,IAAKD,aAAa,KAAKznE,SAAS,EAAG,OAAOynE,aAAa;MAEvD,IAAKliB,UAAU,CAACoiB,GAAG,CAAE,gCAAgC,CAAE,KAAK,IAAI,EAAG;QAElE,IAAMxE,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,gCAAgC,CAAE;QAEpE8vD,aAAa,GAAGxZ,EAAE,CAAC13B,YAAY,CAAE4sC,SAAS,CAACyE,8BAA8B,CAAE;MAE5E,CAAC,MAAM;QAENH,aAAa,GAAG,CAAC;MAElB;MAEA,OAAOA,aAAa;IAErB;IAEA,SAASI,eAAeA,CAAEr5B,SAAS,EAAG;MAErC,IAAKA,SAAS,KAAK,OAAO,EAAG;QAE5B,IAAKyf,EAAE,CAAC6Z,wBAAwB,CAAE7Z,EAAE,CAAC8Z,aAAa,EAAE9Z,EAAE,CAAC+Z,UAAU,CAAE,CAACx5B,SAAS,GAAG,CAAC,IAChFyf,EAAE,CAAC6Z,wBAAwB,CAAE7Z,EAAE,CAACga,eAAe,EAAEha,EAAE,CAAC+Z,UAAU,CAAE,CAACx5B,SAAS,GAAG,CAAC,EAAG;UAEjF,OAAO,OAAO;QAEf;QAEAA,SAAS,GAAG,SAAS;MAEtB;MAEA,IAAKA,SAAS,KAAK,SAAS,EAAG;QAE9B,IAAKyf,EAAE,CAAC6Z,wBAAwB,CAAE7Z,EAAE,CAAC8Z,aAAa,EAAE9Z,EAAE,CAACia,YAAY,CAAE,CAAC15B,SAAS,GAAG,CAAC,IAClFyf,EAAE,CAAC6Z,wBAAwB,CAAE7Z,EAAE,CAACga,eAAe,EAAEha,EAAE,CAACia,YAAY,CAAE,CAAC15B,SAAS,GAAG,CAAC,EAAG;UAEnF,OAAO,SAAS;QAEjB;MAED;MAEA,OAAO,MAAM;IAEd;IAEA,IAAM2f,QAAQ,GAAG,OAAOga,sBAAsB,KAAK,WAAW,IAAIla,EAAE,CAACrsD,WAAW,CAACC,IAAI,KAAK,wBAAwB;IAElH,IAAI2sC,SAAS,GAAG1F,UAAU,CAAC0F,SAAS,KAAKxuC,SAAS,GAAG8oC,UAAU,CAAC0F,SAAS,GAAG,OAAO;IACnF,IAAM45B,YAAY,GAAGP,eAAe,CAAEr5B,SAAS,CAAE;IAEjD,IAAK45B,YAAY,KAAK55B,SAAS,EAAG;MAEjCvpC,OAAO,CAACC,IAAI,CAAE,sBAAsB,EAAEspC,SAAS,EAAE,sBAAsB,EAAE45B,YAAY,EAAE,UAAU,CAAE;MACnG55B,SAAS,GAAG45B,YAAY;IAEzB;IAEA,IAAM1iB,WAAW,GAAGyI,QAAQ,IAAI5I,UAAU,CAACoiB,GAAG,CAAE,oBAAoB,CAAE;IAEtE,IAAMU,sBAAsB,GAAGv/B,UAAU,CAACu/B,sBAAsB,KAAK,IAAI;IAEzE,IAAMC,WAAW,GAAGra,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACsa,uBAAuB,CAAE;IACjE,IAAMC,iBAAiB,GAAGva,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACwa,8BAA8B,CAAE;IAC9E,IAAMC,cAAc,GAAGza,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAAC0a,gBAAgB,CAAE;IAC7D,IAAMC,cAAc,GAAG3a,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAAC4a,yBAAyB,CAAE;IAEtE,IAAMC,aAAa,GAAG7a,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACiV,kBAAkB,CAAE;IAC9D,IAAM6F,iBAAiB,GAAG9a,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAAC+a,0BAA0B,CAAE;IAC1E,IAAMC,WAAW,GAAGhb,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACib,mBAAmB,CAAE;IAC7D,IAAMC,mBAAmB,GAAGlb,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACmb,4BAA4B,CAAE;IAE9E,IAAMC,cAAc,GAAGb,iBAAiB,GAAG,CAAC;IAC5C,IAAMc,qBAAqB,GAAGnb,QAAQ,IAAI5I,UAAU,CAACoiB,GAAG,CAAE,mBAAmB,CAAE;IAC/E,IAAM4B,mBAAmB,GAAGF,cAAc,IAAIC,qBAAqB;IAEnE,IAAME,UAAU,GAAGrb,QAAQ,GAAGF,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACwb,WAAW,CAAE,GAAG,CAAC;IAEnE,OAAO;MAENtb,QAAQ,EAAEA,QAAQ;MAElBzI,WAAW,EAAEA,WAAW;MAExBgiB,gBAAgB,EAAEA,gBAAgB;MAClCG,eAAe,EAAEA,eAAe;MAEhCr5B,SAAS,EAAEA,SAAS;MACpB65B,sBAAsB,EAAEA,sBAAsB;MAE9CC,WAAW,EAAEA,WAAW;MACxBE,iBAAiB,EAAEA,iBAAiB;MACpCE,cAAc,EAAEA,cAAc;MAC9BE,cAAc,EAAEA,cAAc;MAE9BE,aAAa,EAAEA,aAAa;MAC5BC,iBAAiB,EAAEA,iBAAiB;MACpCE,WAAW,EAAEA,WAAW;MACxBE,mBAAmB,EAAEA,mBAAmB;MAExCE,cAAc,EAAEA,cAAc;MAC9BC,qBAAqB,EAAEA,qBAAqB;MAC5CC,mBAAmB,EAAEA,mBAAmB;MAExCC,UAAU,EAAEA;IAEb,CAAC;EAEF;EAEA,SAASE,aAAaA,CAAE1M,UAAU,EAAG;IAEpC,IAAMpa,KAAK,GAAG,IAAI;IAElB,IAAI+mB,WAAW,GAAG,IAAI;MACrBC,eAAe,GAAG,CAAC;MACnBC,oBAAoB,GAAG,KAAK;MAC5BC,gBAAgB,GAAG,KAAK;IAEzB,IAAMjzC,KAAK,GAAG,IAAI6zB,KAAK,EAAE;MACxBqf,gBAAgB,GAAG,IAAIruD,OAAO,EAAE;MAEhCsqC,OAAO,GAAG;QAAEtqD,KAAK,EAAE,IAAI;QAAEurB,WAAW,EAAE;MAAM,CAAC;IAE9C,IAAI,CAAC++B,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACgkB,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,eAAe,GAAG,CAAC;IAExB,IAAI,CAACC,IAAI,GAAG,UAAWpe,MAAM,EAAEqe,mBAAmB,EAAG;MAEpD,IAAMvoD,OAAO,GACZkqC,MAAM,CAACxqD,MAAM,KAAK,CAAC,IACnB6oE,mBAAmB;MACnB;MACA;MACAP,eAAe,KAAK,CAAC,IACrBC,oBAAoB;MAErBA,oBAAoB,GAAGM,mBAAmB;MAE1CP,eAAe,GAAG9d,MAAM,CAACxqD,MAAM;MAE/B,OAAOsgB,OAAO;IAEf,CAAC;IAED,IAAI,CAACwoD,YAAY,GAAG,YAAY;MAE/BN,gBAAgB,GAAG,IAAI;MACvBO,aAAa,CAAE,IAAI,CAAE;IAEtB,CAAC;IAED,IAAI,CAACC,UAAU,GAAG,YAAY;MAE7BR,gBAAgB,GAAG,KAAK;IAEzB,CAAC;IAED,IAAI,CAACS,cAAc,GAAG,UAAWze,MAAM,EAAE95B,MAAM,EAAG;MAEjD23C,WAAW,GAAGU,aAAa,CAAEve,MAAM,EAAE95B,MAAM,EAAE,CAAC,CAAE;IAEjD,CAAC;IAED,IAAI,CAACw4C,QAAQ,GAAG,UAAWphC,QAAQ,EAAEpX,MAAM,EAAEy4C,QAAQ,EAAG;MAEvD,IAAM3e,MAAM,GAAG1iB,QAAQ,CAAC+E,cAAc;QACrCC,gBAAgB,GAAGhF,QAAQ,CAACgF,gBAAgB;QAC5CC,WAAW,GAAGjF,QAAQ,CAACiF,WAAW;MAEnC,IAAMq8B,kBAAkB,GAAG1N,UAAU,CAACrlD,GAAG,CAAEyxB,QAAQ,CAAE;MAErD,IAAK,CAAEygC,oBAAoB,IAAI/d,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACxqD,MAAM,KAAK,CAAC,IAAIwoE,gBAAgB,IAAI,CAAEz7B,WAAW,EAAG;QAE5G;;QAEA,IAAKy7B,gBAAgB,EAAG;UAEvB;;UAEAO,aAAa,CAAE,IAAI,CAAE;QAEtB,CAAC,MAAM;UAENM,gBAAgB,EAAE;QAEnB;MAED,CAAC,MAAM;QAEN,IAAMC,OAAO,GAAGd,gBAAgB,GAAG,CAAC,GAAGF,eAAe;UACrDiB,OAAO,GAAGD,OAAO,GAAG,CAAC;QAEtB,IAAIE,QAAQ,GAAGJ,kBAAkB,CAACK,aAAa,IAAI,IAAI;QAEvD/kB,OAAO,CAACtqD,KAAK,GAAGovE,QAAQ,CAAC,CAAC;;QAE1BA,QAAQ,GAAGT,aAAa,CAAEve,MAAM,EAAE95B,MAAM,EAAE64C,OAAO,EAAEJ,QAAQ,CAAE;QAE7D,KAAM,IAAIlpE,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKspE,OAAO,EAAE,EAAGtpE,CAAC,EAAG;UAEtCupE,QAAQ,CAAEvpE,CAAC,CAAE,GAAGooE,WAAW,CAAEpoE,CAAC,CAAE;QAEjC;QAEAmpE,kBAAkB,CAACK,aAAa,GAAGD,QAAQ;QAC3C,IAAI,CAACb,eAAe,GAAG77B,gBAAgB,GAAG,IAAI,CAAC47B,SAAS,GAAG,CAAC;QAC5D,IAAI,CAACA,SAAS,IAAIY,OAAO;MAE1B;IAGD,CAAC;IAED,SAASD,gBAAgBA,CAAA,EAAG;MAE3B,IAAK3kB,OAAO,CAACtqD,KAAK,KAAKiuE,WAAW,EAAG;QAEpC3jB,OAAO,CAACtqD,KAAK,GAAGiuE,WAAW;QAC3B3jB,OAAO,CAAC/+B,WAAW,GAAG2iD,eAAe,GAAG,CAAC;MAE1C;MAEAhnB,KAAK,CAAConB,SAAS,GAAGJ,eAAe;MACjChnB,KAAK,CAACqnB,eAAe,GAAG,CAAC;IAE1B;IAEA,SAASI,aAAaA,CAAEve,MAAM,EAAE95B,MAAM,EAAEpC,SAAS,EAAEo7C,aAAa,EAAG;MAElE,IAAMC,OAAO,GAAGnf,MAAM,KAAK,IAAI,GAAGA,MAAM,CAACxqD,MAAM,GAAG,CAAC;MACnD,IAAIwpE,QAAQ,GAAG,IAAI;MAEnB,IAAKG,OAAO,KAAK,CAAC,EAAG;QAEpBH,QAAQ,GAAG9kB,OAAO,CAACtqD,KAAK;QAExB,IAAKsvE,aAAa,KAAK,IAAI,IAAIF,QAAQ,KAAK,IAAI,EAAG;UAElD,IAAMI,QAAQ,GAAGt7C,SAAS,GAAGq7C,OAAO,GAAG,CAAC;YACvCE,UAAU,GAAGn5C,MAAM,CAACC,kBAAkB;UAEvC83C,gBAAgB,CAAC9qD,eAAe,CAAEksD,UAAU,CAAE;UAE9C,IAAKL,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAACxpE,MAAM,GAAG4pE,QAAQ,EAAG;YAEtDJ,QAAQ,GAAG,IAAI9zD,YAAY,CAAEk0D,QAAQ,CAAE;UAExC;UAEA,KAAM,IAAI3pE,CAAC,GAAG,CAAC,EAAE6pE,EAAE,GAAGx7C,SAAS,EAAEruB,CAAC,KAAK0pE,OAAO,EAAE,EAAG1pE,CAAC,EAAE6pE,EAAE,IAAI,CAAC,EAAG;YAE/Dv0C,KAAK,CAAC1e,IAAI,CAAE2zC,MAAM,CAAEvqD,CAAC,CAAE,CAAE,CAACumB,YAAY,CAAEqjD,UAAU,EAAEpB,gBAAgB,CAAE;YAEtElzC,KAAK,CAAC1D,MAAM,CAAClY,OAAO,CAAE6vD,QAAQ,EAAEM,EAAE,CAAE;YACpCN,QAAQ,CAAEM,EAAE,GAAG,CAAC,CAAE,GAAGv0C,KAAK,CAACC,QAAQ;UAEpC;QAED;QAEAkvB,OAAO,CAACtqD,KAAK,GAAGovE,QAAQ;QACxB9kB,OAAO,CAAC/+B,WAAW,GAAG,IAAI;MAE3B;MAEA27B,KAAK,CAAConB,SAAS,GAAGiB,OAAO;MACzBroB,KAAK,CAACqnB,eAAe,GAAG,CAAC;MAEzB,OAAOa,QAAQ;IAEhB;EAED;EAEA,SAASO,aAAaA,CAAE/mB,QAAQ,EAAG;IAElC,IAAIgd,QAAQ,GAAG,IAAIjT,OAAO,EAAE;IAE5B,SAASid,iBAAiBA,CAAEvhD,OAAO,EAAE7E,OAAO,EAAG;MAE9C,IAAKA,OAAO,KAAKtb,gCAAgC,EAAG;QAEnDmgB,OAAO,CAAC7E,OAAO,GAAGxb,qBAAqB;MAExC,CAAC,MAAM,IAAKwb,OAAO,KAAKrb,gCAAgC,EAAG;QAE1DkgB,OAAO,CAAC7E,OAAO,GAAGvb,qBAAqB;MAExC;MAEA,OAAOogB,OAAO;IAEf;IAEA,SAASpS,GAAGA,CAAEoS,OAAO,EAAG;MAEvB,IAAKA,OAAO,IAAIA,OAAO,CAAClE,SAAS,IAAIkE,OAAO,CAACpD,qBAAqB,KAAK,KAAK,EAAG;QAE9E,IAAMzB,OAAO,GAAG6E,OAAO,CAAC7E,OAAO;QAE/B,IAAKA,OAAO,KAAKtb,gCAAgC,IAAIsb,OAAO,KAAKrb,gCAAgC,EAAG;UAEnG,IAAKy3D,QAAQ,CAACqG,GAAG,CAAE59C,OAAO,CAAE,EAAG;YAE9B,IAAMwhD,OAAO,GAAGjK,QAAQ,CAAC3pD,GAAG,CAAEoS,OAAO,CAAE,CAACA,OAAO;YAC/C,OAAOuhD,iBAAiB,CAAEC,OAAO,EAAExhD,OAAO,CAAC7E,OAAO,CAAE;UAErD,CAAC,MAAM;YAEN,IAAMvC,KAAK,GAAGoH,OAAO,CAACpH,KAAK;YAE3B,IAAKA,KAAK,IAAIA,KAAK,CAACM,MAAM,GAAG,CAAC,EAAG;cAEhC,IAAMolC,YAAY,GAAG,IAAIuB,qBAAqB,CAAEjnC,KAAK,CAACM,MAAM,GAAG,CAAC,CAAE;cAClEolC,YAAY,CAAC4B,0BAA0B,CAAE3F,QAAQ,EAAEv6B,OAAO,CAAE;cAC5Du3C,QAAQ,CAACxqD,GAAG,CAAEiT,OAAO,EAAEs+B,YAAY,CAAE;cAErCt+B,OAAO,CAAC1Y,gBAAgB,CAAE,SAAS,EAAEm6D,gBAAgB,CAAE;cAEvD,OAAOF,iBAAiB,CAAEjjB,YAAY,CAACt+B,OAAO,EAAEA,OAAO,CAAC7E,OAAO,CAAE;YAElE,CAAC,MAAM;cAEN;;cAEA,OAAO,IAAI;YAEZ;UAED;QAED;MAED;MAEA,OAAO6E,OAAO;IAEf;IAEA,SAASyhD,gBAAgBA,CAAEx5D,KAAK,EAAG;MAElC,IAAM+X,OAAO,GAAG/X,KAAK,CAAC9N,MAAM;MAE5B6lB,OAAO,CAACpY,mBAAmB,CAAE,SAAS,EAAE65D,gBAAgB,CAAE;MAE1D,IAAMD,OAAO,GAAGjK,QAAQ,CAAC3pD,GAAG,CAAEoS,OAAO,CAAE;MAEvC,IAAKwhD,OAAO,KAAKvrE,SAAS,EAAG;QAE5BshE,QAAQ,CAAC9R,MAAM,CAAEzlC,OAAO,CAAE;QAC1BwhD,OAAO,CAACnkD,OAAO,EAAE;MAElB;IAED;IAEA,SAASA,OAAOA,CAAA,EAAG;MAElBk6C,QAAQ,GAAG,IAAIjT,OAAO,EAAE;IAEzB;IAEA,OAAO;MACN12C,GAAG,EAAEA,GAAG;MACRyP,OAAO,EAAEA;IACV,CAAC;EAEF;EAAC,IAEKqkD,kBAAkB,0BAAAC,QAAA;IAAA5mD,SAAA,CAAA2mD,kBAAA,EAAAC,QAAA;IAAA,IAAAC,QAAA,GAAA3mD,YAAA,CAAAymD,kBAAA;IAEvB,SAAAA,mBAAazqC,IAAI,GAAG,CAAE,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEC,GAAG,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAE,CAAC,EAAEC,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,IAAI,EAAG;MAAA,IAAAuqC,OAAA;MAAA9nE,eAAA,OAAA2nE,kBAAA;MAEnFG,OAAA,GAAAD,QAAA,CAAAnuE,IAAA;MAEAouE,OAAA,CAAKC,oBAAoB,GAAG,IAAI;MAEhCD,OAAA,CAAKruE,IAAI,GAAG,oBAAoB;MAEhCquE,OAAA,CAAKhlB,IAAI,GAAG,CAAC;MACbglB,OAAA,CAAK9kB,IAAI,GAAG,IAAI;MAEhB8kB,OAAA,CAAK5qC,IAAI,GAAGA,IAAI;MAChB4qC,OAAA,CAAK3qC,KAAK,GAAGA,KAAK;MAClB2qC,OAAA,CAAK1qC,GAAG,GAAGA,GAAG;MACd0qC,OAAA,CAAKzqC,MAAM,GAAGA,MAAM;MAEpByqC,OAAA,CAAKxqC,IAAI,GAAGA,IAAI;MAChBwqC,OAAA,CAAKvqC,GAAG,GAAGA,GAAG;MAEduqC,OAAA,CAAK3kB,sBAAsB,EAAE;MAAC,OAAA2kB,OAAA;IAE/B;IAACtnE,YAAA,CAAAmnE,kBAAA;MAAAjwE,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAA+0B,kBAAA,CAAAtwE,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAACzI,IAAI,GAAGjb,MAAM,CAACib,IAAI;QACvB,IAAI,CAACC,KAAK,GAAGlb,MAAM,CAACkb,KAAK;QACzB,IAAI,CAACC,GAAG,GAAGnb,MAAM,CAACmb,GAAG;QACrB,IAAI,CAACC,MAAM,GAAGpb,MAAM,CAACob,MAAM;QAC3B,IAAI,CAACC,IAAI,GAAGrb,MAAM,CAACqb,IAAI;QACvB,IAAI,CAACC,GAAG,GAAGtb,MAAM,CAACsb,GAAG;QAErB,IAAI,CAACulB,IAAI,GAAG7gC,MAAM,CAAC6gC,IAAI;QACvB,IAAI,CAACE,IAAI,GAAG/gC,MAAM,CAAC+gC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG5rD,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+gC,IAAI,CAAE;QAE1E,OAAO,IAAI;MAEZ;IAAC;MAAAtrD,GAAA;MAAAE,KAAA,EAED,SAAAisD,cAAeC,SAAS,EAAEC,UAAU,EAAEr0C,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,EAAG;QAE3D,IAAK,IAAI,CAAC6jC,IAAI,KAAK,IAAI,EAAG;UAEzB,IAAI,CAACA,IAAI,GAAG;YACXllC,OAAO,EAAE,IAAI;YACbgmC,SAAS,EAAE,CAAC;YACZC,UAAU,EAAE,CAAC;YACbC,OAAO,EAAE,CAAC;YACVC,OAAO,EAAE,CAAC;YACV/kC,KAAK,EAAE,CAAC;YACRC,MAAM,EAAE;UACT,CAAC;QAEF;QAEA,IAAI,CAAC6jC,IAAI,CAACllC,OAAO,GAAG,IAAI;QACxB,IAAI,CAACklC,IAAI,CAACc,SAAS,GAAGA,SAAS;QAC/B,IAAI,CAACd,IAAI,CAACe,UAAU,GAAGA,UAAU;QACjC,IAAI,CAACf,IAAI,CAACgB,OAAO,GAAGt0C,CAAC;QACrB,IAAI,CAACszC,IAAI,CAACiB,OAAO,GAAGj0C,CAAC;QACrB,IAAI,CAACgzC,IAAI,CAAC9jC,KAAK,GAAGA,KAAK;QACvB,IAAI,CAAC8jC,IAAI,CAAC7jC,MAAM,GAAGA,MAAM;QAEzB,IAAI,CAACgkC,sBAAsB,EAAE;MAE9B;IAAC;MAAAzrD,GAAA;MAAAE,KAAA,EAED,SAAAssD,gBAAA,EAAkB;QAEjB,IAAK,IAAI,CAAClB,IAAI,KAAK,IAAI,EAAG;UAEzB,IAAI,CAACA,IAAI,CAACllC,OAAO,GAAG,KAAK;QAE1B;QAEA,IAAI,CAACqlC,sBAAsB,EAAE;MAE9B;IAAC;MAAAzrD,GAAA;MAAAE,KAAA,EAED,SAAAurD,uBAAA,EAAyB;QAExB,IAAM3sC,EAAE,GAAG,CAAE,IAAI,CAAC2mB,KAAK,GAAG,IAAI,CAACD,IAAI,KAAO,CAAC,GAAG,IAAI,CAAC4lB,IAAI,CAAE;QACzD,IAAMrsC,EAAE,GAAG,CAAE,IAAI,CAAC2mB,GAAG,GAAG,IAAI,CAACC,MAAM,KAAO,CAAC,GAAG,IAAI,CAACylB,IAAI,CAAE;QACzD,IAAMjnC,EAAE,GAAG,CAAE,IAAI,CAACshB,KAAK,GAAG,IAAI,CAACD,IAAI,IAAK,CAAC;QACzC,IAAMphB,EAAE,GAAG,CAAE,IAAI,CAACshB,GAAG,GAAG,IAAI,CAACC,MAAM,IAAK,CAAC;QAEzC,IAAIH,IAAI,GAAGrhB,EAAE,GAAGrF,EAAE;QAClB,IAAI2mB,KAAK,GAAGthB,EAAE,GAAGrF,EAAE;QACnB,IAAI4mB,GAAG,GAAGthB,EAAE,GAAGrF,EAAE;QACjB,IAAI4mB,MAAM,GAAGvhB,EAAE,GAAGrF,EAAE;QAEpB,IAAK,IAAI,CAACusC,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,IAAI,CAACllC,OAAO,EAAG;UAE9C,IAAMkqD,MAAM,GAAG,CAAE,IAAI,CAAC7qC,KAAK,GAAG,IAAI,CAACD,IAAI,IAAK,IAAI,CAAC8lB,IAAI,CAACc,SAAS,GAAG,IAAI,CAAChB,IAAI;UAC3E,IAAMmlB,MAAM,GAAG,CAAE,IAAI,CAAC7qC,GAAG,GAAG,IAAI,CAACC,MAAM,IAAK,IAAI,CAAC2lB,IAAI,CAACe,UAAU,GAAG,IAAI,CAACjB,IAAI;UAE5E5lB,IAAI,IAAI8qC,MAAM,GAAG,IAAI,CAAChlB,IAAI,CAACgB,OAAO;UAClC7mB,KAAK,GAAGD,IAAI,GAAG8qC,MAAM,GAAG,IAAI,CAAChlB,IAAI,CAAC9jC,KAAK;UACvCke,GAAG,IAAI6qC,MAAM,GAAG,IAAI,CAACjlB,IAAI,CAACiB,OAAO;UACjC5mB,MAAM,GAAGD,GAAG,GAAG6qC,MAAM,GAAG,IAAI,CAACjlB,IAAI,CAAC7jC,MAAM;QAEzC;QAEA,IAAI,CAACiP,gBAAgB,CAACoP,gBAAgB,CAAEN,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,GAAG,CAAE;QAEvF,IAAI,CAACjP,uBAAuB,CAACja,IAAI,CAAE,IAAI,CAAC+Z,gBAAgB,CAAE,CAACzT,MAAM,EAAE;MAEpE;IAAC;MAAAjjB,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAML,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAA+0B,kBAAA,CAAAtwE,SAAA,mBAAAqC,IAAA,OAAiBymB,IAAI,CAAE;QAEjCL,IAAI,CAACrhB,MAAM,CAACqkD,IAAI,GAAG,IAAI,CAACA,IAAI;QAC5BhjC,IAAI,CAACrhB,MAAM,CAACy+B,IAAI,GAAG,IAAI,CAACA,IAAI;QAC5Bpd,IAAI,CAACrhB,MAAM,CAAC0+B,KAAK,GAAG,IAAI,CAACA,KAAK;QAC9Brd,IAAI,CAACrhB,MAAM,CAAC2+B,GAAG,GAAG,IAAI,CAACA,GAAG;QAC1Btd,IAAI,CAACrhB,MAAM,CAAC4+B,MAAM,GAAG,IAAI,CAACA,MAAM;QAChCvd,IAAI,CAACrhB,MAAM,CAAC6+B,IAAI,GAAG,IAAI,CAACA,IAAI;QAC5Bxd,IAAI,CAACrhB,MAAM,CAAC8+B,GAAG,GAAG,IAAI,CAACA,GAAG;QAE1B,IAAK,IAAI,CAACylB,IAAI,KAAK,IAAI,EAAGljC,IAAI,CAACrhB,MAAM,CAACukD,IAAI,GAAG5rD,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAE,IAAI,CAACy8B,IAAI,CAAE;QAE3E,OAAOljC,IAAI;MAEZ;IAAC;IAAA,OAAA6nD,kBAAA;EAAA,EAjI+BxlB,MAAM;EAqIvC,IAAM+lB,OAAO,GAAG,CAAC;;EAEjB;EACA;EACA;EACA;EACA,IAAMC,eAAe,GAAG,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAE;;EAEnE;EACA;EACA,IAAMxC,WAAW,GAAG,EAAE;EAEtB,IAAMyC,WAAW,GAAG,aAAc,IAAIT,kBAAkB,EAAE;EAC1D,IAAMU,WAAW,GAAG,aAAc,IAAIj4B,KAAK,EAAE;EAC7C,IAAIk4B,UAAU,GAAG,IAAI;;EAErB;EACA,IAAMC,GAAG,GAAG,CAAE,CAAC,GAAG/5D,IAAI,CAACsH,IAAI,CAAE,CAAC,CAAE,IAAK,CAAC;EACtC,IAAM0yD,OAAO,GAAG,CAAC,GAAGD,GAAG;;EAEvB;EACA;EACA,IAAME,eAAe,GAAG,CACvB,aAAc,IAAIz7C,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EACpC,aAAc,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EACtC,aAAc,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,EACtC,aAAc,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,EACxC,aAAc,IAAIA,OAAO,CAAE,CAAC,EAAEu7C,GAAG,EAAEC,OAAO,CAAE,EAC5C,aAAc,IAAIx7C,OAAO,CAAE,CAAC,EAAEu7C,GAAG,EAAE,CAAEC,OAAO,CAAE,EAC9C,aAAc,IAAIx7C,OAAO,CAAEw7C,OAAO,EAAE,CAAC,EAAED,GAAG,CAAE,EAC5C,aAAc,IAAIv7C,OAAO,CAAE,CAAEw7C,OAAO,EAAE,CAAC,EAAED,GAAG,CAAE,EAC9C,aAAc,IAAIv7C,OAAO,CAAEu7C,GAAG,EAAEC,OAAO,EAAE,CAAC,CAAE,EAC5C,aAAc,IAAIx7C,OAAO,CAAE,CAAEu7C,GAAG,EAAEC,OAAO,EAAE,CAAC,CAAE,CAAE;;EAEjD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAbC,IAeME,cAAc;IAEnB,SAAAA,eAAaloB,QAAQ,EAAG;MAAAxgD,eAAA,OAAA0oE,cAAA;MAEvB,IAAI,CAACC,SAAS,GAAGnoB,QAAQ;MACzB,IAAI,CAACooB,qBAAqB,GAAG,IAAI;MAEjC,IAAI,CAACC,OAAO,GAAG,CAAC;MAChB,IAAI,CAACC,SAAS,GAAG,CAAC;MAClB,IAAI,CAACC,UAAU,GAAG,EAAE;MACpB,IAAI,CAACC,SAAS,GAAG,EAAE;MACnB,IAAI,CAACC,OAAO,GAAG,EAAE;MAEjB,IAAI,CAACC,aAAa,GAAG,IAAI;MACzB,IAAI,CAACC,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAACC,iBAAiB,GAAG,IAAI;MAE7B,IAAI,CAACC,gBAAgB,CAAE,IAAI,CAACH,aAAa,CAAE;IAE5C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;IANE1oE,YAAA,CAAAkoE,cAAA;MAAAhxE,GAAA;MAAAE,KAAA,EAOA,SAAA0xE,UAAWvkB,KAAK,EAAEwkB,KAAK,GAAG,CAAC,EAAEjsC,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,GAAG,EAAG;QAEpD+qC,UAAU,GAAG,IAAI,CAACK,SAAS,CAACloB,eAAe,EAAE;QAE7C,IAAI,CAAC+oB,QAAQ,CAAE,GAAG,CAAE;QAEpB,IAAMC,kBAAkB,GAAG,IAAI,CAACC,gBAAgB,EAAE;QAClDD,kBAAkB,CAACvjD,WAAW,GAAG,IAAI;QAErC,IAAI,CAACyjD,cAAc,CAAE5kB,KAAK,EAAEznB,IAAI,EAAEC,GAAG,EAAEksC,kBAAkB,CAAE;QAE3D,IAAKF,KAAK,GAAG,CAAC,EAAG;UAEhB,IAAI,CAACK,KAAK,CAAEH,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAEF,KAAK,CAAE;QAE9C;QAEA,IAAI,CAACM,WAAW,CAAEJ,kBAAkB,CAAE;QACtC,IAAI,CAACK,QAAQ,CAAEL,kBAAkB,CAAE;QAEnC,OAAOA,kBAAkB;MAE1B;;MAEA;AACF;AACA;AACA;AACA;IAJE;MAAA/xE,GAAA;MAAAE,KAAA,EAKA,SAAAmyE,oBAAqBC,eAAe,EAAEzlB,YAAY,GAAG,IAAI,EAAG;QAE3D,OAAO,IAAI,CAAC0lB,YAAY,CAAED,eAAe,EAAEzlB,YAAY,CAAE;MAE1D;;MAEA;AACF;AACA;AACA;AACA;IAJE;MAAA7sD,GAAA;MAAAE,KAAA,EAKA,SAAAsyE,YAAazC,OAAO,EAAEljB,YAAY,GAAG,IAAI,EAAG;QAE3C,OAAO,IAAI,CAAC0lB,YAAY,CAAExC,OAAO,EAAEljB,YAAY,CAAE;MAElD;;MAEA;AACF;AACA;AACA;IAHE;MAAA7sD,GAAA;MAAAE,KAAA,EAIA,SAAAuyE,qBAAA,EAAuB;QAEtB,IAAK,IAAI,CAAChB,gBAAgB,KAAK,IAAI,EAAG;UAErC,IAAI,CAACA,gBAAgB,GAAGiB,mBAAmB,EAAE;UAC7C,IAAI,CAACf,gBAAgB,CAAE,IAAI,CAACF,gBAAgB,CAAE;QAE/C;MAED;;MAEA;AACF;AACA;AACA;IAHE;MAAAzxE,GAAA;MAAAE,KAAA,EAIA,SAAAyyE,6BAAA,EAA+B;QAE9B,IAAK,IAAI,CAACjB,iBAAiB,KAAK,IAAI,EAAG;UAEtC,IAAI,CAACA,iBAAiB,GAAGkB,oBAAoB,EAAE;UAC/C,IAAI,CAACjB,gBAAgB,CAAE,IAAI,CAACD,iBAAiB,CAAE;QAEhD;MAED;;MAEA;AACF;AACA;AACA;AACA;IAJE;MAAA1xE,GAAA;MAAAE,KAAA,EAKA,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAACinD,QAAQ,EAAE;QAEf,IAAK,IAAI,CAACpB,gBAAgB,KAAK,IAAI,EAAG,IAAI,CAACA,gBAAgB,CAAC7lD,OAAO,EAAE;QACrE,IAAK,IAAI,CAAC8lD,iBAAiB,KAAK,IAAI,EAAG,IAAI,CAACA,iBAAiB,CAAC9lD,OAAO,EAAE;MAExE;;MAEA;IAAA;MAAA5rB,GAAA;MAAAE,KAAA,EAEA,SAAA4xE,SAAUgB,QAAQ,EAAG;QAEpB,IAAI,CAAC3B,OAAO,GAAGr6D,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACi8D,IAAI,CAAED,QAAQ,CAAE,CAAE;QAClD,IAAI,CAAC1B,SAAS,GAAGt6D,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAE,IAAI,CAACk3D,OAAO,CAAE;MAE7C;IAAC;MAAAnxE,GAAA;MAAAE,KAAA,EAED,SAAA2yE,SAAA,EAAW;QAEV,IAAK,IAAI,CAACrB,aAAa,KAAK,IAAI,EAAG,IAAI,CAACA,aAAa,CAAC5lD,OAAO,EAAE;QAE/D,IAAK,IAAI,CAACslD,qBAAqB,KAAK,IAAI,EAAG,IAAI,CAACA,qBAAqB,CAACtlD,OAAO,EAAE;QAE/E,KAAM,IAAI7lB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsrE,UAAU,CAACvrE,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEnD,IAAI,CAACsrE,UAAU,CAAEtrE,CAAC,CAAE,CAAC6lB,OAAO,EAAE;QAE/B;MAED;IAAC;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAAkyE,SAAUY,YAAY,EAAG;QAExB,IAAI,CAAC/B,SAAS,CAACpjB,eAAe,CAAE+iB,UAAU,CAAE;QAC5CoC,YAAY,CAAC3kD,WAAW,GAAG,KAAK;QAChC4kD,YAAY,CAAED,YAAY,EAAE,CAAC,EAAE,CAAC,EAAEA,YAAY,CAACxrD,KAAK,EAAEwrD,YAAY,CAACvrD,MAAM,CAAE;MAE5E;IAAC;MAAAznB,GAAA;MAAAE,KAAA,EAED,SAAAqyE,aAAchkD,OAAO,EAAEs+B,YAAY,EAAG;QAErC,IAAKt+B,OAAO,CAAC7E,OAAO,KAAKxb,qBAAqB,IAAIqgB,OAAO,CAAC7E,OAAO,KAAKvb,qBAAqB,EAAG;UAE7F,IAAI,CAAC2jE,QAAQ,CAAEvjD,OAAO,CAACpH,KAAK,CAACrhB,MAAM,KAAK,CAAC,GAAG,EAAE,GAAKyoB,OAAO,CAACpH,KAAK,CAAE,CAAC,CAAE,CAACK,KAAK,IAAI+G,OAAO,CAACpH,KAAK,CAAE,CAAC,CAAE,CAACA,KAAK,CAACK,KAAO,CAAE;QAElH,CAAC,MAAM;UAAE;;UAER,IAAI,CAACsqD,QAAQ,CAAEvjD,OAAO,CAACpH,KAAK,CAACK,KAAK,GAAG,CAAC,CAAE;QAEzC;QAEAopD,UAAU,GAAG,IAAI,CAACK,SAAS,CAACloB,eAAe,EAAE;QAE7C,IAAMgpB,kBAAkB,GAAGllB,YAAY,IAAI,IAAI,CAACmlB,gBAAgB,EAAE;QAClE,IAAI,CAACkB,gBAAgB,CAAE3kD,OAAO,EAAEwjD,kBAAkB,CAAE;QACpD,IAAI,CAACI,WAAW,CAAEJ,kBAAkB,CAAE;QACtC,IAAI,CAACK,QAAQ,CAAEL,kBAAkB,CAAE;QAEnC,OAAOA,kBAAkB;MAE1B;IAAC;MAAA/xE,GAAA;MAAAE,KAAA,EAED,SAAA8xE,iBAAA,EAAmB;QAElB,IAAMxqD,KAAK,GAAG,CAAC,GAAG1Q,IAAI,CAACa,GAAG,CAAE,IAAI,CAACy5D,SAAS,EAAE,EAAE,GAAG,CAAC,CAAE;QACpD,IAAM3pD,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC2pD,SAAS;QAEjC,IAAM+B,MAAM,GAAG;UACdrpD,SAAS,EAAE/a,YAAY;UACvBgb,SAAS,EAAEhb,YAAY;UACvB8b,eAAe,EAAE,KAAK;UACtB9oB,IAAI,EAAE4N,aAAa;UACnBqa,MAAM,EAAEha,UAAU;UAClBma,QAAQ,EAAE7W,cAAc;UACxBkb,WAAW,EAAE;QACd,CAAC;QAED,IAAMujD,kBAAkB,GAAGqB,mBAAmB,CAAE5rD,KAAK,EAAEC,MAAM,EAAE0rD,MAAM,CAAE;QAEvE,IAAK,IAAI,CAACjC,qBAAqB,KAAK,IAAI,IAAI,IAAI,CAACA,qBAAqB,CAAC1pD,KAAK,KAAKA,KAAK,IAAI,IAAI,CAAC0pD,qBAAqB,CAACzpD,MAAM,KAAKA,MAAM,EAAG;UAExI,IAAK,IAAI,CAACypD,qBAAqB,KAAK,IAAI,EAAG;YAE1C,IAAI,CAAC2B,QAAQ,EAAE;UAEhB;UAEA,IAAI,CAAC3B,qBAAqB,GAAGkC,mBAAmB,CAAE5rD,KAAK,EAAEC,MAAM,EAAE0rD,MAAM,CAAE;UAEzE,IAAQhC,OAAO,GAAK,IAAI,CAAhBA,OAAO;UAAU,IAAAkC,cAAA,GAC0DC,aAAa,CAAEnC,OAAO,CAAE;UAA7F,IAAI,CAACG,SAAS,GAAA+B,cAAA,CAAxBE,QAAQ;UAA6B,IAAI,CAAClC,UAAU,GAAAgC,cAAA,CAA1BG,SAAS;UAA2B,IAAI,CAACjC,OAAO,GAAA8B,cAAA,CAApBI,MAAM;UAEhE,IAAI,CAACjC,aAAa,GAAGkC,cAAc,CAAEvC,OAAO,EAAE3pD,KAAK,EAAEC,MAAM,CAAE;QAE9D;QAEA,OAAOsqD,kBAAkB;MAE1B;IAAC;MAAA/xE,GAAA;MAAAE,KAAA,EAED,SAAAyxE,iBAAkB/jC,QAAQ,EAAG;QAE5B,IAAM+lC,OAAO,GAAG,IAAIpuB,IAAI,CAAE,IAAI,CAAC8rB,UAAU,CAAE,CAAC,CAAE,EAAEzjC,QAAQ,CAAE;QAC1D,IAAI,CAACqjC,SAAS,CAAC2C,OAAO,CAAED,OAAO,EAAEjD,WAAW,CAAE;MAE/C;IAAC;MAAA1wE,GAAA;MAAAE,KAAA,EAED,SAAA+xE,eAAgB5kB,KAAK,EAAEznB,IAAI,EAAEC,GAAG,EAAEksC,kBAAkB,EAAG;QAEtD,IAAM/mB,GAAG,GAAG,EAAE;QACd,IAAMC,MAAM,GAAG,CAAC;QAChB,IAAM4oB,UAAU,GAAG,IAAIhpB,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAErlB,IAAI,EAAEC,GAAG,CAAE;QAClE,IAAMiuC,MAAM,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACrC,IAAMC,WAAW,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;QAC9C,IAAMjrB,QAAQ,GAAG,IAAI,CAACmoB,SAAS;QAE/B,IAAM+C,iBAAiB,GAAGlrB,QAAQ,CAACie,SAAS;QAC5C,IAAMrZ,WAAW,GAAG5E,QAAQ,CAAC4E,WAAW;QACxC5E,QAAQ,CAACse,aAAa,CAAEuJ,WAAW,CAAE;QAErC7nB,QAAQ,CAAC4E,WAAW,GAAG//C,aAAa;QACpCm7C,QAAQ,CAACie,SAAS,GAAG,KAAK;QAE1B,IAAMkN,kBAAkB,GAAG,IAAIr5B,iBAAiB,CAAE;UACjDv0C,IAAI,EAAE,kBAAkB;UACxBirC,IAAI,EAAE/lC,QAAQ;UACd2mC,UAAU,EAAE,KAAK;UACjBD,SAAS,EAAE;QACZ,CAAC,CAAE;QAEH,IAAMiiC,aAAa,GAAG,IAAI3uB,IAAI,CAAE,IAAIsB,WAAW,EAAE,EAAEotB,kBAAkB,CAAE;QAEvE,IAAIE,aAAa,GAAG,KAAK;QACzB,IAAMnnC,UAAU,GAAGqgB,KAAK,CAACrgB,UAAU;QAEnC,IAAKA,UAAU,EAAG;UAEjB,IAAKA,UAAU,CAACC,OAAO,EAAG;YAEzBgnC,kBAAkB,CAACruD,KAAK,CAACjJ,IAAI,CAAEqwB,UAAU,CAAE;YAC3CqgB,KAAK,CAACrgB,UAAU,GAAG,IAAI;YACvBmnC,aAAa,GAAG,IAAI;UAErB;QAED,CAAC,MAAM;UAENF,kBAAkB,CAACruD,KAAK,CAACjJ,IAAI,CAAEg0D,WAAW,CAAE;UAC5CwD,aAAa,GAAG,IAAI;QAErB;QAEA,KAAM,IAAIpuE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAMquE,GAAG,GAAGruE,CAAC,GAAG,CAAC;UAEjB,IAAKquE,GAAG,KAAK,CAAC,EAAG;YAEhBP,UAAU,CAAC7wC,EAAE,CAAC1nB,GAAG,CAAE,CAAC,EAAEw4D,MAAM,CAAE/tE,CAAC,CAAE,EAAE,CAAC,CAAE;YACtC8tE,UAAU,CAACv1C,MAAM,CAAEy1C,WAAW,CAAEhuE,CAAC,CAAE,EAAE,CAAC,EAAE,CAAC,CAAE;UAE5C,CAAC,MAAM,IAAKquE,GAAG,KAAK,CAAC,EAAG;YAEvBP,UAAU,CAAC7wC,EAAE,CAAC1nB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEw4D,MAAM,CAAE/tE,CAAC,CAAE,CAAE;YACtC8tE,UAAU,CAACv1C,MAAM,CAAE,CAAC,EAAEy1C,WAAW,CAAEhuE,CAAC,CAAE,EAAE,CAAC,CAAE;UAE5C,CAAC,MAAM;YAEN8tE,UAAU,CAAC7wC,EAAE,CAAC1nB,GAAG,CAAE,CAAC,EAAEw4D,MAAM,CAAE/tE,CAAC,CAAE,EAAE,CAAC,CAAE;YACtC8tE,UAAU,CAACv1C,MAAM,CAAE,CAAC,EAAE,CAAC,EAAEy1C,WAAW,CAAEhuE,CAAC,CAAE,CAAE;UAE5C;UAEA,IAAMwzB,IAAI,GAAG,IAAI,CAAC63C,SAAS;UAE3B6B,YAAY,CAAElB,kBAAkB,EAAEqC,GAAG,GAAG76C,IAAI,EAAExzB,CAAC,GAAG,CAAC,GAAGwzB,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAEA,IAAI,CAAE;UAE5EuvB,QAAQ,CAAC+E,eAAe,CAAEkkB,kBAAkB,CAAE;UAE9C,IAAKoC,aAAa,EAAG;YAEpBrrB,QAAQ,CAACgF,MAAM,CAAEomB,aAAa,EAAEL,UAAU,CAAE;UAE7C;UAEA/qB,QAAQ,CAACgF,MAAM,CAAET,KAAK,EAAEwmB,UAAU,CAAE;QAErC;QAEAK,aAAa,CAACz5C,QAAQ,CAAC7O,OAAO,EAAE;QAChCsoD,aAAa,CAACtmC,QAAQ,CAAChiB,OAAO,EAAE;QAEhCk9B,QAAQ,CAAC4E,WAAW,GAAGA,WAAW;QAClC5E,QAAQ,CAACie,SAAS,GAAGiN,iBAAiB;QACtC3mB,KAAK,CAACrgB,UAAU,GAAGA,UAAU;MAE9B;IAAC;MAAAhtC,GAAA;MAAAE,KAAA,EAED,SAAAgzE,iBAAkB3kD,OAAO,EAAEwjD,kBAAkB,EAAG;QAE/C,IAAMjpB,QAAQ,GAAG,IAAI,CAACmoB,SAAS;QAE/B,IAAM9iB,aAAa,GAAK5/B,OAAO,CAAC7E,OAAO,KAAKxb,qBAAqB,IAAIqgB,OAAO,CAAC7E,OAAO,KAAKvb,qBAAuB;QAEhH,IAAKggD,aAAa,EAAG;UAEpB,IAAK,IAAI,CAACsjB,gBAAgB,KAAK,IAAI,EAAG;YAErC,IAAI,CAACA,gBAAgB,GAAGiB,mBAAmB,EAAE;UAE9C;UAEA,IAAI,CAACjB,gBAAgB,CAAC/oB,QAAQ,CAACoX,UAAU,CAAC5/D,KAAK,GAAKquB,OAAO,CAACpD,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;QAExG,CAAC,MAAM;UAEN,IAAK,IAAI,CAACumD,iBAAiB,KAAK,IAAI,EAAG;YAEtC,IAAI,CAACA,iBAAiB,GAAGkB,oBAAoB,EAAE;UAEhD;QAED;QAEA,IAAMhlC,QAAQ,GAAGugB,aAAa,GAAG,IAAI,CAACsjB,gBAAgB,GAAG,IAAI,CAACC,iBAAiB;QAC/E,IAAM9iB,IAAI,GAAG,IAAIrJ,IAAI,CAAE,IAAI,CAAC8rB,UAAU,CAAE,CAAC,CAAE,EAAEzjC,QAAQ,CAAE;QAEvD,IAAM8a,QAAQ,GAAG9a,QAAQ,CAAC8a,QAAQ;QAElCA,QAAQ,CAAE,QAAQ,CAAE,CAACxoD,KAAK,GAAGquB,OAAO;QAEpC,IAAMgL,IAAI,GAAG,IAAI,CAAC63C,SAAS;QAE3B6B,YAAY,CAAElB,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGx4C,IAAI,EAAE,CAAC,GAAGA,IAAI,CAAE;QAE5DuvB,QAAQ,CAAC+E,eAAe,CAAEkkB,kBAAkB,CAAE;QAC9CjpB,QAAQ,CAACgF,MAAM,CAAEc,IAAI,EAAE8hB,WAAW,CAAE;MAErC;IAAC;MAAA1wE,GAAA;MAAAE,KAAA,EAED,SAAAiyE,YAAaJ,kBAAkB,EAAG;QAEjC,IAAMjpB,QAAQ,GAAG,IAAI,CAACmoB,SAAS;QAC/B,IAAMlK,SAAS,GAAGje,QAAQ,CAACie,SAAS;QACpCje,QAAQ,CAACie,SAAS,GAAG,KAAK;QAE1B,KAAM,IAAIhhE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsrE,UAAU,CAACvrE,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEnD,IAAM8rE,KAAK,GAAG/6D,IAAI,CAACsH,IAAI,CAAE,IAAI,CAACmzD,OAAO,CAAExrE,CAAC,CAAE,GAAG,IAAI,CAACwrE,OAAO,CAAExrE,CAAC,CAAE,GAAG,IAAI,CAACwrE,OAAO,CAAExrE,CAAC,GAAG,CAAC,CAAE,GAAG,IAAI,CAACwrE,OAAO,CAAExrE,CAAC,GAAG,CAAC,CAAE,CAAE;UAEhH,IAAMsuE,QAAQ,GAAGtD,eAAe,CAAE,CAAEhrE,CAAC,GAAG,CAAC,IAAKgrE,eAAe,CAACjrE,MAAM,CAAE;UAEtE,IAAI,CAACosE,KAAK,CAAEH,kBAAkB,EAAEhsE,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE8rE,KAAK,EAAEwC,QAAQ,CAAE;QAE5D;QAEAvrB,QAAQ,CAACie,SAAS,GAAGA,SAAS;MAE/B;;MAEA;AACF;AACA;AACA;AACA;AACA;AACA;IANE;MAAA/mE,GAAA;MAAAE,KAAA,EAOA,SAAAgyE,MAAOH,kBAAkB,EAAEuC,KAAK,EAAEC,MAAM,EAAE1C,KAAK,EAAEwC,QAAQ,EAAG;QAE3D,IAAMG,oBAAoB,GAAG,IAAI,CAACtD,qBAAqB;QAEvD,IAAI,CAACuD,SAAS,CACb1C,kBAAkB,EAClByC,oBAAoB,EACpBF,KAAK,EACLC,MAAM,EACN1C,KAAK,EACL,aAAa,EACbwC,QAAQ,CAAE;QAEX,IAAI,CAACI,SAAS,CACbD,oBAAoB,EACpBzC,kBAAkB,EAClBwC,MAAM,EACNA,MAAM,EACN1C,KAAK,EACL,cAAc,EACdwC,QAAQ,CAAE;MAEZ;IAAC;MAAAr0E,GAAA;MAAAE,KAAA,EAED,SAAAu0E,UAAWC,QAAQ,EAAEC,SAAS,EAAEL,KAAK,EAAEC,MAAM,EAAEK,YAAY,EAAEz2C,SAAS,EAAEk2C,QAAQ,EAAG;QAElF,IAAMvrB,QAAQ,GAAG,IAAI,CAACmoB,SAAS;QAC/B,IAAM4D,YAAY,GAAG,IAAI,CAACrD,aAAa;QAEvC,IAAKrzC,SAAS,KAAK,aAAa,IAAIA,SAAS,KAAK,cAAc,EAAG;UAElE10B,OAAO,CAAChG,KAAK,CACZ,4DAA4D,CAAE;QAEhE;;QAEA;QACA,IAAMqxE,mBAAmB,GAAG,CAAC;QAE7B,IAAMC,QAAQ,GAAG,IAAIxvB,IAAI,CAAE,IAAI,CAAC8rB,UAAU,CAAEkD,MAAM,CAAE,EAAEM,YAAY,CAAE;QACpE,IAAMG,YAAY,GAAGH,YAAY,CAACnsB,QAAQ;QAE1C,IAAMusB,MAAM,GAAG,IAAI,CAAC3D,SAAS,CAAEgD,KAAK,CAAE,GAAG,CAAC;QAC1C,IAAMY,eAAe,GAAGxyB,QAAQ,CAAEkyB,YAAY,CAAE,GAAG99D,IAAI,CAACC,EAAE,IAAK,CAAC,GAAGk+D,MAAM,CAAE,GAAG,CAAC,GAAGn+D,IAAI,CAACC,EAAE,IAAK,CAAC,GAAGk3D,WAAW,GAAG,CAAC,CAAE;QACnH,IAAMkH,WAAW,GAAGP,YAAY,GAAGM,eAAe;QAClD,IAAMvmD,OAAO,GAAG+zB,QAAQ,CAAEkyB,YAAY,CAAE,GAAG,CAAC,GAAG99D,IAAI,CAACsC,KAAK,CAAE07D,mBAAmB,GAAGK,WAAW,CAAE,GAAGlH,WAAW;QAE5G,IAAKt/C,OAAO,GAAGs/C,WAAW,EAAG;UAE5BxkE,OAAO,CAACC,IAAI,kBAAAmd,MAAA,CACZ+tD,YAAY,oDAAA/tD,MAAA,CACZ8H,OAAO,0CAAA9H,MAAA,CAAuConD,WAAW,EAAI;QAE9D;QAEA,IAAMmH,OAAO,GAAG,EAAE;QAClB,IAAIC,GAAG,GAAG,CAAC;QAEX,KAAM,IAAItvE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkoE,WAAW,EAAE,EAAGloE,CAAC,EAAG;UAExC,IAAMiS,GAAC,GAAGjS,CAAC,GAAGovE,WAAW;UACzB,IAAMG,MAAM,GAAGx+D,IAAI,CAAC8B,GAAG,CAAE,CAAEZ,GAAC,GAAGA,GAAC,GAAG,CAAC,CAAE;UACtCo9D,OAAO,CAAC7vE,IAAI,CAAE+vE,MAAM,CAAE;UAEtB,IAAKvvE,CAAC,KAAK,CAAC,EAAG;YAEdsvE,GAAG,IAAIC,MAAM;UAEd,CAAC,MAAM,IAAKvvE,CAAC,GAAG4oB,OAAO,EAAG;YAEzB0mD,GAAG,IAAI,CAAC,GAAGC,MAAM;UAElB;QAED;QAEA,KAAM,IAAIvvE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGqvE,OAAO,CAACtvE,MAAM,EAAEC,IAAC,EAAG,EAAG;UAE3CqvE,OAAO,CAAErvE,IAAC,CAAE,GAAGqvE,OAAO,CAAErvE,IAAC,CAAE,GAAGsvE,GAAG;QAElC;QAEAL,YAAY,CAAE,QAAQ,CAAE,CAAC90E,KAAK,GAAGw0E,QAAQ,CAACnmD,OAAO;QACjDymD,YAAY,CAAE,SAAS,CAAE,CAAC90E,KAAK,GAAGyuB,OAAO;QACzCqmD,YAAY,CAAE,SAAS,CAAE,CAAC90E,KAAK,GAAGk1E,OAAO;QACzCJ,YAAY,CAAE,aAAa,CAAE,CAAC90E,KAAK,GAAGi+B,SAAS,KAAK,aAAa;QAEjE,IAAKk2C,QAAQ,EAAG;UAEfW,YAAY,CAAE,UAAU,CAAE,CAAC90E,KAAK,GAAGm0E,QAAQ;QAE5C;QAEA,IAAQlD,OAAO,GAAK,IAAI,CAAhBA,OAAO;QACf6D,YAAY,CAAE,QAAQ,CAAE,CAAC90E,KAAK,GAAGg1E,eAAe;QAChDF,YAAY,CAAE,QAAQ,CAAE,CAAC90E,KAAK,GAAGixE,OAAO,GAAGmD,KAAK;QAEhD,IAAMiB,UAAU,GAAG,IAAI,CAACjE,SAAS,CAAEiD,MAAM,CAAE;QAC3C,IAAMv8D,CAAC,GAAG,CAAC,GAAGu9D,UAAU,IAAKhB,MAAM,GAAGpD,OAAO,GAAGX,OAAO,GAAG+D,MAAM,GAAGpD,OAAO,GAAGX,OAAO,GAAG,CAAC,CAAE;QAC1F,IAAMl4D,CAAC,GAAG,CAAC,IAAK,IAAI,CAAC84D,SAAS,GAAGmE,UAAU,CAAE;QAE7CtC,YAAY,CAAE0B,SAAS,EAAE38D,CAAC,EAAEM,CAAC,EAAE,CAAC,GAAGi9D,UAAU,EAAE,CAAC,GAAGA,UAAU,CAAE;QAC/DzsB,QAAQ,CAAC+E,eAAe,CAAE8mB,SAAS,CAAE;QACrC7rB,QAAQ,CAACgF,MAAM,CAAEinB,QAAQ,EAAErE,WAAW,CAAE;MAEzC;IAAC;IAAA,OAAAM,cAAA;EAAA;EAMF,SAASsC,aAAaA,CAAEkC,MAAM,EAAG;IAEhC,IAAMhC,SAAS,GAAG,EAAE;IACpB,IAAMD,QAAQ,GAAG,EAAE;IACnB,IAAME,MAAM,GAAG,EAAE;IAEjB,IAAIgC,GAAG,GAAGD,MAAM;IAEhB,IAAME,SAAS,GAAGF,MAAM,GAAGhF,OAAO,GAAG,CAAC,GAAGC,eAAe,CAAC3qE,MAAM;IAE/D,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2vE,SAAS,EAAE3vE,CAAC,EAAG,EAAG;MAEtC,IAAM4vE,OAAO,GAAG7+D,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAEw7D,GAAG,CAAE;MAClClC,QAAQ,CAAChuE,IAAI,CAAEowE,OAAO,CAAE;MACxB,IAAI9D,KAAK,GAAG,GAAG,GAAG8D,OAAO;MAEzB,IAAK5vE,CAAC,GAAGyvE,MAAM,GAAGhF,OAAO,EAAG;QAE3BqB,KAAK,GAAGpB,eAAe,CAAE1qE,CAAC,GAAGyvE,MAAM,GAAGhF,OAAO,GAAG,CAAC,CAAE;MAEpD,CAAC,MAAM,IAAKzqE,CAAC,KAAK,CAAC,EAAG;QAErB8rE,KAAK,GAAG,CAAC;MAEV;MAEA4B,MAAM,CAACluE,IAAI,CAAEssE,KAAK,CAAE;MAEpB,IAAM+D,SAAS,GAAG,GAAG,IAAKD,OAAO,GAAG,CAAC,CAAE;MACvC,IAAMj+D,GAAG,GAAG,CAAEk+D,SAAS;MACvB,IAAMj+D,GAAG,GAAG,CAAC,GAAGi+D,SAAS;MACzB,IAAMlmC,GAAG,GAAG,CAAEh4B,GAAG,EAAEA,GAAG,EAAEC,GAAG,EAAED,GAAG,EAAEC,GAAG,EAAEA,GAAG,EAAED,GAAG,EAAEA,GAAG,EAAEC,GAAG,EAAEA,GAAG,EAAED,GAAG,EAAEC,GAAG,CAAE;MAE1E,IAAMk+D,SAAS,GAAG,CAAC;MACnB,IAAMxuB,QAAQ,GAAG,CAAC;MAClB,IAAMyuB,YAAY,GAAG,CAAC;MACtB,IAAMC,MAAM,GAAG,CAAC;MAChB,IAAMC,aAAa,GAAG,CAAC;MAEvB,IAAMr7C,QAAQ,GAAG,IAAInf,YAAY,CAAEs6D,YAAY,GAAGzuB,QAAQ,GAAGwuB,SAAS,CAAE;MACxE,IAAM/pD,EAAE,GAAG,IAAItQ,YAAY,CAAEu6D,MAAM,GAAG1uB,QAAQ,GAAGwuB,SAAS,CAAE;MAC5D,IAAMnvB,SAAS,GAAG,IAAIlrC,YAAY,CAAEw6D,aAAa,GAAG3uB,QAAQ,GAAGwuB,SAAS,CAAE;MAE1E,KAAM,IAAIlvB,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGkvB,SAAS,EAAElvB,IAAI,EAAG,EAAG;QAE/C,IAAM3uC,CAAC,GAAK2uC,IAAI,GAAG,CAAC,GAAK,CAAC,GAAG,CAAC,GAAG,CAAC;QAClC,IAAMruC,CAAC,GAAGquC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;QAC5B,IAAMsvB,WAAW,GAAG,CACnBj+D,CAAC,EAAEM,CAAC,EAAE,CAAC,EACPN,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEM,CAAC,EAAE,CAAC,EACfN,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE,CAAC,EACnBN,CAAC,EAAEM,CAAC,EAAE,CAAC,EACPN,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE,CAAC,EACnBN,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE,CAAC,CACX;QACDqiB,QAAQ,CAACrf,GAAG,CAAE26D,WAAW,EAAEH,YAAY,GAAGzuB,QAAQ,GAAGV,IAAI,CAAE;QAC3D76B,EAAE,CAACxQ,GAAG,CAAEo0B,GAAG,EAAEqmC,MAAM,GAAG1uB,QAAQ,GAAGV,IAAI,CAAE;QACvC,IAAMuvB,IAAI,GAAG,CAAEvvB,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,CAAE;QACnDD,SAAS,CAACprC,GAAG,CAAE46D,IAAI,EAAEF,aAAa,GAAG3uB,QAAQ,GAAGV,IAAI,CAAE;MAEvD;MAEA,IAAM2J,MAAM,GAAG,IAAIzQ,cAAc,EAAE;MACnCyQ,MAAM,CAAC3P,YAAY,CAAE,UAAU,EAAE,IAAIzE,eAAe,CAAEvhB,QAAQ,EAAEm7C,YAAY,CAAE,CAAE;MAChFxlB,MAAM,CAAC3P,YAAY,CAAE,IAAI,EAAE,IAAIzE,eAAe,CAAEpwB,EAAE,EAAEiqD,MAAM,CAAE,CAAE;MAC9DzlB,MAAM,CAAC3P,YAAY,CAAE,WAAW,EAAE,IAAIzE,eAAe,CAAEwK,SAAS,EAAEsvB,aAAa,CAAE,CAAE;MACnFxC,SAAS,CAACjuE,IAAI,CAAE+qD,MAAM,CAAE;MAExB,IAAKmlB,GAAG,GAAGjF,OAAO,EAAG;QAEpBiF,GAAG,EAAG;MAEP;IAED;IAEA,OAAO;MAAEjC,SAAS,EAATA,SAAS;MAAED,QAAQ,EAARA,QAAQ;MAAEE,MAAM,EAANA;IAAO,CAAC;EAEvC;EAEA,SAASL,mBAAmBA,CAAE5rD,KAAK,EAAEC,MAAM,EAAE0rD,MAAM,EAAG;IAErD,IAAMpB,kBAAkB,GAAG,IAAIlkD,iBAAiB,CAAErG,KAAK,EAAEC,MAAM,EAAE0rD,MAAM,CAAE;IACzEpB,kBAAkB,CAACxjD,OAAO,CAAC7E,OAAO,GAAGpb,uBAAuB;IAC5DyjE,kBAAkB,CAACxjD,OAAO,CAACloB,IAAI,GAAG,cAAc;IAChD0rE,kBAAkB,CAAC1jD,WAAW,GAAG,IAAI;IACrC,OAAO0jD,kBAAkB;EAE1B;EAEA,SAASkB,YAAYA,CAAEvqE,MAAM,EAAEsP,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,EAAG;IAEpD/e,MAAM,CAAC4lB,QAAQ,CAAChT,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,CAAE;IAC1C/e,MAAM,CAAC0lB,OAAO,CAAC9S,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,CAAE;EAE1C;EAEA,SAASisD,cAAcA,CAAE8B,MAAM,EAAEhuD,KAAK,EAAEC,MAAM,EAAG;IAEhD,IAAM2tD,OAAO,GAAG,IAAI55D,YAAY,CAAEyyD,WAAW,CAAE;IAC/C,IAAMoG,QAAQ,GAAG,IAAI/+C,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACvC,IAAM6gD,cAAc,GAAG,IAAI/sB,cAAc,CAAE;MAE1C/iD,IAAI,EAAE,uBAAuB;MAE7BojD,OAAO,EAAE;QACR,GAAG,EAAEwkB,WAAW;QAChB,oBAAoB,EAAE,GAAG,GAAGzmD,KAAK;QACjC,qBAAqB,EAAE,GAAG,GAAGC,MAAM;QACnC,gBAAgB,KAAAZ,MAAA,CAAK2uD,MAAM;MAC5B,CAAC;MAED9sB,QAAQ,EAAE;QACT,QAAQ,EAAE;UAAExoD,KAAK,EAAE;QAAK,CAAC;QACzB,SAAS,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAC;QACvB,SAAS,EAAE;UAAEA,KAAK,EAAEk1E;QAAQ,CAAC;QAC7B,aAAa,EAAE;UAAEl1E,KAAK,EAAE;QAAM,CAAC;QAC/B,QAAQ,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAC;QACtB,QAAQ,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAC;QACtB,UAAU,EAAE;UAAEA,KAAK,EAAEm0E;QAAS;MAC/B,CAAC;MAED1qB,YAAY,EAAEysB,sBAAsB,EAAE;MAEtCxsB,cAAc,EAAE,4iDA4DhB;MAEAvY,QAAQ,EAAE3lC,UAAU;MACpBumC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE;IAEb,CAAC,CAAE;IAEH,OAAOikC,cAAc;EAEtB;EAEA,SAASvD,oBAAoBA,CAAA,EAAG;IAE/B,OAAO,IAAIxpB,cAAc,CAAE;MAE1B/iD,IAAI,EAAE,yBAAyB;MAE/BqiD,QAAQ,EAAE;QACT,QAAQ,EAAE;UAAExoD,KAAK,EAAE;QAAK;MACzB,CAAC;MAEDypD,YAAY,EAAEysB,sBAAsB,EAAE;MAEtCxsB,cAAc,EAAE,kZAmBhB;MAEAvY,QAAQ,EAAE3lC,UAAU;MACpBumC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE;IAEb,CAAC,CAAE;EAEJ;EAEA,SAASwgC,mBAAmBA,CAAA,EAAG;IAE9B,OAAO,IAAItpB,cAAc,CAAE;MAE1B/iD,IAAI,EAAE,iBAAiB;MAEvBqiD,QAAQ,EAAE;QACT,QAAQ,EAAE;UAAExoD,KAAK,EAAE;QAAK,CAAC;QACzB,YAAY,EAAE;UAAEA,KAAK,EAAE,CAAE;QAAE;MAC5B,CAAC;MAEDypD,YAAY,EAAEysB,sBAAsB,EAAE;MAEtCxsB,cAAc,EAAE,mVAgBhB;MAEAvY,QAAQ,EAAE3lC,UAAU;MACpBumC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE;IAEb,CAAC,CAAE;EAEJ;EAEA,SAASkkC,sBAAsBA,CAAA,EAAG;IAEjC,OAAO;IAAA;EAyDR;EAEA,SAASC,eAAeA,CAAEvtB,QAAQ,EAAG;IAEpC,IAAIwtB,UAAU,GAAG,IAAIzjB,OAAO,EAAE;IAE9B,IAAI0jB,cAAc,GAAG,IAAI;IAEzB,SAASp6D,GAAGA,CAAEoS,OAAO,EAAG;MAEvB,IAAKA,OAAO,IAAIA,OAAO,CAAClE,SAAS,EAAG;QAEnC,IAAMX,OAAO,GAAG6E,OAAO,CAAC7E,OAAO;QAE/B,IAAM8sD,aAAa,GAAK9sD,OAAO,KAAKtb,gCAAgC,IAAIsb,OAAO,KAAKrb,gCAAkC;QACtH,IAAMooE,SAAS,GAAK/sD,OAAO,KAAKxb,qBAAqB,IAAIwb,OAAO,KAAKvb,qBAAuB;;QAE5F;;QAEA,IAAKqoE,aAAa,IAAIC,SAAS,EAAG;UAEjC,IAAKloD,OAAO,CAACpD,qBAAqB,IAAIoD,OAAO,CAACnD,gBAAgB,KAAK,IAAI,EAAG;YAEzEmD,OAAO,CAACnD,gBAAgB,GAAG,KAAK;YAEhC,IAAIyhC,YAAY,GAAGypB,UAAU,CAACn6D,GAAG,CAAEoS,OAAO,CAAE;YAE5C,IAAKgoD,cAAc,KAAK,IAAI,EAAGA,cAAc,GAAG,IAAIvF,cAAc,CAAEloB,QAAQ,CAAE;YAE9E+D,YAAY,GAAG2pB,aAAa,GAAGD,cAAc,CAAClE,mBAAmB,CAAE9jD,OAAO,EAAEs+B,YAAY,CAAE,GAAG0pB,cAAc,CAAC/D,WAAW,CAAEjkD,OAAO,EAAEs+B,YAAY,CAAE;YAChJypB,UAAU,CAACh7D,GAAG,CAAEiT,OAAO,EAAEs+B,YAAY,CAAE;YAEvC,OAAOA,YAAY,CAACt+B,OAAO;UAE5B,CAAC,MAAM;YAEN,IAAK+nD,UAAU,CAACnK,GAAG,CAAE59C,OAAO,CAAE,EAAG;cAEhC,OAAO+nD,UAAU,CAACn6D,GAAG,CAAEoS,OAAO,CAAE,CAACA,OAAO;YAEzC,CAAC,MAAM;cAEN,IAAMpH,KAAK,GAAGoH,OAAO,CAACpH,KAAK;cAE3B,IAAOqvD,aAAa,IAAIrvD,KAAK,IAAIA,KAAK,CAACM,MAAM,GAAG,CAAC,IAAQgvD,SAAS,IAAItvD,KAAK,IAAIuvD,qBAAqB,CAAEvvD,KAAK,CAAI,EAAG;gBAEjH,IAAKovD,cAAc,KAAK,IAAI,EAAGA,cAAc,GAAG,IAAIvF,cAAc,CAAEloB,QAAQ,CAAE;gBAE9E,IAAM+D,aAAY,GAAG2pB,aAAa,GAAGD,cAAc,CAAClE,mBAAmB,CAAE9jD,OAAO,CAAE,GAAGgoD,cAAc,CAAC/D,WAAW,CAAEjkD,OAAO,CAAE;gBAC1H+nD,UAAU,CAACh7D,GAAG,CAAEiT,OAAO,EAAEs+B,aAAY,CAAE;gBAEvCt+B,OAAO,CAAC1Y,gBAAgB,CAAE,SAAS,EAAEm6D,gBAAgB,CAAE;gBAEvD,OAAOnjB,aAAY,CAACt+B,OAAO;cAE5B,CAAC,MAAM;gBAEN;;gBAEA,OAAO,IAAI;cAEZ;YAED;UAED;QAED;MAED;MAEA,OAAOA,OAAO;IAEf;IAEA,SAASmoD,qBAAqBA,CAAEvvD,KAAK,EAAG;MAEvC,IAAImJ,KAAK,GAAG,CAAC;MACb,IAAMxqB,MAAM,GAAG,CAAC;MAEhB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEnC,IAAKohB,KAAK,CAAEphB,CAAC,CAAE,KAAKvB,SAAS,EAAG8rB,KAAK,EAAG;MAEzC;MAEA,OAAOA,KAAK,KAAKxqB,MAAM;IAGxB;IAEA,SAASkqE,gBAAgBA,CAAEx5D,KAAK,EAAG;MAElC,IAAM+X,OAAO,GAAG/X,KAAK,CAAC9N,MAAM;MAE5B6lB,OAAO,CAACpY,mBAAmB,CAAE,SAAS,EAAE65D,gBAAgB,CAAE;MAE1D,IAAM2G,SAAS,GAAGL,UAAU,CAACn6D,GAAG,CAAEoS,OAAO,CAAE;MAE3C,IAAKooD,SAAS,KAAKnyE,SAAS,EAAG;QAE9B8xE,UAAU,CAACtiB,MAAM,CAAEzlC,OAAO,CAAE;QAC5BooD,SAAS,CAAC/qD,OAAO,EAAE;MAEpB;IAED;IAEA,SAASA,OAAOA,CAAA,EAAG;MAElB0qD,UAAU,GAAG,IAAIzjB,OAAO,EAAE;MAE1B,IAAK0jB,cAAc,KAAK,IAAI,EAAG;QAE9BA,cAAc,CAAC3qD,OAAO,EAAE;QACxB2qD,cAAc,GAAG,IAAI;MAEtB;IAED;IAEA,OAAO;MACNp6D,GAAG,EAAEA,GAAG;MACRyP,OAAO,EAAEA;IACV,CAAC;EAEF;EAEA,SAASgrD,eAAeA,CAAEnkB,EAAE,EAAG;IAE9B,IAAM1I,UAAU,GAAG,CAAC,CAAC;IAErB,SAAS8sB,YAAYA,CAAExwE,IAAI,EAAG;MAE7B,IAAK0jD,UAAU,CAAE1jD,IAAI,CAAE,KAAK7B,SAAS,EAAG;QAEvC,OAAOulD,UAAU,CAAE1jD,IAAI,CAAE;MAE1B;MAEA,IAAIshE,SAAS;MAEb,QAASthE,IAAI;QAEZ,KAAK,qBAAqB;UACzBshE,SAAS,GAAGlV,EAAE,CAACokB,YAAY,CAAE,qBAAqB,CAAE,IAAIpkB,EAAE,CAACokB,YAAY,CAAE,yBAAyB,CAAE,IAAIpkB,EAAE,CAACokB,YAAY,CAAE,4BAA4B,CAAE;UACvJ;QAED,KAAK,gCAAgC;UACpClP,SAAS,GAAGlV,EAAE,CAACokB,YAAY,CAAE,gCAAgC,CAAE,IAAIpkB,EAAE,CAACokB,YAAY,CAAE,oCAAoC,CAAE,IAAIpkB,EAAE,CAACokB,YAAY,CAAE,uCAAuC,CAAE;UACxL;QAED,KAAK,+BAA+B;UACnClP,SAAS,GAAGlV,EAAE,CAACokB,YAAY,CAAE,+BAA+B,CAAE,IAAIpkB,EAAE,CAACokB,YAAY,CAAE,mCAAmC,CAAE,IAAIpkB,EAAE,CAACokB,YAAY,CAAE,sCAAsC,CAAE;UACrL;QAED,KAAK,gCAAgC;UACpClP,SAAS,GAAGlV,EAAE,CAACokB,YAAY,CAAE,gCAAgC,CAAE,IAAIpkB,EAAE,CAACokB,YAAY,CAAE,uCAAuC,CAAE;UAC7H;QAED;UACClP,SAAS,GAAGlV,EAAE,CAACokB,YAAY,CAAExwE,IAAI,CAAE;MAAC;MAItC0jD,UAAU,CAAE1jD,IAAI,CAAE,GAAGshE,SAAS;MAE9B,OAAOA,SAAS;IAEjB;IAEA,OAAO;MAENwE,GAAG,EAAE,SAAAA,IAAW9lE,IAAI,EAAG;QAEtB,OAAOwwE,YAAY,CAAExwE,IAAI,CAAE,KAAK,IAAI;MAErC,CAAC;MAEDqoE,IAAI,EAAE,SAAAA,KAAWhc,YAAY,EAAG;QAE/B,IAAKA,YAAY,CAACC,QAAQ,EAAG;UAE5BkkB,YAAY,CAAE,wBAAwB,CAAE;QAEzC,CAAC,MAAM;UAENA,YAAY,CAAE,qBAAqB,CAAE;UACrCA,YAAY,CAAE,mBAAmB,CAAE;UACnCA,YAAY,CAAE,wBAAwB,CAAE;UACxCA,YAAY,CAAE,+BAA+B,CAAE;UAC/CA,YAAY,CAAE,0BAA0B,CAAE;UAC1CA,YAAY,CAAE,wBAAwB,CAAE;UACxCA,YAAY,CAAE,yBAAyB,CAAE;UACzCA,YAAY,CAAE,wBAAwB,CAAE;QAEzC;QAEAA,YAAY,CAAE,0BAA0B,CAAE;QAC1CA,YAAY,CAAE,6BAA6B,CAAE;QAC7CA,YAAY,CAAE,sCAAsC,CAAE;MAEvD,CAAC;MAED16D,GAAG,EAAE,SAAAA,IAAW9V,IAAI,EAAG;QAEtB,IAAMshE,SAAS,GAAGkP,YAAY,CAAExwE,IAAI,CAAE;QAEtC,IAAKshE,SAAS,KAAK,IAAI,EAAG;UAEzBl+D,OAAO,CAACC,IAAI,CAAE,uBAAuB,GAAGrD,IAAI,GAAG,2BAA2B,CAAE;QAE7E;QAEA,OAAOshE,SAAS;MAEjB;IAED,CAAC;EAEF;EAEA,SAASmP,eAAeA,CAAErkB,EAAE,EAAE/3B,UAAU,EAAE/1B,IAAI,EAAEkjE,aAAa,EAAG;IAE/D,IAAMz7B,UAAU,GAAG,CAAC,CAAC;IACrB,IAAM2qC,mBAAmB,GAAG,IAAIlkB,OAAO,EAAE;IAEzC,SAASmkB,iBAAiBA,CAAExgE,KAAK,EAAG;MAEnC,IAAMikB,QAAQ,GAAGjkB,KAAK,CAAC9N,MAAM;MAE7B,IAAK+xB,QAAQ,CAACpkB,KAAK,KAAK,IAAI,EAAG;QAE9BqkB,UAAU,CAACmQ,MAAM,CAAEpQ,QAAQ,CAACpkB,KAAK,CAAE;MAEpC;MAEA,KAAM,IAAMhQ,IAAI,IAAIo0B,QAAQ,CAACC,UAAU,EAAG;QAEzCA,UAAU,CAACmQ,MAAM,CAAEpQ,QAAQ,CAACC,UAAU,CAAEr0B,IAAI,CAAE,CAAE;MAEjD;MAEAo0B,QAAQ,CAACtkB,mBAAmB,CAAE,SAAS,EAAE6gE,iBAAiB,CAAE;MAE5D,OAAO5qC,UAAU,CAAE3R,QAAQ,CAACyQ,EAAE,CAAE;MAEhC,IAAMvrB,SAAS,GAAGo3D,mBAAmB,CAAC56D,GAAG,CAAEse,QAAQ,CAAE;MAErD,IAAK9a,SAAS,EAAG;QAEhB+a,UAAU,CAACmQ,MAAM,CAAElrB,SAAS,CAAE;QAC9Bo3D,mBAAmB,CAAC/iB,MAAM,CAAEv5B,QAAQ,CAAE;MAEvC;MAEAotC,aAAa,CAAC0D,uBAAuB,CAAE9wC,QAAQ,CAAE;MAEjD,IAAKA,QAAQ,CAACiwC,yBAAyB,KAAK,IAAI,EAAG;QAElD,OAAOjwC,QAAQ,CAACqwC,iBAAiB;MAElC;;MAEA;;MAEAnmE,IAAI,CAACsyE,MAAM,CAAC7qC,UAAU,EAAG;IAE1B;IAEA,SAASjwB,GAAGA,CAAEpV,MAAM,EAAE0zB,QAAQ,EAAG;MAEhC,IAAK2R,UAAU,CAAE3R,QAAQ,CAACyQ,EAAE,CAAE,KAAK,IAAI,EAAG,OAAOzQ,QAAQ;MAEzDA,QAAQ,CAAC5kB,gBAAgB,CAAE,SAAS,EAAEmhE,iBAAiB,CAAE;MAEzD5qC,UAAU,CAAE3R,QAAQ,CAACyQ,EAAE,CAAE,GAAG,IAAI;MAEhCvmC,IAAI,CAACsyE,MAAM,CAAC7qC,UAAU,EAAG;MAEzB,OAAO3R,QAAQ;IAEhB;IAEA,SAASpJ,MAAMA,CAAEoJ,QAAQ,EAAG;MAE3B,IAAMgvC,kBAAkB,GAAGhvC,QAAQ,CAACC,UAAU;;MAE9C;;MAEA,KAAM,IAAMr0B,IAAI,IAAIojE,kBAAkB,EAAG;QAExC/uC,UAAU,CAACrJ,MAAM,CAAEo4C,kBAAkB,CAAEpjE,IAAI,CAAE,EAAEosD,EAAE,CAACsY,YAAY,CAAE;MAEjE;;MAEA;;MAEA,IAAM7qB,eAAe,GAAGzlB,QAAQ,CAACylB,eAAe;MAEhD,KAAM,IAAM75C,MAAI,IAAI65C,eAAe,EAAG;QAErC,IAAMzpC,KAAK,GAAGypC,eAAe,CAAE75C,MAAI,CAAE;QAErC,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGD,KAAK,CAAC3Q,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEhD20B,UAAU,CAACrJ,MAAM,CAAE5a,KAAK,CAAE1Q,CAAC,CAAE,EAAE0sD,EAAE,CAACsY,YAAY,CAAE;QAEjD;MAED;IAED;IAEA,SAASmM,wBAAwBA,CAAEz8C,QAAQ,EAAG;MAE7C,IAAMgnB,OAAO,GAAG,EAAE;MAElB,IAAM01B,aAAa,GAAG18C,QAAQ,CAACpkB,KAAK;MACpC,IAAM+gE,gBAAgB,GAAG38C,QAAQ,CAACC,UAAU,CAACC,QAAQ;MACrD,IAAIpS,OAAO,GAAG,CAAC;MAEf,IAAK4uD,aAAa,KAAK,IAAI,EAAG;QAE7B,IAAM1gE,KAAK,GAAG0gE,aAAa,CAAC1gE,KAAK;QACjC8R,OAAO,GAAG4uD,aAAa,CAAC5uD,OAAO;QAE/B,KAAM,IAAIxiB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGD,KAAK,CAAC3Q,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,IAAI,CAAC,EAAG;UAElD,IAAMyU,CAAC,GAAG/D,KAAK,CAAE1Q,CAAC,GAAG,CAAC,CAAE;UACxB,IAAM0U,CAAC,GAAGhE,KAAK,CAAE1Q,CAAC,GAAG,CAAC,CAAE;UACxB,IAAM2U,CAAC,GAAGjE,KAAK,CAAE1Q,CAAC,GAAG,CAAC,CAAE;UAExB07C,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEA,CAAC,EAAEC,CAAC,EAAEA,CAAC,EAAEF,CAAC,CAAE;QAEjC;MAED,CAAC,MAAM;QAEN,IAAM/D,MAAK,GAAG2gE,gBAAgB,CAAC3gE,KAAK;QACpC8R,OAAO,GAAG6uD,gBAAgB,CAAC7uD,OAAO;QAElC,KAAM,IAAIxiB,IAAC,GAAG,CAAC,EAAE2Q,GAAC,GAAKD,MAAK,CAAC3Q,MAAM,GAAG,CAAC,GAAK,CAAC,EAAEC,IAAC,GAAG2Q,GAAC,EAAE3Q,IAAC,IAAI,CAAC,EAAG;UAE9D,IAAMyU,GAAC,GAAGzU,IAAC,GAAG,CAAC;UACf,IAAM0U,GAAC,GAAG1U,IAAC,GAAG,CAAC;UACf,IAAM2U,GAAC,GAAG3U,IAAC,GAAG,CAAC;UAEf07C,OAAO,CAACl8C,IAAI,CAAEiV,GAAC,EAAEC,GAAC,EAAEA,GAAC,EAAEC,GAAC,EAAEA,GAAC,EAAEF,GAAC,CAAE;QAEjC;MAED;MAEA,IAAMmF,SAAS,GAAG,KAAMkF,gBAAgB,CAAE48B,OAAO,CAAE,GAAGjD,qBAAqB,GAAGN,qBAAqB,EAAIuD,OAAO,EAAE,CAAC,CAAE;MACnH9hC,SAAS,CAAC4I,OAAO,GAAGA,OAAO;;MAE3B;;MAEA;;MAEA,IAAM8uD,iBAAiB,GAAGN,mBAAmB,CAAC56D,GAAG,CAAEse,QAAQ,CAAE;MAE7D,IAAK48C,iBAAiB,EAAG38C,UAAU,CAACmQ,MAAM,CAAEwsC,iBAAiB,CAAE;;MAE/D;;MAEAN,mBAAmB,CAACz7D,GAAG,CAAEmf,QAAQ,EAAE9a,SAAS,CAAE;IAE/C;IAEA,SAAS23D,qBAAqBA,CAAE78C,QAAQ,EAAG;MAE1C,IAAM88C,gBAAgB,GAAGR,mBAAmB,CAAC56D,GAAG,CAAEse,QAAQ,CAAE;MAE5D,IAAK88C,gBAAgB,EAAG;QAEvB,IAAMJ,aAAa,GAAG18C,QAAQ,CAACpkB,KAAK;QAEpC,IAAK8gE,aAAa,KAAK,IAAI,EAAG;UAE7B;;UAEA,IAAKI,gBAAgB,CAAChvD,OAAO,GAAG4uD,aAAa,CAAC5uD,OAAO,EAAG;YAEvD2uD,wBAAwB,CAAEz8C,QAAQ,CAAE;UAErC;QAED;MAED,CAAC,MAAM;QAENy8C,wBAAwB,CAAEz8C,QAAQ,CAAE;MAErC;MAEA,OAAOs8C,mBAAmB,CAAC56D,GAAG,CAAEse,QAAQ,CAAE;IAE3C;IAEA,OAAO;MAENte,GAAG,EAAEA,GAAG;MACRkV,MAAM,EAAEA,MAAM;MAEdimD,qBAAqB,EAAEA;IAExB,CAAC;EAEF;EAEA,SAASE,0BAA0BA,CAAE/kB,EAAE,EAAE1I,UAAU,EAAEplD,IAAI,EAAE+tD,YAAY,EAAG;IAEzE,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;IAEtC,IAAIgZ,IAAI;IAER,SAASC,OAAOA,CAAE1rE,KAAK,EAAG;MAEzByrE,IAAI,GAAGzrE,KAAK;IAEb;IAEA,IAAI6B,IAAI,EAAE2xD,eAAe;IAEzB,SAASjT,QAAQA,CAAEvgD,KAAK,EAAG;MAE1B6B,IAAI,GAAG7B,KAAK,CAAC6B,IAAI;MACjB2xD,eAAe,GAAGxzD,KAAK,CAACwzD,eAAe;IAExC;IAEA,SAAS5F,MAAMA,CAAEvN,KAAK,EAAEjwB,KAAK,EAAG;MAE/BmiC,EAAE,CAACglB,YAAY,CAAE9L,IAAI,EAAEr7C,KAAK,EAAEvuB,IAAI,EAAEw+C,KAAK,GAAGmT,eAAe,CAAE;MAE7D/uD,IAAI,CAAC0sB,MAAM,CAAEf,KAAK,EAAEq7C,IAAI,EAAE,CAAC,CAAE;IAE9B;IAEA,SAASG,eAAeA,CAAEvrB,KAAK,EAAEjwB,KAAK,EAAEy7C,SAAS,EAAG;MAEnD,IAAKA,SAAS,KAAK,CAAC,EAAG;MAEvB,IAAIpE,SAAS,EAAEpjE,UAAU;MAEzB,IAAKouD,QAAQ,EAAG;QAEfgV,SAAS,GAAGlV,EAAE;QACdluD,UAAU,GAAG,uBAAuB;MAErC,CAAC,MAAM;QAENojE,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,wBAAwB,CAAE;QACtD5X,UAAU,GAAG,4BAA4B;QAEzC,IAAKojE,SAAS,KAAK,IAAI,EAAG;UAEzBl+D,OAAO,CAAChG,KAAK,CAAE,uIAAuI,CAAE;UACxJ;QAED;MAED;MAEAkkE,SAAS,CAAEpjE,UAAU,CAAE,CAAEonE,IAAI,EAAEr7C,KAAK,EAAEvuB,IAAI,EAAEw+C,KAAK,GAAGmT,eAAe,EAAEqY,SAAS,CAAE;MAEhFpnE,IAAI,CAAC0sB,MAAM,CAAEf,KAAK,EAAEq7C,IAAI,EAAEI,SAAS,CAAE;IAEtC;;IAEA;;IAEA,IAAI,CAACH,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACnrB,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACqN,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACge,eAAe,GAAGA,eAAe;EAEvC;EAEA,SAAS4L,SAASA,CAAEjlB,EAAE,EAAG;IAExB,IAAMwkB,MAAM,GAAG;MACd7qC,UAAU,EAAE,CAAC;MACb1gB,QAAQ,EAAE;IACX,CAAC;IAED,IAAMoiC,MAAM,GAAG;MACdqE,KAAK,EAAE,CAAC;MACRwlB,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE,CAAC;MACZv+C,MAAM,EAAE,CAAC;MACTw+C,KAAK,EAAE;IACR,CAAC;IAED,SAASxmD,MAAMA,CAAEf,KAAK,EAAEq7C,IAAI,EAAEmM,aAAa,EAAG;MAE7ChqB,MAAM,CAAC6pB,KAAK,EAAG;MAEf,QAAShM,IAAI;QAEZ,KAAKlZ,EAAE,CAACslB,SAAS;UAChBjqB,MAAM,CAAC8pB,SAAS,IAAIE,aAAa,IAAKxnD,KAAK,GAAG,CAAC,CAAE;UACjD;QAED,KAAKmiC,EAAE,CAACulB,KAAK;UACZlqB,MAAM,CAAC+pB,KAAK,IAAIC,aAAa,IAAKxnD,KAAK,GAAG,CAAC,CAAE;UAC7C;QAED,KAAKmiC,EAAE,CAACwlB,UAAU;UACjBnqB,MAAM,CAAC+pB,KAAK,IAAIC,aAAa,IAAKxnD,KAAK,GAAG,CAAC,CAAE;UAC7C;QAED,KAAKmiC,EAAE,CAACylB,SAAS;UAChBpqB,MAAM,CAAC+pB,KAAK,IAAIC,aAAa,GAAGxnD,KAAK;UACrC;QAED,KAAKmiC,EAAE,CAAC0lB,MAAM;UACbrqB,MAAM,CAACz0B,MAAM,IAAIy+C,aAAa,GAAGxnD,KAAK;UACtC;QAED;UACC7mB,OAAO,CAAChG,KAAK,CAAE,qCAAqC,EAAEkoE,IAAI,CAAE;UAC5D;MAAM;IAIT;IAEA,SAASjmE,KAAKA,CAAA,EAAG;MAEhBooD,MAAM,CAACqE,KAAK,EAAG;MACfrE,MAAM,CAAC6pB,KAAK,GAAG,CAAC;MAChB7pB,MAAM,CAAC8pB,SAAS,GAAG,CAAC;MACpB9pB,MAAM,CAACz0B,MAAM,GAAG,CAAC;MACjBy0B,MAAM,CAAC+pB,KAAK,GAAG,CAAC;IAEjB;IAEA,OAAO;MACNZ,MAAM,EAAEA,MAAM;MACdnpB,MAAM,EAAEA,MAAM;MACdsqB,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACf3yE,KAAK,EAAEA,KAAK;MACZ2rB,MAAM,EAAEA;IACT,CAAC;EAEF;EAEA,SAASinD,aAAaA,CAAE99D,CAAC,EAAEC,CAAC,EAAG;IAE9B,OAAOD,CAAC,CAAE,CAAC,CAAE,GAAGC,CAAC,CAAE,CAAC,CAAE;EAEvB;EAEA,SAAS89D,gBAAgBA,CAAE/9D,CAAC,EAAEC,CAAC,EAAG;IAEjC,OAAO3D,IAAI,CAACgC,GAAG,CAAE2B,CAAC,CAAE,CAAC,CAAE,CAAE,GAAG3D,IAAI,CAACgC,GAAG,CAAE0B,CAAC,CAAE,CAAC,CAAE,CAAE;EAE/C;EAEA,SAASg+D,iBAAiBA,CAAE/lB,EAAE,EAAEC,YAAY,EAAEhnC,QAAQ,EAAG;IAExD,IAAM+sD,cAAc,GAAG,CAAC,CAAC;IACzB,IAAMxyB,eAAe,GAAG,IAAIzqC,YAAY,CAAE,CAAC,CAAE;IAC7C,IAAMk9D,aAAa,GAAG,IAAI7lB,OAAO,EAAE;IACnC,IAAM8lB,KAAK,GAAG,IAAI5sD,OAAO,EAAE;IAE3B,IAAM6sD,cAAc,GAAG,EAAE;IAEzB,KAAM,IAAI7yE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;MAE9B6yE,cAAc,CAAE7yE,CAAC,CAAE,GAAG,CAAEA,CAAC,EAAE,CAAC,CAAE;IAE/B;IAEA,SAASsrB,MAAMA,CAAEtqB,MAAM,EAAE0zB,QAAQ,EAAE0tC,OAAO,EAAG;MAE5C,IAAM0Q,gBAAgB,GAAG9xE,MAAM,CAAC6+C,qBAAqB;MAErD,IAAK8M,YAAY,CAACC,QAAQ,KAAK,IAAI,EAAG;QAErC;QACA;;QAEA,IAAMrR,cAAc,GAAG7mB,QAAQ,CAACylB,eAAe,CAACvlB,QAAQ,IAAIF,QAAQ,CAACylB,eAAe,CAACvoB,MAAM,IAAI8C,QAAQ,CAACylB,eAAe,CAACt6B,KAAK;QAC7H,IAAMkzD,iBAAiB,GAAKx3B,cAAc,KAAK98C,SAAS,GAAK88C,cAAc,CAACx7C,MAAM,GAAG,CAAC;QAEtF,IAAIb,KAAK,GAAGyzE,aAAa,CAACv8D,GAAG,CAAEse,QAAQ,CAAE;QAEzC,IAAKx1B,KAAK,KAAKT,SAAS,IAAIS,KAAK,CAACqrB,KAAK,KAAKwoD,iBAAiB,EAAG;UAE/D,IAAK7zE,KAAK,KAAKT,SAAS,EAAGS,KAAK,CAACspB,OAAO,CAAC3C,OAAO,EAAE;UAElD,IAAMmtD,gBAAgB,GAAGt+C,QAAQ,CAACylB,eAAe,CAACvlB,QAAQ,KAAKn2B,SAAS;UACxE,IAAMw0E,eAAe,GAAGv+C,QAAQ,CAACylB,eAAe,CAACvoB,MAAM,KAAKnzB,SAAS;UACrE,IAAMy0E,cAAc,GAAGx+C,QAAQ,CAACylB,eAAe,CAACt6B,KAAK,KAAKphB,SAAS;UAEnE,IAAM00E,YAAY,GAAGz+C,QAAQ,CAACylB,eAAe,CAACvlB,QAAQ,IAAI,EAAE;UAC5D,IAAMw+C,YAAY,GAAG1+C,QAAQ,CAACylB,eAAe,CAACvoB,MAAM,IAAI,EAAE;UAC1D,IAAMyhD,WAAW,GAAG3+C,QAAQ,CAACylB,eAAe,CAACt6B,KAAK,IAAI,EAAE;UAExD,IAAIyzD,eAAe,GAAG,CAAC;UAEvB,IAAKN,gBAAgB,KAAK,IAAI,EAAGM,eAAe,GAAG,CAAC;UACpD,IAAKL,eAAe,KAAK,IAAI,EAAGK,eAAe,GAAG,CAAC;UACnD,IAAKJ,cAAc,KAAK,IAAI,EAAGI,eAAe,GAAG,CAAC;UAElD,IAAI7xD,KAAK,GAAGiT,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACrK,KAAK,GAAG+oD,eAAe;UAChE,IAAI5xD,MAAM,GAAG,CAAC;UAEd,IAAKD,KAAK,GAAGkrC,YAAY,CAACwa,cAAc,EAAG;YAE1CzlD,MAAM,GAAG3Q,IAAI,CAACoD,IAAI,CAAEsN,KAAK,GAAGkrC,YAAY,CAACwa,cAAc,CAAE;YACzD1lD,KAAK,GAAGkrC,YAAY,CAACwa,cAAc;UAEpC;UAEA,IAAM9nD,MAAM,GAAG,IAAI5J,YAAY,CAAEgM,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAGqxD,iBAAiB,CAAE;UAEzE,IAAMvqD,OAAO,GAAG,IAAIO,gBAAgB,CAAE1J,MAAM,EAAEoC,KAAK,EAAEC,MAAM,EAAEqxD,iBAAiB,CAAE;UAChFvqD,OAAO,CAACxsB,IAAI,GAAG2N,SAAS;UACxB6e,OAAO,CAAC9C,WAAW,GAAG,IAAI;;UAE1B;;UAEA,IAAM6tD,gBAAgB,GAAGD,eAAe,GAAG,CAAC;UAE5C,KAAM,IAAItzE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+yE,iBAAiB,EAAE/yE,IAAC,EAAG,EAAG;YAE9C,IAAMwzE,WAAW,GAAGL,YAAY,CAAEnzE,IAAC,CAAE;YACrC,IAAMyzE,WAAW,GAAGL,YAAY,CAAEpzE,IAAC,CAAE;YACrC,IAAM0zE,UAAU,GAAGL,WAAW,CAAErzE,IAAC,CAAE;YAEnC,IAAMyZ,MAAM,GAAGgI,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAG1hB,IAAC;YAErC,KAAM,IAAI42B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG48C,WAAW,CAACjpD,KAAK,EAAEqM,CAAC,EAAG,EAAG;cAE9C,IAAMqnB,MAAM,GAAGrnB,CAAC,GAAG28C,gBAAgB;cAEnC,IAAKP,gBAAgB,KAAK,IAAI,EAAG;gBAEhCJ,KAAK,CAACj5D,mBAAmB,CAAE65D,WAAW,EAAE58C,CAAC,CAAE;gBAE3CvX,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,CAAC,CAAE,GAAG20B,KAAK,CAAC3gE,CAAC;gBACvCoN,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,CAAC,CAAE,GAAG20B,KAAK,CAACrgE,CAAC;gBACvC8M,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,CAAC,CAAE,GAAG20B,KAAK,CAAC1sD,CAAC;gBACvC7G,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC;cAElC;cAEA,IAAKg1B,eAAe,KAAK,IAAI,EAAG;gBAE/BL,KAAK,CAACj5D,mBAAmB,CAAE85D,WAAW,EAAE78C,CAAC,CAAE;gBAE3CvX,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,CAAC,CAAE,GAAG20B,KAAK,CAAC3gE,CAAC;gBACvCoN,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,CAAC,CAAE,GAAG20B,KAAK,CAACrgE,CAAC;gBACvC8M,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,CAAC,CAAE,GAAG20B,KAAK,CAAC1sD,CAAC;gBACvC7G,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC;cAElC;cAEA,IAAKi1B,cAAc,KAAK,IAAI,EAAG;gBAE9BN,KAAK,CAACj5D,mBAAmB,CAAE+5D,UAAU,EAAE98C,CAAC,CAAE;gBAE1CvX,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,CAAC,CAAE,GAAG20B,KAAK,CAAC3gE,CAAC;gBACvCoN,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,CAAC,CAAE,GAAG20B,KAAK,CAACrgE,CAAC;gBACvC8M,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,EAAE,CAAE,GAAG20B,KAAK,CAAC1sD,CAAC;gBACxC7G,MAAM,CAAE5F,MAAM,GAAGwkC,MAAM,GAAG,EAAE,CAAE,GAAKy1B,UAAU,CAACt9B,QAAQ,KAAK,CAAC,GAAKw8B,KAAK,CAACzsD,CAAC,GAAG,CAAC;cAE7E;YAED;UAED;UAEAjnB,KAAK,GAAG;YACPqrB,KAAK,EAAEwoD,iBAAiB;YACxBvqD,OAAO,EAAEA,OAAO;YAChBgL,IAAI,EAAE,IAAIvd,OAAO,CAAEwL,KAAK,EAAEC,MAAM;UACjC,CAAC;UAEDixD,aAAa,CAACp9D,GAAG,CAAEmf,QAAQ,EAAEx1B,KAAK,CAAE;UAEpC,SAASy0E,cAAcA,CAAA,EAAG;YAEzBnrD,OAAO,CAAC3C,OAAO,EAAE;YAEjB8sD,aAAa,CAAC1kB,MAAM,CAAEv5B,QAAQ,CAAE;YAEhCA,QAAQ,CAACtkB,mBAAmB,CAAE,SAAS,EAAEujE,cAAc,CAAE;UAE1D;UAEAj/C,QAAQ,CAAC5kB,gBAAgB,CAAE,SAAS,EAAE6jE,cAAc,CAAE;QAEvD;;QAEA;;QAEA,IAAIC,kBAAkB,GAAG,CAAC;QAE1B,KAAM,IAAI5zE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8yE,gBAAgB,CAAC/yE,MAAM,EAAEC,IAAC,EAAG,EAAG;UAEpD4zE,kBAAkB,IAAId,gBAAgB,CAAE9yE,IAAC,CAAE;QAE5C;QAEA,IAAM6zE,kBAAkB,GAAGn/C,QAAQ,CAAC0lB,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAGw5B,kBAAkB;QAErFxR,OAAO,CAAC0R,WAAW,EAAE,CAACC,QAAQ,CAAErnB,EAAE,EAAE,0BAA0B,EAAEmnB,kBAAkB,CAAE;QACpFzR,OAAO,CAAC0R,WAAW,EAAE,CAACC,QAAQ,CAAErnB,EAAE,EAAE,uBAAuB,EAAEomB,gBAAgB,CAAE;QAE/E1Q,OAAO,CAAC0R,WAAW,EAAE,CAACC,QAAQ,CAAErnB,EAAE,EAAE,qBAAqB,EAAExtD,KAAK,CAACspB,OAAO,EAAE7C,QAAQ,CAAE;QACpFy8C,OAAO,CAAC0R,WAAW,EAAE,CAACC,QAAQ,CAAErnB,EAAE,EAAE,yBAAyB,EAAExtD,KAAK,CAACs0B,IAAI,CAAE;MAG5E,CAAC,MAAM;QAEN;QACA;;QAEA,IAAMzzB,MAAM,GAAG+yE,gBAAgB,KAAKr0E,SAAS,GAAG,CAAC,GAAGq0E,gBAAgB,CAAC/yE,MAAM;QAE3E,IAAIi0E,UAAU,GAAGtB,cAAc,CAAEh+C,QAAQ,CAACyQ,EAAE,CAAE;QAE9C,IAAK6uC,UAAU,KAAKv1E,SAAS,IAAIu1E,UAAU,CAACj0E,MAAM,KAAKA,MAAM,EAAG;UAE/D;;UAEAi0E,UAAU,GAAG,EAAE;UAEf,KAAM,IAAIh0E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGD,MAAM,EAAEC,IAAC,EAAG,EAAG;YAEnCg0E,UAAU,CAAEh0E,IAAC,CAAE,GAAG,CAAEA,IAAC,EAAE,CAAC,CAAE;UAE3B;UAEA0yE,cAAc,CAAEh+C,QAAQ,CAACyQ,EAAE,CAAE,GAAG6uC,UAAU;QAE3C;;QAEA;;QAEA,KAAM,IAAIh0E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGD,MAAM,EAAEC,IAAC,EAAG,EAAG;UAEnC,IAAMmgD,SAAS,GAAG6zB,UAAU,CAAEh0E,IAAC,CAAE;UAEjCmgD,SAAS,CAAE,CAAC,CAAE,GAAGngD,IAAC;UAClBmgD,SAAS,CAAE,CAAC,CAAE,GAAG2yB,gBAAgB,CAAE9yE,IAAC,CAAE;QAEvC;QAEAg0E,UAAU,CAACC,IAAI,CAAEzB,gBAAgB,CAAE;QAEnC,KAAM,IAAIxyE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;UAE9B,IAAKA,IAAC,GAAGD,MAAM,IAAIi0E,UAAU,CAAEh0E,IAAC,CAAE,CAAE,CAAC,CAAE,EAAG;YAEzC6yE,cAAc,CAAE7yE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAGg0E,UAAU,CAAEh0E,IAAC,CAAE,CAAE,CAAC,CAAE;YAC/C6yE,cAAc,CAAE7yE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAGg0E,UAAU,CAAEh0E,IAAC,CAAE,CAAE,CAAC,CAAE;UAEhD,CAAC,MAAM;YAEN6yE,cAAc,CAAE7yE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAGyD,MAAM,CAACywE,gBAAgB;YAClDrB,cAAc,CAAE7yE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG,CAAC;UAE7B;QAED;QAEA6yE,cAAc,CAACoB,IAAI,CAAE1B,aAAa,CAAE;QAEpC,IAAMY,aAAY,GAAGz+C,QAAQ,CAACylB,eAAe,CAACvlB,QAAQ;QACtD,IAAMw+C,aAAY,GAAG1+C,QAAQ,CAACylB,eAAe,CAACvoB,MAAM;QAEpD,IAAIgiD,mBAAkB,GAAG,CAAC;QAE1B,KAAM,IAAI5zE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;UAE9B,IAAMmgD,UAAS,GAAG0yB,cAAc,CAAE7yE,IAAC,CAAE;UACrC,IAAMsQ,KAAK,GAAG6vC,UAAS,CAAE,CAAC,CAAE;UAC5B,IAAMhmD,OAAK,GAAGgmD,UAAS,CAAE,CAAC,CAAE;UAE5B,IAAK7vC,KAAK,KAAK7M,MAAM,CAACywE,gBAAgB,IAAI/5E,OAAK,EAAG;YAEjD,IAAKg5E,aAAY,IAAIz+C,QAAQ,CAACimB,YAAY,CAAE,aAAa,GAAG36C,IAAC,CAAE,KAAKmzE,aAAY,CAAE7iE,KAAK,CAAE,EAAG;cAE3FokB,QAAQ,CAACkmB,YAAY,CAAE,aAAa,GAAG56C,IAAC,EAAEmzE,aAAY,CAAE7iE,KAAK,CAAE,CAAE;YAElE;YAEA,IAAK8iE,aAAY,IAAI1+C,QAAQ,CAACimB,YAAY,CAAE,aAAa,GAAG36C,IAAC,CAAE,KAAKozE,aAAY,CAAE9iE,KAAK,CAAE,EAAG;cAE3FokB,QAAQ,CAACkmB,YAAY,CAAE,aAAa,GAAG56C,IAAC,EAAEozE,aAAY,CAAE9iE,KAAK,CAAE,CAAE;YAElE;YAEA4vC,eAAe,CAAElgD,IAAC,CAAE,GAAG7F,OAAK;YAC5By5E,mBAAkB,IAAIz5E,OAAK;UAE5B,CAAC,MAAM;YAEN,IAAKg5E,aAAY,IAAIz+C,QAAQ,CAAComB,YAAY,CAAE,aAAa,GAAG96C,IAAC,CAAE,KAAK,IAAI,EAAG;cAE1E00B,QAAQ,CAACmmB,eAAe,CAAE,aAAa,GAAG76C,IAAC,CAAE;YAE9C;YAEA,IAAKozE,aAAY,IAAI1+C,QAAQ,CAAComB,YAAY,CAAE,aAAa,GAAG96C,IAAC,CAAE,KAAK,IAAI,EAAG;cAE1E00B,QAAQ,CAACmmB,eAAe,CAAE,aAAa,GAAG76C,IAAC,CAAE;YAE9C;YAEAkgD,eAAe,CAAElgD,IAAC,CAAE,GAAG,CAAC;UAEzB;QAED;;QAEA;QACA;QACA;QACA,IAAM6zE,mBAAkB,GAAGn/C,QAAQ,CAAC0lB,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAGw5B,mBAAkB;QAErFxR,OAAO,CAAC0R,WAAW,EAAE,CAACC,QAAQ,CAAErnB,EAAE,EAAE,0BAA0B,EAAEmnB,mBAAkB,CAAE;QACpFzR,OAAO,CAAC0R,WAAW,EAAE,CAACC,QAAQ,CAAErnB,EAAE,EAAE,uBAAuB,EAAExM,eAAe,CAAE;MAE/E;IAED;IAEA,OAAO;MAEN50B,MAAM,EAAEA;IAET,CAAC;EAEF;EAEA,SAAS6oD,YAAYA,CAAEznB,EAAE,EAAErmB,UAAU,EAAE1R,UAAU,EAAE/1B,IAAI,EAAG;IAEzD,IAAIw1E,SAAS,GAAG,IAAItnB,OAAO,EAAE;IAE7B,SAASxhC,MAAMA,CAAEtqB,MAAM,EAAG;MAEzB,IAAMorD,KAAK,GAAGxtD,IAAI,CAACmpD,MAAM,CAACqE,KAAK;MAE/B,IAAM13B,QAAQ,GAAG1zB,MAAM,CAAC0zB,QAAQ;MAChC,IAAM2/C,cAAc,GAAGhuC,UAAU,CAACjwB,GAAG,CAAEpV,MAAM,EAAE0zB,QAAQ,CAAE;;MAEzD;;MAEA,IAAK0/C,SAAS,CAACh+D,GAAG,CAAEi+D,cAAc,CAAE,KAAKjoB,KAAK,EAAG;QAEhD/lB,UAAU,CAAC/a,MAAM,CAAE+oD,cAAc,CAAE;QAEnCD,SAAS,CAAC7+D,GAAG,CAAE8+D,cAAc,EAAEjoB,KAAK,CAAE;MAEvC;MAEA,IAAKprD,MAAM,CAAC0lC,eAAe,EAAG;QAE7B,IAAK1lC,MAAM,CAACmP,gBAAgB,CAAE,SAAS,EAAEmkE,sBAAsB,CAAE,KAAK,KAAK,EAAG;UAE7EtzE,MAAM,CAAC8O,gBAAgB,CAAE,SAAS,EAAEwkE,sBAAsB,CAAE;QAE7D;QAEA3/C,UAAU,CAACrJ,MAAM,CAAEtqB,MAAM,CAAC2lC,cAAc,EAAE+lB,EAAE,CAACsY,YAAY,CAAE;QAE3D,IAAKhkE,MAAM,CAAC4lC,aAAa,KAAK,IAAI,EAAG;UAEpCjS,UAAU,CAACrJ,MAAM,CAAEtqB,MAAM,CAAC4lC,aAAa,EAAE8lB,EAAE,CAACsY,YAAY,CAAE;QAE3D;MAED;MAEA,OAAOqP,cAAc;IAEtB;IAEA,SAASxuD,OAAOA,CAAA,EAAG;MAElBuuD,SAAS,GAAG,IAAItnB,OAAO,EAAE;IAE1B;IAEA,SAASwnB,sBAAsBA,CAAE7jE,KAAK,EAAG;MAExC,IAAM8jE,aAAa,GAAG9jE,KAAK,CAAC9N,MAAM;MAElC4xE,aAAa,CAACnkE,mBAAmB,CAAE,SAAS,EAAEkkE,sBAAsB,CAAE;MAEtE3/C,UAAU,CAACmQ,MAAM,CAAEyvC,aAAa,CAAC5tC,cAAc,CAAE;MAEjD,IAAK4tC,aAAa,CAAC3tC,aAAa,KAAK,IAAI,EAAGjS,UAAU,CAACmQ,MAAM,CAAEyvC,aAAa,CAAC3tC,aAAa,CAAE;IAE7F;IAEA,OAAO;MAENtb,MAAM,EAAEA,MAAM;MACdzF,OAAO,EAAEA;IAEV,CAAC;EAEF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC,IAAM2uD,YAAY,GAAG,aAAc,IAAInxD,OAAO,EAAE;EAChD,IAAMoxD,iBAAiB,GAAG,aAAc,IAAI1rD,gBAAgB,EAAE;EAC9D,IAAM2rD,cAAc,GAAG,aAAc,IAAIhrD,aAAa,EAAE;EACxD,IAAMirD,gBAAgB,GAAG,aAAc,IAAI3sB,WAAW,EAAE;;EAExD;;EAEA;;EAEA,IAAM4sB,aAAa,GAAG,EAAE;EACxB,IAAMC,aAAa,GAAG,EAAE;;EAExB;;EAEA,IAAMC,SAAS,GAAG,IAAIr/D,YAAY,CAAE,EAAE,CAAE;EACxC,IAAMs/D,SAAS,GAAG,IAAIt/D,YAAY,CAAE,CAAC,CAAE;EACvC,IAAMu/D,SAAS,GAAG,IAAIv/D,YAAY,CAAE,CAAC,CAAE;;EAEvC;;EAEA,SAASw/D,OAAOA,CAAEvkE,KAAK,EAAEwkE,OAAO,EAAEC,SAAS,EAAG;IAE7C,IAAMC,SAAS,GAAG1kE,KAAK,CAAE,CAAC,CAAE;IAE5B,IAAK0kE,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAG,OAAO1kE,KAAK;IACnD;IACA;;IAEA,IAAMoB,CAAC,GAAGojE,OAAO,GAAGC,SAAS;IAC7B,IAAIt3D,CAAC,GAAG+2D,aAAa,CAAE9iE,CAAC,CAAE;IAE1B,IAAK+L,CAAC,KAAKpf,SAAS,EAAG;MAEtBof,CAAC,GAAG,IAAIpI,YAAY,CAAE3D,CAAC,CAAE;MACzB8iE,aAAa,CAAE9iE,CAAC,CAAE,GAAG+L,CAAC;IAEvB;IAEA,IAAKq3D,OAAO,KAAK,CAAC,EAAG;MAEpBE,SAAS,CAAC17D,OAAO,CAAEmE,CAAC,EAAE,CAAC,CAAE;MAEzB,KAAM,IAAI7d,CAAC,GAAG,CAAC,EAAEyZ,MAAM,GAAG,CAAC,EAAEzZ,CAAC,KAAKk1E,OAAO,EAAE,EAAGl1E,CAAC,EAAG;QAElDyZ,MAAM,IAAI07D,SAAS;QACnBzkE,KAAK,CAAE1Q,CAAC,CAAE,CAAC0Z,OAAO,CAAEmE,CAAC,EAAEpE,MAAM,CAAE;MAEhC;IAED;IAEA,OAAOoE,CAAC;EAET;EAEA,SAASw3D,WAAWA,CAAE5gE,CAAC,EAAEC,CAAC,EAAG;IAE5B,IAAKD,CAAC,CAAC1U,MAAM,KAAK2U,CAAC,CAAC3U,MAAM,EAAG,OAAO,KAAK;IAEzC,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG8D,CAAC,CAAC1U,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;MAE5C,IAAKyU,CAAC,CAAEzU,CAAC,CAAE,KAAK0U,CAAC,CAAE1U,CAAC,CAAE,EAAG,OAAO,KAAK;IAEtC;IAEA,OAAO,IAAI;EAEZ;EAEA,SAAS82C,SAASA,CAAEriC,CAAC,EAAEC,CAAC,EAAG;IAE1B,KAAM,IAAI1U,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG+D,CAAC,CAAC3U,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;MAE5CyU,CAAC,CAAEzU,CAAC,CAAE,GAAG0U,CAAC,CAAE1U,CAAC,CAAE;IAEhB;EAED;;EAEA;;EAEA,SAASs1E,aAAaA,CAAE3vD,QAAQ,EAAE7T,CAAC,EAAG;IAErC,IAAI+L,CAAC,GAAGg3D,aAAa,CAAE/iE,CAAC,CAAE;IAE1B,IAAK+L,CAAC,KAAKpf,SAAS,EAAG;MAEtBof,CAAC,GAAG,IAAIoB,UAAU,CAAEnN,CAAC,CAAE;MACvB+iE,aAAa,CAAE/iE,CAAC,CAAE,GAAG+L,CAAC;IAEvB;IAEA,KAAM,IAAI7d,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;MAEhC6d,CAAC,CAAE7d,CAAC,CAAE,GAAG2lB,QAAQ,CAAC4vD,mBAAmB,EAAE;IAExC;IAEA,OAAO13D,CAAC;EAET;;EAEA;;EAEA;EACA;;EAEA;;EAEA,SAAS23D,WAAWA,CAAE9oB,EAAE,EAAE71C,CAAC,EAAG;IAE7B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,EAAG;IAExB61C,EAAE,CAAC+oB,SAAS,CAAE,IAAI,CAACC,IAAI,EAAE7+D,CAAC,CAAE;IAE5BoxB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC;EAEf;;EAEA;;EAEA,SAAS8+D,WAAWA,CAAEjpB,EAAE,EAAE71C,CAAC,EAAG;IAE7B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKpxB,CAAC,CAAC5E,CAAC,KAAKxT,SAAS,EAAG;MAExB,IAAKwpC,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAAC5E,CAAC,IAAIg2B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACtE,CAAC,EAAG;QAE/Cm6C,EAAE,CAACkpB,SAAS,CAAE,IAAI,CAACF,IAAI,EAAE7+D,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,CAAE;QAEnC01B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAAC5E,CAAC;QAChBg2B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACtE,CAAC;MAEjB;IAED,CAAC,MAAM;MAEN,IAAK8iE,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAACmpB,UAAU,CAAE,IAAI,CAACH,IAAI,EAAE7+D,CAAC,CAAE;MAE7BigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB;EAED;EAEA,SAASi/D,WAAWA,CAAEppB,EAAE,EAAE71C,CAAC,EAAG;IAE7B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKpxB,CAAC,CAAC5E,CAAC,KAAKxT,SAAS,EAAG;MAExB,IAAKwpC,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAAC5E,CAAC,IAAIg2B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACtE,CAAC,IAAI01B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACqP,CAAC,EAAG;QAErEwmC,EAAE,CAACqpB,SAAS,CAAE,IAAI,CAACL,IAAI,EAAE7+D,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,EAAEsE,CAAC,CAACqP,CAAC,CAAE;QAExC+hB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAAC5E,CAAC;QAChBg2B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACtE,CAAC;QAChB01B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACqP,CAAC;MAEjB;IAED,CAAC,MAAM,IAAKrP,CAAC,CAACgH,CAAC,KAAKpf,SAAS,EAAG;MAE/B,IAAKwpC,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACgH,CAAC,IAAIoqB,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACmG,CAAC,IAAIirB,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACnC,CAAC,EAAG;QAErEg4C,EAAE,CAACqpB,SAAS,CAAE,IAAI,CAACL,IAAI,EAAE7+D,CAAC,CAACgH,CAAC,EAAEhH,CAAC,CAACmG,CAAC,EAAEnG,CAAC,CAACnC,CAAC,CAAE;QAExCuzB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACgH,CAAC;QAChBoqB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACmG,CAAC;QAChBirB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACnC,CAAC;MAEjB;IAED,CAAC,MAAM;MAEN,IAAK2gE,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAACspB,UAAU,CAAE,IAAI,CAACN,IAAI,EAAE7+D,CAAC,CAAE;MAE7BigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB;EAED;EAEA,SAASo/D,WAAWA,CAAEvpB,EAAE,EAAE71C,CAAC,EAAG;IAE7B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKpxB,CAAC,CAAC5E,CAAC,KAAKxT,SAAS,EAAG;MAExB,IAAKwpC,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAAC5E,CAAC,IAAIg2B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACtE,CAAC,IAAI01B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACqP,CAAC,IAAI+hB,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACsP,CAAC,EAAG;QAE3FumC,EAAE,CAACwpB,SAAS,CAAE,IAAI,CAACR,IAAI,EAAE7+D,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,EAAEsE,CAAC,CAACqP,CAAC,EAAErP,CAAC,CAACsP,CAAC,CAAE;QAE7C8hB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAAC5E,CAAC;QAChBg2B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACtE,CAAC;QAChB01B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACqP,CAAC;QAChB+hB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACsP,CAAC;MAEjB;IAED,CAAC,MAAM;MAEN,IAAKkvD,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAACypB,UAAU,CAAE,IAAI,CAACT,IAAI,EAAE7+D,CAAC,CAAE;MAE7BigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB;EAED;;EAEA;;EAEA,SAASu/D,UAAUA,CAAE1pB,EAAE,EAAE71C,CAAC,EAAG;IAE5B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAMtwB,QAAQ,GAAGd,CAAC,CAACc,QAAQ;IAE3B,IAAKA,QAAQ,KAAKlZ,SAAS,EAAG;MAE7B,IAAK42E,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAAC2pB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAE7+D,CAAC,CAAE;MAE1CigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB,CAAC,MAAM;MAEN,IAAKw+D,WAAW,CAAEptC,KAAK,EAAEtwB,QAAQ,CAAE,EAAG;MAEtCq9D,SAAS,CAACz/D,GAAG,CAAEoC,QAAQ,CAAE;MAEzB+0C,EAAE,CAAC2pB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAEV,SAAS,CAAE;MAElDl+B,SAAS,CAAE7O,KAAK,EAAEtwB,QAAQ,CAAE;IAE7B;EAED;EAEA,SAAS2+D,UAAUA,CAAE5pB,EAAE,EAAE71C,CAAC,EAAG;IAE5B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAMtwB,QAAQ,GAAGd,CAAC,CAACc,QAAQ;IAE3B,IAAKA,QAAQ,KAAKlZ,SAAS,EAAG;MAE7B,IAAK42E,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAAC6pB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAE7+D,CAAC,CAAE;MAE1CigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB,CAAC,MAAM;MAEN,IAAKw+D,WAAW,CAAEptC,KAAK,EAAEtwB,QAAQ,CAAE,EAAG;MAEtCo9D,SAAS,CAACx/D,GAAG,CAAEoC,QAAQ,CAAE;MAEzB+0C,EAAE,CAAC6pB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAEX,SAAS,CAAE;MAElDj+B,SAAS,CAAE7O,KAAK,EAAEtwB,QAAQ,CAAE;IAE7B;EAED;EAEA,SAAS6+D,UAAUA,CAAE9pB,EAAE,EAAE71C,CAAC,EAAG;IAE5B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAMtwB,QAAQ,GAAGd,CAAC,CAACc,QAAQ;IAE3B,IAAKA,QAAQ,KAAKlZ,SAAS,EAAG;MAE7B,IAAK42E,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAAC+pB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAE7+D,CAAC,CAAE;MAE1CigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB,CAAC,MAAM;MAEN,IAAKw+D,WAAW,CAAEptC,KAAK,EAAEtwB,QAAQ,CAAE,EAAG;MAEtCm9D,SAAS,CAACv/D,GAAG,CAAEoC,QAAQ,CAAE;MAEzB+0C,EAAE,CAAC+pB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAEZ,SAAS,CAAE;MAElDh+B,SAAS,CAAE7O,KAAK,EAAEtwB,QAAQ,CAAE;IAE7B;EAED;;EAEA;;EAEA,SAAS++D,WAAWA,CAAEhqB,EAAE,EAAE71C,CAAC,EAAG;IAE7B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,EAAG;IAExB61C,EAAE,CAACiqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAE7+D,CAAC,CAAE;IAE5BoxB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC;EAEf;;EAEA;;EAEA,SAAS+/D,WAAWA,CAAElqB,EAAE,EAAE71C,CAAC,EAAG;IAE7B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKpxB,CAAC,CAAC5E,CAAC,KAAKxT,SAAS,EAAG;MAExB,IAAKwpC,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAAC5E,CAAC,IAAIg2B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACtE,CAAC,EAAG;QAE/Cm6C,EAAE,CAACmqB,SAAS,CAAE,IAAI,CAACnB,IAAI,EAAE7+D,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,CAAE;QAEnC01B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAAC5E,CAAC;QAChBg2B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACtE,CAAC;MAEjB;IAED,CAAC,MAAM;MAEN,IAAK8iE,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAACoqB,UAAU,CAAE,IAAI,CAACpB,IAAI,EAAE7+D,CAAC,CAAE;MAE7BigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB;EAED;EAEA,SAASkgE,WAAWA,CAAErqB,EAAE,EAAE71C,CAAC,EAAG;IAE7B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKpxB,CAAC,CAAC5E,CAAC,KAAKxT,SAAS,EAAG;MAExB,IAAKwpC,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAAC5E,CAAC,IAAIg2B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACtE,CAAC,IAAI01B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACqP,CAAC,EAAG;QAErEwmC,EAAE,CAACsqB,SAAS,CAAE,IAAI,CAACtB,IAAI,EAAE7+D,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,EAAEsE,CAAC,CAACqP,CAAC,CAAE;QAExC+hB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAAC5E,CAAC;QAChBg2B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACtE,CAAC;QAChB01B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACqP,CAAC;MAEjB;IAED,CAAC,MAAM;MAEN,IAAKmvD,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAACuqB,UAAU,CAAE,IAAI,CAACvB,IAAI,EAAE7+D,CAAC,CAAE;MAE7BigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB;EAED;EAEA,SAASqgE,WAAWA,CAAExqB,EAAE,EAAE71C,CAAC,EAAG;IAE7B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKpxB,CAAC,CAAC5E,CAAC,KAAKxT,SAAS,EAAG;MAExB,IAAKwpC,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAAC5E,CAAC,IAAIg2B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACtE,CAAC,IAAI01B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACqP,CAAC,IAAI+hB,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACsP,CAAC,EAAG;QAE3FumC,EAAE,CAACyqB,SAAS,CAAE,IAAI,CAACzB,IAAI,EAAE7+D,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,EAAEsE,CAAC,CAACqP,CAAC,EAAErP,CAAC,CAACsP,CAAC,CAAE;QAE7C8hB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAAC5E,CAAC;QAChBg2B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACtE,CAAC;QAChB01B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACqP,CAAC;QAChB+hB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACsP,CAAC;MAEjB;IAED,CAAC,MAAM;MAEN,IAAKkvD,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAAC0qB,UAAU,CAAE,IAAI,CAAC1B,IAAI,EAAE7+D,CAAC,CAAE;MAE7BigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB;EAED;;EAEA;;EAEA,SAASwgE,YAAYA,CAAE3qB,EAAE,EAAE71C,CAAC,EAAG;IAE9B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,EAAG;IAExB61C,EAAE,CAAC4qB,UAAU,CAAE,IAAI,CAAC5B,IAAI,EAAE7+D,CAAC,CAAE;IAE7BoxB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC;EAEf;;EAEA;;EAEA,SAAS0gE,YAAYA,CAAE7qB,EAAE,EAAE71C,CAAC,EAAG;IAE9B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKpxB,CAAC,CAAC5E,CAAC,KAAKxT,SAAS,EAAG;MAExB,IAAKwpC,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAAC5E,CAAC,IAAIg2B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACtE,CAAC,EAAG;QAE/Cm6C,EAAE,CAAC8qB,UAAU,CAAE,IAAI,CAAC9B,IAAI,EAAE7+D,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,CAAE;QAEpC01B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAAC5E,CAAC;QAChBg2B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACtE,CAAC;MAEjB;IAED,CAAC,MAAM;MAEN,IAAK8iE,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAAC+qB,WAAW,CAAE,IAAI,CAAC/B,IAAI,EAAE7+D,CAAC,CAAE;MAE9BigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB;EAED;EAEA,SAAS6gE,YAAYA,CAAEhrB,EAAE,EAAE71C,CAAC,EAAG;IAE9B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKpxB,CAAC,CAAC5E,CAAC,KAAKxT,SAAS,EAAG;MAExB,IAAKwpC,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAAC5E,CAAC,IAAIg2B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACtE,CAAC,IAAI01B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACqP,CAAC,EAAG;QAErEwmC,EAAE,CAACirB,UAAU,CAAE,IAAI,CAACjC,IAAI,EAAE7+D,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,EAAEsE,CAAC,CAACqP,CAAC,CAAE;QAEzC+hB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAAC5E,CAAC;QAChBg2B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACtE,CAAC;QAChB01B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACqP,CAAC;MAEjB;IAED,CAAC,MAAM;MAEN,IAAKmvD,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAACkrB,WAAW,CAAE,IAAI,CAAClC,IAAI,EAAE7+D,CAAC,CAAE;MAE9BigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB;EAED;EAEA,SAASghE,YAAYA,CAAEnrB,EAAE,EAAE71C,CAAC,EAAG;IAE9B,IAAMoxB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKpxB,CAAC,CAAC5E,CAAC,KAAKxT,SAAS,EAAG;MAExB,IAAKwpC,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAAC5E,CAAC,IAAIg2B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACtE,CAAC,IAAI01B,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACqP,CAAC,IAAI+hB,KAAK,CAAE,CAAC,CAAE,KAAKpxB,CAAC,CAACsP,CAAC,EAAG;QAE3FumC,EAAE,CAACorB,UAAU,CAAE,IAAI,CAACpC,IAAI,EAAE7+D,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,EAAEsE,CAAC,CAACqP,CAAC,EAAErP,CAAC,CAACsP,CAAC,CAAE;QAE9C8hB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAAC5E,CAAC;QAChBg2B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACtE,CAAC;QAChB01B,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACqP,CAAC;QAChB+hB,KAAK,CAAE,CAAC,CAAE,GAAGpxB,CAAC,CAACsP,CAAC;MAEjB;IAED,CAAC,MAAM;MAEN,IAAKkvD,WAAW,CAAEptC,KAAK,EAAEpxB,CAAC,CAAE,EAAG;MAE/B61C,EAAE,CAACqrB,WAAW,CAAE,IAAI,CAACrC,IAAI,EAAE7+D,CAAC,CAAE;MAE9BigC,SAAS,CAAE7O,KAAK,EAAEpxB,CAAC,CAAE;IAEtB;EAED;;EAGA;;EAEA,SAASmhE,UAAUA,CAAEtrB,EAAE,EAAE71C,CAAC,EAAE8O,QAAQ,EAAG;IAEtC,IAAMsiB,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAMgwC,IAAI,GAAGtyD,QAAQ,CAAC4vD,mBAAmB,EAAE;IAE3C,IAAKttC,KAAK,CAAE,CAAC,CAAE,KAAKgwC,IAAI,EAAG;MAE1BvrB,EAAE,CAACiqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAI,CAAE;MAC/BhwC,KAAK,CAAE,CAAC,CAAE,GAAGgwC,IAAI;IAElB;IAEAtyD,QAAQ,CAACuyD,YAAY,CAAErhE,CAAC,IAAI29D,YAAY,EAAEyD,IAAI,CAAE;EAEjD;EAEA,SAASE,YAAYA,CAAEzrB,EAAE,EAAE71C,CAAC,EAAE8O,QAAQ,EAAG;IAExC,IAAMsiB,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAMgwC,IAAI,GAAGtyD,QAAQ,CAAC4vD,mBAAmB,EAAE;IAE3C,IAAKttC,KAAK,CAAE,CAAC,CAAE,KAAKgwC,IAAI,EAAG;MAE1BvrB,EAAE,CAACiqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAI,CAAE;MAC/BhwC,KAAK,CAAE,CAAC,CAAE,GAAGgwC,IAAI;IAElB;IAEAtyD,QAAQ,CAACyyD,YAAY,CAAEvhE,CAAC,IAAI69D,cAAc,EAAEuD,IAAI,CAAE;EAEnD;EAEA,SAASI,UAAUA,CAAE3rB,EAAE,EAAE71C,CAAC,EAAE8O,QAAQ,EAAG;IAEtC,IAAMsiB,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAMgwC,IAAI,GAAGtyD,QAAQ,CAAC4vD,mBAAmB,EAAE;IAE3C,IAAKttC,KAAK,CAAE,CAAC,CAAE,KAAKgwC,IAAI,EAAG;MAE1BvrB,EAAE,CAACiqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAI,CAAE;MAC/BhwC,KAAK,CAAE,CAAC,CAAE,GAAGgwC,IAAI;IAElB;IAEAtyD,QAAQ,CAAC2yD,cAAc,CAAEzhE,CAAC,IAAI89D,gBAAgB,EAAEsD,IAAI,CAAE;EAEvD;EAEA,SAASM,iBAAiBA,CAAE7rB,EAAE,EAAE71C,CAAC,EAAE8O,QAAQ,EAAG;IAE7C,IAAMsiB,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAMgwC,IAAI,GAAGtyD,QAAQ,CAAC4vD,mBAAmB,EAAE;IAE3C,IAAKttC,KAAK,CAAE,CAAC,CAAE,KAAKgwC,IAAI,EAAG;MAE1BvrB,EAAE,CAACiqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAI,CAAE;MAC/BhwC,KAAK,CAAE,CAAC,CAAE,GAAGgwC,IAAI;IAElB;IAEAtyD,QAAQ,CAAC6yD,iBAAiB,CAAE3hE,CAAC,IAAI49D,iBAAiB,EAAEwD,IAAI,CAAE;EAE3D;;EAEA;;EAEA,SAASQ,iBAAiBA,CAAEz8E,IAAI,EAAG;IAElC,QAASA,IAAI;MAEZ,KAAK,MAAM;QAAE,OAAOw5E,WAAW;MAAE;MACjC,KAAK,MAAM;QAAE,OAAOG,WAAW;MAAE;MACjC,KAAK,MAAM;QAAE,OAAOG,WAAW;MAAE;MACjC,KAAK,MAAM;QAAE,OAAOG,WAAW;MAAE;;MAEjC,KAAK,MAAM;QAAE,OAAOG,UAAU;MAAE;MAChC,KAAK,MAAM;QAAE,OAAOE,UAAU;MAAE;MAChC,KAAK,MAAM;QAAE,OAAOE,UAAU;MAAE;;MAEhC,KAAK,MAAM;MAAE,KAAK,MAAM;QAAE,OAAOE,WAAW;MAAE;MAC9C,KAAK,MAAM;MAAE,KAAK,MAAM;QAAE,OAAOE,WAAW;MAAE;MAC9C,KAAK,MAAM;MAAE,KAAK,MAAM;QAAE,OAAOG,WAAW;MAAE;MAC9C,KAAK,MAAM;MAAE,KAAK,MAAM;QAAE,OAAOG,WAAW;MAAE;;MAE9C,KAAK,MAAM;QAAE,OAAOG,YAAY;MAAE;MAClC,KAAK,MAAM;QAAE,OAAOE,YAAY;MAAE;MAClC,KAAK,MAAM;QAAE,OAAOG,YAAY;MAAE;MAClC,KAAK,MAAM;QAAE,OAAOG,YAAY;MAAE;;MAElC,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM;QAAE;QACZ,OAAOG,UAAU;MAElB,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM;QAAE;QACZ,OAAOG,YAAY;MAEpB,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM;QAAE;QACZ,OAAOE,UAAU;MAElB,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM;QAAE;QACZ,OAAOE,iBAAiB;IAAC;EAI5B;;EAGA;;EAEA,SAASG,gBAAgBA,CAAEhsB,EAAE,EAAE71C,CAAC,EAAG;IAElC61C,EAAE,CAACisB,UAAU,CAAE,IAAI,CAACjD,IAAI,EAAE7+D,CAAC,CAAE;EAE9B;;EAEA;;EAEA,SAAS+hE,gBAAgBA,CAAElsB,EAAE,EAAE71C,CAAC,EAAG;IAElC,IAAMwL,IAAI,GAAG4yD,OAAO,CAAEp+D,CAAC,EAAE,IAAI,CAAC2c,IAAI,EAAE,CAAC,CAAE;IAEvCk5B,EAAE,CAACmpB,UAAU,CAAE,IAAI,CAACH,IAAI,EAAErzD,IAAI,CAAE;EAEjC;EAEA,SAASw2D,gBAAgBA,CAAEnsB,EAAE,EAAE71C,CAAC,EAAG;IAElC,IAAMwL,IAAI,GAAG4yD,OAAO,CAAEp+D,CAAC,EAAE,IAAI,CAAC2c,IAAI,EAAE,CAAC,CAAE;IAEvCk5B,EAAE,CAACspB,UAAU,CAAE,IAAI,CAACN,IAAI,EAAErzD,IAAI,CAAE;EAEjC;EAEA,SAASy2D,gBAAgBA,CAAEpsB,EAAE,EAAE71C,CAAC,EAAG;IAElC,IAAMwL,IAAI,GAAG4yD,OAAO,CAAEp+D,CAAC,EAAE,IAAI,CAAC2c,IAAI,EAAE,CAAC,CAAE;IAEvCk5B,EAAE,CAACypB,UAAU,CAAE,IAAI,CAACT,IAAI,EAAErzD,IAAI,CAAE;EAEjC;;EAEA;;EAEA,SAAS02D,eAAeA,CAAErsB,EAAE,EAAE71C,CAAC,EAAG;IAEjC,IAAMwL,IAAI,GAAG4yD,OAAO,CAAEp+D,CAAC,EAAE,IAAI,CAAC2c,IAAI,EAAE,CAAC,CAAE;IAEvCk5B,EAAE,CAAC2pB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAErzD,IAAI,CAAE;EAE9C;EAEA,SAAS22D,eAAeA,CAAEtsB,EAAE,EAAE71C,CAAC,EAAG;IAEjC,IAAMwL,IAAI,GAAG4yD,OAAO,CAAEp+D,CAAC,EAAE,IAAI,CAAC2c,IAAI,EAAE,CAAC,CAAE;IAEvCk5B,EAAE,CAAC6pB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAErzD,IAAI,CAAE;EAE9C;EAEA,SAAS42D,eAAeA,CAAEvsB,EAAE,EAAE71C,CAAC,EAAG;IAEjC,IAAMwL,IAAI,GAAG4yD,OAAO,CAAEp+D,CAAC,EAAE,IAAI,CAAC2c,IAAI,EAAE,EAAE,CAAE;IAExCk5B,EAAE,CAAC+pB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAErzD,IAAI,CAAE;EAE9C;;EAEA;;EAEA,SAAS62D,gBAAgBA,CAAExsB,EAAE,EAAE71C,CAAC,EAAG;IAElC61C,EAAE,CAACysB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAE7+D,CAAC,CAAE;EAE9B;;EAEA;;EAEA,SAASuiE,gBAAgBA,CAAE1sB,EAAE,EAAE71C,CAAC,EAAG;IAElC61C,EAAE,CAACoqB,UAAU,CAAE,IAAI,CAACpB,IAAI,EAAE7+D,CAAC,CAAE;EAE9B;EAEA,SAASwiE,gBAAgBA,CAAE3sB,EAAE,EAAE71C,CAAC,EAAG;IAElC61C,EAAE,CAACuqB,UAAU,CAAE,IAAI,CAACvB,IAAI,EAAE7+D,CAAC,CAAE;EAE9B;EAEA,SAASyiE,gBAAgBA,CAAE5sB,EAAE,EAAE71C,CAAC,EAAG;IAElC61C,EAAE,CAAC0qB,UAAU,CAAE,IAAI,CAAC1B,IAAI,EAAE7+D,CAAC,CAAE;EAE9B;;EAEA;;EAEA,SAAS0iE,iBAAiBA,CAAE7sB,EAAE,EAAE71C,CAAC,EAAG;IAEnC61C,EAAE,CAAC8sB,WAAW,CAAE,IAAI,CAAC9D,IAAI,EAAE7+D,CAAC,CAAE;EAE/B;;EAEA;;EAEA,SAAS4iE,iBAAiBA,CAAE/sB,EAAE,EAAE71C,CAAC,EAAG;IAEnC61C,EAAE,CAAC+qB,WAAW,CAAE,IAAI,CAAC/B,IAAI,EAAE7+D,CAAC,CAAE;EAE/B;EAEA,SAAS6iE,iBAAiBA,CAAEhtB,EAAE,EAAE71C,CAAC,EAAG;IAEnC61C,EAAE,CAACkrB,WAAW,CAAE,IAAI,CAAClC,IAAI,EAAE7+D,CAAC,CAAE;EAE/B;EAEA,SAAS8iE,iBAAiBA,CAAEjtB,EAAE,EAAE71C,CAAC,EAAG;IAEnC61C,EAAE,CAACqrB,WAAW,CAAE,IAAI,CAACrC,IAAI,EAAE7+D,CAAC,CAAE;EAE/B;;EAGA;;EAEA,SAAS+iE,eAAeA,CAAEltB,EAAE,EAAE71C,CAAC,EAAE8O,QAAQ,EAAG;IAE3C,IAAMsiB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAMn2B,CAAC,GAAG+E,CAAC,CAAC9W,MAAM;IAElB,IAAM85E,KAAK,GAAGvE,aAAa,CAAE3vD,QAAQ,EAAE7T,CAAC,CAAE;IAE1C,IAAK,CAAEujE,WAAW,CAAEptC,KAAK,EAAE4xC,KAAK,CAAE,EAAG;MAEpCntB,EAAE,CAACysB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAK,CAAE;MAEjC/iC,SAAS,CAAE7O,KAAK,EAAE4xC,KAAK,CAAE;IAE1B;IAEA,KAAM,IAAI75E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;MAEhC2lB,QAAQ,CAACuyD,YAAY,CAAErhE,CAAC,CAAE7W,CAAC,CAAE,IAAIw0E,YAAY,EAAEqF,KAAK,CAAE75E,CAAC,CAAE,CAAE;IAE5D;EAED;EAEA,SAAS85E,gBAAgBA,CAAEptB,EAAE,EAAE71C,CAAC,EAAE8O,QAAQ,EAAG;IAE5C,IAAMsiB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAMn2B,CAAC,GAAG+E,CAAC,CAAC9W,MAAM;IAElB,IAAM85E,KAAK,GAAGvE,aAAa,CAAE3vD,QAAQ,EAAE7T,CAAC,CAAE;IAE1C,IAAK,CAAEujE,WAAW,CAAEptC,KAAK,EAAE4xC,KAAK,CAAE,EAAG;MAEpCntB,EAAE,CAACysB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAK,CAAE;MAEjC/iC,SAAS,CAAE7O,KAAK,EAAE4xC,KAAK,CAAE;IAE1B;IAEA,KAAM,IAAI75E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;MAEhC2lB,QAAQ,CAACyyD,YAAY,CAAEvhE,CAAC,CAAE7W,CAAC,CAAE,IAAI00E,cAAc,EAAEmF,KAAK,CAAE75E,CAAC,CAAE,CAAE;IAE9D;EAED;EAEA,SAAS+5E,eAAeA,CAAErtB,EAAE,EAAE71C,CAAC,EAAE8O,QAAQ,EAAG;IAE3C,IAAMsiB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAMn2B,CAAC,GAAG+E,CAAC,CAAC9W,MAAM;IAElB,IAAM85E,KAAK,GAAGvE,aAAa,CAAE3vD,QAAQ,EAAE7T,CAAC,CAAE;IAE1C,IAAK,CAAEujE,WAAW,CAAEptC,KAAK,EAAE4xC,KAAK,CAAE,EAAG;MAEpCntB,EAAE,CAACysB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAK,CAAE;MAEjC/iC,SAAS,CAAE7O,KAAK,EAAE4xC,KAAK,CAAE;IAE1B;IAEA,KAAM,IAAI75E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;MAEhC2lB,QAAQ,CAAC2yD,cAAc,CAAEzhE,CAAC,CAAE7W,CAAC,CAAE,IAAI20E,gBAAgB,EAAEkF,KAAK,CAAE75E,CAAC,CAAE,CAAE;IAElE;EAED;EAEA,SAASg6E,qBAAqBA,CAAEttB,EAAE,EAAE71C,CAAC,EAAE8O,QAAQ,EAAG;IAEjD,IAAMsiB,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAMn2B,CAAC,GAAG+E,CAAC,CAAC9W,MAAM;IAElB,IAAM85E,KAAK,GAAGvE,aAAa,CAAE3vD,QAAQ,EAAE7T,CAAC,CAAE;IAE1C,IAAK,CAAEujE,WAAW,CAAEptC,KAAK,EAAE4xC,KAAK,CAAE,EAAG;MAEpCntB,EAAE,CAACysB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAK,CAAE;MAEjC/iC,SAAS,CAAE7O,KAAK,EAAE4xC,KAAK,CAAE;IAE1B;IAEA,KAAM,IAAI75E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;MAEhC2lB,QAAQ,CAAC6yD,iBAAiB,CAAE3hE,CAAC,CAAE7W,CAAC,CAAE,IAAIy0E,iBAAiB,EAAEoF,KAAK,CAAE75E,CAAC,CAAE,CAAE;IAEtE;EAED;;EAGA;;EAEA,SAASi6E,kBAAkBA,CAAEj+E,IAAI,EAAG;IAEnC,QAASA,IAAI;MAEZ,KAAK,MAAM;QAAE,OAAO08E,gBAAgB;MAAE;MACtC,KAAK,MAAM;QAAE,OAAOE,gBAAgB;MAAE;MACtC,KAAK,MAAM;QAAE,OAAOC,gBAAgB;MAAE;MACtC,KAAK,MAAM;QAAE,OAAOC,gBAAgB;MAAE;;MAEtC,KAAK,MAAM;QAAE,OAAOC,eAAe;MAAE;MACrC,KAAK,MAAM;QAAE,OAAOC,eAAe;MAAE;MACrC,KAAK,MAAM;QAAE,OAAOC,eAAe;MAAE;;MAErC,KAAK,MAAM;MAAE,KAAK,MAAM;QAAE,OAAOC,gBAAgB;MAAE;MACnD,KAAK,MAAM;MAAE,KAAK,MAAM;QAAE,OAAOE,gBAAgB;MAAE;MACnD,KAAK,MAAM;MAAE,KAAK,MAAM;QAAE,OAAOC,gBAAgB;MAAE;MACnD,KAAK,MAAM;MAAE,KAAK,MAAM;QAAE,OAAOC,gBAAgB;MAAE;;MAEnD,KAAK,MAAM;QAAE,OAAOC,iBAAiB;MAAE;MACvC,KAAK,MAAM;QAAE,OAAOE,iBAAiB;MAAE;MACvC,KAAK,MAAM;QAAE,OAAOC,iBAAiB;MAAE;MACvC,KAAK,MAAM;QAAE,OAAOC,iBAAiB;MAAE;;MAEvC,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM;QAAE;QACZ,OAAOC,eAAe;MAEvB,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM;QAAE;QACZ,OAAOE,gBAAgB;MAExB,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM;QAAE;QACZ,OAAOC,eAAe;MAEvB,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM,CAAC,CAAC;MACb,KAAK,MAAM;QAAE;QACZ,OAAOC,qBAAqB;IAAC;EAIhC;;EAEA;EAAA,IAEME,aAAa,gBAAAn3E,YAAA,CAElB,SAAAm3E,cAAa/0C,EAAE,EAAEg1C,UAAU,EAAEzE,IAAI,EAAG;IAAAnzE,eAAA,OAAA23E,aAAA;IAEnC,IAAI,CAAC/0C,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACuwC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACztC,KAAK,GAAG,EAAE;IACf,IAAI,CAAC8rC,QAAQ,GAAG0E,iBAAiB,CAAE0B,UAAU,CAACn+E,IAAI,CAAE;;IAEpD;EAED,CAAC;EAAA,IAIIo+E,gBAAgB,gBAAAr3E,YAAA,CAErB,SAAAq3E,iBAAaj1C,EAAE,EAAEg1C,UAAU,EAAEzE,IAAI,EAAG;IAAAnzE,eAAA,OAAA63E,gBAAA;IAEnC,IAAI,CAACj1C,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACuwC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACztC,KAAK,GAAG,EAAE;IACf,IAAI,CAACzU,IAAI,GAAG2mD,UAAU,CAAC3mD,IAAI;IAC3B,IAAI,CAACugD,QAAQ,GAAGkG,kBAAkB,CAAEE,UAAU,CAACn+E,IAAI,CAAE;;IAErD;EAED,CAAC;EAAA,IAIIq+E,iBAAiB;IAEtB,SAAAA,kBAAal1C,EAAE,EAAG;MAAA5iC,eAAA,OAAA83E,iBAAA;MAEjB,IAAI,CAACl1C,EAAE,GAAGA,EAAE;MAEZ,IAAI,CAACm1C,GAAG,GAAG,EAAE;MACb,IAAI,CAAC7qC,GAAG,GAAG,CAAC,CAAC;IAEd;IAAC1sC,YAAA,CAAAs3E,iBAAA;MAAApgF,GAAA;MAAAE,KAAA,EAED,SAAA45E,SAAUrnB,EAAE,EAAEvyD,KAAK,EAAEwrB,QAAQ,EAAG;QAE/B,IAAM20D,GAAG,GAAG,IAAI,CAACA,GAAG;QAEpB,KAAM,IAAIt6E,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGwoE,GAAG,CAACv6E,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEhD,IAAM2yB,CAAC,GAAG2nD,GAAG,CAAEt6E,CAAC,CAAE;UAClB2yB,CAAC,CAACohD,QAAQ,CAAErnB,EAAE,EAAEvyD,KAAK,CAAEw4B,CAAC,CAACwS,EAAE,CAAE,EAAExf,QAAQ,CAAE;QAE1C;MAED;IAAC;IAAA,OAAA00D,iBAAA;EAAA,KAIF;EAEA;EAEA,IAAME,UAAU,GAAG,qBAAqB;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASC,UAAUA,CAAEC,SAAS,EAAEC,aAAa,EAAG;IAE/CD,SAAS,CAACH,GAAG,CAAC96E,IAAI,CAAEk7E,aAAa,CAAE;IACnCD,SAAS,CAAChrC,GAAG,CAAEirC,aAAa,CAACv1C,EAAE,CAAE,GAAGu1C,aAAa;EAElD;EAEA,SAASC,YAAYA,CAAER,UAAU,EAAEzE,IAAI,EAAE+E,SAAS,EAAG;IAEpD,IAAMG,IAAI,GAAGT,UAAU,CAAC75E,IAAI;MAC3Bu6E,UAAU,GAAGD,IAAI,CAAC76E,MAAM;;IAEzB;IACAw6E,UAAU,CAACO,SAAS,GAAG,CAAC;IAExB,OAAQ,IAAI,EAAG;MAEd,IAAMC,KAAK,GAAGR,UAAU,CAACjnC,IAAI,CAAEsnC,IAAI,CAAE;QACpCI,QAAQ,GAAGT,UAAU,CAACO,SAAS;MAEhC,IAAI31C,IAAE,GAAG41C,KAAK,CAAE,CAAC,CAAE;MACnB,IAAME,SAAS,GAAGF,KAAK,CAAE,CAAC,CAAE,KAAK,GAAG;QACnCG,SAAS,GAAGH,KAAK,CAAE,CAAC,CAAE;MAEvB,IAAKE,SAAS,EAAG91C,IAAE,GAAGA,IAAE,GAAG,CAAC,CAAC,CAAC;;MAE9B,IAAK+1C,SAAS,KAAKz8E,SAAS,IAAIy8E,SAAS,KAAK,GAAG,IAAIF,QAAQ,GAAG,CAAC,KAAKH,UAAU,EAAG;QAElF;;QAEAL,UAAU,CAAEC,SAAS,EAAES,SAAS,KAAKz8E,SAAS,GAC7C,IAAIy7E,aAAa,CAAE/0C,IAAE,EAAEg1C,UAAU,EAAEzE,IAAI,CAAE,GACzC,IAAI0E,gBAAgB,CAAEj1C,IAAE,EAAEg1C,UAAU,EAAEzE,IAAI,CAAE,CAAE;QAE/C;MAED,CAAC,MAAM;QAEN;;QAEA,IAAMjmC,GAAG,GAAGgrC,SAAS,CAAChrC,GAAG;QACzB,IAAI3wC,IAAI,GAAG2wC,GAAG,CAAEtK,IAAE,CAAE;QAEpB,IAAKrmC,IAAI,KAAKL,SAAS,EAAG;UAEzBK,IAAI,GAAG,IAAIu7E,iBAAiB,CAAEl1C,IAAE,CAAE;UAClCq1C,UAAU,CAAEC,SAAS,EAAE37E,IAAI,CAAE;QAE9B;QAEA27E,SAAS,GAAG37E,IAAI;MAEjB;IAED;EAED;;EAEA;EAAA,IAEMq8E,aAAa;IAElB,SAAAA,cAAazuB,EAAE,EAAE0V,OAAO,EAAG;MAAA7/D,eAAA,OAAA44E,aAAA;MAE1B,IAAI,CAACb,GAAG,GAAG,EAAE;MACb,IAAI,CAAC7qC,GAAG,GAAG,CAAC,CAAC;MAEb,IAAM39B,CAAC,GAAG46C,EAAE,CAAC0uB,mBAAmB,CAAEhZ,OAAO,EAAE1V,EAAE,CAAC2uB,eAAe,CAAE;MAE/D,KAAM,IAAIr7E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;QAE9B,IAAMpB,IAAI,GAAG8tD,EAAE,CAAC4uB,gBAAgB,CAAElZ,OAAO,EAAEpiE,CAAC,CAAE;UAC7C01E,IAAI,GAAGhpB,EAAE,CAAC6uB,kBAAkB,CAAEnZ,OAAO,EAAExjE,IAAI,CAAC0B,IAAI,CAAE;QAEnDq6E,YAAY,CAAE/7E,IAAI,EAAE82E,IAAI,EAAE,IAAI,CAAE;MAEjC;IAED;IAAC3yE,YAAA,CAAAo4E,aAAA;MAAAlhF,GAAA;MAAAE,KAAA,EAED,SAAA45E,SAAUrnB,EAAE,EAAEpsD,IAAI,EAAEnG,KAAK,EAAEwrB,QAAQ,EAAG;QAErC,IAAMgN,CAAC,GAAG,IAAI,CAAC8c,GAAG,CAAEnvC,IAAI,CAAE;QAE1B,IAAKqyB,CAAC,KAAKl0B,SAAS,EAAGk0B,CAAC,CAACohD,QAAQ,CAAErnB,EAAE,EAAEvyD,KAAK,EAAEwrB,QAAQ,CAAE;MAEzD;IAAC;MAAA1rB,GAAA;MAAAE,KAAA,EAED,SAAAqhF,YAAa9uB,EAAE,EAAE1rD,MAAM,EAAEV,IAAI,EAAG;QAE/B,IAAMuW,CAAC,GAAG7V,MAAM,CAAEV,IAAI,CAAE;QAExB,IAAKuW,CAAC,KAAKpY,SAAS,EAAG,IAAI,CAACs1E,QAAQ,CAAErnB,EAAE,EAAEpsD,IAAI,EAAEuW,CAAC,CAAE;MAEpD;IAAC;MAAA5c,GAAA;MAAAE,KAAA,EAED,SAAAshF,OAAe/uB,EAAE,EAAE4tB,GAAG,EAAE79E,MAAM,EAAEkpB,QAAQ,EAAG;QAE1C,KAAM,IAAI3lB,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGwoE,GAAG,CAACv6E,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEhD,IAAM2yB,CAAC,GAAG2nD,GAAG,CAAEt6E,CAAC,CAAE;YACjB6W,CAAC,GAAGpa,MAAM,CAAEk2B,CAAC,CAACwS,EAAE,CAAE;UAEnB,IAAKtuB,CAAC,CAAC6O,WAAW,KAAK,KAAK,EAAG;YAE9B;YACAiN,CAAC,CAACohD,QAAQ,CAAErnB,EAAE,EAAE71C,CAAC,CAAC1c,KAAK,EAAEwrB,QAAQ,CAAE;UAEpC;QAED;MAED;IAAC;MAAA1rB,GAAA;MAAAE,KAAA,EAED,SAAAuhF,aAAqBpB,GAAG,EAAE79E,MAAM,EAAG;QAElC,IAAMohB,CAAC,GAAG,EAAE;QAEZ,KAAM,IAAI7d,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGwoE,GAAG,CAACv6E,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEhD,IAAM2yB,CAAC,GAAG2nD,GAAG,CAAEt6E,CAAC,CAAE;UAClB,IAAK2yB,CAAC,CAACwS,EAAE,IAAI1oC,MAAM,EAAGohB,CAAC,CAACre,IAAI,CAAEmzB,CAAC,CAAE;QAElC;QAEA,OAAO9U,CAAC;MAET;IAAC;IAAA,OAAAs9D,aAAA;EAAA;EAIF,SAASQ,WAAWA,CAAEjvB,EAAE,EAAE1wD,IAAI,EAAEo3C,MAAM,EAAG;IAExC,IAAMuV,MAAM,GAAG+D,EAAE,CAACkvB,YAAY,CAAE5/E,IAAI,CAAE;IAEtC0wD,EAAE,CAACmvB,YAAY,CAAElzB,MAAM,EAAEvV,MAAM,CAAE;IACjCsZ,EAAE,CAACovB,aAAa,CAAEnzB,MAAM,CAAE;IAE1B,OAAOA,MAAM;EAEd;EAEA,IAAIozB,cAAc,GAAG,CAAC;EAEtB,SAASC,YAAYA,CAAE5oC,MAAM,EAAE6oC,SAAS,EAAG;IAE1C,IAAMnK,KAAK,GAAG1+B,MAAM,CAAC8oC,KAAK,CAAE,IAAI,CAAE;IAClC,IAAMC,MAAM,GAAG,EAAE;IAEjB,IAAMh5D,IAAI,GAAGpS,IAAI,CAACa,GAAG,CAAEqqE,SAAS,GAAG,CAAC,EAAE,CAAC,CAAE;IACzC,IAAMG,EAAE,GAAGrrE,IAAI,CAACY,GAAG,CAAEsqE,SAAS,GAAG,CAAC,EAAEnK,KAAK,CAAC/xE,MAAM,CAAE;IAElD,KAAM,IAAIC,CAAC,GAAGmjB,IAAI,EAAEnjB,CAAC,GAAGo8E,EAAE,EAAEp8E,CAAC,EAAG,EAAG;MAElC,IAAM2pD,IAAI,GAAG3pD,CAAC,GAAG,CAAC;MAClBm8E,MAAM,CAAC38E,IAAI,IAAAshB,MAAA,CAAK6oC,IAAI,KAAKsyB,SAAS,GAAG,GAAG,GAAG,GAAG,OAAAn7D,MAAA,CAAI6oC,IAAI,QAAA7oC,MAAA,CAAKgxD,KAAK,CAAE9xE,CAAC,CAAE,EAAI;IAE1E;IAEA,OAAOm8E,MAAM,CAACE,IAAI,CAAE,IAAI,CAAE;EAE3B;EAEA,SAASC,qBAAqBA,CAAEl4D,QAAQ,EAAG;IAE1C,QAASA,QAAQ;MAEhB,KAAK7W,cAAc;QAClB,OAAO,CAAE,QAAQ,EAAE,WAAW,CAAE;MACjC,KAAKC,YAAY;QAChB,OAAO,CAAE,MAAM,EAAE,WAAW,CAAE;MAC/B;QACC9J,OAAO,CAACC,IAAI,CAAE,2CAA2C,EAAEygB,QAAQ,CAAE;QACrE,OAAO,CAAE,QAAQ,EAAE,WAAW,CAAE;IAAC;EAIpC;EAEA,SAASm4D,eAAeA,CAAE7vB,EAAE,EAAE/D,MAAM,EAAE3sD,IAAI,EAAG;IAE5C,IAAMwgF,MAAM,GAAG9vB,EAAE,CAAC+vB,kBAAkB,CAAE9zB,MAAM,EAAE+D,EAAE,CAACgwB,cAAc,CAAE;IACjE,IAAMC,MAAM,GAAGjwB,EAAE,CAACkwB,gBAAgB,CAAEj0B,MAAM,CAAE,CAACk0B,IAAI,EAAE;IAEnD,IAAKL,MAAM,IAAIG,MAAM,KAAK,EAAE,EAAG,OAAO,EAAE;IAExC,IAAMG,YAAY,GAAG,gBAAgB,CAACxpC,IAAI,CAAEqpC,MAAM,CAAE;IACpD,IAAKG,YAAY,EAAG;MAEnB;MACA;;MAEA,IAAMb,SAAS,GAAGzoC,QAAQ,CAAEspC,YAAY,CAAE,CAAC,CAAE,CAAE;MAC/C,OAAO9gF,IAAI,CAAC+gF,WAAW,EAAE,GAAG,MAAM,GAAGJ,MAAM,GAAG,MAAM,GAAGX,YAAY,CAAEtvB,EAAE,CAACswB,eAAe,CAAEr0B,MAAM,CAAE,EAAEszB,SAAS,CAAE;IAE/G,CAAC,MAAM;MAEN,OAAOU,MAAM;IAEd;EAED;EAEA,SAASM,wBAAwBA,CAAEC,YAAY,EAAE94D,QAAQ,EAAG;IAE3D,IAAMmvB,UAAU,GAAG+oC,qBAAqB,CAAEl4D,QAAQ,CAAE;IACpD,OAAO,OAAO,GAAG84D,YAAY,GAAG,kCAAkC,GAAG3pC,UAAU,CAAE,CAAC,CAAE,GAAGA,UAAU,CAAE,CAAC,CAAE,GAAG,KAAK;EAE/G;EAEA,SAAS4pC,sBAAsBA,CAAED,YAAY,EAAEv1B,WAAW,EAAG;IAE5D,IAAIy1B,eAAe;IAEnB,QAASz1B,WAAW;MAEnB,KAAK9/C,iBAAiB;QACrBu1E,eAAe,GAAG,QAAQ;QAC1B;MAED,KAAKt1E,mBAAmB;QACvBs1E,eAAe,GAAG,UAAU;QAC5B;MAED,KAAKr1E,iBAAiB;QACrBq1E,eAAe,GAAG,iBAAiB;QACnC;MAED,KAAKp1E,qBAAqB;QACzBo1E,eAAe,GAAG,YAAY;QAC9B;MAED,KAAKn1E,iBAAiB;QACrBm1E,eAAe,GAAG,QAAQ;QAC1B;MAED;QACC15E,OAAO,CAACC,IAAI,CAAE,8CAA8C,EAAEgkD,WAAW,CAAE;QAC3Ey1B,eAAe,GAAG,QAAQ;IAAC;IAI7B,OAAO,OAAO,GAAGF,YAAY,GAAG,0BAA0B,GAAGE,eAAe,GAAG,yBAAyB;EAEzG;EAEA,SAASC,kBAAkBA,CAAE91C,UAAU,EAAG;IAEzC,IAAM+1C,MAAM,GAAG,CACZ/1C,UAAU,CAACg2C,oBAAoB,IAAI,CAAC,CAAEh2C,UAAU,CAACi2C,kBAAkB,IAAIj2C,UAAU,CAACyI,OAAO,IAAIzI,UAAU,CAACk2C,qBAAqB,IAAIl2C,UAAU,CAAC2H,kBAAkB,IAAI3H,UAAU,CAAC4K,WAAW,IAAI5K,UAAU,CAACm2C,QAAQ,KAAK,UAAU,GAAK,iDAAiD,GAAG,EAAE,EAC3R,CAAEn2C,UAAU,CAACo2C,kBAAkB,IAAIp2C,UAAU,CAACu/B,sBAAsB,KAAMv/B,UAAU,CAACq2C,0BAA0B,GAAG,uCAAuC,GAAG,EAAE,EAC5Jr2C,UAAU,CAACs2C,oBAAoB,IAAIt2C,UAAU,CAACu2C,4BAA4B,GAAK,0CAA0C,GAAG,EAAE,EAChI,CAAEv2C,UAAU,CAACw2C,yBAAyB,IAAIx2C,UAAU,CAACuJ,MAAM,IAAIvJ,UAAU,CAAC6J,YAAY,KAAM7J,UAAU,CAACy2C,iCAAiC,GAAG,+CAA+C,GAAG,EAAE,CAC/L;IAED,OAAOV,MAAM,CAACW,MAAM,CAAEC,eAAe,CAAE,CAAC7B,IAAI,CAAE,IAAI,CAAE;EAErD;EAEA,SAAS8B,eAAeA,CAAEz6B,OAAO,EAAG;IAEnC,IAAM45B,MAAM,GAAG,EAAE;IAEjB,KAAM,IAAMh9E,IAAI,IAAIojD,OAAO,EAAG;MAE7B,IAAMvpD,OAAK,GAAGupD,OAAO,CAAEpjD,IAAI,CAAE;MAE7B,IAAKnG,OAAK,KAAK,KAAK,EAAG;MAEvBmjF,MAAM,CAAC99E,IAAI,CAAE,UAAU,GAAGc,IAAI,GAAG,GAAG,GAAGnG,OAAK,CAAE;IAE/C;IAEA,OAAOmjF,MAAM,CAACjB,IAAI,CAAE,IAAI,CAAE;EAE3B;EAEA,SAAS+B,uBAAuBA,CAAE1xB,EAAE,EAAE0V,OAAO,EAAG;IAE/C,IAAMztC,UAAU,GAAG,CAAC,CAAC;IAErB,IAAM7iB,CAAC,GAAG46C,EAAE,CAAC0uB,mBAAmB,CAAEhZ,OAAO,EAAE1V,EAAE,CAAC2xB,iBAAiB,CAAE;IAEjE,KAAM,IAAIr+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8R,CAAC,EAAE9R,CAAC,EAAG,EAAG;MAE9B,IAAMpB,IAAI,GAAG8tD,EAAE,CAAC4xB,eAAe,CAAElc,OAAO,EAAEpiE,CAAC,CAAE;MAC7C,IAAMM,IAAI,GAAG1B,IAAI,CAAC0B,IAAI;MAEtB,IAAIwkE,YAAY,GAAG,CAAC;MACpB,IAAKlmE,IAAI,CAAC5C,IAAI,KAAK0wD,EAAE,CAAC6xB,UAAU,EAAGzZ,YAAY,GAAG,CAAC;MACnD,IAAKlmE,IAAI,CAAC5C,IAAI,KAAK0wD,EAAE,CAAC8xB,UAAU,EAAG1Z,YAAY,GAAG,CAAC;MACnD,IAAKlmE,IAAI,CAAC5C,IAAI,KAAK0wD,EAAE,CAAC+xB,UAAU,EAAG3Z,YAAY,GAAG,CAAC;;MAEnD;;MAEAnwC,UAAU,CAAEr0B,IAAI,CAAE,GAAG;QACpBtE,IAAI,EAAE4C,IAAI,CAAC5C,IAAI;QACf+nE,QAAQ,EAAErX,EAAE,CAACgyB,iBAAiB,CAAEtc,OAAO,EAAE9hE,IAAI,CAAE;QAC/CwkE,YAAY,EAAEA;MACf,CAAC;IAEF;IAEA,OAAOnwC,UAAU;EAElB;EAEA,SAASupD,eAAeA,CAAE9qC,MAAM,EAAG;IAElC,OAAOA,MAAM,KAAK,EAAE;EAErB;EAEA,SAASurC,gBAAgBA,CAAEvrC,MAAM,EAAE7L,UAAU,EAAG;IAE/C,IAAMq3C,kBAAkB,GAAGr3C,UAAU,CAACs3C,mBAAmB,GAAGt3C,UAAU,CAACu3C,gBAAgB,GAAGv3C,UAAU,CAACw3C,2BAA2B;IAEhI,OAAO3rC,MAAM,CACX4rC,OAAO,CAAE,iBAAiB,EAAEz3C,UAAU,CAAC03C,YAAY,CAAE,CACrDD,OAAO,CAAE,kBAAkB,EAAEz3C,UAAU,CAAC23C,aAAa,CAAE,CACvDF,OAAO,CAAE,sBAAsB,EAAEz3C,UAAU,CAACu3C,gBAAgB,CAAE,CAC9DE,OAAO,CAAE,wBAAwB,EAAEJ,kBAAkB,CAAE,CACvDI,OAAO,CAAE,uBAAuB,EAAEz3C,UAAU,CAAC43C,iBAAiB,CAAE,CAChEH,OAAO,CAAE,mBAAmB,EAAEz3C,UAAU,CAAC63C,cAAc,CAAE,CACzDJ,OAAO,CAAE,kBAAkB,EAAEz3C,UAAU,CAAC83C,aAAa,CAAE,CACvDL,OAAO,CAAE,wBAAwB,EAAEz3C,UAAU,CAAC+3C,kBAAkB,CAAE,CAClEN,OAAO,CAAE,mCAAmC,EAAEz3C,UAAU,CAACw3C,2BAA2B,CAAE,CACtFC,OAAO,CAAE,yBAAyB,EAAEz3C,UAAU,CAACs3C,mBAAmB,CAAE,CACpEG,OAAO,CAAE,0BAA0B,EAAEz3C,UAAU,CAACg4C,oBAAoB,CAAE;EAEzE;EAEA,SAASC,wBAAwBA,CAAEpsC,MAAM,EAAE7L,UAAU,EAAG;IAEvD,OAAO6L,MAAM,CACX4rC,OAAO,CAAE,sBAAsB,EAAEz3C,UAAU,CAACk4C,iBAAiB,CAAE,CAC/DT,OAAO,CAAE,wBAAwB,EAAIz3C,UAAU,CAACk4C,iBAAiB,GAAGl4C,UAAU,CAACm4C,mBAAmB,CAAI;EAEzG;;EAEA;;EAEA,IAAMC,cAAc,GAAG,kCAAkC;EAEzD,SAASC,eAAeA,CAAExsC,MAAM,EAAG;IAElC,OAAOA,MAAM,CAAC4rC,OAAO,CAAEW,cAAc,EAAEE,eAAe,CAAE;EAEzD;EAEA,SAASA,eAAeA,CAAE9E,KAAK,EAAE+E,OAAO,EAAG;IAE1C,IAAM1sC,MAAM,GAAGikB,WAAW,CAAEyoB,OAAO,CAAE;IAErC,IAAK1sC,MAAM,KAAK30C,SAAS,EAAG;MAE3B,MAAM,IAAIX,KAAK,CAAE,4BAA4B,GAAGgiF,OAAO,GAAG,GAAG,CAAE;IAEhE;IAEA,OAAOF,eAAe,CAAExsC,MAAM,CAAE;EAEjC;;EAEA;;EAEA,IAAM2sC,iBAAiB,GAAG,8IAA8I;EAExK,SAASC,WAAWA,CAAE5sC,MAAM,EAAG;IAE9B,OAAOA,MAAM,CAAC4rC,OAAO,CAAEe,iBAAiB,EAAEE,YAAY,CAAE;EAEzD;EAEA,SAASA,YAAYA,CAAElF,KAAK,EAAEvgC,KAAK,EAAEiG,GAAG,EAAEy/B,OAAO,EAAG;IAEnD,IAAI9sC,MAAM,GAAG,EAAE;IAEf,KAAM,IAAIpzC,CAAC,GAAGwzC,QAAQ,CAAEgH,KAAK,CAAE,EAAEx6C,CAAC,GAAGwzC,QAAQ,CAAEiN,GAAG,CAAE,EAAEzgD,CAAC,EAAG,EAAG;MAE5DozC,MAAM,IAAI8sC,OAAO,CACflB,OAAO,CAAE,cAAc,EAAE,IAAI,GAAGh/E,CAAC,GAAG,IAAI,CAAE,CAC1Cg/E,OAAO,CAAE,sBAAsB,EAAEh/E,CAAC,CAAE;IAEvC;IAEA,OAAOozC,MAAM;EAEd;;EAEA;;EAEA,SAAS+sC,iBAAiBA,CAAE54C,UAAU,EAAG;IAExC,IAAI64C,eAAe,GAAG,YAAY,GAAG74C,UAAU,CAAC0F,SAAS,GAAG,qBAAqB,GAAG1F,UAAU,CAAC0F,SAAS,GAAG,OAAO;IAElH,IAAK1F,UAAU,CAAC0F,SAAS,KAAK,OAAO,EAAG;MAEvCmzC,eAAe,IAAI,0BAA0B;IAE9C,CAAC,MAAM,IAAK74C,UAAU,CAAC0F,SAAS,KAAK,SAAS,EAAG;MAEhDmzC,eAAe,IAAI,4BAA4B;IAEhD,CAAC,MAAM,IAAK74C,UAAU,CAAC0F,SAAS,KAAK,MAAM,EAAG;MAE7CmzC,eAAe,IAAI,yBAAyB;IAE7C;IAEA,OAAOA,eAAe;EAEvB;EAEA,SAASC,2BAA2BA,CAAE94C,UAAU,EAAG;IAElD,IAAI+4C,mBAAmB,GAAG,sBAAsB;IAEhD,IAAK/4C,UAAU,CAACg5C,aAAa,KAAKn7E,YAAY,EAAG;MAEhDk7E,mBAAmB,GAAG,oBAAoB;IAE3C,CAAC,MAAM,IAAK/4C,UAAU,CAACg5C,aAAa,KAAKl7E,gBAAgB,EAAG;MAE3Di7E,mBAAmB,GAAG,yBAAyB;IAEhD,CAAC,MAAM,IAAK/4C,UAAU,CAACg5C,aAAa,KAAKj7E,YAAY,EAAG;MAEvDg7E,mBAAmB,GAAG,oBAAoB;IAE3C;IAEA,OAAOA,mBAAmB;EAE3B;EAEA,SAASE,wBAAwBA,CAAEj5C,UAAU,EAAG;IAE/C,IAAIk5C,gBAAgB,GAAG,kBAAkB;IAEzC,IAAKl5C,UAAU,CAACuJ,MAAM,EAAG;MAExB,QAASvJ,UAAU,CAACm5C,UAAU;QAE7B,KAAKv4E,qBAAqB;QAC1B,KAAKC,qBAAqB;UACzBq4E,gBAAgB,GAAG,kBAAkB;UACrC;QAED,KAAKl4E,uBAAuB;UAC3Bk4E,gBAAgB,GAAG,qBAAqB;UACxC;MAAM;IAIT;IAEA,OAAOA,gBAAgB;EAExB;EAEA,SAASE,wBAAwBA,CAAEp5C,UAAU,EAAG;IAE/C,IAAIq5C,gBAAgB,GAAG,wBAAwB;IAE/C,IAAKr5C,UAAU,CAACuJ,MAAM,EAAG;MAExB,QAASvJ,UAAU,CAACm5C,UAAU;QAE7B,KAAKt4E,qBAAqB;UAEzBw4E,gBAAgB,GAAG,wBAAwB;UAC3C;MAAM;IAIT;IAEA,OAAOA,gBAAgB;EAExB;EAEA,SAASC,4BAA4BA,CAAEt5C,UAAU,EAAG;IAEnD,IAAIu5C,oBAAoB,GAAG,sBAAsB;IAEjD,IAAKv5C,UAAU,CAACuJ,MAAM,EAAG;MAExB,QAASvJ,UAAU,CAACwJ,OAAO;QAE1B,KAAKtpC,iBAAiB;UACrBq5E,oBAAoB,GAAG,0BAA0B;UACjD;QAED,KAAKp5E,YAAY;UAChBo5E,oBAAoB,GAAG,qBAAqB;UAC5C;QAED,KAAKn5E,YAAY;UAChBm5E,oBAAoB,GAAG,qBAAqB;UAC5C;MAAM;IAIT;IAEA,OAAOA,oBAAoB;EAE5B;EAEA,SAASC,kBAAkBA,CAAEx5C,UAAU,EAAG;IAEzC,IAAMy5C,WAAW,GAAGz5C,UAAU,CAACi2C,kBAAkB;IAEjD,IAAKwD,WAAW,KAAK,IAAI,EAAG,OAAO,IAAI;IAEvC,IAAMC,MAAM,GAAGlwE,IAAI,CAACi8D,IAAI,CAAEgU,WAAW,CAAE,GAAG,CAAC;IAE3C,IAAME,WAAW,GAAG,GAAG,GAAGF,WAAW;IAErC,IAAMG,UAAU,GAAG,GAAG,IAAK,CAAC,GAAGpwE,IAAI,CAACa,GAAG,CAAEb,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAE+sE,MAAM,CAAE,EAAE,CAAC,GAAG,EAAE,CAAE,CAAE;IAE1E,OAAO;MAAEE,UAAU,EAAVA,UAAU;MAAED,WAAW,EAAXA,WAAW;MAAED,MAAM,EAANA;IAAO,CAAC;EAE3C;EAEA,SAASG,YAAYA,CAAEr+B,QAAQ,EAAEs+B,QAAQ,EAAE95C,UAAU,EAAEu6B,aAAa,EAAG;IAEtE;IACA;;IAEA,IAAMpV,EAAE,GAAG3J,QAAQ,CAACphC,UAAU,EAAE;IAEhC,IAAM+hC,OAAO,GAAGnc,UAAU,CAACmc,OAAO;IAElC,IAAIE,YAAY,GAAGrc,UAAU,CAACqc,YAAY;IAC1C,IAAIC,cAAc,GAAGtc,UAAU,CAACsc,cAAc;IAE9C,IAAMy8B,mBAAmB,GAAGD,2BAA2B,CAAE94C,UAAU,CAAE;IACrE,IAAMk5C,gBAAgB,GAAGD,wBAAwB,CAAEj5C,UAAU,CAAE;IAC/D,IAAMq5C,gBAAgB,GAAGD,wBAAwB,CAAEp5C,UAAU,CAAE;IAC/D,IAAMu5C,oBAAoB,GAAGD,4BAA4B,CAAEt5C,UAAU,CAAE;IACvE,IAAM+5C,gBAAgB,GAAGP,kBAAkB,CAAEx5C,UAAU,CAAE;IAEzD,IAAMg6C,gBAAgB,GAAGh6C,UAAU,CAACqlB,QAAQ,GAAG,EAAE,GAAGywB,kBAAkB,CAAE91C,UAAU,CAAE;IAEpF,IAAMi6C,aAAa,GAAGrD,eAAe,CAAEz6B,OAAO,CAAE;IAEhD,IAAM0e,OAAO,GAAG1V,EAAE,CAAC+0B,aAAa,EAAE;IAElC,IAAIC,YAAY,EAAEC,cAAc;IAChC,IAAIC,aAAa,GAAGr6C,UAAU,CAACid,WAAW,GAAG,WAAW,GAAGjd,UAAU,CAACid,WAAW,GAAG,IAAI,GAAG,EAAE;IAE7F,IAAKjd,UAAU,CAACs6C,mBAAmB,EAAG;MAErCH,YAAY,GAAG,CAEdF,aAAa,CAEb,CAACvD,MAAM,CAAEC,eAAe,CAAE,CAAC7B,IAAI,CAAE,IAAI,CAAE;MAExC,IAAKqF,YAAY,CAAC3hF,MAAM,GAAG,CAAC,EAAG;QAE9B2hF,YAAY,IAAI,IAAI;MAErB;MAEAC,cAAc,GAAG,CAEhBJ,gBAAgB,EAChBC,aAAa,CAEb,CAACvD,MAAM,CAAEC,eAAe,CAAE,CAAC7B,IAAI,CAAE,IAAI,CAAE;MAExC,IAAKsF,cAAc,CAAC5hF,MAAM,GAAG,CAAC,EAAG;QAEhC4hF,cAAc,IAAI,IAAI;MAEvB;IAED,CAAC,MAAM;MAEND,YAAY,GAAG,CAEdvB,iBAAiB,CAAE54C,UAAU,CAAE,EAE/B,sBAAsB,GAAGA,UAAU,CAACu6C,UAAU,EAE9CN,aAAa,EAEbj6C,UAAU,CAACw6C,UAAU,GAAG,wBAAwB,GAAG,EAAE,EACrDx6C,UAAU,CAACy6C,eAAe,GAAG,8BAA8B,GAAG,EAAE,EAEhEz6C,UAAU,CAAC06C,MAAM,IAAI16C,UAAU,CAAC6K,GAAG,GAAG,iBAAiB,GAAG,EAAE,EAC5D7K,UAAU,CAAC06C,MAAM,IAAI16C,UAAU,CAAC26C,OAAO,GAAG,kBAAkB,GAAG,EAAE,EAEjE36C,UAAU,CAACkI,GAAG,GAAG,iBAAiB,GAAG,EAAE,EACvClI,UAAU,CAACuJ,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7CvJ,UAAU,CAACuJ,MAAM,GAAG,UAAU,GAAG8vC,gBAAgB,GAAG,EAAE,EACtDr5C,UAAU,CAACqI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDrI,UAAU,CAACuI,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3CvI,UAAU,CAACyI,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAC/CzI,UAAU,CAAC2I,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnD3I,UAAU,CAAC46C,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAC1E56C,UAAU,CAACk2C,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5El2C,UAAU,CAAC8I,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/D9I,UAAU,CAACmJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvDnJ,UAAU,CAACyH,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDzH,UAAU,CAAC0H,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5E1H,UAAU,CAAC2H,kBAAkB,GAAG,iCAAiC,GAAG,EAAE,EAEtE3H,UAAU,CAACgI,cAAc,GAAG,4BAA4B,GAAG,EAAE,EAC7DhI,UAAU,CAACiI,uBAAuB,GAAG,sCAAsC,GAAG,EAAE,EAEhFjI,UAAU,CAACoJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvDpJ,UAAU,CAACsJ,gBAAgB,GAAG,+BAA+B,GAAG,EAAE,EAClEtJ,UAAU,CAACqJ,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAE1ErJ,UAAU,CAACiJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDjJ,UAAU,CAACkJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDlJ,UAAU,CAACoI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EAEjDpI,UAAU,CAAC6J,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD7J,UAAU,CAAC8J,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/D9J,UAAU,CAACgK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzDhK,UAAU,CAAC43B,aAAa,GAAG,4BAA4B,GAAG,EAAE,EAC5D53B,UAAU,CAAC83B,iBAAiB,GAAG,gCAAgC,GAAG,EAAE;MAEpE;;MAEA93B,UAAU,CAAC66C,KAAK,GAAG,iBAAiB,GAAG76C,UAAU,CAAC66C,KAAK,GAAG,EAAE,EAC5D76C,UAAU,CAAC86C,UAAU,GAAG,sBAAsB,GAAG96C,UAAU,CAAC86C,UAAU,GAAG,EAAE,EAC3E96C,UAAU,CAAC+6C,UAAU,GAAG,sBAAsB,GAAG/6C,UAAU,CAAC+6C,UAAU,GAAG,EAAE,EAC3E/6C,UAAU,CAACg7C,OAAO,GAAG,mBAAmB,GAAGh7C,UAAU,CAACg7C,OAAO,GAAG,EAAE,EAClEh7C,UAAU,CAACi7C,aAAa,GAAG,yBAAyB,GAAGj7C,UAAU,CAACi7C,aAAa,GAAG,EAAE,EACpFj7C,UAAU,CAACk7C,SAAS,GAAG,qBAAqB,GAAGl7C,UAAU,CAACk7C,SAAS,GAAG,EAAE,EACxEl7C,UAAU,CAACm7C,WAAW,GAAG,uBAAuB,GAAGn7C,UAAU,CAACm7C,WAAW,GAAG,EAAE,EAC9En7C,UAAU,CAACo7C,iBAAiB,GAAG,6BAA6B,GAAGp7C,UAAU,CAACo7C,iBAAiB,GAAG,EAAE,EAEhGp7C,UAAU,CAACq7C,cAAc,GAAG,0BAA0B,GAAGr7C,UAAU,CAACq7C,cAAc,GAAG,EAAE,EACvFr7C,UAAU,CAACs7C,cAAc,GAAG,0BAA0B,GAAGt7C,UAAU,CAACs7C,cAAc,GAAG,EAAE,EAEvFt7C,UAAU,CAACu7C,cAAc,GAAG,0BAA0B,GAAGv7C,UAAU,CAACu7C,cAAc,GAAG,EAAE,EACvFv7C,UAAU,CAACw7C,oBAAoB,GAAG,iCAAiC,GAAGx7C,UAAU,CAACw7C,oBAAoB,GAAG,EAAE,EAC1Gx7C,UAAU,CAACy7C,uBAAuB,GAAG,oCAAoC,GAAGz7C,UAAU,CAACy7C,uBAAuB,GAAG,EAAE,EAEnHz7C,UAAU,CAAC07C,gBAAgB,GAAG,4BAA4B,GAAG17C,UAAU,CAAC07C,gBAAgB,GAAG,EAAE,EAC7F17C,UAAU,CAAC27C,yBAAyB,GAAG,sCAAsC,GAAG37C,UAAU,CAAC27C,yBAAyB,GAAG,EAAE,EAEzH37C,UAAU,CAAC47C,eAAe,GAAG,4BAA4B,GAAG57C,UAAU,CAAC47C,eAAe,GAAG,EAAE,EAC3F57C,UAAU,CAAC67C,mBAAmB,GAAG,gCAAgC,GAAG77C,UAAU,CAAC67C,mBAAmB,GAAG,EAAE,EAEvG77C,UAAU,CAAC87C,aAAa,GAAG,yBAAyB,GAAG97C,UAAU,CAAC87C,aAAa,GAAG,EAAE,EACpF97C,UAAU,CAAC+7C,kBAAkB,GAAG,+BAA+B,GAAG/7C,UAAU,CAAC+7C,kBAAkB,GAAG,EAAE,EACpG/7C,UAAU,CAACg8C,sBAAsB,GAAG,mCAAmC,GAAGh8C,UAAU,CAACg8C,sBAAsB,GAAG,EAAE,EAEhHh8C,UAAU,CAACi8C,iBAAiB,GAAG,6BAA6B,GAAGj8C,UAAU,CAACi8C,iBAAiB,GAAG,EAAE,EAChGj8C,UAAU,CAACk8C,cAAc,GAAG,0BAA0B,GAAGl8C,UAAU,CAACk8C,cAAc,GAAG,EAAE;MAEvF;;MAEAl8C,UAAU,CAACm8C,cAAc,GAAG,qBAAqB,GAAG,EAAE,EACtDn8C,UAAU,CAACiE,YAAY,GAAG,mBAAmB,GAAG,EAAE,EAClDjE,UAAU,CAACo8C,YAAY,GAAG,yBAAyB,GAAG,EAAE,EACxDp8C,UAAU,CAACq8C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAE9Cr8C,UAAU,CAACs8C,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDt8C,UAAU,CAAC4K,WAAW,GAAG,qBAAqB,GAAG,EAAE,EAEnD5K,UAAU,CAACu8C,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EAEjDv8C,UAAU,CAAC4rC,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD5rC,UAAU,CAAC6rC,YAAY,IAAI7rC,UAAU,CAAC4K,WAAW,KAAK,KAAK,GAAG,0BAA0B,GAAG,EAAE,EAC3F5K,UAAU,CAAC8rC,WAAW,IAAI9rC,UAAU,CAACqlB,QAAQ,GAAK,yBAAyB,GAAG,EAAE,EAChFrlB,UAAU,CAACwrC,iBAAiB,GAAG,CAAC,IAAIxrC,UAAU,CAACqlB,QAAQ,GAAK,8BAA8B,GAAG,EAAE,EAC/FrlB,UAAU,CAACwrC,iBAAiB,GAAG,CAAC,IAAIxrC,UAAU,CAACqlB,QAAQ,GAAK,sCAAsC,GAAGrlB,UAAU,CAACw8C,kBAAkB,GAAG,EAAE,EACvIx8C,UAAU,CAACwrC,iBAAiB,GAAG,CAAC,IAAIxrC,UAAU,CAACqlB,QAAQ,GAAK,6BAA6B,GAAGrlB,UAAU,CAACwrC,iBAAiB,GAAG,EAAE,EAC/HxrC,UAAU,CAACy8C,WAAW,GAAG,sBAAsB,GAAG,EAAE,EACpDz8C,UAAU,CAAC08C,SAAS,GAAG,oBAAoB,GAAG,EAAE,EAEhD18C,UAAU,CAAC28C,gBAAgB,GAAG,uBAAuB,GAAG,EAAE,EAC1D38C,UAAU,CAAC28C,gBAAgB,GAAG,UAAU,GAAG5D,mBAAmB,GAAG,EAAE,EAEnE/4C,UAAU,CAACmK,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAE/DnK,UAAU,CAACu/B,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAChEv/B,UAAU,CAACu/B,sBAAsB,IAAIv/B,UAAU,CAACq2C,0BAA0B,GAAK,6BAA6B,GAAG,EAAE,EAEnH,2BAA2B,EAC3B,+BAA+B,EAC/B,gCAAgC,EAChC,0BAA0B,EAC1B,4BAA4B,EAC5B,8BAA8B,EAC9B,8BAA8B,EAE9B,uBAAuB,EAEvB,iCAAiC,EAEjC,QAAQ,EAER,6BAA6B,EAE7B,gCAAgC,EAEhC,QAAQ,EAER,0BAA0B,EAC1B,wBAAwB,EACxB,oBAAoB,EAEpB,oBAAoB,EAEpB,0BAA0B,EAE1B,QAAQ,EAER,gCAAgC,EAEhC,wBAAwB,EAExB,4BAA4B,EAE5B,wBAAwB,EAExB,QAAQ,EAER,0EAA0E,EAE1E,+BAA+B,EAC/B,+BAA+B,EAC/B,+BAA+B,EAC/B,+BAA+B,EAE/B,0BAA0B,EAE1B,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAEhC,QAAQ,EAER,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAEhC,SAAS,EAET,QAAQ,EAER,qBAAqB,EAErB,4BAA4B,EAC5B,6BAA6B,EAE7B,QAAQ,EAER,IAAI,CAEJ,CAACK,MAAM,CAAEC,eAAe,CAAE,CAAC7B,IAAI,CAAE,IAAI,CAAE;MAExCsF,cAAc,GAAG,CAEhBJ,gBAAgB,EAEhBpB,iBAAiB,CAAE54C,UAAU,CAAE,EAE/B,sBAAsB,GAAGA,UAAU,CAACu6C,UAAU,EAE9CN,aAAa,EAEbj6C,UAAU,CAAC06C,MAAM,IAAI16C,UAAU,CAAC6K,GAAG,GAAG,iBAAiB,GAAG,EAAE,EAC5D7K,UAAU,CAAC06C,MAAM,IAAI16C,UAAU,CAAC26C,OAAO,GAAG,kBAAkB,GAAG,EAAE,EAEjE36C,UAAU,CAACkI,GAAG,GAAG,iBAAiB,GAAG,EAAE,EACvClI,UAAU,CAACmI,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7CnI,UAAU,CAACuJ,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7CvJ,UAAU,CAACuJ,MAAM,GAAG,UAAU,GAAG2vC,gBAAgB,GAAG,EAAE,EACtDl5C,UAAU,CAACuJ,MAAM,GAAG,UAAU,GAAG8vC,gBAAgB,GAAG,EAAE,EACtDr5C,UAAU,CAACuJ,MAAM,GAAG,UAAU,GAAGgwC,oBAAoB,GAAG,EAAE,EAC1DQ,gBAAgB,GAAG,6BAA6B,GAAGA,gBAAgB,CAACH,UAAU,GAAG,EAAE,EACnFG,gBAAgB,GAAG,8BAA8B,GAAGA,gBAAgB,CAACJ,WAAW,GAAG,EAAE,EACrFI,gBAAgB,GAAG,yBAAyB,GAAGA,gBAAgB,CAACL,MAAM,GAAG,IAAI,GAAG,EAAE,EAClF15C,UAAU,CAACqI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDrI,UAAU,CAACuI,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3CvI,UAAU,CAACyI,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAC/CzI,UAAU,CAAC2I,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnD3I,UAAU,CAAC46C,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAC1E56C,UAAU,CAACk2C,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5El2C,UAAU,CAACmJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvDnJ,UAAU,CAACuH,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnDvH,UAAU,CAACyH,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDzH,UAAU,CAAC0H,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5E1H,UAAU,CAAC2H,kBAAkB,GAAG,iCAAiC,GAAG,EAAE,EAEtE3H,UAAU,CAAC6H,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvD7H,UAAU,CAACgI,cAAc,GAAG,4BAA4B,GAAG,EAAE,EAC7DhI,UAAU,CAACiI,uBAAuB,GAAG,sCAAsC,GAAG,EAAE,EAEhFjI,UAAU,CAACoJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvDpJ,UAAU,CAACsJ,gBAAgB,GAAG,+BAA+B,GAAG,EAAE,EAClEtJ,UAAU,CAACqJ,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAE1ErJ,UAAU,CAACiJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDjJ,UAAU,CAACkJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzDlJ,UAAU,CAACoI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDpI,UAAU,CAACuK,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDvK,UAAU,CAAC8G,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3C9G,UAAU,CAAC43B,aAAa,GAAG,4BAA4B,GAAG,EAAE,EAC5D53B,UAAU,CAAC83B,iBAAiB,GAAG,gCAAgC,GAAG,EAAE,EAEpE93B,UAAU,CAAC6J,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD7J,UAAU,CAAC8J,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/D9J,UAAU,CAACgK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzDhK,UAAU,CAAC48C,kBAAkB,GAAG,8BAA8B,GAAG,EAAE,EAEnE58C,UAAU,CAACm8C,cAAc,GAAG,qBAAqB,GAAG,EAAE,EACtDn8C,UAAU,CAACiE,YAAY,IAAIjE,UAAU,CAACy6C,eAAe,GAAG,mBAAmB,GAAG,EAAE,EAChFz6C,UAAU,CAACo8C,YAAY,GAAG,yBAAyB,GAAG,EAAE,EACxDp8C,UAAU,CAACq8C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAE9Cr8C,UAAU,CAACs8C,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDt8C,UAAU,CAAC4J,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvD5J,UAAU,CAAC4K,WAAW,GAAG,qBAAqB,GAAG,EAAE,EAEnD5K,UAAU,CAACy8C,WAAW,GAAG,sBAAsB,GAAG,EAAE,EACpDz8C,UAAU,CAAC08C,SAAS,GAAG,oBAAoB,GAAG,EAAE,EAEhD18C,UAAU,CAAC28C,gBAAgB,GAAG,uBAAuB,GAAG,EAAE,EAC1D38C,UAAU,CAAC28C,gBAAgB,GAAG,UAAU,GAAG5D,mBAAmB,GAAG,EAAE,EAEnE/4C,UAAU,CAACgG,kBAAkB,GAAG,6BAA6B,GAAG,EAAE,EAElEhG,UAAU,CAAC68C,eAAe,GAAG,uBAAuB,GAAG,EAAE,EAEzD78C,UAAU,CAACu/B,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAChEv/B,UAAU,CAACu/B,sBAAsB,IAAIv/B,UAAU,CAACq2C,0BAA0B,GAAK,6BAA6B,GAAG,EAAE,EAEnH,0BAA0B,EAC1B,8BAA8B,EAC9B,8BAA8B,EAE5Br2C,UAAU,CAACogB,WAAW,KAAK//C,aAAa,GAAK,sBAAsB,GAAG,EAAE,EACxE2/B,UAAU,CAACogB,WAAW,KAAK//C,aAAa,GAAKyvD,WAAW,CAAE,2BAA2B,CAAE,GAAG,EAAE;MAAE;MAC9F9vB,UAAU,CAACogB,WAAW,KAAK//C,aAAa,GAAKu1E,sBAAsB,CAAE,aAAa,EAAE51C,UAAU,CAACogB,WAAW,CAAE,GAAG,EAAE,EAEnHpgB,UAAU,CAAC8F,SAAS,GAAG,mBAAmB,GAAG,EAAE,EAC/C9F,UAAU,CAAC88C,MAAM,GAAG,gBAAgB,GAAG,EAAE,EAEzChtB,WAAW,CAAE,yBAAyB,CAAE;MAAE;MAC1C4lB,wBAAwB,CAAE,qBAAqB,EAAE11C,UAAU,CAAC0b,cAAc,CAAE,EAE5E1b,UAAU,CAAC+8C,eAAe,GAAG,wBAAwB,GAAG/8C,UAAU,CAACg9C,YAAY,GAAG,EAAE,EAEpF,IAAI,CAEJ,CAACtG,MAAM,CAAEC,eAAe,CAAE,CAAC7B,IAAI,CAAE,IAAI,CAAE;IAEzC;IAEAz4B,YAAY,GAAGg8B,eAAe,CAAEh8B,YAAY,CAAE;IAC9CA,YAAY,GAAG+6B,gBAAgB,CAAE/6B,YAAY,EAAErc,UAAU,CAAE;IAC3Dqc,YAAY,GAAG47B,wBAAwB,CAAE57B,YAAY,EAAErc,UAAU,CAAE;IAEnEsc,cAAc,GAAG+7B,eAAe,CAAE/7B,cAAc,CAAE;IAClDA,cAAc,GAAG86B,gBAAgB,CAAE96B,cAAc,EAAEtc,UAAU,CAAE;IAC/Dsc,cAAc,GAAG27B,wBAAwB,CAAE37B,cAAc,EAAEtc,UAAU,CAAE;IAEvEqc,YAAY,GAAGo8B,WAAW,CAAEp8B,YAAY,CAAE;IAC1CC,cAAc,GAAGm8B,WAAW,CAAEn8B,cAAc,CAAE;IAE9C,IAAKtc,UAAU,CAACqlB,QAAQ,IAAIrlB,UAAU,CAACs6C,mBAAmB,KAAK,IAAI,EAAG;MAErE;;MAEAD,aAAa,GAAG,mBAAmB;MAEnCF,YAAY,GAAG,CACd,mCAAmC,EACnC,sBAAsB,EACtB,qBAAqB,EACrB,2BAA2B,CAC3B,CAACrF,IAAI,CAAE,IAAI,CAAE,GAAG,IAAI,GAAGqF,YAAY;MAEpCC,cAAc,GAAG,CAChB,oBAAoB,EAClBp6C,UAAU,CAACid,WAAW,KAAK70C,KAAK,GAAK,EAAE,GAAG,mDAAmD,EAC7F43B,UAAU,CAACid,WAAW,KAAK70C,KAAK,GAAK,EAAE,GAAG,mCAAmC,EAC/E,sCAAsC,EACtC,2BAA2B,EAC3B,6BAA6B,EAC7B,mCAAmC,EACnC,oCAAoC,EACpC,4CAA4C,EAC5C,sCAAsC,EACtC,sCAAsC,EACtC,8CAA8C,EAC9C,wCAAwC,CACxC,CAAC0sE,IAAI,CAAE,IAAI,CAAE,GAAG,IAAI,GAAGsF,cAAc;IAEvC;IAEA,IAAM6C,UAAU,GAAG5C,aAAa,GAAGF,YAAY,GAAG99B,YAAY;IAC9D,IAAM6gC,YAAY,GAAG7C,aAAa,GAAGD,cAAc,GAAG99B,cAAc;;IAEpE;IACA;;IAEA,IAAM6gC,cAAc,GAAG/I,WAAW,CAAEjvB,EAAE,EAAEA,EAAE,CAAC8Z,aAAa,EAAEge,UAAU,CAAE;IACtE,IAAMG,gBAAgB,GAAGhJ,WAAW,CAAEjvB,EAAE,EAAEA,EAAE,CAACga,eAAe,EAAE+d,YAAY,CAAE;IAE5E/3B,EAAE,CAACk4B,YAAY,CAAExiB,OAAO,EAAEsiB,cAAc,CAAE;IAC1Ch4B,EAAE,CAACk4B,YAAY,CAAExiB,OAAO,EAAEuiB,gBAAgB,CAAE;;IAE5C;;IAEA,IAAKp9C,UAAU,CAAC+c,mBAAmB,KAAK7lD,SAAS,EAAG;MAEnDiuD,EAAE,CAACm4B,kBAAkB,CAAEziB,OAAO,EAAE,CAAC,EAAE76B,UAAU,CAAC+c,mBAAmB,CAAE;IAEpE,CAAC,MAAM,IAAK/c,UAAU,CAAC4rC,YAAY,KAAK,IAAI,EAAG;MAE9C;MACAzmB,EAAE,CAACm4B,kBAAkB,CAAEziB,OAAO,EAAE,CAAC,EAAE,UAAU,CAAE;IAEhD;IAEA1V,EAAE,CAACo4B,WAAW,CAAE1iB,OAAO,CAAE;;IAEzB;IACA,IAAKrf,QAAQ,CAACgiC,KAAK,CAACC,iBAAiB,EAAG;MAEvC,IAAMC,UAAU,GAAGv4B,EAAE,CAACw4B,iBAAiB,CAAE9iB,OAAO,CAAE,CAACya,IAAI,EAAE;MACzD,IAAMsI,SAAS,GAAGz4B,EAAE,CAACkwB,gBAAgB,CAAE8H,cAAc,CAAE,CAAC7H,IAAI,EAAE;MAC9D,IAAMuI,WAAW,GAAG14B,EAAE,CAACkwB,gBAAgB,CAAE+H,gBAAgB,CAAE,CAAC9H,IAAI,EAAE;MAElE,IAAIwI,QAAQ,GAAG,IAAI;MACnB,IAAIC,eAAe,GAAG,IAAI;MAE1B,IAAK54B,EAAE,CAAC0uB,mBAAmB,CAAEhZ,OAAO,EAAE1V,EAAE,CAAC64B,WAAW,CAAE,KAAK,KAAK,EAAG;QAElEF,QAAQ,GAAG,KAAK;QAEhB,IAAK,OAAOtiC,QAAQ,CAACgiC,KAAK,CAACS,aAAa,KAAK,UAAU,EAAG;UAEzDziC,QAAQ,CAACgiC,KAAK,CAACS,aAAa,CAAE94B,EAAE,EAAE0V,OAAO,EAAEsiB,cAAc,EAAEC,gBAAgB,CAAE;QAE9E,CAAC,MAAM;UAEN;;UAEA,IAAMc,YAAY,GAAGlJ,eAAe,CAAE7vB,EAAE,EAAEg4B,cAAc,EAAE,QAAQ,CAAE;UACpE,IAAMgB,cAAc,GAAGnJ,eAAe,CAAE7vB,EAAE,EAAEi4B,gBAAgB,EAAE,UAAU,CAAE;UAE1EjhF,OAAO,CAAChG,KAAK,CACZ,mCAAmC,GAAGgvD,EAAE,CAACi5B,QAAQ,EAAE,GAAG,KAAK,GAC3D,kBAAkB,GAAGj5B,EAAE,CAAC0uB,mBAAmB,CAAEhZ,OAAO,EAAE1V,EAAE,CAACk5B,eAAe,CAAE,GAAG,MAAM,GACnF,oBAAoB,GAAGX,UAAU,GAAG,IAAI,GACxCQ,YAAY,GAAG,IAAI,GACnBC,cAAc,CACd;QAEF;MAED,CAAC,MAAM,IAAKT,UAAU,KAAK,EAAE,EAAG;QAE/BvhF,OAAO,CAACC,IAAI,CAAE,uCAAuC,EAAEshF,UAAU,CAAE;MAEpE,CAAC,MAAM,IAAKE,SAAS,KAAK,EAAE,IAAIC,WAAW,KAAK,EAAE,EAAG;QAEpDE,eAAe,GAAG,KAAK;MAExB;MAEA,IAAKA,eAAe,EAAG;QAEtB,IAAI,CAACO,WAAW,GAAG;UAElBR,QAAQ,EAAEA,QAAQ;UAElBJ,UAAU,EAAEA,UAAU;UAEtBrhC,YAAY,EAAE;YAEbxvC,GAAG,EAAE+wE,SAAS;YACdW,MAAM,EAAEpE;UAET,CAAC;UAED79B,cAAc,EAAE;YAEfzvC,GAAG,EAAEgxE,WAAW;YAChBU,MAAM,EAAEnE;UAET;QAED,CAAC;MAEF;IAED;;IAEA;;IAEA;IACA;IACA;;IAEAj1B,EAAE,CAACq5B,YAAY,CAAErB,cAAc,CAAE;IACjCh4B,EAAE,CAACq5B,YAAY,CAAEpB,gBAAgB,CAAE;;IAEnC;;IAEA,IAAIqB,cAAc;IAElB,IAAI,CAAClS,WAAW,GAAG,YAAY;MAE9B,IAAKkS,cAAc,KAAKvnF,SAAS,EAAG;QAEnCunF,cAAc,GAAG,IAAI7K,aAAa,CAAEzuB,EAAE,EAAE0V,OAAO,CAAE;MAElD;MAEA,OAAO4jB,cAAc;IAEtB,CAAC;;IAED;;IAEA,IAAIviB,gBAAgB;IAEpB,IAAI,CAACI,aAAa,GAAG,YAAY;MAEhC,IAAKJ,gBAAgB,KAAKhlE,SAAS,EAAG;QAErCglE,gBAAgB,GAAG2a,uBAAuB,CAAE1xB,EAAE,EAAE0V,OAAO,CAAE;MAE1D;MAEA,OAAOqB,gBAAgB;IAExB,CAAC;;IAED;;IAEA,IAAI,CAACwiB,OAAO,GAAG,YAAY;MAE1BnkB,aAAa,CAAC2D,sBAAsB,CAAE,IAAI,CAAE;MAE5C/Y,EAAE,CAACw5B,aAAa,CAAE9jB,OAAO,CAAE;MAC3B,IAAI,CAACA,OAAO,GAAG3jE,SAAS;IAEzB,CAAC;;IAED;;IAEA,IAAI,CAAC6B,IAAI,GAAGinC,UAAU,CAACu6C,UAAU;IACjC,IAAI,CAAC38C,EAAE,GAAG42C,cAAc,EAAG;IAC3B,IAAI,CAACsF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC8E,SAAS,GAAG,CAAC;IAClB,IAAI,CAAC/jB,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACxe,YAAY,GAAG8gC,cAAc;IAClC,IAAI,CAAC7gC,cAAc,GAAG8gC,gBAAgB;IAEtC,OAAO,IAAI;EAEZ;EAEA,IAAIyB,GAAG,GAAG,CAAC;EAAC,IAENC,gBAAgB;IAErB,SAAAA,iBAAA,EAAc;MAAA9jF,eAAA,OAAA8jF,gBAAA;MAEb,IAAI,CAACC,WAAW,GAAG,IAAIC,GAAG,EAAE;MAC5B,IAAI,CAACC,aAAa,GAAG,IAAID,GAAG,EAAE;IAE/B;IAACxjF,YAAA,CAAAsjF,gBAAA;MAAApsF,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAQuc,QAAQ,EAAG;QAElB,IAAM+b,YAAY,GAAG/b,QAAQ,CAAC+b,YAAY;QAC1C,IAAMC,cAAc,GAAGhc,QAAQ,CAACgc,cAAc;QAE9C,IAAM4iC,iBAAiB,GAAG,IAAI,CAACC,eAAe,CAAE9iC,YAAY,CAAE;QAC9D,IAAM+iC,mBAAmB,GAAG,IAAI,CAACD,eAAe,CAAE7iC,cAAc,CAAE;QAElE,IAAM+iC,eAAe,GAAG,IAAI,CAACC,0BAA0B,CAAEh/C,QAAQ,CAAE;QAEnE,IAAK++C,eAAe,CAACxgB,GAAG,CAAEqgB,iBAAiB,CAAE,KAAK,KAAK,EAAG;UAEzDG,eAAe,CAAC9vE,GAAG,CAAE2vE,iBAAiB,CAAE;UACxCA,iBAAiB,CAACN,SAAS,EAAG;QAE/B;QAEA,IAAKS,eAAe,CAACxgB,GAAG,CAAEugB,mBAAmB,CAAE,KAAK,KAAK,EAAG;UAE3DC,eAAe,CAAC9vE,GAAG,CAAE6vE,mBAAmB,CAAE;UAC1CA,mBAAmB,CAACR,SAAS,EAAG;QAEjC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAlsF,GAAA;MAAAE,KAAA,EAED,SAAA2qC,OAAQ+C,QAAQ,EAAG;QAElB,IAAM++C,eAAe,GAAG,IAAI,CAACJ,aAAa,CAACpwE,GAAG,CAAEyxB,QAAQ,CAAE;QAAC,IAAAi/C,SAAA,GAAAC,0BAAA,CAEhCH,eAAe;UAAAI,KAAA;QAAA;UAA1C,KAAAF,SAAA,CAAApzE,CAAA,MAAAszE,KAAA,GAAAF,SAAA,CAAAh1E,CAAA,IAAAvT,IAAA,GAA6C;YAAA,IAAjC0oF,WAAW,GAAAD,KAAA,CAAA7sF,KAAA;YAEtB8sF,WAAW,CAACd,SAAS,EAAG;YAExB,IAAKc,WAAW,CAACd,SAAS,KAAK,CAAC,EAAG,IAAI,CAACG,WAAW,CAACr4B,MAAM,CAAEg5B,WAAW,CAACC,IAAI,CAAE;UAE/E;QAAC,SAAAlsF,GAAA;UAAA8rF,SAAA,CAAApvE,CAAA,CAAA1c,GAAA;QAAA;UAAA8rF,SAAA,CAAA/pE,CAAA;QAAA;QAED,IAAI,CAACypE,aAAa,CAACv4B,MAAM,CAAEpmB,QAAQ,CAAE;QAErC,OAAO,IAAI;MAEZ;IAAC;MAAA5tC,GAAA;MAAAE,KAAA,EAED,SAAAgtF,kBAAmBt/C,QAAQ,EAAG;QAE7B,OAAO,IAAI,CAAC6+C,eAAe,CAAE7+C,QAAQ,CAAC+b,YAAY,CAAE,CAACze,EAAE;MAExD;IAAC;MAAAlrC,GAAA;MAAAE,KAAA,EAED,SAAAitF,oBAAqBv/C,QAAQ,EAAG;QAE/B,OAAO,IAAI,CAAC6+C,eAAe,CAAE7+C,QAAQ,CAACgc,cAAc,CAAE,CAAC1e,EAAE;MAE1D;IAAC;MAAAlrC,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAACygE,WAAW,CAACthD,KAAK,EAAE;QACxB,IAAI,CAACwhD,aAAa,CAACxhD,KAAK,EAAE;MAE3B;IAAC;MAAA/qC,GAAA;MAAAE,KAAA,EAED,SAAA0sF,2BAA4Bh/C,QAAQ,EAAG;QAEtC,IAAMI,KAAK,GAAG,IAAI,CAACu+C,aAAa;QAChC,IAAIjxE,GAAG,GAAG0yB,KAAK,CAAC7xB,GAAG,CAAEyxB,QAAQ,CAAE;QAE/B,IAAKtyB,GAAG,KAAK9W,SAAS,EAAG;UAExB8W,GAAG,GAAG,IAAI8xE,GAAG,EAAE;UACfp/C,KAAK,CAAC1yB,GAAG,CAAEsyB,QAAQ,EAAEtyB,GAAG,CAAE;QAE3B;QAEA,OAAOA,GAAG;MAEX;IAAC;MAAAtb,GAAA;MAAAE,KAAA,EAED,SAAAusF,gBAAiBQ,IAAI,EAAG;QAEvB,IAAMj/C,KAAK,GAAG,IAAI,CAACq+C,WAAW;QAC9B,IAAIgB,KAAK,GAAGr/C,KAAK,CAAC7xB,GAAG,CAAE8wE,IAAI,CAAE;QAE7B,IAAKI,KAAK,KAAK7oF,SAAS,EAAG;UAE1B6oF,KAAK,GAAG,IAAIC,gBAAgB,CAAEL,IAAI,CAAE;UACpCj/C,KAAK,CAAC1yB,GAAG,CAAE2xE,IAAI,EAAEI,KAAK,CAAE;QAEzB;QAEA,OAAOA,KAAK;MAEb;IAAC;IAAA,OAAAjB,gBAAA;EAAA;EAAA,IAIIkB,gBAAgB,gBAAAxkF,YAAA,CAErB,SAAAwkF,iBAAaL,IAAI,EAAG;IAAA3kF,eAAA,OAAAglF,gBAAA;IAEnB,IAAI,CAACpiD,EAAE,GAAGihD,GAAG,EAAG;IAEhB,IAAI,CAACc,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACf,SAAS,GAAG,CAAC;EAEnB,CAAC;EAIF,SAASqB,aAAaA,CAAEzkC,QAAQ,EAAEgd,QAAQ,EAAEC,UAAU,EAAEhc,UAAU,EAAE2I,YAAY,EAAEmV,aAAa,EAAE/d,QAAQ,EAAG;IAE3G,IAAM0jC,cAAc,GAAG,IAAI5mD,MAAM,EAAE;IACnC,IAAM6mD,cAAc,GAAG,IAAIrB,gBAAgB,EAAE;IAC7C,IAAMhU,QAAQ,GAAG,EAAE;IAEnB,IAAMsV,SAAS,GAAGh7B,YAAY,CAACC,QAAQ;IACvC,IAAMka,sBAAsB,GAAGna,YAAY,CAACma,sBAAsB;IAClE,IAAM8gB,wBAAwB,GAAGj7B,YAAY,CAACmb,cAAc;IAE5D,IAAI76B,SAAS,GAAG0f,YAAY,CAAC1f,SAAS;IAEtC,IAAM46C,SAAS,GAAG;MACjBC,iBAAiB,EAAE,OAAO;MAC1BC,oBAAoB,EAAE,cAAc;MACpCC,kBAAkB,EAAE,QAAQ;MAC5BnzC,iBAAiB,EAAE,OAAO;MAC1BozC,mBAAmB,EAAE,SAAS;MAC9BC,iBAAiB,EAAE,OAAO;MAC1BC,gBAAgB,EAAE,MAAM;MACxBC,oBAAoB,EAAE,UAAU;MAChCC,oBAAoB,EAAE,UAAU;MAChCC,kBAAkB,EAAE,QAAQ;MAC5BC,iBAAiB,EAAE,OAAO;MAC1BC,kBAAkB,EAAE,QAAQ;MAC5BC,cAAc,EAAE,QAAQ;MACxBC,cAAc,EAAE,QAAQ;MACxBC,cAAc,EAAE;IACjB,CAAC;IAED,SAASC,UAAUA,CAAEzuF,KAAK,EAAG;MAE5B,IAAKA,KAAK,KAAK,CAAC,EAAG,OAAO,KAAK;MAE/B,OAAO,IAAI;IAEZ;IAEA,SAAS0uF,aAAaA,CAAEhhD,QAAQ,EAAEic,MAAM,EAAEglC,OAAO,EAAExhC,KAAK,EAAEtmD,MAAM,EAAG;MAElE,IAAMoxC,GAAG,GAAGkV,KAAK,CAAClV,GAAG;MACrB,IAAM1d,QAAQ,GAAG1zB,MAAM,CAAC0zB,QAAQ;MAChC,IAAMyS,WAAW,GAAGU,QAAQ,CAACkhD,sBAAsB,GAAGzhC,KAAK,CAACngB,WAAW,GAAG,IAAI;MAE9E,IAAM2J,MAAM,GAAG,CAAEjJ,QAAQ,CAACkhD,sBAAsB,GAAG/oB,UAAU,GAAGD,QAAQ,EAAG3pD,GAAG,CAAEyxB,QAAQ,CAACiJ,MAAM,IAAI3J,WAAW,CAAE;MAChH,IAAMq2C,kBAAkB,GAAK,CAAC,CAAE1sC,MAAM,IAAQA,MAAM,CAACntB,OAAO,KAAKpb,uBAAyB,GAAGuoC,MAAM,CAAC1vB,KAAK,CAACM,MAAM,GAAG,IAAI;MAEvH,IAAMg8D,QAAQ,GAAGmK,SAAS,CAAEhgD,QAAQ,CAAC7rC,IAAI,CAAE;;MAE3C;MACA;;MAEA,IAAK6rC,QAAQ,CAACoF,SAAS,KAAK,IAAI,EAAG;QAElCA,SAAS,GAAG0f,YAAY,CAAC2Z,eAAe,CAAEz+B,QAAQ,CAACoF,SAAS,CAAE;QAE9D,IAAKA,SAAS,KAAKpF,QAAQ,CAACoF,SAAS,EAAG;UAEvCvpC,OAAO,CAACC,IAAI,CAAE,mCAAmC,EAAEkkC,QAAQ,CAACoF,SAAS,EAAE,sBAAsB,EAAEA,SAAS,EAAE,UAAU,CAAE;QAEvH;MAED;;MAEA;;MAEA,IAAMsO,cAAc,GAAG7mB,QAAQ,CAACylB,eAAe,CAACvlB,QAAQ,IAAIF,QAAQ,CAACylB,eAAe,CAACvoB,MAAM,IAAI8C,QAAQ,CAACylB,eAAe,CAACt6B,KAAK;MAC7H,IAAMkzD,iBAAiB,GAAKx3B,cAAc,KAAK98C,SAAS,GAAK88C,cAAc,CAACx7C,MAAM,GAAG,CAAC;MAEtF,IAAIgkF,kBAAkB,GAAG,CAAC;MAE1B,IAAKrvD,QAAQ,CAACylB,eAAe,CAACvlB,QAAQ,KAAKn2B,SAAS,EAAGslF,kBAAkB,GAAG,CAAC;MAC7E,IAAKrvD,QAAQ,CAACylB,eAAe,CAACvoB,MAAM,KAAKnzB,SAAS,EAAGslF,kBAAkB,GAAG,CAAC;MAC3E,IAAKrvD,QAAQ,CAACylB,eAAe,CAACt6B,KAAK,KAAKphB,SAAS,EAAGslF,kBAAkB,GAAG,CAAC;;MAE1E;;MAEA,IAAIngC,YAAY,EAAEC,cAAc;MAChC,IAAImlC,oBAAoB,EAAEC,sBAAsB;MAEhD,IAAKvL,QAAQ,EAAG;QAEf,IAAM/0B,MAAM,GAAG2U,SAAS,CAAEogB,QAAQ,CAAE;QAEpC95B,YAAY,GAAG+E,MAAM,CAAC/E,YAAY;QAClCC,cAAc,GAAG8E,MAAM,CAAC9E,cAAc;MAEvC,CAAC,MAAM;QAEND,YAAY,GAAG/b,QAAQ,CAAC+b,YAAY;QACpCC,cAAc,GAAGhc,QAAQ,CAACgc,cAAc;QAExC6jC,cAAc,CAACp8D,MAAM,CAAEuc,QAAQ,CAAE;QAEjCmhD,oBAAoB,GAAGtB,cAAc,CAACP,iBAAiB,CAAEt/C,QAAQ,CAAE;QACnEohD,sBAAsB,GAAGvB,cAAc,CAACN,mBAAmB,CAAEv/C,QAAQ,CAAE;MAExE;MAEA,IAAM4f,mBAAmB,GAAG1E,QAAQ,CAACC,eAAe,EAAE;MAEtD,IAAMkmC,gBAAgB,GAAGloF,MAAM,CAAC0lC,eAAe,KAAK,IAAI;MAExD,IAAMyiD,OAAO,GAAG,CAAC,CAAEthD,QAAQ,CAAC4H,GAAG;MAC/B,IAAM25C,UAAU,GAAG,CAAC,CAAEvhD,QAAQ,CAAC6H,MAAM;MACrC,IAAM25C,UAAU,GAAG,CAAC,CAAEv4C,MAAM;MAC5B,IAAMw4C,SAAS,GAAG,CAAC,CAAEzhD,QAAQ,CAACiI,KAAK;MACnC,IAAMy5C,YAAY,GAAG,CAAC,CAAE1hD,QAAQ,CAAC+H,QAAQ;MACzC,IAAM45C,WAAW,GAAG,CAAC,CAAE3hD,QAAQ,CAACmI,OAAO;MACvC,IAAMy5C,aAAa,GAAG,CAAC,CAAE5hD,QAAQ,CAACqI,SAAS;MAC3C,IAAMw5C,mBAAmB,GAAG,CAAC,CAAE7hD,QAAQ,CAACwI,eAAe;MACvD,IAAMs5C,eAAe,GAAG,CAAC,CAAE9hD,QAAQ,CAAC6I,WAAW;MAE/C,IAAMk5C,gBAAgB,GAAG,CAAC,CAAE/hD,QAAQ,CAAC4I,YAAY;MACjD,IAAMo5C,gBAAgB,GAAG,CAAC,CAAEhiD,QAAQ,CAAC2I,YAAY;MAEjD,IAAMs5C,aAAa,GAAGjiD,QAAQ,CAACiH,SAAS,GAAG,CAAC;MAC5C,IAAMi7C,eAAe,GAAGliD,QAAQ,CAACuH,WAAW,GAAG,CAAC;MAChD,IAAM46C,SAAS,GAAGniD,QAAQ,CAACwG,KAAK,GAAG,CAAC;MACpC,IAAM47C,gBAAgB,GAAGpiD,QAAQ,CAACuJ,YAAY,GAAG,CAAC;MAElD,IAAM84C,gBAAgB,GAAGJ,aAAa,IAAI,CAAC,CAAEjiD,QAAQ,CAACmH,YAAY;MAClE,IAAMm7C,uBAAuB,GAAGL,aAAa,IAAI,CAAC,CAAEjiD,QAAQ,CAACqH,kBAAkB;MAC/E,IAAMk7C,0BAA0B,GAAGN,aAAa,IAAI,CAAC,CAAEjiD,QAAQ,CAACoH,qBAAqB;MAErF,IAAMo7C,kBAAkB,GAAGN,eAAe,IAAI,CAAC,CAAEliD,QAAQ,CAAC0H,cAAc;MACxE,IAAM+6C,4BAA4B,GAAGP,eAAe,IAAI,CAAC,CAAEliD,QAAQ,CAAC2H,uBAAuB;MAE3F,IAAM+6C,kBAAkB,GAAGP,SAAS,IAAI,CAAC,CAAEniD,QAAQ,CAACs3B,aAAa;MACjE,IAAMqrB,sBAAsB,GAAGR,SAAS,IAAI,CAAC,CAAEniD,QAAQ,CAACw3B,iBAAiB;MAEzE,IAAMorB,eAAe,GAAG,CAAC,CAAE5iD,QAAQ,CAAC8I,WAAW;MAC/C,IAAM+5C,qBAAqB,GAAG,CAAC,CAAE7iD,QAAQ,CAACgJ,gBAAgB;MAC1D,IAAM85C,yBAAyB,GAAG,CAAC,CAAE9iD,QAAQ,CAAC+I,oBAAoB;MAElE,IAAMg6C,mBAAmB,GAAGX,gBAAgB,IAAI,CAAC,CAAEpiD,QAAQ,CAACwJ,eAAe;MAC3E,IAAMw5C,gBAAgB,GAAGZ,gBAAgB,IAAI,CAAC,CAAEpiD,QAAQ,CAAC0J,YAAY;MAErE,IAAMu5C,eAAe,GAAG,CAAC,CAAEjjD,QAAQ,CAACsJ,WAAW;MAE/C,IAAM45C,YAAY,GAAG,CAAC,CAAEljD,QAAQ,CAAC8H,QAAQ;MAEzC,IAAMq7C,aAAa,GAAGnjD,QAAQ,CAACiK,SAAS,GAAG,CAAC;MAE5C,IAAMm5C,cAAc,GAAG,CAAC,CAAEpjD,QAAQ,CAACmc,UAAU;MAE7C,IAAMknC,iBAAiB,GAAG,CAAC,CAAEx2D,QAAQ,CAACC,UAAU,CAACiV,GAAG;MAEpD,IAAMrC,UAAU,GAAG;QAElBqlB,QAAQ,EAAE+6B,SAAS;QAEnBjK,QAAQ,EAAEA,QAAQ;QAClBoE,UAAU,EAAEj6C,QAAQ,CAAC7rC,IAAI;QAEzB4nD,YAAY,EAAEA,YAAY;QAC1BC,cAAc,EAAEA,cAAc;QAC9BH,OAAO,EAAE7b,QAAQ,CAAC6b,OAAO;QAEzBslC,oBAAoB,EAAEA,oBAAoB;QAC1CC,sBAAsB,EAAEA,sBAAsB;QAE9CpH,mBAAmB,EAAEh6C,QAAQ,CAACg6C,mBAAmB,KAAK,IAAI;QAC1Dr9B,WAAW,EAAE3c,QAAQ,CAAC2c,WAAW;QAEjCvX,SAAS,EAAEA,SAAS;QAEpB80C,UAAU,EAAEmH,gBAAgB;QAC5BlH,eAAe,EAAEkH,gBAAgB,IAAIloF,MAAM,CAAC4lC,aAAa,KAAK,IAAI;QAElEukD,sBAAsB,EAAEvD,wBAAwB;QAChD3kC,cAAc,EAAIwE,mBAAmB,KAAK,IAAI,GAAK1E,QAAQ,CAACE,cAAc,GAAKwE,mBAAmB,CAAC2jC,gBAAgB,KAAK,IAAI,GAAG3jC,mBAAmB,CAACj/B,OAAO,CAACpE,QAAQ,GAAG7W,cAAgB;QAEtLkiC,GAAG,EAAE05C,OAAO;QACZz5C,MAAM,EAAE05C,UAAU;QAClBt4C,MAAM,EAAEu4C,UAAU;QAClB3I,UAAU,EAAE2I,UAAU,IAAIv4C,MAAM,CAACntB,OAAO;QACxC65D,kBAAkB,EAAEA,kBAAkB;QACtC1tC,KAAK,EAAEw5C,SAAS;QAChB15C,QAAQ,EAAE25C,YAAY;QACtBv5C,OAAO,EAAEw5C,WAAW;QACpBt5C,SAAS,EAAEu5C,aAAa;QACxBp5C,eAAe,EAAEu3C,wBAAwB,IAAI8B,mBAAmB;QAChEh5C,WAAW,EAAEi5C,eAAe;QAE5BxH,oBAAoB,EAAEsH,aAAa,IAAI5hD,QAAQ,CAACsI,aAAa,KAAKviC,oBAAoB;QACtF6vE,qBAAqB,EAAEgM,aAAa,IAAI5hD,QAAQ,CAACsI,aAAa,KAAKxiC,qBAAqB;QAExFw2E,kBAAkB,EAAEgF,OAAO,IAAMthD,QAAQ,CAAC4H,GAAG,CAAC47C,cAAc,KAAK,IAAM,IAAMxjD,QAAQ,CAAC4H,GAAG,CAACrrB,QAAQ,KAAK5W,YAAc;QAErHijC,YAAY,EAAEm5C,gBAAgB;QAC9Bp5C,YAAY,EAAEq5C,gBAAgB;QAE9B/6C,SAAS,EAAEg7C,aAAa;QACxB96C,YAAY,EAAEk7C,gBAAgB;QAC9Bh7C,kBAAkB,EAAEi7C,uBAAuB;QAC3Cl7C,qBAAqB,EAAEm7C,0BAA0B;QAEjDh7C,WAAW,EAAE26C,eAAe;QAC5Bx6C,cAAc,EAAE86C,kBAAkB;QAClC76C,uBAAuB,EAAE86C,4BAA4B;QAErDj8C,KAAK,EAAE27C,SAAS;QAChB7qB,aAAa,EAAEorB,kBAAkB;QACjClrB,iBAAiB,EAAEmrB,sBAAsB;QAEzC75C,WAAW,EAAE85C,eAAe;QAC5B55C,gBAAgB,EAAE65C,qBAAqB;QACvC95C,oBAAoB,EAAE+5C,yBAAyB;QAE/Cv5C,YAAY,EAAE64C,gBAAgB;QAC9B54C,eAAe,EAAEu5C,mBAAmB;QACpCr5C,YAAY,EAAEs5C,gBAAgB;QAE9B15C,WAAW,EAAE25C,eAAe;QAE5BzG,MAAM,EAAEx8C,QAAQ,CAAC6D,WAAW,KAAK,KAAK,IAAI7D,QAAQ,CAACyD,QAAQ,KAAK1lC,cAAc;QAE9E+pC,QAAQ,EAAEo7C,YAAY;QACtBj5C,SAAS,EAAEk5C,aAAa;QAExBj6C,OAAO,EAAElJ,QAAQ,CAACkJ,OAAO;QAEzB;;QAEAqxC,KAAK,EAAE+G,OAAO,IAAIP,UAAU,CAAE/gD,QAAQ,CAAC4H,GAAG,CAAC/qB,OAAO,CAAE;QACpD69D,OAAO,EAAE+G,SAAS,IAAIV,UAAU,CAAE/gD,QAAQ,CAACiI,KAAK,CAACprB,OAAO,CAAE;QAC1D49D,UAAU,EAAEiH,YAAY,IAAIX,UAAU,CAAE/gD,QAAQ,CAAC+H,QAAQ,CAAClrB,OAAO,CAAE;QACnE+9D,SAAS,EAAE+G,WAAW,IAAIZ,UAAU,CAAE/gD,QAAQ,CAACmI,OAAO,CAACtrB,OAAO,CAAE;QAChEg+D,WAAW,EAAE+G,aAAa,IAAIb,UAAU,CAAE/gD,QAAQ,CAACqI,SAAS,CAACxrB,OAAO,CAAE;QACtEi+D,iBAAiB,EAAE+G,mBAAmB,IAAId,UAAU,CAAE/gD,QAAQ,CAACwI,eAAe,CAAC3rB,OAAO,CAAE;QACxF89D,aAAa,EAAEmH,eAAe,IAAIf,UAAU,CAAE/gD,QAAQ,CAAC6I,WAAW,CAAChsB,OAAO,CAAE;QAE5Ek+D,cAAc,EAAEgH,gBAAgB,IAAIhB,UAAU,CAAE/gD,QAAQ,CAAC4I,YAAY,CAAC/rB,OAAO,CAAE;QAC/Em+D,cAAc,EAAEgH,gBAAgB,IAAIjB,UAAU,CAAE/gD,QAAQ,CAAC2I,YAAY,CAAC9rB,OAAO,CAAE;QAE/Eo+D,cAAc,EAAEoH,gBAAgB,IAAItB,UAAU,CAAE/gD,QAAQ,CAACmH,YAAY,CAACtqB,OAAO,CAAE;QAC/Eq+D,oBAAoB,EAAEoH,uBAAuB,IAAIvB,UAAU,CAAE/gD,QAAQ,CAACqH,kBAAkB,CAACxqB,OAAO,CAAE;QAClGs+D,uBAAuB,EAAEoH,0BAA0B,IAAIxB,UAAU,CAAE/gD,QAAQ,CAACoH,qBAAqB,CAACvqB,OAAO,CAAE;QAE3Gu+D,gBAAgB,EAAEoH,kBAAkB,IAAIzB,UAAU,CAAE/gD,QAAQ,CAAC0H,cAAc,CAAC7qB,OAAO,CAAE;QACrFw+D,yBAAyB,EAAEoH,4BAA4B,IAAI1B,UAAU,CAAE/gD,QAAQ,CAAC2H,uBAAuB,CAAC9qB,OAAO,CAAE;QAEjHy+D,eAAe,EAAEoH,kBAAkB,IAAI3B,UAAU,CAAE/gD,QAAQ,CAACs3B,aAAa,CAACz6C,OAAO,CAAE;QACnF0+D,mBAAmB,EAAEoH,sBAAsB,IAAI5B,UAAU,CAAE/gD,QAAQ,CAACw3B,iBAAiB,CAAC36C,OAAO,CAAE;QAE/F2+D,aAAa,EAAEoH,eAAe,IAAI7B,UAAU,CAAE/gD,QAAQ,CAAC8I,WAAW,CAACjsB,OAAO,CAAE;QAC5E4+D,kBAAkB,EAAEoH,qBAAqB,IAAI9B,UAAU,CAAE/gD,QAAQ,CAACgJ,gBAAgB,CAACnsB,OAAO,CAAE;QAC5F6+D,sBAAsB,EAAEoH,yBAAyB,IAAI/B,UAAU,CAAE/gD,QAAQ,CAAC+I,oBAAoB,CAAClsB,OAAO,CAAE;QAExG8+D,iBAAiB,EAAEoH,mBAAmB,IAAIhC,UAAU,CAAE/gD,QAAQ,CAACwJ,eAAe,CAAC3sB,OAAO,CAAE;QACxF++D,cAAc,EAAEoH,gBAAgB,IAAIjC,UAAU,CAAE/gD,QAAQ,CAAC0J,YAAY,CAAC7sB,OAAO,CAAE;QAE/E29D,UAAU,EAAE0I,YAAY,IAAInC,UAAU,CAAE/gD,QAAQ,CAAC8H,QAAQ,CAACjrB,OAAO,CAAE;QAEnE;;QAEAg/D,cAAc,EAAE+F,aAAa,IAAI,CAAC,CAAE/0D,QAAQ,CAACC,UAAU,CAACwmB,OAAO;QAC/D3P,YAAY,EAAE3D,QAAQ,CAAC2D,YAAY;QACnCm4C,YAAY,EAAE97C,QAAQ,CAAC2D,YAAY,KAAK,IAAI,IAAI,CAAC,CAAE9W,QAAQ,CAACC,UAAU,CAAC9U,KAAK,IAAI6U,QAAQ,CAACC,UAAU,CAAC9U,KAAK,CAACu2B,QAAQ,KAAK,CAAC;QACxHwtC,UAAU,EAAEsH,iBAAiB;QAE7BrH,SAAS,EAAE7iF,MAAM,CAACsmC,QAAQ,KAAK,IAAI,IAAI,CAAC,CAAE5S,QAAQ,CAACC,UAAU,CAAC5O,EAAE,KAAMojE,OAAO,IAAI4B,YAAY,CAAE;QAE/F34C,GAAG,EAAE,CAAC,CAAEA,GAAG;QACX6vC,MAAM,EAAEp6C,QAAQ,CAACuK,GAAG,KAAK,IAAI;QAC7B8vC,OAAO,EAAI9vC,GAAG,IAAIA,GAAG,CAACk5C,SAAW;QAEjCn5C,WAAW,EAAEtK,QAAQ,CAACsK,WAAW,KAAK,IAAI;QAE1CT,eAAe,EAAE7J,QAAQ,CAAC6J,eAAe,KAAK,IAAI;QAClDo1B,sBAAsB,EAAEA,sBAAsB;QAE9Cgd,QAAQ,EAAE9iF,MAAM,CAACymC,aAAa,KAAK,IAAI;QAEvC0rC,YAAY,EAAEz+C,QAAQ,CAACylB,eAAe,CAACvlB,QAAQ,KAAKn2B,SAAS;QAC7D20E,YAAY,EAAE1+C,QAAQ,CAACylB,eAAe,CAACvoB,MAAM,KAAKnzB,SAAS;QAC3D40E,WAAW,EAAE3+C,QAAQ,CAACylB,eAAe,CAACt6B,KAAK,KAAKphB,SAAS;QACzDs0E,iBAAiB,EAAEA,iBAAiB;QACpCgR,kBAAkB,EAAEA,kBAAkB;QAEtC9E,YAAY,EAAEn7B,MAAM,CAACynC,WAAW,CAACxrF,MAAM;QACvCq/E,cAAc,EAAEt7B,MAAM,CAAC7vB,KAAK,CAACl0B,MAAM;QACnCm/E,aAAa,EAAEp7B,MAAM,CAAC0nC,IAAI,CAACzrF,MAAM;QACjC++E,gBAAgB,EAAEh7B,MAAM,CAACwY,YAAY,CAACv8D,MAAM;QAC5Co/E,iBAAiB,EAAEr7B,MAAM,CAAC2nC,QAAQ,CAAC1rF,MAAM;QACzCs/E,aAAa,EAAEv7B,MAAM,CAAC4nC,IAAI,CAAC3rF,MAAM;QAEjCu/E,kBAAkB,EAAEx7B,MAAM,CAACiY,oBAAoB,CAACh8D,MAAM;QACtDw/E,oBAAoB,EAAEz7B,MAAM,CAAC+Y,cAAc,CAAC98D,MAAM;QAClD8+E,mBAAmB,EAAE/6B,MAAM,CAACyY,aAAa,CAACx8D,MAAM;QAChDg/E,2BAA2B,EAAEj7B,MAAM,CAACi7B,2BAA2B;QAE/DU,iBAAiB,EAAE17B,QAAQ,CAAC0kB,SAAS;QACrCiX,mBAAmB,EAAE37B,QAAQ,CAAC2kB,eAAe;QAE7Cr7B,SAAS,EAAExF,QAAQ,CAACwF,SAAS;QAE7B62C,gBAAgB,EAAEnhC,QAAQ,CAAC4oC,SAAS,CAACtrE,OAAO,IAAIyoE,OAAO,CAAC/oF,MAAM,GAAG,CAAC;QAClEwgF,aAAa,EAAEx9B,QAAQ,CAAC4oC,SAAS,CAAC3vF,IAAI;QAEtC2rD,WAAW,EAAE9f,QAAQ,CAAC4F,UAAU,GAAGsV,QAAQ,CAAC4E,WAAW,GAAG//C,aAAa;QACvEw8E,eAAe,EAAErhC,QAAQ,CAACqhC,eAAe;QAEzC72C,kBAAkB,EAAE1F,QAAQ,CAAC0F,kBAAkB;QAE/Cy2C,WAAW,EAAEn8C,QAAQ,CAAC0D,IAAI,KAAK9lC,UAAU;QACzCw+E,SAAS,EAAEp8C,QAAQ,CAAC0D,IAAI,KAAK/lC,QAAQ;QAErC8+E,eAAe,EAAEz8C,QAAQ,CAAC08C,YAAY,IAAI,CAAC;QAC3CA,YAAY,EAAE18C,QAAQ,CAAC08C,YAAY,IAAI,CAAC;QAExCjgC,mBAAmB,EAAEzc,QAAQ,CAACyc,mBAAmB;QAEjDi5B,oBAAoB,EAAE0N,cAAc,IAAIpjD,QAAQ,CAACmc,UAAU,CAACC,WAAW,KAAK,IAAI;QAChF05B,kBAAkB,EAAEsN,cAAc,IAAIpjD,QAAQ,CAACmc,UAAU,CAACE,SAAS,KAAK,IAAI;QAC5E25B,oBAAoB,EAAEoN,cAAc,IAAIpjD,QAAQ,CAACmc,UAAU,CAACG,WAAW,KAAK,IAAI;QAChF45B,yBAAyB,EAAEkN,cAAc,IAAIpjD,QAAQ,CAACmc,UAAU,CAACI,gBAAgB,KAAK,IAAI;QAE1Fw5B,0BAA0B,EAAE+J,SAAS,IAAI3jC,UAAU,CAACoiB,GAAG,CAAE,gBAAgB,CAAE;QAC3E0X,4BAA4B,EAAE6J,SAAS,IAAI3jC,UAAU,CAACoiB,GAAG,CAAE,oBAAoB,CAAE;QACjF4X,iCAAiC,EAAE2J,SAAS,IAAI3jC,UAAU,CAACoiB,GAAG,CAAE,wBAAwB,CAAE;QAE1Fv4B,qBAAqB,EAAEhG,QAAQ,CAACgG,qBAAqB;MAEtD,CAAC;MAED,OAAOtG,UAAU;IAElB;IAEA,SAASqkD,kBAAkBA,CAAErkD,UAAU,EAAG;MAEzC,IAAM72B,KAAK,GAAG,EAAE;MAEhB,IAAK62B,UAAU,CAACm2C,QAAQ,EAAG;QAE1BhtE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACm2C,QAAQ,CAAE;MAElC,CAAC,MAAM;QAENhtE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACyhD,oBAAoB,CAAE;QAC7Ct4E,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC0hD,sBAAsB,CAAE;MAEhD;MAEA,IAAK1hD,UAAU,CAACmc,OAAO,KAAKjlD,SAAS,EAAG;QAEvC,KAAM,IAAM6B,IAAI,IAAIinC,UAAU,CAACmc,OAAO,EAAG;UAExChzC,KAAK,CAAClR,IAAI,CAAEc,IAAI,CAAE;UAClBoQ,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACmc,OAAO,CAAEpjD,IAAI,CAAE,CAAE;QAEzC;MAED;MAEA,IAAKinC,UAAU,CAACs6C,mBAAmB,KAAK,KAAK,EAAG;QAE/CgK,4BAA4B,CAAEn7E,KAAK,EAAE62B,UAAU,CAAE;QACjDukD,0BAA0B,CAAEp7E,KAAK,EAAE62B,UAAU,CAAE;QAC/C72B,KAAK,CAAClR,IAAI,CAAEujD,QAAQ,CAACE,cAAc,CAAE;MAEtC;MAEAvyC,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACsG,qBAAqB,CAAE;MAE9C,OAAOn9B,KAAK,CAAC2rE,IAAI,EAAE;IAEpB;IAEA,SAASwP,4BAA4BA,CAAEn7E,KAAK,EAAE62B,UAAU,EAAG;MAE1D72B,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC0F,SAAS,CAAE;MAClCv8B,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC0b,cAAc,CAAE;MACvCvyC,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACm5C,UAAU,CAAE;MACnChwE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACi2C,kBAAkB,CAAE;MAC3C9sE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC66C,KAAK,CAAE;MAC9B1xE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC86C,UAAU,CAAE;MACnC3xE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC+6C,UAAU,CAAE;MACnC5xE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACg7C,OAAO,CAAE;MAChC7xE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACk7C,SAAS,CAAE;MAClC/xE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACm7C,WAAW,CAAE;MACpChyE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACo7C,iBAAiB,CAAE;MAC1CjyE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACi7C,aAAa,CAAE;MACtC9xE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACq7C,cAAc,CAAE;MACvClyE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACs7C,cAAc,CAAE;MACvCnyE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACu7C,cAAc,CAAE;MACvCpyE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACw7C,oBAAoB,CAAE;MAC7CryE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACy7C,uBAAuB,CAAE;MAChDtyE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC07C,gBAAgB,CAAE;MACzCvyE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC27C,yBAAyB,CAAE;MAClDxyE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC47C,eAAe,CAAE;MACxCzyE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC67C,mBAAmB,CAAE;MAC5C1yE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC87C,aAAa,CAAE;MACtC3yE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC+7C,kBAAkB,CAAE;MAC3C5yE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACg8C,sBAAsB,CAAE;MAC/C7yE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACi8C,iBAAiB,CAAE;MAC1C9yE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACk8C,cAAc,CAAE;MACvC/yE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACwJ,OAAO,CAAE;MAChCrgC,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC26C,OAAO,CAAE;MAChCxxE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACmK,eAAe,CAAE;MACxChhC,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACwrC,iBAAiB,CAAE;MAC1CriE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACwkD,mBAAmB,CAAE;MAC5Cr7E,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC03C,YAAY,CAAE;MACrCvuE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC63C,cAAc,CAAE;MACvC1uE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC23C,aAAa,CAAE;MACtCxuE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACu3C,gBAAgB,CAAE;MACzCpuE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC83C,aAAa,CAAE;MACtC3uE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC43C,iBAAiB,CAAE;MAC1CzuE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAAC+3C,kBAAkB,CAAE;MAC3C5uE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACg4C,oBAAoB,CAAE;MAC7C7uE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACs3C,mBAAmB,CAAE;MAC5CnuE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACw3C,2BAA2B,CAAE;MACpDruE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACg5C,aAAa,CAAE;MACtC7vE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACogB,WAAW,CAAE;MACpCj3C,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACk4C,iBAAiB,CAAE;MAC1C/uE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACm4C,mBAAmB,CAAE;MAC5ChvE,KAAK,CAAClR,IAAI,CAAE+nC,UAAU,CAACg9C,YAAY,CAAE;IAEtC;IAEA,SAASuH,0BAA0BA,CAAEp7E,KAAK,EAAE62B,UAAU,EAAG;MAExDkgD,cAAc,CAACtmD,UAAU,EAAE;MAE3B,IAAKoG,UAAU,CAACqlB,QAAQ,EACvB66B,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAAC4jD,sBAAsB,EACrC1D,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAACw6C,UAAU,EACzB0F,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAACy6C,eAAe,EAC9ByF,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAACmI,MAAM,EACrB+3C,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAACuJ,MAAM,EACrB22C,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAAC46C,oBAAoB,EACnCsF,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAACk2C,qBAAqB,EACpCgK,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAACuH,SAAS,EACxB24C,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAAC6H,WAAW,EAC1Bq4C,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAACuK,SAAS,EACxB21C,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAACiE,YAAY,EAC3Bi8C,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAACo8C,YAAY,EAC3B8D,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAACq8C,UAAU,EACzB6D,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAACm8C,cAAc,EAC7B+D,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAE5BrwB,KAAK,CAAClR,IAAI,CAAEioF,cAAc,CAAC3mD,IAAI,CAAE;MACjC2mD,cAAc,CAACtmD,UAAU,EAAE;MAE3B,IAAKoG,UAAU,CAAC6K,GAAG,EAClBq1C,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAAC06C,MAAM,EACrBwF,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAAC4K,WAAW,EAC1Bs1C,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAACu/B,sBAAsB,EACrC2gB,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAACu8C,QAAQ,EACvB2D,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAAC4rC,YAAY,EAC3BsU,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAAC6rC,YAAY,EAC3BqU,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAAC8rC,WAAW,EAC1BoU,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAACgG,kBAAkB,EACjCk6C,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAAC28C,gBAAgB,EAC/BuD,cAAc,CAAC1mD,MAAM,CAAE,CAAC,CAAE;MAC3B,IAAKwG,UAAU,CAAC68C,eAAe,EAC9BqD,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAACy8C,WAAW,EAC1ByD,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAAC08C,SAAS,EACxBwD,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAAC+8C,eAAe,EAC9BmD,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAAC8F,SAAS,EACxBo6C,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAAC6J,YAAY,EAC3Bq2C,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAAC8G,KAAK,EACpBo5C,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAAC48C,kBAAkB,EACjCsD,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAAC88C,MAAM,EACrBoD,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAC5B,IAAKwG,UAAU,CAACs8C,SAAS,EACxB4D,cAAc,CAAC1mD,MAAM,CAAE,EAAE,CAAE;MAE5BrwB,KAAK,CAAClR,IAAI,CAAEioF,cAAc,CAAC3mD,IAAI,CAAE;IAElC;IAEA,SAASgzC,WAAWA,CAAEjsC,QAAQ,EAAG;MAEhC,IAAM61C,QAAQ,GAAGmK,SAAS,CAAEhgD,QAAQ,CAAC7rC,IAAI,CAAE;MAC3C,IAAI2mD,QAAQ;MAEZ,IAAK+6B,QAAQ,EAAG;QAEf,IAAM/0B,MAAM,GAAG2U,SAAS,CAAEogB,QAAQ,CAAE;QACpC/6B,QAAQ,GAAGO,aAAa,CAACvsC,KAAK,CAAEgyC,MAAM,CAAChG,QAAQ,CAAE;MAElD,CAAC,MAAM;QAENA,QAAQ,GAAG9a,QAAQ,CAAC8a,QAAQ;MAE7B;MAEA,OAAOA,QAAQ;IAEhB;IAEA,SAASqpC,cAAcA,CAAEzkD,UAAU,EAAE85C,QAAQ,EAAG;MAE/C,IAAIjf,OAAO;;MAEX;MACA,KAAM,IAAIpiC,CAAC,GAAG,CAAC,EAAEisD,EAAE,GAAG5Z,QAAQ,CAACtyE,MAAM,EAAEigC,CAAC,GAAGisD,EAAE,EAAEjsD,CAAC,EAAG,EAAG;QAErD,IAAMksD,kBAAkB,GAAG7Z,QAAQ,CAAEryC,CAAC,CAAE;QAExC,IAAKksD,kBAAkB,CAAC7K,QAAQ,KAAKA,QAAQ,EAAG;UAE/Cjf,OAAO,GAAG8pB,kBAAkB;UAC5B,EAAG9pB,OAAO,CAAC+jB,SAAS;UAEpB;QAED;MAED;MAEA,IAAK/jB,OAAO,KAAK3jE,SAAS,EAAG;QAE5B2jE,OAAO,GAAG,IAAIgf,YAAY,CAAEr+B,QAAQ,EAAEs+B,QAAQ,EAAE95C,UAAU,EAAEu6B,aAAa,CAAE;QAC3EuQ,QAAQ,CAAC7yE,IAAI,CAAE4iE,OAAO,CAAE;MAEzB;MAEA,OAAOA,OAAO;IAEf;IAEA,SAAS+pB,cAAcA,CAAE/pB,OAAO,EAAG;MAElC,IAAK,EAAGA,OAAO,CAAC+jB,SAAS,KAAK,CAAC,EAAG;QAEjC;QACA,IAAMnmF,CAAC,GAAGqyE,QAAQ,CAACniE,OAAO,CAAEkyD,OAAO,CAAE;QACrCiQ,QAAQ,CAAEryE,CAAC,CAAE,GAAGqyE,QAAQ,CAAEA,QAAQ,CAACtyE,MAAM,GAAG,CAAC,CAAE;QAC/CsyE,QAAQ,CAACnxE,GAAG,EAAE;;QAEd;QACAkhE,OAAO,CAAC6jB,OAAO,EAAE;MAElB;IAED;IAEA,SAASmG,kBAAkBA,CAAEvkD,QAAQ,EAAG;MAEvC6/C,cAAc,CAAC5iD,MAAM,CAAE+C,QAAQ,CAAE;IAElC;IAEA,SAAShiB,OAAOA,CAAA,EAAG;MAElB6hE,cAAc,CAAC7hE,OAAO,EAAE;IAEzB;IAEA,OAAO;MACNgjE,aAAa,EAAEA,aAAa;MAC5B+C,kBAAkB,EAAEA,kBAAkB;MACtC9X,WAAW,EAAEA,WAAW;MACxBkY,cAAc,EAAEA,cAAc;MAC9BG,cAAc,EAAEA,cAAc;MAC9BC,kBAAkB,EAAEA,kBAAkB;MACtC;MACA/Z,QAAQ,EAAEA,QAAQ;MAClBxsD,OAAO,EAAEA;IACV,CAAC;EAEF;EAEA,SAASwmE,eAAeA,CAAA,EAAG;IAE1B,IAAI5wB,UAAU,GAAG,IAAI3O,OAAO,EAAE;IAE9B,SAAS12C,GAAGA,CAAEpV,MAAM,EAAG;MAEtB,IAAIyuC,GAAG,GAAGgsB,UAAU,CAACrlD,GAAG,CAAEpV,MAAM,CAAE;MAElC,IAAKyuC,GAAG,KAAKhxC,SAAS,EAAG;QAExBgxC,GAAG,GAAG,CAAC,CAAC;QACRgsB,UAAU,CAAClmD,GAAG,CAAEvU,MAAM,EAAEyuC,GAAG,CAAE;MAE9B;MAEA,OAAOA,GAAG;IAEX;IAEA,SAAS3K,MAAMA,CAAE9jC,MAAM,EAAG;MAEzBy6D,UAAU,CAACxN,MAAM,CAAEjtD,MAAM,CAAE;IAE5B;IAEA,SAASsqB,MAAMA,CAAEtqB,MAAM,EAAE/G,GAAG,EAAEE,KAAK,EAAG;MAErCshE,UAAU,CAACrlD,GAAG,CAAEpV,MAAM,CAAE,CAAE/G,GAAG,CAAE,GAAGE,KAAK;IAExC;IAEA,SAAS0rB,OAAOA,CAAA,EAAG;MAElB41C,UAAU,GAAG,IAAI3O,OAAO,EAAE;IAE3B;IAEA,OAAO;MACN12C,GAAG,EAAEA,GAAG;MACR0uB,MAAM,EAAEA,MAAM;MACdxZ,MAAM,EAAEA,MAAM;MACdzF,OAAO,EAAEA;IACV,CAAC;EAEF;EAEA,SAASymE,iBAAiBA,CAAE73E,CAAC,EAAEC,CAAC,EAAG;IAElC,IAAKD,CAAC,CAAC83E,UAAU,KAAK73E,CAAC,CAAC63E,UAAU,EAAG;MAEpC,OAAO93E,CAAC,CAAC83E,UAAU,GAAG73E,CAAC,CAAC63E,UAAU;IAEnC,CAAC,MAAM,IAAK93E,CAAC,CAAC8uB,WAAW,KAAK7uB,CAAC,CAAC6uB,WAAW,EAAG;MAE7C,OAAO9uB,CAAC,CAAC8uB,WAAW,GAAG7uB,CAAC,CAAC6uB,WAAW;IAErC,CAAC,MAAM,IAAK9uB,CAAC,CAACozB,QAAQ,CAAC1C,EAAE,KAAKzwB,CAAC,CAACmzB,QAAQ,CAAC1C,EAAE,EAAG;MAE7C,OAAO1wB,CAAC,CAACozB,QAAQ,CAAC1C,EAAE,GAAGzwB,CAAC,CAACmzB,QAAQ,CAAC1C,EAAE;IAErC,CAAC,MAAM,IAAK1wB,CAAC,CAACyR,CAAC,KAAKxR,CAAC,CAACwR,CAAC,EAAG;MAEzB,OAAOzR,CAAC,CAACyR,CAAC,GAAGxR,CAAC,CAACwR,CAAC;IAEjB,CAAC,MAAM;MAEN,OAAOzR,CAAC,CAAC0wB,EAAE,GAAGzwB,CAAC,CAACywB,EAAE;IAEnB;EAED;EAEA,SAASqnD,wBAAwBA,CAAE/3E,CAAC,EAAEC,CAAC,EAAG;IAEzC,IAAKD,CAAC,CAAC83E,UAAU,KAAK73E,CAAC,CAAC63E,UAAU,EAAG;MAEpC,OAAO93E,CAAC,CAAC83E,UAAU,GAAG73E,CAAC,CAAC63E,UAAU;IAEnC,CAAC,MAAM,IAAK93E,CAAC,CAAC8uB,WAAW,KAAK7uB,CAAC,CAAC6uB,WAAW,EAAG;MAE7C,OAAO9uB,CAAC,CAAC8uB,WAAW,GAAG7uB,CAAC,CAAC6uB,WAAW;IAErC,CAAC,MAAM,IAAK9uB,CAAC,CAACyR,CAAC,KAAKxR,CAAC,CAACwR,CAAC,EAAG;MAEzB,OAAOxR,CAAC,CAACwR,CAAC,GAAGzR,CAAC,CAACyR,CAAC;IAEjB,CAAC,MAAM;MAEN,OAAOzR,CAAC,CAAC0wB,EAAE,GAAGzwB,CAAC,CAACywB,EAAE;IAEnB;EAED;EAGA,SAASsnD,eAAeA,CAAA,EAAG;IAE1B,IAAMC,WAAW,GAAG,EAAE;IACtB,IAAIC,gBAAgB,GAAG,CAAC;IAExB,IAAMtI,MAAM,GAAG,EAAE;IACjB,IAAMuI,YAAY,GAAG,EAAE;IACvB,IAAMlhD,WAAW,GAAG,EAAE;IAEtB,SAASi9B,IAAIA,CAAA,EAAG;MAEfgkB,gBAAgB,GAAG,CAAC;MAEpBtI,MAAM,CAACtkF,MAAM,GAAG,CAAC;MACjB6sF,YAAY,CAAC7sF,MAAM,GAAG,CAAC;MACvB2rC,WAAW,CAAC3rC,MAAM,GAAG,CAAC;IAEvB;IAEA,SAAS8sF,iBAAiBA,CAAE7rF,MAAM,EAAE0zB,QAAQ,EAAEmT,QAAQ,EAAE0kD,UAAU,EAAErmE,CAAC,EAAE02B,KAAK,EAAG;MAE9E,IAAIkwC,UAAU,GAAGJ,WAAW,CAAEC,gBAAgB,CAAE;MAEhD,IAAKG,UAAU,KAAKruF,SAAS,EAAG;QAE/BquF,UAAU,GAAG;UACZ3nD,EAAE,EAAEnkC,MAAM,CAACmkC,EAAE;UACbnkC,MAAM,EAAEA,MAAM;UACd0zB,QAAQ,EAAEA,QAAQ;UAClBmT,QAAQ,EAAEA,QAAQ;UAClB0kD,UAAU,EAAEA,UAAU;UACtBhpD,WAAW,EAAEviC,MAAM,CAACuiC,WAAW;UAC/Brd,CAAC,EAAEA,CAAC;UACJ02B,KAAK,EAAEA;QACR,CAAC;QAED8vC,WAAW,CAAEC,gBAAgB,CAAE,GAAGG,UAAU;MAE7C,CAAC,MAAM;QAENA,UAAU,CAAC3nD,EAAE,GAAGnkC,MAAM,CAACmkC,EAAE;QACzB2nD,UAAU,CAAC9rF,MAAM,GAAGA,MAAM;QAC1B8rF,UAAU,CAACp4D,QAAQ,GAAGA,QAAQ;QAC9Bo4D,UAAU,CAACjlD,QAAQ,GAAGA,QAAQ;QAC9BilD,UAAU,CAACP,UAAU,GAAGA,UAAU;QAClCO,UAAU,CAACvpD,WAAW,GAAGviC,MAAM,CAACuiC,WAAW;QAC3CupD,UAAU,CAAC5mE,CAAC,GAAGA,CAAC;QAChB4mE,UAAU,CAAClwC,KAAK,GAAGA,KAAK;MAEzB;MAEA+vC,gBAAgB,EAAG;MAEnB,OAAOG,UAAU;IAElB;IAEA,SAASttF,IAAIA,CAAEwB,MAAM,EAAE0zB,QAAQ,EAAEmT,QAAQ,EAAE0kD,UAAU,EAAErmE,CAAC,EAAE02B,KAAK,EAAG;MAEjE,IAAMkwC,UAAU,GAAGD,iBAAiB,CAAE7rF,MAAM,EAAE0zB,QAAQ,EAAEmT,QAAQ,EAAE0kD,UAAU,EAAErmE,CAAC,EAAE02B,KAAK,CAAE;MAExF,IAAK/U,QAAQ,CAACuJ,YAAY,GAAG,GAAG,EAAG;QAElCw7C,YAAY,CAACptF,IAAI,CAAEstF,UAAU,CAAE;MAEhC,CAAC,MAAM,IAAKjlD,QAAQ,CAAC6D,WAAW,KAAK,IAAI,EAAG;QAE3CA,WAAW,CAAClsC,IAAI,CAAEstF,UAAU,CAAE;MAE/B,CAAC,MAAM;QAENzI,MAAM,CAAC7kF,IAAI,CAAEstF,UAAU,CAAE;MAE1B;IAED;IAEA,SAAS1rB,OAAOA,CAAEpgE,MAAM,EAAE0zB,QAAQ,EAAEmT,QAAQ,EAAE0kD,UAAU,EAAErmE,CAAC,EAAE02B,KAAK,EAAG;MAEpE,IAAMkwC,UAAU,GAAGD,iBAAiB,CAAE7rF,MAAM,EAAE0zB,QAAQ,EAAEmT,QAAQ,EAAE0kD,UAAU,EAAErmE,CAAC,EAAE02B,KAAK,CAAE;MAExF,IAAK/U,QAAQ,CAACuJ,YAAY,GAAG,GAAG,EAAG;QAElCw7C,YAAY,CAACxrB,OAAO,CAAE0rB,UAAU,CAAE;MAEnC,CAAC,MAAM,IAAKjlD,QAAQ,CAAC6D,WAAW,KAAK,IAAI,EAAG;QAE3CA,WAAW,CAAC01B,OAAO,CAAE0rB,UAAU,CAAE;MAElC,CAAC,MAAM;QAENzI,MAAM,CAACjjB,OAAO,CAAE0rB,UAAU,CAAE;MAE7B;IAED;IAEA,SAAS7Y,IAAIA,CAAE8Y,gBAAgB,EAAEC,qBAAqB,EAAG;MAExD,IAAK3I,MAAM,CAACtkF,MAAM,GAAG,CAAC,EAAGskF,MAAM,CAACpQ,IAAI,CAAE8Y,gBAAgB,IAAIT,iBAAiB,CAAE;MAC7E,IAAKM,YAAY,CAAC7sF,MAAM,GAAG,CAAC,EAAG6sF,YAAY,CAAC3Y,IAAI,CAAE+Y,qBAAqB,IAAIR,wBAAwB,CAAE;MACrG,IAAK9gD,WAAW,CAAC3rC,MAAM,GAAG,CAAC,EAAG2rC,WAAW,CAACuoC,IAAI,CAAE+Y,qBAAqB,IAAIR,wBAAwB,CAAE;IAEpG;IAEA,SAAStqF,MAAMA,CAAA,EAAG;MAEjB;;MAEA,KAAM,IAAIlC,CAAC,GAAG2sF,gBAAgB,EAAEjiE,EAAE,GAAGgiE,WAAW,CAAC3sF,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;QAEvE,IAAM8sF,UAAU,GAAGJ,WAAW,CAAE1sF,CAAC,CAAE;QAEnC,IAAK8sF,UAAU,CAAC3nD,EAAE,KAAK,IAAI,EAAG;QAE9B2nD,UAAU,CAAC3nD,EAAE,GAAG,IAAI;QACpB2nD,UAAU,CAAC9rF,MAAM,GAAG,IAAI;QACxB8rF,UAAU,CAACp4D,QAAQ,GAAG,IAAI;QAC1Bo4D,UAAU,CAACjlD,QAAQ,GAAG,IAAI;QAC1BilD,UAAU,CAAClwC,KAAK,GAAG,IAAI;MAExB;IAED;IAEA,OAAO;MAENynC,MAAM,EAAEA,MAAM;MACduI,YAAY,EAAEA,YAAY;MAC1BlhD,WAAW,EAAEA,WAAW;MAExBi9B,IAAI,EAAEA,IAAI;MACVnpE,IAAI,EAAEA,IAAI;MACV4hE,OAAO,EAAEA,OAAO;MAChBl/D,MAAM,EAAEA,MAAM;MAEd+xE,IAAI,EAAEA;IACP,CAAC;EAEF;EAEA,SAASgZ,gBAAgBA,CAAA,EAAG;IAE3B,IAAIC,KAAK,GAAG,IAAIpgC,OAAO,EAAE;IAEzB,SAAS12C,GAAGA,CAAEkxC,KAAK,EAAE6lC,eAAe,EAAG;MAEtC,IAAMC,SAAS,GAAGF,KAAK,CAAC92E,GAAG,CAAEkxC,KAAK,CAAE;MACpC,IAAI+lC,IAAI;MAER,IAAKD,SAAS,KAAK3uF,SAAS,EAAG;QAE9B4uF,IAAI,GAAG,IAAIZ,eAAe,EAAE;QAC5BS,KAAK,CAAC33E,GAAG,CAAE+xC,KAAK,EAAE,CAAE+lC,IAAI,CAAE,CAAE;MAE7B,CAAC,MAAM;QAEN,IAAKF,eAAe,IAAIC,SAAS,CAACrtF,MAAM,EAAG;UAE1CstF,IAAI,GAAG,IAAIZ,eAAe,EAAE;UAC5BW,SAAS,CAAC5tF,IAAI,CAAE6tF,IAAI,CAAE;QAEvB,CAAC,MAAM;UAENA,IAAI,GAAGD,SAAS,CAAED,eAAe,CAAE;QAEpC;MAED;MAEA,OAAOE,IAAI;IAEZ;IAEA,SAASxnE,OAAOA,CAAA,EAAG;MAElBqnE,KAAK,GAAG,IAAIpgC,OAAO,EAAE;IAEtB;IAEA,OAAO;MACN12C,GAAG,EAAEA,GAAG;MACRyP,OAAO,EAAEA;IACV,CAAC;EAEF;EAEA,SAASynE,aAAaA,CAAA,EAAG;IAExB,IAAMxpC,MAAM,GAAG,CAAC,CAAC;IAEjB,OAAO;MAEN1tC,GAAG,EAAE,SAAAA,IAAWm3E,KAAK,EAAG;QAEvB,IAAKzpC,MAAM,CAAEypC,KAAK,CAACpoD,EAAE,CAAE,KAAK1mC,SAAS,EAAG;UAEvC,OAAOqlD,MAAM,CAAEypC,KAAK,CAACpoD,EAAE,CAAE;QAE1B;QAEA,IAAIwd,QAAQ;QAEZ,QAAS4qC,KAAK,CAACvxF,IAAI;UAElB,KAAK,kBAAkB;YACtB2mD,QAAQ,GAAG;cACVvqB,SAAS,EAAE,IAAI7I,OAAO,EAAE;cACxB1P,KAAK,EAAE,IAAI8yB,KAAK;YACjB,CAAC;YACD;UAED,KAAK,WAAW;YACfgQ,QAAQ,GAAG;cACV/tB,QAAQ,EAAE,IAAIrF,OAAO,EAAE;cACvB6I,SAAS,EAAE,IAAI7I,OAAO,EAAE;cACxB1P,KAAK,EAAE,IAAI8yB,KAAK,EAAE;cAClBtO,QAAQ,EAAE,CAAC;cACX63B,OAAO,EAAE,CAAC;cACVC,WAAW,EAAE,CAAC;cACdC,KAAK,EAAE;YACR,CAAC;YACD;UAED,KAAK,YAAY;YAChBzZ,QAAQ,GAAG;cACV/tB,QAAQ,EAAE,IAAIrF,OAAO,EAAE;cACvB1P,KAAK,EAAE,IAAI8yB,KAAK,EAAE;cAClBtO,QAAQ,EAAE,CAAC;cACX+3B,KAAK,EAAE;YACR,CAAC;YACD;UAED,KAAK,iBAAiB;YACrBzZ,QAAQ,GAAG;cACVvqB,SAAS,EAAE,IAAI7I,OAAO,EAAE;cACxBytC,QAAQ,EAAE,IAAIrqB,KAAK,EAAE;cACrBsqB,WAAW,EAAE,IAAItqB,KAAK;YACvB,CAAC;YACD;UAED,KAAK,eAAe;YACnBgQ,QAAQ,GAAG;cACV9iC,KAAK,EAAE,IAAI8yB,KAAK,EAAE;cAClB/d,QAAQ,EAAE,IAAIrF,OAAO,EAAE;cACvBi+D,SAAS,EAAE,IAAIj+D,OAAO,EAAE;cACxBk+D,UAAU,EAAE,IAAIl+D,OAAO;YACxB,CAAC;YACD;QAAM;QAIRu0B,MAAM,CAAEypC,KAAK,CAACpoD,EAAE,CAAE,GAAGwd,QAAQ;QAE7B,OAAOA,QAAQ;MAEhB;IAED,CAAC;EAEF;EAEA,SAAS+qC,mBAAmBA,CAAA,EAAG;IAE9B,IAAM5pC,MAAM,GAAG,CAAC,CAAC;IAEjB,OAAO;MAEN1tC,GAAG,EAAE,SAAAA,IAAWm3E,KAAK,EAAG;QAEvB,IAAKzpC,MAAM,CAAEypC,KAAK,CAACpoD,EAAE,CAAE,KAAK1mC,SAAS,EAAG;UAEvC,OAAOqlD,MAAM,CAAEypC,KAAK,CAACpoD,EAAE,CAAE;QAE1B;QAEA,IAAIwd,QAAQ;QAEZ,QAAS4qC,KAAK,CAACvxF,IAAI;UAElB,KAAK,kBAAkB;YACtB2mD,QAAQ,GAAG;cACVgZ,UAAU,EAAE,CAAC;cACbC,gBAAgB,EAAE,CAAC;cACnBC,YAAY,EAAE,CAAC;cACfC,aAAa,EAAE,IAAI7lD,OAAO;YAC3B,CAAC;YACD;UAED,KAAK,WAAW;YACf0sC,QAAQ,GAAG;cACVgZ,UAAU,EAAE,CAAC;cACbC,gBAAgB,EAAE,CAAC;cACnBC,YAAY,EAAE,CAAC;cACfC,aAAa,EAAE,IAAI7lD,OAAO;YAC3B,CAAC;YACD;UAED,KAAK,YAAY;YAChB0sC,QAAQ,GAAG;cACVgZ,UAAU,EAAE,CAAC;cACbC,gBAAgB,EAAE,CAAC;cACnBC,YAAY,EAAE,CAAC;cACfC,aAAa,EAAE,IAAI7lD,OAAO,EAAE;cAC5B0mD,gBAAgB,EAAE,CAAC;cACnBC,eAAe,EAAE;YAClB,CAAC;YACD;;UAED;QAAA;;QAID9Y,MAAM,CAAEypC,KAAK,CAACpoD,EAAE,CAAE,GAAGwd,QAAQ;QAE7B,OAAOA,QAAQ;MAEhB;IAED,CAAC;EAEF;EAIA,IAAIgrC,WAAW,GAAG,CAAC;EAEnB,SAASC,oCAAoCA,CAAEC,MAAM,EAAEC,MAAM,EAAG;IAE/D,OAAO,CAAEA,MAAM,CAAC1qD,UAAU,GAAG,CAAC,GAAG,CAAC,KAAOyqD,MAAM,CAACzqD,UAAU,GAAG,CAAC,GAAG,CAAC,CAAE,IAAK0qD,MAAM,CAACr+C,GAAG,GAAG,CAAC,GAAG,CAAC,CAAE,IAAKo+C,MAAM,CAACp+C,GAAG,GAAG,CAAC,GAAG,CAAC,CAAE;EAEvH;EAEA,SAASs+C,WAAWA,CAAE/pC,UAAU,EAAE2I,YAAY,EAAG;IAEhD,IAAM1kB,KAAK,GAAG,IAAIqlD,aAAa,EAAE;IAEjC,IAAMU,WAAW,GAAGN,mBAAmB,EAAE;IAEzC,IAAM7vF,KAAK,GAAG;MAEb2kB,OAAO,EAAE,CAAC;MAEVyrE,IAAI,EAAE;QACLC,iBAAiB,EAAE,CAAE,CAAC;QACtBC,WAAW,EAAE,CAAE,CAAC;QAChBC,UAAU,EAAE,CAAE,CAAC;QACfC,cAAc,EAAE,CAAE,CAAC;QACnBC,UAAU,EAAE,CAAE,CAAC;QAEfC,qBAAqB,EAAE,CAAE,CAAC;QAC1BC,eAAe,EAAE,CAAE,CAAC;QACpBC,cAAc,EAAE,CAAE,CAAC;QACnBC,WAAW,EAAE,CAAE;MAChB,CAAC;MAEDC,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACpBC,KAAK,EAAE,EAAE;MACTrD,WAAW,EAAE,EAAE;MACfsD,iBAAiB,EAAE,EAAE;MACrB9yB,oBAAoB,EAAE,EAAE;MACxBC,uBAAuB,EAAE,EAAE;MAC3BwvB,IAAI,EAAE,EAAE;MACRlvB,YAAY,EAAE,EAAE;MAChBwyB,UAAU,EAAE,EAAE;MACdvyB,aAAa,EAAE,EAAE;MACjBC,eAAe,EAAE,EAAE;MACnBivB,QAAQ,EAAE,EAAE;MACZsD,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,IAAI;MAClB/6D,KAAK,EAAE,EAAE;MACTg7D,WAAW,EAAE,EAAE;MACfpyB,cAAc,EAAE,EAAE;MAClBC,iBAAiB,EAAE,EAAE;MACrB4uB,IAAI,EAAE,EAAE;MACR3M,2BAA2B,EAAE;IAE9B,CAAC;IAED,KAAM,IAAI/+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAGnC,KAAK,CAAC+wF,KAAK,CAACpvF,IAAI,CAAE,IAAI+vB,OAAO,EAAE,CAAE;IAEhE,IAAM2/D,OAAO,GAAG,IAAI3/D,OAAO,EAAE;IAC7B,IAAM5R,OAAO,GAAG,IAAIqd,OAAO,EAAE;IAC7B,IAAMm0D,QAAQ,GAAG,IAAIn0D,OAAO,EAAE;IAE9B,SAASmnC,KAAKA,CAAEre,MAAM,EAAEsgC,eAAe,EAAG;MAEzC,IAAIvmE,CAAC,GAAG,CAAC;QAAEb,CAAC,GAAG,CAAC;QAAEtI,CAAC,GAAG,CAAC;MAEvB,KAAM,IAAI1U,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAGnC,KAAK,CAAC+wF,KAAK,CAAE5uF,IAAC,CAAE,CAACuV,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAE9D,IAAI24E,iBAAiB,GAAG,CAAC;MACzB,IAAIC,WAAW,GAAG,CAAC;MACnB,IAAIC,UAAU,GAAG,CAAC;MAClB,IAAIC,cAAc,GAAG,CAAC;MACtB,IAAIC,UAAU,GAAG,CAAC;MAElB,IAAIC,qBAAqB,GAAG,CAAC;MAC7B,IAAIC,eAAe,GAAG,CAAC;MACvB,IAAIC,cAAc,GAAG,CAAC;MACtB,IAAIC,WAAW,GAAG,CAAC;MACnB,IAAIU,sBAAsB,GAAG,CAAC;;MAE9B;MACAtrC,MAAM,CAACmwB,IAAI,CAAE2Z,oCAAoC,CAAE;;MAEnD;MACA,IAAMyB,WAAW,GAAKjL,eAAe,KAAK,IAAI,GAAKrzE,IAAI,CAACC,EAAE,GAAG,CAAC;MAE9D,KAAM,IAAIhR,IAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGmzC,MAAM,CAAC/jD,MAAM,EAAEC,IAAC,GAAG2Q,CAAC,EAAE3Q,IAAC,EAAG,EAAG;QAEjD,IAAMutF,KAAK,GAAGzpC,MAAM,CAAE9jD,IAAC,CAAE;QAEzB,IAAM6f,KAAK,GAAG0tE,KAAK,CAAC1tE,KAAK;QACzB,IAAMyvE,SAAS,GAAG/B,KAAK,CAAC+B,SAAS;QACjC,IAAMjrD,QAAQ,GAAGkpD,KAAK,CAAClpD,QAAQ;QAE/B,IAAMsnD,SAAS,GAAK4B,KAAK,CAAC7uB,MAAM,IAAI6uB,KAAK,CAAC7uB,MAAM,CAACjvB,GAAG,GAAK89C,KAAK,CAAC7uB,MAAM,CAACjvB,GAAG,CAACjnB,OAAO,GAAG,IAAI;QAExF,IAAK+kE,KAAK,CAACgC,cAAc,EAAG;UAE3B1xE,CAAC,IAAIgC,KAAK,CAAChC,CAAC,GAAGyxE,SAAS,GAAGD,WAAW;UACtCryE,CAAC,IAAI6C,KAAK,CAAC7C,CAAC,GAAGsyE,SAAS,GAAGD,WAAW;UACtC36E,CAAC,IAAImL,KAAK,CAACnL,CAAC,GAAG46E,SAAS,GAAGD,WAAW;QAEvC,CAAC,MAAM,IAAK9B,KAAK,CAACiC,YAAY,EAAG;UAEhC,KAAM,IAAI54D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;YAE9B/4B,KAAK,CAAC+wF,KAAK,CAAEh4D,CAAC,CAAE,CAAC3f,eAAe,CAAEs2E,KAAK,CAACkC,EAAE,CAACC,YAAY,CAAE94D,CAAC,CAAE,EAAE04D,SAAS,CAAE;UAE1E;QAED,CAAC,MAAM,IAAK/B,KAAK,CAACoC,kBAAkB,EAAG;UAEtC,IAAMhtC,QAAQ,GAAG1a,KAAK,CAAC7xB,GAAG,CAAEm3E,KAAK,CAAE;UAEnC5qC,QAAQ,CAAC9iC,KAAK,CAACjJ,IAAI,CAAE22E,KAAK,CAAC1tE,KAAK,CAAE,CAACvI,cAAc,CAAEi2E,KAAK,CAAC+B,SAAS,GAAGD,WAAW,CAAE;UAElF,IAAK9B,KAAK,CAACnqD,UAAU,EAAG;YAEvB,IAAMs7B,MAAM,GAAG6uB,KAAK,CAAC7uB,MAAM;YAE3B,IAAMkxB,cAAc,GAAG5B,WAAW,CAAC53E,GAAG,CAAEm3E,KAAK,CAAE;YAE/CqC,cAAc,CAACj0B,UAAU,GAAG+C,MAAM,CAACmxB,IAAI;YACvCD,cAAc,CAACh0B,gBAAgB,GAAG8C,MAAM,CAACoxB,UAAU;YACnDF,cAAc,CAAC/zB,YAAY,GAAG6C,MAAM,CAAC1sC,MAAM;YAC3C49D,cAAc,CAAC9zB,aAAa,GAAG4C,MAAM,CAACqxB,OAAO;YAE7ClyF,KAAK,CAACgxF,iBAAiB,CAAEX,iBAAiB,CAAE,GAAG0B,cAAc;YAC7D/xF,KAAK,CAACk+D,oBAAoB,CAAEmyB,iBAAiB,CAAE,GAAGvC,SAAS;YAC3D9tF,KAAK,CAACm+D,uBAAuB,CAAEkyB,iBAAiB,CAAE,GAAGX,KAAK,CAAC7uB,MAAM,CAAC7/C,MAAM;YAExE0vE,qBAAqB,EAAG;UAEzB;UAEA1wF,KAAK,CAAC0tF,WAAW,CAAE2C,iBAAiB,CAAE,GAAGvrC,QAAQ;UAEjDurC,iBAAiB,EAAG;QAErB,CAAC,MAAM,IAAKX,KAAK,CAACyC,WAAW,EAAG;UAE/B,IAAMrtC,SAAQ,GAAG1a,KAAK,CAAC7xB,GAAG,CAAEm3E,KAAK,CAAE;UAEnC5qC,SAAQ,CAAC/tB,QAAQ,CAACvC,qBAAqB,CAAEk7D,KAAK,CAACz8D,WAAW,CAAE;UAE5D6xB,SAAQ,CAAC9iC,KAAK,CAACjJ,IAAI,CAAEiJ,KAAK,CAAE,CAACvI,cAAc,CAAEg4E,SAAS,GAAGD,WAAW,CAAE;UACtE1sC,SAAQ,CAACte,QAAQ,GAAGA,QAAQ;UAE5Bse,SAAQ,CAACuZ,OAAO,GAAGnrD,IAAI,CAAC8D,GAAG,CAAE04E,KAAK,CAACh1E,KAAK,CAAE;UAC1CoqC,SAAQ,CAACwZ,WAAW,GAAGprD,IAAI,CAAC8D,GAAG,CAAE04E,KAAK,CAACh1E,KAAK,IAAK,CAAC,GAAGg1E,KAAK,CAAC0C,QAAQ,CAAE,CAAE;UACvEttC,SAAQ,CAACyZ,KAAK,GAAGmxB,KAAK,CAACnxB,KAAK;UAE5Bv+D,KAAK,CAAC2tF,IAAI,CAAE4C,UAAU,CAAE,GAAGzrC,SAAQ;UAEnC,IAAM+b,OAAM,GAAG6uB,KAAK,CAAC7uB,MAAM;UAE3B,IAAK6uB,KAAK,CAAC99C,GAAG,EAAG;YAEhB5xC,KAAK,CAACy+D,YAAY,CAAEoyB,WAAW,CAAE,GAAGnB,KAAK,CAAC99C,GAAG;YAC7Ci/C,WAAW,EAAG;;YAEd;YACA;YACAhwB,OAAM,CAACwxB,cAAc,CAAE3C,KAAK,CAAE;YAE9B,IAAKA,KAAK,CAACnqD,UAAU,EAAGgsD,sBAAsB,EAAG;UAElD;UAEAvxF,KAAK,CAAC2+D,eAAe,CAAE4xB,UAAU,CAAE,GAAG1vB,OAAM,CAAC7/C,MAAM;UAEnD,IAAK0uE,KAAK,CAACnqD,UAAU,EAAG;YAEvB,IAAMwsD,eAAc,GAAG5B,WAAW,CAAC53E,GAAG,CAAEm3E,KAAK,CAAE;YAE/CqC,eAAc,CAACj0B,UAAU,GAAG+C,OAAM,CAACmxB,IAAI;YACvCD,eAAc,CAACh0B,gBAAgB,GAAG8C,OAAM,CAACoxB,UAAU;YACnDF,eAAc,CAAC/zB,YAAY,GAAG6C,OAAM,CAAC1sC,MAAM;YAC3C49D,eAAc,CAAC9zB,aAAa,GAAG4C,OAAM,CAACqxB,OAAO;YAE7ClyF,KAAK,CAACixF,UAAU,CAAEV,UAAU,CAAE,GAAGwB,eAAc;YAC/C/xF,KAAK,CAAC0+D,aAAa,CAAE6xB,UAAU,CAAE,GAAGzC,SAAS;YAE7C8C,cAAc,EAAG;UAElB;UAEAL,UAAU,EAAG;QAEd,CAAC,MAAM,IAAKb,KAAK,CAAC4C,eAAe,EAAG;UAEnC,IAAMxtC,UAAQ,GAAG1a,KAAK,CAAC7xB,GAAG,CAAEm3E,KAAK,CAAE;UAEnC5qC,UAAQ,CAAC9iC,KAAK,CAACjJ,IAAI,CAAEiJ,KAAK,CAAE,CAACvI,cAAc,CAAEg4E,SAAS,CAAE;UAExD3sC,UAAQ,CAAC6qC,SAAS,CAACj4E,GAAG,CAAEg4E,KAAK,CAAC9rE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;UACrDkhC,UAAQ,CAAC8qC,UAAU,CAACl4E,GAAG,CAAE,GAAG,EAAEg4E,KAAK,CAAC7rE,MAAM,GAAG,GAAG,EAAE,GAAG,CAAE;UAEvD7jB,KAAK,CAAC4tF,QAAQ,CAAE4C,cAAc,CAAE,GAAG1rC,UAAQ;UAE3C0rC,cAAc,EAAG;QAElB,CAAC,MAAM,IAAKd,KAAK,CAAC6C,YAAY,EAAG;UAEhC,IAAMztC,UAAQ,GAAG1a,KAAK,CAAC7xB,GAAG,CAAEm3E,KAAK,CAAE;UAEnC5qC,UAAQ,CAAC9iC,KAAK,CAACjJ,IAAI,CAAE22E,KAAK,CAAC1tE,KAAK,CAAE,CAACvI,cAAc,CAAEi2E,KAAK,CAAC+B,SAAS,GAAGD,WAAW,CAAE;UAClF1sC,UAAQ,CAACte,QAAQ,GAAGkpD,KAAK,CAAClpD,QAAQ;UAClCse,UAAQ,CAACyZ,KAAK,GAAGmxB,KAAK,CAACnxB,KAAK;UAE5B,IAAKmxB,KAAK,CAACnqD,UAAU,EAAG;YAEvB,IAAMs7B,QAAM,GAAG6uB,KAAK,CAAC7uB,MAAM;YAE3B,IAAMkxB,gBAAc,GAAG5B,WAAW,CAAC53E,GAAG,CAAEm3E,KAAK,CAAE;YAE/CqC,gBAAc,CAACj0B,UAAU,GAAG+C,QAAM,CAACmxB,IAAI;YACvCD,gBAAc,CAACh0B,gBAAgB,GAAG8C,QAAM,CAACoxB,UAAU;YACnDF,gBAAc,CAAC/zB,YAAY,GAAG6C,QAAM,CAAC1sC,MAAM;YAC3C49D,gBAAc,CAAC9zB,aAAa,GAAG4C,QAAM,CAACqxB,OAAO;YAC7CH,gBAAc,CAACjzB,gBAAgB,GAAG+B,QAAM,CAACjuC,MAAM,CAACoP,IAAI;YACpD+vD,gBAAc,CAAChzB,eAAe,GAAG8B,QAAM,CAACjuC,MAAM,CAACqP,GAAG;YAElDjiC,KAAK,CAACoxF,WAAW,CAAEd,WAAW,CAAE,GAAGyB,gBAAc;YACjD/xF,KAAK,CAACg/D,cAAc,CAAEsxB,WAAW,CAAE,GAAGxC,SAAS;YAC/C9tF,KAAK,CAACi/D,iBAAiB,CAAEqxB,WAAW,CAAE,GAAGZ,KAAK,CAAC7uB,MAAM,CAAC7/C,MAAM;YAE5D2vE,eAAe,EAAG;UAEnB;UAEA3wF,KAAK,CAACo2B,KAAK,CAAEk6D,WAAW,CAAE,GAAGxrC,UAAQ;UAErCwrC,WAAW,EAAG;QAEf,CAAC,MAAM,IAAKZ,KAAK,CAAC8C,iBAAiB,EAAG;UAErC,IAAM1tC,UAAQ,GAAG1a,KAAK,CAAC7xB,GAAG,CAAEm3E,KAAK,CAAE;UAEnC5qC,UAAQ,CAACqa,QAAQ,CAACpmD,IAAI,CAAE22E,KAAK,CAAC1tE,KAAK,CAAE,CAACvI,cAAc,CAAEg4E,SAAS,GAAGD,WAAW,CAAE;UAC/E1sC,UAAQ,CAACsa,WAAW,CAACrmD,IAAI,CAAE22E,KAAK,CAACtwB,WAAW,CAAE,CAAC3lD,cAAc,CAAEg4E,SAAS,GAAGD,WAAW,CAAE;UAExFxxF,KAAK,CAAC6tF,IAAI,CAAE4C,UAAU,CAAE,GAAG3rC,UAAQ;UAEnC2rC,UAAU,EAAG;QAEd;MAED;MAEA,IAAKD,cAAc,GAAG,CAAC,EAAG;QAEzB,IAAK1hC,YAAY,CAACC,QAAQ,EAAG;UAE5B;;UAEA/uD,KAAK,CAACkxF,YAAY,GAAGv1B,WAAW,CAAC82B,WAAW;UAC5CzyF,KAAK,CAACmxF,YAAY,GAAGx1B,WAAW,CAAC+2B,WAAW;QAE7C,CAAC,MAAM;UAEN;;UAEA,IAAKvsC,UAAU,CAACoiB,GAAG,CAAE,0BAA0B,CAAE,KAAK,IAAI,EAAG;YAE5DvoE,KAAK,CAACkxF,YAAY,GAAGv1B,WAAW,CAAC82B,WAAW;YAC5CzyF,KAAK,CAACmxF,YAAY,GAAGx1B,WAAW,CAAC+2B,WAAW;UAE7C,CAAC,MAAM,IAAKvsC,UAAU,CAACoiB,GAAG,CAAE,+BAA+B,CAAE,KAAK,IAAI,EAAG;YAExEvoE,KAAK,CAACkxF,YAAY,GAAGv1B,WAAW,CAACg3B,UAAU;YAC3C3yF,KAAK,CAACmxF,YAAY,GAAGx1B,WAAW,CAACi3B,UAAU;UAE5C,CAAC,MAAM;YAEN/sF,OAAO,CAAChG,KAAK,CAAE,6EAA6E,CAAE;UAE/F;QAED;MAED;MAEAG,KAAK,CAAC8wF,OAAO,CAAE,CAAC,CAAE,GAAG9wE,CAAC;MACtBhgB,KAAK,CAAC8wF,OAAO,CAAE,CAAC,CAAE,GAAG3xE,CAAC;MACtBnf,KAAK,CAAC8wF,OAAO,CAAE,CAAC,CAAE,GAAGj6E,CAAC;MAEtB,IAAMu5E,IAAI,GAAGpwF,KAAK,CAACowF,IAAI;MAEvB,IAAKA,IAAI,CAACC,iBAAiB,KAAKA,iBAAiB,IAChDD,IAAI,CAACE,WAAW,KAAKA,WAAW,IAChCF,IAAI,CAACG,UAAU,KAAKA,UAAU,IAC9BH,IAAI,CAACI,cAAc,KAAKA,cAAc,IACtCJ,IAAI,CAACK,UAAU,KAAKA,UAAU,IAC9BL,IAAI,CAACM,qBAAqB,KAAKA,qBAAqB,IACpDN,IAAI,CAACO,eAAe,KAAKA,eAAe,IACxCP,IAAI,CAACQ,cAAc,KAAKA,cAAc,IACtCR,IAAI,CAACS,WAAW,KAAKA,WAAW,EAAG;QAEnC7wF,KAAK,CAAC0tF,WAAW,CAACxrF,MAAM,GAAGmuF,iBAAiB;QAC5CrwF,KAAK,CAAC2tF,IAAI,CAACzrF,MAAM,GAAGquF,UAAU;QAC9BvwF,KAAK,CAAC4tF,QAAQ,CAAC1rF,MAAM,GAAGsuF,cAAc;QACtCxwF,KAAK,CAACo2B,KAAK,CAACl0B,MAAM,GAAGouF,WAAW;QAChCtwF,KAAK,CAAC6tF,IAAI,CAAC3rF,MAAM,GAAGuuF,UAAU;QAE9BzwF,KAAK,CAACgxF,iBAAiB,CAAC9uF,MAAM,GAAGwuF,qBAAqB;QACtD1wF,KAAK,CAACk+D,oBAAoB,CAACh8D,MAAM,GAAGwuF,qBAAqB;QACzD1wF,KAAK,CAACoxF,WAAW,CAAClvF,MAAM,GAAGyuF,eAAe;QAC1C3wF,KAAK,CAACg/D,cAAc,CAAC98D,MAAM,GAAGyuF,eAAe;QAC7C3wF,KAAK,CAACixF,UAAU,CAAC/uF,MAAM,GAAG0uF,cAAc;QACxC5wF,KAAK,CAAC0+D,aAAa,CAACx8D,MAAM,GAAG0uF,cAAc;QAC3C5wF,KAAK,CAACm+D,uBAAuB,CAACj8D,MAAM,GAAGwuF,qBAAqB;QAC5D1wF,KAAK,CAACi/D,iBAAiB,CAAC/8D,MAAM,GAAGyuF,eAAe;QAChD3wF,KAAK,CAAC2+D,eAAe,CAACz8D,MAAM,GAAG0uF,cAAc,GAAGC,WAAW,GAAGU,sBAAsB;QACpFvxF,KAAK,CAACy+D,YAAY,CAACv8D,MAAM,GAAG2uF,WAAW;QACvC7wF,KAAK,CAACkhF,2BAA2B,GAAGqQ,sBAAsB;QAE1DnB,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;QAC1CD,IAAI,CAACE,WAAW,GAAGA,WAAW;QAC9BF,IAAI,CAACG,UAAU,GAAGA,UAAU;QAC5BH,IAAI,CAACI,cAAc,GAAGA,cAAc;QACpCJ,IAAI,CAACK,UAAU,GAAGA,UAAU;QAE5BL,IAAI,CAACM,qBAAqB,GAAGA,qBAAqB;QAClDN,IAAI,CAACO,eAAe,GAAGA,eAAe;QACtCP,IAAI,CAACQ,cAAc,GAAGA,cAAc;QACpCR,IAAI,CAACS,WAAW,GAAGA,WAAW;QAE9B7wF,KAAK,CAAC2kB,OAAO,GAAGmrE,WAAW,EAAG;MAE/B;IAED;IAEA,SAAS+C,SAASA,CAAE5sC,MAAM,EAAErzB,MAAM,EAAG;MAEpC,IAAIy9D,iBAAiB,GAAG,CAAC;MACzB,IAAIC,WAAW,GAAG,CAAC;MACnB,IAAIC,UAAU,GAAG,CAAC;MAClB,IAAIC,cAAc,GAAG,CAAC;MACtB,IAAIC,UAAU,GAAG,CAAC;MAElB,IAAM1kB,UAAU,GAAGn5C,MAAM,CAACC,kBAAkB;MAE5C,KAAM,IAAI1wB,IAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGmzC,MAAM,CAAC/jD,MAAM,EAAEC,IAAC,GAAG2Q,CAAC,EAAE3Q,IAAC,EAAG,EAAG;QAEjD,IAAMutF,KAAK,GAAGzpC,MAAM,CAAE9jD,IAAC,CAAE;QAEzB,IAAKutF,KAAK,CAACoC,kBAAkB,EAAG;UAE/B,IAAMhtC,QAAQ,GAAG9kD,KAAK,CAAC0tF,WAAW,CAAE2C,iBAAiB,CAAE;UAEvDvrC,QAAQ,CAACvqB,SAAS,CAAC/F,qBAAqB,CAAEk7D,KAAK,CAACz8D,WAAW,CAAE;UAC7Do+D,OAAO,CAAC78D,qBAAqB,CAAEk7D,KAAK,CAAC5qF,MAAM,CAACmuB,WAAW,CAAE;UACzD6xB,QAAQ,CAACvqB,SAAS,CAAClhB,GAAG,CAAEg4E,OAAO,CAAE;UACjCvsC,QAAQ,CAACvqB,SAAS,CAACrH,kBAAkB,CAAE64C,UAAU,CAAE;UAEnDskB,iBAAiB,EAAG;QAErB,CAAC,MAAM,IAAKX,KAAK,CAACyC,WAAW,EAAG;UAE/B,IAAMrtC,UAAQ,GAAG9kD,KAAK,CAAC2tF,IAAI,CAAE4C,UAAU,CAAE;UAEzCzrC,UAAQ,CAAC/tB,QAAQ,CAACvC,qBAAqB,CAAEk7D,KAAK,CAACz8D,WAAW,CAAE;UAC5D6xB,UAAQ,CAAC/tB,QAAQ,CAACrO,YAAY,CAAEqjD,UAAU,CAAE;UAE5CjnB,UAAQ,CAACvqB,SAAS,CAAC/F,qBAAqB,CAAEk7D,KAAK,CAACz8D,WAAW,CAAE;UAC7Do+D,OAAO,CAAC78D,qBAAqB,CAAEk7D,KAAK,CAAC5qF,MAAM,CAACmuB,WAAW,CAAE;UACzD6xB,UAAQ,CAACvqB,SAAS,CAAClhB,GAAG,CAAEg4E,OAAO,CAAE;UACjCvsC,UAAQ,CAACvqB,SAAS,CAACrH,kBAAkB,CAAE64C,UAAU,CAAE;UAEnDwkB,UAAU,EAAG;QAEd,CAAC,MAAM,IAAKb,KAAK,CAAC4C,eAAe,EAAG;UAEnC,IAAMxtC,UAAQ,GAAG9kD,KAAK,CAAC4tF,QAAQ,CAAE4C,cAAc,CAAE;UAEjD1rC,UAAQ,CAAC/tB,QAAQ,CAACvC,qBAAqB,CAAEk7D,KAAK,CAACz8D,WAAW,CAAE;UAC5D6xB,UAAQ,CAAC/tB,QAAQ,CAACrO,YAAY,CAAEqjD,UAAU,CAAE;;UAE5C;UACAulB,QAAQ,CAACp0E,QAAQ,EAAE;UACnB4C,OAAO,CAAC/G,IAAI,CAAE22E,KAAK,CAACz8D,WAAW,CAAE;UACjCnT,OAAO,CAACnC,WAAW,CAAEouD,UAAU,CAAE;UACjCulB,QAAQ,CAACvzD,eAAe,CAAEje,OAAO,CAAE;UAEnCglC,UAAQ,CAAC6qC,SAAS,CAACj4E,GAAG,CAAEg4E,KAAK,CAAC9rE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;UACrDkhC,UAAQ,CAAC8qC,UAAU,CAACl4E,GAAG,CAAE,GAAG,EAAEg4E,KAAK,CAAC7rE,MAAM,GAAG,GAAG,EAAE,GAAG,CAAE;UAEvDihC,UAAQ,CAAC6qC,SAAS,CAACjnE,YAAY,CAAE4oE,QAAQ,CAAE;UAC3CxsC,UAAQ,CAAC8qC,UAAU,CAAClnE,YAAY,CAAE4oE,QAAQ,CAAE;UAE5Cd,cAAc,EAAG;QAElB,CAAC,MAAM,IAAKd,KAAK,CAAC6C,YAAY,EAAG;UAEhC,IAAMztC,UAAQ,GAAG9kD,KAAK,CAACo2B,KAAK,CAAEk6D,WAAW,CAAE;UAE3CxrC,UAAQ,CAAC/tB,QAAQ,CAACvC,qBAAqB,CAAEk7D,KAAK,CAACz8D,WAAW,CAAE;UAC5D6xB,UAAQ,CAAC/tB,QAAQ,CAACrO,YAAY,CAAEqjD,UAAU,CAAE;UAE5CukB,WAAW,EAAG;QAEf,CAAC,MAAM,IAAKZ,KAAK,CAAC8C,iBAAiB,EAAG;UAErC,IAAM1tC,UAAQ,GAAG9kD,KAAK,CAAC6tF,IAAI,CAAE4C,UAAU,CAAE;UAEzC3rC,UAAQ,CAACvqB,SAAS,CAAC/F,qBAAqB,CAAEk7D,KAAK,CAACz8D,WAAW,CAAE;UAC7D6xB,UAAQ,CAACvqB,SAAS,CAACrH,kBAAkB,CAAE64C,UAAU,CAAE;UAEnD0kB,UAAU,EAAG;QAEd;MAED;IAED;IAEA,OAAO;MACNnsB,KAAK,EAAEA,KAAK;MACZuuB,SAAS,EAAEA,SAAS;MACpB7yF,KAAK,EAAEA;IACR,CAAC;EAEF;EAEA,SAAS8yF,gBAAgBA,CAAE3sC,UAAU,EAAE2I,YAAY,EAAG;IAErD,IAAM7I,MAAM,GAAG,IAAIiqC,WAAW,CAAE/pC,UAAU,EAAE2I,YAAY,CAAE;IAE1D,IAAMikC,WAAW,GAAG,EAAE;IACtB,IAAMC,YAAY,GAAG,EAAE;IAEvB,SAASloB,IAAIA,CAAA,EAAG;MAEfioB,WAAW,CAAC7wF,MAAM,GAAG,CAAC;MACtB8wF,YAAY,CAAC9wF,MAAM,GAAG,CAAC;IAExB;IAEA,SAAS+wF,SAASA,CAAEvD,KAAK,EAAG;MAE3BqD,WAAW,CAACpxF,IAAI,CAAE+tF,KAAK,CAAE;IAE1B;IAEA,SAASwD,UAAUA,CAAEC,WAAW,EAAG;MAElCH,YAAY,CAACrxF,IAAI,CAAEwxF,WAAW,CAAE;IAEjC;IAEA,SAASC,WAAWA,CAAE7M,eAAe,EAAG;MAEvCtgC,MAAM,CAACqe,KAAK,CAAEyuB,WAAW,EAAExM,eAAe,CAAE;IAE7C;IAEA,SAAS8M,eAAeA,CAAEzgE,MAAM,EAAG;MAElCqzB,MAAM,CAAC4sC,SAAS,CAAEE,WAAW,EAAEngE,MAAM,CAAE;IAExC;IAEA,IAAM5yB,KAAK,GAAG;MACb+yF,WAAW,EAAEA,WAAW;MACxBC,YAAY,EAAEA,YAAY;MAE1B/sC,MAAM,EAAEA;IACT,CAAC;IAED,OAAO;MACN6kB,IAAI,EAAEA,IAAI;MACV9qE,KAAK,EAAEA,KAAK;MACZozF,WAAW,EAAEA,WAAW;MACxBC,eAAe,EAAEA,eAAe;MAEhCJ,SAAS,EAAEA,SAAS;MACpBC,UAAU,EAAEA;IACb,CAAC;EAEF;EAEA,SAASI,iBAAiBA,CAAEntC,UAAU,EAAE2I,YAAY,EAAG;IAEtD,IAAIykC,YAAY,GAAG,IAAItkC,OAAO,EAAE;IAEhC,SAAS12C,GAAGA,CAAEkxC,KAAK,EAAE6lC,eAAe,GAAG,CAAC,EAAG;MAE1C,IAAMkE,gBAAgB,GAAGD,YAAY,CAACh7E,GAAG,CAAEkxC,KAAK,CAAE;MAClD,IAAIgqC,WAAW;MAEf,IAAKD,gBAAgB,KAAK5yF,SAAS,EAAG;QAErC6yF,WAAW,GAAG,IAAIX,gBAAgB,CAAE3sC,UAAU,EAAE2I,YAAY,CAAE;QAC9DykC,YAAY,CAAC77E,GAAG,CAAE+xC,KAAK,EAAE,CAAEgqC,WAAW,CAAE,CAAE;MAE3C,CAAC,MAAM;QAEN,IAAKnE,eAAe,IAAIkE,gBAAgB,CAACtxF,MAAM,EAAG;UAEjDuxF,WAAW,GAAG,IAAIX,gBAAgB,CAAE3sC,UAAU,EAAE2I,YAAY,CAAE;UAC9D0kC,gBAAgB,CAAC7xF,IAAI,CAAE8xF,WAAW,CAAE;QAErC,CAAC,MAAM;UAENA,WAAW,GAAGD,gBAAgB,CAAElE,eAAe,CAAE;QAElD;MAED;MAEA,OAAOmE,WAAW;IAEnB;IAEA,SAASzrE,OAAOA,CAAA,EAAG;MAElBurE,YAAY,GAAG,IAAItkC,OAAO,EAAE;IAE7B;IAEA,OAAO;MACN12C,GAAG,EAAEA,GAAG;MACRyP,OAAO,EAAEA;IACV,CAAC;EAEF;EAAC,IAEKiiE,iBAAiB,0BAAAyJ,UAAA;IAAAhuE,SAAA,CAAAukE,iBAAA,EAAAyJ,UAAA;IAAA,IAAAC,QAAA,GAAA/tE,YAAA,CAAAqkE,iBAAA;IAEtB,SAAAA,kBAAavgD,UAAU,EAAG;MAAA,IAAAkqD,OAAA;MAAAlvF,eAAA,OAAAulF,iBAAA;MAEzB2J,OAAA,GAAAD,QAAA,CAAAv1F,IAAA;MAEAw1F,OAAA,CAAKC,mBAAmB,GAAG,IAAI;MAE/BD,OAAA,CAAKz1F,IAAI,GAAG,mBAAmB;MAE/By1F,OAAA,CAAKlN,YAAY,GAAG92E,iBAAiB;MAErCgkF,OAAA,CAAKhiD,GAAG,GAAG,IAAI;MAEfgiD,OAAA,CAAK9hD,QAAQ,GAAG,IAAI;MAEpB8hD,OAAA,CAAKphD,eAAe,GAAG,IAAI;MAC3BohD,OAAA,CAAKnhD,iBAAiB,GAAG,CAAC;MAC1BmhD,OAAA,CAAKlhD,gBAAgB,GAAG,CAAC;MAEzBkhD,OAAA,CAAK1/C,SAAS,GAAG,KAAK;MACtB0/C,OAAA,CAAKz/C,kBAAkB,GAAG,CAAC;MAE3By/C,OAAA,CAAK1jD,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAkqD,OAAA;IAE9B;IAAC1uF,YAAA,CAAA+kF,iBAAA;MAAA7tF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA2yC,iBAAA,CAAAluF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+/D,YAAY,GAAG//D,MAAM,CAAC+/D,YAAY;QAEvC,IAAI,CAAC90C,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QAErB,IAAI,CAACE,QAAQ,GAAGnrB,MAAM,CAACmrB,QAAQ;QAE/B,IAAI,CAACU,eAAe,GAAG7rB,MAAM,CAAC6rB,eAAe;QAC7C,IAAI,CAACC,iBAAiB,GAAG9rB,MAAM,CAAC8rB,iBAAiB;QACjD,IAAI,CAACC,gBAAgB,GAAG/rB,MAAM,CAAC+rB,gBAAgB;QAE/C,IAAI,CAACwB,SAAS,GAAGvtB,MAAM,CAACutB,SAAS;QACjC,IAAI,CAACC,kBAAkB,GAAGxtB,MAAM,CAACwtB,kBAAkB;QAEnD,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA81C,iBAAA;EAAA,EA9C8B78C,QAAQ;EAAA,IAkDlC88C,oBAAoB,0BAAA4J,UAAA;IAAApuE,SAAA,CAAAwkE,oBAAA,EAAA4J,UAAA;IAAA,IAAAC,QAAA,GAAAnuE,YAAA,CAAAskE,oBAAA;IAEzB,SAAAA,qBAAaxgD,UAAU,EAAG;MAAA,IAAAsqD,OAAA;MAAAtvF,eAAA,OAAAwlF,oBAAA;MAEzB8J,OAAA,GAAAD,QAAA,CAAA31F,IAAA;MAEA41F,OAAA,CAAKC,sBAAsB,GAAG,IAAI;MAElCD,OAAA,CAAK71F,IAAI,GAAG,sBAAsB;MAElC61F,OAAA,CAAKpiD,GAAG,GAAG,IAAI;MAEfoiD,OAAA,CAAKliD,QAAQ,GAAG,IAAI;MAEpBkiD,OAAA,CAAKxhD,eAAe,GAAG,IAAI;MAC3BwhD,OAAA,CAAKvhD,iBAAiB,GAAG,CAAC;MAC1BuhD,OAAA,CAAKthD,gBAAgB,GAAG,CAAC;MAEzBshD,OAAA,CAAK9jD,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAsqD,OAAA;IAE9B;IAAC9uF,YAAA,CAAAglF,oBAAA;MAAA9tF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA4yC,oBAAA,CAAAnuF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACirB,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QAErB,IAAI,CAACE,QAAQ,GAAGnrB,MAAM,CAACmrB,QAAQ;QAE/B,IAAI,CAACU,eAAe,GAAG7rB,MAAM,CAAC6rB,eAAe;QAC7C,IAAI,CAACC,iBAAiB,GAAG9rB,MAAM,CAAC8rB,iBAAiB;QACjD,IAAI,CAACC,gBAAgB,GAAG/rB,MAAM,CAAC+rB,gBAAgB;QAE/C,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAw3C,oBAAA;EAAA,EApCiC98C,QAAQ;EAwC3C,IAAM8mD,MAAM,GAAG,0DAA0D;EAEzE,IAAMC,QAAQ,GAAG,imCAAimC;EAElnC,SAASC,cAAcA,CAAE/mB,SAAS,EAAEgnB,QAAQ,EAAEC,aAAa,EAAG;IAAA,IAAAC,WAAA;IAE7D,IAAIC,QAAQ,GAAG,IAAIjoC,OAAO,EAAE;IAE5B,IAAMkoC,cAAc,GAAG,IAAIr8E,OAAO,EAAE;MACnCs8E,aAAa,GAAG,IAAIt8E,OAAO,EAAE;MAE7Bu8E,SAAS,GAAG,IAAIxsE,OAAO,EAAE;MAEzBysE,cAAc,GAAG,IAAI3K,iBAAiB,CAAE;QAAEvD,YAAY,EAAE72E;MAAiB,CAAC,CAAE;MAC5EglF,iBAAiB,GAAG,IAAI3K,oBAAoB,EAAE;MAE9C4K,cAAc,GAAG,CAAC,CAAC;MAEnBC,eAAe,GAAGT,aAAa,CAAChrB,cAAc;IAE/C,IAAMp6B,UAAU,IAAAqlD,WAAA,OAAAlyE,eAAA,CAAAkyE,WAAA,EAAO7sF,SAAS,EAAIC,QAAQ,GAAA0a,eAAA,CAAAkyE,WAAA,EAAI5sF,QAAQ,EAAID,SAAS,GAAA2a,eAAA,CAAAkyE,WAAA,EAAI3sF,UAAU,EAAIA,UAAU,GAAA2sF,WAAA,CAAE;IAEnG,IAAMS,sBAAsB,GAAG,IAAIxvC,cAAc,CAAE;MAClDK,OAAO,EAAE;QACRovC,WAAW,EAAE;MACd,CAAC;MACDnwC,QAAQ,EAAE;QACTowC,WAAW,EAAE;UAAE54F,KAAK,EAAE;QAAK,CAAC;QAC5B64F,UAAU,EAAE;UAAE74F,KAAK,EAAE,IAAI8b,OAAO;QAAG,CAAC;QACpC+b,MAAM,EAAE;UAAE73B,KAAK,EAAE;QAAI;MACtB,CAAC;MAEDypD,YAAY,EAAEmuC,MAAM;MACpBluC,cAAc,EAAEmuC;IAEjB,CAAC,CAAE;IAEH,IAAMiB,wBAAwB,GAAGJ,sBAAsB,CAACl8E,KAAK,EAAE;IAC/Ds8E,wBAAwB,CAACvvC,OAAO,CAACwvC,eAAe,GAAG,CAAC;IAEpD,IAAMC,aAAa,GAAG,IAAIr5C,cAAc,EAAE;IAC1Cq5C,aAAa,CAACv4C,YAAY,CACzB,UAAU,EACV,IAAIzE,eAAe,CAClB,IAAI1gC,YAAY,CAAE,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAE,CAAE,EAC/D,CAAC,CACD,CACD;IAED,IAAM29E,cAAc,GAAG,IAAI5zC,IAAI,CAAE2zC,aAAa,EAAEN,sBAAsB,CAAE;IAExE,IAAMxxC,KAAK,GAAG,IAAI;IAElB,IAAI,CAAChhC,OAAO,GAAG,KAAK;IAEpB,IAAI,CAACgzE,UAAU,GAAG,IAAI;IACtB,IAAI,CAAC3tE,WAAW,GAAG,KAAK;IAExB,IAAI,CAAC1pB,IAAI,GAAGoJ,YAAY;IAExB,IAAI,CAAC2iD,MAAM,GAAG,UAAWjE,MAAM,EAAEwD,KAAK,EAAE72B,MAAM,EAAG;MAEhD,IAAK4wB,KAAK,CAAChhC,OAAO,KAAK,KAAK,EAAG;MAC/B,IAAKghC,KAAK,CAACgyC,UAAU,KAAK,KAAK,IAAIhyC,KAAK,CAAC37B,WAAW,KAAK,KAAK,EAAG;MAEjE,IAAKo+B,MAAM,CAAC/jD,MAAM,KAAK,CAAC,EAAG;MAE3B,IAAM0nD,mBAAmB,GAAGyjB,SAAS,CAACloB,eAAe,EAAE;MACvD,IAAMswC,cAAc,GAAGpoB,SAAS,CAACqoB,iBAAiB,EAAE;MACpD,IAAMC,iBAAiB,GAAGtoB,SAAS,CAACuoB,oBAAoB,EAAE;MAE1D,IAAMC,MAAM,GAAGxoB,SAAS,CAACrtE,KAAK;;MAE9B;MACA61F,MAAM,CAACC,WAAW,CAAEhuF,UAAU,CAAE;MAChC+tF,MAAM,CAAC7mC,OAAO,CAAChtC,KAAK,CAACkhD,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC3C2yB,MAAM,CAAC7mC,OAAO,CAACzkC,KAAK,CAACwrE,OAAO,CAAE,IAAI,CAAE;MACpCF,MAAM,CAACG,cAAc,CAAE,KAAK,CAAE;;MAE9B;;MAEA,KAAM,IAAI7zF,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGo5B,MAAM,CAAC/jD,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;QAEnD,IAAMutF,KAAK,GAAGzpC,MAAM,CAAE9jD,CAAC,CAAE;QACzB,IAAM0+D,MAAM,GAAG6uB,KAAK,CAAC7uB,MAAM;QAE3B,IAAKA,MAAM,KAAKjgE,SAAS,EAAG;UAE3BiF,OAAO,CAACC,IAAI,CAAE,uBAAuB,EAAE4pF,KAAK,EAAE,gBAAgB,CAAE;UAChE;QAED;QAEA,IAAK7uB,MAAM,CAAC20B,UAAU,KAAK,KAAK,IAAI30B,MAAM,CAACh5C,WAAW,KAAK,KAAK,EAAG;QAEnE4sE,cAAc,CAAC17E,IAAI,CAAE8nD,MAAM,CAACqxB,OAAO,CAAE;QAErC,IAAM+D,kBAAkB,GAAGp1B,MAAM,CAACq1B,eAAe,EAAE;QAEnDzB,cAAc,CAACj7E,QAAQ,CAAEy8E,kBAAkB,CAAE;QAE7CvB,aAAa,CAAC37E,IAAI,CAAE8nD,MAAM,CAACqxB,OAAO,CAAE;QAEpC,IAAKuC,cAAc,CAACrgF,CAAC,GAAG2gF,eAAe,IAAIN,cAAc,CAAC//E,CAAC,GAAGqgF,eAAe,EAAG;UAE/E,IAAKN,cAAc,CAACrgF,CAAC,GAAG2gF,eAAe,EAAG;YAEzCL,aAAa,CAACtgF,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAEu/E,eAAe,GAAGkB,kBAAkB,CAAC7hF,CAAC,CAAE;YACtEqgF,cAAc,CAACrgF,CAAC,GAAGsgF,aAAa,CAACtgF,CAAC,GAAG6hF,kBAAkB,CAAC7hF,CAAC;YACzDysD,MAAM,CAACqxB,OAAO,CAAC99E,CAAC,GAAGsgF,aAAa,CAACtgF,CAAC;UAEnC;UAEA,IAAKqgF,cAAc,CAAC//E,CAAC,GAAGqgF,eAAe,EAAG;YAEzCL,aAAa,CAAChgF,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAEu/E,eAAe,GAAGkB,kBAAkB,CAACvhF,CAAC,CAAE;YACtE+/E,cAAc,CAAC//E,CAAC,GAAGggF,aAAa,CAAChgF,CAAC,GAAGuhF,kBAAkB,CAACvhF,CAAC;YACzDmsD,MAAM,CAACqxB,OAAO,CAACx9E,CAAC,GAAGggF,aAAa,CAAChgF,CAAC;UAEnC;QAED;QAEA,IAAKmsD,MAAM,CAACjvB,GAAG,KAAK,IAAI,EAAG;UAE1B,IAAMukD,IAAI,GAAK,IAAI,CAACh4F,IAAI,KAAKsJ,YAAY,GAAK;YAAE0e,SAAS,EAAErb,aAAa;YAAEob,SAAS,EAAEpb;UAAc,CAAC,GAAG,CAAC,CAAC;UAEzG+1D,MAAM,CAACjvB,GAAG,GAAG,IAAI3nB,iBAAiB,CAAEwqE,cAAc,CAACrgF,CAAC,EAAEqgF,cAAc,CAAC//E,CAAC,EAAEyhF,IAAI,CAAE;UAC9Et1B,MAAM,CAACjvB,GAAG,CAACjnB,OAAO,CAACloB,IAAI,GAAGitF,KAAK,CAACjtF,IAAI,GAAG,YAAY;UAEnDo+D,MAAM,CAACjuC,MAAM,CAACi1B,sBAAsB,EAAE;QAEvC;QAEAwlB,SAAS,CAACpjB,eAAe,CAAE4W,MAAM,CAACjvB,GAAG,CAAE;QACvCy7B,SAAS,CAAClmC,KAAK,EAAE;QAEjB,IAAMivD,aAAa,GAAGv1B,MAAM,CAACw1B,gBAAgB,EAAE;QAE/C,KAAM,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGF,aAAa,EAAEE,EAAE,EAAG,EAAG;UAE7C,IAAM5rE,QAAQ,GAAGm2C,MAAM,CAAC01B,WAAW,CAAED,EAAE,CAAE;UAEzC3B,SAAS,CAACj9E,GAAG,CACZg9E,aAAa,CAACtgF,CAAC,GAAGsW,QAAQ,CAACtW,CAAC,EAC5BsgF,aAAa,CAAChgF,CAAC,GAAGgW,QAAQ,CAAChW,CAAC,EAC5BggF,aAAa,CAACtgF,CAAC,GAAGsW,QAAQ,CAACrC,CAAC,EAC5BqsE,aAAa,CAAChgF,CAAC,GAAGgW,QAAQ,CAACpC,CAAC,CAC5B;UAEDutE,MAAM,CAACnrE,QAAQ,CAAEiqE,SAAS,CAAE;UAE5B9zB,MAAM,CAACwxB,cAAc,CAAE3C,KAAK,EAAE4G,EAAE,CAAE;UAElC9B,QAAQ,GAAG3zB,MAAM,CAAC21B,UAAU,EAAE;UAE9BC,YAAY,CAAEhtC,KAAK,EAAE72B,MAAM,EAAEiuC,MAAM,CAACjuC,MAAM,EAAE88D,KAAK,EAAE,IAAI,CAACvxF,IAAI,CAAE;QAE/D;;QAEA;;QAEA,IAAK0iE,MAAM,CAAC61B,kBAAkB,KAAK,IAAI,IAAI,IAAI,CAACv4F,IAAI,KAAKsJ,YAAY,EAAG;UAEvEkvF,OAAO,CAAE91B,MAAM,EAAEjuC,MAAM,CAAE;QAE1B;QAEAiuC,MAAM,CAACh5C,WAAW,GAAG,KAAK;MAE3B;MAEA27B,KAAK,CAAC37B,WAAW,GAAG,KAAK;MAEzBwlD,SAAS,CAACpjB,eAAe,CAAEL,mBAAmB,EAAE6rC,cAAc,EAAEE,iBAAiB,CAAE;IAEpF,CAAC;IAED,SAASgB,OAAOA,CAAE91B,MAAM,EAAEjuC,MAAM,EAAG;MAElC,IAAMiE,QAAQ,GAAGw9D,QAAQ,CAAC5mE,MAAM,CAAE8nE,cAAc,CAAE;MAElD,IAAKP,sBAAsB,CAACnvC,OAAO,CAACovC,WAAW,KAAKp0B,MAAM,CAAC+1B,WAAW,EAAG;QAExE5B,sBAAsB,CAACnvC,OAAO,CAACovC,WAAW,GAAGp0B,MAAM,CAAC+1B,WAAW;QAC/DxB,wBAAwB,CAACvvC,OAAO,CAACovC,WAAW,GAAGp0B,MAAM,CAAC+1B,WAAW;QAEjE5B,sBAAsB,CAACntE,WAAW,GAAG,IAAI;QACzCutE,wBAAwB,CAACvtE,WAAW,GAAG,IAAI;MAE5C;MAEA,IAAKg5C,MAAM,CAACg2B,OAAO,KAAK,IAAI,EAAG;QAE9Bh2B,MAAM,CAACg2B,OAAO,GAAG,IAAI5sE,iBAAiB,CAAEwqE,cAAc,CAACrgF,CAAC,EAAEqgF,cAAc,CAAC//E,CAAC,CAAE;MAE7E;;MAEA;;MAEAsgF,sBAAsB,CAAClwC,QAAQ,CAACowC,WAAW,CAAC54F,KAAK,GAAGukE,MAAM,CAACjvB,GAAG,CAACjnB,OAAO;MACtEqqE,sBAAsB,CAAClwC,QAAQ,CAACqwC,UAAU,CAAC74F,KAAK,GAAGukE,MAAM,CAACqxB,OAAO;MACjE8C,sBAAsB,CAAClwC,QAAQ,CAAC3wB,MAAM,CAAC73B,KAAK,GAAGukE,MAAM,CAAC1sC,MAAM;MAC5Dk5C,SAAS,CAACpjB,eAAe,CAAE4W,MAAM,CAACg2B,OAAO,CAAE;MAC3CxpB,SAAS,CAAClmC,KAAK,EAAE;MACjBkmC,SAAS,CAACypB,kBAAkB,CAAElkE,MAAM,EAAE,IAAI,EAAEiE,QAAQ,EAAEm+D,sBAAsB,EAAEO,cAAc,EAAE,IAAI,CAAE;;MAEpG;;MAEAH,wBAAwB,CAACtwC,QAAQ,CAACowC,WAAW,CAAC54F,KAAK,GAAGukE,MAAM,CAACg2B,OAAO,CAAClsE,OAAO;MAC5EyqE,wBAAwB,CAACtwC,QAAQ,CAACqwC,UAAU,CAAC74F,KAAK,GAAGukE,MAAM,CAACqxB,OAAO;MACnEkD,wBAAwB,CAACtwC,QAAQ,CAAC3wB,MAAM,CAAC73B,KAAK,GAAGukE,MAAM,CAAC1sC,MAAM;MAC9Dk5C,SAAS,CAACpjB,eAAe,CAAE4W,MAAM,CAACjvB,GAAG,CAAE;MACvCy7B,SAAS,CAAClmC,KAAK,EAAE;MACjBkmC,SAAS,CAACypB,kBAAkB,CAAElkE,MAAM,EAAE,IAAI,EAAEiE,QAAQ,EAAEu+D,wBAAwB,EAAEG,cAAc,EAAE,IAAI,CAAE;IAEvG;IAEA,SAASwB,gBAAgBA,CAAE5zF,MAAM,EAAE6mC,QAAQ,EAAE0lD,KAAK,EAAEvxF,IAAI,EAAG;MAE1D,IAAIqB,MAAM,GAAG,IAAI;MAEjB,IAAMw3F,cAAc,GAAKtH,KAAK,CAAC6C,YAAY,KAAK,IAAI,GAAKpvF,MAAM,CAAC8zF,sBAAsB,GAAG9zF,MAAM,CAAC+zF,mBAAmB;MAEnH,IAAKF,cAAc,KAAKp2F,SAAS,EAAG;QAEnCpB,MAAM,GAAGw3F,cAAc;MAExB,CAAC,MAAM;QAENx3F,MAAM,GAAKkwF,KAAK,CAAC6C,YAAY,KAAK,IAAI,GAAKsC,iBAAiB,GAAGD,cAAc;QAE7E,IAAOvnB,SAAS,CAAC5C,oBAAoB,IAAIzgC,QAAQ,CAACiF,WAAW,KAAK,IAAI,IAAI/pB,KAAK,CAACC,OAAO,CAAE6kB,QAAQ,CAAC+E,cAAc,CAAE,IAAI/E,QAAQ,CAAC+E,cAAc,CAAC7sC,MAAM,KAAK,CAAC,IACvJ8nC,QAAQ,CAACwI,eAAe,IAAIxI,QAAQ,CAACyI,iBAAiB,KAAK,CAAG,IAC9DzI,QAAQ,CAAC8H,QAAQ,IAAI9H,QAAQ,CAACiK,SAAS,GAAG,CAAG,IAC7CjK,QAAQ,CAAC4H,GAAG,IAAI5H,QAAQ,CAACiK,SAAS,GAAG,CAAG,EAAG;UAE7C;UACA;;UAEA,IAAMkjD,IAAI,GAAG33F,MAAM,CAACmU,IAAI;YAAEyjF,IAAI,GAAGptD,QAAQ,CAACr2B,IAAI;UAE9C,IAAI0jF,mBAAmB,GAAGvC,cAAc,CAAEqC,IAAI,CAAE;UAEhD,IAAKE,mBAAmB,KAAKz2F,SAAS,EAAG;YAExCy2F,mBAAmB,GAAG,CAAC,CAAC;YACxBvC,cAAc,CAAEqC,IAAI,CAAE,GAAGE,mBAAmB;UAE7C;UAEA,IAAIC,cAAc,GAAGD,mBAAmB,CAAED,IAAI,CAAE;UAEhD,IAAKE,cAAc,KAAK12F,SAAS,EAAG;YAEnC02F,cAAc,GAAG93F,MAAM,CAACsZ,KAAK,EAAE;YAC/Bu+E,mBAAmB,CAAED,IAAI,CAAE,GAAGE,cAAc;UAE7C;UAEA93F,MAAM,GAAG83F,cAAc;QAExB;MAED;MAEA93F,MAAM,CAAC8lC,OAAO,GAAG0E,QAAQ,CAAC1E,OAAO;MACjC9lC,MAAM,CAAC00C,SAAS,GAAGlK,QAAQ,CAACkK,SAAS;MAErC,IAAK/1C,IAAI,KAAKsJ,YAAY,EAAG;QAE5BjI,MAAM,CAACkuC,IAAI,GAAK1D,QAAQ,CAACkF,UAAU,KAAK,IAAI,GAAKlF,QAAQ,CAACkF,UAAU,GAAGlF,QAAQ,CAAC0D,IAAI;MAErF,CAAC,MAAM;QAENluC,MAAM,CAACkuC,IAAI,GAAK1D,QAAQ,CAACkF,UAAU,KAAK,IAAI,GAAKlF,QAAQ,CAACkF,UAAU,GAAGA,UAAU,CAAElF,QAAQ,CAAC0D,IAAI,CAAE;MAEnG;MAEAluC,MAAM,CAACsyC,QAAQ,GAAG9H,QAAQ,CAAC8H,QAAQ;MACnCtyC,MAAM,CAACy0C,SAAS,GAAGjK,QAAQ,CAACiK,SAAS;MACrCz0C,MAAM,CAACoyC,GAAG,GAAG5H,QAAQ,CAAC4H,GAAG;MAEzBpyC,MAAM,CAACyvC,WAAW,GAAGjF,QAAQ,CAACiF,WAAW;MACzCzvC,MAAM,CAACuvC,cAAc,GAAG/E,QAAQ,CAAC+E,cAAc;MAC/CvvC,MAAM,CAACwvC,gBAAgB,GAAGhF,QAAQ,CAACgF,gBAAgB;MAEnDxvC,MAAM,CAACgzC,eAAe,GAAGxI,QAAQ,CAACwI,eAAe;MACjDhzC,MAAM,CAACizC,iBAAiB,GAAGzI,QAAQ,CAACyI,iBAAiB;MACrDjzC,MAAM,CAACkzC,gBAAgB,GAAG1I,QAAQ,CAAC0I,gBAAgB;MAEnDlzC,MAAM,CAAC20C,kBAAkB,GAAGnK,QAAQ,CAACmK,kBAAkB;MACvD30C,MAAM,CAACs0C,SAAS,GAAG9J,QAAQ,CAAC8J,SAAS;MAErC,IAAK47C,KAAK,CAAC6C,YAAY,KAAK,IAAI,IAAI/yF,MAAM,CAACy0F,sBAAsB,KAAK,IAAI,EAAG;QAE5E,IAAM3oB,kBAAkB,GAAG+B,SAAS,CAACzP,UAAU,CAACrlD,GAAG,CAAE/Y,MAAM,CAAE;QAC7D8rE,kBAAkB,CAACokB,KAAK,GAAGA,KAAK;MAEjC;MAEA,OAAOlwF,MAAM;IAEd;IAEA,SAASi3F,YAAYA,CAAEtzF,MAAM,EAAEyvB,MAAM,EAAE2kE,YAAY,EAAE7H,KAAK,EAAEvxF,IAAI,EAAG;MAElE,IAAKgF,MAAM,CAACmiC,OAAO,KAAK,KAAK,EAAG;MAEhC,IAAMA,OAAO,GAAGniC,MAAM,CAACogC,MAAM,CAAC/f,IAAI,CAAEoP,MAAM,CAAC2Q,MAAM,CAAE;MAEnD,IAAK+B,OAAO,KAAMniC,MAAM,CAAComC,MAAM,IAAIpmC,MAAM,CAACqmC,MAAM,IAAIrmC,MAAM,CAACsmC,QAAQ,CAAE,EAAG;QAEvE,IAAK,CAAEtmC,MAAM,CAACoiC,UAAU,IAAMpiC,MAAM,CAACqiC,aAAa,IAAIrnC,IAAI,KAAKsJ,YAAc,MAAQ,CAAEtE,MAAM,CAACsiC,aAAa,IAAI+uD,QAAQ,CAAC3mC,gBAAgB,CAAE1qD,MAAM,CAAE,CAAE,EAAG;UAEtJA,MAAM,CAAC6hC,eAAe,CAACtnB,gBAAgB,CAAE65E,YAAY,CAAC1kE,kBAAkB,EAAE1vB,MAAM,CAAC8vB,WAAW,CAAE;UAE9F,IAAM4D,QAAQ,GAAGw9D,QAAQ,CAAC5mE,MAAM,CAAEtqB,MAAM,CAAE;UAC1C,IAAM6mC,QAAQ,GAAG7mC,MAAM,CAAC6mC,QAAQ;UAEhC,IAAK9kB,KAAK,CAACC,OAAO,CAAE6kB,QAAQ,CAAE,EAAG;YAEhC,IAAMwS,MAAM,GAAG3lB,QAAQ,CAAC2lB,MAAM;YAE9B,KAAM,IAAIg7C,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGj7C,MAAM,CAACt6C,MAAM,EAAEs1F,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAG,EAAG;cAEnD,IAAMz4C,KAAK,GAAGvC,MAAM,CAAEg7C,CAAC,CAAE;cACzB,IAAM70C,aAAa,GAAG3Y,QAAQ,CAAE+U,KAAK,CAAC5B,aAAa,CAAE;cAErD,IAAKwF,aAAa,IAAIA,aAAa,CAACrd,OAAO,EAAG;gBAE7C,IAAMoyD,aAAa,GAAGX,gBAAgB,CAAE5zF,MAAM,EAAEw/C,aAAa,EAAE+sC,KAAK,EAAEvxF,IAAI,CAAE;gBAE5EkvE,SAAS,CAACypB,kBAAkB,CAAES,YAAY,EAAE,IAAI,EAAE1gE,QAAQ,EAAE6gE,aAAa,EAAEv0F,MAAM,EAAE47C,KAAK,CAAE;cAE3F;YAED;UAED,CAAC,MAAM,IAAK/U,QAAQ,CAAC1E,OAAO,EAAG;YAE9B,IAAMoyD,eAAa,GAAGX,gBAAgB,CAAE5zF,MAAM,EAAE6mC,QAAQ,EAAE0lD,KAAK,EAAEvxF,IAAI,CAAE;YAEvEkvE,SAAS,CAACypB,kBAAkB,CAAES,YAAY,EAAE,IAAI,EAAE1gE,QAAQ,EAAE6gE,eAAa,EAAEv0F,MAAM,EAAE,IAAI,CAAE;UAE1F;QAED;MAED;MAEA,IAAM6zB,QAAQ,GAAG7zB,MAAM,CAAC6zB,QAAQ;MAEhC,KAAM,IAAI70B,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGkkB,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;QAEnDs0F,YAAY,CAAEz/D,QAAQ,CAAE70B,CAAC,CAAE,EAAEywB,MAAM,EAAE2kE,YAAY,EAAE7H,KAAK,EAAEvxF,IAAI,CAAE;MAEjE;IAED;EAED;EAEA,SAASw5F,UAAUA,CAAE9oC,EAAE,EAAE1I,UAAU,EAAE2I,YAAY,EAAG;IAAA,IAAA8oC,aAAA,EAAAC,WAAA;IAEnD,IAAM9oC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;IAEtC,SAAS+oC,WAAWA,CAAA,EAAG;MAEtB,IAAIC,MAAM,GAAG,KAAK;MAElB,IAAM/1E,KAAK,GAAG,IAAImG,OAAO,EAAE;MAC3B,IAAI6vE,gBAAgB,GAAG,IAAI;MAC3B,IAAMC,iBAAiB,GAAG,IAAI9vE,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEnD,OAAO;QAEN+vE,OAAO,EAAE,SAAAA,QAAWC,SAAS,EAAG;UAE/B,IAAKH,gBAAgB,KAAKG,SAAS,IAAI,CAAEJ,MAAM,EAAG;YAEjDlpC,EAAE,CAACspC,SAAS,CAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,CAAE;YAC1DH,gBAAgB,GAAGG,SAAS;UAE7B;QAED,CAAC;QAEDC,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;UAE5BN,MAAM,GAAGM,IAAI;QAEd,CAAC;QAEDn1B,QAAQ,EAAE,SAAAA,SAAWljD,CAAC,EAAEb,CAAC,EAAEtI,CAAC,EAAED,CAAC,EAAE84B,kBAAkB,EAAG;UAErD,IAAKA,kBAAkB,KAAK,IAAI,EAAG;YAElC1vB,CAAC,IAAIpJ,CAAC;YAAEuI,CAAC,IAAIvI,CAAC;YAAEC,CAAC,IAAID,CAAC;UAEvB;UAEAoL,KAAK,CAACtK,GAAG,CAAEsI,CAAC,EAAEb,CAAC,EAAEtI,CAAC,EAAED,CAAC,CAAE;UAEvB,IAAKqhF,iBAAiB,CAACv8E,MAAM,CAAEsG,KAAK,CAAE,KAAK,KAAK,EAAG;YAElD6sC,EAAE,CAACwT,UAAU,CAAEriD,CAAC,EAAEb,CAAC,EAAEtI,CAAC,EAAED,CAAC,CAAE;YAC3BqhF,iBAAiB,CAACl/E,IAAI,CAAEiJ,KAAK,CAAE;UAEhC;QAED,CAAC;QAEDlgB,KAAK,EAAE,SAAAA,MAAA,EAAY;UAElBi2F,MAAM,GAAG,KAAK;UAEdC,gBAAgB,GAAG,IAAI;UACvBC,iBAAiB,CAACvgF,GAAG,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC;QAExC;MAED,CAAC;IAEF;;IAEA,SAAS4gF,WAAWA,CAAA,EAAG;MAEtB,IAAIP,MAAM,GAAG,KAAK;MAElB,IAAIQ,gBAAgB,GAAG,IAAI;MAC3B,IAAIC,gBAAgB,GAAG,IAAI;MAC3B,IAAIC,iBAAiB,GAAG,IAAI;MAE5B,OAAO;QAEN1C,OAAO,EAAE,SAAAA,QAAW1nD,SAAS,EAAG;UAE/B,IAAKA,SAAS,EAAG;YAEhBnL,MAAM,CAAE2rB,EAAE,CAAC6pC,UAAU,CAAE;UAExB,CAAC,MAAM;YAENr1D,OAAO,CAAEwrB,EAAE,CAAC6pC,UAAU,CAAE;UAEzB;QAED,CAAC;QAEDR,OAAO,EAAE,SAAAA,QAAWS,SAAS,EAAG;UAE/B,IAAKJ,gBAAgB,KAAKI,SAAS,IAAI,CAAEZ,MAAM,EAAG;YAEjDlpC,EAAE,CAAC8pC,SAAS,CAAEA,SAAS,CAAE;YACzBJ,gBAAgB,GAAGI,SAAS;UAE7B;QAED,CAAC;QAEDC,OAAO,EAAE,SAAAA,QAAWxqD,SAAS,EAAG;UAE/B,IAAKoqD,gBAAgB,KAAKpqD,SAAS,EAAG;YAErC,QAASA,SAAS;cAEjB,KAAKhlC,UAAU;gBAEdylD,EAAE,CAACzgB,SAAS,CAAEygB,EAAE,CAACgqC,KAAK,CAAE;gBACxB;cAED,KAAKxvF,WAAW;gBAEfwlD,EAAE,CAACzgB,SAAS,CAAEygB,EAAE,CAACiqC,MAAM,CAAE;gBACzB;cAED,KAAKxvF,SAAS;gBAEbulD,EAAE,CAACzgB,SAAS,CAAEygB,EAAE,CAACkqC,IAAI,CAAE;gBACvB;cAED,KAAKxvF,cAAc;gBAElBslD,EAAE,CAACzgB,SAAS,CAAEygB,EAAE,CAACmqC,MAAM,CAAE;gBACzB;cAED,KAAKxvF,UAAU;gBAEdqlD,EAAE,CAACzgB,SAAS,CAAEygB,EAAE,CAACoqC,KAAK,CAAE;gBACxB;cAED,KAAKxvF,iBAAiB;gBAErBolD,EAAE,CAACzgB,SAAS,CAAEygB,EAAE,CAACqqC,MAAM,CAAE;gBACzB;cAED,KAAKxvF,YAAY;gBAEhBmlD,EAAE,CAACzgB,SAAS,CAAEygB,EAAE,CAACsqC,OAAO,CAAE;gBAC1B;cAED,KAAKxvF,aAAa;gBAEjBklD,EAAE,CAACzgB,SAAS,CAAEygB,EAAE,CAACuqC,QAAQ,CAAE;gBAC3B;cAED;gBAECvqC,EAAE,CAACzgB,SAAS,CAAEygB,EAAE,CAACmqC,MAAM,CAAE;YAAC;YAI5BR,gBAAgB,GAAGpqD,SAAS;UAE7B;QAED,CAAC;QAEDgqD,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;UAE5BN,MAAM,GAAGM,IAAI;QAEd,CAAC;QAEDn1B,QAAQ,EAAE,SAAAA,SAAW34C,KAAK,EAAG;UAE5B,IAAKkuE,iBAAiB,KAAKluE,KAAK,EAAG;YAElCskC,EAAE,CAACwqC,UAAU,CAAE9uE,KAAK,CAAE;YACtBkuE,iBAAiB,GAAGluE,KAAK;UAE1B;QAED,CAAC;QAEDzoB,KAAK,EAAE,SAAAA,MAAA,EAAY;UAElBi2F,MAAM,GAAG,KAAK;UAEdQ,gBAAgB,GAAG,IAAI;UACvBC,gBAAgB,GAAG,IAAI;UACvBC,iBAAiB,GAAG,IAAI;QAEzB;MAED,CAAC;IAEF;IAEA,SAASa,aAAaA,CAAA,EAAG;MAExB,IAAIvB,MAAM,GAAG,KAAK;MAElB,IAAIwB,kBAAkB,GAAG,IAAI;MAC7B,IAAIC,kBAAkB,GAAG,IAAI;MAC7B,IAAIC,iBAAiB,GAAG,IAAI;MAC5B,IAAIC,sBAAsB,GAAG,IAAI;MACjC,IAAIC,kBAAkB,GAAG,IAAI;MAC7B,IAAIC,mBAAmB,GAAG,IAAI;MAC9B,IAAIC,mBAAmB,GAAG,IAAI;MAC9B,IAAIC,mBAAmB,GAAG,IAAI;MAE9B,OAAO;QAEN/D,OAAO,EAAE,SAAAA,QAAWgE,WAAW,EAAG;UAEjC,IAAK,CAAEhC,MAAM,EAAG;YAEf,IAAKgC,WAAW,EAAG;cAElB72D,MAAM,CAAE2rB,EAAE,CAACmrC,YAAY,CAAE;YAE1B,CAAC,MAAM;cAEN32D,OAAO,CAAEwrB,EAAE,CAACmrC,YAAY,CAAE;YAE3B;UAED;QAED,CAAC;QAED9B,OAAO,EAAE,SAAAA,QAAW+B,WAAW,EAAG;UAEjC,IAAKV,kBAAkB,KAAKU,WAAW,IAAI,CAAElC,MAAM,EAAG;YAErDlpC,EAAE,CAACorC,WAAW,CAAEA,WAAW,CAAE;YAC7BV,kBAAkB,GAAGU,WAAW;UAEjC;QAED,CAAC;QAEDrB,OAAO,EAAE,SAAAA,QAAWpqD,WAAW,EAAEC,UAAU,EAAEwrD,WAAW,EAAG;UAE1D,IAAKT,kBAAkB,KAAKhrD,WAAW,IAClCirD,iBAAiB,KAAKhrD,UAAU,IAChCirD,sBAAsB,KAAKO,WAAW,EAAG;YAE7CprC,EAAE,CAACrgB,WAAW,CAAEA,WAAW,EAAEC,UAAU,EAAEwrD,WAAW,CAAE;YAEtDT,kBAAkB,GAAGhrD,WAAW;YAChCirD,iBAAiB,GAAGhrD,UAAU;YAC9BirD,sBAAsB,GAAGO,WAAW;UAErC;QAED,CAAC;QAEDC,KAAK,EAAE,SAAAA,MAAWvrD,WAAW,EAAEC,YAAY,EAAEC,YAAY,EAAG;UAE3D,IAAK8qD,kBAAkB,KAAKhrD,WAAW,IAClCirD,mBAAmB,KAAKhrD,YAAY,IACpCirD,mBAAmB,KAAKhrD,YAAY,EAAG;YAE3CggB,EAAE,CAACsrC,SAAS,CAAExrD,WAAW,EAAEC,YAAY,EAAEC,YAAY,CAAE;YAEvD8qD,kBAAkB,GAAGhrD,WAAW;YAChCirD,mBAAmB,GAAGhrD,YAAY;YAClCirD,mBAAmB,GAAGhrD,YAAY;UAEnC;QAED,CAAC;QAEDupD,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;UAE5BN,MAAM,GAAGM,IAAI;QAEd,CAAC;QAEDn1B,QAAQ,EAAE,SAAAA,SAAWhY,OAAO,EAAG;UAE9B,IAAK4uC,mBAAmB,KAAK5uC,OAAO,EAAG;YAEtC2D,EAAE,CAACurC,YAAY,CAAElvC,OAAO,CAAE;YAC1B4uC,mBAAmB,GAAG5uC,OAAO;UAE9B;QAED,CAAC;QAEDppD,KAAK,EAAE,SAAAA,MAAA,EAAY;UAElBi2F,MAAM,GAAG,KAAK;UAEdwB,kBAAkB,GAAG,IAAI;UACzBC,kBAAkB,GAAG,IAAI;UACzBC,iBAAiB,GAAG,IAAI;UACxBC,sBAAsB,GAAG,IAAI;UAC7BC,kBAAkB,GAAG,IAAI;UACzBC,mBAAmB,GAAG,IAAI;UAC1BC,mBAAmB,GAAG,IAAI;UAC1BC,mBAAmB,GAAG,IAAI;QAE3B;MAED,CAAC;IAEF;;IAEA;;IAEA,IAAMO,WAAW,GAAG,IAAIvC,WAAW,EAAE;IACrC,IAAMltE,WAAW,GAAG,IAAI0tE,WAAW,EAAE;IACrC,IAAMztE,aAAa,GAAG,IAAIyuE,aAAa,EAAE;IAEzC,IAAMgB,WAAW,GAAG,IAAIrrC,OAAO,EAAE;IACjC,IAAMsrC,aAAa,GAAG,IAAItrC,OAAO,EAAE;IAEnC,IAAIurC,mBAAmB,GAAG,CAAC,CAAC;IAE5B,IAAIC,wBAAwB,GAAG,CAAC,CAAC;IACjC,IAAIC,kBAAkB,GAAG,IAAIzrC,OAAO,EAAE;IACtC,IAAI0rC,kBAAkB,GAAG,EAAE;IAE3B,IAAIC,cAAc,GAAG,IAAI;IAEzB,IAAIC,sBAAsB,GAAG,KAAK;IAClC,IAAIC,eAAe,GAAG,IAAI;IAC1B,IAAIC,oBAAoB,GAAG,IAAI;IAC/B,IAAIC,eAAe,GAAG,IAAI;IAC1B,IAAIC,eAAe,GAAG,IAAI;IAC1B,IAAIC,yBAAyB,GAAG,IAAI;IACpC,IAAIC,oBAAoB,GAAG,IAAI;IAC/B,IAAIC,oBAAoB,GAAG,IAAI;IAC/B,IAAIC,wBAAwB,GAAG,KAAK;IAEpC,IAAIC,gBAAgB,GAAG,IAAI;IAC3B,IAAIC,eAAe,GAAG,IAAI;IAE1B,IAAIC,gBAAgB,GAAG,IAAI;IAE3B,IAAIC,0BAA0B,GAAG,IAAI;IACrC,IAAIC,yBAAyB,GAAG,IAAI;IAEpC,IAAMxyB,WAAW,GAAGra,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAAC8sC,gCAAgC,CAAE;IAE1E,IAAIC,kBAAkB,GAAG,KAAK;IAC9B,IAAIj3E,OAAO,GAAG,CAAC;IACf,IAAMk3E,SAAS,GAAGhtC,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACitC,OAAO,CAAE;IAE/C,IAAKD,SAAS,CAACxpF,OAAO,CAAE,OAAO,CAAE,KAAK,CAAE,CAAC,EAAG;MAE3CsS,OAAO,GAAG6wB,UAAU,CAAE,aAAa,CAACC,IAAI,CAAEomD,SAAS,CAAE,CAAE,CAAC,CAAE,CAAE;MAC5DD,kBAAkB,GAAKj3E,OAAO,IAAI,GAAK;IAExC,CAAC,MAAM,IAAKk3E,SAAS,CAACxpF,OAAO,CAAE,WAAW,CAAE,KAAK,CAAE,CAAC,EAAG;MAEtDsS,OAAO,GAAG6wB,UAAU,CAAE,iBAAiB,CAACC,IAAI,CAAEomD,SAAS,CAAE,CAAE,CAAC,CAAE,CAAE;MAChED,kBAAkB,GAAKj3E,OAAO,IAAI,GAAK;IAExC;IAEA,IAAIo3E,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,oBAAoB,GAAG,CAAC,CAAC;IAE7B,IAAMC,YAAY,GAAGptC,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACqtC,WAAW,CAAE;IACtD,IAAMC,aAAa,GAAGttC,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACutC,QAAQ,CAAE;IAEpD,IAAMC,cAAc,GAAG,IAAIl0E,OAAO,EAAE,CAACxM,SAAS,CAAEsgF,YAAY,CAAE;IAC9D,IAAMK,eAAe,GAAG,IAAIn0E,OAAO,EAAE,CAACxM,SAAS,CAAEwgF,aAAa,CAAE;IAEhE,SAASI,aAAaA,CAAEp+F,IAAI,EAAE2G,MAAM,EAAE4nB,KAAK,EAAG;MAE7C,IAAMlI,IAAI,GAAG,IAAI1M,UAAU,CAAE,CAAC,CAAE,CAAC,CAAC;MAClC,IAAM6S,OAAO,GAAGkkC,EAAE,CAAC0tC,aAAa,EAAE;MAElC1tC,EAAE,CAAC2tC,WAAW,CAAEr+F,IAAI,EAAEwsB,OAAO,CAAE;MAC/BkkC,EAAE,CAAC4tC,aAAa,CAAEt+F,IAAI,EAAE0wD,EAAE,CAAC6tC,kBAAkB,EAAE7tC,EAAE,CAAC8tC,OAAO,CAAE;MAC3D9tC,EAAE,CAAC4tC,aAAa,CAAEt+F,IAAI,EAAE0wD,EAAE,CAAC+tC,kBAAkB,EAAE/tC,EAAE,CAAC8tC,OAAO,CAAE;MAE3D,KAAM,IAAIx6F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuqB,KAAK,EAAEvqB,CAAC,EAAG,EAAG;QAElC0sD,EAAE,CAACguC,UAAU,CAAE/3F,MAAM,GAAG3C,CAAC,EAAE,CAAC,EAAE0sD,EAAE,CAACiuC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEjuC,EAAE,CAACiuC,IAAI,EAAEjuC,EAAE,CAACgB,aAAa,EAAErrC,IAAI,CAAE;MAElF;MAEA,OAAOmG,OAAO;IAEf;IAEA,IAAMoyE,aAAa,GAAG,CAAC,CAAC;IACxBA,aAAa,CAAEluC,EAAE,CAACmuC,UAAU,CAAE,GAAGT,aAAa,CAAE1tC,EAAE,CAACmuC,UAAU,EAAEnuC,EAAE,CAACmuC,UAAU,EAAE,CAAC,CAAE;IACjFD,aAAa,CAAEluC,EAAE,CAACouC,gBAAgB,CAAE,GAAGV,aAAa,CAAE1tC,EAAE,CAACouC,gBAAgB,EAAEpuC,EAAE,CAACquC,2BAA2B,EAAE,CAAC,CAAE;;IAE9G;;IAEA7C,WAAW,CAACn3B,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAClCt4C,WAAW,CAACs4C,QAAQ,CAAE,CAAC,CAAE;IACzBr4C,aAAa,CAACq4C,QAAQ,CAAE,CAAC,CAAE;IAE3BhgC,MAAM,CAAE2rB,EAAE,CAAC6pC,UAAU,CAAE;IACvB9tE,WAAW,CAACguE,OAAO,CAAErvF,cAAc,CAAE;IAErC4zF,YAAY,CAAE,KAAK,CAAE;IACrBC,WAAW,CAAEj2F,YAAY,CAAE;IAC3B+7B,MAAM,CAAE2rB,EAAE,CAACwuC,SAAS,CAAE;IAEtBvH,WAAW,CAAEhuF,UAAU,CAAE;;IAEzB;;IAEA,SAASo7B,MAAMA,CAAEoE,EAAE,EAAG;MAErB,IAAKkzD,mBAAmB,CAAElzD,EAAE,CAAE,KAAK,IAAI,EAAG;QAEzCunB,EAAE,CAAC3rB,MAAM,CAAEoE,EAAE,CAAE;QACfkzD,mBAAmB,CAAElzD,EAAE,CAAE,GAAG,IAAI;MAEjC;IAED;IAEA,SAASjE,OAAOA,CAAEiE,EAAE,EAAG;MAEtB,IAAKkzD,mBAAmB,CAAElzD,EAAE,CAAE,KAAK,KAAK,EAAG;QAE1CunB,EAAE,CAACxrB,OAAO,CAAEiE,EAAE,CAAE;QAChBkzD,mBAAmB,CAAElzD,EAAE,CAAE,GAAG,KAAK;MAElC;IAED;IAEA,SAASg2D,eAAeA,CAAEx4F,MAAM,EAAEy4F,WAAW,EAAG;MAE/C,IAAK9C,wBAAwB,CAAE31F,MAAM,CAAE,KAAKy4F,WAAW,EAAG;QAEzD1uC,EAAE,CAACyuC,eAAe,CAAEx4F,MAAM,EAAEy4F,WAAW,CAAE;QAEzC9C,wBAAwB,CAAE31F,MAAM,CAAE,GAAGy4F,WAAW;QAEhD,IAAKxuC,QAAQ,EAAG;UAEf;;UAEA,IAAKjqD,MAAM,KAAK+pD,EAAE,CAAC2uC,gBAAgB,EAAG;YAErC/C,wBAAwB,CAAE5rC,EAAE,CAAC4uC,WAAW,CAAE,GAAGF,WAAW;UAEzD;UAEA,IAAKz4F,MAAM,KAAK+pD,EAAE,CAAC4uC,WAAW,EAAG;YAEhChD,wBAAwB,CAAE5rC,EAAE,CAAC2uC,gBAAgB,CAAE,GAAGD,WAAW;UAE9D;QAED;QAEA,OAAO,IAAI;MAEZ;MAEA,OAAO,KAAK;IAEb;IAEA,SAASj3C,WAAWA,CAAE2C,YAAY,EAAEs0C,WAAW,EAAG;MAEjD,IAAIj3C,WAAW,GAAGq0C,kBAAkB;MAEpC,IAAI9yE,WAAW,GAAG,KAAK;MAEvB,IAAKohC,YAAY,EAAG;QAEnB3C,WAAW,GAAGo0C,kBAAkB,CAACniF,GAAG,CAAEglF,WAAW,CAAE;QAEnD,IAAKj3C,WAAW,KAAK1lD,SAAS,EAAG;UAEhC0lD,WAAW,GAAG,EAAE;UAChBo0C,kBAAkB,CAAChjF,GAAG,CAAE6lF,WAAW,EAAEj3C,WAAW,CAAE;QAEnD;QAEA,IAAK2C,YAAY,CAACr8B,4BAA4B,EAAG;UAEhD,IAAM9E,QAAQ,GAAGmhC,YAAY,CAACt+B,OAAO;UAErC,IAAK27B,WAAW,CAACpkD,MAAM,KAAK4lB,QAAQ,CAAC5lB,MAAM,IAAIokD,WAAW,CAAE,CAAC,CAAE,KAAKuI,EAAE,CAAC6uC,iBAAiB,EAAG;YAE1F,KAAM,IAAIv7F,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG/E,QAAQ,CAAC5lB,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;cAErDmkD,WAAW,CAAEnkD,CAAC,CAAE,GAAG0sD,EAAE,CAAC6uC,iBAAiB,GAAGv7F,CAAC;YAE5C;YAEAmkD,WAAW,CAACpkD,MAAM,GAAG4lB,QAAQ,CAAC5lB,MAAM;YAEpC2lB,WAAW,GAAG,IAAI;UAEnB;QAED,CAAC,MAAM;UAEN,IAAKy+B,WAAW,CAAE,CAAC,CAAE,KAAKuI,EAAE,CAAC6uC,iBAAiB,EAAG;YAEhDp3C,WAAW,CAAE,CAAC,CAAE,GAAGuI,EAAE,CAAC6uC,iBAAiB;YAEvC71E,WAAW,GAAG,IAAI;UAEnB;QAED;MAED,CAAC,MAAM;QAEN,IAAKy+B,WAAW,CAAE,CAAC,CAAE,KAAKuI,EAAE,CAAC8uC,IAAI,EAAG;UAEnCr3C,WAAW,CAAE,CAAC,CAAE,GAAGuI,EAAE,CAAC8uC,IAAI;UAE1B91E,WAAW,GAAG,IAAI;QAEnB;MAED;MAEA,IAAKA,WAAW,EAAG;QAElB,IAAKinC,YAAY,CAACC,QAAQ,EAAG;UAE5BF,EAAE,CAACvI,WAAW,CAAEA,WAAW,CAAE;QAE9B,CAAC,MAAM;UAENH,UAAU,CAAC5tC,GAAG,CAAE,oBAAoB,CAAE,CAACqlF,gBAAgB,CAAEt3C,WAAW,CAAE;QAEvE;MAED;IAGD;IAEA,SAASu3C,UAAUA,CAAEt5B,OAAO,EAAG;MAE9B,IAAKq2B,cAAc,KAAKr2B,OAAO,EAAG;QAEjC1V,EAAE,CAACgvC,UAAU,CAAEt5B,OAAO,CAAE;QAExBq2B,cAAc,GAAGr2B,OAAO;QAExB,OAAO,IAAI;MAEZ;MAEA,OAAO,KAAK;IAEb;IAEA,IAAMu5B,YAAY,IAAAlG,aAAA,OAAAv1E,eAAA,CAAAu1E,aAAA,EACfxvF,WAAW,EAAIymD,EAAE,CAACkvC,QAAQ,GAAA17E,eAAA,CAAAu1E,aAAA,EAC1BvvF,gBAAgB,EAAIwmD,EAAE,CAACmvC,aAAa,GAAA37E,eAAA,CAAAu1E,aAAA,EACpCtvF,uBAAuB,EAAIumD,EAAE,CAACovC,qBAAqB,GAAArG,aAAA,CACrD;IAED,IAAK7oC,QAAQ,EAAG;MAEf+uC,YAAY,CAAEv1F,WAAW,CAAE,GAAGsmD,EAAE,CAACqvC,GAAG;MACpCJ,YAAY,CAAEt1F,WAAW,CAAE,GAAGqmD,EAAE,CAACsvC,GAAG;IAErC,CAAC,MAAM;MAEN,IAAMp6B,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,kBAAkB,CAAE;MAEtD,IAAKwrD,SAAS,KAAK,IAAI,EAAG;QAEzB+5B,YAAY,CAAEv1F,WAAW,CAAE,GAAGw7D,SAAS,CAACq6B,OAAO;QAC/CN,YAAY,CAAEt1F,WAAW,CAAE,GAAGu7D,SAAS,CAACs6B,OAAO;MAEhD;IAED;IAEA,IAAMC,UAAU,IAAAzG,WAAA,OAAAx1E,eAAA,CAAAw1E,WAAA,EACbpvF,UAAU,EAAIomD,EAAE,CAAC0vC,IAAI,GAAAl8E,eAAA,CAAAw1E,WAAA,EACrBnvF,SAAS,EAAImmD,EAAE,CAAC2vC,GAAG,GAAAn8E,eAAA,CAAAw1E,WAAA,EACnBlvF,cAAc,EAAIkmD,EAAE,CAAC4vC,SAAS,GAAAp8E,eAAA,CAAAw1E,WAAA,EAC9BhvF,cAAc,EAAIgmD,EAAE,CAAC6vC,SAAS,GAAAr8E,eAAA,CAAAw1E,WAAA,EAC9B1uF,sBAAsB,EAAI0lD,EAAE,CAAC8vC,kBAAkB,GAAAt8E,eAAA,CAAAw1E,WAAA,EAC/C5uF,cAAc,EAAI4lD,EAAE,CAAC+vC,SAAS,GAAAv8E,eAAA,CAAAw1E,WAAA,EAC9B9uF,cAAc,EAAI8lD,EAAE,CAACgwC,SAAS,GAAAx8E,eAAA,CAAAw1E,WAAA,EAC9BjvF,sBAAsB,EAAIimD,EAAE,CAACiwC,mBAAmB,GAAAz8E,eAAA,CAAAw1E,WAAA,EAChD/uF,sBAAsB,EAAI+lD,EAAE,CAACkwC,mBAAmB,GAAA18E,eAAA,CAAAw1E,WAAA,EAChD3uF,sBAAsB,EAAI2lD,EAAE,CAACmwC,mBAAmB,GAAA38E,eAAA,CAAAw1E,WAAA,EAChD7uF,sBAAsB,EAAI6lD,EAAE,CAACowC,mBAAmB,GAAApH,WAAA,CAClD;IAED,SAAS/B,WAAWA,CAAEroD,QAAQ,EAAEO,aAAa,EAAEF,QAAQ,EAAEC,QAAQ,EAAEI,kBAAkB,EAAEF,aAAa,EAAEC,aAAa,EAAEwB,kBAAkB,EAAG;MAEzI,IAAKjC,QAAQ,KAAK3lC,UAAU,EAAG;QAE9B,IAAK+yF,sBAAsB,KAAK,IAAI,EAAG;UAEtCx3D,OAAO,CAAEwrB,EAAE,CAACqwC,KAAK,CAAE;UACnBrE,sBAAsB,GAAG,KAAK;QAE/B;QAEA;MAED;MAEA,IAAKA,sBAAsB,KAAK,KAAK,EAAG;QAEvC33D,MAAM,CAAE2rB,EAAE,CAACqwC,KAAK,CAAE;QAClBrE,sBAAsB,GAAG,IAAI;MAE9B;MAEA,IAAKptD,QAAQ,KAAKtlC,cAAc,EAAG;QAElC,IAAKslC,QAAQ,KAAKqtD,eAAe,IAAIprD,kBAAkB,KAAK2rD,wBAAwB,EAAG;UAEtF,IAAKN,oBAAoB,KAAK3yF,WAAW,IAAI8yF,yBAAyB,KAAK9yF,WAAW,EAAG;YAExFymD,EAAE,CAAC7gB,aAAa,CAAE6gB,EAAE,CAACkvC,QAAQ,CAAE;YAE/BhD,oBAAoB,GAAG3yF,WAAW;YAClC8yF,yBAAyB,GAAG9yF,WAAW;UAExC;UAEA,IAAKsnC,kBAAkB,EAAG;YAEzB,QAASjC,QAAQ;cAEhB,KAAK1lC,cAAc;gBAClB8mD,EAAE,CAACswC,iBAAiB,CAAEtwC,EAAE,CAAC2vC,GAAG,EAAE3vC,EAAE,CAACkwC,mBAAmB,EAAElwC,EAAE,CAAC2vC,GAAG,EAAE3vC,EAAE,CAACkwC,mBAAmB,CAAE;gBACtF;cAED,KAAK/2F,gBAAgB;gBACpB6mD,EAAE,CAACuwC,SAAS,CAAEvwC,EAAE,CAAC2vC,GAAG,EAAE3vC,EAAE,CAAC2vC,GAAG,CAAE;gBAC9B;cAED,KAAKv2F,mBAAmB;gBACvB4mD,EAAE,CAACswC,iBAAiB,CAAEtwC,EAAE,CAAC0vC,IAAI,EAAE1vC,EAAE,CAACiwC,mBAAmB,EAAEjwC,EAAE,CAAC0vC,IAAI,EAAE1vC,EAAE,CAAC2vC,GAAG,CAAE;gBACxE;cAED,KAAKt2F,gBAAgB;gBACpB2mD,EAAE,CAACswC,iBAAiB,CAAEtwC,EAAE,CAAC0vC,IAAI,EAAE1vC,EAAE,CAAC4vC,SAAS,EAAE5vC,EAAE,CAAC0vC,IAAI,EAAE1vC,EAAE,CAAC6vC,SAAS,CAAE;gBACpE;cAED;gBACC74F,OAAO,CAAChG,KAAK,CAAE,sCAAsC,EAAE4tC,QAAQ,CAAE;gBACjE;YAAM;UAIT,CAAC,MAAM;YAEN,QAASA,QAAQ;cAEhB,KAAK1lC,cAAc;gBAClB8mD,EAAE,CAACswC,iBAAiB,CAAEtwC,EAAE,CAAC6vC,SAAS,EAAE7vC,EAAE,CAACkwC,mBAAmB,EAAElwC,EAAE,CAAC2vC,GAAG,EAAE3vC,EAAE,CAACkwC,mBAAmB,CAAE;gBAC5F;cAED,KAAK/2F,gBAAgB;gBACpB6mD,EAAE,CAACuwC,SAAS,CAAEvwC,EAAE,CAAC6vC,SAAS,EAAE7vC,EAAE,CAAC2vC,GAAG,CAAE;gBACpC;cAED,KAAKv2F,mBAAmB;gBACvB4mD,EAAE,CAACswC,iBAAiB,CAAEtwC,EAAE,CAAC0vC,IAAI,EAAE1vC,EAAE,CAACiwC,mBAAmB,EAAEjwC,EAAE,CAAC0vC,IAAI,EAAE1vC,EAAE,CAAC2vC,GAAG,CAAE;gBACxE;cAED,KAAKt2F,gBAAgB;gBACpB2mD,EAAE,CAACuwC,SAAS,CAAEvwC,EAAE,CAAC0vC,IAAI,EAAE1vC,EAAE,CAAC4vC,SAAS,CAAE;gBACrC;cAED;gBACC54F,OAAO,CAAChG,KAAK,CAAE,sCAAsC,EAAE4tC,QAAQ,CAAE;gBACjE;YAAM;UAIT;UAEAutD,eAAe,GAAG,IAAI;UACtBC,eAAe,GAAG,IAAI;UACtBE,oBAAoB,GAAG,IAAI;UAC3BC,oBAAoB,GAAG,IAAI;UAE3BN,eAAe,GAAGrtD,QAAQ;UAC1B4tD,wBAAwB,GAAG3rD,kBAAkB;QAE9C;QAEA;MAED;;MAEA;;MAEAvB,kBAAkB,GAAGA,kBAAkB,IAAIH,aAAa;MACxDC,aAAa,GAAGA,aAAa,IAAIH,QAAQ;MACzCI,aAAa,GAAGA,aAAa,IAAIH,QAAQ;MAEzC,IAAKC,aAAa,KAAK+sD,oBAAoB,IAAI5sD,kBAAkB,KAAK+sD,yBAAyB,EAAG;QAEjGrsC,EAAE,CAACwwC,qBAAqB,CAAEvB,YAAY,CAAE9vD,aAAa,CAAE,EAAE8vD,YAAY,CAAE3vD,kBAAkB,CAAE,CAAE;QAE7F4sD,oBAAoB,GAAG/sD,aAAa;QACpCktD,yBAAyB,GAAG/sD,kBAAkB;MAE/C;MAEA,IAAKL,QAAQ,KAAKktD,eAAe,IAAIjtD,QAAQ,KAAKktD,eAAe,IAAIhtD,aAAa,KAAKktD,oBAAoB,IAAIjtD,aAAa,KAAKktD,oBAAoB,EAAG;QAEvJvsC,EAAE,CAACswC,iBAAiB,CAAEb,UAAU,CAAExwD,QAAQ,CAAE,EAAEwwD,UAAU,CAAEvwD,QAAQ,CAAE,EAAEuwD,UAAU,CAAErwD,aAAa,CAAE,EAAEqwD,UAAU,CAAEpwD,aAAa,CAAE,CAAE;QAEhI8sD,eAAe,GAAGltD,QAAQ;QAC1BmtD,eAAe,GAAGltD,QAAQ;QAC1BotD,oBAAoB,GAAGltD,aAAa;QACpCmtD,oBAAoB,GAAGltD,aAAa;MAErC;MAEA4sD,eAAe,GAAGrtD,QAAQ;MAC1B4tD,wBAAwB,GAAG,KAAK;IAEjC;IAEA,SAASiE,WAAWA,CAAEt1D,QAAQ,EAAEu1D,WAAW,EAAG;MAE7Cv1D,QAAQ,CAAC0D,IAAI,KAAK9lC,UAAU,GACzBy7B,OAAO,CAAEwrB,EAAE,CAACwuC,SAAS,CAAE,GACvBn6D,MAAM,CAAE2rB,EAAE,CAACwuC,SAAS,CAAE;MAEzB,IAAIjX,SAAS,GAAKp8C,QAAQ,CAAC0D,IAAI,KAAK/lC,QAAU;MAC9C,IAAK43F,WAAW,EAAGnZ,SAAS,GAAG,CAAEA,SAAS;MAE1C+W,YAAY,CAAE/W,SAAS,CAAE;MAEvBp8C,QAAQ,CAACyD,QAAQ,KAAK1lC,cAAc,IAAIiiC,QAAQ,CAAC6D,WAAW,KAAK,KAAK,GACrEioD,WAAW,CAAEhuF,UAAU,CAAE,GACzBguF,WAAW,CAAE9rD,QAAQ,CAACyD,QAAQ,EAAEzD,QAAQ,CAACgE,aAAa,EAAEhE,QAAQ,CAAC8D,QAAQ,EAAE9D,QAAQ,CAAC+D,QAAQ,EAAE/D,QAAQ,CAACmE,kBAAkB,EAAEnE,QAAQ,CAACiE,aAAa,EAAEjE,QAAQ,CAACkE,aAAa,EAAElE,QAAQ,CAAC0F,kBAAkB,CAAE;MAE3M9kB,WAAW,CAACguE,OAAO,CAAE5uD,QAAQ,CAACoE,SAAS,CAAE;MACzCxjB,WAAW,CAACmrE,OAAO,CAAE/rD,QAAQ,CAACqE,SAAS,CAAE;MACzCzjB,WAAW,CAACstE,OAAO,CAAEluD,QAAQ,CAACsE,UAAU,CAAE;MAC1C+rD,WAAW,CAACnC,OAAO,CAAEluD,QAAQ,CAACmF,UAAU,CAAE;MAE1C,IAAML,YAAY,GAAG9E,QAAQ,CAAC8E,YAAY;MAC1CjkB,aAAa,CAACkrE,OAAO,CAAEjnD,YAAY,CAAE;MACrC,IAAKA,YAAY,EAAG;QAEnBjkB,aAAa,CAACqtE,OAAO,CAAEluD,QAAQ,CAACuE,gBAAgB,CAAE;QAClD1jB,aAAa,CAAC+tE,OAAO,CAAE5uD,QAAQ,CAACwE,WAAW,EAAExE,QAAQ,CAACyE,UAAU,EAAEzE,QAAQ,CAAC0E,eAAe,CAAE;QAC5F7jB,aAAa,CAACqvE,KAAK,CAAElwD,QAAQ,CAAC2E,WAAW,EAAE3E,QAAQ,CAAC4E,YAAY,EAAE5E,QAAQ,CAAC6E,YAAY,CAAE;MAE1F;MAEA2wD,gBAAgB,CAAEx1D,QAAQ,CAACqF,aAAa,EAAErF,QAAQ,CAACsF,mBAAmB,EAAEtF,QAAQ,CAACuF,kBAAkB,CAAE;MAErGvF,QAAQ,CAACyF,eAAe,KAAK,IAAI,GAC9BvM,MAAM,CAAE2rB,EAAE,CAAC4wC,wBAAwB,CAAE,GACrCp8D,OAAO,CAAEwrB,EAAE,CAAC4wC,wBAAwB,CAAE;IAE1C;;IAEA;;IAEA,SAAStC,YAAYA,CAAE/W,SAAS,EAAG;MAElC,IAAKkV,gBAAgB,KAAKlV,SAAS,EAAG;QAErC,IAAKA,SAAS,EAAG;UAEhBv3B,EAAE,CAAC6wC,SAAS,CAAE7wC,EAAE,CAAC8wC,EAAE,CAAE;QAEtB,CAAC,MAAM;UAEN9wC,EAAE,CAAC6wC,SAAS,CAAE7wC,EAAE,CAAC+wC,GAAG,CAAE;QAEvB;QAEAtE,gBAAgB,GAAGlV,SAAS;MAE7B;IAED;IAEA,SAASgX,WAAWA,CAAEyC,QAAQ,EAAG;MAEhC,IAAKA,QAAQ,KAAK34F,YAAY,EAAG;QAEhCg8B,MAAM,CAAE2rB,EAAE,CAACwuC,SAAS,CAAE;QAEtB,IAAKwC,QAAQ,KAAKtE,eAAe,EAAG;UAEnC,IAAKsE,QAAQ,KAAK14F,YAAY,EAAG;YAEhC0nD,EAAE,CAACgxC,QAAQ,CAAEhxC,EAAE,CAAC8uC,IAAI,CAAE;UAEvB,CAAC,MAAM,IAAKkC,QAAQ,KAAKz4F,aAAa,EAAG;YAExCynD,EAAE,CAACgxC,QAAQ,CAAEhxC,EAAE,CAACixC,KAAK,CAAE;UAExB,CAAC,MAAM;YAENjxC,EAAE,CAACgxC,QAAQ,CAAEhxC,EAAE,CAACkxC,cAAc,CAAE;UAEjC;QAED;MAED,CAAC,MAAM;QAEN18D,OAAO,CAAEwrB,EAAE,CAACwuC,SAAS,CAAE;MAExB;MAEA9B,eAAe,GAAGsE,QAAQ;IAE3B;IAEA,SAASG,YAAYA,CAAEp8E,KAAK,EAAG;MAE9B,IAAKA,KAAK,KAAK43E,gBAAgB,EAAG;QAEjC,IAAKI,kBAAkB,EAAG/sC,EAAE,CAACoxC,SAAS,CAAEr8E,KAAK,CAAE;QAE/C43E,gBAAgB,GAAG53E,KAAK;MAEzB;IAED;IAEA,SAAS47E,gBAAgBA,CAAEnwD,aAAa,EAAE6wD,MAAM,EAAElkB,KAAK,EAAG;MAEzD,IAAK3sC,aAAa,EAAG;QAEpBnM,MAAM,CAAE2rB,EAAE,CAACsxC,mBAAmB,CAAE;QAEhC,IAAK1E,0BAA0B,KAAKyE,MAAM,IAAIxE,yBAAyB,KAAK1f,KAAK,EAAG;UAEnFntB,EAAE,CAACxf,aAAa,CAAE6wD,MAAM,EAAElkB,KAAK,CAAE;UAEjCyf,0BAA0B,GAAGyE,MAAM;UACnCxE,yBAAyB,GAAG1f,KAAK;QAElC;MAED,CAAC,MAAM;QAEN34C,OAAO,CAAEwrB,EAAE,CAACsxC,mBAAmB,CAAE;MAElC;IAED;IAEA,SAASnK,cAAcA,CAAEvrE,WAAW,EAAG;MAEtC,IAAKA,WAAW,EAAG;QAElByY,MAAM,CAAE2rB,EAAE,CAACuxC,YAAY,CAAE;MAE1B,CAAC,MAAM;QAEN/8D,OAAO,CAAEwrB,EAAE,CAACuxC,YAAY,CAAE;MAE3B;IAED;;IAEA;;IAEA,SAASC,aAAaA,CAAEC,SAAS,EAAG;MAEnC,IAAKA,SAAS,KAAK1/F,SAAS,EAAG0/F,SAAS,GAAGzxC,EAAE,CAAC0xC,QAAQ,GAAGr3B,WAAW,GAAG,CAAC;MAExE,IAAK6yB,kBAAkB,KAAKuE,SAAS,EAAG;QAEvCzxC,EAAE,CAACwxC,aAAa,CAAEC,SAAS,CAAE;QAC7BvE,kBAAkB,GAAGuE,SAAS;MAE/B;IAED;IAEA,SAAS9D,WAAWA,CAAEgE,SAAS,EAAEC,YAAY,EAAEH,SAAS,EAAG;MAE1D,IAAKA,SAAS,KAAK1/F,SAAS,EAAG;QAE9B,IAAKm7F,kBAAkB,KAAK,IAAI,EAAG;UAElCuE,SAAS,GAAGzxC,EAAE,CAAC0xC,QAAQ,GAAGr3B,WAAW,GAAG,CAAC;QAE1C,CAAC,MAAM;UAENo3B,SAAS,GAAGvE,kBAAkB;QAE/B;MAED;MAEA,IAAI2E,YAAY,GAAG1E,oBAAoB,CAAEsE,SAAS,CAAE;MAEpD,IAAKI,YAAY,KAAK9/F,SAAS,EAAG;QAEjC8/F,YAAY,GAAG;UAAEviG,IAAI,EAAEyC,SAAS;UAAE+pB,OAAO,EAAE/pB;QAAU,CAAC;QACtDo7F,oBAAoB,CAAEsE,SAAS,CAAE,GAAGI,YAAY;MAEjD;MAEA,IAAKA,YAAY,CAACviG,IAAI,KAAKqiG,SAAS,IAAIE,YAAY,CAAC/1E,OAAO,KAAK81E,YAAY,EAAG;QAE/E,IAAK1E,kBAAkB,KAAKuE,SAAS,EAAG;UAEvCzxC,EAAE,CAACwxC,aAAa,CAAEC,SAAS,CAAE;UAC7BvE,kBAAkB,GAAGuE,SAAS;QAE/B;QAEAzxC,EAAE,CAAC2tC,WAAW,CAAEgE,SAAS,EAAEC,YAAY,IAAI1D,aAAa,CAAEyD,SAAS,CAAE,CAAE;QAEvEE,YAAY,CAACviG,IAAI,GAAGqiG,SAAS;QAC7BE,YAAY,CAAC/1E,OAAO,GAAG81E,YAAY;MAEpC;IAED;IAEA,SAASE,aAAaA,CAAA,EAAG;MAExB,IAAMD,YAAY,GAAG1E,oBAAoB,CAAED,kBAAkB,CAAE;MAE/D,IAAK2E,YAAY,KAAK9/F,SAAS,IAAI8/F,YAAY,CAACviG,IAAI,KAAKyC,SAAS,EAAG;QAEpEiuD,EAAE,CAAC2tC,WAAW,CAAEkE,YAAY,CAACviG,IAAI,EAAE,IAAI,CAAE;QAEzCuiG,YAAY,CAACviG,IAAI,GAAGyC,SAAS;QAC7B8/F,YAAY,CAAC/1E,OAAO,GAAG/pB,SAAS;MAEjC;IAED;IAEA,SAASggG,oBAAoBA,CAAA,EAAG;MAE/B,IAAI;QAEH/xC,EAAE,CAAC+xC,oBAAoB,CAACC,KAAK,CAAEhyC,EAAE,EAAE7nB,SAAS,CAAE;MAE/C,CAAC,CAAC,OAAQnnC,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;MAE5C;IAED;IAEA,SAASihG,oBAAoBA,CAAA,EAAG;MAE/B,IAAI;QAEHjyC,EAAE,CAACiyC,oBAAoB,CAACD,KAAK,CAAEhyC,EAAE,EAAE7nB,SAAS,CAAE;MAE/C,CAAC,CAAC,OAAQnnC,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;MAE5C;IAED;IAEA,SAASkhG,aAAaA,CAAA,EAAG;MAExB,IAAI;QAEHlyC,EAAE,CAACkyC,aAAa,CAACF,KAAK,CAAEhyC,EAAE,EAAE7nB,SAAS,CAAE;MAExC,CAAC,CAAC,OAAQnnC,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;MAE5C;IAED;IAEA,SAASmhG,aAAaA,CAAA,EAAG;MAExB,IAAI;QAEHnyC,EAAE,CAACmyC,aAAa,CAACH,KAAK,CAAEhyC,EAAE,EAAE7nB,SAAS,CAAE;MAExC,CAAC,CAAC,OAAQnnC,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;MAE5C;IAED;IAEA,SAASohG,uBAAuBA,CAAA,EAAG;MAElC,IAAI;QAEHpyC,EAAE,CAACoyC,uBAAuB,CAACJ,KAAK,CAAEhyC,EAAE,EAAE7nB,SAAS,CAAE;MAElD,CAAC,CAAC,OAAQnnC,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;MAE5C;IAED;IAEA,SAASqhG,uBAAuBA,CAAA,EAAG;MAElC,IAAI;QAEHryC,EAAE,CAACqyC,uBAAuB,CAACL,KAAK,CAAEhyC,EAAE,EAAE7nB,SAAS,CAAE;MAElD,CAAC,CAAC,OAAQnnC,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;MAE5C;IAED;IAEA,SAASshG,YAAYA,CAAA,EAAG;MAEvB,IAAI;QAEHtyC,EAAE,CAACsyC,YAAY,CAACN,KAAK,CAAEhyC,EAAE,EAAE7nB,SAAS,CAAE;MAEvC,CAAC,CAAC,OAAQnnC,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;MAE5C;IAED;IAEA,SAASuhG,YAAYA,CAAA,EAAG;MAEvB,IAAI;QAEHvyC,EAAE,CAACuyC,YAAY,CAACP,KAAK,CAAEhyC,EAAE,EAAE7nB,SAAS,CAAE;MAEvC,CAAC,CAAC,OAAQnnC,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;MAE5C;IAED;IAEA,SAASg9F,UAAUA,CAAA,EAAG;MAErB,IAAI;QAEHhuC,EAAE,CAACguC,UAAU,CAACgE,KAAK,CAAEhyC,EAAE,EAAE7nB,SAAS,CAAE;MAErC,CAAC,CAAC,OAAQnnC,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;MAE5C;IAED;IAEA,SAASwhG,UAAUA,CAAA,EAAG;MAErB,IAAI;QAEHxyC,EAAE,CAACwyC,UAAU,CAACR,KAAK,CAAEhyC,EAAE,EAAE7nB,SAAS,CAAE;MAErC,CAAC,CAAC,OAAQnnC,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;MAE5C;IAED;;IAEA;;IAEA,SAAS2qB,OAAOA,CAAEA,OAAO,EAAG;MAE3B,IAAK6xE,cAAc,CAAC3gF,MAAM,CAAE8O,OAAO,CAAE,KAAK,KAAK,EAAG;QAEjDqkC,EAAE,CAACrkC,OAAO,CAAEA,OAAO,CAACpW,CAAC,EAAEoW,OAAO,CAAC9V,CAAC,EAAE8V,OAAO,CAACnC,CAAC,EAAEmC,OAAO,CAAClC,CAAC,CAAE;QACxD+zE,cAAc,CAACtjF,IAAI,CAAEyR,OAAO,CAAE;MAE/B;IAED;IAEA,SAASE,QAAQA,CAAEA,QAAQ,EAAG;MAE7B,IAAK4xE,eAAe,CAAC5gF,MAAM,CAAEgP,QAAQ,CAAE,KAAK,KAAK,EAAG;QAEnDmkC,EAAE,CAACnkC,QAAQ,CAAEA,QAAQ,CAACtW,CAAC,EAAEsW,QAAQ,CAAChW,CAAC,EAAEgW,QAAQ,CAACrC,CAAC,EAAEqC,QAAQ,CAACpC,CAAC,CAAE;QAC7Dg0E,eAAe,CAACvjF,IAAI,CAAE2R,QAAQ,CAAE;MAEjC;IAED;IAEA,SAAS42E,gBAAgBA,CAAEC,aAAa,EAAEh9B,OAAO,EAAG;MAEnD,IAAIz+C,OAAO,GAAGy0E,aAAa,CAAChiF,GAAG,CAAEgsD,OAAO,CAAE;MAE1C,IAAKz+C,OAAO,KAAKllB,SAAS,EAAG;QAE5BklB,OAAO,GAAG,IAAImpC,OAAO,EAAE;QAEvBsrC,aAAa,CAAC7iF,GAAG,CAAE6sD,OAAO,EAAEz+C,OAAO,CAAE;MAEtC;MAEA,IAAI07E,UAAU,GAAG17E,OAAO,CAACvN,GAAG,CAAEgpF,aAAa,CAAE;MAE7C,IAAKC,UAAU,KAAK5gG,SAAS,EAAG;QAE/B4gG,UAAU,GAAG3yC,EAAE,CAAC4yC,oBAAoB,CAAEl9B,OAAO,EAAEg9B,aAAa,CAAC9+F,IAAI,CAAE;QAEnEqjB,OAAO,CAACpO,GAAG,CAAE6pF,aAAa,EAAEC,UAAU,CAAE;MAEzC;IAED;IAEA,SAASE,mBAAmBA,CAAEH,aAAa,EAAEh9B,OAAO,EAAG;MAEtD,IAAMz+C,OAAO,GAAGy0E,aAAa,CAAChiF,GAAG,CAAEgsD,OAAO,CAAE;MAC5C,IAAMi9B,UAAU,GAAG17E,OAAO,CAACvN,GAAG,CAAEgpF,aAAa,CAAE;MAE/C,IAAKjH,WAAW,CAAC/hF,GAAG,CAAEgsD,OAAO,CAAE,KAAKi9B,UAAU,EAAG;QAEhD;QACA3yC,EAAE,CAAC6yC,mBAAmB,CAAEn9B,OAAO,EAAEi9B,UAAU,EAAED,aAAa,CAACI,mBAAmB,CAAE;QAEhFrH,WAAW,CAAC5iF,GAAG,CAAE6sD,OAAO,EAAEi9B,UAAU,CAAE;MAEvC;IAED;;IAEA;;IAEA,SAAS1/F,KAAKA,CAAA,EAAG;MAEhB;;MAEA+sD,EAAE,CAACxrB,OAAO,CAAEwrB,EAAE,CAACqwC,KAAK,CAAE;MACtBrwC,EAAE,CAACxrB,OAAO,CAAEwrB,EAAE,CAACwuC,SAAS,CAAE;MAC1BxuC,EAAE,CAACxrB,OAAO,CAAEwrB,EAAE,CAAC6pC,UAAU,CAAE;MAC3B7pC,EAAE,CAACxrB,OAAO,CAAEwrB,EAAE,CAACsxC,mBAAmB,CAAE;MACpCtxC,EAAE,CAACxrB,OAAO,CAAEwrB,EAAE,CAACuxC,YAAY,CAAE;MAC7BvxC,EAAE,CAACxrB,OAAO,CAAEwrB,EAAE,CAACmrC,YAAY,CAAE;MAC7BnrC,EAAE,CAACxrB,OAAO,CAAEwrB,EAAE,CAAC4wC,wBAAwB,CAAE;MAEzC5wC,EAAE,CAAC7gB,aAAa,CAAE6gB,EAAE,CAACkvC,QAAQ,CAAE;MAC/BlvC,EAAE,CAACuwC,SAAS,CAAEvwC,EAAE,CAAC2vC,GAAG,EAAE3vC,EAAE,CAAC0vC,IAAI,CAAE;MAC/B1vC,EAAE,CAACswC,iBAAiB,CAAEtwC,EAAE,CAAC2vC,GAAG,EAAE3vC,EAAE,CAAC0vC,IAAI,EAAE1vC,EAAE,CAAC2vC,GAAG,EAAE3vC,EAAE,CAAC0vC,IAAI,CAAE;MAExD1vC,EAAE,CAACspC,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;MACtCtpC,EAAE,CAACwT,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAE3BxT,EAAE,CAAC8pC,SAAS,CAAE,IAAI,CAAE;MACpB9pC,EAAE,CAACzgB,SAAS,CAAEygB,EAAE,CAACkqC,IAAI,CAAE;MACvBlqC,EAAE,CAACwqC,UAAU,CAAE,CAAC,CAAE;MAElBxqC,EAAE,CAACorC,WAAW,CAAE,UAAU,CAAE;MAC5BprC,EAAE,CAACrgB,WAAW,CAAEqgB,EAAE,CAACiqC,MAAM,EAAE,CAAC,EAAE,UAAU,CAAE;MAC1CjqC,EAAE,CAACsrC,SAAS,CAAEtrC,EAAE,CAAC+yC,IAAI,EAAE/yC,EAAE,CAAC+yC,IAAI,EAAE/yC,EAAE,CAAC+yC,IAAI,CAAE;MACzC/yC,EAAE,CAACurC,YAAY,CAAE,CAAC,CAAE;MAEpBvrC,EAAE,CAACgxC,QAAQ,CAAEhxC,EAAE,CAAC8uC,IAAI,CAAE;MACtB9uC,EAAE,CAAC6wC,SAAS,CAAE7wC,EAAE,CAAC+wC,GAAG,CAAE;MAEtB/wC,EAAE,CAACxf,aAAa,CAAE,CAAC,EAAE,CAAC,CAAE;MAExBwf,EAAE,CAACwxC,aAAa,CAAExxC,EAAE,CAAC0xC,QAAQ,CAAE;MAE/B1xC,EAAE,CAACyuC,eAAe,CAAEzuC,EAAE,CAAC4uC,WAAW,EAAE,IAAI,CAAE;MAE1C,IAAK1uC,QAAQ,KAAK,IAAI,EAAG;QAExBF,EAAE,CAACyuC,eAAe,CAAEzuC,EAAE,CAAC2uC,gBAAgB,EAAE,IAAI,CAAE;QAC/C3uC,EAAE,CAACyuC,eAAe,CAAEzuC,EAAE,CAACgzC,gBAAgB,EAAE,IAAI,CAAE;MAEhD;MAEAhzC,EAAE,CAACgvC,UAAU,CAAE,IAAI,CAAE;MAErBhvC,EAAE,CAACoxC,SAAS,CAAE,CAAC,CAAE;MAEjBpxC,EAAE,CAACrkC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEqkC,EAAE,CAAClrC,MAAM,CAACC,KAAK,EAAEirC,EAAE,CAAClrC,MAAM,CAACE,MAAM,CAAE;MACrDgrC,EAAE,CAACnkC,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAEmkC,EAAE,CAAClrC,MAAM,CAACC,KAAK,EAAEirC,EAAE,CAAClrC,MAAM,CAACE,MAAM,CAAE;;MAEtD;;MAEA22E,mBAAmB,GAAG,CAAC,CAAC;MAExBuB,kBAAkB,GAAG,IAAI;MACzBC,oBAAoB,GAAG,CAAC,CAAC;MAEzBvB,wBAAwB,GAAG,CAAC,CAAC;MAC7BC,kBAAkB,GAAG,IAAIzrC,OAAO,EAAE;MAClC0rC,kBAAkB,GAAG,EAAE;MAEvBC,cAAc,GAAG,IAAI;MAErBC,sBAAsB,GAAG,KAAK;MAC9BC,eAAe,GAAG,IAAI;MACtBC,oBAAoB,GAAG,IAAI;MAC3BC,eAAe,GAAG,IAAI;MACtBC,eAAe,GAAG,IAAI;MACtBC,yBAAyB,GAAG,IAAI;MAChCC,oBAAoB,GAAG,IAAI;MAC3BC,oBAAoB,GAAG,IAAI;MAC3BC,wBAAwB,GAAG,KAAK;MAEhCC,gBAAgB,GAAG,IAAI;MACvBC,eAAe,GAAG,IAAI;MAEtBC,gBAAgB,GAAG,IAAI;MAEvBC,0BAA0B,GAAG,IAAI;MACjCC,yBAAyB,GAAG,IAAI;MAEhCW,cAAc,CAAC3kF,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEm3C,EAAE,CAAClrC,MAAM,CAACC,KAAK,EAAEirC,EAAE,CAAClrC,MAAM,CAACE,MAAM,CAAE;MAC7Dy4E,eAAe,CAAC5kF,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEm3C,EAAE,CAAClrC,MAAM,CAACC,KAAK,EAAEirC,EAAE,CAAClrC,MAAM,CAACE,MAAM,CAAE;MAE9Dw2E,WAAW,CAACv4F,KAAK,EAAE;MACnB8oB,WAAW,CAAC9oB,KAAK,EAAE;MACnB+oB,aAAa,CAAC/oB,KAAK,EAAE;IAEtB;IAEA,OAAO;MAENktD,OAAO,EAAE;QACRhtC,KAAK,EAAEq4E,WAAW;QAClB9vE,KAAK,EAAEK,WAAW;QAClBsgC,OAAO,EAAErgC;MACV,CAAC;MAEDqY,MAAM,EAAEA,MAAM;MACdG,OAAO,EAAEA,OAAO;MAEhBi6D,eAAe,EAAEA,eAAe;MAChCh3C,WAAW,EAAEA,WAAW;MAExBu3C,UAAU,EAAEA,UAAU;MAEtB/H,WAAW,EAAEA,WAAW;MACxBwJ,WAAW,EAAEA,WAAW;MAExBnC,YAAY,EAAEA,YAAY;MAC1BC,WAAW,EAAEA,WAAW;MAExB4C,YAAY,EAAEA,YAAY;MAC1BR,gBAAgB,EAAEA,gBAAgB;MAElCxJ,cAAc,EAAEA,cAAc;MAE9BqK,aAAa,EAAEA,aAAa;MAC5B7D,WAAW,EAAEA,WAAW;MACxBmE,aAAa,EAAEA,aAAa;MAC5BC,oBAAoB,EAAEA,oBAAoB;MAC1CE,oBAAoB,EAAEA,oBAAoB;MAC1CjE,UAAU,EAAEA,UAAU;MACtBwE,UAAU,EAAEA,UAAU;MAEtBC,gBAAgB,EAAEA,gBAAgB;MAClCI,mBAAmB,EAAEA,mBAAmB;MAExCP,YAAY,EAAEA,YAAY;MAC1BC,YAAY,EAAEA,YAAY;MAC1BL,aAAa,EAAEA,aAAa;MAC5BC,aAAa,EAAEA,aAAa;MAC5BC,uBAAuB,EAAEA,uBAAuB;MAChDC,uBAAuB,EAAEA,uBAAuB;MAEhD12E,OAAO,EAAEA,OAAO;MAChBE,QAAQ,EAAEA,QAAQ;MAElB5oB,KAAK,EAAEA;IAER,CAAC;EAEF;EAEA,SAASggG,aAAaA,CAAEC,GAAG,EAAE57C,UAAU,EAAEnmD,KAAK,EAAE49D,UAAU,EAAE9O,YAAY,EAAEkzC,KAAK,EAAEjhG,IAAI,EAAG;IAAA,IAAAkhG,aAAA,EAAAC,WAAA;IAEvF,IAAMnzC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;IACtC,IAAMma,WAAW,GAAGpa,YAAY,CAACoa,WAAW;IAC5C,IAAMM,cAAc,GAAG1a,YAAY,CAAC0a,cAAc;IAClD,IAAMF,cAAc,GAAGxa,YAAY,CAACwa,cAAc;IAClD,IAAMc,UAAU,GAAGtb,YAAY,CAACsb,UAAU;IAC1C,IAAM+3B,kBAAkB,GAAGh8C,UAAU,CAACoiB,GAAG,CAAE,sCAAsC,CAAE,GAAGpiB,UAAU,CAAC5tC,GAAG,CAAE,sCAAsC,CAAE,GAAG,IAAI;IACrJ,IAAM6pF,6BAA6B,GAAG,OAAOC,SAAS,KAAK,WAAW,GAAG,KAAK,GAAG,gBAAgB,CAAC7+E,IAAI,CAAE6+E,SAAS,CAACC,SAAS,CAAE;IAE7H,IAAMC,cAAc,GAAG,IAAItzC,OAAO,EAAE;IACpC,IAAI7rC,OAAO;IAEX,IAAMo/E,QAAQ,GAAG,IAAIvzC,OAAO,EAAE,CAAC,CAAC;;IAEhC;IACA;IACA;;IAEA,IAAIwzC,kBAAkB,GAAG,KAAK;IAE9B,IAAI;MAEHA,kBAAkB,GAAG,OAAOC,eAAe,KAAK;MAC/C;MAAA,GACK,IAAIA,eAAe,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC5+E,UAAU,CAAE,IAAI,CAAE,KAAO,IAAI;IAEhE,CAAC,CAAC,OAAQ3mB,GAAG,EAAG;;MAEf;IAAA;IAID,SAASwlG,YAAYA,CAAE/+E,KAAK,EAAEC,MAAM,EAAG;MAEtC;;MAEA,OAAO4+E,kBAAkB;MACxB;MACA,IAAIC,eAAe,CAAE9+E,KAAK,EAAEC,MAAM,CAAE,GAAGpC,eAAe,CAAE,QAAQ,CAAE;IAEpE;IAEA,SAASmhF,WAAWA,CAAEr/E,KAAK,EAAEs/E,eAAe,EAAEC,cAAc,EAAEC,OAAO,EAAG;MAEvE,IAAItiF,KAAK,GAAG,CAAC;;MAEb;;MAEA,IAAK8C,KAAK,CAACK,KAAK,GAAGm/E,OAAO,IAAIx/E,KAAK,CAACM,MAAM,GAAGk/E,OAAO,EAAG;QAEtDtiF,KAAK,GAAGsiF,OAAO,GAAG7vF,IAAI,CAACa,GAAG,CAAEwP,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;MAExD;;MAEA;;MAEA,IAAKpD,KAAK,GAAG,CAAC,IAAIoiF,eAAe,KAAK,IAAI,EAAG;QAE5C;;QAEA,IAAO,OAAOz+E,gBAAgB,KAAK,WAAW,IAAIb,KAAK,YAAYa,gBAAgB,IAChF,OAAOV,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOW,WAAW,KAAK,WAAW,IAAId,KAAK,YAAYc,WAAa,EAAG;UAEzE,IAAM7O,KAAK,GAAGqtF,eAAe,GAAGpsF,eAAe,GAAGvD,IAAI,CAACsC,KAAK;UAE5D,IAAMoO,KAAK,GAAGpO,KAAK,CAAEiL,KAAK,GAAG8C,KAAK,CAACK,KAAK,CAAE;UAC1C,IAAMC,MAAM,GAAGrO,KAAK,CAAEiL,KAAK,GAAG8C,KAAK,CAACM,MAAM,CAAE;UAE5C,IAAKT,OAAO,KAAKxiB,SAAS,EAAGwiB,OAAO,GAAGu/E,YAAY,CAAE/+E,KAAK,EAAEC,MAAM,CAAE;;UAEpE;;UAEA,IAAMF,MAAM,GAAGm/E,cAAc,GAAGH,YAAY,CAAE/+E,KAAK,EAAEC,MAAM,CAAE,GAAGT,OAAO;UAEvEO,MAAM,CAACC,KAAK,GAAGA,KAAK;UACpBD,MAAM,CAACE,MAAM,GAAGA,MAAM;UAEtB,IAAMhmB,OAAO,GAAG8lB,MAAM,CAACG,UAAU,CAAE,IAAI,CAAE;UACzCjmB,OAAO,CAAComB,SAAS,CAAEV,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEK,KAAK,EAAEC,MAAM,CAAE;UAE/Che,OAAO,CAACC,IAAI,CAAE,sDAAsD,GAAGyd,KAAK,CAACK,KAAK,GAAG,GAAG,GAAGL,KAAK,CAACM,MAAM,GAAG,QAAQ,GAAGD,KAAK,GAAG,GAAG,GAAGC,MAAM,GAAG,IAAI,CAAE;UAElJ,OAAOF,MAAM;QAEd,CAAC,MAAM;UAEN,IAAK,MAAM,IAAIJ,KAAK,EAAG;YAEtB1d,OAAO,CAACC,IAAI,CAAE,wDAAwD,GAAGyd,KAAK,CAACK,KAAK,GAAG,GAAG,GAAGL,KAAK,CAACM,MAAM,GAAG,IAAI,CAAE;UAEnH;UAEA,OAAON,KAAK;QAEb;MAED;MAEA,OAAOA,KAAK;IAEb;IAEA,SAASy/E,cAAcA,CAAEz/E,KAAK,EAAG;MAEhC,OAAOpN,YAAY,CAAEoN,KAAK,CAACK,KAAK,CAAE,IAAIzN,YAAY,CAAEoN,KAAK,CAACM,MAAM,CAAE;IAEnE;IAEA,SAASo/E,sBAAsBA,CAAEt4E,OAAO,EAAG;MAE1C,IAAKokC,QAAQ,EAAG,OAAO,KAAK;MAE5B,OAASpkC,OAAO,CAAC3E,KAAK,KAAKpb,mBAAmB,IAAI+f,OAAO,CAAC1E,KAAK,KAAKrb,mBAAmB,IACpF+f,OAAO,CAACxE,SAAS,KAAKrb,aAAa,IAAI6f,OAAO,CAACxE,SAAS,KAAKhb,YAAc;IAE/E;IAEA,SAAS+3F,2BAA2BA,CAAEv4E,OAAO,EAAEw4E,YAAY,EAAG;MAE7D,OAAOx4E,OAAO,CAAC1D,eAAe,IAAIk8E,YAAY,IAC7Cx4E,OAAO,CAACxE,SAAS,KAAKrb,aAAa,IAAI6f,OAAO,CAACxE,SAAS,KAAKhb,YAAY;IAE3E;IAEA,SAASi4F,cAAcA,CAAEt+F,MAAM,EAAG;MAEjCi9F,GAAG,CAACqB,cAAc,CAAEt+F,MAAM,CAAE;IAE7B;IAEA,SAASu+F,iBAAiBA,CAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,MAAM,EAAEj9E,QAAQ,EAAEk9E,mBAAmB,GAAG,KAAK,EAAG;MAEzG,IAAK10C,QAAQ,KAAK,KAAK,EAAG,OAAOw0C,QAAQ;MAEzC,IAAKD,kBAAkB,KAAK,IAAI,EAAG;QAElC,IAAKvB,GAAG,CAAEuB,kBAAkB,CAAE,KAAK1iG,SAAS,EAAG,OAAOmhG,GAAG,CAAEuB,kBAAkB,CAAE;QAE/Ez9F,OAAO,CAACC,IAAI,CAAE,2EAA2E,GAAGw9F,kBAAkB,GAAG,IAAI,CAAE;MAExH;MAEA,IAAIx8E,cAAc,GAAGy8E,QAAQ;MAE7B,IAAKA,QAAQ,KAAKxB,GAAG,CAAC2B,GAAG,EAAG;QAE3B,IAAKF,MAAM,KAAKzB,GAAG,CAACzyC,KAAK,EAAGxoC,cAAc,GAAGi7E,GAAG,CAAC4B,IAAI;QACrD,IAAKH,MAAM,KAAKzB,GAAG,CAACxyC,UAAU,EAAGzoC,cAAc,GAAGi7E,GAAG,CAAC6B,IAAI;QAC1D,IAAKJ,MAAM,KAAKzB,GAAG,CAAClyC,aAAa,EAAG/oC,cAAc,GAAGi7E,GAAG,CAAC8B,EAAE;MAE5D;MAEA,IAAKN,QAAQ,KAAKxB,GAAG,CAAC+B,EAAE,EAAG;QAE1B,IAAKN,MAAM,KAAKzB,GAAG,CAACzyC,KAAK,EAAGxoC,cAAc,GAAGi7E,GAAG,CAACgC,KAAK;QACtD,IAAKP,MAAM,KAAKzB,GAAG,CAACxyC,UAAU,EAAGzoC,cAAc,GAAGi7E,GAAG,CAACiC,KAAK;QAC3D,IAAKR,MAAM,KAAKzB,GAAG,CAAClyC,aAAa,EAAG/oC,cAAc,GAAGi7E,GAAG,CAACkC,GAAG;MAE7D;MAEA,IAAKV,QAAQ,KAAKxB,GAAG,CAACjF,IAAI,EAAG;QAE5B,IAAK0G,MAAM,KAAKzB,GAAG,CAACzyC,KAAK,EAAGxoC,cAAc,GAAGi7E,GAAG,CAACmC,OAAO;QACxD,IAAKV,MAAM,KAAKzB,GAAG,CAACxyC,UAAU,EAAGzoC,cAAc,GAAGi7E,GAAG,CAACoC,OAAO;QAC7D,IAAKX,MAAM,KAAKzB,GAAG,CAAClyC,aAAa,EAAG/oC,cAAc,GAAKP,QAAQ,KAAK5W,YAAY,IAAI8zF,mBAAmB,KAAK,KAAK,GAAK1B,GAAG,CAACqC,YAAY,GAAGrC,GAAG,CAACsC,KAAK;QAClJ,IAAKb,MAAM,KAAKzB,GAAG,CAACuC,sBAAsB,EAAGx9E,cAAc,GAAGi7E,GAAG,CAACwC,KAAK;QACvE,IAAKf,MAAM,KAAKzB,GAAG,CAACyC,sBAAsB,EAAG19E,cAAc,GAAGi7E,GAAG,CAAC0C,OAAO;MAE1E;MAEA,IAAK39E,cAAc,KAAKi7E,GAAG,CAAC6B,IAAI,IAAI98E,cAAc,KAAKi7E,GAAG,CAAC4B,IAAI,IAC9D78E,cAAc,KAAKi7E,GAAG,CAACiC,KAAK,IAAIl9E,cAAc,KAAKi7E,GAAG,CAACgC,KAAK,IAC5Dj9E,cAAc,KAAKi7E,GAAG,CAACoC,OAAO,IAAIr9E,cAAc,KAAKi7E,GAAG,CAACmC,OAAO,EAAG;QAEnE/9C,UAAU,CAAC5tC,GAAG,CAAE,wBAAwB,CAAE;MAE3C;MAEA,OAAOuO,cAAc;IAEtB;IAEA,SAAS49E,YAAYA,CAAE/5E,OAAO,EAAEpH,KAAK,EAAE4/E,YAAY,EAAG;MAErD,IAAKD,2BAA2B,CAAEv4E,OAAO,EAAEw4E,YAAY,CAAE,KAAK,IAAI,IAAMx4E,OAAO,CAACg6E,oBAAoB,IAAIh6E,OAAO,CAACxE,SAAS,KAAKrb,aAAa,IAAI6f,OAAO,CAACxE,SAAS,KAAKhb,YAAc,EAAG;QAErL,OAAO+H,IAAI,CAACi8D,IAAI,CAAEj8D,IAAI,CAACa,GAAG,CAAEwP,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE,CAAE,GAAG,CAAC;MAE9D,CAAC,MAAM,IAAK8G,OAAO,CAAC/D,OAAO,KAAKhmB,SAAS,IAAI+pB,OAAO,CAAC/D,OAAO,CAAC1kB,MAAM,GAAG,CAAC,EAAG;QAEzE;;QAEA,OAAOyoB,OAAO,CAAC/D,OAAO,CAAC1kB,MAAM;MAE9B,CAAC,MAAM,IAAKyoB,OAAO,CAACi6E,mBAAmB,IAAI1/E,KAAK,CAACC,OAAO,CAAEwF,OAAO,CAACpH,KAAK,CAAE,EAAG;QAE3E,OAAOA,KAAK,CAACqD,OAAO,CAAC1kB,MAAM;MAE5B,CAAC,MAAM;QAEN;;QAEA,OAAO,CAAC;MAET;IAED;;IAEA;;IAEA,SAAS2iG,cAAcA,CAAE3lF,CAAC,EAAG;MAE5B,IAAKA,CAAC,KAAKpU,aAAa,IAAIoU,CAAC,KAAKnU,0BAA0B,IAAImU,CAAC,KAAKjU,yBAAyB,EAAG;QAEjG,OAAO82F,GAAG,CAACpF,OAAO;MAEnB;MAEA,OAAOoF,GAAG,CAAC+C,MAAM;IAElB;;IAEA;;IAEA,SAAS14B,gBAAgBA,CAAEx5D,KAAK,EAAG;MAElC,IAAM+X,OAAO,GAAG/X,KAAK,CAAC9N,MAAM;MAE5B6lB,OAAO,CAACpY,mBAAmB,CAAE,SAAS,EAAE65D,gBAAgB,CAAE;MAE1D24B,iBAAiB,CAAEp6E,OAAO,CAAE;MAE5B,IAAKA,OAAO,CAAC6iE,cAAc,EAAG;QAE7B+U,cAAc,CAACnyC,MAAM,CAAEzlC,OAAO,CAAE;MAEjC;IAED;IAEA,SAASq6E,qBAAqBA,CAAEpyF,KAAK,EAAG;MAEvC,IAAMq2C,YAAY,GAAGr2C,KAAK,CAAC9N,MAAM;MAEjCmkD,YAAY,CAAC12C,mBAAmB,CAAE,SAAS,EAAEyyF,qBAAqB,CAAE;MAEpEC,sBAAsB,CAAEh8C,YAAY,CAAE;IAEvC;;IAEA;;IAEA,SAAS87C,iBAAiBA,CAAEp6E,OAAO,EAAG;MAErC,IAAMu6E,iBAAiB,GAAGtnC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE;MAEnD,IAAKu6E,iBAAiB,CAACC,WAAW,KAAKvkG,SAAS,EAAG;;MAEnD;;MAEA,IAAM+lB,MAAM,GAAGgE,OAAO,CAAChE,MAAM;MAC7B,IAAMy+E,aAAa,GAAG5C,QAAQ,CAACjqF,GAAG,CAAEoO,MAAM,CAAE;MAE5C,IAAKy+E,aAAa,EAAG;QAEpB,IAAM3E,YAAY,GAAG2E,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;QAClE5E,YAAY,CAACnY,SAAS,EAAG;;QAEzB;;QAEA,IAAKmY,YAAY,CAACnY,SAAS,KAAK,CAAC,EAAG;UAEnCgd,aAAa,CAAE36E,OAAO,CAAE;QAEzB;;QAEA;;QAEA,IAAK7uB,MAAM,CAACmH,IAAI,CAAEmiG,aAAa,CAAE,CAACljG,MAAM,KAAK,CAAC,EAAG;UAEhDsgG,QAAQ,CAACpyC,MAAM,CAAEzpC,MAAM,CAAE;QAE1B;MAED;MAEAi3C,UAAU,CAAC32B,MAAM,CAAEtc,OAAO,CAAE;IAE7B;IAEA,SAAS26E,aAAaA,CAAE36E,OAAO,EAAG;MAEjC,IAAMu6E,iBAAiB,GAAGtnC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE;MACnDo3E,GAAG,CAACuD,aAAa,CAAEJ,iBAAiB,CAACK,cAAc,CAAE;MAErD,IAAM5+E,MAAM,GAAGgE,OAAO,CAAChE,MAAM;MAC7B,IAAMy+E,aAAa,GAAG5C,QAAQ,CAACjqF,GAAG,CAAEoO,MAAM,CAAE;MAC5C,OAAOy+E,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;MAEpDtkG,IAAI,CAACsyE,MAAM,CAACvrD,QAAQ,EAAG;IAExB;IAEA,SAASm9E,sBAAsBA,CAAEh8C,YAAY,EAAG;MAE/C,IAAMt+B,OAAO,GAAGs+B,YAAY,CAACt+B,OAAO;MAEpC,IAAM66E,sBAAsB,GAAG5nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE;MAC7D,IAAMi8C,iBAAiB,GAAGtnC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE;MAEnD,IAAKu6E,iBAAiB,CAACK,cAAc,KAAK3kG,SAAS,EAAG;QAErDmhG,GAAG,CAACuD,aAAa,CAAEJ,iBAAiB,CAACK,cAAc,CAAE;QAErDxkG,IAAI,CAACsyE,MAAM,CAACvrD,QAAQ,EAAG;MAExB;MAEA,IAAKmhC,YAAY,CAACn+B,YAAY,EAAG;QAEhCm+B,YAAY,CAACn+B,YAAY,CAAC9C,OAAO,EAAE;MAEpC;MAEA,IAAKihC,YAAY,CAAC2B,uBAAuB,EAAG;QAE3C,KAAM,IAAIzoD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B4/F,GAAG,CAAC0D,iBAAiB,CAAED,sBAAsB,CAACE,kBAAkB,CAAEvjG,CAAC,CAAE,CAAE;UACvE,IAAKqjG,sBAAsB,CAACG,kBAAkB,EAAG5D,GAAG,CAAC6D,kBAAkB,CAAEJ,sBAAsB,CAACG,kBAAkB,CAAExjG,CAAC,CAAE,CAAE;QAE1H;MAED,CAAC,MAAM;QAEN4/F,GAAG,CAAC0D,iBAAiB,CAAED,sBAAsB,CAACE,kBAAkB,CAAE;QAClE,IAAKF,sBAAsB,CAACG,kBAAkB,EAAG5D,GAAG,CAAC6D,kBAAkB,CAAEJ,sBAAsB,CAACG,kBAAkB,CAAE;QACpH,IAAKH,sBAAsB,CAACK,8BAA8B,EAAG9D,GAAG,CAAC0D,iBAAiB,CAAED,sBAAsB,CAACK,8BAA8B,CAAE;QAE3I,IAAKL,sBAAsB,CAACM,wBAAwB,EAAG;UAEtD,KAAM,IAAI3jG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGqjG,sBAAsB,CAACM,wBAAwB,CAAC5jG,MAAM,EAAEC,IAAC,EAAG,EAAG;YAEnF,IAAKqjG,sBAAsB,CAACM,wBAAwB,CAAE3jG,IAAC,CAAE,EAAG4/F,GAAG,CAAC6D,kBAAkB,CAAEJ,sBAAsB,CAACM,wBAAwB,CAAE3jG,IAAC,CAAE,CAAE;UAE3I;QAED;QAEA,IAAKqjG,sBAAsB,CAACO,wBAAwB,EAAGhE,GAAG,CAAC6D,kBAAkB,CAAEJ,sBAAsB,CAACO,wBAAwB,CAAE;MAEjI;MAEA,IAAK98C,YAAY,CAACr8B,4BAA4B,EAAG;QAEhD,KAAM,IAAIzqB,IAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGlC,OAAO,CAACzoB,MAAM,EAAEC,IAAC,GAAG0qB,EAAE,EAAE1qB,IAAC,EAAG,EAAG;UAEpD,IAAM6jG,oBAAoB,GAAGpoC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAExoB,IAAC,CAAE,CAAE;UAE3D,IAAK6jG,oBAAoB,CAACT,cAAc,EAAG;YAE1CxD,GAAG,CAACuD,aAAa,CAAEU,oBAAoB,CAACT,cAAc,CAAE;YAExDxkG,IAAI,CAACsyE,MAAM,CAACvrD,QAAQ,EAAG;UAExB;UAEA81C,UAAU,CAAC32B,MAAM,CAAEtc,OAAO,CAAExoB,IAAC,CAAE,CAAE;QAElC;MAED;MAEAy7D,UAAU,CAAC32B,MAAM,CAAEtc,OAAO,CAAE;MAC5BizC,UAAU,CAAC32B,MAAM,CAAEgiB,YAAY,CAAE;IAElC;;IAEA;;IAEA,IAAIg9C,YAAY,GAAG,CAAC;IAEpB,SAASC,iBAAiBA,CAAA,EAAG;MAE5BD,YAAY,GAAG,CAAC;IAEjB;IAEA,SAASvuB,mBAAmBA,CAAA,EAAG;MAE9B,IAAMyuB,WAAW,GAAGF,YAAY;MAEhC,IAAKE,WAAW,IAAIj9B,WAAW,EAAG;QAEjCrjE,OAAO,CAACC,IAAI,CAAE,qCAAqC,GAAGqgG,WAAW,GAAG,8CAA8C,GAAGj9B,WAAW,CAAE;MAEnI;MAEA+8B,YAAY,IAAI,CAAC;MAEjB,OAAOE,WAAW;IAEnB;IAEA,SAASC,kBAAkBA,CAAEz7E,OAAO,EAAG;MAEtC,IAAM9X,KAAK,GAAG,EAAE;MAEhBA,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAAC3E,KAAK,CAAE;MAC3BnT,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAAC1E,KAAK,CAAE;MAC3BpT,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAACY,KAAK,IAAI,CAAC,CAAE;MAChC1Y,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAACzE,SAAS,CAAE;MAC/BrT,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAACxE,SAAS,CAAE;MAC/BtT,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAACtE,UAAU,CAAE;MAChCxT,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAAC7D,cAAc,CAAE;MACpCjU,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAACvE,MAAM,CAAE;MAC5BvT,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAACxsB,IAAI,CAAE;MAC1B0U,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAAC1D,eAAe,CAAE;MACrCpU,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAACzD,gBAAgB,CAAE;MACtCrU,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAACxD,KAAK,CAAE;MAC3BtU,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAACvD,eAAe,CAAE;MACrCvU,KAAK,CAAClR,IAAI,CAAEgpB,OAAO,CAACpE,QAAQ,CAAE;MAE9B,OAAO1T,KAAK,CAAC2rE,IAAI,EAAE;IAEpB;;IAEA;;IAEA,SAASnE,YAAYA,CAAE1vD,OAAO,EAAE07E,IAAI,EAAG;MAEtC,IAAMnB,iBAAiB,GAAGtnC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE;MAEnD,IAAKA,OAAO,CAAC6iE,cAAc,EAAG8Y,kBAAkB,CAAE37E,OAAO,CAAE;MAE3D,IAAKA,OAAO,CAACpD,qBAAqB,KAAK,KAAK,IAAIoD,OAAO,CAAChG,OAAO,GAAG,CAAC,IAAIugF,iBAAiB,CAACqB,SAAS,KAAK57E,OAAO,CAAChG,OAAO,EAAG;QAExH,IAAMpB,KAAK,GAAGoH,OAAO,CAACpH,KAAK;QAE3B,IAAKA,KAAK,KAAK,IAAI,EAAG;UAErB1d,OAAO,CAACC,IAAI,CAAE,yEAAyE,CAAE;QAE1F,CAAC,MAAM,IAAKyd,KAAK,CAACnf,QAAQ,KAAK,KAAK,EAAG;UAEtCyB,OAAO,CAACC,IAAI,CAAE,wEAAwE,CAAE;QAEzF,CAAC,MAAM;UAEN0gG,aAAa,CAAEtB,iBAAiB,EAAEv6E,OAAO,EAAE07E,IAAI,CAAE;UACjD;QAED;MAED;MAEArmG,KAAK,CAACw8F,WAAW,CAAEuF,GAAG,CAAC/E,UAAU,EAAEkI,iBAAiB,CAACK,cAAc,EAAExD,GAAG,CAACxB,QAAQ,GAAG8F,IAAI,CAAE;IAE3F;IAEA,SAAS1rB,iBAAiBA,CAAEhwD,OAAO,EAAE07E,IAAI,EAAG;MAE3C,IAAMnB,iBAAiB,GAAGtnC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE;MAEnD,IAAKA,OAAO,CAAChG,OAAO,GAAG,CAAC,IAAIugF,iBAAiB,CAACqB,SAAS,KAAK57E,OAAO,CAAChG,OAAO,EAAG;QAE7E6hF,aAAa,CAAEtB,iBAAiB,EAAEv6E,OAAO,EAAE07E,IAAI,CAAE;QACjD;MAED;MAEArmG,KAAK,CAACw8F,WAAW,CAAEuF,GAAG,CAAC0E,gBAAgB,EAAEvB,iBAAiB,CAACK,cAAc,EAAExD,GAAG,CAACxB,QAAQ,GAAG8F,IAAI,CAAE;IAEjG;IAEA,SAAS9rB,YAAYA,CAAE5vD,OAAO,EAAE07E,IAAI,EAAG;MAEtC,IAAMnB,iBAAiB,GAAGtnC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE;MAEnD,IAAKA,OAAO,CAAChG,OAAO,GAAG,CAAC,IAAIugF,iBAAiB,CAACqB,SAAS,KAAK57E,OAAO,CAAChG,OAAO,EAAG;QAE7E6hF,aAAa,CAAEtB,iBAAiB,EAAEv6E,OAAO,EAAE07E,IAAI,CAAE;QACjD;MAED;MAEArmG,KAAK,CAACw8F,WAAW,CAAEuF,GAAG,CAAC2E,UAAU,EAAExB,iBAAiB,CAACK,cAAc,EAAExD,GAAG,CAACxB,QAAQ,GAAG8F,IAAI,CAAE;IAE3F;IAEA,SAAS5rB,cAAcA,CAAE9vD,OAAO,EAAE07E,IAAI,EAAG;MAExC,IAAMnB,iBAAiB,GAAGtnC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE;MAEnD,IAAKA,OAAO,CAAChG,OAAO,GAAG,CAAC,IAAIugF,iBAAiB,CAACqB,SAAS,KAAK57E,OAAO,CAAChG,OAAO,EAAG;QAE7EgiF,iBAAiB,CAAEzB,iBAAiB,EAAEv6E,OAAO,EAAE07E,IAAI,CAAE;QACrD;MAED;MAEArmG,KAAK,CAACw8F,WAAW,CAAEuF,GAAG,CAAC9E,gBAAgB,EAAEiI,iBAAiB,CAACK,cAAc,EAAExD,GAAG,CAACxB,QAAQ,GAAG8F,IAAI,CAAE;IAEjG;IAEA,IAAMO,YAAY,IAAA3E,aAAA,OAAA5/E,eAAA,CAAA4/E,aAAA,EACft3F,cAAc,EAAIo3F,GAAG,CAAC8E,MAAM,GAAAxkF,eAAA,CAAA4/E,aAAA,EAC5Br3F,mBAAmB,EAAIm3F,GAAG,CAAC+E,aAAa,GAAAzkF,eAAA,CAAA4/E,aAAA,EACxCp3F,sBAAsB,EAAIk3F,GAAG,CAACgF,eAAe,GAAA9E,aAAA,CAC/C;IAED,IAAM+E,UAAU,IAAA9E,WAAA,OAAA7/E,eAAA,CAAA6/E,WAAA,EACbp3F,aAAa,EAAIi3F,GAAG,CAACpF,OAAO,GAAAt6E,eAAA,CAAA6/E,WAAA,EAC5Bn3F,0BAA0B,EAAIg3F,GAAG,CAACkF,sBAAsB,GAAA5kF,eAAA,CAAA6/E,WAAA,EACxDj3F,yBAAyB,EAAI82F,GAAG,CAACmF,qBAAqB,GAAA7kF,eAAA,CAAA6/E,WAAA,EAEtD/2F,YAAY,EAAI42F,GAAG,CAAC+C,MAAM,GAAAziF,eAAA,CAAA6/E,WAAA,EAC1B92F,yBAAyB,EAAI22F,GAAG,CAACoF,qBAAqB,GAAA9kF,eAAA,CAAA6/E,WAAA,EACtD52F,wBAAwB,EAAIy2F,GAAG,CAACqF,oBAAoB,GAAAlF,WAAA,CACtD;IAED,SAASmF,oBAAoBA,CAAEC,WAAW,EAAE38E,OAAO,EAAEw4E,YAAY,EAAG;MAEnE,IAAKA,YAAY,EAAG;QAEnBpB,GAAG,CAACtF,aAAa,CAAE6K,WAAW,EAAEvF,GAAG,CAACwF,cAAc,EAAEX,YAAY,CAAEj8E,OAAO,CAAC3E,KAAK,CAAE,CAAE;QACnF+7E,GAAG,CAACtF,aAAa,CAAE6K,WAAW,EAAEvF,GAAG,CAACyF,cAAc,EAAEZ,YAAY,CAAEj8E,OAAO,CAAC1E,KAAK,CAAE,CAAE;QAEnF,IAAKqhF,WAAW,KAAKvF,GAAG,CAAC2E,UAAU,IAAIY,WAAW,KAAKvF,GAAG,CAAC0E,gBAAgB,EAAG;UAE7E1E,GAAG,CAACtF,aAAa,CAAE6K,WAAW,EAAEvF,GAAG,CAAC0F,cAAc,EAAEb,YAAY,CAAEj8E,OAAO,CAACY,KAAK,CAAE,CAAE;QAEpF;QAEAw2E,GAAG,CAACtF,aAAa,CAAE6K,WAAW,EAAEvF,GAAG,CAACnF,kBAAkB,EAAEoK,UAAU,CAAEr8E,OAAO,CAACzE,SAAS,CAAE,CAAE;QACzF67E,GAAG,CAACtF,aAAa,CAAE6K,WAAW,EAAEvF,GAAG,CAACrF,kBAAkB,EAAEsK,UAAU,CAAEr8E,OAAO,CAACxE,SAAS,CAAE,CAAE;MAE1F,CAAC,MAAM;QAEN47E,GAAG,CAACtF,aAAa,CAAE6K,WAAW,EAAEvF,GAAG,CAACwF,cAAc,EAAExF,GAAG,CAAC+E,aAAa,CAAE;QACvE/E,GAAG,CAACtF,aAAa,CAAE6K,WAAW,EAAEvF,GAAG,CAACyF,cAAc,EAAEzF,GAAG,CAAC+E,aAAa,CAAE;QAEvE,IAAKQ,WAAW,KAAKvF,GAAG,CAAC2E,UAAU,IAAIY,WAAW,KAAKvF,GAAG,CAAC0E,gBAAgB,EAAG;UAE7E1E,GAAG,CAACtF,aAAa,CAAE6K,WAAW,EAAEvF,GAAG,CAAC0F,cAAc,EAAE1F,GAAG,CAAC+E,aAAa,CAAE;QAExE;QAEA,IAAKn8E,OAAO,CAAC3E,KAAK,KAAKpb,mBAAmB,IAAI+f,OAAO,CAAC1E,KAAK,KAAKrb,mBAAmB,EAAG;UAErF/E,OAAO,CAACC,IAAI,CAAE,+HAA+H,CAAE;QAEhJ;QAEAi8F,GAAG,CAACtF,aAAa,CAAE6K,WAAW,EAAEvF,GAAG,CAACnF,kBAAkB,EAAEiI,cAAc,CAAEl6E,OAAO,CAACzE,SAAS,CAAE,CAAE;QAC7F67E,GAAG,CAACtF,aAAa,CAAE6K,WAAW,EAAEvF,GAAG,CAACrF,kBAAkB,EAAEmI,cAAc,CAAEl6E,OAAO,CAACxE,SAAS,CAAE,CAAE;QAE7F,IAAKwE,OAAO,CAACxE,SAAS,KAAKrb,aAAa,IAAI6f,OAAO,CAACxE,SAAS,KAAKhb,YAAY,EAAG;UAEhFtF,OAAO,CAACC,IAAI,CAAE,iIAAiI,CAAE;QAElJ;MAED;MAEA,IAAKqgD,UAAU,CAACoiB,GAAG,CAAE,gCAAgC,CAAE,KAAK,IAAI,EAAG;QAElE,IAAMxE,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,gCAAgC,CAAE;QAEpE,IAAKoS,OAAO,CAACzE,SAAS,KAAKpb,aAAa,EAAG;QAC3C,IAAK6f,OAAO,CAACxE,SAAS,KAAKlb,yBAAyB,IAAI0f,OAAO,CAACxE,SAAS,KAAK7a,wBAAwB,EAAG;QACzG,IAAKqf,OAAO,CAACxsB,IAAI,KAAK2N,SAAS,IAAIq6C,UAAU,CAACoiB,GAAG,CAAE,0BAA0B,CAAE,KAAK,KAAK,EAAG,OAAO,CAAC;QACpG,IAAKxZ,QAAQ,KAAK,KAAK,IAAMpkC,OAAO,CAACxsB,IAAI,KAAK4N,aAAa,IAAIo6C,UAAU,CAACoiB,GAAG,CAAE,+BAA+B,CAAE,KAAK,KAAO,EAAG,OAAO,CAAC;;QAEvI,IAAK59C,OAAO,CAACtE,UAAU,GAAG,CAAC,IAAIu3C,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE,CAAC+8E,mBAAmB,EAAG;UAE9E3F,GAAG,CAAC4F,aAAa,CAAEL,WAAW,EAAEvjC,SAAS,CAAC6jC,0BAA0B,EAAE10F,IAAI,CAACY,GAAG,CAAE6W,OAAO,CAACtE,UAAU,EAAEyoC,YAAY,CAACwZ,gBAAgB,EAAE,CAAE,CAAE;UACvI1K,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE,CAAC+8E,mBAAmB,GAAG/8E,OAAO,CAACtE,UAAU;QAEnE;MAED;IAED;IAEA,SAASwhF,WAAWA,CAAE3C,iBAAiB,EAAEv6E,OAAO,EAAG;MAElD,IAAIm9E,WAAW,GAAG,KAAK;MAEvB,IAAK5C,iBAAiB,CAACC,WAAW,KAAKvkG,SAAS,EAAG;QAElDskG,iBAAiB,CAACC,WAAW,GAAG,IAAI;QAEpCx6E,OAAO,CAAC1Y,gBAAgB,CAAE,SAAS,EAAEm6D,gBAAgB,CAAE;MAExD;;MAEA;;MAEA,IAAMzlD,MAAM,GAAGgE,OAAO,CAAChE,MAAM;MAC7B,IAAIy+E,aAAa,GAAG5C,QAAQ,CAACjqF,GAAG,CAAEoO,MAAM,CAAE;MAE1C,IAAKy+E,aAAa,KAAKxkG,SAAS,EAAG;QAElCwkG,aAAa,GAAG,CAAC,CAAC;QAClB5C,QAAQ,CAAC9qF,GAAG,CAAEiP,MAAM,EAAEy+E,aAAa,CAAE;MAEtC;;MAEA;;MAEA,IAAM2C,eAAe,GAAG3B,kBAAkB,CAAEz7E,OAAO,CAAE;MAErD,IAAKo9E,eAAe,KAAK7C,iBAAiB,CAACG,UAAU,EAAG;QAEvD;;QAEA,IAAKD,aAAa,CAAE2C,eAAe,CAAE,KAAKnnG,SAAS,EAAG;UAErD;;UAEAwkG,aAAa,CAAE2C,eAAe,CAAE,GAAG;YAClCp9E,OAAO,EAAEo3E,GAAG,CAACxF,aAAa,EAAE;YAC5BjU,SAAS,EAAE;UACZ,CAAC;UAEDvnF,IAAI,CAACsyE,MAAM,CAACvrD,QAAQ,EAAG;;UAEvB;UACA;;UAEAggF,WAAW,GAAG,IAAI;QAEnB;QAEA1C,aAAa,CAAE2C,eAAe,CAAE,CAACzf,SAAS,EAAG;;QAE7C;QACA;;QAEA,IAAMmY,YAAY,GAAG2E,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;QAElE,IAAK5E,YAAY,KAAK7/F,SAAS,EAAG;UAEjCwkG,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE,CAAC/c,SAAS,EAAG;UAE1D,IAAKmY,YAAY,CAACnY,SAAS,KAAK,CAAC,EAAG;YAEnCgd,aAAa,CAAE36E,OAAO,CAAE;UAEzB;QAED;;QAEA;;QAEAu6E,iBAAiB,CAACG,UAAU,GAAG0C,eAAe;QAC9C7C,iBAAiB,CAACK,cAAc,GAAGH,aAAa,CAAE2C,eAAe,CAAE,CAACp9E,OAAO;MAE5E;MAEA,OAAOm9E,WAAW;IAEnB;IAEA,SAAStB,aAAaA,CAAEtB,iBAAiB,EAAEv6E,OAAO,EAAE07E,IAAI,EAAG;MAE1D,IAAIiB,WAAW,GAAGvF,GAAG,CAAC/E,UAAU;MAEhC,IAAKryE,OAAO,CAACW,kBAAkB,IAAIX,OAAO,CAACq9E,wBAAwB,EAAGV,WAAW,GAAGvF,GAAG,CAAC0E,gBAAgB;MACxG,IAAK97E,OAAO,CAACsB,eAAe,EAAGq7E,WAAW,GAAGvF,GAAG,CAAC2E,UAAU;MAE3D,IAAMoB,WAAW,GAAGD,WAAW,CAAE3C,iBAAiB,EAAEv6E,OAAO,CAAE;MAC7D,IAAMhE,MAAM,GAAGgE,OAAO,CAAChE,MAAM;MAE7B3mB,KAAK,CAACw8F,WAAW,CAAE8K,WAAW,EAAEpC,iBAAiB,CAACK,cAAc,EAAExD,GAAG,CAACxB,QAAQ,GAAG8F,IAAI,CAAE;MAEvF,IAAM4B,gBAAgB,GAAGrqC,UAAU,CAACrlD,GAAG,CAAEoO,MAAM,CAAE;MAEjD,IAAKA,MAAM,CAAChC,OAAO,KAAKsjF,gBAAgB,CAAC1B,SAAS,IAAIuB,WAAW,KAAK,IAAI,EAAG;QAE5E9nG,KAAK,CAACqgG,aAAa,CAAE0B,GAAG,CAACxB,QAAQ,GAAG8F,IAAI,CAAE;QAE1CtE,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACoG,mBAAmB,EAAEx9E,OAAO,CAACxD,KAAK,CAAE;QACzD46E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACqG,8BAA8B,EAAEz9E,OAAO,CAACzD,gBAAgB,CAAE;QAC/E66E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACsG,gBAAgB,EAAE19E,OAAO,CAACvD,eAAe,CAAE;QAChE26E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACuG,kCAAkC,EAAEvG,GAAG,CAACwG,IAAI,CAAE;QAEnE,IAAM1F,eAAe,GAAGI,sBAAsB,CAAEt4E,OAAO,CAAE,IAAIq4E,cAAc,CAAEr4E,OAAO,CAACpH,KAAK,CAAE,KAAK,KAAK;QACtG,IAAIA,KAAK,GAAGq/E,WAAW,CAAEj4E,OAAO,CAACpH,KAAK,EAAEs/E,eAAe,EAAE,KAAK,EAAEv5B,cAAc,CAAE;QAChF/lD,KAAK,GAAGilF,gBAAgB,CAAE79E,OAAO,EAAEpH,KAAK,CAAE;QAE1C,IAAM4/E,YAAY,GAAGH,cAAc,CAAEz/E,KAAK,CAAE,IAAIwrC,QAAQ;UACvDw0C,QAAQ,GAAGvB,KAAK,CAACp/E,OAAO,CAAE+H,OAAO,CAACvE,MAAM,EAAEuE,OAAO,CAACpE,QAAQ,CAAE;QAE7D,IAAIi9E,MAAM,GAAGxB,KAAK,CAACp/E,OAAO,CAAE+H,OAAO,CAACxsB,IAAI,CAAE;UACzCsqG,gBAAgB,GAAGpF,iBAAiB,CAAE14E,OAAO,CAAC7D,cAAc,EAAEy8E,QAAQ,EAAEC,MAAM,EAAE74E,OAAO,CAACpE,QAAQ,EAAEoE,OAAO,CAAC6iE,cAAc,CAAE;QAE3H6Z,oBAAoB,CAAEC,WAAW,EAAE38E,OAAO,EAAEw4E,YAAY,CAAE;QAE1D,IAAIuF,MAAM;QACV,IAAM9hF,OAAO,GAAG+D,OAAO,CAAC/D,OAAO;QAE/B,IAAM+hF,aAAa,GAAK55C,QAAQ,IAAIpkC,OAAO,CAAC6iE,cAAc,KAAK,IAAM;QACrE,IAAMob,cAAc,GAAKX,gBAAgB,CAAC1B,SAAS,KAAK3lG,SAAS,IAAQknG,WAAW,KAAK,IAAM;QAC/F,IAAMe,MAAM,GAAGnE,YAAY,CAAE/5E,OAAO,EAAEpH,KAAK,EAAE4/E,YAAY,CAAE;QAE3D,IAAKx4E,OAAO,CAACm+E,cAAc,EAAG;UAE7B;;UAEAL,gBAAgB,GAAG1G,GAAG,CAACgH,eAAe;UAEtC,IAAKh6C,QAAQ,EAAG;YAEf,IAAKpkC,OAAO,CAACxsB,IAAI,KAAK2N,SAAS,EAAG;cAEjC28F,gBAAgB,GAAG1G,GAAG,CAACiH,kBAAkB;YAE1C,CAAC,MAAM,IAAKr+E,OAAO,CAACxsB,IAAI,KAAK0N,eAAe,EAAG;cAE9C48F,gBAAgB,GAAG1G,GAAG,CAACkH,iBAAiB;YAEzC,CAAC,MAAM,IAAKt+E,OAAO,CAACxsB,IAAI,KAAK+N,kBAAkB,EAAG;cAEjDu8F,gBAAgB,GAAG1G,GAAG,CAACmH,gBAAgB;YAExC,CAAC,MAAM;cAENT,gBAAgB,GAAG1G,GAAG,CAACoH,iBAAiB,CAAC,CAAC;YAE3C;UAED,CAAC,MAAM;YAEN,IAAKx+E,OAAO,CAACxsB,IAAI,KAAK2N,SAAS,EAAG;cAEjCjG,OAAO,CAAChG,KAAK,CAAE,8DAA8D,CAAE;YAEhF;UAED;;UAEA;;UAEA,IAAK8qB,OAAO,CAACvE,MAAM,KAAK7Z,WAAW,IAAIk8F,gBAAgB,KAAK1G,GAAG,CAACgH,eAAe,EAAG;YAEjF;YACA;YACA;YACA,IAAKp+E,OAAO,CAACxsB,IAAI,KAAKwN,iBAAiB,IAAIgf,OAAO,CAACxsB,IAAI,KAAK0N,eAAe,EAAG;cAE7EhG,OAAO,CAACC,IAAI,CAAE,6FAA6F,CAAE;cAE7G6kB,OAAO,CAACxsB,IAAI,GAAG0N,eAAe;cAC9B23F,MAAM,GAAGxB,KAAK,CAACp/E,OAAO,CAAE+H,OAAO,CAACxsB,IAAI,CAAE;YAEvC;UAED;UAEA,IAAKwsB,OAAO,CAACvE,MAAM,KAAK5Z,kBAAkB,IAAIi8F,gBAAgB,KAAK1G,GAAG,CAACgH,eAAe,EAAG;YAExF;YACA;YACAN,gBAAgB,GAAG1G,GAAG,CAACqH,aAAa;;YAEpC;YACA;YACA;YACA,IAAKz+E,OAAO,CAACxsB,IAAI,KAAK+N,kBAAkB,EAAG;cAE1CrG,OAAO,CAACC,IAAI,CAAE,kFAAkF,CAAE;cAElG6kB,OAAO,CAACxsB,IAAI,GAAG+N,kBAAkB;cACjCs3F,MAAM,GAAGxB,KAAK,CAACp/E,OAAO,CAAE+H,OAAO,CAACxsB,IAAI,CAAE;YAEvC;UAED;;UAEA;;UAEA,IAAKyqG,cAAc,EAAG;YAErB,IAAKD,aAAa,EAAG;cAEpB3oG,KAAK,CAACmhG,YAAY,CAAEY,GAAG,CAAC/E,UAAU,EAAE,CAAC,EAAEyL,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;YAErF,CAAC,MAAM;cAEN7jB,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC/E,UAAU,EAAE,CAAC,EAAEyL,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAE,CAAC,EAAE0/E,QAAQ,EAAEC,MAAM,EAAE,IAAI,CAAE;YAE9G;UAED;QAED,CAAC,MAAM,IAAK74E,OAAO,CAACvF,aAAa,EAAG;UAEnC;UACA;UACA;;UAEA,IAAKwB,OAAO,CAAC1kB,MAAM,GAAG,CAAC,IAAIihG,YAAY,EAAG;YAEzC,IAAKwF,aAAa,IAAIC,cAAc,EAAG;cAEtC5oG,KAAK,CAACmhG,YAAY,CAAEY,GAAG,CAAC/E,UAAU,EAAE6L,MAAM,EAAEJ,gBAAgB,EAAE7hF,OAAO,CAAE,CAAC,CAAE,CAAChD,KAAK,EAAEgD,OAAO,CAAE,CAAC,CAAE,CAAC/C,MAAM,CAAE;YAExG;YAEA,KAAM,IAAI1hB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGjG,OAAO,CAAC1kB,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;cAEpDumG,MAAM,GAAG9hF,OAAO,CAAEzkB,CAAC,CAAE;cAErB,IAAKwmG,aAAa,EAAG;gBAEpB3oG,KAAK,CAAC+gG,aAAa,CAAEgB,GAAG,CAAC/E,UAAU,EAAE76F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEumG,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAE0/E,QAAQ,EAAEC,MAAM,EAAEkF,MAAM,CAAClkF,IAAI,CAAE;cAE3G,CAAC,MAAM;gBAENxkB,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC/E,UAAU,EAAE76F,CAAC,EAAEsmG,gBAAgB,EAAEC,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAE,CAAC,EAAE0/E,QAAQ,EAAEC,MAAM,EAAEkF,MAAM,CAAClkF,IAAI,CAAE;cAEvH;YAED;YAEAmG,OAAO,CAAC1D,eAAe,GAAG,KAAK;UAEhC,CAAC,MAAM;YAEN,IAAK0hF,aAAa,EAAG;cAEpB,IAAKC,cAAc,EAAG;gBAErB5oG,KAAK,CAACmhG,YAAY,CAAEY,GAAG,CAAC/E,UAAU,EAAE6L,MAAM,EAAEJ,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;cAE1F;cAEA7jB,KAAK,CAAC+gG,aAAa,CAAEgB,GAAG,CAAC/E,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEz5E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAE0/E,QAAQ,EAAEC,MAAM,EAAEjgF,KAAK,CAACiB,IAAI,CAAE;YAExG,CAAC,MAAM;cAENxkB,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC/E,UAAU,EAAE,CAAC,EAAEyL,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAE,CAAC,EAAE0/E,QAAQ,EAAEC,MAAM,EAAEjgF,KAAK,CAACiB,IAAI,CAAE;YAEpH;UAED;QAED,CAAC,MAAM,IAAKmG,OAAO,CAACi6E,mBAAmB,EAAG;UAEzC,IAAKj6E,OAAO,CAACq9E,wBAAwB,EAAG;YAEvC,IAAKW,aAAa,IAAIC,cAAc,EAAG;cAEtC5oG,KAAK,CAACohG,YAAY,CAAEW,GAAG,CAAC0E,gBAAgB,EAAEoC,MAAM,EAAEJ,gBAAgB,EAAE7hF,OAAO,CAAE,CAAC,CAAE,CAAChD,KAAK,EAAEgD,OAAO,CAAE,CAAC,CAAE,CAAC/C,MAAM,EAAEN,KAAK,CAACgH,KAAK,CAAE;YAE3H;YAEA,KAAM,IAAIpoB,IAAC,GAAG,CAAC,EAAE0qB,IAAE,GAAGjG,OAAO,CAAC1kB,MAAM,EAAEC,IAAC,GAAG0qB,IAAE,EAAE1qB,IAAC,EAAG,EAAG;cAEpDumG,MAAM,GAAG9hF,OAAO,CAAEzkB,IAAC,CAAE;cAErB,IAAKwoB,OAAO,CAACvE,MAAM,KAAKha,UAAU,EAAG;gBAEpC,IAAKm3F,QAAQ,KAAK,IAAI,EAAG;kBAExB,IAAKoF,aAAa,EAAG;oBAEpB3oG,KAAK,CAACkhG,uBAAuB,CAAEa,GAAG,CAAC0E,gBAAgB,EAAEtkG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEumG,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAEN,KAAK,CAACgH,KAAK,EAAEg5E,QAAQ,EAAEmF,MAAM,CAAClkF,IAAI,EAAE,CAAC,EAAE,CAAC,CAAE;kBAEzI,CAAC,MAAM;oBAENxkB,KAAK,CAAC8gG,oBAAoB,CAAEiB,GAAG,CAAC0E,gBAAgB,EAAEtkG,IAAC,EAAEsmG,gBAAgB,EAAEC,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAEN,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEm+E,MAAM,CAAClkF,IAAI,EAAE,CAAC,EAAE,CAAC,CAAE;kBAExI;gBAED,CAAC,MAAM;kBAEN3e,OAAO,CAACC,IAAI,CAAE,gGAAgG,CAAE;gBAEjH;cAED,CAAC,MAAM;gBAEN,IAAK6iG,aAAa,EAAG;kBAEpB3oG,KAAK,CAACghG,aAAa,CAAEe,GAAG,CAAC0E,gBAAgB,EAAEtkG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEumG,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAEN,KAAK,CAACgH,KAAK,EAAEg5E,QAAQ,EAAEC,MAAM,EAAEkF,MAAM,CAAClkF,IAAI,CAAE;gBAEjI,CAAC,MAAM;kBAENxkB,KAAK,CAACqhG,UAAU,CAAEU,GAAG,CAAC0E,gBAAgB,EAAEtkG,IAAC,EAAEsmG,gBAAgB,EAAEC,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAEN,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEg5E,QAAQ,EAAEC,MAAM,EAAEkF,MAAM,CAAClkF,IAAI,CAAE;gBAE1I;cAED;YAED;UAED,CAAC,MAAM;YAEN,IAAKmkF,aAAa,IAAIC,cAAc,EAAG;cAEtC5oG,KAAK,CAACmhG,YAAY,CAAEY,GAAG,CAAC/E,UAAU,EAAE6L,MAAM,EAAEJ,gBAAgB,EAAE7hF,OAAO,CAAE,CAAC,CAAE,CAAChD,KAAK,EAAEgD,OAAO,CAAE,CAAC,CAAE,CAAC/C,MAAM,CAAE;YAExG;YAEA,KAAM,IAAI1hB,IAAC,GAAG,CAAC,EAAE0qB,KAAE,GAAGjG,OAAO,CAAC1kB,MAAM,EAAEC,IAAC,GAAG0qB,KAAE,EAAE1qB,IAAC,EAAG,EAAG;cAEpDumG,MAAM,GAAG9hF,OAAO,CAAEzkB,IAAC,CAAE;cAErB,IAAKwoB,OAAO,CAACvE,MAAM,KAAKha,UAAU,EAAG;gBAEpC,IAAKm3F,QAAQ,KAAK,IAAI,EAAG;kBAExB,IAAKoF,aAAa,EAAG;oBAEpB3oG,KAAK,CAACihG,uBAAuB,CAAEc,GAAG,CAAC/E,UAAU,EAAE76F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEumG,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAE0/E,QAAQ,EAAEmF,MAAM,CAAClkF,IAAI,CAAE;kBAE7G,CAAC,MAAM;oBAENxkB,KAAK,CAAC4gG,oBAAoB,CAAEmB,GAAG,CAAC/E,UAAU,EAAE76F,IAAC,EAAEsmG,gBAAgB,EAAEC,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAE,CAAC,EAAE6kF,MAAM,CAAClkF,IAAI,CAAE;kBAE/G;gBAED,CAAC,MAAM;kBAEN3e,OAAO,CAACC,IAAI,CAAE,gGAAgG,CAAE;gBAEjH;cAED,CAAC,MAAM;gBAEN,IAAK6iG,aAAa,EAAG;kBAEpB3oG,KAAK,CAAC+gG,aAAa,CAAEgB,GAAG,CAAC/E,UAAU,EAAE76F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEumG,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAE0/E,QAAQ,EAAEC,MAAM,EAAEkF,MAAM,CAAClkF,IAAI,CAAE;gBAE3G,CAAC,MAAM;kBAENxkB,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC/E,UAAU,EAAE76F,IAAC,EAAEsmG,gBAAgB,EAAEC,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAE,CAAC,EAAE0/E,QAAQ,EAAEC,MAAM,EAAEkF,MAAM,CAAClkF,IAAI,CAAE;gBAEvH;cAED;YAED;UAED;QAED,CAAC,MAAM,IAAKmG,OAAO,CAACW,kBAAkB,EAAG;UAExC,IAAKq9E,aAAa,EAAG;YAEpB,IAAKC,cAAc,EAAG;cAErB5oG,KAAK,CAACohG,YAAY,CAAEW,GAAG,CAAC0E,gBAAgB,EAAEoC,MAAM,EAAEJ,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAACgH,KAAK,CAAE;YAE7G;YAEAvqB,KAAK,CAACghG,aAAa,CAAEe,GAAG,CAAC0E,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEljF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAACgH,KAAK,EAAEg5E,QAAQ,EAAEC,MAAM,EAAEjgF,KAAK,CAACiB,IAAI,CAAE;UAE9H,CAAC,MAAM;YAENxkB,KAAK,CAACqhG,UAAU,CAAEU,GAAG,CAAC0E,gBAAgB,EAAE,CAAC,EAAEgC,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEg5E,QAAQ,EAAEC,MAAM,EAAEjgF,KAAK,CAACiB,IAAI,CAAE;UAEvI;QAED,CAAC,MAAM,IAAKmG,OAAO,CAACsB,eAAe,EAAG;UAErC,IAAK08E,aAAa,EAAG;YAEpB,IAAKC,cAAc,EAAG;cAErB5oG,KAAK,CAACohG,YAAY,CAAEW,GAAG,CAAC2E,UAAU,EAAEmC,MAAM,EAAEJ,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAACgH,KAAK,CAAE;YAEvG;YAEAvqB,KAAK,CAACghG,aAAa,CAAEe,GAAG,CAAC2E,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEnjF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAACgH,KAAK,EAAEg5E,QAAQ,EAAEC,MAAM,EAAEjgF,KAAK,CAACiB,IAAI,CAAE;UAExH,CAAC,MAAM;YAENxkB,KAAK,CAACqhG,UAAU,CAAEU,GAAG,CAAC2E,UAAU,EAAE,CAAC,EAAE+B,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEg5E,QAAQ,EAAEC,MAAM,EAAEjgF,KAAK,CAACiB,IAAI,CAAE;UAEjI;QAED,CAAC,MAAM,IAAKmG,OAAO,CAACg6E,oBAAoB,EAAG;UAE1C,IAAKiE,cAAc,EAAG;YAErB,IAAKD,aAAa,EAAG;cAEpB3oG,KAAK,CAACmhG,YAAY,CAAEY,GAAG,CAAC/E,UAAU,EAAE6L,MAAM,EAAEJ,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;YAE1F,CAAC,MAAM;cAEN,IAAID,KAAK,GAAGL,KAAK,CAACK,KAAK;gBAAEC,MAAM,GAAGN,KAAK,CAACM,MAAM;cAE9C,KAAM,IAAI1hB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG0mG,MAAM,EAAE1mG,IAAC,EAAG,EAAG;gBAEnCnC,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC/E,UAAU,EAAE76F,IAAC,EAAEsmG,gBAAgB,EAAE7kF,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAE0/E,QAAQ,EAAEC,MAAM,EAAE,IAAI,CAAE;gBAEjG5/E,KAAK,KAAK,CAAC;gBACXC,MAAM,KAAK,CAAC;cAEb;YAED;UAED;QAED,CAAC,MAAM;UAEN;;UAEA;UACA;UACA;;UAEA,IAAK+C,OAAO,CAAC1kB,MAAM,GAAG,CAAC,IAAIihG,YAAY,EAAG;YAEzC,IAAKwF,aAAa,IAAIC,cAAc,EAAG;cAEtC5oG,KAAK,CAACmhG,YAAY,CAAEY,GAAG,CAAC/E,UAAU,EAAE6L,MAAM,EAAEJ,gBAAgB,EAAE7hF,OAAO,CAAE,CAAC,CAAE,CAAChD,KAAK,EAAEgD,OAAO,CAAE,CAAC,CAAE,CAAC/C,MAAM,CAAE;YAExG;YAEA,KAAM,IAAI1hB,IAAC,GAAG,CAAC,EAAE0qB,KAAE,GAAGjG,OAAO,CAAC1kB,MAAM,EAAEC,IAAC,GAAG0qB,KAAE,EAAE1qB,IAAC,EAAG,EAAG;cAEpDumG,MAAM,GAAG9hF,OAAO,CAAEzkB,IAAC,CAAE;cAErB,IAAKwmG,aAAa,EAAG;gBAEpB3oG,KAAK,CAAC+gG,aAAa,CAAEgB,GAAG,CAAC/E,UAAU,EAAE76F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEohG,QAAQ,EAAEC,MAAM,EAAEkF,MAAM,CAAE;cAEzE,CAAC,MAAM;gBAEN1oG,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC/E,UAAU,EAAE76F,IAAC,EAAEsmG,gBAAgB,EAAElF,QAAQ,EAAEC,MAAM,EAAEkF,MAAM,CAAE;cAElF;YAED;YAEA/9E,OAAO,CAAC1D,eAAe,GAAG,KAAK;UAEhC,CAAC,MAAM;YAEN,IAAK0hF,aAAa,EAAG;cAEpB,IAAKC,cAAc,EAAG;gBAErB5oG,KAAK,CAACmhG,YAAY,CAAEY,GAAG,CAAC/E,UAAU,EAAE6L,MAAM,EAAEJ,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;cAE1F;cAEA7jB,KAAK,CAAC+gG,aAAa,CAAEgB,GAAG,CAAC/E,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEuG,QAAQ,EAAEC,MAAM,EAAEjgF,KAAK,CAAE;YAExE,CAAC,MAAM;cAENvjB,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC/E,UAAU,EAAE,CAAC,EAAEyL,gBAAgB,EAAElF,QAAQ,EAAEC,MAAM,EAAEjgF,KAAK,CAAE;YAEjF;UAED;QAED;QAEA,IAAK2/E,2BAA2B,CAAEv4E,OAAO,EAAEw4E,YAAY,CAAE,EAAG;UAE3DC,cAAc,CAAEkE,WAAW,CAAE;QAE9B;QAEAW,gBAAgB,CAAC1B,SAAS,GAAG5/E,MAAM,CAAChC,OAAO;QAE3C,IAAKgG,OAAO,CAACrD,QAAQ,EAAGqD,OAAO,CAACrD,QAAQ,CAAEqD,OAAO,CAAE;MAEpD;MAEAu6E,iBAAiB,CAACqB,SAAS,GAAG57E,OAAO,CAAChG,OAAO;IAE9C;IAEA,SAASgiF,iBAAiBA,CAAEzB,iBAAiB,EAAEv6E,OAAO,EAAE07E,IAAI,EAAG;MAE9D,IAAK17E,OAAO,CAACpH,KAAK,CAACrhB,MAAM,KAAK,CAAC,EAAG;MAElC,IAAM4lG,WAAW,GAAGD,WAAW,CAAE3C,iBAAiB,EAAEv6E,OAAO,CAAE;MAC7D,IAAMhE,MAAM,GAAGgE,OAAO,CAAChE,MAAM;MAE7B3mB,KAAK,CAACw8F,WAAW,CAAEuF,GAAG,CAAC9E,gBAAgB,EAAEiI,iBAAiB,CAACK,cAAc,EAAExD,GAAG,CAACxB,QAAQ,GAAG8F,IAAI,CAAE;MAEhG,IAAM4B,gBAAgB,GAAGrqC,UAAU,CAACrlD,GAAG,CAAEoO,MAAM,CAAE;MAEjD,IAAKA,MAAM,CAAChC,OAAO,KAAKsjF,gBAAgB,CAAC1B,SAAS,IAAIuB,WAAW,KAAK,IAAI,EAAG;QAE5E9nG,KAAK,CAACqgG,aAAa,CAAE0B,GAAG,CAACxB,QAAQ,GAAG8F,IAAI,CAAE;QAE1CtE,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACoG,mBAAmB,EAAEx9E,OAAO,CAACxD,KAAK,CAAE;QACzD46E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACqG,8BAA8B,EAAEz9E,OAAO,CAACzD,gBAAgB,CAAE;QAC/E66E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACsG,gBAAgB,EAAE19E,OAAO,CAACvD,eAAe,CAAE;QAChE26E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACuG,kCAAkC,EAAEvG,GAAG,CAACwG,IAAI,CAAE;QAEnE,IAAMc,YAAY,GAAK1+E,OAAO,CAACi6E,mBAAmB,IAAIj6E,OAAO,CAACpH,KAAK,CAAE,CAAC,CAAE,CAACqhF,mBAAqB;QAC9F,IAAMx/E,aAAa,GAAKuF,OAAO,CAACpH,KAAK,CAAE,CAAC,CAAE,IAAIoH,OAAO,CAACpH,KAAK,CAAE,CAAC,CAAE,CAAC6B,aAAe;QAEhF,IAAMkkF,SAAS,GAAG,EAAE;QAEpB,KAAM,IAAInnG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAK,CAAEknG,YAAY,IAAI,CAAEjkF,aAAa,EAAG;YAExCkkF,SAAS,CAAEnnG,CAAC,CAAE,GAAGygG,WAAW,CAAEj4E,OAAO,CAACpH,KAAK,CAAEphB,CAAC,CAAE,EAAE,KAAK,EAAE,IAAI,EAAEqnE,cAAc,CAAE;UAEhF,CAAC,MAAM;YAEN8/B,SAAS,CAAEnnG,CAAC,CAAE,GAAGijB,aAAa,GAAGuF,OAAO,CAACpH,KAAK,CAAEphB,CAAC,CAAE,CAACohB,KAAK,GAAGoH,OAAO,CAACpH,KAAK,CAAEphB,CAAC,CAAE;UAE/E;UAEAmnG,SAAS,CAAEnnG,CAAC,CAAE,GAAGqmG,gBAAgB,CAAE79E,OAAO,EAAE2+E,SAAS,CAAEnnG,CAAC,CAAE,CAAE;QAE7D;QAEA,IAAMohB,KAAK,GAAG+lF,SAAS,CAAE,CAAC,CAAE;UAC3BnG,YAAY,GAAGH,cAAc,CAAEz/E,KAAK,CAAE,IAAIwrC,QAAQ;UAClDw0C,QAAQ,GAAGvB,KAAK,CAACp/E,OAAO,CAAE+H,OAAO,CAACvE,MAAM,EAAEuE,OAAO,CAACpE,QAAQ,CAAE;UAC5Di9E,MAAM,GAAGxB,KAAK,CAACp/E,OAAO,CAAE+H,OAAO,CAACxsB,IAAI,CAAE;UACtCsqG,gBAAgB,GAAGpF,iBAAiB,CAAE14E,OAAO,CAAC7D,cAAc,EAAEy8E,QAAQ,EAAEC,MAAM,EAAE74E,OAAO,CAACpE,QAAQ,CAAE;QAEnG,IAAMoiF,aAAa,GAAK55C,QAAQ,IAAIpkC,OAAO,CAAC6iE,cAAc,KAAK,IAAM;QACrE,IAAMob,cAAc,GAAKX,gBAAgB,CAAC1B,SAAS,KAAK3lG,SAAS,IAAQknG,WAAW,KAAK,IAAM;QAC/F,IAAIe,MAAM,GAAGnE,YAAY,CAAE/5E,OAAO,EAAEpH,KAAK,EAAE4/E,YAAY,CAAE;QAEzDkE,oBAAoB,CAAEtF,GAAG,CAAC9E,gBAAgB,EAAEtyE,OAAO,EAAEw4E,YAAY,CAAE;QAEnE,IAAIv8E,OAAO;QAEX,IAAKyiF,YAAY,EAAG;UAEnB,IAAKV,aAAa,IAAIC,cAAc,EAAG;YAEtC5oG,KAAK,CAACmhG,YAAY,CAAEY,GAAG,CAAC9E,gBAAgB,EAAE4L,MAAM,EAAEJ,gBAAgB,EAAEllF,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;UAEhG;UAEA,KAAM,IAAI1hB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;YAE9BykB,OAAO,GAAG0iF,SAAS,CAAEnnG,IAAC,CAAE,CAACykB,OAAO;YAEhC,KAAM,IAAImS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnS,OAAO,CAAC1kB,MAAM,EAAE62B,CAAC,EAAG,EAAG;cAE3C,IAAM2vE,MAAM,GAAG9hF,OAAO,CAAEmS,CAAC,CAAE;cAE3B,IAAKpO,OAAO,CAACvE,MAAM,KAAKha,UAAU,EAAG;gBAEpC,IAAKm3F,QAAQ,KAAK,IAAI,EAAG;kBAExB,IAAKoF,aAAa,EAAG;oBAEpB3oG,KAAK,CAACihG,uBAAuB,CAAEc,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE42B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE2vE,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAE0/E,QAAQ,EAAEmF,MAAM,CAAClkF,IAAI,CAAE;kBAElI,CAAC,MAAM;oBAENxkB,KAAK,CAAC4gG,oBAAoB,CAAEmB,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE42B,CAAC,EAAE0vE,gBAAgB,EAAEC,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAE,CAAC,EAAE6kF,MAAM,CAAClkF,IAAI,CAAE;kBAEpI;gBAED,CAAC,MAAM;kBAEN3e,OAAO,CAACC,IAAI,CAAE,iGAAiG,CAAE;gBAElH;cAED,CAAC,MAAM;gBAEN,IAAK6iG,aAAa,EAAG;kBAEpB3oG,KAAK,CAAC+gG,aAAa,CAAEgB,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE42B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE2vE,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAE0/E,QAAQ,EAAEC,MAAM,EAAEkF,MAAM,CAAClkF,IAAI,CAAE;gBAEhI,CAAC,MAAM;kBAENxkB,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE42B,CAAC,EAAE0vE,gBAAgB,EAAEC,MAAM,CAAC9kF,KAAK,EAAE8kF,MAAM,CAAC7kF,MAAM,EAAE,CAAC,EAAE0/E,QAAQ,EAAEC,MAAM,EAAEkF,MAAM,CAAClkF,IAAI,CAAE;gBAE5I;cAED;YAED;UAED;QAED,CAAC,MAAM;UAENoC,OAAO,GAAG+D,OAAO,CAAC/D,OAAO;UAEzB,IAAK+hF,aAAa,IAAIC,cAAc,EAAG;YAEtC;YACA;YACA;;YAEA,IAAKhiF,OAAO,CAAC1kB,MAAM,GAAG,CAAC,EAAG2mG,MAAM,EAAG;YAEnC7oG,KAAK,CAACmhG,YAAY,CAAEY,GAAG,CAAC9E,gBAAgB,EAAE4L,MAAM,EAAEJ,gBAAgB,EAAEa,SAAS,CAAE,CAAC,CAAE,CAAC1lF,KAAK,EAAE0lF,SAAS,CAAE,CAAC,CAAE,CAACzlF,MAAM,CAAE;UAElH;UAEA,KAAM,IAAI1hB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;YAE9B,IAAKijB,aAAa,EAAG;cAEpB,IAAKujF,aAAa,EAAG;gBAEpB3oG,KAAK,CAAC+gG,aAAa,CAAEgB,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEmnG,SAAS,CAAEnnG,IAAC,CAAE,CAACyhB,KAAK,EAAE0lF,SAAS,CAAEnnG,IAAC,CAAE,CAAC0hB,MAAM,EAAE0/E,QAAQ,EAAEC,MAAM,EAAE8F,SAAS,CAAEnnG,IAAC,CAAE,CAACqiB,IAAI,CAAE;cAExJ,CAAC,MAAM;gBAENxkB,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE,CAAC,EAAEsmG,gBAAgB,EAAEa,SAAS,CAAEnnG,IAAC,CAAE,CAACyhB,KAAK,EAAE0lF,SAAS,CAAEnnG,IAAC,CAAE,CAAC0hB,MAAM,EAAE,CAAC,EAAE0/E,QAAQ,EAAEC,MAAM,EAAE8F,SAAS,CAAEnnG,IAAC,CAAE,CAACqiB,IAAI,CAAE;cAEpK;cAEA,KAAM,IAAIuU,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGnS,OAAO,CAAC1kB,MAAM,EAAE62B,GAAC,EAAG,EAAG;gBAE3C,IAAM2vE,OAAM,GAAG9hF,OAAO,CAAEmS,GAAC,CAAE;gBAC3B,IAAMwwE,WAAW,GAAGb,OAAM,CAACnlF,KAAK,CAAEphB,IAAC,CAAE,CAACohB,KAAK;gBAE3C,IAAKolF,aAAa,EAAG;kBAEpB3oG,KAAK,CAAC+gG,aAAa,CAAEgB,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE42B,GAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEwwE,WAAW,CAAC3lF,KAAK,EAAE2lF,WAAW,CAAC1lF,MAAM,EAAE0/E,QAAQ,EAAEC,MAAM,EAAE+F,WAAW,CAAC/kF,IAAI,CAAE;gBAEnJ,CAAC,MAAM;kBAENxkB,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE42B,GAAC,GAAG,CAAC,EAAE0vE,gBAAgB,EAAEc,WAAW,CAAC3lF,KAAK,EAAE2lF,WAAW,CAAC1lF,MAAM,EAAE,CAAC,EAAE0/E,QAAQ,EAAEC,MAAM,EAAE+F,WAAW,CAAC/kF,IAAI,CAAE;gBAE/J;cAED;YAED,CAAC,MAAM;cAEN,IAAKmkF,aAAa,EAAG;gBAEpB3oG,KAAK,CAAC+gG,aAAa,CAAEgB,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEohG,QAAQ,EAAEC,MAAM,EAAE8F,SAAS,CAAEnnG,IAAC,CAAE,CAAE;cAEtG,CAAC,MAAM;gBAENnC,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE,CAAC,EAAEsmG,gBAAgB,EAAElF,QAAQ,EAAEC,MAAM,EAAE8F,SAAS,CAAEnnG,IAAC,CAAE,CAAE;cAE/G;cAEA,KAAM,IAAI42B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGnS,OAAO,CAAC1kB,MAAM,EAAE62B,GAAC,EAAG,EAAG;gBAE3C,IAAM2vE,QAAM,GAAG9hF,OAAO,CAAEmS,GAAC,CAAE;gBAE3B,IAAK4vE,aAAa,EAAG;kBAEpB3oG,KAAK,CAAC+gG,aAAa,CAAEgB,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE42B,GAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEwqE,QAAQ,EAAEC,MAAM,EAAEkF,QAAM,CAACnlF,KAAK,CAAEphB,IAAC,CAAE,CAAE;gBAE7G,CAAC,MAAM;kBAENnC,KAAK,CAAC68F,UAAU,CAAEkF,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,EAAE42B,GAAC,GAAG,CAAC,EAAE0vE,gBAAgB,EAAElF,QAAQ,EAAEC,MAAM,EAAEkF,QAAM,CAACnlF,KAAK,CAAEphB,IAAC,CAAE,CAAE;gBAEtH;cAED;YAED;UAED;QAED;QAEA,IAAK+gG,2BAA2B,CAAEv4E,OAAO,EAAEw4E,YAAY,CAAE,EAAG;UAE3D;UACAC,cAAc,CAAErB,GAAG,CAAC9E,gBAAgB,CAAE;QAEvC;QAEAgL,gBAAgB,CAAC1B,SAAS,GAAG5/E,MAAM,CAAChC,OAAO;QAE3C,IAAKgG,OAAO,CAACrD,QAAQ,EAAGqD,OAAO,CAACrD,QAAQ,CAAEqD,OAAO,CAAE;MAEpD;MAEAu6E,iBAAiB,CAACqB,SAAS,GAAG57E,OAAO,CAAChG,OAAO;IAE9C;;IAEA;;IAEA;IACA,SAAS6kF,uBAAuBA,CAAEjM,WAAW,EAAEt0C,YAAY,EAAEt+B,OAAO,EAAE8+E,UAAU,EAAEC,aAAa,EAAG;MAEjG,IAAMnG,QAAQ,GAAGvB,KAAK,CAACp/E,OAAO,CAAE+H,OAAO,CAACvE,MAAM,EAAEuE,OAAO,CAACpE,QAAQ,CAAE;MAClE,IAAMi9E,MAAM,GAAGxB,KAAK,CAACp/E,OAAO,CAAE+H,OAAO,CAACxsB,IAAI,CAAE;MAC5C,IAAMsqG,gBAAgB,GAAGpF,iBAAiB,CAAE14E,OAAO,CAAC7D,cAAc,EAAEy8E,QAAQ,EAAEC,MAAM,EAAE74E,OAAO,CAACpE,QAAQ,CAAE;MACxG,IAAMi/E,sBAAsB,GAAG5nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE;MAE7D,IAAK,CAAEu8C,sBAAsB,CAACmE,qBAAqB,EAAG;QAErD,IAAKD,aAAa,KAAK3H,GAAG,CAAC2E,UAAU,IAAIgD,aAAa,KAAK3H,GAAG,CAAC0E,gBAAgB,EAAG;UAEjFzmG,KAAK,CAACqhG,UAAU,CAAEqI,aAAa,EAAE,CAAC,EAAEjB,gBAAgB,EAAEx/C,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,EAAEolC,YAAY,CAAC1+B,KAAK,EAAE,CAAC,EAAEg5E,QAAQ,EAAEC,MAAM,EAAE,IAAI,CAAE;QAE/I,CAAC,MAAM;UAENxjG,KAAK,CAAC68F,UAAU,CAAE6M,aAAa,EAAE,CAAC,EAAEjB,gBAAgB,EAAEx/C,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,EAAE,CAAC,EAAE0/E,QAAQ,EAAEC,MAAM,EAAE,IAAI,CAAE;QAE3H;MAED;MAEAxjG,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAEF,WAAW,CAAE;MAErD,IAAKqM,kBAAkB,CAAE3gD,YAAY,CAAE,EAAG;QAEzCk5C,kBAAkB,CAAC0H,kCAAkC,CAAE9H,GAAG,CAACtE,WAAW,EAAEgM,UAAU,EAAEC,aAAa,EAAE9rC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE,CAAC46E,cAAc,EAAE,CAAC,EAAEuE,sBAAsB,CAAE7gD,YAAY,CAAE,CAAE;MAEzL,CAAC,MAAM,IAAKygD,aAAa,KAAK3H,GAAG,CAAC/E,UAAU,IAAM0M,aAAa,IAAI3H,GAAG,CAAC7E,2BAA2B,IAAIwM,aAAa,IAAI3H,GAAG,CAACgI,2BAA6B,EAAG;QAAE;;QAE5JhI,GAAG,CAACiI,oBAAoB,CAAEjI,GAAG,CAACtE,WAAW,EAAEgM,UAAU,EAAEC,aAAa,EAAE9rC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE,CAAC46E,cAAc,EAAE,CAAC,CAAE;MAEpH;MAEAvlG,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE,IAAI,CAAE;IAE/C;;IAGA;IACA,SAASwM,wBAAwBA,CAAEC,YAAY,EAAEjhD,YAAY,EAAEkhD,aAAa,EAAG;MAE9EpI,GAAG,CAACqI,gBAAgB,CAAErI,GAAG,CAACsI,YAAY,EAAEH,YAAY,CAAE;MAEtD,IAAKjhD,YAAY,CAACr+B,WAAW,IAAI,CAAEq+B,YAAY,CAACp+B,aAAa,EAAG;QAE/D,IAAI49E,gBAAgB,GAAG1G,GAAG,CAACoH,iBAAiB;QAE5C,IAAKgB,aAAa,IAAIP,kBAAkB,CAAE3gD,YAAY,CAAE,EAAG;UAE1D,IAAMn+B,YAAY,GAAGm+B,YAAY,CAACn+B,YAAY;UAE9C,IAAKA,YAAY,IAAIA,YAAY,CAACg+E,cAAc,EAAG;YAElD,IAAKh+E,YAAY,CAAC3sB,IAAI,KAAK2N,SAAS,EAAG;cAEtC28F,gBAAgB,GAAG1G,GAAG,CAACiH,kBAAkB;YAE1C,CAAC,MAAM,IAAKl+E,YAAY,CAAC3sB,IAAI,KAAK0N,eAAe,EAAG;cAEnD48F,gBAAgB,GAAG1G,GAAG,CAACkH,iBAAiB;YAEzC;UAED;UAEA,IAAMl+E,OAAO,GAAG++E,sBAAsB,CAAE7gD,YAAY,CAAE;UAEtD,IAAK2gD,kBAAkB,CAAE3gD,YAAY,CAAE,EAAG;YAEzCk5C,kBAAkB,CAACmI,iCAAiC,CAAEvI,GAAG,CAACsI,YAAY,EAAEt/E,OAAO,EAAE09E,gBAAgB,EAAEx/C,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,CAAE;UAE7I,CAAC,MAAM;YAENk+E,GAAG,CAACwI,8BAA8B,CAAExI,GAAG,CAACsI,YAAY,EAAEt/E,OAAO,EAAE09E,gBAAgB,EAAEx/C,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,CAAE;UAE3H;QAED,CAAC,MAAM;UAENk+E,GAAG,CAACyI,mBAAmB,CAAEzI,GAAG,CAACsI,YAAY,EAAE5B,gBAAgB,EAAEx/C,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,CAAE;QAEvG;QAEAk+E,GAAG,CAAC0I,uBAAuB,CAAE1I,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAAC2I,gBAAgB,EAAE3I,GAAG,CAACsI,YAAY,EAAEH,YAAY,CAAE;MAErG,CAAC,MAAM,IAAKjhD,YAAY,CAACr+B,WAAW,IAAIq+B,YAAY,CAACp+B,aAAa,EAAG;QAEpE,IAAME,QAAO,GAAG++E,sBAAsB,CAAE7gD,YAAY,CAAE;QAEtD,IAAKkhD,aAAa,IAAIP,kBAAkB,CAAE3gD,YAAY,CAAE,KAAK,KAAK,EAAG;UAEpE84C,GAAG,CAACwI,8BAA8B,CAAExI,GAAG,CAACsI,YAAY,EAAEt/E,QAAO,EAAEg3E,GAAG,CAACmH,gBAAgB,EAAEjgD,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,CAAE;QAE/H,CAAC,MAAM,IAAK+lF,kBAAkB,CAAE3gD,YAAY,CAAE,EAAG;UAEhDk5C,kBAAkB,CAACmI,iCAAiC,CAAEvI,GAAG,CAACsI,YAAY,EAAEt/E,QAAO,EAAEg3E,GAAG,CAACmH,gBAAgB,EAAEjgD,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,CAAE;QAEjJ,CAAC,MAAM;UAENk+E,GAAG,CAACyI,mBAAmB,CAAEzI,GAAG,CAACsI,YAAY,EAAEtI,GAAG,CAACqH,aAAa,EAAEngD,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,CAAE;QAExG;QAGAk+E,GAAG,CAAC0I,uBAAuB,CAAE1I,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAAC4I,wBAAwB,EAAE5I,GAAG,CAACsI,YAAY,EAAEH,YAAY,CAAE;MAE7G,CAAC,MAAM;QAEN,IAAMpiF,QAAQ,GAAGmhC,YAAY,CAACr8B,4BAA4B,KAAK,IAAI,GAAGq8B,YAAY,CAACt+B,OAAO,GAAG,CAAEs+B,YAAY,CAACt+B,OAAO,CAAE;QAErH,KAAM,IAAIxoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2lB,QAAQ,CAAC5lB,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE5C,IAAMwoB,OAAO,GAAG7C,QAAQ,CAAE3lB,CAAC,CAAE;UAE7B,IAAMohG,QAAQ,GAAGvB,KAAK,CAACp/E,OAAO,CAAE+H,OAAO,CAACvE,MAAM,EAAEuE,OAAO,CAACpE,QAAQ,CAAE;UAClE,IAAMi9E,MAAM,GAAGxB,KAAK,CAACp/E,OAAO,CAAE+H,OAAO,CAACxsB,IAAI,CAAE;UAC5C,IAAMsqG,iBAAgB,GAAGpF,iBAAiB,CAAE14E,OAAO,CAAC7D,cAAc,EAAEy8E,QAAQ,EAAEC,MAAM,EAAE74E,OAAO,CAACpE,QAAQ,CAAE;UACxG,IAAMwE,SAAO,GAAG++E,sBAAsB,CAAE7gD,YAAY,CAAE;UAEtD,IAAKkhD,aAAa,IAAIP,kBAAkB,CAAE3gD,YAAY,CAAE,KAAK,KAAK,EAAG;YAEpE84C,GAAG,CAACwI,8BAA8B,CAAExI,GAAG,CAACsI,YAAY,EAAEt/E,SAAO,EAAE09E,iBAAgB,EAAEx/C,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,CAAE;UAE3H,CAAC,MAAM,IAAK+lF,kBAAkB,CAAE3gD,YAAY,CAAE,EAAG;YAEhDk5C,kBAAkB,CAACmI,iCAAiC,CAAEvI,GAAG,CAACsI,YAAY,EAAEt/E,SAAO,EAAE09E,iBAAgB,EAAEx/C,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,CAAE;UAE7I,CAAC,MAAM;YAENk+E,GAAG,CAACyI,mBAAmB,CAAEzI,GAAG,CAACsI,YAAY,EAAE5B,iBAAgB,EAAEx/C,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,CAAE;UAEvG;QAED;MAED;MAEAk+E,GAAG,CAACqI,gBAAgB,CAAErI,GAAG,CAACsI,YAAY,EAAE,IAAI,CAAE;IAE/C;;IAEA;IACA,SAASO,iBAAiBA,CAAErN,WAAW,EAAEt0C,YAAY,EAAG;MAEvD,IAAM4hD,MAAM,GAAK5hD,YAAY,IAAIA,YAAY,CAAC2B,uBAAyB;MACvE,IAAKigD,MAAM,EAAG,MAAM,IAAI5qG,KAAK,CAAE,yDAAyD,CAAE;MAE1FD,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAEF,WAAW,CAAE;MAErD,IAAK,EAAIt0C,YAAY,CAACn+B,YAAY,IAAIm+B,YAAY,CAACn+B,YAAY,CAACg+E,cAAc,CAAE,EAAG;QAElF,MAAM,IAAI7oG,KAAK,CAAE,qEAAqE,CAAE;MAEzF;;MAEA;MACA,IAAK,CAAE29D,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAACn+B,YAAY,CAAE,CAACy6E,cAAc,IAC/Dt8C,YAAY,CAACn+B,YAAY,CAACvH,KAAK,CAACK,KAAK,KAAKqlC,YAAY,CAACrlC,KAAK,IAC5DqlC,YAAY,CAACn+B,YAAY,CAACvH,KAAK,CAACM,MAAM,KAAKolC,YAAY,CAACplC,MAAM,EAAG;QAElEolC,YAAY,CAACn+B,YAAY,CAACvH,KAAK,CAACK,KAAK,GAAGqlC,YAAY,CAACrlC,KAAK;QAC1DqlC,YAAY,CAACn+B,YAAY,CAACvH,KAAK,CAACM,MAAM,GAAGolC,YAAY,CAACplC,MAAM;QAC5DolC,YAAY,CAACn+B,YAAY,CAACjD,WAAW,GAAG,IAAI;MAE7C;MAEAwyD,YAAY,CAAEpxB,YAAY,CAACn+B,YAAY,EAAE,CAAC,CAAE;MAE5C,IAAMggF,iBAAiB,GAAGltC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAACn+B,YAAY,CAAE,CAACy6E,cAAc;MACpF,IAAMx6E,OAAO,GAAG++E,sBAAsB,CAAE7gD,YAAY,CAAE;MAEtD,IAAKA,YAAY,CAACn+B,YAAY,CAAC1E,MAAM,KAAK7Z,WAAW,EAAG;QAEvD,IAAKq9F,kBAAkB,CAAE3gD,YAAY,CAAE,EAAG;UAEzCk5C,kBAAkB,CAAC0H,kCAAkC,CAAE9H,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAAC2I,gBAAgB,EAAE3I,GAAG,CAAC/E,UAAU,EAAE8N,iBAAiB,EAAE,CAAC,EAAE//E,OAAO,CAAE;QAE9I,CAAC,MAAM;UAENg3E,GAAG,CAACiI,oBAAoB,CAAEjI,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAAC2I,gBAAgB,EAAE3I,GAAG,CAAC/E,UAAU,EAAE8N,iBAAiB,EAAE,CAAC,CAAE;QAExG;MAED,CAAC,MAAM,IAAK7hD,YAAY,CAACn+B,YAAY,CAAC1E,MAAM,KAAK5Z,kBAAkB,EAAG;QAErE,IAAKo9F,kBAAkB,CAAE3gD,YAAY,CAAE,EAAG;UAEzCk5C,kBAAkB,CAAC0H,kCAAkC,CAAE9H,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAAC4I,wBAAwB,EAAE5I,GAAG,CAAC/E,UAAU,EAAE8N,iBAAiB,EAAE,CAAC,EAAE//E,OAAO,CAAE;QAEtJ,CAAC,MAAM;UAENg3E,GAAG,CAACiI,oBAAoB,CAAEjI,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAAC4I,wBAAwB,EAAE5I,GAAG,CAAC/E,UAAU,EAAE8N,iBAAiB,EAAE,CAAC,CAAE;QAEhH;MAED,CAAC,MAAM;QAEN,MAAM,IAAI7qG,KAAK,CAAE,6BAA6B,CAAE;MAEjD;IAED;;IAEA;IACA,SAAS8qG,sBAAsBA,CAAE9hD,YAAY,EAAG;MAE/C,IAAMu8C,sBAAsB,GAAG5nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE;MAC7D,IAAM4hD,MAAM,GAAK5hD,YAAY,CAAC2B,uBAAuB,KAAK,IAAM;MAEhE,IAAK3B,YAAY,CAACn+B,YAAY,IAAI,CAAE06E,sBAAsB,CAACwF,yBAAyB,EAAG;QAEtF,IAAKH,MAAM,EAAG,MAAM,IAAI5qG,KAAK,CAAE,0DAA0D,CAAE;QAE3F2qG,iBAAiB,CAAEpF,sBAAsB,CAACE,kBAAkB,EAAEz8C,YAAY,CAAE;MAE7E,CAAC,MAAM;QAEN,IAAK4hD,MAAM,EAAG;UAEbrF,sBAAsB,CAACG,kBAAkB,GAAG,EAAE;UAE9C,KAAM,IAAIxjG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;YAE9BnC,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE+H,sBAAsB,CAACE,kBAAkB,CAAEvjG,CAAC,CAAE,CAAE;YACxFqjG,sBAAsB,CAACG,kBAAkB,CAAExjG,CAAC,CAAE,GAAG4/F,GAAG,CAACkJ,kBAAkB,EAAE;YACzEhB,wBAAwB,CAAEzE,sBAAsB,CAACG,kBAAkB,CAAExjG,CAAC,CAAE,EAAE8mD,YAAY,EAAE,KAAK,CAAE;UAEhG;QAED,CAAC,MAAM;UAENjpD,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE+H,sBAAsB,CAACE,kBAAkB,CAAE;UACnFF,sBAAsB,CAACG,kBAAkB,GAAG5D,GAAG,CAACkJ,kBAAkB,EAAE;UACpEhB,wBAAwB,CAAEzE,sBAAsB,CAACG,kBAAkB,EAAE18C,YAAY,EAAE,KAAK,CAAE;QAE3F;MAED;MAEAjpD,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE,IAAI,CAAE;IAE/C;;IAEA;IACA,SAASyN,cAAcA,CAAEjiD,YAAY,EAAEkiD,YAAY,EAAErgF,YAAY,EAAG;MAEnE,IAAM06E,sBAAsB,GAAG5nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE;MAE7D,IAAKkiD,YAAY,KAAKvqG,SAAS,EAAG;QAEjC4oG,uBAAuB,CAAEhE,sBAAsB,CAACE,kBAAkB,EAAEz8C,YAAY,EAAEA,YAAY,CAACt+B,OAAO,EAAEo3E,GAAG,CAACrE,iBAAiB,EAAEqE,GAAG,CAAC/E,UAAU,CAAE;MAEhJ;MAEA,IAAKlyE,YAAY,KAAKlqB,SAAS,EAAG;QAEjCmqG,sBAAsB,CAAE9hD,YAAY,CAAE;MAEvC;IAED;;IAEA;IACA,SAASmiD,iBAAiBA,CAAEniD,YAAY,EAAG;MAE1C,IAAMt+B,OAAO,GAAGs+B,YAAY,CAACt+B,OAAO;MAEpC,IAAM66E,sBAAsB,GAAG5nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE;MAC7D,IAAMi8C,iBAAiB,GAAGtnC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE;MAEnDs+B,YAAY,CAACh3C,gBAAgB,CAAE,SAAS,EAAE+yF,qBAAqB,CAAE;MAEjE,IAAK/7C,YAAY,CAACr8B,4BAA4B,KAAK,IAAI,EAAG;QAEzD,IAAKs4E,iBAAiB,CAACK,cAAc,KAAK3kG,SAAS,EAAG;UAErDskG,iBAAiB,CAACK,cAAc,GAAGxD,GAAG,CAACxF,aAAa,EAAE;QAEvD;QAEA2I,iBAAiB,CAACqB,SAAS,GAAG57E,OAAO,CAAChG,OAAO;QAC7C5jB,IAAI,CAACsyE,MAAM,CAACvrD,QAAQ,EAAG;MAExB;MAEA,IAAM+iF,MAAM,GAAK5hD,YAAY,CAAC2B,uBAAuB,KAAK,IAAM;MAChE,IAAMygD,uBAAuB,GAAKpiD,YAAY,CAACr8B,4BAA4B,KAAK,IAAM;MACtF,IAAMu2E,YAAY,GAAGH,cAAc,CAAE/5C,YAAY,CAAE,IAAI8F,QAAQ;;MAE/D;;MAEA,IAAK87C,MAAM,EAAG;QAEbrF,sBAAsB,CAACE,kBAAkB,GAAG,EAAE;QAE9C,KAAM,IAAIvjG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9BqjG,sBAAsB,CAACE,kBAAkB,CAAEvjG,CAAC,CAAE,GAAG4/F,GAAG,CAACuJ,iBAAiB,EAAE;QAEzE;MAED,CAAC,MAAM;QAEN9F,sBAAsB,CAACE,kBAAkB,GAAG3D,GAAG,CAACuJ,iBAAiB,EAAE;QAEnE,IAAKD,uBAAuB,EAAG;UAE9B,IAAKv8C,YAAY,CAACxI,WAAW,EAAG;YAE/B,IAAMx+B,QAAQ,GAAGmhC,YAAY,CAACt+B,OAAO;YAErC,KAAM,IAAIxoB,IAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG/E,QAAQ,CAAC5lB,MAAM,EAAEC,IAAC,GAAG0qB,EAAE,EAAE1qB,IAAC,EAAG,EAAG;cAErD,IAAM6jG,oBAAoB,GAAGpoC,UAAU,CAACrlD,GAAG,CAAEuP,QAAQ,CAAE3lB,IAAC,CAAE,CAAE;cAE5D,IAAK6jG,oBAAoB,CAACT,cAAc,KAAK3kG,SAAS,EAAG;gBAExDolG,oBAAoB,CAACT,cAAc,GAAGxD,GAAG,CAACxF,aAAa,EAAE;gBAEzDx7F,IAAI,CAACsyE,MAAM,CAACvrD,QAAQ,EAAG;cAExB;YAED;UAED,CAAC,MAAM;YAENjiB,OAAO,CAACC,IAAI,CAAE,+GAA+G,CAAE;UAEhI;QAED;QAEA,IAAOipD,QAAQ,IAAI9F,YAAY,CAACl+B,OAAO,GAAG,CAAC,IAAM6+E,kBAAkB,CAAE3gD,YAAY,CAAE,KAAK,KAAK,EAAG;UAE/F,IAAMnhC,SAAQ,GAAGujF,uBAAuB,GAAG1gF,OAAO,GAAG,CAAEA,OAAO,CAAE;UAEhE66E,sBAAsB,CAACK,8BAA8B,GAAG9D,GAAG,CAACuJ,iBAAiB,EAAE;UAC/E9F,sBAAsB,CAACM,wBAAwB,GAAG,EAAE;UAEpD9lG,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE+H,sBAAsB,CAACK,8BAA8B,CAAE;UAE/F,KAAM,IAAI1jG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG2lB,SAAQ,CAAC5lB,MAAM,EAAEC,IAAC,EAAG,EAAG;YAE5C,IAAMwoB,QAAO,GAAG7C,SAAQ,CAAE3lB,IAAC,CAAE;YAC7BqjG,sBAAsB,CAACM,wBAAwB,CAAE3jG,IAAC,CAAE,GAAG4/F,GAAG,CAACkJ,kBAAkB,EAAE;YAE/ElJ,GAAG,CAACqI,gBAAgB,CAAErI,GAAG,CAACsI,YAAY,EAAE7E,sBAAsB,CAACM,wBAAwB,CAAE3jG,IAAC,CAAE,CAAE;YAE9F,IAAMohG,QAAQ,GAAGvB,KAAK,CAACp/E,OAAO,CAAE+H,QAAO,CAACvE,MAAM,EAAEuE,QAAO,CAACpE,QAAQ,CAAE;YAClE,IAAMi9E,MAAM,GAAGxB,KAAK,CAACp/E,OAAO,CAAE+H,QAAO,CAACxsB,IAAI,CAAE;YAC5C,IAAMsqG,gBAAgB,GAAGpF,iBAAiB,CAAE14E,QAAO,CAAC7D,cAAc,EAAEy8E,QAAQ,EAAEC,MAAM,EAAE74E,QAAO,CAACpE,QAAQ,EAAE0iC,YAAY,CAACskC,gBAAgB,KAAK,IAAI,CAAE;YAChJ,IAAMxiE,OAAO,GAAG++E,sBAAsB,CAAE7gD,YAAY,CAAE;YACtD84C,GAAG,CAACwI,8BAA8B,CAAExI,GAAG,CAACsI,YAAY,EAAEt/E,OAAO,EAAE09E,gBAAgB,EAAEx/C,YAAY,CAACrlC,KAAK,EAAEqlC,YAAY,CAACplC,MAAM,CAAE;YAE1Hk+E,GAAG,CAAC0I,uBAAuB,CAAE1I,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAACrE,iBAAiB,GAAGv7F,IAAC,EAAE4/F,GAAG,CAACsI,YAAY,EAAE7E,sBAAsB,CAACM,wBAAwB,CAAE3jG,IAAC,CAAE,CAAE;UAElJ;UAEA4/F,GAAG,CAACqI,gBAAgB,CAAErI,GAAG,CAACsI,YAAY,EAAE,IAAI,CAAE;UAE9C,IAAKphD,YAAY,CAACr+B,WAAW,EAAG;YAE/B46E,sBAAsB,CAACO,wBAAwB,GAAGhE,GAAG,CAACkJ,kBAAkB,EAAE;YAC1EhB,wBAAwB,CAAEzE,sBAAsB,CAACO,wBAAwB,EAAE98C,YAAY,EAAE,IAAI,CAAE;UAEhG;UAEAjpD,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE,IAAI,CAAE;QAE/C;MAED;;MAEA;;MAEA,IAAKoN,MAAM,EAAG;QAEb7qG,KAAK,CAACw8F,WAAW,CAAEuF,GAAG,CAAC9E,gBAAgB,EAAEiI,iBAAiB,CAACK,cAAc,CAAE;QAC3E8B,oBAAoB,CAAEtF,GAAG,CAAC9E,gBAAgB,EAAEtyE,OAAO,EAAEw4E,YAAY,CAAE;QAEnE,KAAM,IAAIhhG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;UAE9BqnG,uBAAuB,CAAEhE,sBAAsB,CAACE,kBAAkB,CAAEvjG,IAAC,CAAE,EAAE8mD,YAAY,EAAEt+B,OAAO,EAAEo3E,GAAG,CAACrE,iBAAiB,EAAEqE,GAAG,CAAC7E,2BAA2B,GAAG/6F,IAAC,CAAE;QAE7J;QAEA,IAAK+gG,2BAA2B,CAAEv4E,OAAO,EAAEw4E,YAAY,CAAE,EAAG;UAE3DC,cAAc,CAAErB,GAAG,CAAC9E,gBAAgB,CAAE;QAEvC;QAEAj9F,KAAK,CAAC2gG,aAAa,EAAE;MAEtB,CAAC,MAAM,IAAK0K,uBAAuB,EAAG;QAErC,IAAMvjF,UAAQ,GAAGmhC,YAAY,CAACt+B,OAAO;QAErC,KAAM,IAAIxoB,IAAC,GAAG,CAAC,EAAE0qB,KAAE,GAAG/E,UAAQ,CAAC5lB,MAAM,EAAEC,IAAC,GAAG0qB,KAAE,EAAE1qB,IAAC,EAAG,EAAG;UAErD,IAAMsnG,UAAU,GAAG3hF,UAAQ,CAAE3lB,IAAC,CAAE;UAChC,IAAM6jG,qBAAoB,GAAGpoC,UAAU,CAACrlD,GAAG,CAAEkxF,UAAU,CAAE;UAEzDzpG,KAAK,CAACw8F,WAAW,CAAEuF,GAAG,CAAC/E,UAAU,EAAEgJ,qBAAoB,CAACT,cAAc,CAAE;UACxE8B,oBAAoB,CAAEtF,GAAG,CAAC/E,UAAU,EAAEyM,UAAU,EAAEtG,YAAY,CAAE;UAChEqG,uBAAuB,CAAEhE,sBAAsB,CAACE,kBAAkB,EAAEz8C,YAAY,EAAEwgD,UAAU,EAAE1H,GAAG,CAACrE,iBAAiB,GAAGv7F,IAAC,EAAE4/F,GAAG,CAAC/E,UAAU,CAAE;UAEzI,IAAKkG,2BAA2B,CAAEuG,UAAU,EAAEtG,YAAY,CAAE,EAAG;YAE9DC,cAAc,CAAErB,GAAG,CAAC/E,UAAU,CAAE;UAEjC;QAED;QAEAh9F,KAAK,CAAC2gG,aAAa,EAAE;MAEtB,CAAC,MAAM;QAEN,IAAI4K,aAAa,GAAGxJ,GAAG,CAAC/E,UAAU;QAElC,IAAK/zC,YAAY,CAAC38B,qBAAqB,IAAI28B,YAAY,CAACr9B,wBAAwB,EAAG;UAElF,IAAKmjC,QAAQ,EAAG;YAEfw8C,aAAa,GAAGtiD,YAAY,CAAC38B,qBAAqB,GAAGy1E,GAAG,CAAC2E,UAAU,GAAG3E,GAAG,CAAC0E,gBAAgB;UAE3F,CAAC,MAAM;YAEN5gG,OAAO,CAAChG,KAAK,CAAE,iGAAiG,CAAE;UAEnH;QAED;QAEAG,KAAK,CAACw8F,WAAW,CAAE+O,aAAa,EAAErG,iBAAiB,CAACK,cAAc,CAAE;QACpE8B,oBAAoB,CAAEkE,aAAa,EAAE5gF,OAAO,EAAEw4E,YAAY,CAAE;QAC5DqG,uBAAuB,CAAEhE,sBAAsB,CAACE,kBAAkB,EAAEz8C,YAAY,EAAEt+B,OAAO,EAAEo3E,GAAG,CAACrE,iBAAiB,EAAE6N,aAAa,CAAE;QAEjI,IAAKrI,2BAA2B,CAAEv4E,OAAO,EAAEw4E,YAAY,CAAE,EAAG;UAE3DC,cAAc,CAAEmI,aAAa,CAAE;QAEhC;QAEAvrG,KAAK,CAAC2gG,aAAa,EAAE;MAEtB;;MAEA;;MAEA,IAAK13C,YAAY,CAACr+B,WAAW,EAAG;QAE/BmgF,sBAAsB,CAAE9hD,YAAY,CAAE;MAEvC;IAED;IAEA,SAASuiD,wBAAwBA,CAAEviD,YAAY,EAAG;MAEjD,IAAMk6C,YAAY,GAAGH,cAAc,CAAE/5C,YAAY,CAAE,IAAI8F,QAAQ;MAE/D,IAAMjnC,QAAQ,GAAGmhC,YAAY,CAACr8B,4BAA4B,KAAK,IAAI,GAAGq8B,YAAY,CAACt+B,OAAO,GAAG,CAAEs+B,YAAY,CAACt+B,OAAO,CAAE;MAErH,KAAM,IAAIxoB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG/E,QAAQ,CAAC5lB,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;QAErD,IAAMwoB,OAAO,GAAG7C,QAAQ,CAAE3lB,CAAC,CAAE;QAE7B,IAAK+gG,2BAA2B,CAAEv4E,OAAO,EAAEw4E,YAAY,CAAE,EAAG;UAE3D,IAAMr+F,MAAM,GAAGmkD,YAAY,CAAC2B,uBAAuB,GAAGm3C,GAAG,CAAC9E,gBAAgB,GAAG8E,GAAG,CAAC/E,UAAU;UAC3F,IAAMyD,YAAY,GAAG7iC,UAAU,CAACrlD,GAAG,CAAEoS,OAAO,CAAE,CAAC46E,cAAc;UAE7DvlG,KAAK,CAACw8F,WAAW,CAAE13F,MAAM,EAAE27F,YAAY,CAAE;UACzC2C,cAAc,CAAEt+F,MAAM,CAAE;UACxB9E,KAAK,CAAC2gG,aAAa,EAAE;QAEtB;MAED;IAED;IAEA,SAAS8K,6BAA6BA,CAAExiD,YAAY,EAAG;MAEtD,IAAO8F,QAAQ,IAAI9F,YAAY,CAACl+B,OAAO,GAAG,CAAC,IAAM6+E,kBAAkB,CAAE3gD,YAAY,CAAE,KAAK,KAAK,EAAG;QAE/F,IAAMnhC,QAAQ,GAAGmhC,YAAY,CAACr8B,4BAA4B,GAAGq8B,YAAY,CAACt+B,OAAO,GAAG,CAAEs+B,YAAY,CAACt+B,OAAO,CAAE;QAC5G,IAAM/G,KAAK,GAAGqlC,YAAY,CAACrlC,KAAK;QAChC,IAAMC,MAAM,GAAGolC,YAAY,CAACplC,MAAM;QAClC,IAAIof,IAAI,GAAG8+D,GAAG,CAAC2J,gBAAgB;QAC/B,IAAMC,iBAAiB,GAAG,EAAE;QAC5B,IAAMC,UAAU,GAAG3iD,YAAY,CAACp+B,aAAa,GAAGk3E,GAAG,CAAC4I,wBAAwB,GAAG5I,GAAG,CAAC2I,gBAAgB;QACnG,IAAMlF,sBAAsB,GAAG5nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE;QAC7D,IAAMoiD,uBAAuB,GAAKpiD,YAAY,CAACr8B,4BAA4B,KAAK,IAAM;;QAEtF;QACA,IAAKy+E,uBAAuB,EAAG;UAE9B,KAAM,IAAIlpG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2lB,QAAQ,CAAC5lB,MAAM,EAAEC,CAAC,EAAG,EAAG;YAE5CnC,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE+H,sBAAsB,CAACK,8BAA8B,CAAE;YAC/F9D,GAAG,CAAC0I,uBAAuB,CAAE1I,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAACrE,iBAAiB,GAAGv7F,CAAC,EAAE4/F,GAAG,CAACsI,YAAY,EAAE,IAAI,CAAE;YAEjGrqG,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE+H,sBAAsB,CAACE,kBAAkB,CAAE;YACnF3D,GAAG,CAACiI,oBAAoB,CAAEjI,GAAG,CAACvE,gBAAgB,EAAEuE,GAAG,CAACrE,iBAAiB,GAAGv7F,CAAC,EAAE4/F,GAAG,CAAC/E,UAAU,EAAE,IAAI,EAAE,CAAC,CAAE;UAErG;QAED;QAEAh9F,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACF,gBAAgB,EAAE2D,sBAAsB,CAACK,8BAA8B,CAAE;QACpG7lG,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACvE,gBAAgB,EAAEgI,sBAAsB,CAACE,kBAAkB,CAAE;QAExF,KAAM,IAAIvjG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG2lB,QAAQ,CAAC5lB,MAAM,EAAEC,IAAC,EAAG,EAAG;UAE5CwpG,iBAAiB,CAAChqG,IAAI,CAAEogG,GAAG,CAACrE,iBAAiB,GAAGv7F,IAAC,CAAE;UAEnD,IAAK8mD,YAAY,CAACr+B,WAAW,EAAG;YAE/B+gF,iBAAiB,CAAChqG,IAAI,CAAEiqG,UAAU,CAAE;UAErC;UAEA,IAAMC,iBAAiB,GAAKrG,sBAAsB,CAACsG,mBAAmB,KAAKlrG,SAAS,GAAK4kG,sBAAsB,CAACsG,mBAAmB,GAAG,KAAK;UAE3I,IAAKD,iBAAiB,KAAK,KAAK,EAAG;YAElC,IAAK5iD,YAAY,CAACr+B,WAAW,EAAGqY,IAAI,IAAI8+D,GAAG,CAACgK,gBAAgB;YAC5D,IAAK9iD,YAAY,CAACp+B,aAAa,EAAGoY,IAAI,IAAI8+D,GAAG,CAACiK,kBAAkB;UAEjE;UAEA,IAAKX,uBAAuB,EAAG;YAE9BtJ,GAAG,CAAC0I,uBAAuB,CAAE1I,GAAG,CAACF,gBAAgB,EAAEE,GAAG,CAACrE,iBAAiB,EAAEqE,GAAG,CAACsI,YAAY,EAAE7E,sBAAsB,CAACM,wBAAwB,CAAE3jG,IAAC,CAAE,CAAE;UAEnJ;UAEA,IAAK0pG,iBAAiB,KAAK,IAAI,EAAG;YAEjC9J,GAAG,CAACkK,qBAAqB,CAAElK,GAAG,CAACF,gBAAgB,EAAE,CAAE+J,UAAU,CAAE,CAAE;YACjE7J,GAAG,CAACkK,qBAAqB,CAAElK,GAAG,CAACvE,gBAAgB,EAAE,CAAEoO,UAAU,CAAE,CAAE;UAElE;UAEA,IAAKP,uBAAuB,EAAG;YAE9B,IAAM5K,YAAY,GAAG7iC,UAAU,CAACrlD,GAAG,CAAEuP,QAAQ,CAAE3lB,IAAC,CAAE,CAAE,CAACojG,cAAc;YACnExD,GAAG,CAACiI,oBAAoB,CAAEjI,GAAG,CAACvE,gBAAgB,EAAEuE,GAAG,CAACrE,iBAAiB,EAAEqE,GAAG,CAAC/E,UAAU,EAAEyD,YAAY,EAAE,CAAC,CAAE;UAEzG;UAEAsB,GAAG,CAACmK,eAAe,CAAE,CAAC,EAAE,CAAC,EAAEtoF,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAED,KAAK,EAAEC,MAAM,EAAEof,IAAI,EAAE8+D,GAAG,CAACpF,OAAO,CAAE;UAElF,IAAKyF,6BAA6B,EAAG;YAEpCL,GAAG,CAACkK,qBAAqB,CAAElK,GAAG,CAACF,gBAAgB,EAAE8J,iBAAiB,CAAE;UAErE;QAGD;QAEA3rG,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACF,gBAAgB,EAAE,IAAI,CAAE;QACnD7hG,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACvE,gBAAgB,EAAE,IAAI,CAAE;;QAEnD;QACA,IAAK6N,uBAAuB,EAAG;UAE9B,KAAM,IAAIlpG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG2lB,QAAQ,CAAC5lB,MAAM,EAAEC,IAAC,EAAG,EAAG;YAE5CnC,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE+H,sBAAsB,CAACK,8BAA8B,CAAE;YAC/F9D,GAAG,CAAC0I,uBAAuB,CAAE1I,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAACrE,iBAAiB,GAAGv7F,IAAC,EAAE4/F,GAAG,CAACsI,YAAY,EAAE7E,sBAAsB,CAACM,wBAAwB,CAAE3jG,IAAC,CAAE,CAAE;YAEjJ,IAAMs+F,aAAY,GAAG7iC,UAAU,CAACrlD,GAAG,CAAEuP,QAAQ,CAAE3lB,IAAC,CAAE,CAAE,CAACojG,cAAc;YAEnEvlG,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE+H,sBAAsB,CAACE,kBAAkB,CAAE;YACnF3D,GAAG,CAACiI,oBAAoB,CAAEjI,GAAG,CAACvE,gBAAgB,EAAEuE,GAAG,CAACrE,iBAAiB,GAAGv7F,IAAC,EAAE4/F,GAAG,CAAC/E,UAAU,EAAEyD,aAAY,EAAE,CAAC,CAAE;UAE7G;QAED;QAEAzgG,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACvE,gBAAgB,EAAEgI,sBAAsB,CAACK,8BAA8B,CAAE;MAErG;IAED;IAEA,SAASiE,sBAAsBA,CAAE7gD,YAAY,EAAG;MAE/C,OAAO/1C,IAAI,CAACY,GAAG,CAAEs2D,UAAU,EAAEnhB,YAAY,CAACl+B,OAAO,CAAE;IAEpD;IAEA,SAAS6+E,kBAAkBA,CAAE3gD,YAAY,EAAG;MAE3C,IAAMu8C,sBAAsB,GAAG5nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE;MAE7D,OAAO8F,QAAQ,IAAI9F,YAAY,CAACl+B,OAAO,GAAG,CAAC,IAAIo7B,UAAU,CAACoiB,GAAG,CAAE,sCAAsC,CAAE,KAAK,IAAI,IAAIi9B,sBAAsB,CAAC2G,oBAAoB,KAAK,KAAK;IAE1K;IAEA,SAAS7F,kBAAkBA,CAAE37E,OAAO,EAAG;MAEtC,IAAM4jC,KAAK,GAAGxtD,IAAI,CAACmpD,MAAM,CAACqE,KAAK;;MAE/B;;MAEA,IAAKg0C,cAAc,CAAChqF,GAAG,CAAEoS,OAAO,CAAE,KAAK4jC,KAAK,EAAG;QAE9Cg0C,cAAc,CAAC7qF,GAAG,CAAEiT,OAAO,EAAE4jC,KAAK,CAAE;QACpC5jC,OAAO,CAAC8C,MAAM,EAAE;MAEjB;IAED;IAEA,SAAS+6E,gBAAgBA,CAAE79E,OAAO,EAAEpH,KAAK,EAAG;MAE3C,IAAMgD,QAAQ,GAAGoE,OAAO,CAACpE,QAAQ;MACjC,IAAMH,MAAM,GAAGuE,OAAO,CAACvE,MAAM;MAC7B,IAAMjoB,IAAI,GAAGwsB,OAAO,CAACxsB,IAAI;MAEzB,IAAKwsB,OAAO,CAACi6E,mBAAmB,KAAK,IAAI,IAAIj6E,OAAO,CAAC6iE,cAAc,KAAK,IAAI,IAAI7iE,OAAO,CAACvE,MAAM,KAAKrU,YAAY,EAAG,OAAOwR,KAAK;MAE9H,IAAKgD,QAAQ,KAAK7W,cAAc,EAAG;QAElC;;QAEA,IAAK6W,QAAQ,KAAK5W,YAAY,EAAG;UAEhC,IAAKo/C,QAAQ,KAAK,KAAK,EAAG;YAEzB;;YAEA,IAAK5I,UAAU,CAACoiB,GAAG,CAAE,UAAU,CAAE,KAAK,IAAI,IAAIniD,MAAM,KAAKha,UAAU,EAAG;cAErEue,OAAO,CAACvE,MAAM,GAAGrU,YAAY;;cAE7B;;cAEA4Y,OAAO,CAACxE,SAAS,GAAGhb,YAAY;cAChCwf,OAAO,CAAC1D,eAAe,GAAG,KAAK;YAEhC,CAAC,MAAM;cAEN;;cAEA1D,KAAK,GAAGF,UAAU,CAACc,YAAY,CAAEZ,KAAK,CAAE;YAEzC;UAED,CAAC,MAAM;YAEN;;YAEA,IAAK6C,MAAM,KAAKha,UAAU,IAAIjO,IAAI,KAAKqN,gBAAgB,EAAG;cAEzD3F,OAAO,CAACC,IAAI,CAAE,yFAAyF,CAAE;YAE1G;UAED;QAED,CAAC,MAAM;UAEND,OAAO,CAAChG,KAAK,CAAE,oDAAoD,EAAE0mB,QAAQ,CAAE;QAEhF;MAED;MAEA,OAAOhD,KAAK;IAEb;;IAEA;;IAEA,IAAI,CAACm0D,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACwuB,iBAAiB,GAAGA,iBAAiB;IAE1C,IAAI,CAAC7rB,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACM,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACJ,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACE,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACywB,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACE,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACI,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAACC,6BAA6B,GAAGA,6BAA6B;IAClE,IAAI,CAACV,sBAAsB,GAAGA,sBAAsB;IACpD,IAAI,CAACvB,uBAAuB,GAAGA,uBAAuB;IACtD,IAAI,CAACI,kBAAkB,GAAGA,kBAAkB;EAE7C;EAEA,SAASwC,UAAUA,CAAEv9C,EAAE,EAAE1I,UAAU,EAAE2I,YAAY,EAAG;IAEnD,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;IAEtC,SAASnsC,OAAOA,CAAEuf,CAAC,EAAE5b,QAAQ,GAAG,IAAI,EAAG;MAEtC,IAAIw9C,SAAS;MAEb,IAAK5hC,CAAC,KAAK32B,gBAAgB,EAAG,OAAOqjD,EAAE,CAACgB,aAAa;MACrD,IAAK1tB,CAAC,KAAKn2B,qBAAqB,EAAG,OAAO6iD,EAAE,CAACy1C,sBAAsB;MACnE,IAAKniE,CAAC,KAAKl2B,qBAAqB,EAAG,OAAO4iD,EAAE,CAAC21C,sBAAsB;MAEnE,IAAKriE,CAAC,KAAK12B,QAAQ,EAAG,OAAOojD,EAAE,CAACe,IAAI;MACpC,IAAKztB,CAAC,KAAKz2B,SAAS,EAAG,OAAOmjD,EAAE,CAACY,KAAK;MACtC,IAAKttB,CAAC,KAAKx2B,iBAAiB,EAAG,OAAOkjD,EAAE,CAACW,cAAc;MACvD,IAAKrtB,CAAC,KAAKv2B,OAAO,EAAG,OAAOijD,EAAE,CAACc,GAAG;MAClC,IAAKxtB,CAAC,KAAKt2B,eAAe,EAAG,OAAOgjD,EAAE,CAACa,YAAY;MACnD,IAAKvtB,CAAC,KAAKr2B,SAAS,EAAG,OAAO+iD,EAAE,CAACS,KAAK;MAEtC,IAAKntB,CAAC,KAAKp2B,aAAa,EAAG;QAE1B,IAAKgjD,QAAQ,EAAG,OAAOF,EAAE,CAACU,UAAU;QAEpCwU,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,wBAAwB,CAAE;QAEtD,IAAKwrD,SAAS,KAAK,IAAI,EAAG;UAEzB,OAAOA,SAAS,CAACsoC,cAAc;QAEhC,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;MAEA,IAAKlqE,CAAC,KAAKh2B,WAAW,EAAG,OAAO0iD,EAAE,CAACy9C,KAAK;MACxC,IAAKnqE,CAAC,KAAK/1B,UAAU,EAAG,OAAOyiD,EAAE,CAACiuC,IAAI;MACtC,IAAK36D,CAAC,KAAK91B,eAAe,EAAG,OAAOwiD,EAAE,CAAC09C,SAAS;MAChD,IAAKpqE,CAAC,KAAK71B,oBAAoB,EAAG,OAAOuiD,EAAE,CAAC29C,eAAe;MAC3D,IAAKrqE,CAAC,KAAK51B,WAAW,EAAG,OAAOsiD,EAAE,CAACk6C,eAAe;MAClD,IAAK5mE,CAAC,KAAK31B,kBAAkB,EAAG,OAAOqiD,EAAE,CAACu6C,aAAa;;MAEvD;;MAEA,IAAKjnE,CAAC,KAAKpwB,YAAY,EAAG;QAEzBgyD,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,UAAU,CAAE;QAExC,IAAKwrD,SAAS,KAAK,IAAI,EAAG;UAEzB,OAAOA,SAAS,CAAC0oC,cAAc;QAEhC,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;;MAEA;;MAEA,IAAKtqE,CAAC,KAAK11B,SAAS,EAAG,OAAOoiD,EAAE,CAAC60C,GAAG;MACpC,IAAKvhE,CAAC,KAAKz1B,gBAAgB,EAAG,OAAOmiD,EAAE,CAAC69C,WAAW;MACnD,IAAKvqE,CAAC,KAAKx1B,QAAQ,EAAG,OAAOkiD,EAAE,CAACi1C,EAAE;MAClC,IAAK3hE,CAAC,KAAKv1B,eAAe,EAAG,OAAOiiD,EAAE,CAAC89C,UAAU;MACjD,IAAKxqE,CAAC,KAAKt1B,iBAAiB,EAAG,OAAOgiD,EAAE,CAAC+9C,YAAY;;MAErD;;MAEA,IAAKzqE,CAAC,KAAKr1B,oBAAoB,IAAIq1B,CAAC,KAAKp1B,qBAAqB,IAAIo1B,CAAC,KAAKn1B,qBAAqB,IAAIm1B,CAAC,KAAKl1B,qBAAqB,EAAG;QAE9H,IAAKsZ,QAAQ,KAAK5W,YAAY,EAAG;UAEhCo0D,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,oCAAoC,CAAE;UAElE,IAAKwrD,SAAS,KAAK,IAAI,EAAG;YAEzB,IAAK5hC,CAAC,KAAKr1B,oBAAoB,EAAG,OAAOi3D,SAAS,CAAC8oC,6BAA6B;YAChF,IAAK1qE,CAAC,KAAKp1B,qBAAqB,EAAG,OAAOg3D,SAAS,CAAC+oC,mCAAmC;YACvF,IAAK3qE,CAAC,KAAKn1B,qBAAqB,EAAG,OAAO+2D,SAAS,CAACgpC,mCAAmC;YACvF,IAAK5qE,CAAC,KAAKl1B,qBAAqB,EAAG,OAAO82D,SAAS,CAACipC,mCAAmC;UAExF,CAAC,MAAM;YAEN,OAAO,IAAI;UAEZ;QAED,CAAC,MAAM;UAENjpC,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,+BAA+B,CAAE;UAE7D,IAAKwrD,SAAS,KAAK,IAAI,EAAG;YAEzB,IAAK5hC,CAAC,KAAKr1B,oBAAoB,EAAG,OAAOi3D,SAAS,CAACkpC,4BAA4B;YAC/E,IAAK9qE,CAAC,KAAKp1B,qBAAqB,EAAG,OAAOg3D,SAAS,CAACmpC,6BAA6B;YACjF,IAAK/qE,CAAC,KAAKn1B,qBAAqB,EAAG,OAAO+2D,SAAS,CAACopC,6BAA6B;YACjF,IAAKhrE,CAAC,KAAKl1B,qBAAqB,EAAG,OAAO82D,SAAS,CAACqpC,6BAA6B;UAElF,CAAC,MAAM;YAEN,OAAO,IAAI;UAEZ;QAED;MAED;;MAEA;;MAEA,IAAKjrE,CAAC,KAAKj1B,uBAAuB,IAAIi1B,CAAC,KAAKh1B,uBAAuB,IAAIg1B,CAAC,KAAK/0B,wBAAwB,IAAI+0B,CAAC,KAAK90B,wBAAwB,EAAG;QAEzI02D,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,gCAAgC,CAAE;QAE9D,IAAKwrD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAK5hC,CAAC,KAAKj1B,uBAAuB,EAAG,OAAO62D,SAAS,CAACspC,+BAA+B;UACrF,IAAKlrE,CAAC,KAAKh1B,uBAAuB,EAAG,OAAO42D,SAAS,CAACupC,+BAA+B;UACrF,IAAKnrE,CAAC,KAAK/0B,wBAAwB,EAAG,OAAO22D,SAAS,CAACwpC,gCAAgC;UACvF,IAAKprE,CAAC,KAAK90B,wBAAwB,EAAG,OAAO02D,SAAS,CAACypC,gCAAgC;QAExF,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;;MAEA;;MAEA,IAAKrrE,CAAC,KAAK70B,eAAe,EAAG;QAE5By2D,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,+BAA+B,CAAE;QAE7D,IAAKwrD,SAAS,KAAK,IAAI,EAAG;UAEzB,OAAOA,SAAS,CAAC0pC,yBAAyB;QAE3C,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;;MAEA;;MAEA,IAAKtrE,CAAC,KAAK50B,eAAe,IAAI40B,CAAC,KAAK30B,oBAAoB,EAAG;QAE1Du2D,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,8BAA8B,CAAE;QAE5D,IAAKwrD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAK5hC,CAAC,KAAK50B,eAAe,EAAG,OAASgZ,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAAC2pC,qBAAqB,GAAG3pC,SAAS,CAAC4pC,oBAAoB;UACpI,IAAKxrE,CAAC,KAAK30B,oBAAoB,EAAG,OAAS+Y,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAAC6pC,gCAAgC,GAAG7pC,SAAS,CAAC8pC,yBAAyB;QAE1J,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;;MAEA;;MAEA,IAAK1rE,CAAC,KAAK10B,oBAAoB,IAAI00B,CAAC,KAAKz0B,oBAAoB,IAAIy0B,CAAC,KAAKx0B,oBAAoB,IAC1Fw0B,CAAC,KAAKv0B,oBAAoB,IAAIu0B,CAAC,KAAKt0B,oBAAoB,IAAIs0B,CAAC,KAAKr0B,oBAAoB,IACtFq0B,CAAC,KAAKp0B,oBAAoB,IAAIo0B,CAAC,KAAKn0B,oBAAoB,IAAIm0B,CAAC,KAAKl0B,qBAAqB,IACvFk0B,CAAC,KAAKj0B,qBAAqB,IAAIi0B,CAAC,KAAKh0B,qBAAqB,IAAIg0B,CAAC,KAAK/zB,sBAAsB,IAC1F+zB,CAAC,KAAK9zB,sBAAsB,IAAI8zB,CAAC,KAAK7zB,sBAAsB,EAAG;QAE/Dy1D,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,+BAA+B,CAAE;QAE7D,IAAKwrD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAK5hC,CAAC,KAAK10B,oBAAoB,EAAG,OAAS8Y,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAAC+pC,oCAAoC,GAAG/pC,SAAS,CAACgqC,4BAA4B;UAChK,IAAK5rE,CAAC,KAAKz0B,oBAAoB,EAAG,OAAS6Y,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAACiqC,oCAAoC,GAAGjqC,SAAS,CAACkqC,4BAA4B;UAChK,IAAK9rE,CAAC,KAAKx0B,oBAAoB,EAAG,OAAS4Y,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAACmqC,oCAAoC,GAAGnqC,SAAS,CAACoqC,4BAA4B;UAChK,IAAKhsE,CAAC,KAAKv0B,oBAAoB,EAAG,OAAS2Y,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAACqqC,oCAAoC,GAAGrqC,SAAS,CAACsqC,4BAA4B;UAChK,IAAKlsE,CAAC,KAAKt0B,oBAAoB,EAAG,OAAS0Y,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAACuqC,oCAAoC,GAAGvqC,SAAS,CAACwqC,4BAA4B;UAChK,IAAKpsE,CAAC,KAAKr0B,oBAAoB,EAAG,OAASyY,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAACyqC,oCAAoC,GAAGzqC,SAAS,CAAC0qC,4BAA4B;UAChK,IAAKtsE,CAAC,KAAKp0B,oBAAoB,EAAG,OAASwY,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAAC2qC,oCAAoC,GAAG3qC,SAAS,CAAC4qC,4BAA4B;UAChK,IAAKxsE,CAAC,KAAKn0B,oBAAoB,EAAG,OAASuY,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAAC6qC,oCAAoC,GAAG7qC,SAAS,CAAC8qC,4BAA4B;UAChK,IAAK1sE,CAAC,KAAKl0B,qBAAqB,EAAG,OAASsY,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAAC+qC,qCAAqC,GAAG/qC,SAAS,CAACgrC,6BAA6B;UACnK,IAAK5sE,CAAC,KAAKj0B,qBAAqB,EAAG,OAASqY,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAACirC,qCAAqC,GAAGjrC,SAAS,CAACkrC,6BAA6B;UACnK,IAAK9sE,CAAC,KAAKh0B,qBAAqB,EAAG,OAASoY,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAACmrC,qCAAqC,GAAGnrC,SAAS,CAACorC,6BAA6B;UACnK,IAAKhtE,CAAC,KAAK/zB,sBAAsB,EAAG,OAASmY,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAACqrC,sCAAsC,GAAGrrC,SAAS,CAACsrC,8BAA8B;UACtK,IAAKltE,CAAC,KAAK9zB,sBAAsB,EAAG,OAASkY,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAACurC,sCAAsC,GAAGvrC,SAAS,CAACwrC,8BAA8B;UACtK,IAAKptE,CAAC,KAAK7zB,sBAAsB,EAAG,OAASiY,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAACyrC,sCAAsC,GAAGzrC,SAAS,CAAC0rC,8BAA8B;QAEvK,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;;MAEA;;MAEA,IAAKttE,CAAC,KAAK5zB,gBAAgB,EAAG;QAE7Bw1D,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,8BAA8B,CAAE;QAE5D,IAAKwrD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAK5hC,CAAC,KAAK5zB,gBAAgB,EAAG,OAASgY,QAAQ,KAAK5W,YAAY,GAAKo0D,SAAS,CAAC2rC,oCAAoC,GAAG3rC,SAAS,CAAC4rC,8BAA8B;QAE/J,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;;MAEA;;MAEA,IAAKxtE,CAAC,KAAK3zB,gBAAgB,IAAI2zB,CAAC,KAAK1zB,uBAAuB,IAAI0zB,CAAC,KAAKzzB,sBAAsB,IAAIyzB,CAAC,KAAKxzB,6BAA6B,EAAG;QAErIo1D,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,8BAA8B,CAAE;QAE5D,IAAKwrD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAK5hC,CAAC,KAAK5zB,gBAAgB,EAAG,OAAOw1D,SAAS,CAAC6rC,wBAAwB;UACvE,IAAKztE,CAAC,KAAK1zB,uBAAuB,EAAG,OAAOs1D,SAAS,CAAC8rC,+BAA+B;UACrF,IAAK1tE,CAAC,KAAKzzB,sBAAsB,EAAG,OAAOq1D,SAAS,CAAC+rC,8BAA8B;UACnF,IAAK3tE,CAAC,KAAKxzB,6BAA6B,EAAG,OAAOo1D,SAAS,CAACgsC,qCAAqC;QAElG,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;;MAEA;;MAEA,IAAK5tE,CAAC,KAAKj2B,kBAAkB,EAAG;QAE/B,IAAK6iD,QAAQ,EAAG,OAAOF,EAAE,CAACmhD,iBAAiB;QAE3CjsC,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,qBAAqB,CAAE;QAEnD,IAAKwrD,SAAS,KAAK,IAAI,EAAG;UAEzB,OAAOA,SAAS,CAACksC,uBAAuB;QAEzC,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;;MAEA;;MAEA,OAASphD,EAAE,CAAE1sB,CAAC,CAAE,KAAKvhC,SAAS,GAAKiuD,EAAE,CAAE1sB,CAAC,CAAE,GAAG,IAAI;IAElD;IAEA,OAAO;MAAEvf,OAAO,EAAEA;IAAQ,CAAC;EAE5B;EAAC,IAEKstF,WAAW,0BAAAC,kBAAA;IAAAzqF,SAAA,CAAAwqF,WAAA,EAAAC,kBAAA;IAAA,IAAAC,QAAA,GAAAxqF,YAAA,CAAAsqF,WAAA;IAEhB,SAAAA,YAAar9F,KAAK,GAAG,EAAE,EAAG;MAAA,IAAAw9F,OAAA;MAAA3rG,eAAA,OAAAwrG,WAAA;MAEzBG,OAAA,GAAAD,QAAA,CAAAhyG,IAAA;MAEAiyG,OAAA,CAAKC,aAAa,GAAG,IAAI;MAEzBD,OAAA,CAAKE,OAAO,GAAG19F,KAAK;MAAC,OAAAw9F,OAAA;IAEtB;IAAC,OAAAnrG,YAAA,CAAAgrG,WAAA;EAAA,EAVwBjpD,iBAAiB;EAAA,IAcrCupD,KAAK,0BAAAC,UAAA;IAAA/qF,SAAA,CAAA8qF,KAAA,EAAAC,UAAA;IAAA,IAAAC,QAAA,GAAA9qF,YAAA,CAAA4qF,KAAA;IAEV,SAAAA,MAAA,EAAc;MAAA,IAAAG,OAAA;MAAAjsG,eAAA,OAAA8rG,KAAA;MAEbG,OAAA,GAAAD,QAAA,CAAAtyG,IAAA;MAEAuyG,OAAA,CAAKC,OAAO,GAAG,IAAI;MAEnBD,OAAA,CAAKxyG,IAAI,GAAG,OAAO;MAAC,OAAAwyG,OAAA;IAErB;IAAC,OAAAzrG,YAAA,CAAAsrG,KAAA;EAAA,EAVkBlsE,QAAQ;EAc5B,IAAMusE,UAAU,GAAG;IAAE1yG,IAAI,EAAE;EAAO,CAAC;EAAC,IAE9B2yG,eAAe;IAEpB,SAAAA,gBAAA,EAAc;MAAApsG,eAAA,OAAAosG,eAAA;MAEb,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAI,CAACC,KAAK,GAAG,IAAI;MACjB,IAAI,CAACC,KAAK,GAAG,IAAI;IAElB;IAAC/rG,YAAA,CAAA4rG,eAAA;MAAA10G,GAAA;MAAAE,KAAA,EAED,SAAA40G,aAAA,EAAe;QAEd,IAAK,IAAI,CAACD,KAAK,KAAK,IAAI,EAAG;UAE1B,IAAI,CAACA,KAAK,GAAG,IAAIT,KAAK,EAAE;UACxB,IAAI,CAACS,KAAK,CAACjqF,gBAAgB,GAAG,KAAK;UACnC,IAAI,CAACiqF,KAAK,CAAC3rE,OAAO,GAAG,KAAK;UAE1B,IAAI,CAAC2rE,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;UACtB,IAAI,CAACF,KAAK,CAACG,UAAU,GAAG;YAAEC,QAAQ,EAAE;UAAM,CAAC;QAE5C;QAEA,OAAO,IAAI,CAACJ,KAAK;MAElB;IAAC;MAAA70G,GAAA;MAAAE,KAAA,EAED,SAAAg1G,kBAAA,EAAoB;QAEnB,IAAK,IAAI,CAACP,UAAU,KAAK,IAAI,EAAG;UAE/B,IAAI,CAACA,UAAU,GAAG,IAAIP,KAAK,EAAE;UAC7B,IAAI,CAACO,UAAU,CAAC/pF,gBAAgB,GAAG,KAAK;UACxC,IAAI,CAAC+pF,UAAU,CAACzrE,OAAO,GAAG,KAAK;UAC/B,IAAI,CAACyrE,UAAU,CAACQ,iBAAiB,GAAG,KAAK;UACzC,IAAI,CAACR,UAAU,CAACS,cAAc,GAAG,IAAI9/E,OAAO,EAAE;UAC9C,IAAI,CAACq/E,UAAU,CAACU,kBAAkB,GAAG,KAAK;UAC1C,IAAI,CAACV,UAAU,CAACW,eAAe,GAAG,IAAIhgF,OAAO,EAAE;QAEhD;QAEA,OAAO,IAAI,CAACq/E,UAAU;MAEvB;IAAC;MAAA30G,GAAA;MAAAE,KAAA,EAED,SAAAq1G,aAAA,EAAe;QAEd,IAAK,IAAI,CAACX,KAAK,KAAK,IAAI,EAAG;UAE1B,IAAI,CAACA,KAAK,GAAG,IAAIR,KAAK,EAAE;UACxB,IAAI,CAACQ,KAAK,CAAChqF,gBAAgB,GAAG,KAAK;UACnC,IAAI,CAACgqF,KAAK,CAAC1rE,OAAO,GAAG,KAAK;UAC1B,IAAI,CAAC0rE,KAAK,CAACO,iBAAiB,GAAG,KAAK;UACpC,IAAI,CAACP,KAAK,CAACQ,cAAc,GAAG,IAAI9/E,OAAO,EAAE;UACzC,IAAI,CAACs/E,KAAK,CAACS,kBAAkB,GAAG,KAAK;UACrC,IAAI,CAACT,KAAK,CAACU,eAAe,GAAG,IAAIhgF,OAAO,EAAE;QAE3C;QAEA,OAAO,IAAI,CAACs/E,KAAK;MAElB;IAAC;MAAA50G,GAAA;MAAAE,KAAA,EAED,SAAAqW,cAAeC,KAAK,EAAG;QAEtB,IAAK,IAAI,CAACm+F,UAAU,KAAK,IAAI,EAAG;UAE/B,IAAI,CAACA,UAAU,CAACp+F,aAAa,CAAEC,KAAK,CAAE;QAEvC;QAEA,IAAK,IAAI,CAACo+F,KAAK,KAAK,IAAI,EAAG;UAE1B,IAAI,CAACA,KAAK,CAACr+F,aAAa,CAAEC,KAAK,CAAE;QAElC;QAEA,IAAK,IAAI,CAACq+F,KAAK,KAAK,IAAI,EAAG;UAE1B,IAAI,CAACA,KAAK,CAACt+F,aAAa,CAAEC,KAAK,CAAE;QAElC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAxW,GAAA;MAAAE,KAAA,EAED,SAAAs1G,QAASC,WAAW,EAAG;QAEtB,IAAKA,WAAW,IAAIA,WAAW,CAACC,IAAI,EAAG;UAEtC,IAAMA,IAAI,GAAG,IAAI,CAACb,KAAK;UAEvB,IAAKa,IAAI,EAAG;YAAA,IAAAC,UAAA,GAAA7oB,0BAAA,CAEe2oB,WAAW,CAACC,IAAI,CAAClzG,MAAM,EAAE;cAAAozG,MAAA;YAAA;cAAnD,KAAAD,UAAA,CAAAl8F,CAAA,MAAAm8F,MAAA,GAAAD,UAAA,CAAA99F,CAAA,IAAAvT,IAAA,GAAsD;gBAAA,IAA1CuxG,UAAU,GAAAD,MAAA,CAAA11G,KAAA;gBAErB;gBACA,IAAI,CAAC41G,aAAa,CAAEJ,IAAI,EAAEG,UAAU,CAAE;cAEvC;YAAC,SAAA90G,GAAA;cAAA40G,UAAA,CAAAl4F,CAAA,CAAA1c,GAAA;YAAA;cAAA40G,UAAA,CAAA7yF,CAAA;YAAA;UAEF;QAED;QAEA,IAAI,CAACvM,aAAa,CAAE;UAAExU,IAAI,EAAE,WAAW;UAAEqmB,IAAI,EAAEqtF;QAAY,CAAC,CAAE;QAE9D,OAAO,IAAI;MAEZ;IAAC;MAAAz1G,GAAA;MAAAE,KAAA,EAED,SAAA61G,WAAYN,WAAW,EAAG;QAEzB,IAAI,CAACl/F,aAAa,CAAE;UAAExU,IAAI,EAAE,cAAc;UAAEqmB,IAAI,EAAEqtF;QAAY,CAAC,CAAE;QAEjE,IAAK,IAAI,CAACd,UAAU,KAAK,IAAI,EAAG;UAE/B,IAAI,CAACA,UAAU,CAACzrE,OAAO,GAAG,KAAK;QAEhC;QAEA,IAAK,IAAI,CAAC0rE,KAAK,KAAK,IAAI,EAAG;UAE1B,IAAI,CAACA,KAAK,CAAC1rE,OAAO,GAAG,KAAK;QAE3B;QAEA,IAAK,IAAI,CAAC2rE,KAAK,KAAK,IAAI,EAAG;UAE1B,IAAI,CAACA,KAAK,CAAC3rE,OAAO,GAAG,KAAK;QAE3B;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAlpC,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAQokF,WAAW,EAAEtjD,KAAK,EAAE6jD,cAAc,EAAG;QAE5C,IAAIC,SAAS,GAAG,IAAI;QACpB,IAAIC,QAAQ,GAAG,IAAI;QACnB,IAAIC,QAAQ,GAAG,IAAI;QAEnB,IAAMC,SAAS,GAAG,IAAI,CAACzB,UAAU;QACjC,IAAM0B,IAAI,GAAG,IAAI,CAACzB,KAAK;QACvB,IAAMc,IAAI,GAAG,IAAI,CAACb,KAAK;QAEvB,IAAKY,WAAW,IAAItjD,KAAK,CAACwU,OAAO,CAAC2vC,eAAe,KAAK,iBAAiB,EAAG;UAEzE,IAAKZ,IAAI,IAAID,WAAW,CAACC,IAAI,EAAG;YAE/BS,QAAQ,GAAG,IAAI;YAAC,IAAAI,UAAA,GAAAzpB,0BAAA,CAEU2oB,WAAW,CAACC,IAAI,CAAClzG,MAAM,EAAE;cAAAg0G,MAAA;YAAA;cAAnD,KAAAD,UAAA,CAAA98F,CAAA,MAAA+8F,MAAA,GAAAD,UAAA,CAAA1+F,CAAA,IAAAvT,IAAA,GAAsD;gBAAA,IAA1CuxG,UAAU,GAAAW,MAAA,CAAAt2G,KAAA;gBAErB;gBACA,IAAMu2G,SAAS,GAAGtkD,KAAK,CAACukD,YAAY,CAAEb,UAAU,EAAEG,cAAc,CAAE;;gBAElE;gBACA,IAAMW,KAAK,GAAG,IAAI,CAACb,aAAa,CAAEJ,IAAI,EAAEG,UAAU,CAAE;gBAEpD,IAAKY,SAAS,KAAK,IAAI,EAAG;kBAEzBE,KAAK,CAAC/xF,MAAM,CAACrF,SAAS,CAAEk3F,SAAS,CAACG,SAAS,CAAChyF,MAAM,CAAE;kBACpD+xF,KAAK,CAAC/xF,MAAM,CAACsgB,SAAS,CAAEyxE,KAAK,CAACh8E,QAAQ,EAAEg8E,KAAK,CAACzyF,QAAQ,EAAEyyF,KAAK,CAACtyF,KAAK,CAAE;kBACrEsyF,KAAK,CAACE,WAAW,GAAGJ,SAAS,CAAC1+E,MAAM;gBAErC;gBAEA4+E,KAAK,CAACztE,OAAO,GAAGutE,SAAS,KAAK,IAAI;cAEnC;;cAEA;;cAEA;YAAA,SAAA11G,GAAA;cAAAw1G,UAAA,CAAA94F,CAAA,CAAA1c,GAAA;YAAA;cAAAw1G,UAAA,CAAAzzF,CAAA;YAAA;YACA,IAAMg0F,QAAQ,GAAGpB,IAAI,CAACX,MAAM,CAAE,kBAAkB,CAAE;YAClD,IAAMgC,QAAQ,GAAGrB,IAAI,CAACX,MAAM,CAAE,WAAW,CAAE;YAC3C,IAAM3qE,QAAQ,GAAG0sE,QAAQ,CAACn8E,QAAQ,CAAC/b,UAAU,CAAEm4F,QAAQ,CAACp8E,QAAQ,CAAE;YAElE,IAAMq8E,eAAe,GAAG,IAAI;YAC5B,IAAMC,SAAS,GAAG,KAAK;YAEvB,IAAKvB,IAAI,CAACV,UAAU,CAACC,QAAQ,IAAI7qE,QAAQ,GAAG4sE,eAAe,GAAGC,SAAS,EAAG;cAEzEvB,IAAI,CAACV,UAAU,CAACC,QAAQ,GAAG,KAAK;cAChC,IAAI,CAAC1+F,aAAa,CAAE;gBACnBxU,IAAI,EAAE,UAAU;gBAChBm1G,UAAU,EAAEzB,WAAW,CAACyB,UAAU;gBAClCxuG,MAAM,EAAE;cACT,CAAC,CAAE;YAEJ,CAAC,MAAM,IAAK,CAAEgtG,IAAI,CAACV,UAAU,CAACC,QAAQ,IAAI7qE,QAAQ,IAAI4sE,eAAe,GAAGC,SAAS,EAAG;cAEnFvB,IAAI,CAACV,UAAU,CAACC,QAAQ,GAAG,IAAI;cAC/B,IAAI,CAAC1+F,aAAa,CAAE;gBACnBxU,IAAI,EAAE,YAAY;gBAClBm1G,UAAU,EAAEzB,WAAW,CAACyB,UAAU;gBAClCxuG,MAAM,EAAE;cACT,CAAC,CAAE;YAEJ;UAED,CAAC,MAAM;YAEN,IAAK2tG,IAAI,KAAK,IAAI,IAAIZ,WAAW,CAAC0B,SAAS,EAAG;cAE7CjB,QAAQ,GAAG/jD,KAAK,CAACilD,OAAO,CAAE3B,WAAW,CAAC0B,SAAS,EAAEnB,cAAc,CAAE;cAEjE,IAAKE,QAAQ,KAAK,IAAI,EAAG;gBAExBG,IAAI,CAACzxF,MAAM,CAACrF,SAAS,CAAE22F,QAAQ,CAACU,SAAS,CAAChyF,MAAM,CAAE;gBAClDyxF,IAAI,CAACzxF,MAAM,CAACsgB,SAAS,CAAEmxE,IAAI,CAAC17E,QAAQ,EAAE07E,IAAI,CAACnyF,QAAQ,EAAEmyF,IAAI,CAAChyF,KAAK,CAAE;gBAEjE,IAAK6xF,QAAQ,CAACd,cAAc,EAAG;kBAE9BiB,IAAI,CAAClB,iBAAiB,GAAG,IAAI;kBAC7BkB,IAAI,CAACjB,cAAc,CAACz4F,IAAI,CAAEu5F,QAAQ,CAACd,cAAc,CAAE;gBAEpD,CAAC,MAAM;kBAENiB,IAAI,CAAClB,iBAAiB,GAAG,KAAK;gBAE/B;gBAEA,IAAKe,QAAQ,CAACZ,eAAe,EAAG;kBAE/Be,IAAI,CAAChB,kBAAkB,GAAG,IAAI;kBAC9BgB,IAAI,CAACf,eAAe,CAAC34F,IAAI,CAAEu5F,QAAQ,CAACZ,eAAe,CAAE;gBAEtD,CAAC,MAAM;kBAENe,IAAI,CAAChB,kBAAkB,GAAG,KAAK;gBAEhC;cAED;YAED;UAED;UAEA,IAAKe,SAAS,KAAK,IAAI,EAAG;YAEzBH,SAAS,GAAG9jD,KAAK,CAACilD,OAAO,CAAE3B,WAAW,CAAC4B,cAAc,EAAErB,cAAc,CAAE;;YAEvE;YACA,IAAKC,SAAS,KAAK,IAAI,IAAIC,QAAQ,KAAK,IAAI,EAAG;cAE9CD,SAAS,GAAGC,QAAQ;YAErB;YAEA,IAAKD,SAAS,KAAK,IAAI,EAAG;cAEzBG,SAAS,CAACxxF,MAAM,CAACrF,SAAS,CAAE02F,SAAS,CAACW,SAAS,CAAChyF,MAAM,CAAE;cACxDwxF,SAAS,CAACxxF,MAAM,CAACsgB,SAAS,CAAEkxE,SAAS,CAACz7E,QAAQ,EAAEy7E,SAAS,CAAClyF,QAAQ,EAAEkyF,SAAS,CAAC/xF,KAAK,CAAE;cAErF,IAAK4xF,SAAS,CAACb,cAAc,EAAG;gBAE/BgB,SAAS,CAACjB,iBAAiB,GAAG,IAAI;gBAClCiB,SAAS,CAAChB,cAAc,CAACz4F,IAAI,CAAEs5F,SAAS,CAACb,cAAc,CAAE;cAE1D,CAAC,MAAM;gBAENgB,SAAS,CAACjB,iBAAiB,GAAG,KAAK;cAEpC;cAEA,IAAKc,SAAS,CAACX,eAAe,EAAG;gBAEhCc,SAAS,CAACf,kBAAkB,GAAG,IAAI;gBACnCe,SAAS,CAACd,eAAe,CAAC34F,IAAI,CAAEs5F,SAAS,CAACX,eAAe,CAAE;cAE5D,CAAC,MAAM;gBAENc,SAAS,CAACf,kBAAkB,GAAG,KAAK;cAErC;cAEA,IAAI,CAAC9+F,aAAa,CAAEk+F,UAAU,CAAE;YAEjC;UAED;QAGD;QAEA,IAAK2B,SAAS,KAAK,IAAI,EAAG;UAEzBA,SAAS,CAACltE,OAAO,GAAK+sE,SAAS,KAAK,IAAM;QAE3C;QAEA,IAAKI,IAAI,KAAK,IAAI,EAAG;UAEpBA,IAAI,CAACntE,OAAO,GAAKgtE,QAAQ,KAAK,IAAM;QAErC;QAEA,IAAKR,IAAI,KAAK,IAAI,EAAG;UAEpBA,IAAI,CAACxsE,OAAO,GAAKitE,QAAQ,KAAK,IAAM;QAErC;QAEA,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAAn2G,GAAA;MAAAE,KAAA,EAEA,SAAA41G,cAAeJ,IAAI,EAAEG,UAAU,EAAG;QAEjC,IAAKH,IAAI,CAACX,MAAM,CAAEc,UAAU,CAACyB,SAAS,CAAE,KAAK9yG,SAAS,EAAG;UAExD,IAAMmyG,KAAK,GAAG,IAAIvC,KAAK,EAAE;UACzBuC,KAAK,CAAC/rF,gBAAgB,GAAG,KAAK;UAC9B+rF,KAAK,CAACztE,OAAO,GAAG,KAAK;UACrBwsE,IAAI,CAACX,MAAM,CAAEc,UAAU,CAACyB,SAAS,CAAE,GAAGX,KAAK;UAE3CjB,IAAI,CAAC74F,GAAG,CAAE85F,KAAK,CAAE;QAElB;QAEA,OAAOjB,IAAI,CAACX,MAAM,CAAEc,UAAU,CAACyB,SAAS,CAAE;MAE3C;IAAC;IAAA,OAAA5C,eAAA;EAAA;EAAA,IAII6C,YAAY,0BAAAC,SAAA;IAAAluF,SAAA,CAAAiuF,YAAA,EAAAC,SAAA;IAAA,IAAAC,QAAA,GAAAjuF,YAAA,CAAA+tF,YAAA;IAEjB,SAAAA,aAAa/vF,KAAK,EAAEC,MAAM,EAAE1lB,IAAI,EAAE2nB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEE,UAAU,EAAED,MAAM,EAAG;MAAA,IAAA0tF,OAAA;MAAApvG,eAAA,OAAAivG,YAAA;MAEnGvtF,MAAM,GAAGA,MAAM,KAAKxlB,SAAS,GAAGwlB,MAAM,GAAG7Z,WAAW;MAEpD,IAAK6Z,MAAM,KAAK7Z,WAAW,IAAI6Z,MAAM,KAAK5Z,kBAAkB,EAAG;QAE9D,MAAM,IAAIvM,KAAK,CAAE,kFAAkF,CAAE;MAEtG;MAEA,IAAK9B,IAAI,KAAKyC,SAAS,IAAIwlB,MAAM,KAAK7Z,WAAW,EAAGpO,IAAI,GAAG0N,eAAe;MAC1E,IAAK1N,IAAI,KAAKyC,SAAS,IAAIwlB,MAAM,KAAK5Z,kBAAkB,EAAGrO,IAAI,GAAG+N,kBAAkB;MAEpF4nG,OAAA,GAAAD,QAAA,CAAAz1G,IAAA,OAAO,IAAI,EAAE0nB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEjoB,IAAI,EAAEkoB,UAAU;MAElFytF,OAAA,CAAKhL,cAAc,GAAG,IAAI;MAE1BgL,OAAA,CAAKvwF,KAAK,GAAG;QAAEK,KAAK,EAAEA,KAAK;QAAEC,MAAM,EAAEA;MAAO,CAAC;MAE7CiwF,OAAA,CAAK5tF,SAAS,GAAGA,SAAS,KAAKtlB,SAAS,GAAGslB,SAAS,GAAGpb,aAAa;MACpEgpG,OAAA,CAAK3tF,SAAS,GAAGA,SAAS,KAAKvlB,SAAS,GAAGulB,SAAS,GAAGrb,aAAa;MAEpEgpG,OAAA,CAAK3sF,KAAK,GAAG,KAAK;MAClB2sF,OAAA,CAAK7sF,eAAe,GAAG,KAAK;MAAC,OAAA6sF,OAAA;IAE9B;IAAC,OAAA5uG,YAAA,CAAAyuG,YAAA;EAAA,EA3ByBnuF,OAAO;EAAA,IAgC5BuuF,YAAY,0BAAAC,iBAAA;IAAAtuF,SAAA,CAAAquF,YAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAAruF,YAAA,CAAAmuF,YAAA;IAEjB,SAAAA,aAAa7uD,QAAQ,EAAE2J,EAAE,EAAG;MAAA,IAAAqlD,OAAA;MAAAxvG,eAAA,OAAAqvG,YAAA;MAE3BG,OAAA,GAAAD,QAAA,CAAA71G,IAAA;MAEA,IAAMolD,KAAK,GAAA98B,sBAAA,CAAAwtF,OAAA,CAAO;MAElB,IAAInxC,OAAO,GAAG,IAAI;MAClB,IAAIoxC,sBAAsB,GAAG,GAAG;MAEhC,IAAI/B,cAAc,GAAG,IAAI;MACzB,IAAIgC,kBAAkB,GAAG,aAAa;MACtC;MACA,IAAIC,SAAS,GAAG,GAAG;MACnB,IAAIC,oBAAoB,GAAG,IAAI;MAE/B,IAAIC,IAAI,GAAG,IAAI;MACf,IAAIC,SAAS,GAAG,IAAI;MACpB,IAAIC,WAAW,GAAG,IAAI;MACtB,IAAIC,WAAW,GAAG,IAAI;MACtB,IAAIC,OAAO,GAAG,IAAI;MAClB,IAAM79E,UAAU,GAAG+3B,EAAE,CAAC+lD,oBAAoB,EAAE;MAC5C,IAAIC,mBAAmB,GAAG,IAAI;MAC9B,IAAIC,eAAe,GAAG,IAAI;MAE1B,IAAMC,WAAW,GAAG,EAAE;MACtB,IAAMC,sBAAsB,GAAG,EAAE;MAEjC,IAAMtoD,MAAM,GAAG,IAAI88B,GAAG,EAAE;MACxB,IAAMyrB,sBAAsB,GAAG,IAAIvsB,GAAG,EAAE;;MAExC;;MAEA,IAAMwsB,OAAO,GAAG,IAAIjuD,iBAAiB,EAAE;MACvCiuD,OAAO,CAAC3xE,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;MAC1BgyE,OAAO,CAACxqF,QAAQ,GAAG,IAAIvC,OAAO,EAAE;MAEhC,IAAMgtF,OAAO,GAAG,IAAIluD,iBAAiB,EAAE;MACvCkuD,OAAO,CAAC5xE,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;MAC1BiyE,OAAO,CAACzqF,QAAQ,GAAG,IAAIvC,OAAO,EAAE;MAEhC,IAAMooF,OAAO,GAAG,CAAE2E,OAAO,EAAEC,OAAO,CAAE;MAEpC,IAAMC,QAAQ,GAAG,IAAIlF,WAAW,EAAE;MAClCkF,QAAQ,CAAC7xE,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;MAC3BkyE,QAAQ,CAAC7xE,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;MAE3B,IAAImyE,iBAAiB,GAAG,IAAI;MAC5B,IAAIC,gBAAgB,GAAG,IAAI;;MAE3B;;MAEApB,OAAA,CAAKqB,gBAAgB,GAAG,IAAI;MAC5BrB,OAAA,CAAK1xF,OAAO,GAAG,KAAK;MAEpB0xF,OAAA,CAAKsB,YAAY,GAAG,KAAK;MAEzBtB,OAAA,CAAKuB,aAAa,GAAG,UAAWhjG,KAAK,EAAG;QAEvC,IAAIijG,UAAU,GAAGX,WAAW,CAAEtiG,KAAK,CAAE;QAErC,IAAKijG,UAAU,KAAK90G,SAAS,EAAG;UAE/B80G,UAAU,GAAG,IAAI5E,eAAe,EAAE;UAClCiE,WAAW,CAAEtiG,KAAK,CAAE,GAAGijG,UAAU;QAElC;QAEA,OAAOA,UAAU,CAACpE,iBAAiB,EAAE;MAEtC,CAAC;MAED4C,OAAA,CAAKyB,iBAAiB,GAAG,UAAWljG,KAAK,EAAG;QAE3C,IAAIijG,UAAU,GAAGX,WAAW,CAAEtiG,KAAK,CAAE;QAErC,IAAKijG,UAAU,KAAK90G,SAAS,EAAG;UAE/B80G,UAAU,GAAG,IAAI5E,eAAe,EAAE;UAClCiE,WAAW,CAAEtiG,KAAK,CAAE,GAAGijG,UAAU;QAElC;QAEA,OAAOA,UAAU,CAAC/D,YAAY,EAAE;MAEjC,CAAC;MAEDuC,OAAA,CAAK0B,OAAO,GAAG,UAAWnjG,KAAK,EAAG;QAEjC,IAAIijG,UAAU,GAAGX,WAAW,CAAEtiG,KAAK,CAAE;QAErC,IAAKijG,UAAU,KAAK90G,SAAS,EAAG;UAE/B80G,UAAU,GAAG,IAAI5E,eAAe,EAAE;UAClCiE,WAAW,CAAEtiG,KAAK,CAAE,GAAGijG,UAAU;QAElC;QAEA,OAAOA,UAAU,CAACxE,YAAY,EAAE;MAEjC,CAAC;;MAED;;MAEA,SAAS2E,cAAcA,CAAEjjG,KAAK,EAAG;QAEhC,IAAMkjG,eAAe,GAAGd,sBAAsB,CAAC3iG,OAAO,CAAEO,KAAK,CAACi/F,WAAW,CAAE;QAE3E,IAAKiE,eAAe,KAAK,CAAE,CAAC,EAAG;UAE9B;QAED;QAEA,IAAMJ,UAAU,GAAGX,WAAW,CAAEe,eAAe,CAAE;QAEjD,IAAKJ,UAAU,KAAK90G,SAAS,EAAG;UAE/B80G,UAAU,CAAC/iG,aAAa,CAAE;YAAExU,IAAI,EAAEyU,KAAK,CAACzU,IAAI;YAAEqmB,IAAI,EAAE5R,KAAK,CAACi/F;UAAY,CAAC,CAAE;QAE1E;MAED;MAEA,SAASkE,YAAYA,CAAA,EAAG;QAEvBhzC,OAAO,CAACxwD,mBAAmB,CAAE,QAAQ,EAAEsjG,cAAc,CAAE;QACvD9yC,OAAO,CAACxwD,mBAAmB,CAAE,aAAa,EAAEsjG,cAAc,CAAE;QAC5D9yC,OAAO,CAACxwD,mBAAmB,CAAE,WAAW,EAAEsjG,cAAc,CAAE;QAC1D9yC,OAAO,CAACxwD,mBAAmB,CAAE,SAAS,EAAEsjG,cAAc,CAAE;QACxD9yC,OAAO,CAACxwD,mBAAmB,CAAE,cAAc,EAAEsjG,cAAc,CAAE;QAC7D9yC,OAAO,CAACxwD,mBAAmB,CAAE,YAAY,EAAEsjG,cAAc,CAAE;QAC3D9yC,OAAO,CAACxwD,mBAAmB,CAAE,KAAK,EAAEwjG,YAAY,CAAE;QAClDhzC,OAAO,CAACxwD,mBAAmB,CAAE,oBAAoB,EAAEyjG,oBAAoB,CAAE;QAEzE,KAAM,IAAI7zG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4yG,WAAW,CAAC7yG,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE/C,IAAM0vG,WAAW,GAAGmD,sBAAsB,CAAE7yG,CAAC,CAAE;UAE/C,IAAK0vG,WAAW,KAAK,IAAI,EAAG;UAE5BmD,sBAAsB,CAAE7yG,CAAC,CAAE,GAAG,IAAI;UAElC4yG,WAAW,CAAE5yG,CAAC,CAAE,CAACgwG,UAAU,CAAEN,WAAW,CAAE;QAE3C;QAEAwD,iBAAiB,GAAG,IAAI;QACxBC,gBAAgB,GAAG,IAAI;;QAEvB;;QAEApwD,QAAQ,CAAC+E,eAAe,CAAE4qD,mBAAmB,CAAE;QAE/CH,WAAW,GAAG,IAAI;QAClBD,WAAW,GAAG,IAAI;QAClBD,SAAS,GAAG,IAAI;QAChBzxC,OAAO,GAAG,IAAI;QACd+xC,eAAe,GAAG,IAAI;;QAEtB;;QAEA5qE,SAAS,CAACxmC,IAAI,EAAE;QAEhB8/C,KAAK,CAACgyD,YAAY,GAAG,KAAK;QAE1BhyD,KAAK,CAAC7wC,aAAa,CAAE;UAAExU,IAAI,EAAE;QAAa,CAAC,CAAE;MAE9C;MAEA+1G,OAAA,CAAK+B,yBAAyB,GAAG,UAAW35G,KAAK,EAAG;QAEnD63G,sBAAsB,GAAG73G,KAAK;QAE9B,IAAKknD,KAAK,CAACgyD,YAAY,KAAK,IAAI,EAAG;UAElC3vG,OAAO,CAACC,IAAI,CAAE,uEAAuE,CAAE;QAExF;MAED,CAAC;MAEDouG,OAAA,CAAKgC,qBAAqB,GAAG,UAAW55G,KAAK,EAAG;QAE/C83G,kBAAkB,GAAG93G,KAAK;QAE1B,IAAKknD,KAAK,CAACgyD,YAAY,KAAK,IAAI,EAAG;UAElC3vG,OAAO,CAACC,IAAI,CAAE,0EAA0E,CAAE;QAE3F;MAED,CAAC;MAEDouG,OAAA,CAAKiC,iBAAiB,GAAG,YAAY;QAEpC,OAAO7B,oBAAoB,IAAIlC,cAAc;MAE9C,CAAC;MAED8B,OAAA,CAAKkC,iBAAiB,GAAG,UAAWC,KAAK,EAAG;QAE3C/B,oBAAoB,GAAG+B,KAAK;MAE7B,CAAC;MAEDnC,OAAA,CAAKoC,YAAY,GAAG,YAAY;QAE/B,OAAO7B,WAAW,KAAK,IAAI,GAAGA,WAAW,GAAGC,WAAW;MAExD,CAAC;MAEDR,OAAA,CAAKqC,UAAU,GAAG,YAAY;QAE7B,OAAO/B,SAAS;MAEjB,CAAC;MAEDN,OAAA,CAAKsC,QAAQ,GAAG,YAAY;QAE3B,OAAO7B,OAAO;MAEf,CAAC;MAEDT,OAAA,CAAKlxC,UAAU,GAAG,YAAY;QAE7B,OAAOD,OAAO;MAEf,CAAC;MAEDmxC,OAAA,CAAKuC,UAAU;QAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAh7G,mBAAA,GAAA+G,IAAA,CAAG,SAAAk0G,QAAiBt6G,KAAK;UAAA,IAAAu6G,SAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAC,aAAA,EAAAC,mBAAA,EAAAzR,sBAAA;UAAA,OAAA7pG,mBAAA,GAAAyB,IAAA,UAAA85G,SAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAA5zG,IAAA,GAAA4zG,SAAA,CAAAl2G,IAAA;cAAA;gBAEvC8hE,OAAO,GAAGzmE,KAAK;gBAAC,MAEXymE,OAAO,KAAK,IAAI;kBAAAo0C,SAAA,CAAAl2G,IAAA;kBAAA;gBAAA;gBAEpB4zG,mBAAmB,GAAG3vD,QAAQ,CAACC,eAAe,EAAE;gBAEhD4d,OAAO,CAAC9wD,gBAAgB,CAAE,QAAQ,EAAE4jG,cAAc,CAAE;gBACpD9yC,OAAO,CAAC9wD,gBAAgB,CAAE,aAAa,EAAE4jG,cAAc,CAAE;gBACzD9yC,OAAO,CAAC9wD,gBAAgB,CAAE,WAAW,EAAE4jG,cAAc,CAAE;gBACvD9yC,OAAO,CAAC9wD,gBAAgB,CAAE,SAAS,EAAE4jG,cAAc,CAAE;gBACrD9yC,OAAO,CAAC9wD,gBAAgB,CAAE,cAAc,EAAE4jG,cAAc,CAAE;gBAC1D9yC,OAAO,CAAC9wD,gBAAgB,CAAE,YAAY,EAAE4jG,cAAc,CAAE;gBACxD9yC,OAAO,CAAC9wD,gBAAgB,CAAE,KAAK,EAAE8jG,YAAY,CAAE;gBAC/ChzC,OAAO,CAAC9wD,gBAAgB,CAAE,oBAAoB,EAAE+jG,oBAAoB,CAAE;gBAAC,MAElEl/E,UAAU,CAACsgF,YAAY,KAAK,IAAI;kBAAAD,SAAA,CAAAl2G,IAAA;kBAAA;gBAAA;gBAAAk2G,SAAA,CAAAl2G,IAAA;gBAAA,OAE9B4tD,EAAE,CAACwoD,gBAAgB,EAAE;cAAA;gBAI5B,IAAOt0C,OAAO,CAAC0wB,WAAW,CAAClwD,MAAM,KAAK3iC,SAAS,IAAQskD,QAAQ,CAAC4J,YAAY,CAACC,QAAQ,KAAK,KAAO,EAAG;kBAE7F8nD,SAAS,GAAG;oBACjBS,SAAS,EAAIv0C,OAAO,CAAC0wB,WAAW,CAAClwD,MAAM,KAAK3iC,SAAS,GAAKk2B,UAAU,CAACwgF,SAAS,GAAG,IAAI;oBACrFh8F,KAAK,EAAEwb,UAAU,CAACxb,KAAK;oBACvBiP,KAAK,EAAEuM,UAAU,CAACvM,KAAK;oBACvB2gC,OAAO,EAAEp0B,UAAU,CAACo0B,OAAO;oBAC3BipD,sBAAsB,EAAEA;kBACzB,CAAC;kBAEDO,WAAW,GAAG,IAAI6C,YAAY,CAAEx0C,OAAO,EAAElU,EAAE,EAAEgoD,SAAS,CAAE;kBAExD9zC,OAAO,CAACy0C,iBAAiB,CAAE;oBAAEC,SAAS,EAAE/C;kBAAY,CAAC,CAAE;kBAEvDI,eAAe,GAAG,IAAI7qF,iBAAiB,CACtCyqF,WAAW,CAACgD,gBAAgB,EAC5BhD,WAAW,CAACiD,iBAAiB,EAC7B;oBACCvxF,MAAM,EAAEha,UAAU;oBAClBjO,IAAI,EAAEqN,gBAAgB;oBACtB+a,QAAQ,EAAE2+B,QAAQ,CAACE,cAAc;oBACjCv6B,aAAa,EAAEiM,UAAU,CAACo0B;kBAC3B,CAAC,CACD;gBAEF,CAAC,MAAM;kBAEF4rD,WAAW,GAAG,IAAI;kBAClBC,SAAS,GAAG,IAAI;kBAChBC,aAAa,GAAG,IAAI;kBAExB,IAAKlgF,UAAU,CAACvM,KAAK,EAAG;oBAEvBysF,aAAa,GAAGlgF,UAAU,CAACo0B,OAAO,GAAG2D,EAAE,CAACq6C,gBAAgB,GAAGr6C,EAAE,CAACo6C,iBAAiB;oBAC/E6N,WAAW,GAAGhgF,UAAU,CAACo0B,OAAO,GAAG1+C,kBAAkB,GAAGD,WAAW;oBACnEwqG,SAAS,GAAGjgF,UAAU,CAACo0B,OAAO,GAAGh/C,kBAAkB,GAAGL,eAAe;kBAEtE;kBAEMorG,mBAAmB,GAAG;oBAC3BW,WAAW,EAAE/oD,EAAE,CAACw1C,KAAK;oBACrByS,WAAW,EAAEE,aAAa;oBAC1BxlB,WAAW,EAAE2iB;kBACd,CAAC;kBAEDK,SAAS,GAAG,IAAIqD,cAAc,CAAE90C,OAAO,EAAElU,EAAE,CAAE;kBAE7C4lD,WAAW,GAAGD,SAAS,CAACsD,qBAAqB,CAAEb,mBAAmB,CAAE;kBAEpEl0C,OAAO,CAACy0C,iBAAiB,CAAE;oBAAEj0E,MAAM,EAAE,CAAEkxE,WAAW;kBAAG,CAAC,CAAE;kBAExDK,eAAe,GAAG,IAAI7qF,iBAAiB,CACtCwqF,WAAW,CAACsD,YAAY,EACxBtD,WAAW,CAACuD,aAAa,EACzB;oBACC5xF,MAAM,EAAEha,UAAU;oBAClBjO,IAAI,EAAEqN,gBAAgB;oBACtBsf,YAAY,EAAE,IAAI6oF,YAAY,CAAEc,WAAW,CAACsD,YAAY,EAAEtD,WAAW,CAACuD,aAAa,EAAEjB,SAAS,EAAEn2G,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEk2G,WAAW,CAAE;oBAC/KjsF,aAAa,EAAEiM,UAAU,CAACo0B,OAAO;oBACjC3kC,QAAQ,EAAE2+B,QAAQ,CAACE,cAAc;oBACjCr6B,OAAO,EAAE+L,UAAU,CAACwgF,SAAS,GAAG,CAAC,GAAG;kBACrC,CAAC,CAAE;kBAEE9R,sBAAsB,GAAGtgD,QAAQ,CAAC0Y,UAAU,CAACrlD,GAAG,CAAEu8F,eAAe,CAAE;kBACzEtP,sBAAsB,CAACsG,mBAAmB,GAAG2I,WAAW,CAAC5I,iBAAiB;gBAE3E;gBAEAiJ,eAAe,CAACvnB,gBAAgB,GAAG,IAAI,CAAC,CAAC;;gBAEzC,IAAI,CAAC0qB,YAAY,CAAE5D,SAAS,CAAE;gBAE9BC,oBAAoB,GAAG,IAAI;gBAAC6C,SAAA,CAAAl2G,IAAA;gBAAA,OACL8hE,OAAO,CAACm1C,qBAAqB,CAAE9D,kBAAkB,CAAE;cAAA;gBAA1EhC,cAAc,GAAA+E,SAAA,CAAA72G,IAAA;gBAEd4pC,SAAS,CAACykB,UAAU,CAAEoU,OAAO,CAAE;gBAC/B74B,SAAS,CAACyS,KAAK,EAAE;gBAEjB6G,KAAK,CAACgyD,YAAY,GAAG,IAAI;gBAEzBhyD,KAAK,CAAC7wC,aAAa,CAAE;kBAAExU,IAAI,EAAE;gBAAe,CAAC,CAAE;cAAC;cAAA;gBAAA,OAAAg5G,SAAA,CAAAzzG,IAAA;YAAA;UAAA,GAAAkzG,OAAA;QAAA,CAIjD;QAAA,iBAAAuB,GAAA;UAAA,OAAAzB,IAAA,CAAA7V,KAAA,OAAA75D,SAAA;QAAA;MAAA;MAED,SAASgvE,oBAAoBA,CAAEpjG,KAAK,EAAG;QAEtC;;QAEA,KAAM,IAAIzQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyQ,KAAK,CAACwlG,OAAO,CAACl2G,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEjD,IAAM0vG,WAAW,GAAGj/F,KAAK,CAACwlG,OAAO,CAAEj2G,CAAC,CAAE;UACtC,IAAMsQ,KAAK,GAAGuiG,sBAAsB,CAAC3iG,OAAO,CAAEw/F,WAAW,CAAE;UAE3D,IAAKp/F,KAAK,IAAI,CAAC,EAAG;YAEjBuiG,sBAAsB,CAAEviG,KAAK,CAAE,GAAG,IAAI;YACtCsiG,WAAW,CAAEtiG,KAAK,CAAE,CAAC0/F,UAAU,CAAEN,WAAW,CAAE;UAE/C;QAED;;QAEA;;QAEA,KAAM,IAAI1vG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGyQ,KAAK,CAACylG,KAAK,CAACn2G,MAAM,EAAEC,IAAC,EAAG,EAAG;UAE/C,IAAM0vG,YAAW,GAAGj/F,KAAK,CAACylG,KAAK,CAAEl2G,IAAC,CAAE;UAEpC,IAAI2zG,eAAe,GAAGd,sBAAsB,CAAC3iG,OAAO,CAAEw/F,YAAW,CAAE;UAEnE,IAAKiE,eAAe,KAAK,CAAE,CAAC,EAAG;YAE9B;;YAEA,KAAM,IAAI3zG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG4yG,WAAW,CAAC7yG,MAAM,EAAEC,IAAC,EAAG,EAAG;cAE/C,IAAKA,IAAC,IAAI6yG,sBAAsB,CAAC9yG,MAAM,EAAG;gBAEzC8yG,sBAAsB,CAACrzG,IAAI,CAAEkwG,YAAW,CAAE;gBAC1CiE,eAAe,GAAG3zG,IAAC;gBACnB;cAED,CAAC,MAAM,IAAK6yG,sBAAsB,CAAE7yG,IAAC,CAAE,KAAK,IAAI,EAAG;gBAElD6yG,sBAAsB,CAAE7yG,IAAC,CAAE,GAAG0vG,YAAW;gBACzCiE,eAAe,GAAG3zG,IAAC;gBACnB;cAED;YAED;;YAEA;;YAEA,IAAK2zG,eAAe,KAAK,CAAE,CAAC,EAAG;UAEhC;UAEA,IAAMJ,UAAU,GAAGX,WAAW,CAAEe,eAAe,CAAE;UAEjD,IAAKJ,UAAU,EAAG;YAEjBA,UAAU,CAAC9D,OAAO,CAAEC,YAAW,CAAE;UAElC;QAED;MAED;;MAEA;;MAEA,IAAMyG,UAAU,GAAG,IAAI5mF,OAAO,EAAE;MAChC,IAAM6mF,UAAU,GAAG,IAAI7mF,OAAO,EAAE;;MAEhC;AACH;AACA;AACA;AACA;AACA;MACG,SAAS8mF,sBAAsBA,CAAE5lF,MAAM,EAAEsiF,OAAO,EAAEC,OAAO,EAAG;QAE3DmD,UAAU,CAAC9jF,qBAAqB,CAAE0gF,OAAO,CAACjiF,WAAW,CAAE;QACvDslF,UAAU,CAAC/jF,qBAAqB,CAAE2gF,OAAO,CAACliF,WAAW,CAAE;QAEvD,IAAMwlF,GAAG,GAAGH,UAAU,CAACt9F,UAAU,CAAEu9F,UAAU,CAAE;QAE/C,IAAMG,KAAK,GAAGxD,OAAO,CAACpiF,gBAAgB,CAAChZ,QAAQ;QAC/C,IAAM6+F,KAAK,GAAGxD,OAAO,CAACriF,gBAAgB,CAAChZ,QAAQ;;QAE/C;QACA;QACA;QACA,IAAMkoB,IAAI,GAAG02E,KAAK,CAAE,EAAE,CAAE,IAAKA,KAAK,CAAE,EAAE,CAAE,GAAG,CAAC,CAAE;QAC9C,IAAMz2E,GAAG,GAAGy2E,KAAK,CAAE,EAAE,CAAE,IAAKA,KAAK,CAAE,EAAE,CAAE,GAAG,CAAC,CAAE;QAC7C,IAAME,MAAM,GAAG,CAAEF,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;QAC9C,IAAMG,SAAS,GAAG,CAAEH,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;QAEjD,IAAMI,OAAO,GAAG,CAAEJ,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;QAC/C,IAAMK,QAAQ,GAAG,CAAEJ,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;QAChD,IAAM/2E,IAAI,GAAGI,IAAI,GAAG82E,OAAO;QAC3B,IAAMj3E,KAAK,GAAGG,IAAI,GAAG+2E,QAAQ;;QAE7B;QACA;QACA,IAAMC,OAAO,GAAGP,GAAG,IAAK,CAAEK,OAAO,GAAGC,QAAQ,CAAE;QAC9C,IAAME,OAAO,GAAGD,OAAO,GAAG,CAAEF,OAAO;;QAEnC;QACA5D,OAAO,CAACjiF,WAAW,CAACqO,SAAS,CAAE1O,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAACnS,KAAK,CAAE;QACjFmS,MAAM,CAAC6T,UAAU,CAAEwyE,OAAO,CAAE;QAC5BrmF,MAAM,CAAC+T,UAAU,CAAEqyE,OAAO,CAAE;QAC5BpmF,MAAM,CAACK,WAAW,CAAC+L,OAAO,CAAEpM,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAACnS,KAAK,CAAE;QAC9EmS,MAAM,CAACC,kBAAkB,CAAC9Z,IAAI,CAAE6Z,MAAM,CAACK,WAAW,CAAE,CAAC5T,MAAM,EAAE;;QAE7D;QACA;QACA;QACA,IAAM65F,KAAK,GAAGl3E,IAAI,GAAGg3E,OAAO;QAC5B,IAAMG,IAAI,GAAGl3E,GAAG,GAAG+2E,OAAO;QAC1B,IAAMI,KAAK,GAAGx3E,IAAI,GAAGq3E,OAAO;QAC5B,IAAMI,MAAM,GAAGx3E,KAAK,IAAK42E,GAAG,GAAGQ,OAAO,CAAE;QACxC,IAAMK,IAAI,GAAGV,MAAM,GAAG32E,GAAG,GAAGk3E,IAAI,GAAGD,KAAK;QACxC,IAAMK,OAAO,GAAGV,SAAS,GAAG52E,GAAG,GAAGk3E,IAAI,GAAGD,KAAK;QAE9CtmF,MAAM,CAACE,gBAAgB,CAAC6O,eAAe,CAAEy3E,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEL,KAAK,EAAEC,IAAI,CAAE;QACpFvmF,MAAM,CAACI,uBAAuB,CAACja,IAAI,CAAE6Z,MAAM,CAACE,gBAAgB,CAAE,CAACzT,MAAM,EAAE;MAExE;MAEA,SAASm6F,YAAYA,CAAE5mF,MAAM,EAAE+R,MAAM,EAAG;QAEvC,IAAKA,MAAM,KAAK,IAAI,EAAG;UAEtB/R,MAAM,CAACK,WAAW,CAACla,IAAI,CAAE6Z,MAAM,CAAC5R,MAAM,CAAE;QAEzC,CAAC,MAAM;UAEN4R,MAAM,CAACK,WAAW,CAACvV,gBAAgB,CAAEinB,MAAM,CAAC1R,WAAW,EAAEL,MAAM,CAAC5R,MAAM,CAAE;QAEzE;QAEA4R,MAAM,CAACC,kBAAkB,CAAC9Z,IAAI,CAAE6Z,MAAM,CAACK,WAAW,CAAE,CAAC5T,MAAM,EAAE;MAE9D;MAEA60F,OAAA,CAAKsF,YAAY,GAAG,UAAW5mF,MAAM,EAAG;QAEvC,IAAKmwC,OAAO,KAAK,IAAI,EAAG;QAExBqyC,QAAQ,CAACpzE,IAAI,GAAGmzE,OAAO,CAACnzE,IAAI,GAAGkzE,OAAO,CAAClzE,IAAI,GAAGpP,MAAM,CAACoP,IAAI;QACzDozE,QAAQ,CAACnzE,GAAG,GAAGkzE,OAAO,CAAClzE,GAAG,GAAGizE,OAAO,CAACjzE,GAAG,GAAGrP,MAAM,CAACqP,GAAG;QAErD,IAAKozE,iBAAiB,KAAKD,QAAQ,CAACpzE,IAAI,IAAIszE,gBAAgB,KAAKF,QAAQ,CAACnzE,GAAG,EAAG;UAE/E;;UAEA8gC,OAAO,CAACy0C,iBAAiB,CAAE;YAC1BiC,SAAS,EAAErE,QAAQ,CAACpzE,IAAI;YACxB03E,QAAQ,EAAEtE,QAAQ,CAACnzE;UACpB,CAAC,CAAE;UAEHozE,iBAAiB,GAAGD,QAAQ,CAACpzE,IAAI;UACjCszE,gBAAgB,GAAGF,QAAQ,CAACnzE,GAAG;QAEhC;QAEA,IAAM0C,MAAM,GAAG/R,MAAM,CAAC+R,MAAM;QAC5B,IAAM4rE,OAAO,GAAG6E,QAAQ,CAAC7E,OAAO;QAEhCiJ,YAAY,CAAEpE,QAAQ,EAAEzwE,MAAM,CAAE;QAEhC,KAAM,IAAIxiC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGouG,OAAO,CAACruG,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE3Cq3G,YAAY,CAAEjJ,OAAO,CAAEpuG,CAAC,CAAE,EAAEwiC,MAAM,CAAE;QAErC;;QAEA;;QAEA,IAAK4rE,OAAO,CAACruG,MAAM,KAAK,CAAC,EAAG;UAE3Bs2G,sBAAsB,CAAEpD,QAAQ,EAAEF,OAAO,EAAEC,OAAO,CAAE;QAErD,CAAC,MAAM;UAEN;;UAEAC,QAAQ,CAACtiF,gBAAgB,CAAC/Z,IAAI,CAAEm8F,OAAO,CAACpiF,gBAAgB,CAAE;QAE3D;;QAEA;;QAEA6mF,gBAAgB,CAAE/mF,MAAM,EAAEwiF,QAAQ,EAAEzwE,MAAM,CAAE;MAE7C,CAAC;MAED,SAASg1E,gBAAgBA,CAAE/mF,MAAM,EAAEwiF,QAAQ,EAAEzwE,MAAM,EAAG;QAErD,IAAKA,MAAM,KAAK,IAAI,EAAG;UAEtB/R,MAAM,CAAC5R,MAAM,CAACjI,IAAI,CAAEq8F,QAAQ,CAACniF,WAAW,CAAE;QAE3C,CAAC,MAAM;UAENL,MAAM,CAAC5R,MAAM,CAACjI,IAAI,CAAE4rB,MAAM,CAAC1R,WAAW,CAAE;UACxCL,MAAM,CAAC5R,MAAM,CAAC3B,MAAM,EAAE;UACtBuT,MAAM,CAAC5R,MAAM,CAACxH,QAAQ,CAAE47F,QAAQ,CAACniF,WAAW,CAAE;QAE/C;QAEAL,MAAM,CAAC5R,MAAM,CAACsgB,SAAS,CAAE1O,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAACnS,KAAK,CAAE;QAC3EmS,MAAM,CAACwV,iBAAiB,CAAE,IAAI,CAAE;QAEhC,IAAMpR,QAAQ,GAAGpE,MAAM,CAACoE,QAAQ;QAEhC,KAAM,IAAI70B,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGkkB,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEnD60B,QAAQ,CAAE70B,CAAC,CAAE,CAACimC,iBAAiB,CAAE,IAAI,CAAE;QAExC;QAEAxV,MAAM,CAACE,gBAAgB,CAAC/Z,IAAI,CAAEq8F,QAAQ,CAACtiF,gBAAgB,CAAE;QACzDF,MAAM,CAACI,uBAAuB,CAACja,IAAI,CAAEq8F,QAAQ,CAACpiF,uBAAuB,CAAE;QAEvE,IAAKJ,MAAM,CAAC20B,mBAAmB,EAAG;UAEjC30B,MAAM,CAACw0B,GAAG,GAAGh0C,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACg1C,IAAI,CAAE,CAAC,GAAGt1B,MAAM,CAACE,gBAAgB,CAAChZ,QAAQ,CAAE,CAAC,CAAE,CAAE;UACjF8Y,MAAM,CAAC40B,IAAI,GAAG,CAAC;QAEhB;MAED;MAEA0sD,OAAA,CAAK0F,SAAS,GAAG,YAAY;QAE5B,OAAOxE,QAAQ;MAEhB,CAAC;MAEDlB,OAAA,CAAK2F,YAAY,GAAG,YAAY;QAE/B,IAAKpF,WAAW,KAAK,IAAI,IAAIC,WAAW,KAAK,IAAI,EAAG;UAEnD,OAAO9zG,SAAS;QAEjB;QAEA,OAAOyzG,SAAS;MAEjB,CAAC;MAEDH,OAAA,CAAK+D,YAAY,GAAG,UAAW37G,KAAK,EAAG;QAEtC;QACA;;QAEA+3G,SAAS,GAAG/3G,KAAK;QAEjB,IAAKm4G,WAAW,KAAK,IAAI,EAAG;UAE3BA,WAAW,CAACqF,cAAc,GAAGx9G,KAAK;QAEnC;QAEA,IAAKo4G,WAAW,KAAK,IAAI,IAAIA,WAAW,CAACoF,cAAc,KAAKl5G,SAAS,EAAG;UAEvE8zG,WAAW,CAACoF,cAAc,GAAGx9G,KAAK;QAEnC;MAED,CAAC;MAED43G,OAAA,CAAK6F,SAAS,GAAG,YAAY;QAE5B,OAAOrtD,MAAM;MAEd,CAAC;;MAED;;MAEA,IAAIstD,wBAAwB,GAAG,IAAI;MAEnC,SAAS3rD,gBAAgBA,CAAEC,IAAI,EAAEC,KAAK,EAAG;QAExCgmD,IAAI,GAAGhmD,KAAK,CAAC0rD,aAAa,CAAE3F,oBAAoB,IAAIlC,cAAc,CAAE;QACpEuC,OAAO,GAAGpmD,KAAK;QAEf,IAAKgmD,IAAI,KAAK,IAAI,EAAG;UAEpB,IAAM2F,KAAK,GAAG3F,IAAI,CAAC2F,KAAK;UAExB,IAAKxF,WAAW,KAAK,IAAI,EAAG;YAE3BxvD,QAAQ,CAACi1D,0BAA0B,CAAErF,eAAe,EAAEJ,WAAW,CAACnX,WAAW,CAAE;YAC/Er4C,QAAQ,CAAC+E,eAAe,CAAE6qD,eAAe,CAAE;UAE5C;UAEA,IAAIsF,mBAAmB,GAAG,KAAK;;UAE/B;;UAEA,IAAKF,KAAK,CAACh4G,MAAM,KAAKkzG,QAAQ,CAAC7E,OAAO,CAACruG,MAAM,EAAG;YAE/CkzG,QAAQ,CAAC7E,OAAO,CAACruG,MAAM,GAAG,CAAC;YAC3Bk4G,mBAAmB,GAAG,IAAI;UAE3B;UAEA,KAAM,IAAIj4G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+3G,KAAK,CAACh4G,MAAM,EAAEC,CAAC,EAAG,EAAG;YAEzC,IAAMulD,IAAI,GAAGwyD,KAAK,CAAE/3G,CAAC,CAAE;YAEvB,IAAIuoB,QAAQ,GAAG,IAAI;YAEnB,IAAKgqF,WAAW,KAAK,IAAI,EAAG;cAE3BhqF,QAAQ,GAAGgqF,WAAW,CAACne,WAAW,CAAE7uC,IAAI,CAAE;YAE3C,CAAC,MAAM;cAEN,IAAM2yD,UAAU,GAAG7F,SAAS,CAAC8F,eAAe,CAAE7F,WAAW,EAAE/sD,IAAI,CAAE;cACjEh9B,QAAQ,GAAG2vF,UAAU,CAAC3vF,QAAQ;;cAE9B;cACA,IAAKvoB,CAAC,KAAK,CAAC,EAAG;gBAEd+iD,QAAQ,CAACq1D,uBAAuB,CAC/BzF,eAAe,EACfuF,UAAU,CAAClP,YAAY,EACvBsJ,WAAW,CAAC5I,iBAAiB,GAAGjrG,SAAS,GAAGy5G,UAAU,CAACG,mBAAmB,CAAE;gBAE7Et1D,QAAQ,CAAC+E,eAAe,CAAE6qD,eAAe,CAAE;cAE5C;YAED;YAEA,IAAIliF,MAAM,GAAG29E,OAAO,CAAEpuG,CAAC,CAAE;YAEzB,IAAKywB,MAAM,KAAKhyB,SAAS,EAAG;cAE3BgyB,MAAM,GAAG,IAAIq0B,iBAAiB,EAAE;cAChCr0B,MAAM,CAAC2Q,MAAM,CAACL,MAAM,CAAE/gC,CAAC,CAAE;cACzBywB,MAAM,CAAClI,QAAQ,GAAG,IAAIvC,OAAO,EAAE;cAC/BooF,OAAO,CAAEpuG,CAAC,CAAE,GAAGywB,MAAM;YAEtB;YAEAA,MAAM,CAAC5R,MAAM,CAACrF,SAAS,CAAE+rC,IAAI,CAACsrD,SAAS,CAAChyF,MAAM,CAAE;YAChD4R,MAAM,CAAC5R,MAAM,CAACsgB,SAAS,CAAE1O,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAACnS,KAAK,CAAE;YAC3EmS,MAAM,CAACE,gBAAgB,CAACnX,SAAS,CAAE+rC,IAAI,CAAC50B,gBAAgB,CAAE;YAC1DF,MAAM,CAACI,uBAAuB,CAACja,IAAI,CAAE6Z,MAAM,CAACE,gBAAgB,CAAE,CAACzT,MAAM,EAAE;YACvEuT,MAAM,CAAClI,QAAQ,CAAChT,GAAG,CAAEgT,QAAQ,CAACtW,CAAC,EAAEsW,QAAQ,CAAChW,CAAC,EAAEgW,QAAQ,CAAC9G,KAAK,EAAE8G,QAAQ,CAAC7G,MAAM,CAAE;YAE9E,IAAK1hB,CAAC,KAAK,CAAC,EAAG;cAEdizG,QAAQ,CAACp0F,MAAM,CAACjI,IAAI,CAAE6Z,MAAM,CAAC5R,MAAM,CAAE;cACrCo0F,QAAQ,CAACp0F,MAAM,CAACsgB,SAAS,CAAE8zE,QAAQ,CAACr+E,QAAQ,EAAEq+E,QAAQ,CAAC9nF,UAAU,EAAE8nF,QAAQ,CAAC30F,KAAK,CAAE;YAEpF;YAEA,IAAK25F,mBAAmB,KAAK,IAAI,EAAG;cAEnChF,QAAQ,CAAC7E,OAAO,CAAC5uG,IAAI,CAAEixB,MAAM,CAAE;YAEhC;UAED;QAED;;QAEA;;QAEA,KAAM,IAAIzwB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG4yG,WAAW,CAAC7yG,MAAM,EAAEC,IAAC,EAAG,EAAG;UAE/C,IAAM0vG,WAAW,GAAGmD,sBAAsB,CAAE7yG,IAAC,CAAE;UAC/C,IAAMuzG,UAAU,GAAGX,WAAW,CAAE5yG,IAAC,CAAE;UAEnC,IAAK0vG,WAAW,KAAK,IAAI,IAAI6D,UAAU,KAAK90G,SAAS,EAAG;YAEvD80G,UAAU,CAACjoF,MAAM,CAAEokF,WAAW,EAAEtjD,KAAK,EAAE+lD,oBAAoB,IAAIlC,cAAc,CAAE;UAEhF;QAED;QAEA,IAAK4H,wBAAwB,EAAGA,wBAAwB,CAAE1rD,IAAI,EAAEC,KAAK,CAAE;QAEvE,IAAKA,KAAK,CAACksD,cAAc,EAAG;UAE3Bj3D,KAAK,CAAC7wC,aAAa,CAAE;YAAExU,IAAI,EAAE,gBAAgB;YAAEqmB,IAAI,EAAE+pC,KAAK,CAACksD;UAAe,CAAC,CAAE;UAE7E,IAAIC,cAAc,GAAG,IAAI;UAAC,IAAAC,UAAA,GAAAzxB,0BAAA,CAELx8B,MAAM;YAAAkuD,MAAA;UAAA;YAA3B,KAAAD,UAAA,CAAA9kG,CAAA,MAAA+kG,MAAA,GAAAD,UAAA,CAAA1mG,CAAA,IAAAvT,IAAA,GAA8B;cAAA,IAAlB+2B,MAAK,GAAAmjF,MAAA,CAAAt+G,KAAA;cAEhB,IAAK,CAAEiyD,KAAK,CAACksD,cAAc,CAAClyC,GAAG,CAAE9wC,MAAK,CAAE,EAAG;gBAE1C,IAAKijF,cAAc,KAAK,IAAI,EAAG;kBAE9BA,cAAc,GAAG,EAAE;gBAEpB;gBAEAA,cAAc,CAAC/4G,IAAI,CAAE81B,MAAK,CAAE;cAE7B;YAED;UAAC,SAAAt6B,GAAA;YAAAw9G,UAAA,CAAA9gG,CAAA,CAAA1c,GAAA;UAAA;YAAAw9G,UAAA,CAAAz7F,CAAA;UAAA;UAED,IAAKw7F,cAAc,KAAK,IAAI,EAAG;YAAA,IAAAG,UAAA,GAAA3xB,0BAAA,CAETwxB,cAAc;cAAAI,MAAA;YAAA;cAAnC,KAAAD,UAAA,CAAAhlG,CAAA,MAAAilG,MAAA,GAAAD,UAAA,CAAA5mG,CAAA,IAAAvT,IAAA,GAAsC;gBAAA,IAA1B+2B,KAAK,GAAAqjF,MAAA,CAAAx+G,KAAA;gBAEhBowD,MAAM,CAAC0D,MAAM,CAAE34B,KAAK,CAAE;gBACtBw9E,sBAAsB,CAAC7kD,MAAM,CAAE34B,KAAK,CAAE;gBACtC+rB,KAAK,CAAC7wC,aAAa,CAAE;kBAAExU,IAAI,EAAE,cAAc;kBAAEqmB,IAAI,EAAEiT;gBAAM,CAAC,CAAE;cAE7D;YAAC,SAAAt6B,GAAA;cAAA09G,UAAA,CAAAhhG,CAAA,CAAA1c,GAAA;YAAA;cAAA09G,UAAA,CAAA37F,CAAA;YAAA;UAEF;UAAC,IAAA67F,UAAA,GAAA7xB,0BAAA,CAEoB36B,KAAK,CAACksD,cAAc;YAAAO,MAAA;UAAA;YAAzC,KAAAD,UAAA,CAAAllG,CAAA,MAAAmlG,MAAA,GAAAD,UAAA,CAAA9mG,CAAA,IAAAvT,IAAA,GAA4C;cAAA,IAAhC+2B,OAAK,GAAAujF,MAAA,CAAA1+G,KAAA;cAEhB,IAAK,CAAEowD,MAAM,CAAC6b,GAAG,CAAE9wC,OAAK,CAAE,EAAG;gBAE5Bi1B,MAAM,CAACzzC,GAAG,CAAEwe,OAAK,CAAE;gBACnBw9E,sBAAsB,CAACv9F,GAAG,CAAE+f,OAAK,EAAE82B,KAAK,CAAC0sD,eAAe,CAAE;gBAC1Dz3D,KAAK,CAAC7wC,aAAa,CAAE;kBAAExU,IAAI,EAAE,YAAY;kBAAEqmB,IAAI,EAAEiT;gBAAM,CAAC,CAAE;cAE3D,CAAC,MAAM;gBAEN,IAAMyjF,aAAa,GAAGjG,sBAAsB,CAAC18F,GAAG,CAAEkf,OAAK,CAAE;gBAEzD,IAAKA,OAAK,CAACwjF,eAAe,GAAGC,aAAa,EAAG;kBAE5CjG,sBAAsB,CAACv9F,GAAG,CAAE+f,OAAK,EAAEA,OAAK,CAACwjF,eAAe,CAAE;kBAC1Dz3D,KAAK,CAAC7wC,aAAa,CAAE;oBAAExU,IAAI,EAAE,cAAc;oBAAEqmB,IAAI,EAAEiT;kBAAM,CAAC,CAAE;gBAE7D;cAED;YAED;UAAC,SAAAt6B,GAAA;YAAA49G,UAAA,CAAAlhG,CAAA,CAAA1c,GAAA;UAAA;YAAA49G,UAAA,CAAA77F,CAAA;UAAA;QAEF;QAEAy1F,OAAO,GAAG,IAAI;MAEf;MAEA,IAAMzqE,SAAS,GAAG,IAAI+jB,cAAc,EAAE;MAEtC/jB,SAAS,CAACwkB,gBAAgB,CAAEL,gBAAgB,CAAE;MAE9C6lD,OAAA,CAAKxlD,gBAAgB,GAAG,UAAWt+B,QAAQ,EAAG;QAE7C4pF,wBAAwB,GAAG5pF,QAAQ;MAEpC,CAAC;MAED8jF,OAAA,CAAKlsF,OAAO,GAAG,YAAY,CAAC,CAAC;MAAC,OAAAksF,OAAA;IAE/B;IAAC,OAAAhvG,YAAA,CAAA6uG,YAAA;EAAA,EAnyByB/hG,eAAe;EAuyB1C,SAASmpG,cAAcA,CAAEj2D,QAAQ,EAAE0Y,UAAU,EAAG;IAE/C,SAASw9C,uBAAuBA,CAAExpE,GAAG,EAAEgV,OAAO,EAAG;MAEhD,IAAKhV,GAAG,CAAC5qB,gBAAgB,KAAK,IAAI,EAAG;QAEpC4qB,GAAG,CAACnqB,YAAY,EAAE;MAEnB;MAEAm/B,OAAO,CAACtqD,KAAK,CAACyc,IAAI,CAAE64B,GAAG,CAAC5wB,MAAM,CAAE;IAEjC;IAEA,SAASq6F,kBAAkBA,CAAEv2D,QAAQ,EAAEvQ,GAAG,EAAG;MAE5CA,GAAG,CAACvyB,KAAK,CAACq0B,MAAM,CAAEyO,QAAQ,CAAC0Y,QAAQ,CAAClhE,KAAK,EAAE2oD,yBAAyB,CAAEC,QAAQ,CAAE,CAAE;MAElF,IAAK3Q,GAAG,CAAC+mE,KAAK,EAAG;QAEhBx2D,QAAQ,CAACwY,OAAO,CAAChhE,KAAK,GAAGi4C,GAAG,CAACvS,IAAI;QACjC8iB,QAAQ,CAACyY,MAAM,CAACjhE,KAAK,GAAGi4C,GAAG,CAACtS,GAAG;MAEhC,CAAC,MAAM,IAAKsS,GAAG,CAACk5C,SAAS,EAAG;QAE3B3oC,QAAQ,CAACuY,UAAU,CAAC/gE,KAAK,GAAGi4C,GAAG,CAACgnE,OAAO;MAExC;IAED;IAEA,SAASC,uBAAuBA,CAAE12D,QAAQ,EAAE9a,QAAQ,EAAEyxE,UAAU,EAAE53F,MAAM,EAAE63F,wBAAwB,EAAG;MAEpG,IAAK1xE,QAAQ,CAACoN,mBAAmB,EAAG;QAEnCukE,qBAAqB,CAAE72D,QAAQ,EAAE9a,QAAQ,CAAE;MAE5C,CAAC,MAAM,IAAKA,QAAQ,CAAC4xE,qBAAqB,EAAG;QAE5CD,qBAAqB,CAAE72D,QAAQ,EAAE9a,QAAQ,CAAE;MAE5C,CAAC,MAAM,IAAKA,QAAQ,CAAC6xE,kBAAkB,EAAG;QAEzCF,qBAAqB,CAAE72D,QAAQ,EAAE9a,QAAQ,CAAE;QAC3C8xE,mBAAmB,CAAEh3D,QAAQ,EAAE9a,QAAQ,CAAE;MAE1C,CAAC,MAAM,IAAKA,QAAQ,CAAC+xE,mBAAmB,EAAG;QAE1CJ,qBAAqB,CAAE72D,QAAQ,EAAE9a,QAAQ,CAAE;QAC3CgyE,oBAAoB,CAAEl3D,QAAQ,EAAE9a,QAAQ,CAAE;MAE3C,CAAC,MAAM,IAAKA,QAAQ,CAACkhD,sBAAsB,EAAG;QAE7CywB,qBAAqB,CAAE72D,QAAQ,EAAE9a,QAAQ,CAAE;QAC3CiyE,uBAAuB,CAAEn3D,QAAQ,EAAE9a,QAAQ,CAAE;QAE7C,IAAKA,QAAQ,CAACkyE,sBAAsB,EAAG;UAEtCC,uBAAuB,CAAEr3D,QAAQ,EAAE9a,QAAQ,EAAE0xE,wBAAwB,CAAE;QAExE;MAED,CAAC,MAAM,IAAK1xE,QAAQ,CAACoyE,oBAAoB,EAAG;QAE3CT,qBAAqB,CAAE72D,QAAQ,EAAE9a,QAAQ,CAAE;QAC3CqyE,qBAAqB,CAAEv3D,QAAQ,EAAE9a,QAAQ,CAAE;MAE5C,CAAC,MAAM,IAAKA,QAAQ,CAAC6pD,mBAAmB,EAAG;QAE1C8nB,qBAAqB,CAAE72D,QAAQ,EAAE9a,QAAQ,CAAE;MAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACiqD,sBAAsB,EAAG;QAE7C0nB,qBAAqB,CAAE72D,QAAQ,EAAE9a,QAAQ,CAAE;QAC3CsyE,uBAAuB,CAAEx3D,QAAQ,EAAE9a,QAAQ,CAAE;MAE9C,CAAC,MAAM,IAAKA,QAAQ,CAACuyE,oBAAoB,EAAG;QAE3CZ,qBAAqB,CAAE72D,QAAQ,EAAE9a,QAAQ,CAAE;MAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACwyE,mBAAmB,EAAG;QAE1CC,mBAAmB,CAAE33D,QAAQ,EAAE9a,QAAQ,CAAE;QAEzC,IAAKA,QAAQ,CAAC0yE,oBAAoB,EAAG;UAEpCC,mBAAmB,CAAE73D,QAAQ,EAAE9a,QAAQ,CAAE;QAE1C;MAED,CAAC,MAAM,IAAKA,QAAQ,CAAC4yE,gBAAgB,EAAG;QAEvCC,qBAAqB,CAAE/3D,QAAQ,EAAE9a,QAAQ,EAAEyxE,UAAU,EAAE53F,MAAM,CAAE;MAEhE,CAAC,MAAM,IAAKmmB,QAAQ,CAAC8yE,gBAAgB,EAAG;QAEvCC,sBAAsB,CAAEj4D,QAAQ,EAAE9a,QAAQ,CAAE;MAE7C,CAAC,MAAM,IAAKA,QAAQ,CAACgzE,gBAAgB,EAAG;QAEvCl4D,QAAQ,CAAC9iC,KAAK,CAAC1lB,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAAChoB,KAAK,CAAE;QAC3C8iC,QAAQ,CAAClX,OAAO,CAACtxC,KAAK,GAAG0tC,QAAQ,CAAC4D,OAAO;MAE1C,CAAC,MAAM,IAAK5D,QAAQ,CAAC4b,gBAAgB,EAAG;QAEvC5b,QAAQ,CAAC0c,kBAAkB,GAAG,KAAK,CAAC,CAAC;MAEtC;IAED;;IAEA,SAASi1D,qBAAqBA,CAAE72D,QAAQ,EAAE9a,QAAQ,EAAG;MAEpD8a,QAAQ,CAAClX,OAAO,CAACtxC,KAAK,GAAG0tC,QAAQ,CAAC4D,OAAO;MAEzC,IAAK5D,QAAQ,CAAChoB,KAAK,EAAG;QAErB8iC,QAAQ,CAAC8W,OAAO,CAACt/D,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAAChoB,KAAK,CAAE;MAE9C;MAEA,IAAKgoB,QAAQ,CAAC2G,QAAQ,EAAG;QAExBmU,QAAQ,CAACnU,QAAQ,CAACr0C,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAAC2G,QAAQ,CAAE,CAACl3B,cAAc,CAAEuwB,QAAQ,CAAC4G,iBAAiB,CAAE;MAE/F;MAEA,IAAK5G,QAAQ,CAAC4H,GAAG,EAAG;QAEnBkT,QAAQ,CAAClT,GAAG,CAACt1C,KAAK,GAAG0tC,QAAQ,CAAC4H,GAAG;QAEjCwpE,uBAAuB,CAAEpxE,QAAQ,CAAC4H,GAAG,EAAEkT,QAAQ,CAAC+W,YAAY,CAAE;MAE/D;MAEA,IAAK7xB,QAAQ,CAAC8H,QAAQ,EAAG;QAExBgT,QAAQ,CAAChT,QAAQ,CAACx1C,KAAK,GAAG0tC,QAAQ,CAAC8H,QAAQ;QAE3CspE,uBAAuB,CAAEpxE,QAAQ,CAAC8H,QAAQ,EAAEgT,QAAQ,CAACgX,iBAAiB,CAAE;MAEzE;MAEA,IAAK9xB,QAAQ,CAACmI,OAAO,EAAG;QAEvB2S,QAAQ,CAAC3S,OAAO,CAAC71C,KAAK,GAAG0tC,QAAQ,CAACmI,OAAO;QAEzCipE,uBAAuB,CAAEpxE,QAAQ,CAACmI,OAAO,EAAE2S,QAAQ,CAAC2X,gBAAgB,CAAE;QAEtE3X,QAAQ,CAAC1S,SAAS,CAAC91C,KAAK,GAAG0tC,QAAQ,CAACoI,SAAS;QAE7C,IAAKpI,QAAQ,CAAC0D,IAAI,KAAK/lC,QAAQ,EAAG;UAEjCm9C,QAAQ,CAAC1S,SAAS,CAAC91C,KAAK,IAAI,CAAE,CAAC;QAEhC;MAED;MAEA,IAAK0tC,QAAQ,CAACqI,SAAS,EAAG;QAEzByS,QAAQ,CAACzS,SAAS,CAAC/1C,KAAK,GAAG0tC,QAAQ,CAACqI,SAAS;QAE7C+oE,uBAAuB,CAAEpxE,QAAQ,CAACqI,SAAS,EAAEyS,QAAQ,CAAC6X,kBAAkB,CAAE;QAE1E7X,QAAQ,CAACvS,WAAW,CAACj2C,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAACuI,WAAW,CAAE;QAEvD,IAAKvI,QAAQ,CAAC0D,IAAI,KAAK/lC,QAAQ,EAAG;UAEjCm9C,QAAQ,CAACvS,WAAW,CAACj2C,KAAK,CAAC8d,MAAM,EAAE;QAEpC;MAED;MAEA,IAAK4vB,QAAQ,CAACwI,eAAe,EAAG;QAE/BsS,QAAQ,CAACtS,eAAe,CAACl2C,KAAK,GAAG0tC,QAAQ,CAACwI,eAAe;QAEzD4oE,uBAAuB,CAAEpxE,QAAQ,CAACwI,eAAe,EAAEsS,QAAQ,CAAC+X,wBAAwB,CAAE;QAEtF/X,QAAQ,CAACrS,iBAAiB,CAACn2C,KAAK,GAAG0tC,QAAQ,CAACyI,iBAAiB;QAC7DqS,QAAQ,CAACpS,gBAAgB,CAACp2C,KAAK,GAAG0tC,QAAQ,CAAC0I,gBAAgB;MAE5D;MAEA,IAAK1I,QAAQ,CAAC6I,WAAW,EAAG;QAE3BiS,QAAQ,CAACjS,WAAW,CAACv2C,KAAK,GAAG0tC,QAAQ,CAAC6I,WAAW;QAEjDuoE,uBAAuB,CAAEpxE,QAAQ,CAAC6I,WAAW,EAAEiS,QAAQ,CAACiY,oBAAoB,CAAE;MAE/E;MAEA,IAAK/yB,QAAQ,CAAC8I,WAAW,EAAG;QAE3BgS,QAAQ,CAAChS,WAAW,CAACx2C,KAAK,GAAG0tC,QAAQ,CAAC8I,WAAW;QAEjDsoE,uBAAuB,CAAEpxE,QAAQ,CAAC8I,WAAW,EAAEgS,QAAQ,CAACkX,oBAAoB,CAAE;MAE/E;MAEA,IAAKhyB,QAAQ,CAACiK,SAAS,GAAG,CAAC,EAAG;QAE7B6Q,QAAQ,CAAC7Q,SAAS,CAAC33C,KAAK,GAAG0tC,QAAQ,CAACiK,SAAS;MAE9C;MAEA,IAAMhB,MAAM,GAAG2qB,UAAU,CAACrlD,GAAG,CAAEyxB,QAAQ,CAAE,CAACiJ,MAAM;MAEhD,IAAKA,MAAM,EAAG;QAEb6R,QAAQ,CAAC7R,MAAM,CAAC32C,KAAK,GAAG22C,MAAM;QAE9B6R,QAAQ,CAACoX,UAAU,CAAC5/D,KAAK,GAAK22C,MAAM,CAACsX,aAAa,IAAItX,MAAM,CAAC1rB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;QAExGu9B,QAAQ,CAAC1R,YAAY,CAAC92C,KAAK,GAAG0tC,QAAQ,CAACoJ,YAAY;QACnD0R,QAAQ,CAACqX,GAAG,CAAC7/D,KAAK,GAAG0tC,QAAQ,CAACmyB,GAAG;QACjCrX,QAAQ,CAACzR,eAAe,CAAC/2C,KAAK,GAAG0tC,QAAQ,CAACqJ,eAAe;MAE1D;MAEA,IAAKrJ,QAAQ,CAAC+H,QAAQ,EAAG;QAExB+S,QAAQ,CAAC/S,QAAQ,CAACz1C,KAAK,GAAG0tC,QAAQ,CAAC+H,QAAQ;;QAE3C;QACA,IAAMy/C,WAAW,GAAKtsC,QAAQ,CAACqhC,eAAe,KAAK,IAAI,GAAKrzE,IAAI,CAACC,EAAE,GAAG,CAAC;QAEvE2xC,QAAQ,CAAC9S,iBAAiB,CAAC11C,KAAK,GAAG0tC,QAAQ,CAACgI,iBAAiB,GAAGw/C,WAAW;QAE3E4pB,uBAAuB,CAAEpxE,QAAQ,CAAC+H,QAAQ,EAAE+S,QAAQ,CAACyX,iBAAiB,CAAE;MAEzE;MAEA,IAAKvyB,QAAQ,CAACiI,KAAK,EAAG;QAErB6S,QAAQ,CAAC7S,KAAK,CAAC31C,KAAK,GAAG0tC,QAAQ,CAACiI,KAAK;QACrC6S,QAAQ,CAAC5S,cAAc,CAAC51C,KAAK,GAAG0tC,QAAQ,CAACkI,cAAc;QAEvDkpE,uBAAuB,CAAEpxE,QAAQ,CAACiI,KAAK,EAAE6S,QAAQ,CAACuX,cAAc,CAAE;MAEnE;IAED;IAEA,SAASogD,mBAAmBA,CAAE33D,QAAQ,EAAE9a,QAAQ,EAAG;MAElD8a,QAAQ,CAAC8W,OAAO,CAACt/D,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAAChoB,KAAK,CAAE;MAC7C8iC,QAAQ,CAAClX,OAAO,CAACtxC,KAAK,GAAG0tC,QAAQ,CAAC4D,OAAO;MAEzC,IAAK5D,QAAQ,CAAC4H,GAAG,EAAG;QAEnBkT,QAAQ,CAAClT,GAAG,CAACt1C,KAAK,GAAG0tC,QAAQ,CAAC4H,GAAG;QAEjCwpE,uBAAuB,CAAEpxE,QAAQ,CAAC4H,GAAG,EAAEkT,QAAQ,CAAC+W,YAAY,CAAE;MAE/D;IAED;IAEA,SAAS8gD,mBAAmBA,CAAE73D,QAAQ,EAAE9a,QAAQ,EAAG;MAElD8a,QAAQ,CAAC/Q,QAAQ,CAACz3C,KAAK,GAAG0tC,QAAQ,CAAC+J,QAAQ;MAC3C+Q,QAAQ,CAACkb,SAAS,CAAC1jE,KAAK,GAAG0tC,QAAQ,CAAC+J,QAAQ,GAAG/J,QAAQ,CAACgK,OAAO;MAC/D8Q,QAAQ,CAACrkC,KAAK,CAACnkB,KAAK,GAAG0tC,QAAQ,CAACvpB,KAAK;IAEtC;IAEA,SAASo8F,qBAAqBA,CAAE/3D,QAAQ,EAAE9a,QAAQ,EAAEyxE,UAAU,EAAE53F,MAAM,EAAG;MAExEihC,QAAQ,CAAC8W,OAAO,CAACt/D,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAAChoB,KAAK,CAAE;MAC7C8iC,QAAQ,CAAClX,OAAO,CAACtxC,KAAK,GAAG0tC,QAAQ,CAAC4D,OAAO;MACzCkX,QAAQ,CAACnvB,IAAI,CAACr5B,KAAK,GAAG0tC,QAAQ,CAACrU,IAAI,GAAG8lF,UAAU;MAChD32D,QAAQ,CAACrkC,KAAK,CAACnkB,KAAK,GAAGunB,MAAM,GAAG,GAAG;MAEnC,IAAKmmB,QAAQ,CAAC4H,GAAG,EAAG;QAEnBkT,QAAQ,CAAClT,GAAG,CAACt1C,KAAK,GAAG0tC,QAAQ,CAAC4H,GAAG;QAEjCwpE,uBAAuB,CAAEpxE,QAAQ,CAAC4H,GAAG,EAAEkT,QAAQ,CAAC0a,WAAW,CAAE;MAE9D;MAEA,IAAKx1B,QAAQ,CAAC8H,QAAQ,EAAG;QAExBgT,QAAQ,CAAChT,QAAQ,CAACx1C,KAAK,GAAG0tC,QAAQ,CAAC8H,QAAQ;MAE5C;MAEA,IAAK9H,QAAQ,CAACiK,SAAS,GAAG,CAAC,EAAG;QAE7B6Q,QAAQ,CAAC7Q,SAAS,CAAC33C,KAAK,GAAG0tC,QAAQ,CAACiK,SAAS;MAE9C;IAED;IAEA,SAAS8oE,sBAAsBA,CAAEj4D,QAAQ,EAAE9a,QAAQ,EAAG;MAErD8a,QAAQ,CAAC8W,OAAO,CAACt/D,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAAChoB,KAAK,CAAE;MAC7C8iC,QAAQ,CAAClX,OAAO,CAACtxC,KAAK,GAAG0tC,QAAQ,CAAC4D,OAAO;MACzCkX,QAAQ,CAACxkC,QAAQ,CAAChkB,KAAK,GAAG0tC,QAAQ,CAAC1pB,QAAQ;MAE3C,IAAK0pB,QAAQ,CAAC4H,GAAG,EAAG;QAEnBkT,QAAQ,CAAClT,GAAG,CAACt1C,KAAK,GAAG0tC,QAAQ,CAAC4H,GAAG;QAEjCwpE,uBAAuB,CAAEpxE,QAAQ,CAAC4H,GAAG,EAAEkT,QAAQ,CAAC+W,YAAY,CAAE;MAE/D;MAEA,IAAK7xB,QAAQ,CAAC8H,QAAQ,EAAG;QAExBgT,QAAQ,CAAChT,QAAQ,CAACx1C,KAAK,GAAG0tC,QAAQ,CAAC8H,QAAQ;MAE5C;MAEA,IAAK9H,QAAQ,CAACiK,SAAS,GAAG,CAAC,EAAG;QAE7B6Q,QAAQ,CAAC7Q,SAAS,CAAC33C,KAAK,GAAG0tC,QAAQ,CAACiK,SAAS;MAE9C;IAED;IAEA,SAAS+nE,oBAAoBA,CAAEl3D,QAAQ,EAAE9a,QAAQ,EAAG;MAEnD8a,QAAQ,CAACjU,QAAQ,CAACv0C,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAAC6G,QAAQ,CAAE;MACjDiU,QAAQ,CAAC9T,SAAS,CAAC10C,KAAK,GAAG4W,IAAI,CAACa,GAAG,CAAEi2B,QAAQ,CAACgH,SAAS,EAAE,IAAI,CAAE,CAAC,CAAC;IAElE;;IAEA,SAAS8qE,mBAAmBA,CAAEh3D,QAAQ,EAAE9a,QAAQ,EAAG;MAElD,IAAKA,QAAQ,CAACsJ,WAAW,EAAG;QAE3BwR,QAAQ,CAACxR,WAAW,CAACh3C,KAAK,GAAG0tC,QAAQ,CAACsJ,WAAW;MAElD;IAED;IAEA,SAAS2oE,uBAAuBA,CAAEn3D,QAAQ,EAAE9a,QAAQ,EAAG;MAEtD8a,QAAQ,CAACvU,SAAS,CAACj0C,KAAK,GAAG0tC,QAAQ,CAACuG,SAAS;MAE7C,IAAKvG,QAAQ,CAAC4I,YAAY,EAAG;QAE5BkS,QAAQ,CAAClS,YAAY,CAACt2C,KAAK,GAAG0tC,QAAQ,CAAC4I,YAAY;QAEnDwoE,uBAAuB,CAAEpxE,QAAQ,CAAC4I,YAAY,EAAEkS,QAAQ,CAACmY,qBAAqB,CAAE;MAEjF;MAEAnY,QAAQ,CAACxU,SAAS,CAACh0C,KAAK,GAAG0tC,QAAQ,CAACsG,SAAS;MAE7C,IAAKtG,QAAQ,CAAC2I,YAAY,EAAG;QAE5BmS,QAAQ,CAACnS,YAAY,CAACr2C,KAAK,GAAG0tC,QAAQ,CAAC2I,YAAY;QAEnDyoE,uBAAuB,CAAEpxE,QAAQ,CAAC2I,YAAY,EAAEmS,QAAQ,CAACqY,qBAAqB,CAAE;MAEjF;MAEA,IAAMlqB,MAAM,GAAG2qB,UAAU,CAACrlD,GAAG,CAAEyxB,QAAQ,CAAE,CAACiJ,MAAM;MAEhD,IAAKA,MAAM,EAAG;QAEb;QACA6R,QAAQ,CAAC3R,eAAe,CAAC72C,KAAK,GAAG0tC,QAAQ,CAACmJ,eAAe;MAE1D;IAED;IAEA,SAASgpE,uBAAuBA,CAAEr3D,QAAQ,EAAE9a,QAAQ,EAAE0xE,wBAAwB,EAAG;MAEhF52D,QAAQ,CAACqX,GAAG,CAAC7/D,KAAK,GAAG0tC,QAAQ,CAACmyB,GAAG,CAAC,CAAC;;MAEnC,IAAKnyB,QAAQ,CAACwG,KAAK,GAAG,CAAC,EAAG;QAEzBsU,QAAQ,CAACrU,UAAU,CAACn0C,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAACyG,UAAU,CAAE,CAACh3B,cAAc,CAAEuwB,QAAQ,CAACwG,KAAK,CAAE;QAEtFsU,QAAQ,CAACpU,cAAc,CAACp0C,KAAK,GAAG0tC,QAAQ,CAAC0G,cAAc;QAEvD,IAAK1G,QAAQ,CAACs3B,aAAa,EAAG;UAE7Bxc,QAAQ,CAACwc,aAAa,CAAChlE,KAAK,GAAG0tC,QAAQ,CAACs3B,aAAa;UAErD85C,uBAAuB,CAAEpxE,QAAQ,CAACs3B,aAAa,EAAExc,QAAQ,CAACyc,sBAAsB,CAAE;QAEnF;QAEA,IAAKv3B,QAAQ,CAACw3B,iBAAiB,EAAG;UAEjC1c,QAAQ,CAAC0c,iBAAiB,CAACllE,KAAK,GAAG0tC,QAAQ,CAACw3B,iBAAiB;UAE7D45C,uBAAuB,CAAEpxE,QAAQ,CAACw3B,iBAAiB,EAAE1c,QAAQ,CAAC2c,0BAA0B,CAAE;QAE3F;MAED;MAEA,IAAKz3B,QAAQ,CAACiH,SAAS,GAAG,CAAC,EAAG;QAE7B6T,QAAQ,CAAC7T,SAAS,CAAC30C,KAAK,GAAG0tC,QAAQ,CAACiH,SAAS;QAC7C6T,QAAQ,CAAC5T,kBAAkB,CAAC50C,KAAK,GAAG0tC,QAAQ,CAACkH,kBAAkB;QAE/D,IAAKlH,QAAQ,CAACmH,YAAY,EAAG;UAE5B2T,QAAQ,CAAC3T,YAAY,CAAC70C,KAAK,GAAG0tC,QAAQ,CAACmH,YAAY;UAEnDiqE,uBAAuB,CAAEpxE,QAAQ,CAACmH,YAAY,EAAE2T,QAAQ,CAACic,qBAAqB,CAAE;QAEjF;QAEA,IAAK/2B,QAAQ,CAACoH,qBAAqB,EAAG;UAErC0T,QAAQ,CAAC1T,qBAAqB,CAAC90C,KAAK,GAAG0tC,QAAQ,CAACoH,qBAAqB;UAErEgqE,uBAAuB,CAAEpxE,QAAQ,CAACoH,qBAAqB,EAAE0T,QAAQ,CAACmc,8BAA8B,CAAE;QAEnG;QAEA,IAAKj3B,QAAQ,CAACqH,kBAAkB,EAAG;UAElCyT,QAAQ,CAACzT,kBAAkB,CAAC/0C,KAAK,GAAG0tC,QAAQ,CAACqH,kBAAkB;UAE/D+pE,uBAAuB,CAAEpxE,QAAQ,CAACqH,kBAAkB,EAAEyT,QAAQ,CAACkc,2BAA2B,CAAE;UAE5Flc,QAAQ,CAACxT,oBAAoB,CAACh1C,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAACsH,oBAAoB,CAAE;UAEzE,IAAKtH,QAAQ,CAAC0D,IAAI,KAAK/lC,QAAQ,EAAG;YAEjCm9C,QAAQ,CAACxT,oBAAoB,CAACh1C,KAAK,CAAC8d,MAAM,EAAE;UAE7C;QAED;MAED;MAEA,IAAK4vB,QAAQ,CAACuH,WAAW,GAAG,CAAC,EAAG;QAE/BuT,QAAQ,CAACvT,WAAW,CAACj1C,KAAK,GAAG0tC,QAAQ,CAACuH,WAAW;QACjDuT,QAAQ,CAACtT,cAAc,CAACl1C,KAAK,GAAG0tC,QAAQ,CAACwH,cAAc;QACvDsT,QAAQ,CAACqc,2BAA2B,CAAC7kE,KAAK,GAAG0tC,QAAQ,CAACyH,yBAAyB,CAAE,CAAC,CAAE;QACpFqT,QAAQ,CAACsc,2BAA2B,CAAC9kE,KAAK,GAAG0tC,QAAQ,CAACyH,yBAAyB,CAAE,CAAC,CAAE;QAEpF,IAAKzH,QAAQ,CAAC0H,cAAc,EAAG;UAE9BoT,QAAQ,CAACpT,cAAc,CAACp1C,KAAK,GAAG0tC,QAAQ,CAAC0H,cAAc;UAEvD0pE,uBAAuB,CAAEpxE,QAAQ,CAAC0H,cAAc,EAAEoT,QAAQ,CAACoc,uBAAuB,CAAE;QAErF;QAEA,IAAKl3B,QAAQ,CAAC2H,uBAAuB,EAAG;UAEvCmT,QAAQ,CAACnT,uBAAuB,CAACr1C,KAAK,GAAG0tC,QAAQ,CAAC2H,uBAAuB;UAEzEypE,uBAAuB,CAAEpxE,QAAQ,CAAC2H,uBAAuB,EAAEmT,QAAQ,CAACuc,gCAAgC,CAAE;QAEvG;MAED;MAEA,IAAKr3B,QAAQ,CAACuJ,YAAY,GAAG,CAAC,EAAG;QAEhCuR,QAAQ,CAACvR,YAAY,CAACj3C,KAAK,GAAG0tC,QAAQ,CAACuJ,YAAY;QACnDuR,QAAQ,CAAC8c,sBAAsB,CAACtlE,KAAK,GAAGo/G,wBAAwB,CAAC/wF,OAAO;QACxEm6B,QAAQ,CAAC6c,uBAAuB,CAACrlE,KAAK,CAACob,GAAG,CAAEgkG,wBAAwB,CAAC93F,KAAK,EAAE83F,wBAAwB,CAAC73F,MAAM,CAAE;QAE7G,IAAKmmB,QAAQ,CAACwJ,eAAe,EAAG;UAE/BsR,QAAQ,CAACtR,eAAe,CAACl3C,KAAK,GAAG0tC,QAAQ,CAACwJ,eAAe;UAEzD4nE,uBAAuB,CAAEpxE,QAAQ,CAACwJ,eAAe,EAAEsR,QAAQ,CAAC4c,wBAAwB,CAAE;QAEvF;QAEA5c,QAAQ,CAACrR,SAAS,CAACn3C,KAAK,GAAG0tC,QAAQ,CAACyJ,SAAS;QAE7C,IAAKzJ,QAAQ,CAAC0J,YAAY,EAAG;UAE5BoR,QAAQ,CAACpR,YAAY,CAACp3C,KAAK,GAAG0tC,QAAQ,CAAC0J,YAAY;UAEnD0nE,uBAAuB,CAAEpxE,QAAQ,CAAC0J,YAAY,EAAEoR,QAAQ,CAAC+c,qBAAqB,CAAE;QAEjF;QAEA/c,QAAQ,CAACnR,mBAAmB,CAACr3C,KAAK,GAAG0tC,QAAQ,CAAC2J,mBAAmB;QACjEmR,QAAQ,CAAClR,gBAAgB,CAACt3C,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAAC4J,gBAAgB,CAAE;MAElE;MAEAkR,QAAQ,CAAChU,iBAAiB,CAACx0C,KAAK,GAAG0tC,QAAQ,CAAC8G,iBAAiB;MAC7DgU,QAAQ,CAAC/T,aAAa,CAACz0C,KAAK,CAACyc,IAAI,CAAEixB,QAAQ,CAAC+G,aAAa,CAAE;MAE3D,IAAK/G,QAAQ,CAACgJ,gBAAgB,EAAG;QAEhC8R,QAAQ,CAAC9R,gBAAgB,CAAC12C,KAAK,GAAG0tC,QAAQ,CAACgJ,gBAAgB;QAE3DooE,uBAAuB,CAAEpxE,QAAQ,CAACgJ,gBAAgB,EAAE8R,QAAQ,CAACgd,yBAAyB,CAAE;MAEzF;MAEA,IAAK93B,QAAQ,CAAC+I,oBAAoB,EAAG;QAEpC+R,QAAQ,CAAC/R,oBAAoB,CAACz2C,KAAK,GAAG0tC,QAAQ,CAAC+I,oBAAoB;QAEnEqoE,uBAAuB,CAAEpxE,QAAQ,CAAC+I,oBAAoB,EAAE+R,QAAQ,CAACid,6BAA6B,CAAE;MAEjG;IAED;IAEA,SAASs6C,qBAAqBA,CAAEv3D,QAAQ,EAAE9a,QAAQ,EAAG;MAEpD,IAAKA,QAAQ,CAAC6H,MAAM,EAAG;QAEtBiT,QAAQ,CAACjT,MAAM,CAACv1C,KAAK,GAAG0tC,QAAQ,CAAC6H,MAAM;MAExC;IAED;IAEA,SAASyqE,uBAAuBA,CAAEx3D,QAAQ,EAAE9a,QAAQ,EAAG;MAEtD,IAAM0lD,KAAK,GAAG9xB,UAAU,CAACrlD,GAAG,CAAEyxB,QAAQ,CAAE,CAAC0lD,KAAK;MAE9C5qC,QAAQ,CAAC4b,iBAAiB,CAACpkE,KAAK,CAACk4B,qBAAqB,CAAEk7D,KAAK,CAACz8D,WAAW,CAAE;MAC3E6xB,QAAQ,CAAC6b,YAAY,CAACrkE,KAAK,GAAGozF,KAAK,CAAC7uB,MAAM,CAACjuC,MAAM,CAACoP,IAAI;MACtD8iB,QAAQ,CAAC8b,WAAW,CAACtkE,KAAK,GAAGozF,KAAK,CAAC7uB,MAAM,CAACjuC,MAAM,CAACqP,GAAG;IAErD;IAEA,OAAO;MACNo5E,kBAAkB,EAAEA,kBAAkB;MACtCG,uBAAuB,EAAEA;IAC1B,CAAC;EAEF;EAEA,SAASyB,mBAAmBA,CAAEpuD,EAAE,EAAE9tD,IAAI,EAAE+tD,YAAY,EAAE9uD,KAAK,EAAG;IAE7D,IAAIgvD,OAAO,GAAG,CAAC,CAAC;IAChB,IAAIkuD,UAAU,GAAG,CAAC,CAAC;IACnB,IAAIC,sBAAsB,GAAG,EAAE;IAE/B,IAAMC,gBAAgB,GAAKtuD,YAAY,CAACC,QAAQ,GAAKF,EAAE,CAAC13B,YAAY,CAAE03B,EAAE,CAACwuD,2BAA2B,CAAE,GAAG,CAAC,CAAC,CAAC;;IAE5G,SAASC,IAAIA,CAAE/b,aAAa,EAAEh9B,OAAO,EAAG;MAEvC,IAAMg5C,YAAY,GAAGh5C,OAAO,CAACA,OAAO;MACpCvkE,KAAK,CAAC0hG,mBAAmB,CAAEH,aAAa,EAAEgc,YAAY,CAAE;IAEzD;IAEA,SAAS9vF,MAAMA,CAAE8zE,aAAa,EAAEh9B,OAAO,EAAG;MAEzC,IAAI/iD,MAAM,GAAGwtC,OAAO,CAAEuyC,aAAa,CAACj6D,EAAE,CAAE;MAExC,IAAK9lB,MAAM,KAAK5gB,SAAS,EAAG;QAE3B48G,oBAAoB,CAAEjc,aAAa,CAAE;QAErC//E,MAAM,GAAG0tC,YAAY,CAAEqyC,aAAa,CAAE;QACtCvyC,OAAO,CAAEuyC,aAAa,CAACj6D,EAAE,CAAE,GAAG9lB,MAAM;QAEpC+/E,aAAa,CAACtvF,gBAAgB,CAAE,SAAS,EAAEwrG,uBAAuB,CAAE;MAErE;;MAEA;;MAEA,IAAMF,YAAY,GAAGh5C,OAAO,CAACA,OAAO;MACpCvkE,KAAK,CAACshG,gBAAgB,CAAEC,aAAa,EAAEgc,YAAY,CAAE;;MAErD;;MAEA,IAAMhvD,KAAK,GAAGxtD,IAAI,CAACmpD,MAAM,CAACqE,KAAK;MAE/B,IAAK2uD,UAAU,CAAE3b,aAAa,CAACj6D,EAAE,CAAE,KAAKinB,KAAK,EAAG;QAE/CmvD,gBAAgB,CAAEnc,aAAa,CAAE;QAEjC2b,UAAU,CAAE3b,aAAa,CAACj6D,EAAE,CAAE,GAAGinB,KAAK;MAEvC;IAED;IAEA,SAASW,YAAYA,CAAEqyC,aAAa,EAAG;MAEtC;;MAEA,IAAMoc,iBAAiB,GAAGC,yBAAyB,EAAE;MACrDrc,aAAa,CAACI,mBAAmB,GAAGgc,iBAAiB;MAErD,IAAMn8F,MAAM,GAAGqtC,EAAE,CAACK,YAAY,EAAE;MAChC,IAAMv5B,IAAI,GAAG4rE,aAAa,CAACsc,MAAM;MACjC,IAAMnlE,KAAK,GAAG6oD,aAAa,CAAC7oD,KAAK;MAEjCmW,EAAE,CAACO,UAAU,CAAEP,EAAE,CAACivD,cAAc,EAAEt8F,MAAM,CAAE;MAC1CqtC,EAAE,CAACQ,UAAU,CAAER,EAAE,CAACivD,cAAc,EAAEnoF,IAAI,EAAE+iB,KAAK,CAAE;MAC/CmW,EAAE,CAACO,UAAU,CAAEP,EAAE,CAACivD,cAAc,EAAE,IAAI,CAAE;MACxCjvD,EAAE,CAACkvD,cAAc,CAAElvD,EAAE,CAACivD,cAAc,EAAEH,iBAAiB,EAAEn8F,MAAM,CAAE;MAEjE,OAAOA,MAAM;IAEd;IAEA,SAASo8F,yBAAyBA,CAAA,EAAG;MAEpC,KAAM,IAAIz7G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi7G,gBAAgB,EAAEj7G,CAAC,EAAG,EAAG;QAE7C,IAAKg7G,sBAAsB,CAAC9qG,OAAO,CAAElQ,CAAC,CAAE,KAAK,CAAE,CAAC,EAAG;UAElDg7G,sBAAsB,CAACx7G,IAAI,CAAEQ,CAAC,CAAE;UAChC,OAAOA,CAAC;QAET;MAED;MAEA0D,OAAO,CAAChG,KAAK,CAAE,uFAAuF,CAAE;MAExG,OAAO,CAAC;IAET;IAEA,SAAS69G,gBAAgBA,CAAEnc,aAAa,EAAG;MAE1C,IAAM//E,MAAM,GAAGwtC,OAAO,CAAEuyC,aAAa,CAACj6D,EAAE,CAAE;MAC1C,IAAMwd,QAAQ,GAAGy8C,aAAa,CAACz8C,QAAQ;MACvC,IAAM1a,KAAK,GAAGm3D,aAAa,CAACyc,OAAO;MAEnCnvD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAACivD,cAAc,EAAEt8F,MAAM,CAAE;MAE1C,KAAM,IAAIrf,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGi4B,QAAQ,CAAC5iD,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;QAErD,IAAMykD,OAAO,GAAG9B,QAAQ,CAAE3iD,CAAC,CAAE;;QAE7B;;QAEA,IAAK87G,iBAAiB,CAAEr3D,OAAO,EAAEzkD,CAAC,EAAEioC,KAAK,CAAE,KAAK,IAAI,EAAG;UAEtD,IAAMxuB,MAAM,GAAGgrC,OAAO,CAACs3D,QAAQ;UAE/B,IAAMt/G,MAAM,GAAGsmB,KAAK,CAACC,OAAO,CAAEyhC,OAAO,CAACtqD,KAAK,CAAE,GAAGsqD,OAAO,CAACtqD,KAAK,GAAG,CAAEsqD,OAAO,CAACtqD,KAAK,CAAE;UAEjF,IAAI6hH,WAAW,GAAG,CAAC;UAEnB,KAAM,IAAIh8G,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGvD,MAAM,CAACsD,MAAM,EAAEC,IAAC,EAAG,EAAG;YAE1C,IAAM7F,OAAK,GAAGsC,MAAM,CAAEuD,IAAC,CAAE;YAEzB,IAAMpB,KAAI,GAAGq9G,cAAc,CAAE9hH,OAAK,CAAE;YAEpC,IAAK,OAAOA,OAAK,KAAK,QAAQ,EAAG;cAEhCsqD,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK;cAC3BuyD,EAAE,CAACoB,aAAa,CAAEpB,EAAE,CAACivD,cAAc,EAAEliG,MAAM,GAAGuiG,WAAW,EAAEv3D,OAAO,CAACy3D,MAAM,CAAE;YAE5E,CAAC,MAAM,IAAK/hH,OAAK,CAACigB,SAAS,EAAG;cAE7B;;cAEAqqC,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cACzC8sC,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cACzC8sC,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cACzC8sC,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cACzC8sC,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cACzC8sC,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cACzC8sC,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cACzC8sC,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cACzC8sC,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cACzC8sC,OAAO,CAACy3D,MAAM,CAAE,CAAC,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cACzC8sC,OAAO,CAACy3D,MAAM,CAAE,EAAE,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;cAC1C8sC,OAAO,CAACy3D,MAAM,CAAE,EAAE,CAAE,GAAG/hH,OAAK,CAACwd,QAAQ,CAAE,CAAC,CAAE;YAE3C,CAAC,MAAM;cAENxd,OAAK,CAACuf,OAAO,CAAE+qC,OAAO,CAACy3D,MAAM,EAAEF,WAAW,CAAE;cAE5CA,WAAW,IAAIp9G,KAAI,CAACu9G,OAAO,GAAG1mG,YAAY,CAACm4C,iBAAiB;YAE7D;UAED;UAEAlB,EAAE,CAACoB,aAAa,CAAEpB,EAAE,CAACivD,cAAc,EAAEliG,MAAM,EAAEgrC,OAAO,CAACy3D,MAAM,CAAE;QAE9D;MAED;MAEAxvD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAACivD,cAAc,EAAE,IAAI,CAAE;IAEzC;IAEA,SAASG,iBAAiBA,CAAEr3D,OAAO,EAAEn0C,KAAK,EAAE23B,KAAK,EAAG;MAEnD,IAAM9tC,KAAK,GAAGsqD,OAAO,CAACtqD,KAAK;MAE3B,IAAK8tC,KAAK,CAAE33B,KAAK,CAAE,KAAK7R,SAAS,EAAG;QAEnC;;QAEA,IAAK,OAAOtE,KAAK,KAAK,QAAQ,EAAG;UAEhC8tC,KAAK,CAAE33B,KAAK,CAAE,GAAGnW,KAAK;QAEvB,CAAC,MAAM;UAEN,IAAMsC,MAAM,GAAGsmB,KAAK,CAACC,OAAO,CAAE7oB,KAAK,CAAE,GAAGA,KAAK,GAAG,CAAEA,KAAK,CAAE;UAEzD,IAAMiiH,UAAU,GAAG,EAAE;UAErB,KAAM,IAAIp8G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvD,MAAM,CAACsD,MAAM,EAAEC,CAAC,EAAG,EAAG;YAE1Co8G,UAAU,CAAC58G,IAAI,CAAE/C,MAAM,CAAEuD,CAAC,CAAE,CAAC2W,KAAK,EAAE,CAAE;UAEvC;UAEAsxB,KAAK,CAAE33B,KAAK,CAAE,GAAG8rG,UAAU;QAE5B;QAEA,OAAO,IAAI;MAEZ,CAAC,MAAM;QAEN;;QAEA,IAAK,OAAOjiH,KAAK,KAAK,QAAQ,EAAG;UAEhC,IAAK8tC,KAAK,CAAE33B,KAAK,CAAE,KAAKnW,KAAK,EAAG;YAE/B8tC,KAAK,CAAE33B,KAAK,CAAE,GAAGnW,KAAK;YACtB,OAAO,IAAI;UAEZ;QAED,CAAC,MAAM;UAEN,IAAMkiH,aAAa,GAAGt5F,KAAK,CAACC,OAAO,CAAEilB,KAAK,CAAE33B,KAAK,CAAE,CAAE,GAAG23B,KAAK,CAAE33B,KAAK,CAAE,GAAG,CAAE23B,KAAK,CAAE33B,KAAK,CAAE,CAAE;UAC3F,IAAM7T,OAAM,GAAGsmB,KAAK,CAACC,OAAO,CAAE7oB,KAAK,CAAE,GAAGA,KAAK,GAAG,CAAEA,KAAK,CAAE;UAEzD,KAAM,IAAI6F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGq8G,aAAa,CAACt8G,MAAM,EAAEC,IAAC,EAAG,EAAG;YAEjD,IAAMs8G,YAAY,GAAGD,aAAa,CAAEr8G,IAAC,CAAE;YAEvC,IAAKs8G,YAAY,CAAC/iG,MAAM,CAAE9c,OAAM,CAAEuD,IAAC,CAAE,CAAE,KAAK,KAAK,EAAG;cAEnDs8G,YAAY,CAAC1lG,IAAI,CAAEna,OAAM,CAAEuD,IAAC,CAAE,CAAE;cAChC,OAAO,IAAI;YAEZ;UAED;QAED;MAED;MAEA,OAAO,KAAK;IAEb;IAEA,SAASq7G,oBAAoBA,CAAEjc,aAAa,EAAG;MAE9C;MACA;;MAEA,IAAMz8C,QAAQ,GAAGy8C,aAAa,CAACz8C,QAAQ;MAEvC,IAAIlpC,MAAM,GAAG,CAAC,CAAC,CAAC;MAChB,IAAM8iG,SAAS,GAAG,EAAE,CAAC,CAAC;MACtB,IAAIC,WAAW,GAAG,CAAC,CAAC,CAAC;;MAErB,KAAM,IAAIx8G,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGgyC,QAAQ,CAAC5iD,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;QAEnD,IAAMykD,OAAO,GAAG9B,QAAQ,CAAE3iD,CAAC,CAAE;QAE7B,IAAMy8G,KAAK,GAAG;UACbC,QAAQ,EAAE,CAAC;UAAE;UACbP,OAAO,EAAE,CAAC,CAAC;QACZ,CAAC;;QAED,IAAM1/G,MAAM,GAAGsmB,KAAK,CAACC,OAAO,CAAEyhC,OAAO,CAACtqD,KAAK,CAAE,GAAGsqD,OAAO,CAACtqD,KAAK,GAAG,CAAEsqD,OAAO,CAACtqD,KAAK,CAAE;QAEjF,KAAM,IAAIy8B,CAAC,GAAG,CAAC,EAAE4kB,EAAE,GAAG/+C,MAAM,CAACsD,MAAM,EAAE62B,CAAC,GAAG4kB,EAAE,EAAE5kB,CAAC,EAAG,EAAG;UAEnD,IAAMz8B,OAAK,GAAGsC,MAAM,CAAEm6B,CAAC,CAAE;UAEzB,IAAMh4B,MAAI,GAAGq9G,cAAc,CAAE9hH,OAAK,CAAE;UAEpCsiH,KAAK,CAACC,QAAQ,IAAI99G,MAAI,CAAC89G,QAAQ;UAC/BD,KAAK,CAACN,OAAO,IAAIv9G,MAAI,CAACu9G,OAAO;QAE9B;;QAEA;;QAEA13D,OAAO,CAACy3D,MAAM,GAAG,IAAIzmG,YAAY,CAAEgnG,KAAK,CAACN,OAAO,GAAG1mG,YAAY,CAACm4C,iBAAiB,CAAE;QACnFnJ,OAAO,CAACs3D,QAAQ,GAAGtiG,MAAM;;QAEzB;;QAEA,IAAKzZ,CAAC,GAAG,CAAC,EAAG;UAEZw8G,WAAW,GAAG/iG,MAAM,GAAG8iG,SAAS;UAEhC,IAAMI,oBAAoB,GAAGJ,SAAS,GAAGC,WAAW;;UAEpD;;UAEA,IAAKA,WAAW,KAAK,CAAC,IAAMG,oBAAoB,GAAGF,KAAK,CAACC,QAAQ,GAAK,CAAC,EAAG;YAEzE;;YAEAjjG,MAAM,IAAM8iG,SAAS,GAAGC,WAAa;YACrC/3D,OAAO,CAACs3D,QAAQ,GAAGtiG,MAAM;UAE1B;QAED;QAEAA,MAAM,IAAIgjG,KAAK,CAACN,OAAO;MAExB;;MAEA;;MAEAK,WAAW,GAAG/iG,MAAM,GAAG8iG,SAAS;MAEhC,IAAKC,WAAW,GAAG,CAAC,EAAG/iG,MAAM,IAAM8iG,SAAS,GAAGC,WAAa;;MAE5D;;MAEApd,aAAa,CAACsc,MAAM,GAAGjiG,MAAM;MAC7B2lF,aAAa,CAACyc,OAAO,GAAG,CAAC,CAAC;MAE1B,OAAO,IAAI;IAEZ;IAEA,SAASI,cAAcA,CAAE9hH,KAAK,EAAG;MAEhC,IAAMyE,IAAI,GAAG;QACZ89G,QAAQ,EAAE,CAAC;QAAE;QACbP,OAAO,EAAE,CAAC,CAAC;MACZ,CAAC;;MAED;;MAEA,IAAK,OAAOhiH,KAAK,KAAK,QAAQ,EAAG;QAEhC;;QAEAyE,IAAI,CAAC89G,QAAQ,GAAG,CAAC;QACjB99G,IAAI,CAACu9G,OAAO,GAAG,CAAC;MAEjB,CAAC,MAAM,IAAKhiH,KAAK,CAACgc,SAAS,EAAG;QAE7B;;QAEAvX,IAAI,CAAC89G,QAAQ,GAAG,CAAC;QACjB99G,IAAI,CAACu9G,OAAO,GAAG,CAAC;MAEjB,CAAC,MAAM,IAAKhiH,KAAK,CAACs1B,SAAS,IAAIt1B,KAAK,CAAC+sC,OAAO,EAAG;QAE9C;;QAEAtoC,IAAI,CAAC89G,QAAQ,GAAG,EAAE;QAClB99G,IAAI,CAACu9G,OAAO,GAAG,EAAE,CAAC,CAAC;MAEpB,CAAC,MAAM,IAAKhiH,KAAK,CAACisB,SAAS,EAAG;QAE7B;;QAEAxnB,IAAI,CAAC89G,QAAQ,GAAG,EAAE;QAClB99G,IAAI,CAACu9G,OAAO,GAAG,EAAE;MAElB,CAAC,MAAM,IAAKhiH,KAAK,CAACigB,SAAS,EAAG;QAE7B;;QAEAxb,IAAI,CAAC89G,QAAQ,GAAG,EAAE;QAClB99G,IAAI,CAACu9G,OAAO,GAAG,EAAE;MAElB,CAAC,MAAM,IAAKhiH,KAAK,CAAC8gC,SAAS,EAAG;QAE7B;;QAEAr8B,IAAI,CAAC89G,QAAQ,GAAG,EAAE;QAClB99G,IAAI,CAACu9G,OAAO,GAAG,EAAE;MAElB,CAAC,MAAM,IAAKhiH,KAAK,CAACmqB,SAAS,EAAG;QAE7B5gB,OAAO,CAACC,IAAI,CAAE,6EAA6E,CAAE;MAE9F,CAAC,MAAM;QAEND,OAAO,CAACC,IAAI,CAAE,sDAAsD,EAAExJ,KAAK,CAAE;MAE9E;MAEA,OAAOyE,IAAI;IAEZ;IAEA,SAAS08G,uBAAuBA,CAAE7qG,KAAK,EAAG;MAEzC,IAAM2uF,aAAa,GAAG3uF,KAAK,CAAC9N,MAAM;MAElCy8F,aAAa,CAAChvF,mBAAmB,CAAE,SAAS,EAAEkrG,uBAAuB,CAAE;MAEvE,IAAMhrG,KAAK,GAAG0qG,sBAAsB,CAAC9qG,OAAO,CAAEkvF,aAAa,CAACI,mBAAmB,CAAE;MACjFwb,sBAAsB,CAACzqG,MAAM,CAAED,KAAK,EAAE,CAAC,CAAE;MAEzCo8C,EAAE,CAACsB,YAAY,CAAEnB,OAAO,CAAEuyC,aAAa,CAACj6D,EAAE,CAAE,CAAE;MAE9C,OAAO0nB,OAAO,CAAEuyC,aAAa,CAACj6D,EAAE,CAAE;MAClC,OAAO41E,UAAU,CAAE3b,aAAa,CAACj6D,EAAE,CAAE;IAEtC;IAEA,SAAStf,OAAOA,CAAA,EAAG;MAElB,KAAM,IAAMsf,IAAE,IAAI0nB,OAAO,EAAG;QAE3BH,EAAE,CAACsB,YAAY,CAAEnB,OAAO,CAAE1nB,IAAE,CAAE,CAAE;MAEjC;MAEA61E,sBAAsB,GAAG,EAAE;MAC3BnuD,OAAO,GAAG,CAAC,CAAC;MACZkuD,UAAU,GAAG,CAAC,CAAC;IAEhB;IAEA,OAAO;MAENI,IAAI,EAAEA,IAAI;MACV7vF,MAAM,EAAEA,MAAM;MAEdzF,OAAO,EAAEA;IAEV,CAAC;EAEF;EAEA,SAAS+2F,mBAAmBA,CAAA,EAAG;IAE9B,IAAMp7F,MAAM,GAAGlC,eAAe,CAAE,QAAQ,CAAE;IAC1CkC,MAAM,CAAC0xB,KAAK,CAAC2pE,OAAO,GAAG,OAAO;IAC9B,OAAOr7F,MAAM;EAEd;EAAC,IAEKs7F,aAAa;IAElB,SAAAA,cAAav1E,UAAU,GAAG,CAAC,CAAC,EAAG;MAAAhlC,eAAA,OAAAu6G,aAAA;MAE9B,IAAAC,kBAAA,GAWIx1E,UAAU,CAVb/lB,MAAM;QAANA,MAAM,GAAAu7F,kBAAA,cAAGH,mBAAmB,EAAE,GAAAG,kBAAA;QAAAC,mBAAA,GAU3Bz1E,UAAU,CATb7rC,OAAO;QAAPA,OAAO,GAAAshH,mBAAA,cAAG,IAAI,GAAAA,mBAAA;QAAAC,iBAAA,GASX11E,UAAU,CARbnf,KAAK;QAALA,KAAK,GAAA60F,iBAAA,cAAG,IAAI,GAAAA,iBAAA;QAAAC,mBAAA,GAQT31E,UAAU,CAPbwhB,OAAO;QAAPA,OAAO,GAAAm0D,mBAAA,cAAG,IAAI,GAAAA,mBAAA;QAAAC,iBAAA,GAOX51E,UAAU,CANbpuB,KAAK;QAALA,KAAK,GAAAgkG,iBAAA,cAAG,KAAK,GAAAA,iBAAA;QAAAC,qBAAA,GAMV71E,UAAU,CALb4tE,SAAS;QAATA,SAAS,GAAAiI,qBAAA,cAAG,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAKd91E,UAAU,CAJbgG,kBAAkB;QAAlBA,kBAAkB,GAAA8vE,qBAAA,cAAG,IAAI,GAAAA,qBAAA;QAAAC,qBAAA,GAItB/1E,UAAU,CAHbg2E,qBAAqB;QAArBA,qBAAqB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;QAAAE,qBAAA,GAG1Bj2E,UAAU,CAFbk2E,eAAe;QAAfA,eAAe,GAAAD,qBAAA,cAAG,SAAS,GAAAA,qBAAA;QAAAE,qBAAA,GAExBn2E,UAAU,CADbo2E,4BAA4B;QAA5BA,4BAA4B,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;MAGrC,IAAI,CAACE,eAAe,GAAG,IAAI;MAE3B,IAAIC,MAAM;MAEV,IAAKniH,OAAO,KAAK,IAAI,EAAG;QAEvBmiH,MAAM,GAAGniH,OAAO,CAAC+2G,oBAAoB,EAAE,CAACt5F,KAAK;MAE9C,CAAC,MAAM;QAEN0kG,MAAM,GAAG1kG,KAAK;MAEf;MAEA,IAAI2kG,iBAAiB,GAAG,IAAI;MAC5B,IAAIC,kBAAkB,GAAG,IAAI;;MAE7B;MACA;;MAEA,IAAMC,eAAe,GAAG,EAAE;MAC1B,IAAMC,gBAAgB,GAAG,EAAE;;MAE3B;;MAEA,IAAI,CAACC,UAAU,GAAG18F,MAAM;;MAExB;MACA,IAAI,CAACujE,KAAK,GAAG;QAEZ;AACJ;AACA;AACA;QACIC,iBAAiB,EAAE,IAAI;QACvB;AACJ;AACA;AACA;QACIQ,aAAa,EAAE;MAChB,CAAC;;MAED;;MAEA,IAAI,CAACxkB,SAAS,GAAG,IAAI;MACrB,IAAI,CAACC,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACC,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACC,gBAAgB,GAAG,IAAI;;MAE5B;;MAEA,IAAI,CAACg9C,WAAW,GAAG,IAAI;;MAEvB;;MAEA,IAAI,CAACvxE,cAAc,GAAG,EAAE;MACxB,IAAI,CAAC07B,oBAAoB,GAAG,KAAK;;MAEjC;;MAEA,IAAI,CAACrlB,cAAc,GAAG11C,cAAc;;MAEpC;;MAEA,IAAI,CAAC62E,eAAe,GAAG,IAAI;;MAE3B;;MAEA,IAAI,CAACz8B,WAAW,GAAG//C,aAAa;MAChC,IAAI,CAACw2G,mBAAmB,GAAG,GAAG;;MAE9B;;MAEA,IAAMC,KAAK,GAAG,IAAI;MAElB,IAAIC,cAAc,GAAG,KAAK;;MAE1B;;MAEA,IAAIC,sBAAsB,GAAG,CAAC;MAC9B,IAAIC,yBAAyB,GAAG,CAAC;MACjC,IAAIC,oBAAoB,GAAG,IAAI;MAC/B,IAAIC,kBAAkB,GAAG,CAAE,CAAC;MAE5B,IAAIC,cAAc,GAAG,IAAI;MAEzB,IAAMC,gBAAgB,GAAG,IAAI54F,OAAO,EAAE;MACtC,IAAM64F,eAAe,GAAG,IAAI74F,OAAO,EAAE;MACrC,IAAI84F,mBAAmB,GAAG,IAAI;;MAE9B;;MAEA,IAAIC,MAAM,GAAGv9F,MAAM,CAACC,KAAK;MACzB,IAAIu9F,OAAO,GAAGx9F,MAAM,CAACE,MAAM;MAE3B,IAAIu9F,WAAW,GAAG,CAAC;MACnB,IAAIC,WAAW,GAAG,IAAI;MACtB,IAAIC,gBAAgB,GAAG,IAAI;MAE3B,IAAM3sB,SAAS,GAAG,IAAIxsE,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE+4F,MAAM,EAAEC,OAAO,CAAE;MACtD,IAAMI,QAAQ,GAAG,IAAIp5F,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE+4F,MAAM,EAAEC,OAAO,CAAE;MACrD,IAAIK,YAAY,GAAG,KAAK;;MAExB;;MAEA,IAAMhtB,QAAQ,GAAG,IAAIjoC,OAAO,EAAE;;MAE9B;;MAEA,IAAIk1D,gBAAgB,GAAG,KAAK;MAC5B,IAAIC,qBAAqB,GAAG,KAAK;;MAEjC;;MAEA,IAAIC,yBAAyB,GAAG,IAAI;;MAEpC;;MAEA,IAAMC,iBAAiB,GAAG,IAAIzkF,OAAO,EAAE;MAEvC,IAAM0kF,QAAQ,GAAG,IAAInwF,OAAO,EAAE;MAE9B,IAAMowF,WAAW,GAAG;QAAE14E,UAAU,EAAE,IAAI;QAAEmL,GAAG,EAAE,IAAI;QAAEjL,WAAW,EAAE,IAAI;QAAEy4E,gBAAgB,EAAE,IAAI;QAAE54E,OAAO,EAAE;MAAK,CAAC;MAE7G,SAAS64E,mBAAmBA,CAAA,EAAG;QAE9B,OAAOpB,oBAAoB,KAAK,IAAI,GAAGQ,WAAW,GAAG,CAAC;MAEvD;;MAEA;;MAEA,IAAIrf,GAAG,GAAGlkG,OAAO;MAEjB,SAASimB,UAAUA,CAAEm+F,YAAY,EAAEC,iBAAiB,EAAG;QAEtD,KAAM,IAAI//G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8/G,YAAY,CAAC//G,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEhD,IAAMggH,WAAW,GAAGF,YAAY,CAAE9/G,CAAC,CAAE;UACrC,IAAMtE,SAAO,GAAG8lB,MAAM,CAACG,UAAU,CAAEq+F,WAAW,EAAED,iBAAiB,CAAE;UACnE,IAAKrkH,SAAO,KAAK,IAAI,EAAG,OAAOA,SAAO;QAEvC;QAEA,OAAO,IAAI;MAEZ;MAEA,IAAI;QAEH,IAAMqkH,iBAAiB,GAAG;UACzB5mG,KAAK,EAAE,IAAI;UACXiP,KAAK,EAALA,KAAK;UACL2gC,OAAO,EAAPA,OAAO;UACPosD,SAAS,EAATA,SAAS;UACT5nE,kBAAkB,EAAlBA,kBAAkB;UAClBgwE,qBAAqB,EAArBA,qBAAqB;UACrBE,eAAe,EAAfA,eAAe;UACfE,4BAA4B,EAA5BA;QACD,CAAC;;QAED;QACA,IAAK,cAAc,IAAIn8F,MAAM,EAAGA,MAAM,CAACo5B,YAAY,CAAE,aAAa,eAAA95B,MAAA,CAAe1c,QAAQ,EAAI;;QAE7F;QACAod,MAAM,CAAC1R,gBAAgB,CAAE,kBAAkB,EAAEmwG,aAAa,EAAE,KAAK,CAAE;QACnEz+F,MAAM,CAAC1R,gBAAgB,CAAE,sBAAsB,EAAEowG,gBAAgB,EAAE,KAAK,CAAE;QAC1E1+F,MAAM,CAAC1R,gBAAgB,CAAE,2BAA2B,EAAEqwG,sBAAsB,EAAE,KAAK,CAAE;QAErF,IAAKvgB,GAAG,KAAK,IAAI,EAAG;UAEnB,IAAMkgB,YAAY,GAAG,CAAE,QAAQ,EAAE,OAAO,EAAE,oBAAoB,CAAE;UAEhE,IAAKzB,KAAK,CAAC+B,gBAAgB,KAAK,IAAI,EAAG;YAEtCN,YAAY,CAACO,KAAK,EAAE;UAErB;UAEAzgB,GAAG,GAAGj+E,UAAU,CAAEm+F,YAAY,EAAEC,iBAAiB,CAAE;UAEnD,IAAKngB,GAAG,KAAK,IAAI,EAAG;YAEnB,IAAKj+E,UAAU,CAAEm+F,YAAY,CAAE,EAAG;cAEjC,MAAM,IAAIhiH,KAAK,CAAE,6DAA6D,CAAE;YAEjF,CAAC,MAAM;cAEN,MAAM,IAAIA,KAAK,CAAE,+BAA+B,CAAE;YAEnD;UAED;QAED;;QAEA;;QAEA,IAAK8hG,GAAG,CAACr5B,wBAAwB,KAAK9nE,SAAS,EAAG;UAEjDmhG,GAAG,CAACr5B,wBAAwB,GAAG,YAAY;YAE1C,OAAO;cAAE,UAAU,EAAE,CAAC;cAAE,UAAU,EAAE,CAAC;cAAE,WAAW,EAAE;YAAE,CAAC;UAExD,CAAC;QAEF;MAED,CAAC,CAAC,OAAQ7oE,KAAK,EAAG;QAEjBgG,OAAO,CAAChG,KAAK,CAAE,uBAAuB,GAAGA,KAAK,CAAC4iH,OAAO,CAAE;QACxD,MAAM5iH,KAAK;MAEZ;MAEA,IAAIsmD,UAAU,EAAE2I,YAAY,EAAE9uD,KAAK,EAAEe,IAAI;MACzC,IAAI68D,UAAU,EAAE91C,QAAQ,EAAEo6C,QAAQ,EAAEC,UAAU,EAAErrC,UAAU,EAAE0R,UAAU,EAAE45B,OAAO;MAC/E,IAAIsgD,YAAY,EAAEj6E,SAAS,EAAEk6E,WAAW,EAAEpvB,YAAY,EAAErtC,QAAQ,EAAE4nC,SAAS;MAE3E,IAAI1kD,UAAU,EAAEw5E,YAAY,EAAEC,cAAc,EAAEC,qBAAqB;MAEnE,IAAI9gB,KAAK,EAAE/9B,aAAa,EAAEne,cAAc;MAExC,SAASi9D,aAAaA,CAAA,EAAG;QAExB58D,UAAU,GAAG,IAAI6sB,eAAe,CAAE+uB,GAAG,CAAE;QAEvCjzC,YAAY,GAAG,IAAIsZ,iBAAiB,CAAE25B,GAAG,EAAE57C,UAAU,EAAEzc,UAAU,CAAE;QAEnEyc,UAAU,CAAC2kB,IAAI,CAAEhc,YAAY,CAAE;QAE/BkzC,KAAK,GAAG,IAAIoK,UAAU,CAAErK,GAAG,EAAE57C,UAAU,EAAE2I,YAAY,CAAE;QAEvD9uD,KAAK,GAAG,IAAI23F,UAAU,CAAEoK,GAAG,EAAE57C,UAAU,EAAE2I,YAAY,CAAE;QAEvD/tD,IAAI,GAAG,IAAI+yE,SAAS,CAAEiuB,GAAG,CAAE;QAC3BnkC,UAAU,GAAG,IAAI4wB,eAAe,EAAE;QAClC1mE,QAAQ,GAAG,IAAIg6E,aAAa,CAAEC,GAAG,EAAE57C,UAAU,EAAEnmD,KAAK,EAAE49D,UAAU,EAAE9O,YAAY,EAAEkzC,KAAK,EAAEjhG,IAAI,CAAE;QAC7FmhE,QAAQ,GAAG,IAAI+J,aAAa,CAAEu0C,KAAK,CAAE;QACrCr+C,UAAU,GAAG,IAAIsQ,eAAe,CAAE+tC,KAAK,CAAE;QACzC1pF,UAAU,GAAG,IAAI83B,eAAe,CAAEmzC,GAAG,EAAEjzC,YAAY,CAAE;QACrDmV,aAAa,GAAG,IAAIL,kBAAkB,CAAEm+B,GAAG,EAAE57C,UAAU,EAAErvB,UAAU,EAAEg4B,YAAY,CAAE;QACnFtmB,UAAU,GAAG,IAAI0qC,eAAe,CAAE6uB,GAAG,EAAEjrE,UAAU,EAAE/1B,IAAI,EAAEkjE,aAAa,CAAE;QACxE7B,OAAO,GAAG,IAAIkU,YAAY,CAAEyrB,GAAG,EAAEv5D,UAAU,EAAE1R,UAAU,EAAE/1B,IAAI,CAAE;QAC/D6hH,YAAY,GAAG,IAAIhuC,iBAAiB,CAAEmtB,GAAG,EAAEjzC,YAAY,EAAEhnC,QAAQ,CAAE;QACnEo+B,QAAQ,GAAG,IAAIokB,aAAa,CAAE1M,UAAU,CAAE;QAC1C8kD,YAAY,GAAG,IAAI/4B,aAAa,CAAE62B,KAAK,EAAEt+C,QAAQ,EAAEC,UAAU,EAAEhc,UAAU,EAAE2I,YAAY,EAAEmV,aAAa,EAAE/d,QAAQ,CAAE;QAClHzd,SAAS,GAAG,IAAI0yE,cAAc,CAAEqF,KAAK,EAAE5iD,UAAU,CAAE;QACnD+kD,WAAW,GAAG,IAAIvzB,gBAAgB,EAAE;QACpCmE,YAAY,GAAG,IAAID,iBAAiB,CAAEntC,UAAU,EAAE2I,YAAY,CAAE;QAChE1lB,UAAU,GAAG,IAAI64B,eAAe,CAAEu+C,KAAK,EAAEt+C,QAAQ,EAAEC,UAAU,EAAEniE,KAAK,EAAEoiE,OAAO,EAAE49C,MAAM,EAAEtwE,kBAAkB,CAAE;QAC3Go+C,SAAS,GAAG,IAAIsG,cAAc,CAAEosB,KAAK,EAAEp+C,OAAO,EAAEtT,YAAY,CAAE;QAC9DhJ,cAAc,GAAG,IAAIm3D,mBAAmB,CAAElb,GAAG,EAAEhhG,IAAI,EAAE+tD,YAAY,EAAE9uD,KAAK,CAAE;QAE1E6iH,cAAc,GAAG,IAAI/6C,mBAAmB,CAAEi6B,GAAG,EAAE57C,UAAU,EAAEplD,IAAI,EAAE+tD,YAAY,CAAE;QAC/Eg0D,qBAAqB,GAAG,IAAIlvC,0BAA0B,CAAEmuB,GAAG,EAAE57C,UAAU,EAAEplD,IAAI,EAAE+tD,YAAY,CAAE;QAE7F/tD,IAAI,CAACyzE,QAAQ,GAAGkuC,YAAY,CAACluC,QAAQ;QAErCgsC,KAAK,CAAC1xD,YAAY,GAAGA,YAAY;QACjC0xD,KAAK,CAACr6D,UAAU,GAAGA,UAAU;QAC7Bq6D,KAAK,CAAC5iD,UAAU,GAAGA,UAAU;QAC7B4iD,KAAK,CAACmC,WAAW,GAAGA,WAAW;QAC/BnC,KAAK,CAAC1yB,SAAS,GAAGA,SAAS;QAC3B0yB,KAAK,CAACxgH,KAAK,GAAGA,KAAK;QACnBwgH,KAAK,CAACz/G,IAAI,GAAGA,IAAI;MAElB;MAEAgiH,aAAa,EAAE;;MAEf;;MAEA,IAAM/4D,EAAE,GAAG,IAAI+pD,YAAY,CAAEyM,KAAK,EAAEze,GAAG,CAAE;MAEzC,IAAI,CAAC/3C,EAAE,GAAGA,EAAE;;MAEZ;;MAEA,IAAI,CAAClmC,UAAU,GAAG,YAAY;QAE7B,OAAOi+E,GAAG;MAEX,CAAC;MAED,IAAI,CAAC6S,oBAAoB,GAAG,YAAY;QAEvC,OAAO7S,GAAG,CAAC6S,oBAAoB,EAAE;MAElC,CAAC;MAED,IAAI,CAACoO,gBAAgB,GAAG,YAAY;QAEnC,IAAMj/C,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,oBAAoB,CAAE;QACxD,IAAKwrD,SAAS,EAAGA,SAAS,CAACk/C,WAAW,EAAE;MAEzC,CAAC;MAED,IAAI,CAACC,mBAAmB,GAAG,YAAY;QAEtC,IAAMn/C,SAAS,GAAG5d,UAAU,CAAC5tC,GAAG,CAAE,oBAAoB,CAAE;QACxD,IAAKwrD,SAAS,EAAGA,SAAS,CAACo/C,cAAc,EAAE;MAE5C,CAAC;MAED,IAAI,CAACC,aAAa,GAAG,YAAY;QAEhC,OAAOhC,WAAW;MAEnB,CAAC;MAED,IAAI,CAACiC,aAAa,GAAG,UAAW/mH,KAAK,EAAG;QAEvC,IAAKA,KAAK,KAAKsE,SAAS,EAAG;QAE3BwgH,WAAW,GAAG9kH,KAAK;QAEnB,IAAI,CAAC0uB,OAAO,CAAEk2F,MAAM,EAAEC,OAAO,EAAE,KAAK,CAAE;MAEvC,CAAC;MAED,IAAI,CAAChrF,OAAO,GAAG,UAAWrxB,MAAM,EAAG;QAElC,OAAOA,MAAM,CAAC4S,GAAG,CAAEwpG,MAAM,EAAEC,OAAO,CAAE;MAErC,CAAC;MAED,IAAI,CAACn2F,OAAO,GAAG,UAAWpH,KAAK,EAAEC,MAAM,EAAEy/F,WAAW,GAAG,IAAI,EAAG;QAE7D,IAAKt5D,EAAE,CAACwrD,YAAY,EAAG;UAEtB3vG,OAAO,CAACC,IAAI,CAAE,wEAAwE,CAAE;UACxF;QAED;QAEAo7G,MAAM,GAAGt9F,KAAK;QACdu9F,OAAO,GAAGt9F,MAAM;QAEhBF,MAAM,CAACC,KAAK,GAAG1Q,IAAI,CAACsC,KAAK,CAAEoO,KAAK,GAAGw9F,WAAW,CAAE;QAChDz9F,MAAM,CAACE,MAAM,GAAG3Q,IAAI,CAACsC,KAAK,CAAEqO,MAAM,GAAGu9F,WAAW,CAAE;QAElD,IAAKkC,WAAW,KAAK,IAAI,EAAG;UAE3B3/F,MAAM,CAAC0xB,KAAK,CAACzxB,KAAK,GAAGA,KAAK,GAAG,IAAI;UACjCD,MAAM,CAAC0xB,KAAK,CAACxxB,MAAM,GAAGA,MAAM,GAAG,IAAI;QAEpC;QAEA,IAAI,CAAC0/F,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE3/F,KAAK,EAAEC,MAAM,CAAE;MAExC,CAAC;MAED,IAAI,CAAC2/F,oBAAoB,GAAG,UAAW1+G,MAAM,EAAG;QAE/C,OAAOA,MAAM,CAAC4S,GAAG,CAAEwpG,MAAM,GAAGE,WAAW,EAAED,OAAO,GAAGC,WAAW,CAAE,CAAC5rG,KAAK,EAAE;MAEzE,CAAC;MAED,IAAI,CAACiuG,oBAAoB,GAAG,UAAW7/F,KAAK,EAAEC,MAAM,EAAE43F,UAAU,EAAG;QAElEyF,MAAM,GAAGt9F,KAAK;QACdu9F,OAAO,GAAGt9F,MAAM;QAEhBu9F,WAAW,GAAG3F,UAAU;QAExB93F,MAAM,CAACC,KAAK,GAAG1Q,IAAI,CAACsC,KAAK,CAAEoO,KAAK,GAAG63F,UAAU,CAAE;QAC/C93F,MAAM,CAACE,MAAM,GAAG3Q,IAAI,CAACsC,KAAK,CAAEqO,MAAM,GAAG43F,UAAU,CAAE;QAEjD,IAAI,CAAC8H,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE3/F,KAAK,EAAEC,MAAM,CAAE;MAExC,CAAC;MAED,IAAI,CAAC6/F,kBAAkB,GAAG,UAAW5+G,MAAM,EAAG;QAE7C,OAAOA,MAAM,CAACiU,IAAI,CAAEgoG,gBAAgB,CAAE;MAEvC,CAAC;MAED,IAAI,CAACxqB,WAAW,GAAG,UAAWzxF,MAAM,EAAG;QAEtC,OAAOA,MAAM,CAACiU,IAAI,CAAE47E,SAAS,CAAE;MAEhC,CAAC;MAED,IAAI,CAAC4uB,WAAW,GAAG,UAAWnvG,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,EAAG;QAEnD,IAAKzP,CAAC,CAACmU,SAAS,EAAG;UAElBosE,SAAS,CAACj9E,GAAG,CAAEtD,CAAC,CAACA,CAAC,EAAEA,CAAC,CAACM,CAAC,EAAEN,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACkU,CAAC,CAAE;QAEpC,CAAC,MAAM;UAENqsE,SAAS,CAACj9E,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,CAAE;QAErC;QAEA7jB,KAAK,CAAC0qB,QAAQ,CAAEq2F,gBAAgB,CAAChoG,IAAI,CAAE47E,SAAS,CAAE,CAACl7E,cAAc,CAAE2nG,WAAW,CAAE,CAAC5rG,KAAK,EAAE,CAAE;MAE3F,CAAC;MAED,IAAI,CAACmuG,UAAU,GAAG,UAAW7+G,MAAM,EAAG;QAErC,OAAOA,MAAM,CAACiU,IAAI,CAAEwoG,QAAQ,CAAE;MAE/B,CAAC;MAED,IAAI,CAACqC,UAAU,GAAG,UAAWxvG,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,EAAG;QAElD,IAAKzP,CAAC,CAACmU,SAAS,EAAG;UAElBg5F,QAAQ,CAAC7pG,GAAG,CAAEtD,CAAC,CAACA,CAAC,EAAEA,CAAC,CAACM,CAAC,EAAEN,CAAC,CAACiU,CAAC,EAAEjU,CAAC,CAACkU,CAAC,CAAE;QAEnC,CAAC,MAAM;UAENi5F,QAAQ,CAAC7pG,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,CAAE;QAEpC;QAEA7jB,KAAK,CAACwqB,OAAO,CAAEw2F,eAAe,CAACjoG,IAAI,CAAEwoG,QAAQ,CAAE,CAAC9nG,cAAc,CAAE2nG,WAAW,CAAE,CAAC5rG,KAAK,EAAE,CAAE;MAExF,CAAC;MAED,IAAI,CAACquG,cAAc,GAAG,YAAY;QAEjC,OAAOrC,YAAY;MAEpB,CAAC;MAED,IAAI,CAACxrB,cAAc,GAAG,UAAW8tB,OAAO,EAAG;QAE1C9jH,KAAK,CAACg2F,cAAc,CAAEwrB,YAAY,GAAGsC,OAAO,CAAE;MAE/C,CAAC;MAED,IAAI,CAACC,aAAa,GAAG,UAAW/kH,MAAM,EAAG;QAExCqiH,WAAW,GAAGriH,MAAM;MAErB,CAAC;MAED,IAAI,CAACglH,kBAAkB,GAAG,UAAWhlH,MAAM,EAAG;QAE7CsiH,gBAAgB,GAAGtiH,MAAM;MAE1B,CAAC;;MAED;;MAEA,IAAI,CAACwkE,aAAa,GAAG,UAAW1+D,MAAM,EAAG;QAExC,OAAOA,MAAM,CAACiU,IAAI,CAAEqwB,UAAU,CAACo6B,aAAa,EAAE,CAAE;MAEjD,CAAC;MAED,IAAI,CAACC,aAAa,GAAG,YAAY;QAEhCr6B,UAAU,CAACq6B,aAAa,CAACo9B,KAAK,CAAEz3D,UAAU,EAAEpC,SAAS,CAAE;MAExD,CAAC;MAED,IAAI,CAAC08B,aAAa,GAAG,YAAY;QAEhC,OAAOt6B,UAAU,CAACs6B,aAAa,EAAE;MAElC,CAAC;MAED,IAAI,CAACC,aAAa,GAAG,YAAY;QAEhCv6B,UAAU,CAACu6B,aAAa,CAACk9B,KAAK,CAAEz3D,UAAU,EAAEpC,SAAS,CAAE;MAExD,CAAC;MAED,IAAI,CAACG,KAAK,GAAG,UAAWnlB,KAAK,GAAG,IAAI,EAAEuI,KAAK,GAAG,IAAI,EAAE2gC,OAAO,GAAG,IAAI,EAAG;QAEpE,IAAI+4D,IAAI,GAAG,CAAC;QAEZ,IAAKjiG,KAAK,EAAGiiG,IAAI,IAAIliB,GAAG,CAAC2J,gBAAgB;QACzC,IAAKnhF,KAAK,EAAG05F,IAAI,IAAIliB,GAAG,CAACgK,gBAAgB;QACzC,IAAK7gD,OAAO,EAAG+4D,IAAI,IAAIliB,GAAG,CAACiK,kBAAkB;QAE7CjK,GAAG,CAAC56D,KAAK,CAAE88E,IAAI,CAAE;MAElB,CAAC;MAED,IAAI,CAAC5hD,UAAU,GAAG,YAAY;QAE7B,IAAI,CAACl7B,KAAK,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAE;MAEjC,CAAC;MAED,IAAI,CAACkyD,UAAU,GAAG,YAAY;QAE7B,IAAI,CAAClyD,KAAK,CAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAE;MAEjC,CAAC;MAED,IAAI,CAACizD,YAAY,GAAG,YAAY;QAE/B,IAAI,CAACjzD,KAAK,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAE;MAEjC,CAAC;;MAED;;MAEA,IAAI,CAACnf,OAAO,GAAG,YAAY;QAE1BrE,MAAM,CAACpR,mBAAmB,CAAE,kBAAkB,EAAE6vG,aAAa,EAAE,KAAK,CAAE;QACtEz+F,MAAM,CAACpR,mBAAmB,CAAE,sBAAsB,EAAE8vG,gBAAgB,EAAE,KAAK,CAAE;QAC7E1+F,MAAM,CAACpR,mBAAmB,CAAE,2BAA2B,EAAE+vG,sBAAsB,EAAE,KAAK,CAAE;QAExFK,WAAW,CAAC36F,OAAO,EAAE;QACrBurE,YAAY,CAACvrE,OAAO,EAAE;QACtB41C,UAAU,CAAC51C,OAAO,EAAE;QACpBk6C,QAAQ,CAACl6C,OAAO,EAAE;QAClBm6C,UAAU,CAACn6C,OAAO,EAAE;QACpBo6C,OAAO,CAACp6C,OAAO,EAAE;QACjBi8C,aAAa,CAACj8C,OAAO,EAAE;QACvB89B,cAAc,CAAC99B,OAAO,EAAE;QACxB06F,YAAY,CAAC16F,OAAO,EAAE;QAEtBgiC,EAAE,CAAChiC,OAAO,EAAE;QAEZgiC,EAAE,CAACz3C,mBAAmB,CAAE,cAAc,EAAE2xG,gBAAgB,CAAE;QAC1Dl6D,EAAE,CAACz3C,mBAAmB,CAAE,YAAY,EAAE4xG,cAAc,CAAE;QAEtD,IAAKxC,yBAAyB,EAAG;UAEhCA,yBAAyB,CAAC35F,OAAO,EAAE;UACnC25F,yBAAyB,GAAG,IAAI;QAEjC;QAEAz3E,SAAS,CAACxmC,IAAI,EAAE;MAEjB,CAAC;;MAED;;MAEA,SAAS0+G,aAAaA,CAAExvG,KAAK,EAAG;QAE/BA,KAAK,CAACwxG,cAAc,EAAE;QAEtBv+G,OAAO,CAAC0Q,GAAG,CAAE,oCAAoC,CAAE;QAEnDkqG,cAAc,GAAG,IAAI;MAEtB;MAEA,SAAS4B,gBAAgBA,CAAA,CAAE;MAAA,EAAc;QAExCx8G,OAAO,CAAC0Q,GAAG,CAAE,wCAAwC,CAAE;QAEvDkqG,cAAc,GAAG,KAAK;QAEtB,IAAM4D,aAAa,GAAGtjH,IAAI,CAAC0zE,SAAS;QACpC,IAAM4R,gBAAgB,GAAGyH,SAAS,CAACtrE,OAAO;QAC1C,IAAM8hG,mBAAmB,GAAGx2B,SAAS,CAAC0H,UAAU;QAChD,IAAM+uB,oBAAoB,GAAGz2B,SAAS,CAACjmE,WAAW;QAClD,IAAM66D,aAAa,GAAGoL,SAAS,CAAC3vF,IAAI;QAEpC4kH,aAAa,EAAE;QAEfhiH,IAAI,CAAC0zE,SAAS,GAAG4vC,aAAa;QAC9Bv2B,SAAS,CAACtrE,OAAO,GAAG6jE,gBAAgB;QACpCyH,SAAS,CAAC0H,UAAU,GAAG8uB,mBAAmB;QAC1Cx2B,SAAS,CAACjmE,WAAW,GAAG08F,oBAAoB;QAC5Cz2B,SAAS,CAAC3vF,IAAI,GAAGukF,aAAa;MAE/B;MAEA,SAAS4/B,sBAAsBA,CAAE1vG,KAAK,EAAG;QAExC/M,OAAO,CAAChG,KAAK,CAAE,qEAAqE,EAAE+S,KAAK,CAAC4xG,aAAa,CAAE;MAE5G;MAEA,SAASC,iBAAiBA,CAAE7xG,KAAK,EAAG;QAEnC,IAAMo3B,QAAQ,GAAGp3B,KAAK,CAAC9N,MAAM;QAE7BklC,QAAQ,CAACz3B,mBAAmB,CAAE,SAAS,EAAEkyG,iBAAiB,CAAE;QAE5DC,kBAAkB,CAAE16E,QAAQ,CAAE;MAE/B;;MAEA;;MAEA,SAAS06E,kBAAkBA,CAAE16E,QAAQ,EAAG;QAEvC26E,gCAAgC,CAAE36E,QAAQ,CAAE;QAE5C4zB,UAAU,CAAC32B,MAAM,CAAE+C,QAAQ,CAAE;MAE9B;MAGA,SAAS26E,gCAAgCA,CAAE36E,QAAQ,EAAG;QAErD,IAAMwqC,QAAQ,GAAG5W,UAAU,CAACrlD,GAAG,CAAEyxB,QAAQ,CAAE,CAACwqC,QAAQ;QAEpD,IAAKA,QAAQ,KAAK5zE,SAAS,EAAG;UAE7B4zE,QAAQ,CAACz1E,OAAO,CAAE,UAAWwlE,OAAO,EAAG;YAEtCm+C,YAAY,CAACp0B,cAAc,CAAE/pB,OAAO,CAAE;UAEvC,CAAC,CAAE;UAEH,IAAKv6B,QAAQ,CAAC4b,gBAAgB,EAAG;YAEhC88D,YAAY,CAACn0B,kBAAkB,CAAEvkD,QAAQ,CAAE;UAE5C;QAED;MAED;;MAEA;;MAEA,IAAI,CAAC8sD,kBAAkB,GAAG,UAAWlkE,MAAM,EAAE62B,KAAK,EAAE5yB,QAAQ,EAAEmT,QAAQ,EAAE7mC,MAAM,EAAE47C,KAAK,EAAG;QAEvF,IAAK0K,KAAK,KAAK,IAAI,EAAGA,KAAK,GAAGq4D,WAAW,CAAC,CAAC;;QAE3C,IAAMviB,WAAW,GAAKp8F,MAAM,CAAComC,MAAM,IAAIpmC,MAAM,CAAC8vB,WAAW,CAACjU,WAAW,EAAE,GAAG,CAAG;QAE7E,IAAMulD,OAAO,GAAGqgD,UAAU,CAAEhyF,MAAM,EAAE62B,KAAK,EAAE5yB,QAAQ,EAAEmT,QAAQ,EAAE7mC,MAAM,CAAE;QAEvEnD,KAAK,CAACs/F,WAAW,CAAEt1D,QAAQ,EAAEu1D,WAAW,CAAE;;QAE1C;;QAEA,IAAI9sF,KAAK,GAAGokB,QAAQ,CAACpkB,KAAK;QAC1B,IAAIoyG,WAAW,GAAG,CAAC;QAEnB,IAAK76E,QAAQ,CAACkK,SAAS,KAAK,IAAI,EAAG;UAElCzhC,KAAK,GAAG+1B,UAAU,CAACkrC,qBAAqB,CAAE78C,QAAQ,CAAE;UACpDguF,WAAW,GAAG,CAAC;QAEhB;;QAEA;;QAEA,IAAMnoE,SAAS,GAAG7lB,QAAQ,CAAC6lB,SAAS;QACpC,IAAM3lB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;QAE7C,IAAI+tF,SAAS,GAAGpoE,SAAS,CAACC,KAAK,GAAGkoE,WAAW;QAC7C,IAAIE,OAAO,GAAG,CAAEroE,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAChwB,KAAK,IAAKm4F,WAAW;QAEjE,IAAK9lE,KAAK,KAAK,IAAI,EAAG;UAErB+lE,SAAS,GAAG5xG,IAAI,CAACa,GAAG,CAAE+wG,SAAS,EAAE/lE,KAAK,CAACpC,KAAK,GAAGkoE,WAAW,CAAE;UAC5DE,OAAO,GAAG7xG,IAAI,CAACY,GAAG,CAAEixG,OAAO,EAAE,CAAEhmE,KAAK,CAACpC,KAAK,GAAGoC,KAAK,CAACryB,KAAK,IAAKm4F,WAAW,CAAE;QAE3E;QAEA,IAAKpyG,KAAK,KAAK,IAAI,EAAG;UAErBqyG,SAAS,GAAG5xG,IAAI,CAACa,GAAG,CAAE+wG,SAAS,EAAE,CAAC,CAAE;UACpCC,OAAO,GAAG7xG,IAAI,CAACY,GAAG,CAAEixG,OAAO,EAAEtyG,KAAK,CAACia,KAAK,CAAE;QAE3C,CAAC,MAAM,IAAKqK,QAAQ,KAAKn2B,SAAS,IAAIm2B,QAAQ,KAAK,IAAI,EAAG;UAEzD+tF,SAAS,GAAG5xG,IAAI,CAACa,GAAG,CAAE+wG,SAAS,EAAE,CAAC,CAAE;UACpCC,OAAO,GAAG7xG,IAAI,CAACY,GAAG,CAAEixG,OAAO,EAAEhuF,QAAQ,CAACrK,KAAK,CAAE;QAE9C;QAEA,IAAMs4F,SAAS,GAAGD,OAAO,GAAGD,SAAS;QAErC,IAAKE,SAAS,GAAG,CAAC,IAAIA,SAAS,KAAK/vF,QAAQ,EAAG;;QAE/C;;QAEAgvC,aAAa,CAACK,KAAK,CAAEnhE,MAAM,EAAE6mC,QAAQ,EAAEu6B,OAAO,EAAE1tC,QAAQ,EAAEpkB,KAAK,CAAE;QAEjE,IAAIsJ,SAAS;QACb,IAAImpC,QAAQ,GAAG29D,cAAc;QAE7B,IAAKpwG,KAAK,KAAK,IAAI,EAAG;UAErBsJ,SAAS,GAAG+a,UAAU,CAACve,GAAG,CAAE9F,KAAK,CAAE;UAEnCyyC,QAAQ,GAAG49D,qBAAqB;UAChC59D,QAAQ,CAACrI,QAAQ,CAAE9gC,SAAS,CAAE;QAE/B;;QAEA;;QAEA,IAAK5Y,MAAM,CAAComC,MAAM,EAAG;UAEpB,IAAKS,QAAQ,CAACkK,SAAS,KAAK,IAAI,EAAG;YAElCl0C,KAAK,CAACggG,YAAY,CAAEh2D,QAAQ,CAACmK,kBAAkB,GAAG6tE,mBAAmB,EAAE,CAAE;YACzE98D,QAAQ,CAAC8iB,OAAO,CAAE+5B,GAAG,CAAC3tB,KAAK,CAAE;UAE9B,CAAC,MAAM;YAENlvB,QAAQ,CAAC8iB,OAAO,CAAE+5B,GAAG,CAAC5tB,SAAS,CAAE;UAElC;QAED,CAAC,MAAM,IAAKhxE,MAAM,CAACqmC,MAAM,EAAG;UAE3B,IAAIy2D,SAAS,GAAGj2D,QAAQ,CAAC8J,SAAS;UAElC,IAAKmsD,SAAS,KAAKr/F,SAAS,EAAGq/F,SAAS,GAAG,CAAC,CAAC,CAAC;;UAE9CjgG,KAAK,CAACggG,YAAY,CAAEC,SAAS,GAAG+hB,mBAAmB,EAAE,CAAE;UAEvD,IAAK7+G,MAAM,CAAC8hH,cAAc,EAAG;YAE5B//D,QAAQ,CAAC8iB,OAAO,CAAE+5B,GAAG,CAAC3tB,KAAK,CAAE;UAE9B,CAAC,MAAM,IAAKjxE,MAAM,CAAC+hH,UAAU,EAAG;YAE/BhgE,QAAQ,CAAC8iB,OAAO,CAAE+5B,GAAG,CAACztB,SAAS,CAAE;UAElC,CAAC,MAAM;YAENpvB,QAAQ,CAAC8iB,OAAO,CAAE+5B,GAAG,CAAC1tB,UAAU,CAAE;UAEnC;QAED,CAAC,MAAM,IAAKlxE,MAAM,CAACsmC,QAAQ,EAAG;UAE7Byb,QAAQ,CAAC8iB,OAAO,CAAE+5B,GAAG,CAACxtB,MAAM,CAAE;QAE/B,CAAC,MAAM,IAAKpxE,MAAM,CAACgiH,QAAQ,EAAG;UAE7BjgE,QAAQ,CAAC8iB,OAAO,CAAE+5B,GAAG,CAAC5tB,SAAS,CAAE;QAElC;QAEA,IAAKhxE,MAAM,CAAC0lC,eAAe,EAAG;UAE7Bqc,QAAQ,CAACgjB,eAAe,CAAE48C,SAAS,EAAEE,SAAS,EAAE7hH,MAAM,CAACupB,KAAK,CAAE;QAE/D,CAAC,MAAM,IAAKmK,QAAQ,CAACiwC,yBAAyB,EAAG;UAEhD,IAAMs+C,gBAAgB,GAAGvuF,QAAQ,CAACqwC,iBAAiB,KAAKtmE,SAAS,GAAGi2B,QAAQ,CAACqwC,iBAAiB,GAAGjyC,QAAQ;UACzG,IAAMi/C,aAAa,GAAGhhE,IAAI,CAACY,GAAG,CAAE+iB,QAAQ,CAACq9C,aAAa,EAAEkxC,gBAAgB,CAAE;UAE1ElgE,QAAQ,CAACgjB,eAAe,CAAE48C,SAAS,EAAEE,SAAS,EAAE9wC,aAAa,CAAE;QAEhE,CAAC,MAAM;UAENhvB,QAAQ,CAACgF,MAAM,CAAE46D,SAAS,EAAEE,SAAS,CAAE;QAExC;MAED,CAAC;;MAED;;MAEA,IAAI,CAACh1C,OAAO,GAAG,UAAWvmB,KAAK,EAAE72B,MAAM,EAAG;QAEzC,SAASyyF,OAAOA,CAAEr7E,QAAQ,EAAEyf,KAAK,EAAEtmD,MAAM,EAAG;UAE3C,IAAK6mC,QAAQ,CAAC6D,WAAW,KAAK,IAAI,IAAI7D,QAAQ,CAAC0D,IAAI,KAAK9lC,UAAU,IAAIoiC,QAAQ,CAAC2F,eAAe,KAAK,KAAK,EAAG;YAE1G3F,QAAQ,CAAC0D,IAAI,GAAG/lC,QAAQ;YACxBqiC,QAAQ,CAACniB,WAAW,GAAG,IAAI;YAC3By9F,UAAU,CAAEt7E,QAAQ,EAAEyf,KAAK,EAAEtmD,MAAM,CAAE;YAErC6mC,QAAQ,CAAC0D,IAAI,GAAGhmC,SAAS;YACzBsiC,QAAQ,CAACniB,WAAW,GAAG,IAAI;YAC3By9F,UAAU,CAAEt7E,QAAQ,EAAEyf,KAAK,EAAEtmD,MAAM,CAAE;YAErC6mC,QAAQ,CAAC0D,IAAI,GAAG9lC,UAAU;UAE3B,CAAC,MAAM;YAEN09G,UAAU,CAAEt7E,QAAQ,EAAEyf,KAAK,EAAEtmD,MAAM,CAAE;UAEtC;QAED;QAEA+8G,kBAAkB,GAAG3sB,YAAY,CAACh7E,GAAG,CAAEkxC,KAAK,CAAE;QAC9Cy2D,kBAAkB,CAACp1C,IAAI,EAAE;QAEzBs1C,gBAAgB,CAACz+G,IAAI,CAAEu+G,kBAAkB,CAAE;QAE3Cz2D,KAAK,CAACvhB,eAAe,CAAE,UAAW/kC,MAAM,EAAG;UAE1C,IAAKA,MAAM,CAAC4jC,OAAO,IAAI5jC,MAAM,CAACogC,MAAM,CAAC/f,IAAI,CAAEoP,MAAM,CAAC2Q,MAAM,CAAE,EAAG;YAE5D28E,kBAAkB,CAACjtB,SAAS,CAAE9vF,MAAM,CAAE;YAEtC,IAAKA,MAAM,CAACoiC,UAAU,EAAG;cAExB26E,kBAAkB,CAAChtB,UAAU,CAAE/vF,MAAM,CAAE;YAExC;UAED;QAED,CAAC,CAAE;QAEH+8G,kBAAkB,CAAC9sB,WAAW,CAAEotB,KAAK,CAACj6B,eAAe,CAAE;QAEvD98B,KAAK,CAACxhB,QAAQ,CAAE,UAAW9kC,MAAM,EAAG;UAEnC,IAAM6mC,QAAQ,GAAG7mC,MAAM,CAAC6mC,QAAQ;UAEhC,IAAKA,QAAQ,EAAG;YAEf,IAAK9kB,KAAK,CAACC,OAAO,CAAE6kB,QAAQ,CAAE,EAAG;cAEhC,KAAM,IAAI7nC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6nC,QAAQ,CAAC9nC,MAAM,EAAEC,CAAC,EAAG,EAAG;gBAE5C,IAAMojH,SAAS,GAAGv7E,QAAQ,CAAE7nC,CAAC,CAAE;gBAE/BkjH,OAAO,CAAEE,SAAS,EAAE97D,KAAK,EAAEtmD,MAAM,CAAE;cAEpC;YAED,CAAC,MAAM;cAENkiH,OAAO,CAAEr7E,QAAQ,EAAEyf,KAAK,EAAEtmD,MAAM,CAAE;YAEnC;UAED;QAED,CAAC,CAAE;QAEHi9G,gBAAgB,CAAC/8G,GAAG,EAAE;QACtB68G,kBAAkB,GAAG,IAAI;MAE1B,CAAC;;MAED;;MAEA,IAAIlG,wBAAwB,GAAG,IAAI;MAEnC,SAAS3rD,gBAAgBA,CAAEC,IAAI,EAAG;QAEjC,IAAK0rD,wBAAwB,EAAGA,wBAAwB,CAAE1rD,IAAI,CAAE;MAEjE;MAEA,SAAS41D,gBAAgBA,CAAA,EAAG;QAE3Bh6E,SAAS,CAACxmC,IAAI,EAAE;MAEjB;MAEA,SAASygH,cAAcA,CAAA,EAAG;QAEzBj6E,SAAS,CAACyS,KAAK,EAAE;MAElB;MAEA,IAAMzS,SAAS,GAAG,IAAI+jB,cAAc,EAAE;MACtC/jB,SAAS,CAACwkB,gBAAgB,CAAEL,gBAAgB,CAAE;MAE9C,IAAK,OAAO9wD,IAAI,KAAK,WAAW,EAAG2sC,SAAS,CAACykB,UAAU,CAAEpxD,IAAI,CAAE;MAE/D,IAAI,CAACmxD,gBAAgB,GAAG,UAAWt+B,QAAQ,EAAG;QAE7C4pF,wBAAwB,GAAG5pF,QAAQ;QACnC45B,EAAE,CAAC0E,gBAAgB,CAAEt+B,QAAQ,CAAE;QAE7BA,QAAQ,KAAK,IAAI,GAAK8Z,SAAS,CAACxmC,IAAI,EAAE,GAAGwmC,SAAS,CAACyS,KAAK,EAAE;MAE7D,CAAC;MAEDqN,EAAE,CAAC/3C,gBAAgB,CAAE,cAAc,EAAEiyG,gBAAgB,CAAE;MACvDl6D,EAAE,CAAC/3C,gBAAgB,CAAE,YAAY,EAAEkyG,cAAc,CAAE;;MAEnD;;MAEA,IAAI,CAACj6D,MAAM,GAAG,UAAWT,KAAK,EAAE72B,MAAM,EAAG;QAExC,IAAKA,MAAM,KAAKhyB,SAAS,IAAIgyB,MAAM,CAACkU,QAAQ,KAAK,IAAI,EAAG;UAEvDjhC,OAAO,CAAChG,KAAK,CAAE,wEAAwE,CAAE;UACzF;QAED;QAEA,IAAK4gH,cAAc,KAAK,IAAI,EAAG;;QAE/B;;QAEA,IAAKh3D,KAAK,CAACrkB,qBAAqB,KAAK,IAAI,EAAGqkB,KAAK,CAACrhB,iBAAiB,EAAE;;QAErE;;QAEA,IAAKxV,MAAM,CAAC+R,MAAM,KAAK,IAAI,IAAI/R,MAAM,CAACwS,qBAAqB,KAAK,IAAI,EAAGxS,MAAM,CAACwV,iBAAiB,EAAE;QAEjG,IAAK4hB,EAAE,CAACxnC,OAAO,KAAK,IAAI,IAAIwnC,EAAE,CAACwrD,YAAY,KAAK,IAAI,EAAG;UAEtD,IAAKxrD,EAAE,CAACurD,gBAAgB,KAAK,IAAI,EAAGvrD,EAAE,CAACwvD,YAAY,CAAE5mF,MAAM,CAAE;UAE7DA,MAAM,GAAGo3B,EAAE,CAAC4vD,SAAS,EAAE,CAAC,CAAC;QAE1B;;QAEA;QACA,IAAKnwD,KAAK,CAACtgB,OAAO,KAAK,IAAI,EAAGsgB,KAAK,CAAC7jB,cAAc,CAAE46E,KAAK,EAAE/2D,KAAK,EAAE72B,MAAM,EAAEguF,oBAAoB,CAAE;QAEhGV,kBAAkB,GAAG3sB,YAAY,CAACh7E,GAAG,CAAEkxC,KAAK,EAAE22D,gBAAgB,CAACl+G,MAAM,CAAE;QACvEg+G,kBAAkB,CAACp1C,IAAI,EAAE;QAEzBs1C,gBAAgB,CAACz+G,IAAI,CAAEu+G,kBAAkB,CAAE;QAE3C0B,iBAAiB,CAAClkG,gBAAgB,CAAEkV,MAAM,CAACE,gBAAgB,EAAEF,MAAM,CAACC,kBAAkB,CAAE;QACxF2hE,QAAQ,CAAC5nC,uBAAuB,CAAEg1D,iBAAiB,CAAE;QAErDF,qBAAqB,GAAG,IAAI,CAACj3C,oBAAoB;QACjDg3C,gBAAgB,GAAGv7D,QAAQ,CAAC4kB,IAAI,CAAE,IAAI,CAAC/7B,cAAc,EAAE2yE,qBAAqB,CAAE;QAE9EzB,iBAAiB,GAAG0C,WAAW,CAACpqG,GAAG,CAAEkxC,KAAK,EAAE02D,eAAe,CAACj+G,MAAM,CAAE;QACpE+9G,iBAAiB,CAACn1C,IAAI,EAAE;QAExBq1C,eAAe,CAACx+G,IAAI,CAAEs+G,iBAAiB,CAAE;QAEzCuF,aAAa,CAAE/7D,KAAK,EAAE72B,MAAM,EAAE,CAAC,EAAE4tF,KAAK,CAACF,WAAW,CAAE;QAEpDL,iBAAiB,CAAC57G,MAAM,EAAE;QAE1B,IAAKm8G,KAAK,CAACF,WAAW,KAAK,IAAI,EAAG;UAEjCL,iBAAiB,CAAC7pC,IAAI,CAAEirC,WAAW,EAAEC,gBAAgB,CAAE;QAExD;;QAEA;;QAEA,IAAKG,gBAAgB,KAAK,IAAI,EAAGv7D,QAAQ,CAAC8kB,YAAY,EAAE;QAExD,IAAMgoB,YAAY,GAAGktB,kBAAkB,CAAClgH,KAAK,CAACgzF,YAAY;QAE1DlF,SAAS,CAAC5jC,MAAM,CAAE8oC,YAAY,EAAEvpC,KAAK,EAAE72B,MAAM,CAAE;QAE/C,IAAK6uF,gBAAgB,KAAK,IAAI,EAAGv7D,QAAQ,CAACglB,UAAU,EAAE;;QAEtD;;QAEA,IAAK,IAAI,CAACnqE,IAAI,CAAC0zE,SAAS,KAAK,IAAI,EAAG,IAAI,CAAC1zE,IAAI,CAACe,KAAK,EAAE;;QAErD;;QAEAsnC,UAAU,CAAC8gB,MAAM,CAAE+1D,iBAAiB,EAAEx2D,KAAK,CAAE;;QAE7C;;QAEAy2D,kBAAkB,CAAC9sB,WAAW,CAAEotB,KAAK,CAACj6B,eAAe,CAAE;QAEvD,IAAK3zD,MAAM,CAAC09E,aAAa,EAAG;UAE3B,IAAMC,OAAO,GAAG39E,MAAM,CAAC29E,OAAO;UAE9B,KAAM,IAAIpuG,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGy9F,OAAO,CAACruG,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAElD,IAAMsjH,OAAO,GAAGlV,OAAO,CAAEpuG,CAAC,CAAE;YAE5BujH,WAAW,CAAEzF,iBAAiB,EAAEx2D,KAAK,EAAEg8D,OAAO,EAAEA,OAAO,CAAC/6F,QAAQ,CAAE;UAEnE;QAED,CAAC,MAAM;UAENg7F,WAAW,CAAEzF,iBAAiB,EAAEx2D,KAAK,EAAE72B,MAAM,CAAE;QAEhD;;QAEA;;QAEA,IAAKguF,oBAAoB,KAAK,IAAI,EAAG;UAEpC;;UAEA94F,QAAQ,CAAC2jF,6BAA6B,CAAEmV,oBAAoB,CAAE;;UAE9D;;UAEA94F,QAAQ,CAAC0jF,wBAAwB,CAAEoV,oBAAoB,CAAE;QAE1D;;QAEA;;QAEA,IAAKn3D,KAAK,CAACtgB,OAAO,KAAK,IAAI,EAAGsgB,KAAK,CAAC5jB,aAAa,CAAE26E,KAAK,EAAE/2D,KAAK,EAAE72B,MAAM,CAAE;;QAEzE;;QAEAqxC,aAAa,CAAC4D,iBAAiB,EAAE;QACjCg5C,kBAAkB,GAAG,CAAE,CAAC;QACxBC,cAAc,GAAG,IAAI;QAErBV,gBAAgB,CAAC/8G,GAAG,EAAE;QAEtB,IAAK+8G,gBAAgB,CAACl+G,MAAM,GAAG,CAAC,EAAG;UAElCg+G,kBAAkB,GAAGE,gBAAgB,CAAEA,gBAAgB,CAACl+G,MAAM,GAAG,CAAC,CAAE;QAErE,CAAC,MAAM;UAENg+G,kBAAkB,GAAG,IAAI;QAE1B;QAEAC,eAAe,CAAC98G,GAAG,EAAE;QAErB,IAAK88G,eAAe,CAACj+G,MAAM,GAAG,CAAC,EAAG;UAEjC+9G,iBAAiB,GAAGE,eAAe,CAAEA,eAAe,CAACj+G,MAAM,GAAG,CAAC,CAAE;QAElE,CAAC,MAAM;UAEN+9G,iBAAiB,GAAG,IAAI;QAEzB;MAED,CAAC;MAED,SAASuF,aAAaA,CAAEriH,MAAM,EAAEyvB,MAAM,EAAE87D,UAAU,EAAE4xB,WAAW,EAAG;QAEjE,IAAKn9G,MAAM,CAACmiC,OAAO,KAAK,KAAK,EAAG;QAEhC,IAAMA,OAAO,GAAGniC,MAAM,CAACogC,MAAM,CAAC/f,IAAI,CAAEoP,MAAM,CAAC2Q,MAAM,CAAE;QAEnD,IAAK+B,OAAO,EAAG;UAEd,IAAKniC,MAAM,CAACytG,OAAO,EAAG;YAErBliB,UAAU,GAAGvrF,MAAM,CAACuiC,WAAW;UAEhC,CAAC,MAAM,IAAKviC,MAAM,CAACwiH,KAAK,EAAG;YAE1B,IAAKxiH,MAAM,CAACqyF,UAAU,KAAK,IAAI,EAAGryF,MAAM,CAACsqB,MAAM,CAAEmF,MAAM,CAAE;UAE1D,CAAC,MAAM,IAAKzvB,MAAM,CAAC4jC,OAAO,EAAG;YAE5Bm5E,kBAAkB,CAACjtB,SAAS,CAAE9vF,MAAM,CAAE;YAEtC,IAAKA,MAAM,CAACoiC,UAAU,EAAG;cAExB26E,kBAAkB,CAAChtB,UAAU,CAAE/vF,MAAM,CAAE;YAExC;UAED,CAAC,MAAM,IAAKA,MAAM,CAACgiH,QAAQ,EAAG;YAE7B,IAAK,CAAEhiH,MAAM,CAACsiC,aAAa,IAAI+uD,QAAQ,CAAC1mC,gBAAgB,CAAE3qD,MAAM,CAAE,EAAG;cAEpE,IAAKm9G,WAAW,EAAG;gBAElBuB,QAAQ,CAACrtF,qBAAqB,CAAErxB,MAAM,CAAC8vB,WAAW,CAAE,CAClDvK,YAAY,CAAEk5F,iBAAiB,CAAE;cAEpC;cAEA,IAAM/qF,QAAQ,GAAGurC,OAAO,CAAC30C,MAAM,CAAEtqB,MAAM,CAAE;cACzC,IAAM6mC,QAAQ,GAAG7mC,MAAM,CAAC6mC,QAAQ;cAEhC,IAAKA,QAAQ,CAAC1E,OAAO,EAAG;gBAEvB26E,iBAAiB,CAACt+G,IAAI,CAAEwB,MAAM,EAAE0zB,QAAQ,EAAEmT,QAAQ,EAAE0kD,UAAU,EAAEmzB,QAAQ,CAACx5F,CAAC,EAAE,IAAI,CAAE;cAEnF;YAED;UAED,CAAC,MAAM,IAAKllB,MAAM,CAAComC,MAAM,IAAIpmC,MAAM,CAACqmC,MAAM,IAAIrmC,MAAM,CAACsmC,QAAQ,EAAG;YAE/D,IAAKtmC,MAAM,CAACymC,aAAa,EAAG;cAE3B;;cAEA,IAAKzmC,MAAM,CAAC4mC,QAAQ,CAACwkB,KAAK,KAAKxtD,IAAI,CAACmpD,MAAM,CAACqE,KAAK,EAAG;gBAElDprD,MAAM,CAAC4mC,QAAQ,CAACtc,MAAM,EAAE;gBACxBtqB,MAAM,CAAC4mC,QAAQ,CAACwkB,KAAK,GAAGxtD,IAAI,CAACmpD,MAAM,CAACqE,KAAK;cAE1C;YAED;YAEA,IAAK,CAAEprD,MAAM,CAACsiC,aAAa,IAAI+uD,QAAQ,CAAC3mC,gBAAgB,CAAE1qD,MAAM,CAAE,EAAG;cAEpE,IAAKm9G,WAAW,EAAG;gBAElBuB,QAAQ,CAACrtF,qBAAqB,CAAErxB,MAAM,CAAC8vB,WAAW,CAAE,CAClDvK,YAAY,CAAEk5F,iBAAiB,CAAE;cAEpC;cAEA,IAAM/qF,UAAQ,GAAGurC,OAAO,CAAC30C,MAAM,CAAEtqB,MAAM,CAAE;cACzC,IAAM6mC,SAAQ,GAAG7mC,MAAM,CAAC6mC,QAAQ;cAEhC,IAAK9kB,KAAK,CAACC,OAAO,CAAE6kB,SAAQ,CAAE,EAAG;gBAEhC,IAAMwS,MAAM,GAAG3lB,UAAQ,CAAC2lB,MAAM;gBAE9B,KAAM,IAAIr6C,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG0pC,MAAM,CAACt6C,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;kBAEjD,IAAM48C,KAAK,GAAGvC,MAAM,CAAEr6C,CAAC,CAAE;kBACzB,IAAMwgD,aAAa,GAAG3Y,SAAQ,CAAE+U,KAAK,CAAC5B,aAAa,CAAE;kBAErD,IAAKwF,aAAa,IAAIA,aAAa,CAACrd,OAAO,EAAG;oBAE7C26E,iBAAiB,CAACt+G,IAAI,CAAEwB,MAAM,EAAE0zB,UAAQ,EAAE8rB,aAAa,EAAE+rC,UAAU,EAAEmzB,QAAQ,CAACx5F,CAAC,EAAE02B,KAAK,CAAE;kBAEzF;gBAED;cAED,CAAC,MAAM,IAAK/U,SAAQ,CAAC1E,OAAO,EAAG;gBAE9B26E,iBAAiB,CAACt+G,IAAI,CAAEwB,MAAM,EAAE0zB,UAAQ,EAAEmT,SAAQ,EAAE0kD,UAAU,EAAEmzB,QAAQ,CAACx5F,CAAC,EAAE,IAAI,CAAE;cAEnF;YAED;UAED;QAED;QAEA,IAAM2O,QAAQ,GAAG7zB,MAAM,CAAC6zB,QAAQ;QAEhC,KAAM,IAAI70B,IAAC,GAAG,CAAC,EAAE2Q,GAAC,GAAGkkB,QAAQ,CAAC90B,MAAM,EAAEC,IAAC,GAAG2Q,GAAC,EAAE3Q,IAAC,EAAG,EAAG;UAEnDqjH,aAAa,CAAExuF,QAAQ,CAAE70B,IAAC,CAAE,EAAEywB,MAAM,EAAE87D,UAAU,EAAE4xB,WAAW,CAAE;QAEhE;MAED;MAEA,SAASoF,WAAWA,CAAEzF,iBAAiB,EAAEx2D,KAAK,EAAE72B,MAAM,EAAElI,QAAQ,EAAG;QAElE,IAAMk7F,aAAa,GAAG3F,iBAAiB,CAACz5B,MAAM;QAC9C,IAAMq/B,mBAAmB,GAAG5F,iBAAiB,CAAClxB,YAAY;QAC1D,IAAM+2B,kBAAkB,GAAG7F,iBAAiB,CAACpyE,WAAW;QAExDqyE,kBAAkB,CAAC7sB,eAAe,CAAEzgE,MAAM,CAAE;QAE5C,IAAK6uF,gBAAgB,KAAK,IAAI,EAAGv7D,QAAQ,CAACilB,cAAc,CAAEq1C,KAAK,CAACzxE,cAAc,EAAEnc,MAAM,CAAE;QAExF,IAAKizF,mBAAmB,CAAC3jH,MAAM,GAAG,CAAC,EAAG6jH,sBAAsB,CAAEH,aAAa,EAAEC,mBAAmB,EAAEp8D,KAAK,EAAE72B,MAAM,CAAE;QAEjH,IAAKlI,QAAQ,EAAG1qB,KAAK,CAAC0qB,QAAQ,CAAEq2F,gBAAgB,CAAChoG,IAAI,CAAE2R,QAAQ,CAAE,CAAE;QAEnE,IAAKk7F,aAAa,CAAC1jH,MAAM,GAAG,CAAC,EAAG8jH,aAAa,CAAEJ,aAAa,EAAEn8D,KAAK,EAAE72B,MAAM,CAAE;QAC7E,IAAKizF,mBAAmB,CAAC3jH,MAAM,GAAG,CAAC,EAAG8jH,aAAa,CAAEH,mBAAmB,EAAEp8D,KAAK,EAAE72B,MAAM,CAAE;QACzF,IAAKkzF,kBAAkB,CAAC5jH,MAAM,GAAG,CAAC,EAAG8jH,aAAa,CAAEF,kBAAkB,EAAEr8D,KAAK,EAAE72B,MAAM,CAAE;;QAEvF;;QAEA5yB,KAAK,CAACgvD,OAAO,CAACzkC,KAAK,CAACwrE,OAAO,CAAE,IAAI,CAAE;QACnC/1F,KAAK,CAACgvD,OAAO,CAACzkC,KAAK,CAAC2tE,OAAO,CAAE,IAAI,CAAE;QACnCl4F,KAAK,CAACgvD,OAAO,CAAChtC,KAAK,CAACk2E,OAAO,CAAE,IAAI,CAAE;QAEnCl4F,KAAK,CAACw/F,gBAAgB,CAAE,KAAK,CAAE;MAEhC;MAEA,SAASumB,sBAAsBA,CAAEH,aAAa,EAAEC,mBAAmB,EAAEp8D,KAAK,EAAE72B,MAAM,EAAG;QAEpF,IAAK+uF,yBAAyB,KAAK,IAAI,EAAG;UAEzC,IAAM5yD,QAAQ,GAAGD,YAAY,CAACC,QAAQ;UAEtC4yD,yBAAyB,GAAG,IAAI13F,iBAAiB,CAAE,IAAI,EAAE,IAAI,EAAE;YAC9DhD,eAAe,EAAE,IAAI;YACrB9oB,IAAI,EAAEgoD,UAAU,CAACoiB,GAAG,CAAE,6BAA6B,CAAE,GAAGx8D,aAAa,GAAGP,gBAAgB;YACxF2a,SAAS,EAAE7a,wBAAwB;YACnCyf,OAAO,EAAIgkC,QAAQ,IAAIuoD,SAAS,KAAK,IAAI,GAAK,CAAC,GAAG;UACnD,CAAC,CAAE;;UAEH;;UAEA;AACL;AACA;AACA;AACA;AACA;QAGI;;QAEA;;QAEA,IAAM1tD,mBAAmB,GAAG42D,KAAK,CAACr7D,eAAe,EAAE;QACnDq7D,KAAK,CAACv2D,eAAe,CAAE03D,yBAAyB,CAAE;QAClDnB,KAAK,CAACr5E,KAAK,EAAE;;QAEb;QACA;QACA,IAAM0iB,kBAAkB,GAAG22D,KAAK,CAAC12D,WAAW;QAC5C02D,KAAK,CAAC12D,WAAW,GAAG//C,aAAa;QAEjCi8G,aAAa,CAAEJ,aAAa,EAAEn8D,KAAK,EAAE72B,MAAM,CAAE;QAE7C9K,QAAQ,CAAC2jF,6BAA6B,CAAEkW,yBAAyB,CAAE;QACnE75F,QAAQ,CAAC0jF,wBAAwB,CAAEmW,yBAAyB,CAAE;QAE9D,IAAIsE,uBAAuB,GAAG,KAAK;QAEnC,KAAM,IAAI9jH,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG+yG,mBAAmB,CAAC3jH,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAE9D,IAAM8sF,UAAU,GAAG42B,mBAAmB,CAAE1jH,CAAC,CAAE;UAE3C,IAAMgB,MAAM,GAAG8rF,UAAU,CAAC9rF,MAAM;UAChC,IAAM0zB,QAAQ,GAAGo4D,UAAU,CAACp4D,QAAQ;UACpC,IAAMmT,QAAQ,GAAGilD,UAAU,CAACjlD,QAAQ;UACpC,IAAM+U,KAAK,GAAGkwC,UAAU,CAAClwC,KAAK;UAE9B,IAAK/U,QAAQ,CAAC0D,IAAI,KAAK9lC,UAAU,IAAIzE,MAAM,CAACogC,MAAM,CAAC/f,IAAI,CAAEoP,MAAM,CAAC2Q,MAAM,CAAE,EAAG;YAE1E,IAAM2iF,WAAW,GAAGl8E,QAAQ,CAAC0D,IAAI;YAEjC1D,QAAQ,CAAC0D,IAAI,GAAG/lC,QAAQ;YACxBqiC,QAAQ,CAACniB,WAAW,GAAG,IAAI;YAE3B4uE,YAAY,CAAEtzF,MAAM,EAAEsmD,KAAK,EAAE72B,MAAM,EAAEiE,QAAQ,EAAEmT,QAAQ,EAAE+U,KAAK,CAAE;YAEhE/U,QAAQ,CAAC0D,IAAI,GAAGw4E,WAAW;YAC3Bl8E,QAAQ,CAACniB,WAAW,GAAG,IAAI;YAE3Bo+F,uBAAuB,GAAG,IAAI;UAE/B;QAED;QAEA,IAAKA,uBAAuB,KAAK,IAAI,EAAG;UAEvCn+F,QAAQ,CAAC2jF,6BAA6B,CAAEkW,yBAAyB,CAAE;UACnE75F,QAAQ,CAAC0jF,wBAAwB,CAAEmW,yBAAyB,CAAE;QAE/D;QAEAnB,KAAK,CAACv2D,eAAe,CAAEL,mBAAmB,CAAE;QAE5C42D,KAAK,CAAC12D,WAAW,GAAGD,kBAAkB;MAEvC;MAEA,SAASm8D,aAAaA,CAAEpjD,UAAU,EAAEnZ,KAAK,EAAE72B,MAAM,EAAG;QAEnD,IAAMmvF,gBAAgB,GAAGt4D,KAAK,CAACtgB,OAAO,KAAK,IAAI,GAAGsgB,KAAK,CAACs4D,gBAAgB,GAAG,IAAI;QAE/E,KAAM,IAAI5/G,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG8vD,UAAU,CAAC1gE,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAErD,IAAM8sF,UAAU,GAAGrsB,UAAU,CAAEzgE,CAAC,CAAE;UAElC,IAAMgB,MAAM,GAAG8rF,UAAU,CAAC9rF,MAAM;UAChC,IAAM0zB,QAAQ,GAAGo4D,UAAU,CAACp4D,QAAQ;UACpC,IAAMmT,QAAQ,GAAG+3E,gBAAgB,KAAK,IAAI,GAAG9yB,UAAU,CAACjlD,QAAQ,GAAG+3E,gBAAgB;UACnF,IAAMhjE,KAAK,GAAGkwC,UAAU,CAAClwC,KAAK;UAE9B,IAAK57C,MAAM,CAACogC,MAAM,CAAC/f,IAAI,CAAEoP,MAAM,CAAC2Q,MAAM,CAAE,EAAG;YAE1CkzD,YAAY,CAAEtzF,MAAM,EAAEsmD,KAAK,EAAE72B,MAAM,EAAEiE,QAAQ,EAAEmT,QAAQ,EAAE+U,KAAK,CAAE;UAEjE;QAED;MAED;MAEA,SAAS03C,YAAYA,CAAEtzF,MAAM,EAAEsmD,KAAK,EAAE72B,MAAM,EAAEiE,QAAQ,EAAEmT,QAAQ,EAAE+U,KAAK,EAAG;QAEzE57C,MAAM,CAACyiC,cAAc,CAAE46E,KAAK,EAAE/2D,KAAK,EAAE72B,MAAM,EAAEiE,QAAQ,EAAEmT,QAAQ,EAAE+U,KAAK,CAAE;QAExE57C,MAAM,CAAC6hC,eAAe,CAACtnB,gBAAgB,CAAEkV,MAAM,CAACC,kBAAkB,EAAE1vB,MAAM,CAAC8vB,WAAW,CAAE;QACxF9vB,MAAM,CAAC8hC,YAAY,CAACplB,eAAe,CAAE1c,MAAM,CAAC6hC,eAAe,CAAE;QAE7DgF,QAAQ,CAACpE,cAAc,CAAE46E,KAAK,EAAE/2D,KAAK,EAAE72B,MAAM,EAAEiE,QAAQ,EAAE1zB,MAAM,EAAE47C,KAAK,CAAE;QAExE,IAAK/U,QAAQ,CAAC6D,WAAW,KAAK,IAAI,IAAI7D,QAAQ,CAAC0D,IAAI,KAAK9lC,UAAU,IAAIoiC,QAAQ,CAAC2F,eAAe,KAAK,KAAK,EAAG;UAE1G3F,QAAQ,CAAC0D,IAAI,GAAG/lC,QAAQ;UACxBqiC,QAAQ,CAACniB,WAAW,GAAG,IAAI;UAC3B24F,KAAK,CAAC1pB,kBAAkB,CAAElkE,MAAM,EAAE62B,KAAK,EAAE5yB,QAAQ,EAAEmT,QAAQ,EAAE7mC,MAAM,EAAE47C,KAAK,CAAE;UAE5E/U,QAAQ,CAAC0D,IAAI,GAAGhmC,SAAS;UACzBsiC,QAAQ,CAACniB,WAAW,GAAG,IAAI;UAC3B24F,KAAK,CAAC1pB,kBAAkB,CAAElkE,MAAM,EAAE62B,KAAK,EAAE5yB,QAAQ,EAAEmT,QAAQ,EAAE7mC,MAAM,EAAE47C,KAAK,CAAE;UAE5E/U,QAAQ,CAAC0D,IAAI,GAAG9lC,UAAU;QAE3B,CAAC,MAAM;UAEN44G,KAAK,CAAC1pB,kBAAkB,CAAElkE,MAAM,EAAE62B,KAAK,EAAE5yB,QAAQ,EAAEmT,QAAQ,EAAE7mC,MAAM,EAAE47C,KAAK,CAAE;QAE7E;QAEA57C,MAAM,CAAC0iC,aAAa,CAAE26E,KAAK,EAAE/2D,KAAK,EAAE72B,MAAM,EAAEiE,QAAQ,EAAEmT,QAAQ,EAAE+U,KAAK,CAAE;MAExE;MAEA,SAASumE,UAAUA,CAAEt7E,QAAQ,EAAEyf,KAAK,EAAEtmD,MAAM,EAAG;QAE9C,IAAKsmD,KAAK,CAACtgB,OAAO,KAAK,IAAI,EAAGsgB,KAAK,GAAGq4D,WAAW,CAAC,CAAC;;QAEnD,IAAMx2C,kBAAkB,GAAG1N,UAAU,CAACrlD,GAAG,CAAEyxB,QAAQ,CAAE;QAErD,IAAMic,MAAM,GAAGi6D,kBAAkB,CAAClgH,KAAK,CAACimD,MAAM;QAC9C,IAAM+sC,YAAY,GAAGktB,kBAAkB,CAAClgH,KAAK,CAACgzF,YAAY;QAE1D,IAAMmzB,kBAAkB,GAAGlgE,MAAM,CAACjmD,KAAK,CAAC2kB,OAAO;QAE/C,IAAM+kB,UAAU,GAAGg5E,YAAY,CAAC13B,aAAa,CAAEhhD,QAAQ,EAAEic,MAAM,CAACjmD,KAAK,EAAEgzF,YAAY,EAAEvpC,KAAK,EAAEtmD,MAAM,CAAE;QACpG,IAAMijH,eAAe,GAAG1D,YAAY,CAAC30B,kBAAkB,CAAErkD,UAAU,CAAE;QAErE,IAAI8qC,QAAQ,GAAGlJ,kBAAkB,CAACkJ,QAAQ;;QAE1C;;QAEAlJ,kBAAkB,CAAChiC,WAAW,GAAGU,QAAQ,CAACkhD,sBAAsB,GAAGzhC,KAAK,CAACngB,WAAW,GAAG,IAAI;QAC3FgiC,kBAAkB,CAAC/2B,GAAG,GAAGkV,KAAK,CAAClV,GAAG;QAClC+2B,kBAAkB,CAACr4B,MAAM,GAAG,CAAEjJ,QAAQ,CAACkhD,sBAAsB,GAAG/oB,UAAU,GAAGD,QAAQ,EAAG3pD,GAAG,CAAEyxB,QAAQ,CAACiJ,MAAM,IAAIq4B,kBAAkB,CAAChiC,WAAW,CAAE;QAEhJ,IAAKkrC,QAAQ,KAAK5zE,SAAS,EAAG;UAE7B;;UAEAopC,QAAQ,CAAC/3B,gBAAgB,CAAE,SAAS,EAAEwyG,iBAAiB,CAAE;UAEzDjwC,QAAQ,GAAG,IAAIkU,GAAG,EAAE;UACpBpd,kBAAkB,CAACkJ,QAAQ,GAAGA,QAAQ;QAEvC;QAEA,IAAIjQ,OAAO,GAAGiQ,QAAQ,CAACj8D,GAAG,CAAE6tG,eAAe,CAAE;QAE7C,IAAK7hD,OAAO,KAAK3jE,SAAS,EAAG;UAE5B;;UAEA,IAAK0qE,kBAAkB,CAACsvB,cAAc,KAAKr2B,OAAO,IAAI+G,kBAAkB,CAAC66C,kBAAkB,KAAKA,kBAAkB,EAAG;YAEpHE,8BAA8B,CAAEr8E,QAAQ,EAAEN,UAAU,CAAE;YAEtD,OAAO66B,OAAO;UAEf;QAED,CAAC,MAAM;UAEN76B,UAAU,CAACob,QAAQ,GAAG49D,YAAY,CAACzsC,WAAW,CAAEjsC,QAAQ,CAAE;UAE1DA,QAAQ,CAAC8F,OAAO,CAAE3sC,MAAM,EAAEumC,UAAU,EAAE82E,KAAK,CAAE;UAE7Cx2E,QAAQ,CAAC+F,eAAe,CAAErG,UAAU,EAAE82E,KAAK,CAAE;UAE7Cj8C,OAAO,GAAGm+C,YAAY,CAACv0B,cAAc,CAAEzkD,UAAU,EAAE08E,eAAe,CAAE;UACpE5xC,QAAQ,CAAC98D,GAAG,CAAE0uG,eAAe,EAAE7hD,OAAO,CAAE;UAExC+G,kBAAkB,CAACxmB,QAAQ,GAAGpb,UAAU,CAACob,QAAQ;QAElD;QAEA,IAAMA,QAAQ,GAAGwmB,kBAAkB,CAACxmB,QAAQ;QAE5C,IAAO,CAAE9a,QAAQ,CAAC4b,gBAAgB,IAAI,CAAE5b,QAAQ,CAACg6C,mBAAmB,IAAMh6C,QAAQ,CAACkc,QAAQ,KAAK,IAAI,EAAG;UAEtGpB,QAAQ,CAAC/V,cAAc,GAAGmX,QAAQ,CAACU,OAAO;QAE3C;QAEAy/D,8BAA8B,CAAEr8E,QAAQ,EAAEN,UAAU,CAAE;;QAEtD;;QAEA4hC,kBAAkB,CAACg7C,WAAW,GAAGC,mBAAmB,CAAEv8E,QAAQ,CAAE;QAChEshC,kBAAkB,CAAC66C,kBAAkB,GAAGA,kBAAkB;QAE1D,IAAK76C,kBAAkB,CAACg7C,WAAW,EAAG;UAErC;;UAEAxhE,QAAQ,CAAC2Y,iBAAiB,CAACnhE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAAC8wF,OAAO;UACvDhsC,QAAQ,CAAC4Y,UAAU,CAACphE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAAC+wF,KAAK;UAC9CjsC,QAAQ,CAAC6Y,iBAAiB,CAACrhE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAAC0tF,WAAW;UAC3D5oC,QAAQ,CAAC+Y,uBAAuB,CAACvhE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACgxF,iBAAiB;UACvElsC,QAAQ,CAACsZ,UAAU,CAAC9hE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAAC2tF,IAAI;UAC7C7oC,QAAQ,CAAC0Z,gBAAgB,CAACliE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACixF,UAAU;UACzDnsC,QAAQ,CAACua,cAAc,CAAC/iE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAAC4tF,QAAQ;UACrD9oC,QAAQ,CAACwa,KAAK,CAAChjE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACkxF,YAAY;UAChDpsC,QAAQ,CAACya,KAAK,CAACjjE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACmxF,YAAY;UAChDrsC,QAAQ,CAAC8Z,WAAW,CAACtiE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACo2B,KAAK;UAC/C0uB,QAAQ,CAAC+Z,iBAAiB,CAACviE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACoxF,WAAW;UAC3DtsC,QAAQ,CAACoa,gBAAgB,CAAC5iE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAAC6tF,IAAI;UAEnD/oC,QAAQ,CAACoZ,oBAAoB,CAAC5hE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACk+D,oBAAoB;UACvEpZ,QAAQ,CAACqZ,uBAAuB,CAAC7hE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACm+D,uBAAuB;UAC7ErZ,QAAQ,CAAC4Z,aAAa,CAACpiE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAAC0+D,aAAa;UACzD5Z,QAAQ,CAAC6Z,eAAe,CAACriE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAAC2+D,eAAe;UAC7D7Z,QAAQ,CAAC2Z,YAAY,CAACniE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACy+D,YAAY;UACvD3Z,QAAQ,CAACka,cAAc,CAAC1iE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACg/D,cAAc;UAC3Dla,QAAQ,CAACma,iBAAiB,CAAC3iE,KAAK,GAAG2pD,MAAM,CAACjmD,KAAK,CAACi/D,iBAAiB;UACjE;QAED;;QAEA,IAAMunD,YAAY,GAAGjiD,OAAO,CAAC0R,WAAW,EAAE;QAC1C,IAAMwwC,YAAY,GAAGnpC,aAAa,CAACO,YAAY,CAAE2oC,YAAY,CAAC/pC,GAAG,EAAE33B,QAAQ,CAAE;QAE7EwmB,kBAAkB,CAACsvB,cAAc,GAAGr2B,OAAO;QAC3C+G,kBAAkB,CAACm7C,YAAY,GAAGA,YAAY;QAE9C,OAAOliD,OAAO;MAEf;MAEA,SAAS8hD,8BAA8BA,CAAEr8E,QAAQ,EAAEN,UAAU,EAAG;QAE/D,IAAM4hC,kBAAkB,GAAG1N,UAAU,CAACrlD,GAAG,CAAEyxB,QAAQ,CAAE;QAErDshC,kBAAkB,CAAClmB,cAAc,GAAG1b,UAAU,CAAC0b,cAAc;QAC7DkmB,kBAAkB,CAAC4Y,UAAU,GAAGx6C,UAAU,CAACw6C,UAAU;QACrD5Y,kBAAkB,CAAC2a,QAAQ,GAAGv8C,UAAU,CAACu8C,QAAQ;QACjD3a,kBAAkB,CAACgK,YAAY,GAAG5rC,UAAU,CAAC4rC,YAAY;QACzDhK,kBAAkB,CAACiK,YAAY,GAAG7rC,UAAU,CAAC6rC,YAAY;QACzDjK,kBAAkB,CAACkK,WAAW,GAAG9rC,UAAU,CAAC8rC,WAAW;QACvDlK,kBAAkB,CAAC4J,iBAAiB,GAAGxrC,UAAU,CAACwrC,iBAAiB;QACnE5J,kBAAkB,CAACsW,iBAAiB,GAAGl4C,UAAU,CAACk4C,iBAAiB;QACnEtW,kBAAkB,CAACT,eAAe,GAAGnhC,UAAU,CAACm4C,mBAAmB;QACnEvW,kBAAkB,CAACwa,YAAY,GAAGp8C,UAAU,CAACo8C,YAAY;QACzDxa,kBAAkB,CAACua,cAAc,GAAGn8C,UAAU,CAACm8C,cAAc;QAC7Dva,kBAAkB,CAACxhB,WAAW,GAAGpgB,UAAU,CAACogB,WAAW;MAExD;MAEA,SAAS86D,UAAUA,CAAEhyF,MAAM,EAAE62B,KAAK,EAAE5yB,QAAQ,EAAEmT,QAAQ,EAAE7mC,MAAM,EAAG;QAEhE,IAAKsmD,KAAK,CAACtgB,OAAO,KAAK,IAAI,EAAGsgB,KAAK,GAAGq4D,WAAW,CAAC,CAAC;;QAEnDh6F,QAAQ,CAACo+E,iBAAiB,EAAE;QAE5B,IAAM3xD,GAAG,GAAGkV,KAAK,CAAClV,GAAG;QACrB,IAAMjL,WAAW,GAAGU,QAAQ,CAACkhD,sBAAsB,GAAGzhC,KAAK,CAACngB,WAAW,GAAG,IAAI;QAC9E,IAAM/iB,QAAQ,GAAKq6F,oBAAoB,KAAK,IAAI,GAAKJ,KAAK,CAACp7D,cAAc,GAAKw7D,oBAAoB,CAACrzB,gBAAgB,KAAK,IAAI,GAAGqzB,oBAAoB,CAACj2F,OAAO,CAACpE,QAAQ,GAAG7W,cAAgB;QACvL,IAAMujC,MAAM,GAAG,CAAEjJ,QAAQ,CAACkhD,sBAAsB,GAAG/oB,UAAU,GAAGD,QAAQ,EAAG3pD,GAAG,CAAEyxB,QAAQ,CAACiJ,MAAM,IAAI3J,WAAW,CAAE;QAChH,IAAMw8C,YAAY,GAAG97C,QAAQ,CAAC2D,YAAY,KAAK,IAAI,IAAI,CAAC,CAAE9W,QAAQ,CAACC,UAAU,CAAC9U,KAAK,IAAI6U,QAAQ,CAACC,UAAU,CAAC9U,KAAK,CAACu2B,QAAQ,KAAK,CAAC;QAC/H,IAAMstC,cAAc,GAAG,CAAC,CAAE77C,QAAQ,CAACqI,SAAS,IAAI,CAAC,CAAExb,QAAQ,CAACC,UAAU,CAACwmB,OAAO;QAC9E,IAAMg4B,YAAY,GAAG,CAAC,CAAEz+C,QAAQ,CAACylB,eAAe,CAACvlB,QAAQ;QACzD,IAAMw+C,YAAY,GAAG,CAAC,CAAE1+C,QAAQ,CAACylB,eAAe,CAACvoB,MAAM;QACvD,IAAMyhD,WAAW,GAAG,CAAC,CAAE3+C,QAAQ,CAACylB,eAAe,CAACt6B,KAAK;QACrD,IAAM8nC,WAAW,GAAG9f,QAAQ,CAAC4F,UAAU,GAAG4wE,KAAK,CAAC12D,WAAW,GAAG//C,aAAa;QAE3E,IAAM2zC,cAAc,GAAG7mB,QAAQ,CAACylB,eAAe,CAACvlB,QAAQ,IAAIF,QAAQ,CAACylB,eAAe,CAACvoB,MAAM,IAAI8C,QAAQ,CAACylB,eAAe,CAACt6B,KAAK;QAC7H,IAAMkzD,iBAAiB,GAAKx3B,cAAc,KAAK98C,SAAS,GAAK88C,cAAc,CAACx7C,MAAM,GAAG,CAAC;QAEtF,IAAMopE,kBAAkB,GAAG1N,UAAU,CAACrlD,GAAG,CAAEyxB,QAAQ,CAAE;QACrD,IAAMic,MAAM,GAAGi6D,kBAAkB,CAAClgH,KAAK,CAACimD,MAAM;QAE9C,IAAKw7D,gBAAgB,KAAK,IAAI,EAAG;UAEhC,IAAKC,qBAAqB,KAAK,IAAI,IAAI9uF,MAAM,KAAKkuF,cAAc,EAAG;YAElE,IAAMz1C,QAAQ,GACbz4C,MAAM,KAAKkuF,cAAc,IACzB92E,QAAQ,CAAC1C,EAAE,KAAKu5E,kBAAkB;;YAEnC;YACA;YACA;YACA36D,QAAQ,CAACklB,QAAQ,CAAEphC,QAAQ,EAAEpX,MAAM,EAAEy4C,QAAQ,CAAE;UAEhD;QAED;;QAEA;;QAEA,IAAIq7C,kBAAkB,GAAG,KAAK;QAE9B,IAAK18E,QAAQ,CAACrlB,OAAO,KAAK2mD,kBAAkB,CAACi7B,SAAS,EAAG;UAExD,IAAKj7B,kBAAkB,CAACg7C,WAAW,IAAMh7C,kBAAkB,CAAC66C,kBAAkB,KAAKlgE,MAAM,CAACjmD,KAAK,CAAC2kB,OAAS,EAAG;YAE3G+hG,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKp7C,kBAAkB,CAAClmB,cAAc,KAAK7+B,QAAQ,EAAG;YAE5DmgG,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKvjH,MAAM,CAAC0lC,eAAe,IAAIyiC,kBAAkB,CAAC4Y,UAAU,KAAK,KAAK,EAAG;YAE/EwiC,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAK,CAAEvjH,MAAM,CAAC0lC,eAAe,IAAIyiC,kBAAkB,CAAC4Y,UAAU,KAAK,IAAI,EAAG;YAEhFwiC,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKvjH,MAAM,CAACymC,aAAa,IAAI0hC,kBAAkB,CAAC2a,QAAQ,KAAK,KAAK,EAAG;YAE3EygC,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAK,CAAEvjH,MAAM,CAACymC,aAAa,IAAI0hC,kBAAkB,CAAC2a,QAAQ,KAAK,IAAI,EAAG;YAE5EygC,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKp7C,kBAAkB,CAACr4B,MAAM,KAAKA,MAAM,EAAG;YAElDyzE,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAK18E,QAAQ,CAACuK,GAAG,KAAK,IAAI,IAAI+2B,kBAAkB,CAAC/2B,GAAG,KAAKA,GAAG,EAAG;YAErEmyE,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKp7C,kBAAkB,CAACsW,iBAAiB,KAAKhhF,SAAS,KAC3D0qE,kBAAkB,CAACsW,iBAAiB,KAAK17B,QAAQ,CAAC0kB,SAAS,IAC7DU,kBAAkB,CAACT,eAAe,KAAK3kB,QAAQ,CAAC2kB,eAAe,CAAE,EAAG;YAEpE67C,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKp7C,kBAAkB,CAACwa,YAAY,KAAKA,YAAY,EAAG;YAE9D4gC,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKp7C,kBAAkB,CAACua,cAAc,KAAKA,cAAc,EAAG;YAElE6gC,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKp7C,kBAAkB,CAACgK,YAAY,KAAKA,YAAY,EAAG;YAE9DoxC,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKp7C,kBAAkB,CAACiK,YAAY,KAAKA,YAAY,EAAG;YAE9DmxC,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKp7C,kBAAkB,CAACkK,WAAW,KAAKA,WAAW,EAAG;YAE5DkxC,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAKp7C,kBAAkB,CAACxhB,WAAW,KAAKA,WAAW,EAAG;YAE5D48D,kBAAkB,GAAG,IAAI;UAE1B,CAAC,MAAM,IAAK53D,YAAY,CAACC,QAAQ,KAAK,IAAI,IAAIuc,kBAAkB,CAAC4J,iBAAiB,KAAKA,iBAAiB,EAAG;YAE1GwxC,kBAAkB,GAAG,IAAI;UAE1B;QAED,CAAC,MAAM;UAENA,kBAAkB,GAAG,IAAI;UACzBp7C,kBAAkB,CAACi7B,SAAS,GAAGv8D,QAAQ,CAACrlB,OAAO;QAEhD;;QAEA;;QAEA,IAAI4/C,OAAO,GAAG+G,kBAAkB,CAACsvB,cAAc;QAE/C,IAAK8rB,kBAAkB,KAAK,IAAI,EAAG;UAElCniD,OAAO,GAAG+gD,UAAU,CAAEt7E,QAAQ,EAAEyf,KAAK,EAAEtmD,MAAM,CAAE;QAEhD;QAEA,IAAIwjH,cAAc,GAAG,KAAK;QAC1B,IAAIC,eAAe,GAAG,KAAK;QAC3B,IAAIC,aAAa,GAAG,KAAK;QAEzB,IAAMC,UAAU,GAAGviD,OAAO,CAAC0R,WAAW,EAAE;UACvC8wC,UAAU,GAAGz7C,kBAAkB,CAACxmB,QAAQ;QAEzC,IAAK9kD,KAAK,CAAC69F,UAAU,CAAEt5B,OAAO,CAACA,OAAO,CAAE,EAAG;UAE1CoiD,cAAc,GAAG,IAAI;UACrBC,eAAe,GAAG,IAAI;UACtBC,aAAa,GAAG,IAAI;QAErB;QAEA,IAAK78E,QAAQ,CAAC1C,EAAE,KAAKu5E,kBAAkB,EAAG;UAEzCA,kBAAkB,GAAG72E,QAAQ,CAAC1C,EAAE;UAEhCs/E,eAAe,GAAG,IAAI;QAEvB;QAEA,IAAKD,cAAc,IAAI7F,cAAc,KAAKluF,MAAM,EAAG;UAElDk0F,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,kBAAkB,EAAEnvE,MAAM,CAACE,gBAAgB,CAAE;UAEvE,IAAKg8B,YAAY,CAACma,sBAAsB,EAAG;YAE1C69C,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,eAAe,EACxC,GAAG,IAAK7uF,IAAI,CAACqD,GAAG,CAAEqc,MAAM,CAACqP,GAAG,GAAG,GAAG,CAAE,GAAG/uB,IAAI,CAACsD,GAAG,CAAE,CAAE;UAErD;UAEA,IAAKsqG,cAAc,KAAKluF,MAAM,EAAG;YAEhCkuF,cAAc,GAAGluF,MAAM;;YAEvB;YACA;YACA;;YAEAg0F,eAAe,GAAG,IAAI,CAAC,CAAE;YACzBC,aAAa,GAAG,IAAI,CAAC,CAAE;UAExB;;UAEA;UACA;;UAEA,IAAK78E,QAAQ,CAAC4b,gBAAgB,IAC7B5b,QAAQ,CAAC+xE,mBAAmB,IAC5B/xE,QAAQ,CAAC6xE,kBAAkB,IAC3B7xE,QAAQ,CAACkhD,sBAAsB,IAC/BlhD,QAAQ,CAACiJ,MAAM,EAAG;YAElB,IAAM+zE,OAAO,GAAGF,UAAU,CAACl1E,GAAG,CAACq1E,cAAc;YAE7C,IAAKD,OAAO,KAAKpmH,SAAS,EAAG;cAE5BomH,OAAO,CAAC9wC,QAAQ,CAAE6rB,GAAG,EACpB8f,QAAQ,CAACrtF,qBAAqB,CAAE5B,MAAM,CAACK,WAAW,CAAE,CAAE;YAExD;UAED;UAEA,IAAK+W,QAAQ,CAAC+xE,mBAAmB,IAChC/xE,QAAQ,CAAC6xE,kBAAkB,IAC3B7xE,QAAQ,CAAC4xE,qBAAqB,IAC9B5xE,QAAQ,CAACoN,mBAAmB,IAC5BpN,QAAQ,CAACkhD,sBAAsB,IAC/BlhD,QAAQ,CAAC4b,gBAAgB,EAAG;YAE5BkhE,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,gBAAgB,EAAEnvE,MAAM,CAAC65C,oBAAoB,KAAK,IAAI,CAAE;UAEnF;UAEA,IAAKziC,QAAQ,CAAC+xE,mBAAmB,IAChC/xE,QAAQ,CAAC6xE,kBAAkB,IAC3B7xE,QAAQ,CAAC4xE,qBAAqB,IAC9B5xE,QAAQ,CAACoN,mBAAmB,IAC5BpN,QAAQ,CAACkhD,sBAAsB,IAC/BlhD,QAAQ,CAAC4b,gBAAgB,IACzB5b,QAAQ,CAACgzE,gBAAgB,IACzB75G,MAAM,CAACymC,aAAa,EAAG;YAEvBk9E,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,YAAY,EAAEnvE,MAAM,CAACC,kBAAkB,CAAE;UAEpE;QAED;;QAEA;QACA;QACA;;QAEA,IAAK1vB,MAAM,CAACymC,aAAa,EAAG;UAE3Bk9E,UAAU,CAACnpC,WAAW,CAAEokB,GAAG,EAAE5+F,MAAM,EAAE,YAAY,CAAE;UACnD2jH,UAAU,CAACnpC,WAAW,CAAEokB,GAAG,EAAE5+F,MAAM,EAAE,mBAAmB,CAAE;UAE1D,IAAM4mC,QAAQ,GAAG5mC,MAAM,CAAC4mC,QAAQ;UAEhC,IAAKA,QAAQ,EAAG;YAEf,IAAK+kB,YAAY,CAACqb,mBAAmB,EAAG;cAEvC,IAAKpgC,QAAQ,CAACm9E,WAAW,KAAK,IAAI,EAAGn9E,QAAQ,CAACo9E,kBAAkB,EAAE;cAElEL,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,aAAa,EAAEh4D,QAAQ,CAACm9E,WAAW,EAAEp/F,QAAQ,CAAE;cACzEg/F,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,iBAAiB,EAAEh4D,QAAQ,CAACq9E,eAAe,CAAE;YAExE,CAAC,MAAM;cAENvhH,OAAO,CAACC,IAAI,CAAE,yIAAyI,CAAE;YAE1J;UAED;QAED;QAEA,IAAMw2C,eAAe,GAAGzlB,QAAQ,CAACylB,eAAe;QAEhD,IAAKA,eAAe,CAACvlB,QAAQ,KAAKn2B,SAAS,IAAI07C,eAAe,CAACvoB,MAAM,KAAKnzB,SAAS,IAAM07C,eAAe,CAACt6B,KAAK,KAAKphB,SAAS,IAAIkuD,YAAY,CAACC,QAAQ,KAAK,IAAM,EAAG;UAElK6zD,YAAY,CAACn1F,MAAM,CAAEtqB,MAAM,EAAE0zB,QAAQ,EAAE0tC,OAAO,CAAE;QAEjD;QAEA,IAAKqiD,eAAe,IAAIt7C,kBAAkB,CAAC9lC,aAAa,KAAKriC,MAAM,CAACqiC,aAAa,EAAG;UAEnF8lC,kBAAkB,CAAC9lC,aAAa,GAAGriC,MAAM,CAACqiC,aAAa;UACvDshF,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,eAAe,EAAE5+F,MAAM,CAACqiC,aAAa,CAAE;QAElE;;QAEA;;QAEA,IAAKwE,QAAQ,CAACq9E,qBAAqB,IAAIr9E,QAAQ,CAACiJ,MAAM,KAAK,IAAI,EAAG;UAEjE8zE,UAAU,CAAC9zE,MAAM,CAAC32C,KAAK,GAAG22C,MAAM;UAEhC8zE,UAAU,CAAC7qD,UAAU,CAAC5/D,KAAK,GAAK22C,MAAM,CAACsX,aAAa,IAAItX,MAAM,CAAC1rB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;QAE3G;QAEA,IAAKq/F,eAAe,EAAG;UAEtBE,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,qBAAqB,EAAEye,KAAK,CAACD,mBAAmB,CAAE;UAE5E,IAAKj1C,kBAAkB,CAACg7C,WAAW,EAAG;YAErC;;YAEA;YACA;YACA;YACA;YACA;YACA;;YAEAgB,6BAA6B,CAAEP,UAAU,EAAEF,aAAa,CAAE;UAE3D;;UAEA;;UAEA,IAAKtyE,GAAG,IAAIvK,QAAQ,CAACuK,GAAG,KAAK,IAAI,EAAG;YAEnC9L,SAAS,CAAC4yE,kBAAkB,CAAE0L,UAAU,EAAExyE,GAAG,CAAE;UAEhD;UAEA9L,SAAS,CAAC+yE,uBAAuB,CAAEuL,UAAU,EAAE/8E,QAAQ,EAAEo3E,WAAW,EAAED,OAAO,EAAEQ,yBAAyB,CAAE;UAE1GrkC,aAAa,CAACM,MAAM,CAAEmkB,GAAG,EAAEz2B,kBAAkB,CAACm7C,YAAY,EAAEM,UAAU,EAAEj/F,QAAQ,CAAE;QAEnF;QAEA,IAAKkiB,QAAQ,CAAC4b,gBAAgB,IAAI5b,QAAQ,CAAC0c,kBAAkB,KAAK,IAAI,EAAG;UAExE42B,aAAa,CAACM,MAAM,CAAEmkB,GAAG,EAAEz2B,kBAAkB,CAACm7C,YAAY,EAAEM,UAAU,EAAEj/F,QAAQ,CAAE;UAClFkiB,QAAQ,CAAC0c,kBAAkB,GAAG,KAAK;QAEpC;QAEA,IAAK1c,QAAQ,CAAC8yE,gBAAgB,EAAG;UAEhCgK,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,QAAQ,EAAE5+F,MAAM,CAACgZ,MAAM,CAAE;QAEpD;;QAEA;;QAEA2qG,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,iBAAiB,EAAE5+F,MAAM,CAAC6hC,eAAe,CAAE;QACrE8hF,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,cAAc,EAAE5+F,MAAM,CAAC8hC,YAAY,CAAE;QAC/D6hF,UAAU,CAAC5wC,QAAQ,CAAE6rB,GAAG,EAAE,aAAa,EAAE5+F,MAAM,CAAC8vB,WAAW,CAAE;;QAE7D;;QAEA,IAAK+W,QAAQ,CAAC4b,gBAAgB,IAAI5b,QAAQ,CAACg6C,mBAAmB,EAAG;UAEhE,IAAMxnC,MAAM,GAAGxS,QAAQ,CAAC8b,cAAc;UAEtC,KAAM,IAAI3jD,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG0pC,MAAM,CAACt6C,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAEjD,IAAK2sD,YAAY,CAACC,QAAQ,EAAG;cAE5B,IAAMhQ,KAAK,GAAGvC,MAAM,CAAEr6C,CAAC,CAAE;cAEzB2jD,cAAc,CAACr4B,MAAM,CAAEsxB,KAAK,EAAEwlB,OAAO,CAAE;cACvCze,cAAc,CAACw3D,IAAI,CAAEv+D,KAAK,EAAEwlB,OAAO,CAAE;YAEtC,CAAC,MAAM;cAEN1+D,OAAO,CAACC,IAAI,CAAE,4EAA4E,CAAE;YAE7F;UAED;QAED;QAEA,OAAOy+D,OAAO;MAEf;;MAEA;;MAEA,SAAS+iD,6BAA6BA,CAAExiE,QAAQ,EAAExoD,KAAK,EAAG;QAEzDwoD,QAAQ,CAAC2Y,iBAAiB,CAAC51C,WAAW,GAAGvrB,KAAK;QAC9CwoD,QAAQ,CAAC4Y,UAAU,CAAC71C,WAAW,GAAGvrB,KAAK;QAEvCwoD,QAAQ,CAAC6Y,iBAAiB,CAAC91C,WAAW,GAAGvrB,KAAK;QAC9CwoD,QAAQ,CAAC+Y,uBAAuB,CAACh2C,WAAW,GAAGvrB,KAAK;QACpDwoD,QAAQ,CAAC8Z,WAAW,CAAC/2C,WAAW,GAAGvrB,KAAK;QACxCwoD,QAAQ,CAAC+Z,iBAAiB,CAACh3C,WAAW,GAAGvrB,KAAK;QAC9CwoD,QAAQ,CAACsZ,UAAU,CAACv2C,WAAW,GAAGvrB,KAAK;QACvCwoD,QAAQ,CAAC0Z,gBAAgB,CAAC32C,WAAW,GAAGvrB,KAAK;QAC7CwoD,QAAQ,CAACua,cAAc,CAACx3C,WAAW,GAAGvrB,KAAK;QAC3CwoD,QAAQ,CAACoa,gBAAgB,CAACr3C,WAAW,GAAGvrB,KAAK;MAE9C;MAEA,SAASiqH,mBAAmBA,CAAEv8E,QAAQ,EAAG;QAExC,OAAOA,QAAQ,CAAC4xE,qBAAqB,IAAI5xE,QAAQ,CAAC6xE,kBAAkB,IAAI7xE,QAAQ,CAAC+xE,mBAAmB,IACnG/xE,QAAQ,CAACkhD,sBAAsB,IAAIlhD,QAAQ,CAACgzE,gBAAgB,IAC1DhzE,QAAQ,CAAC4b,gBAAgB,IAAI5b,QAAQ,CAACic,MAAM,KAAK,IAAM;MAE3D;MAEA,IAAI,CAACyvC,iBAAiB,GAAG,YAAY;QAEpC,OAAOgrB,sBAAsB;MAE9B,CAAC;MAED,IAAI,CAAC9qB,oBAAoB,GAAG,YAAY;QAEvC,OAAO+qB,yBAAyB;MAEjC,CAAC;MAED,IAAI,CAACx7D,eAAe,GAAG,YAAY;QAElC,OAAOy7D,oBAAoB;MAE5B,CAAC;MAED,IAAI,CAACrG,uBAAuB,GAAG,UAAWtxD,YAAY,EAAEkiD,YAAY,EAAErgF,YAAY,EAAG;QAEpF8yC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAACt+B,OAAO,CAAE,CAAC46E,cAAc,GAAG4F,YAAY;QACpEvtC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAACn+B,YAAY,CAAE,CAACy6E,cAAc,GAAGz6E,YAAY;QAEzE,IAAM06E,sBAAsB,GAAG5nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE;QAC7Du8C,sBAAsB,CAACmE,qBAAqB,GAAG,IAAI;QAEnD,IAAKnE,sBAAsB,CAACmE,qBAAqB,EAAG;UAEnDnE,sBAAsB,CAACwF,yBAAyB,GAAGlgF,YAAY,KAAKlqB,SAAS;UAE7E,IAAK,CAAE4kG,sBAAsB,CAACwF,yBAAyB,EAAG;YAEzD;YACA;YACA,IAAK7kD,UAAU,CAACoiB,GAAG,CAAE,sCAAsC,CAAE,KAAK,IAAI,EAAG;cAExE1iE,OAAO,CAACC,IAAI,CAAE,wGAAwG,CAAE;cACxH0/F,sBAAsB,CAAC2G,oBAAoB,GAAG,KAAK;YAEpD;UAED;QAED;MAED,CAAC;MAED,IAAI,CAACgO,0BAA0B,GAAG,UAAWlxD,YAAY,EAAEs+D,kBAAkB,EAAG;QAE/E,IAAM/hB,sBAAsB,GAAG5nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE;QAC7Du8C,sBAAsB,CAACE,kBAAkB,GAAG6hB,kBAAkB;QAC9D/hB,sBAAsB,CAACgiB,uBAAuB,GAAGD,kBAAkB,KAAK3mH,SAAS;MAElF,CAAC;MAED,IAAI,CAACqpD,eAAe,GAAG,UAAWhB,YAAY,EAAEwsC,cAAc,GAAG,CAAC,EAAEE,iBAAiB,GAAG,CAAC,EAAG;QAE3FirB,oBAAoB,GAAG33D,YAAY;QACnCy3D,sBAAsB,GAAGjrB,cAAc;QACvCkrB,yBAAyB,GAAGhrB,iBAAiB;QAE7C,IAAI8xB,qBAAqB,GAAG,IAAI;QAChC,IAAIlqB,WAAW,GAAG,IAAI;QACtB,IAAIsN,MAAM,GAAG,KAAK;QAClB,IAAI6c,gBAAgB,GAAG,KAAK;QAE5B,IAAKz+D,YAAY,EAAG;UAEnB,IAAMu8C,sBAAsB,GAAG5nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE;UAE7D,IAAKu8C,sBAAsB,CAACgiB,uBAAuB,KAAK5mH,SAAS,EAAG;YAEnE;YACAZ,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAE,IAAI,CAAE;YAC9CgqB,qBAAqB,GAAG,KAAK;UAE9B,CAAC,MAAM,IAAKjiB,sBAAsB,CAACE,kBAAkB,KAAK9kG,SAAS,EAAG;YAErEknB,QAAQ,CAACsjF,iBAAiB,CAAEniD,YAAY,CAAE;UAE3C,CAAC,MAAM,IAAKu8C,sBAAsB,CAACmE,qBAAqB,EAAG;YAE1D;YACA7hF,QAAQ,CAACojF,cAAc,CAAEjiD,YAAY,EAAE2U,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAACt+B,OAAO,CAAE,CAAC46E,cAAc,EAAE3nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAACn+B,YAAY,CAAE,CAACy6E,cAAc,CAAE;UAE3J;UAEA,IAAM56E,OAAO,GAAGs+B,YAAY,CAACt+B,OAAO;UAEpC,IAAKA,OAAO,CAACsB,eAAe,IAAItB,OAAO,CAACW,kBAAkB,IAAIX,OAAO,CAACq9E,wBAAwB,EAAG;YAEhG0f,gBAAgB,GAAG,IAAI;UAExB;UAEA,IAAMhiB,kBAAkB,GAAG9nC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE,CAACy8C,kBAAkB;UAE5E,IAAKz8C,YAAY,CAAC2B,uBAAuB,EAAG;YAE3C2yC,WAAW,GAAGmI,kBAAkB,CAAEjQ,cAAc,CAAE;YAClDoV,MAAM,GAAG,IAAI;UAEd,CAAC,MAAM,IAAO/7C,YAAY,CAACC,QAAQ,IAAI9F,YAAY,CAACl+B,OAAO,GAAG,CAAC,IAAMjD,QAAQ,CAAC8hF,kBAAkB,CAAE3gD,YAAY,CAAE,KAAK,KAAK,EAAG;YAE5Hs0C,WAAW,GAAG3/B,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE,CAAC48C,8BAA8B;UAE5E,CAAC,MAAM;YAENtI,WAAW,GAAGmI,kBAAkB;UAEjC;UAEAqb,gBAAgB,CAAChoG,IAAI,CAAEkwC,YAAY,CAACv+B,QAAQ,CAAE;UAC9Cs2F,eAAe,CAACjoG,IAAI,CAAEkwC,YAAY,CAACz+B,OAAO,CAAE;UAC5Cy2F,mBAAmB,GAAGh4D,YAAY,CAACx+B,WAAW;QAE/C,CAAC,MAAM;UAENs2F,gBAAgB,CAAChoG,IAAI,CAAE47E,SAAS,CAAE,CAACl7E,cAAc,CAAE2nG,WAAW,CAAE,CAAC5rG,KAAK,EAAE;UACxEwrG,eAAe,CAACjoG,IAAI,CAAEwoG,QAAQ,CAAE,CAAC9nG,cAAc,CAAE2nG,WAAW,CAAE,CAAC5rG,KAAK,EAAE;UACtEyrG,mBAAmB,GAAGO,YAAY;QAEnC;QAEA,IAAMmG,gBAAgB,GAAG3nH,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAEF,WAAW,CAAE;QAE9E,IAAKoqB,gBAAgB,IAAI74D,YAAY,CAACxI,WAAW,IAAImhE,qBAAqB,EAAG;UAE5EznH,KAAK,CAACsmD,WAAW,CAAE2C,YAAY,EAAEs0C,WAAW,CAAE;QAE/C;QAEAv9F,KAAK,CAAC0qB,QAAQ,CAAEq2F,gBAAgB,CAAE;QAClC/gH,KAAK,CAACwqB,OAAO,CAAEw2F,eAAe,CAAE;QAChChhH,KAAK,CAACg2F,cAAc,CAAEirB,mBAAmB,CAAE;QAE3C,IAAKpW,MAAM,EAAG;UAEb,IAAM3F,iBAAiB,GAAGtnC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAACt+B,OAAO,CAAE;UAChEo3E,GAAG,CAACiI,oBAAoB,CAAEjI,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAACrE,iBAAiB,EAAEqE,GAAG,CAAC7E,2BAA2B,GAAGzH,cAAc,EAAEyP,iBAAiB,CAACK,cAAc,EAAE5P,iBAAiB,CAAE;QAE1K,CAAC,MAAM,IAAK+xB,gBAAgB,EAAG;UAE9B,IAAMxiB,kBAAiB,GAAGtnC,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAACt+B,OAAO,CAAE;UAChE,IAAMi9F,KAAK,GAAGnyB,cAAc,IAAI,CAAC;UACjCsM,GAAG,CAAC8lB,uBAAuB,CAAE9lB,GAAG,CAACtE,WAAW,EAAEsE,GAAG,CAACrE,iBAAiB,EAAEwH,kBAAiB,CAACK,cAAc,EAAE5P,iBAAiB,IAAI,CAAC,EAAEiyB,KAAK,CAAE;QAEvI;QAEA/G,kBAAkB,GAAG,CAAE,CAAC,CAAC,CAAC;MAE3B,CAAC;;MAED,IAAI,CAACiH,sBAAsB,GAAG,UAAW7+D,YAAY,EAAE70C,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,EAAErC,MAAM,EAAEumG,mBAAmB,EAAG;QAEzG,IAAK,EAAI9+D,YAAY,IAAIA,YAAY,CAAC3+B,mBAAmB,CAAE,EAAG;UAE7DzkB,OAAO,CAAChG,KAAK,CAAE,0FAA0F,CAAE;UAC3G;QAED;QAEA,IAAI09F,WAAW,GAAG3/B,UAAU,CAACrlD,GAAG,CAAE0wC,YAAY,CAAE,CAACy8C,kBAAkB;QAEnE,IAAKz8C,YAAY,CAAC2B,uBAAuB,IAAIm9D,mBAAmB,KAAKnnH,SAAS,EAAG;UAEhF28F,WAAW,GAAGA,WAAW,CAAEwqB,mBAAmB,CAAE;QAEjD;QAEA,IAAKxqB,WAAW,EAAG;UAElBv9F,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAEF,WAAW,CAAE;UAErD,IAAI;YAEH,IAAM5yE,OAAO,GAAGs+B,YAAY,CAACt+B,OAAO;YACpC,IAAMq9F,aAAa,GAAGr9F,OAAO,CAACvE,MAAM;YACpC,IAAMkhF,WAAW,GAAG38E,OAAO,CAACxsB,IAAI;YAEhC,IAAK6pH,aAAa,KAAK57G,UAAU,IAAI41F,KAAK,CAACp/E,OAAO,CAAEolG,aAAa,CAAE,KAAKjmB,GAAG,CAAC5qE,YAAY,CAAE4qE,GAAG,CAACkmB,gCAAgC,CAAE,EAAG;cAElIpiH,OAAO,CAAChG,KAAK,CAAE,2GAA2G,CAAE;cAC5H;YAED;YAEA,IAAMqoH,uBAAuB,GAAK5gB,WAAW,KAAKv7F,aAAa,KAAQo6C,UAAU,CAACoiB,GAAG,CAAE,6BAA6B,CAAE,IAAMzZ,YAAY,CAACC,QAAQ,IAAI5I,UAAU,CAACoiB,GAAG,CAAE,wBAAwB,CAAI,CAAE;YAEnM,IAAK++B,WAAW,KAAK97F,gBAAgB,IAAIw2F,KAAK,CAACp/E,OAAO,CAAE0kF,WAAW,CAAE,KAAKvF,GAAG,CAAC5qE,YAAY,CAAE4qE,GAAG,CAAComB,8BAA8B,CAAE;YAAI;YACnI,EAAI7gB,WAAW,KAAKx7F,SAAS,KAAMgjD,YAAY,CAACC,QAAQ,IAAI5I,UAAU,CAACoiB,GAAG,CAAE,mBAAmB,CAAE,IAAIpiB,UAAU,CAACoiB,GAAG,CAAE,0BAA0B,CAAE,CAAE,CAAE;YAAI;YACzJ,CAAE2/C,uBAAuB,EAAG;cAE5BriH,OAAO,CAAChG,KAAK,CAAE,qHAAqH,CAAE;cACtI;YAED;;YAEA;;YAEA,IAAOuU,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAM60C,YAAY,CAACrlC,KAAK,GAAGA,KAAO,IAAQlP,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAMu0C,YAAY,CAACplC,MAAM,GAAGA,MAAU,EAAG;cAE/Gk+E,GAAG,CAACqmB,UAAU,CAAEh0G,CAAC,EAAEM,CAAC,EAAEkP,KAAK,EAAEC,MAAM,EAAEm+E,KAAK,CAACp/E,OAAO,CAAEolG,aAAa,CAAE,EAAEhmB,KAAK,CAACp/E,OAAO,CAAE0kF,WAAW,CAAE,EAAE9lF,MAAM,CAAE;YAE5G;UAED,CAAC,SAAS;YAET;;YAEA,IAAM+7E,YAAW,GAAKqjB,oBAAoB,KAAK,IAAI,GAAKhjD,UAAU,CAACrlD,GAAG,CAAEqoG,oBAAoB,CAAE,CAAClb,kBAAkB,GAAG,IAAI;YACxH1lG,KAAK,CAACs9F,eAAe,CAAEyE,GAAG,CAACtE,WAAW,EAAEF,YAAW,CAAE;UAEtD;QAED;MAED,CAAC;MAED,IAAI,CAAC8qB,wBAAwB,GAAG,UAAWtxF,QAAQ,EAAEpM,OAAO,EAAE29F,KAAK,GAAG,CAAC,EAAG;QAEzE,IAAMC,UAAU,GAAGr1G,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAE,CAAEiyG,KAAK,CAAE;QACzC,IAAM1kG,KAAK,GAAG1Q,IAAI,CAACsC,KAAK,CAAEmV,OAAO,CAACpH,KAAK,CAACK,KAAK,GAAG2kG,UAAU,CAAE;QAC5D,IAAM1kG,MAAM,GAAG3Q,IAAI,CAACsC,KAAK,CAAEmV,OAAO,CAACpH,KAAK,CAACM,MAAM,GAAG0kG,UAAU,CAAE;QAE9DzgG,QAAQ,CAACuyD,YAAY,CAAE1vD,OAAO,EAAE,CAAC,CAAE;QAEnCo3E,GAAG,CAACymB,iBAAiB,CAAEzmB,GAAG,CAAC/E,UAAU,EAAEsrB,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEvxF,QAAQ,CAAC3iB,CAAC,EAAE2iB,QAAQ,CAACriB,CAAC,EAAEkP,KAAK,EAAEC,MAAM,CAAE;QAE3F7jB,KAAK,CAAC2gG,aAAa,EAAE;MAEtB,CAAC;MAED,IAAI,CAAC8nB,oBAAoB,GAAG,UAAW1xF,QAAQ,EAAE2xF,UAAU,EAAEC,UAAU,EAAEL,KAAK,GAAG,CAAC,EAAG;QAEpF,IAAM1kG,KAAK,GAAG8kG,UAAU,CAACnlG,KAAK,CAACK,KAAK;QACpC,IAAMC,MAAM,GAAG6kG,UAAU,CAACnlG,KAAK,CAACM,MAAM;QACtC,IAAM0/E,QAAQ,GAAGvB,KAAK,CAACp/E,OAAO,CAAE+lG,UAAU,CAACviG,MAAM,CAAE;QACnD,IAAMo9E,MAAM,GAAGxB,KAAK,CAACp/E,OAAO,CAAE+lG,UAAU,CAACxqH,IAAI,CAAE;QAE/C2pB,QAAQ,CAACuyD,YAAY,CAAEsuC,UAAU,EAAE,CAAC,CAAE;;QAEtC;QACA;QACA5mB,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACoG,mBAAmB,EAAEwgB,UAAU,CAACxhG,KAAK,CAAE;QAC5D46E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACqG,8BAA8B,EAAEugB,UAAU,CAACzhG,gBAAgB,CAAE;QAClF66E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACsG,gBAAgB,EAAEsgB,UAAU,CAACvhG,eAAe,CAAE;QAEnE,IAAKshG,UAAU,CAACtjG,aAAa,EAAG;UAE/B28E,GAAG,CAAChB,aAAa,CAAEgB,GAAG,CAAC/E,UAAU,EAAEsrB,KAAK,EAAEvxF,QAAQ,CAAC3iB,CAAC,EAAE2iB,QAAQ,CAACriB,CAAC,EAAEkP,KAAK,EAAEC,MAAM,EAAE0/E,QAAQ,EAAEC,MAAM,EAAEklB,UAAU,CAACnlG,KAAK,CAACiB,IAAI,CAAE;QAE3H,CAAC,MAAM;UAEN,IAAKkkG,UAAU,CAAC9jB,mBAAmB,EAAG;YAErC7C,GAAG,CAACd,uBAAuB,CAAEc,GAAG,CAAC/E,UAAU,EAAEsrB,KAAK,EAAEvxF,QAAQ,CAAC3iB,CAAC,EAAE2iB,QAAQ,CAACriB,CAAC,EAAEg0G,UAAU,CAAC9hG,OAAO,CAAE,CAAC,CAAE,CAAChD,KAAK,EAAE8kG,UAAU,CAAC9hG,OAAO,CAAE,CAAC,CAAE,CAAC/C,MAAM,EAAE0/E,QAAQ,EAAEmlB,UAAU,CAAC9hG,OAAO,CAAE,CAAC,CAAE,CAACpC,IAAI,CAAE;UAEpL,CAAC,MAAM;YAENu9E,GAAG,CAAChB,aAAa,CAAEgB,GAAG,CAAC/E,UAAU,EAAEsrB,KAAK,EAAEvxF,QAAQ,CAAC3iB,CAAC,EAAE2iB,QAAQ,CAACriB,CAAC,EAAE6uF,QAAQ,EAAEC,MAAM,EAAEklB,UAAU,CAACnlG,KAAK,CAAE;UAEvG;QAED;;QAEA;QACA,IAAK+kG,KAAK,KAAK,CAAC,IAAIK,UAAU,CAAC1hG,eAAe,EAAG86E,GAAG,CAACqB,cAAc,CAAErB,GAAG,CAAC/E,UAAU,CAAE;QAErFh9F,KAAK,CAAC2gG,aAAa,EAAE;MAEtB,CAAC;MAED,IAAI,CAACioB,sBAAsB,GAAG,UAAWC,SAAS,EAAE9xF,QAAQ,EAAE2xF,UAAU,EAAEC,UAAU,EAAEL,KAAK,GAAG,CAAC,EAAG;QAEjG,IAAK9H,KAAK,CAAC+B,gBAAgB,EAAG;UAE7B18G,OAAO,CAACC,IAAI,CAAE,2EAA2E,CAAE;UAC3F;QAED;QAEA,IAAM8d,KAAK,GAAGilG,SAAS,CAAC90G,GAAG,CAACK,CAAC,GAAGy0G,SAAS,CAAC/0G,GAAG,CAACM,CAAC,GAAG,CAAC;QACnD,IAAMyP,MAAM,GAAGglG,SAAS,CAAC90G,GAAG,CAACW,CAAC,GAAGm0G,SAAS,CAAC/0G,GAAG,CAACY,CAAC,GAAG,CAAC;QACpD,IAAM6V,KAAK,GAAGs+F,SAAS,CAAC90G,GAAG,CAACsU,CAAC,GAAGwgG,SAAS,CAAC/0G,GAAG,CAACuU,CAAC,GAAG,CAAC;QACnD,IAAMk7E,QAAQ,GAAGvB,KAAK,CAACp/E,OAAO,CAAE+lG,UAAU,CAACviG,MAAM,CAAE;QACnD,IAAMo9E,MAAM,GAAGxB,KAAK,CAACp/E,OAAO,CAAE+lG,UAAU,CAACxqH,IAAI,CAAE;QAC/C,IAAI2qH,QAAQ;QAEZ,IAAKH,UAAU,CAAC18F,eAAe,EAAG;UAEjCnE,QAAQ,CAACyyD,YAAY,CAAEouC,UAAU,EAAE,CAAC,CAAE;UACtCG,QAAQ,GAAG/mB,GAAG,CAAC2E,UAAU;QAE1B,CAAC,MAAM,IAAKiiB,UAAU,CAACr9F,kBAAkB,EAAG;UAE3CxD,QAAQ,CAAC6yD,iBAAiB,CAAEguC,UAAU,EAAE,CAAC,CAAE;UAC3CG,QAAQ,GAAG/mB,GAAG,CAAC0E,gBAAgB;QAEhC,CAAC,MAAM;UAEN5gG,OAAO,CAACC,IAAI,CAAE,6GAA6G,CAAE;UAC7H;QAED;QAEAi8F,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACoG,mBAAmB,EAAEwgB,UAAU,CAACxhG,KAAK,CAAE;QAC5D46E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACqG,8BAA8B,EAAEugB,UAAU,CAACzhG,gBAAgB,CAAE;QAClF66E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACsG,gBAAgB,EAAEsgB,UAAU,CAACvhG,eAAe,CAAE;QAEnE,IAAM2hG,YAAY,GAAGhnB,GAAG,CAAC5qE,YAAY,CAAE4qE,GAAG,CAACinB,iBAAiB,CAAE;QAC9D,IAAMC,iBAAiB,GAAGlnB,GAAG,CAAC5qE,YAAY,CAAE4qE,GAAG,CAACmnB,mBAAmB,CAAE;QACrE,IAAMC,gBAAgB,GAAGpnB,GAAG,CAAC5qE,YAAY,CAAE4qE,GAAG,CAACqnB,kBAAkB,CAAE;QACnE,IAAMC,cAAc,GAAGtnB,GAAG,CAAC5qE,YAAY,CAAE4qE,GAAG,CAACunB,gBAAgB,CAAE;QAC/D,IAAMC,gBAAgB,GAAGxnB,GAAG,CAAC5qE,YAAY,CAAE4qE,GAAG,CAACynB,kBAAkB,CAAE;QAEnE,IAAMjmG,KAAK,GAAGmlG,UAAU,CAAC9jB,mBAAmB,GAAG8jB,UAAU,CAAC9hG,OAAO,CAAE,CAAC,CAAE,GAAG8hG,UAAU,CAACnlG,KAAK;QAEzFw+E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACinB,iBAAiB,EAAEzlG,KAAK,CAACK,KAAK,CAAE;QACrDm+E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACmnB,mBAAmB,EAAE3lG,KAAK,CAACM,MAAM,CAAE;QACxDk+E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACqnB,kBAAkB,EAAEP,SAAS,CAAC/0G,GAAG,CAACM,CAAC,CAAE;QAC1D2tF,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACunB,gBAAgB,EAAET,SAAS,CAAC/0G,GAAG,CAACY,CAAC,CAAE;QACxDqtF,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACynB,kBAAkB,EAAEX,SAAS,CAAC/0G,GAAG,CAACuU,CAAC,CAAE;QAE1D,IAAKqgG,UAAU,CAACtjG,aAAa,IAAIsjG,UAAU,CAACz8F,eAAe,EAAG;UAE7D81E,GAAG,CAACf,aAAa,CAAE8nB,QAAQ,EAAER,KAAK,EAAEvxF,QAAQ,CAAC3iB,CAAC,EAAE2iB,QAAQ,CAACriB,CAAC,EAAEqiB,QAAQ,CAAC1O,CAAC,EAAEzE,KAAK,EAAEC,MAAM,EAAE0G,KAAK,EAAEg5E,QAAQ,EAAEC,MAAM,EAAEjgF,KAAK,CAACiB,IAAI,CAAE;QAE7H,CAAC,MAAM;UAEN,IAAKkkG,UAAU,CAAC1gB,wBAAwB,EAAG;YAE1CniG,OAAO,CAACC,IAAI,CAAE,yFAAyF,CAAE;YACzGi8F,GAAG,CAACb,uBAAuB,CAAE4nB,QAAQ,EAAER,KAAK,EAAEvxF,QAAQ,CAAC3iB,CAAC,EAAE2iB,QAAQ,CAACriB,CAAC,EAAEqiB,QAAQ,CAAC1O,CAAC,EAAEzE,KAAK,EAAEC,MAAM,EAAE0G,KAAK,EAAEg5E,QAAQ,EAAEhgF,KAAK,CAACiB,IAAI,CAAE;UAE/H,CAAC,MAAM;YAENu9E,GAAG,CAACf,aAAa,CAAE8nB,QAAQ,EAAER,KAAK,EAAEvxF,QAAQ,CAAC3iB,CAAC,EAAE2iB,QAAQ,CAACriB,CAAC,EAAEqiB,QAAQ,CAAC1O,CAAC,EAAEzE,KAAK,EAAEC,MAAM,EAAE0G,KAAK,EAAEg5E,QAAQ,EAAEC,MAAM,EAAEjgF,KAAK,CAAE;UAExH;QAED;QAEAw+E,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACinB,iBAAiB,EAAED,YAAY,CAAE;QACtDhnB,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACmnB,mBAAmB,EAAED,iBAAiB,CAAE;QAC7DlnB,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACqnB,kBAAkB,EAAED,gBAAgB,CAAE;QAC3DpnB,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACunB,gBAAgB,EAAED,cAAc,CAAE;QACvDtnB,GAAG,CAACmG,WAAW,CAAEnG,GAAG,CAACynB,kBAAkB,EAAED,gBAAgB,CAAE;;QAE3D;QACA,IAAKjB,KAAK,KAAK,CAAC,IAAIK,UAAU,CAAC1hG,eAAe,EAAG86E,GAAG,CAACqB,cAAc,CAAE0lB,QAAQ,CAAE;QAE/E9oH,KAAK,CAAC2gG,aAAa,EAAE;MAEtB,CAAC;MAED,IAAI,CAACkH,WAAW,GAAG,UAAWl9E,OAAO,EAAG;QAEvC,IAAKA,OAAO,CAAC4/B,aAAa,EAAG;UAE5BziC,QAAQ,CAAC2yD,cAAc,CAAE9vD,OAAO,EAAE,CAAC,CAAE;QAEtC,CAAC,MAAM,IAAKA,OAAO,CAACsB,eAAe,EAAG;UAErCnE,QAAQ,CAACyyD,YAAY,CAAE5vD,OAAO,EAAE,CAAC,CAAE;QAEpC,CAAC,MAAM,IAAKA,OAAO,CAACW,kBAAkB,IAAIX,OAAO,CAACq9E,wBAAwB,EAAG;UAE5ElgF,QAAQ,CAAC6yD,iBAAiB,CAAEhwD,OAAO,EAAE,CAAC,CAAE;QAEzC,CAAC,MAAM;UAEN7C,QAAQ,CAACuyD,YAAY,CAAE1vD,OAAO,EAAE,CAAC,CAAE;QAEpC;QAEA3qB,KAAK,CAAC2gG,aAAa,EAAE;MAEtB,CAAC;MAED,IAAI,CAAC8oB,UAAU,GAAG,YAAY;QAE7B/I,sBAAsB,GAAG,CAAC;QAC1BC,yBAAyB,GAAG,CAAC;QAC7BC,oBAAoB,GAAG,IAAI;QAE3B5gH,KAAK,CAAC8B,KAAK,EAAE;QACbmiE,aAAa,CAACniE,KAAK,EAAE;MAEtB,CAAC;MAED,IAAK,OAAO4nH,kBAAkB,KAAK,WAAW,EAAG;QAEhDA,kBAAkB,CAAC/2G,aAAa,CAAE,IAAIg3G,WAAW,CAAE,SAAS,EAAE;UAAEC,MAAM,EAAE;QAAK,CAAC,CAAE,CAAE;MAEnF;IAED;IAAC1kH,YAAA,CAAA+5G,aAAA;MAAA7iH,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAA8B;QAAE;;QAE/B1S,OAAO,CAACC,IAAI,CAAE,oHAAoH,CAAE;QACpI,OAAO,CAAE,IAAI,CAACygF,eAAe;MAE9B,CAAC;MAAA7uE,GAAA,EAED,SAAAA,IAA6Bpb,KAAK,EAAG;QAAE;;QAEtCuJ,OAAO,CAACC,IAAI,CAAE,oHAAoH,CAAE;QACpI,IAAI,CAACygF,eAAe,GAAG,CAAEjqF,KAAK;MAE/B;IAAC;IAAA,OAAA2iH,aAAA;EAAA;EAAA,IAII4K,cAAc,0BAAAC,cAAA;IAAApkG,SAAA,CAAAmkG,cAAA,EAAAC,cAAA;IAAA,IAAAC,QAAA,GAAAnkG,YAAA,CAAAikG,cAAA;IAAA,SAAAA,eAAA;MAAAnlH,eAAA,OAAAmlH,cAAA;MAAA,OAAAE,QAAA,CAAAlpB,KAAA,OAAA75D,SAAA;IAAA;IAAA,OAAA9hC,YAAA,CAAA2kH,cAAA;EAAA,EAAS5K,aAAa;EAE1C4K,cAAc,CAAC9tH,SAAS,CAACwmH,gBAAgB,GAAG,IAAI;EAAC,IAE3CyH,OAAO;IAEZ,SAAAA,QAAahoG,KAAK,EAAEu5F,OAAO,GAAG,OAAO,EAAG;MAAA72G,eAAA,OAAAslH,OAAA;MAEvC,IAAI,CAACv8B,SAAS,GAAG,IAAI;MAErB,IAAI,CAAChrF,IAAI,GAAG,EAAE;MAEd,IAAI,CAACuf,KAAK,GAAG,IAAI8yB,KAAK,CAAE9yB,KAAK,CAAE;MAC/B,IAAI,CAACu5F,OAAO,GAAGA,OAAO;IAEvB;IAACr2G,YAAA,CAAA8kH,OAAA;MAAA5tH,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAIkxG,OAAO,CAAE,IAAI,CAAChoG,KAAK,EAAE,IAAI,CAACu5F,OAAO,CAAE;MAE/C;IAAC;MAAAn/G,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,CAAQ;MAAA,EAAa;QAEpB,OAAO;UACNzmB,IAAI,EAAE,SAAS;UACf6jB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACquB,MAAM,EAAE;UAC1BkrE,OAAO,EAAE,IAAI,CAACA;QACf,CAAC;MAEF;IAAC;IAAA,OAAAyO,OAAA;EAAA;EAAA,IAIIC,GAAG;IAER,SAAAA,IAAajoG,KAAK,EAAEggB,IAAI,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,EAAG;MAAAv9B,eAAA,OAAAulH,GAAA;MAE1C,IAAI,CAAC3O,KAAK,GAAG,IAAI;MAEjB,IAAI,CAAC74G,IAAI,GAAG,EAAE;MAEd,IAAI,CAACuf,KAAK,GAAG,IAAI8yB,KAAK,CAAE9yB,KAAK,CAAE;MAE/B,IAAI,CAACggB,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;IAEf;IAAC/8B,YAAA,CAAA+kH,GAAA;MAAA7tH,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAImxG,GAAG,CAAE,IAAI,CAACjoG,KAAK,EAAE,IAAI,CAACggB,IAAI,EAAE,IAAI,CAACC,GAAG,CAAE;MAElD;IAAC;MAAA7lC,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,CAAQ;MAAA,EAAa;QAEpB,OAAO;UACNzmB,IAAI,EAAE,KAAK;UACX6jB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACquB,MAAM,EAAE;UAC1BrO,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,GAAG,EAAE,IAAI,CAACA;QACX,CAAC;MAEF;IAAC;IAAA,OAAAgoF,GAAA;EAAA;EAAA,IAIIC,KAAK,0BAAAC,UAAA;IAAAzkG,SAAA,CAAAwkG,KAAA,EAAAC,UAAA;IAAA,IAAAC,QAAA,GAAAxkG,YAAA,CAAAskG,KAAA;IAEV,SAAAA,MAAA,EAAc;MAAA,IAAAG,OAAA;MAAA3lH,eAAA,OAAAwlH,KAAA;MAEbG,OAAA,GAAAD,QAAA,CAAAhsH,IAAA;MAEAisH,OAAA,CAAKlhF,OAAO,GAAG,IAAI;MAEnBkhF,OAAA,CAAKlsH,IAAI,GAAG,OAAO;MAEnBksH,OAAA,CAAKjhF,UAAU,GAAG,IAAI;MACtBihF,OAAA,CAAK/gF,WAAW,GAAG,IAAI;MACvB+gF,OAAA,CAAK91E,GAAG,GAAG,IAAI;MAEf81E,OAAA,CAAKjqD,oBAAoB,GAAG,CAAC;MAC7BiqD,OAAA,CAAKnqD,mBAAmB,GAAG,CAAC;MAE5BmqD,OAAA,CAAKtI,gBAAgB,GAAG,IAAI;MAE5B,IAAK,OAAO2H,kBAAkB,KAAK,WAAW,EAAG;QAEhDA,kBAAkB,CAAC/2G,aAAa,CAAE,IAAIg3G,WAAW,CAAE,SAAS,EAAE;UAAEC,MAAM,EAAAljG,sBAAA,CAAA2jG,OAAA;QAAO,CAAC,CAAE,CAAE;MAEnF;MAAC,OAAAA,OAAA;IAEF;IAACnlH,YAAA,CAAAglH,KAAA;MAAA9tH,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAA4yE,KAAA,CAAAnuH,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAK1jB,MAAM,CAACyiB,UAAU,KAAK,IAAI,EAAG,IAAI,CAACA,UAAU,GAAGziB,MAAM,CAACyiB,UAAU,CAACtwB,KAAK,EAAE;QAC7E,IAAK6N,MAAM,CAAC2iB,WAAW,KAAK,IAAI,EAAG,IAAI,CAACA,WAAW,GAAG3iB,MAAM,CAAC2iB,WAAW,CAACxwB,KAAK,EAAE;QAChF,IAAK6N,MAAM,CAAC4tB,GAAG,KAAK,IAAI,EAAG,IAAI,CAACA,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG,CAACz7B,KAAK,EAAE;QAExD,IAAI,CAACsnD,oBAAoB,GAAGz5C,MAAM,CAACy5C,oBAAoB;QACvD,IAAI,CAACF,mBAAmB,GAAGv5C,MAAM,CAACu5C,mBAAmB;QAErD,IAAKv5C,MAAM,CAACo7F,gBAAgB,KAAK,IAAI,EAAG,IAAI,CAACA,gBAAgB,GAAGp7F,MAAM,CAACo7F,gBAAgB,CAACjpG,KAAK,EAAE;QAE/F,IAAI,CAACkO,gBAAgB,GAAGL,MAAM,CAACK,gBAAgB;QAE/C,OAAO,IAAI;MAEZ;IAAC;MAAA5qB,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAML,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAA4yE,KAAA,CAAAnuH,SAAA,mBAAAqC,IAAA,OAAiBymB,IAAI,CAAE;QAEjC,IAAK,IAAI,CAAC0vB,GAAG,KAAK,IAAI,EAAG/vB,IAAI,CAACrhB,MAAM,CAACoxC,GAAG,GAAG,IAAI,CAACA,GAAG,CAAC3vB,MAAM,EAAE;QAC5D,IAAK,IAAI,CAACw7C,oBAAoB,GAAG,CAAC,EAAG57C,IAAI,CAACrhB,MAAM,CAACi9D,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;QACjG,IAAK,IAAI,CAACF,mBAAmB,KAAK,CAAC,EAAG17C,IAAI,CAACrhB,MAAM,CAAC+8D,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;QAEhG,OAAO17C,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAiB;QAAE;;QAElB1S,OAAO,CAACC,IAAI,CAAE,uEAAuE,CAAE;QACvF,OAAO,IAAI,CAACs/B,qBAAqB;MAElC,CAAC;MAAA1tB,GAAA,EAED,SAAAA,IAAgBpb,KAAK,EAAG;QAAE;;QAEzBuJ,OAAO,CAACC,IAAI,CAAE,uEAAuE,CAAE;QACvF,IAAI,CAACs/B,qBAAqB,GAAG9oC,KAAK;MAEnC;IAAC;IAAA,OAAA4tH,KAAA;EAAA,EAtEkB5lF,QAAQ;EAAA,IA0EtBgmF,iBAAiB;IAEtB,SAAAA,kBAAaz3G,KAAK,EAAEutC,MAAM,EAAG;MAAA17C,eAAA,OAAA4lH,iBAAA;MAE5B,IAAI,CAACC,mBAAmB,GAAG,IAAI;MAE/B,IAAI,CAAC13G,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACutC,MAAM,GAAGA,MAAM;MACpB,IAAI,CAAC1zB,KAAK,GAAG7Z,KAAK,KAAKjS,SAAS,GAAGiS,KAAK,CAAC3Q,MAAM,GAAGk+C,MAAM,GAAG,CAAC;MAE5D,IAAI,CAAC1H,KAAK,GAAGtnC,eAAe;MAC5B,IAAI,CAACunC,WAAW,GAAG;QAAE/8B,MAAM,EAAE,CAAC;QAAE8Q,KAAK,EAAE,CAAE;MAAE,CAAC;MAE5C,IAAI,CAAC/H,OAAO,GAAG,CAAC;MAEhB,IAAI,CAAChR,IAAI,GAAGN,YAAY,EAAE;IAE3B;IAACnO,YAAA,CAAAolH,iBAAA;MAAAluH,GAAA;MAAAE,KAAA,EAED,SAAAs8C,iBAAA,EAAmB,CAAC;IAAC;MAAAx8C,GAAA;MAAAsb,GAAA,EAErB,SAAAA,IAAiBpb,KAAK,EAAG;QAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAACqoB,OAAO,EAAG;MAEtC;IAAC;MAAAvoB,GAAA;MAAAE,KAAA,EAED,SAAAu8C,SAAUv8C,KAAK,EAAG;QAEjB,IAAI,CAACo8C,KAAK,GAAGp8C,KAAK;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd,IAAI,CAAC9T,KAAK,GAAG,IAAI8T,MAAM,CAAC9T,KAAK,CAACrQ,WAAW,CAAEmkB,MAAM,CAAC9T,KAAK,CAAE;QACzD,IAAI,CAAC6Z,KAAK,GAAG/F,MAAM,CAAC+F,KAAK;QACzB,IAAI,CAAC0zB,MAAM,GAAGz5B,MAAM,CAACy5B,MAAM;QAC3B,IAAI,CAAC1H,KAAK,GAAG/xB,MAAM,CAAC+xB,KAAK;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAAt8C,GAAA;MAAAE,KAAA,EAED,SAAAw8C,OAAQC,MAAM,EAAEh9B,SAAS,EAAEi9B,MAAM,EAAG;QAEnCD,MAAM,IAAI,IAAI,CAACqH,MAAM;QACrBpH,MAAM,IAAIj9B,SAAS,CAACqkC,MAAM;QAE1B,KAAM,IAAIj+C,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAACstC,MAAM,EAAEj+C,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAE/C,IAAI,CAAC0Q,KAAK,CAAEkmC,MAAM,GAAG52C,CAAC,CAAE,GAAG4Z,SAAS,CAAClJ,KAAK,CAAEmmC,MAAM,GAAG72C,CAAC,CAAE;QAEzD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKpb,KAAK,EAAEsf,MAAM,GAAG,CAAC,EAAG;QAExB,IAAI,CAAC/I,KAAK,CAAC6E,GAAG,CAAEpb,KAAK,EAAEsf,MAAM,CAAE;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAO0L,IAAI,EAAG;QAEb,IAAKA,IAAI,CAACgmG,YAAY,KAAK5pH,SAAS,EAAG;UAEtC4jB,IAAI,CAACgmG,YAAY,GAAG,CAAC,CAAC;QAEvB;QAEA,IAAK,IAAI,CAAC33G,KAAK,CAAC2O,MAAM,CAACipG,KAAK,KAAK7pH,SAAS,EAAG;UAE5C,IAAI,CAACiS,KAAK,CAAC2O,MAAM,CAACipG,KAAK,GAAGp3G,YAAY,EAAE;QAEzC;QAEA,IAAKmR,IAAI,CAACgmG,YAAY,CAAE,IAAI,CAAC33G,KAAK,CAAC2O,MAAM,CAACipG,KAAK,CAAE,KAAK7pH,SAAS,EAAG;UAEjE4jB,IAAI,CAACgmG,YAAY,CAAE,IAAI,CAAC33G,KAAK,CAAC2O,MAAM,CAACipG,KAAK,CAAE,GAAG,IAAI,CAAC53G,KAAK,CAACpP,KAAK,CAAE,CAAC,CAAE,CAAC+d,MAAM;QAE5E;QAEA,IAAM3O,KAAK,GAAG,IAAI,IAAI,CAACA,KAAK,CAACrQ,WAAW,CAAEgiB,IAAI,CAACgmG,YAAY,CAAE,IAAI,CAAC33G,KAAK,CAAC2O,MAAM,CAACipG,KAAK,CAAE,CAAE;QAExF,IAAMC,EAAE,GAAG,IAAI,IAAI,CAACloH,WAAW,CAAEqQ,KAAK,EAAE,IAAI,CAACutC,MAAM,CAAE;QACrDsqE,EAAE,CAAC7xE,QAAQ,CAAE,IAAI,CAACH,KAAK,CAAE;QAEzB,OAAOgyE,EAAE;MAEV;IAAC;MAAAtuH,GAAA;MAAAE,KAAA,EAED,SAAA+8C,SAAUjpB,QAAQ,EAAG;QAEpB,IAAI,CAACwoB,gBAAgB,GAAGxoB,QAAQ;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAh0B,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQJ,IAAI,EAAG;QAEd,IAAKA,IAAI,CAACgmG,YAAY,KAAK5pH,SAAS,EAAG;UAEtC4jB,IAAI,CAACgmG,YAAY,GAAG,CAAC,CAAC;QAEvB;;QAEA;;QAEA,IAAK,IAAI,CAAC33G,KAAK,CAAC2O,MAAM,CAACipG,KAAK,KAAK7pH,SAAS,EAAG;UAE5C,IAAI,CAACiS,KAAK,CAAC2O,MAAM,CAACipG,KAAK,GAAGp3G,YAAY,EAAE;QAEzC;QAEA,IAAKmR,IAAI,CAACgmG,YAAY,CAAE,IAAI,CAAC33G,KAAK,CAAC2O,MAAM,CAACipG,KAAK,CAAE,KAAK7pH,SAAS,EAAG;UAEjE4jB,IAAI,CAACgmG,YAAY,CAAE,IAAI,CAAC33G,KAAK,CAAC2O,MAAM,CAACipG,KAAK,CAAE,GAAGvlG,KAAK,CAACI,IAAI,CAAE,IAAIjE,WAAW,CAAE,IAAI,CAACxO,KAAK,CAAC2O,MAAM,CAAE,CAAE;QAElG;;QAEA;;QAEA,OAAO;UACN7N,IAAI,EAAE,IAAI,CAACA,IAAI;UACf6N,MAAM,EAAE,IAAI,CAAC3O,KAAK,CAAC2O,MAAM,CAACipG,KAAK;UAC/BtsH,IAAI,EAAE,IAAI,CAAC0U,KAAK,CAACrQ,WAAW,CAACC,IAAI;UACjC29C,MAAM,EAAE,IAAI,CAACA;QACd,CAAC;MAEF;IAAC;IAAA,OAAAkqE,iBAAA;EAAA;EAIF,IAAMK,SAAS,GAAG,aAAc,IAAIj5F,OAAO,EAAE;EAAC,IAExCk5F,0BAA0B;IAE/B,SAAAA,2BAAaC,iBAAiB,EAAEtyE,QAAQ,EAAE38B,MAAM,EAAE48B,UAAU,GAAG,KAAK,EAAG;MAAA9zC,eAAA,OAAAkmH,0BAAA;MAEtE,IAAI,CAACzqE,4BAA4B,GAAG,IAAI;MAExC,IAAI,CAAC19C,IAAI,GAAG,EAAE;MAEd,IAAI,CAAC+hB,IAAI,GAAGqmG,iBAAiB;MAC7B,IAAI,CAACtyE,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAAC38B,MAAM,GAAGA,MAAM;MAEpB,IAAI,CAAC48B,UAAU,GAAGA,UAAU;IAE7B;IAACtzC,YAAA,CAAA0lH,0BAAA;MAAAxuH,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAY;QAEX,OAAO,IAAI,CAACiM,IAAI,CAACkI,KAAK;MAEvB;IAAC;MAAAtwB,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAY;QAEX,OAAO,IAAI,CAACiM,IAAI,CAAC3R,KAAK;MAEvB;IAAC;MAAAzW,GAAA;MAAAsb,GAAA,EAED,SAAAA,IAAiBpb,KAAK,EAAG;QAExB,IAAI,CAACkoB,IAAI,CAACqD,WAAW,GAAGvrB,KAAK;MAE9B;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAosB,aAAcxU,CAAC,EAAG;QAEjB,KAAM,IAAI/R,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC0R,IAAI,CAACkI,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEnDwoH,SAAS,CAAC7uG,mBAAmB,CAAE,IAAI,EAAE3Z,CAAC,CAAE;UAExCwoH,SAAS,CAACjiG,YAAY,CAAExU,CAAC,CAAE;UAE3B,IAAI,CAACilC,MAAM,CAAEh3C,CAAC,EAAEwoH,SAAS,CAACv2G,CAAC,EAAEu2G,SAAS,CAACj2G,CAAC,EAAEi2G,SAAS,CAACtiG,CAAC,CAAE;QAExD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA41B,kBAAmBhe,CAAC,EAAG;QAEtB,KAAM,IAAI/R,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC4Z,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAE9CwoH,SAAS,CAAC7uG,mBAAmB,CAAE,IAAI,EAAE3Z,CAAC,CAAE;UAExCwoH,SAAS,CAACz4F,iBAAiB,CAAEhe,CAAC,CAAE;UAEhC,IAAI,CAACilC,MAAM,CAAEh3C,CAAC,EAAEwoH,SAAS,CAACv2G,CAAC,EAAEu2G,SAAS,CAACj2G,CAAC,EAAEi2G,SAAS,CAACtiG,CAAC,CAAE;QAExD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA42B,mBAAoBhf,CAAC,EAAG;QAEvB,KAAM,IAAI/R,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC4Z,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAE9CwoH,SAAS,CAAC7uG,mBAAmB,CAAE,IAAI,EAAE3Z,CAAC,CAAE;UAExCwoH,SAAS,CAACz3F,kBAAkB,CAAEhf,CAAC,CAAE;UAEjC,IAAI,CAACilC,MAAM,CAAEh3C,CAAC,EAAEwoH,SAAS,CAACv2G,CAAC,EAAEu2G,SAAS,CAACj2G,CAAC,EAAEi2G,SAAS,CAACtiG,CAAC,CAAE;QAExD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAoc,KAAMjG,KAAK,EAAE2B,CAAC,EAAG;QAEhB,IAAK,IAAI,CAACokC,UAAU,EAAGpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;QAErD,IAAI,CAAC2R,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM,CAAE,GAAGxH,CAAC;QAE7D,OAAO,IAAI;MAEZ;IAAC;MAAAhY,GAAA;MAAAE,KAAA,EAED,SAAAqc,KAAMlG,KAAK,EAAEiC,CAAC,EAAG;QAEhB,IAAK,IAAI,CAAC8jC,UAAU,EAAG9jC,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;QAErD,IAAI,CAAC2R,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM,GAAG,CAAC,CAAE,GAAGlH,CAAC;QAEjE,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAksB,KAAM/V,KAAK,EAAE4V,CAAC,EAAG;QAEhB,IAAK,IAAI,CAACmwB,UAAU,EAAGnwB,CAAC,GAAGpQ,SAAS,CAAEoQ,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;QAErD,IAAI,CAAC2R,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM,GAAG,CAAC,CAAE,GAAGyM,CAAC;QAEjE,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAmsB,KAAMhW,KAAK,EAAE6V,CAAC,EAAG;QAEhB,IAAK,IAAI,CAACkwB,UAAU,EAAGlwB,CAAC,GAAGrQ,SAAS,CAAEqQ,CAAC,EAAE,IAAI,CAACzV,KAAK,CAAE;QAErD,IAAI,CAAC2R,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM,GAAG,CAAC,CAAE,GAAG0M,CAAC;QAEjE,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA0f,KAAMvJ,KAAK,EAAG;QAEb,IAAI2B,CAAC,GAAG,IAAI,CAACoQ,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM,CAAE;QAEjE,IAAK,IAAI,CAAC48B,UAAU,EAAGpkC,CAAC,GAAGuD,WAAW,CAAEvD,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;QAEvD,OAAOuB,CAAC;MAET;IAAC;MAAAhY,GAAA;MAAAE,KAAA,EAED,SAAA2f,KAAMxJ,KAAK,EAAG;QAEb,IAAIiC,CAAC,GAAG,IAAI,CAAC8P,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM,GAAG,CAAC,CAAE;QAErE,IAAK,IAAI,CAAC48B,UAAU,EAAG9jC,CAAC,GAAGiD,WAAW,CAAEjD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;QAEvD,OAAO6B,CAAC;MAET;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAwtB,KAAMrX,KAAK,EAAG;QAEb,IAAI4V,CAAC,GAAG,IAAI,CAAC7D,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM,GAAG,CAAC,CAAE;QAErE,IAAK,IAAI,CAAC48B,UAAU,EAAGnwB,CAAC,GAAG1Q,WAAW,CAAE0Q,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;QAEvD,OAAOwV,CAAC;MAET;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAytB,KAAMtX,KAAK,EAAG;QAEb,IAAI6V,CAAC,GAAG,IAAI,CAAC9D,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM,GAAG,CAAC,CAAE;QAErE,IAAK,IAAI,CAAC48B,UAAU,EAAGlwB,CAAC,GAAG3Q,WAAW,CAAE2Q,CAAC,EAAE,IAAI,CAACzV,KAAK,CAAE;QAEvD,OAAOyV,CAAC;MAET;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA48C,MAAOzmC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAG;QAEpBjC,KAAK,GAAGA,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM;QAE9C,IAAK,IAAI,CAAC48B,UAAU,EAAG;UAEtBpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;UAC9B6B,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;QAE/B;QAEA,IAAI,CAAC2R,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;QAChC,IAAI,CAACoQ,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA68C,OAAQ1mC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAExB5V,KAAK,GAAGA,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM;QAE9C,IAAK,IAAI,CAAC48B,UAAU,EAAG;UAEtBpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;UAC9B6B,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;UAC9BwV,CAAC,GAAGpQ,SAAS,CAAEoQ,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;QAE/B;QAEA,IAAI,CAAC2R,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;QAChC,IAAI,CAACoQ,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;QAChC,IAAI,CAAC8P,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG4V,CAAC;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAA88C,QAAS3mC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAEC,CAAC,EAAG;QAE5B7V,KAAK,GAAGA,KAAK,GAAG,IAAI,CAAC+R,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM;QAE9C,IAAK,IAAI,CAAC48B,UAAU,EAAG;UAEtBpkC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACvB,KAAK,CAAE;UAC9B6B,CAAC,GAAGuD,SAAS,CAAEvD,CAAC,EAAE,IAAI,CAAC7B,KAAK,CAAE;UAC9BwV,CAAC,GAAGpQ,SAAS,CAAEoQ,CAAC,EAAE,IAAI,CAACxV,KAAK,CAAE;UAC9ByV,CAAC,GAAGrQ,SAAS,CAAEqQ,CAAC,EAAE,IAAI,CAACzV,KAAK,CAAE;QAE/B;QAEA,IAAI,CAAC2R,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;QAChC,IAAI,CAACoQ,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;QAChC,IAAI,CAAC8P,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG4V,CAAC;QAChC,IAAI,CAAC7D,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG6V,CAAC;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAO0L,IAAI,EAAG;QAEb,IAAKA,IAAI,KAAK5jB,SAAS,EAAG;UAEzBiF,OAAO,CAAC0Q,GAAG,CAAE,mHAAmH,CAAE;UAElI,IAAM1D,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI1Q,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACuqB,KAAK,EAAEvqB,CAAC,EAAG,EAAG;YAEvC,IAAMsQ,KAAK,GAAGtQ,CAAC,GAAG,IAAI,CAACqiB,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM;YAEhD,KAAM,IAAImd,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACwf,QAAQ,EAAExf,CAAC,EAAG,EAAG;cAE1ClmB,KAAK,CAAClR,IAAI,CAAE,IAAI,CAAC6iB,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAGsmB,CAAC,CAAE,CAAE;YAE3C;UAED;UAEA,OAAO,IAAIuf,eAAe,CAAE,IAAI,IAAI,CAACzlC,KAAK,CAACrQ,WAAW,CAAEqQ,KAAK,CAAE,EAAE,IAAI,CAAC0lC,QAAQ,EAAE,IAAI,CAACC,UAAU,CAAE;QAElG,CAAC,MAAM;UAEN,IAAKh0B,IAAI,CAACsmG,kBAAkB,KAAKlqH,SAAS,EAAG;YAE5C4jB,IAAI,CAACsmG,kBAAkB,GAAG,CAAC,CAAC;UAE7B;UAEA,IAAKtmG,IAAI,CAACsmG,kBAAkB,CAAE,IAAI,CAACtmG,IAAI,CAAC7Q,IAAI,CAAE,KAAK/S,SAAS,EAAG;YAE9D4jB,IAAI,CAACsmG,kBAAkB,CAAE,IAAI,CAACtmG,IAAI,CAAC7Q,IAAI,CAAE,GAAG,IAAI,CAAC6Q,IAAI,CAAC1L,KAAK,CAAE0L,IAAI,CAAE;UAEpE;UAEA,OAAO,IAAIomG,0BAA0B,CAAEpmG,IAAI,CAACsmG,kBAAkB,CAAE,IAAI,CAACtmG,IAAI,CAAC7Q,IAAI,CAAE,EAAE,IAAI,CAAC4kC,QAAQ,EAAE,IAAI,CAAC38B,MAAM,EAAE,IAAI,CAAC48B,UAAU,CAAE;QAEhI;MAED;IAAC;MAAAp8C,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQJ,IAAI,EAAG;QAEd,IAAKA,IAAI,KAAK5jB,SAAS,EAAG;UAEzBiF,OAAO,CAAC0Q,GAAG,CAAE,wHAAwH,CAAE;UAEvI,IAAM1D,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI1Q,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACuqB,KAAK,EAAEvqB,CAAC,EAAG,EAAG;YAEvC,IAAMsQ,KAAK,GAAGtQ,CAAC,GAAG,IAAI,CAACqiB,IAAI,CAAC47B,MAAM,GAAG,IAAI,CAACxkC,MAAM;YAEhD,KAAM,IAAImd,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACwf,QAAQ,EAAExf,CAAC,EAAG,EAAG;cAE1ClmB,KAAK,CAAClR,IAAI,CAAE,IAAI,CAAC6iB,IAAI,CAAC3R,KAAK,CAAEJ,KAAK,GAAGsmB,CAAC,CAAE,CAAE;YAE3C;UAED;;UAEA;;UAEA,OAAO;YACNwf,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBp6C,IAAI,EAAE,IAAI,CAAC0U,KAAK,CAACrQ,WAAW,CAACC,IAAI;YACjCoQ,KAAK,EAAEA,KAAK;YACZ2lC,UAAU,EAAE,IAAI,CAACA;UAClB,CAAC;QAEF,CAAC,MAAM;UAEN;;UAEA,IAAKh0B,IAAI,CAACsmG,kBAAkB,KAAKlqH,SAAS,EAAG;YAE5C4jB,IAAI,CAACsmG,kBAAkB,GAAG,CAAC,CAAC;UAE7B;UAEA,IAAKtmG,IAAI,CAACsmG,kBAAkB,CAAE,IAAI,CAACtmG,IAAI,CAAC7Q,IAAI,CAAE,KAAK/S,SAAS,EAAG;YAE9D4jB,IAAI,CAACsmG,kBAAkB,CAAE,IAAI,CAACtmG,IAAI,CAAC7Q,IAAI,CAAE,GAAG,IAAI,CAAC6Q,IAAI,CAACI,MAAM,CAAEJ,IAAI,CAAE;UAErE;UAEA,OAAO;YACN27B,4BAA4B,EAAE,IAAI;YAClC5H,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvB/zB,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC7Q,IAAI;YACpBiI,MAAM,EAAE,IAAI,CAACA,MAAM;YACnB48B,UAAU,EAAE,IAAI,CAACA;UAClB,CAAC;QAEF;MAED;IAAC;IAAA,OAAAoyE,0BAAA;EAAA;EAAA,IAII9/B,cAAc,0BAAAigC,UAAA;IAAArlG,SAAA,CAAAolE,cAAA,EAAAigC,UAAA;IAAA,IAAAC,QAAA,GAAAplG,YAAA,CAAAklE,cAAA;IAEnB,SAAAA,eAAaphD,UAAU,EAAG;MAAA,IAAAuhF,OAAA;MAAAvmH,eAAA,OAAAomF,cAAA;MAEzBmgC,OAAA,GAAAD,QAAA,CAAA5sH,IAAA;MAEA6sH,OAAA,CAAKnO,gBAAgB,GAAG,IAAI;MAE5BmO,OAAA,CAAK9sH,IAAI,GAAG,gBAAgB;MAE5B8sH,OAAA,CAAKjpG,KAAK,GAAG,IAAI8yB,KAAK,CAAE,QAAQ,CAAE;MAElCm2E,OAAA,CAAKr5E,GAAG,GAAG,IAAI;MAEfq5E,OAAA,CAAKn5E,QAAQ,GAAG,IAAI;MAEpBm5E,OAAA,CAAK3qG,QAAQ,GAAG,CAAC;MAEjB2qG,OAAA,CAAKp3E,eAAe,GAAG,IAAI;MAE3Bo3E,OAAA,CAAKp9E,WAAW,GAAG,IAAI;MAEvBo9E,OAAA,CAAK12E,GAAG,GAAG,IAAI;MAEf02E,OAAA,CAAK/6E,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAuhF,OAAA;IAE9B;IAAC/lH,YAAA,CAAA4lF,cAAA;MAAA1uF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAwzC,cAAA,CAAA/uF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC3E,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAE/B,IAAI,CAAC4vB,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QAErB,IAAI,CAACE,QAAQ,GAAGnrB,MAAM,CAACmrB,QAAQ;QAE/B,IAAI,CAACxxB,QAAQ,GAAGqG,MAAM,CAACrG,QAAQ;QAE/B,IAAI,CAACuzB,eAAe,GAAGltB,MAAM,CAACktB,eAAe;QAE7C,IAAI,CAACU,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QAErB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAu2C,cAAA;EAAA,EA9C2B19C,QAAQ;EAkDrC,IAAI89E,SAAS;EAEb,IAAMC,eAAe,GAAG,aAAc,IAAIz5F,OAAO,EAAE;EACnD,IAAM05F,WAAW,GAAG,aAAc,IAAI15F,OAAO,EAAE;EAC/C,IAAM25F,WAAW,GAAG,aAAc,IAAI35F,OAAO,EAAE;EAE/C,IAAM45F,gBAAgB,GAAG,aAAc,IAAIlzG,OAAO,EAAE;EACpD,IAAMmzG,gBAAgB,GAAG,aAAc,IAAInzG,OAAO,EAAE;EACpD,IAAMozG,gBAAgB,GAAG,aAAc,IAAIruF,OAAO,EAAE;EAEpD,IAAMsuF,GAAG,GAAG,aAAc,IAAI/5F,OAAO,EAAE;EACvC,IAAMg6F,GAAG,GAAG,aAAc,IAAIh6F,OAAO,EAAE;EACvC,IAAMi6F,GAAG,GAAG,aAAc,IAAIj6F,OAAO,EAAE;EAEvC,IAAMk6F,IAAI,GAAG,aAAc,IAAIxzG,OAAO,EAAE;EACxC,IAAMyzG,IAAI,GAAG,aAAc,IAAIzzG,OAAO,EAAE;EACxC,IAAM0zG,IAAI,GAAG,aAAc,IAAI1zG,OAAO,EAAE;EAAC,IAEnC2zG,MAAM,0BAAAC,UAAA;IAAAtmG,SAAA,CAAAqmG,MAAA,EAAAC,UAAA;IAAA,IAAAC,QAAA,GAAArmG,YAAA,CAAAmmG,MAAA;IAEX,SAAAA,OAAa/hF,QAAQ,EAAG;MAAA,IAAAkiF,OAAA;MAAAxnH,eAAA,OAAAqnH,MAAA;MAEvBG,OAAA,GAAAD,QAAA,CAAA7tH,IAAA;MAEA8tH,OAAA,CAAK/G,QAAQ,GAAG,IAAI;MAEpB+G,OAAA,CAAK/tH,IAAI,GAAG,QAAQ;MAEpB,IAAK+sH,SAAS,KAAKtqH,SAAS,EAAG;QAE9BsqH,SAAS,GAAG,IAAIjvE,cAAc,EAAE;QAEhC,IAAMkwE,YAAY,GAAG,IAAIv0G,YAAY,CAAE,CACtC,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACrB,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACnB,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACnB,CAAE;QAEH,IAAMizG,iBAAiB,GAAG,IAAIP,iBAAiB,CAAE6B,YAAY,EAAE,CAAC,CAAE;QAElEjB,SAAS,CAACruE,QAAQ,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;QAC1CquE,SAAS,CAACnuE,YAAY,CAAE,UAAU,EAAE,IAAI6tE,0BAA0B,CAAEC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAE,CAAE;QACtGK,SAAS,CAACnuE,YAAY,CAAE,IAAI,EAAE,IAAI6tE,0BAA0B,CAAEC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAE,CAAE;MAEjG;MAEAqB,OAAA,CAAKr1F,QAAQ,GAAGq0F,SAAS;MACzBgB,OAAA,CAAKliF,QAAQ,GAAKA,QAAQ,KAAKppC,SAAS,GAAKopC,QAAQ,GAAG,IAAI8gD,cAAc,EAAE;MAE5EohC,OAAA,CAAK/vG,MAAM,GAAG,IAAI/D,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;MAAC,OAAA8zG,OAAA;IAEvC;IAAChnH,YAAA,CAAA6mH,MAAA;MAAA3vH,GAAA;MAAAE,KAAA,EAED,SAAA0rC,QAASwa,SAAS,EAAEC,UAAU,EAAG;QAEhC,IAAKD,SAAS,CAAC5vB,MAAM,KAAK,IAAI,EAAG;UAEhC/sB,OAAO,CAAChG,KAAK,CAAE,uFAAuF,CAAE;QAEzG;QAEAurH,WAAW,CAAC32F,kBAAkB,CAAE,IAAI,CAACxB,WAAW,CAAE;QAElDu4F,gBAAgB,CAACzyG,IAAI,CAAEypC,SAAS,CAAC5vB,MAAM,CAACK,WAAW,CAAE;QACrD,IAAI,CAAC+R,eAAe,CAACtnB,gBAAgB,CAAE8kC,SAAS,CAAC5vB,MAAM,CAACC,kBAAkB,EAAE,IAAI,CAACI,WAAW,CAAE;QAE9Fo4F,WAAW,CAAC72F,qBAAqB,CAAE,IAAI,CAACwQ,eAAe,CAAE;QAEzD,IAAKwd,SAAS,CAAC5vB,MAAM,CAAC20B,mBAAmB,IAAI,IAAI,CAACvd,QAAQ,CAAC6J,eAAe,KAAK,KAAK,EAAG;UAEtFu3E,WAAW,CAAC3xG,cAAc,CAAE,CAAE4xG,WAAW,CAAChjG,CAAC,CAAE;QAE9C;QAEA,IAAM/H,QAAQ,GAAG,IAAI,CAAC0pB,QAAQ,CAAC1pB,QAAQ;QACvC,IAAIrJ,GAAG,EAAED,GAAG;QAEZ,IAAKsJ,QAAQ,KAAK,CAAC,EAAG;UAErBtJ,GAAG,GAAG9D,IAAI,CAAC8D,GAAG,CAAEsJ,QAAQ,CAAE;UAC1BrJ,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAEqJ,QAAQ,CAAE;QAE3B;QAEA,IAAMnE,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1BiwG,eAAe,CAAEX,GAAG,CAAC/zG,GAAG,CAAE,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,CAAE,EAAE2zG,WAAW,EAAElvG,MAAM,EAAEivG,WAAW,EAAEn0G,GAAG,EAAED,GAAG,CAAE;QACzFo1G,eAAe,CAAEV,GAAG,CAACh0G,GAAG,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,CAAE,EAAE2zG,WAAW,EAAElvG,MAAM,EAAEivG,WAAW,EAAEn0G,GAAG,EAAED,GAAG,CAAE;QACvFo1G,eAAe,CAAET,GAAG,CAACj0G,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAE,EAAE2zG,WAAW,EAAElvG,MAAM,EAAEivG,WAAW,EAAEn0G,GAAG,EAAED,GAAG,CAAE;QAErF40G,IAAI,CAACl0G,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE;QAChBm0G,IAAI,CAACn0G,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE;QAChBo0G,IAAI,CAACp0G,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE;;QAEhB;QACA,IAAIghB,SAAS,GAAG8pB,SAAS,CAAChoB,GAAG,CAACoC,iBAAiB,CAAE6uF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE,KAAK,EAAER,eAAe,CAAE;QAExF,IAAKzyF,SAAS,KAAK,IAAI,EAAG;UAEzB;UACA0zF,eAAe,CAAEV,GAAG,CAACh0G,GAAG,CAAE,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAE,EAAE2zG,WAAW,EAAElvG,MAAM,EAAEivG,WAAW,EAAEn0G,GAAG,EAAED,GAAG,CAAE;UACvF60G,IAAI,CAACn0G,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE;UAEhBghB,SAAS,GAAG8pB,SAAS,CAAChoB,GAAG,CAACoC,iBAAiB,CAAE6uF,GAAG,EAAEE,GAAG,EAAED,GAAG,EAAE,KAAK,EAAEP,eAAe,CAAE;UACpF,IAAKzyF,SAAS,KAAK,IAAI,EAAG;YAEzB;UAED;QAED;QAEA,IAAM8N,QAAQ,GAAGgc,SAAS,CAAChoB,GAAG,CAACF,MAAM,CAACtf,UAAU,CAAEmwG,eAAe,CAAE;QAEnE,IAAK3kF,QAAQ,GAAGgc,SAAS,CAACxgB,IAAI,IAAIwE,QAAQ,GAAGgc,SAAS,CAACvgB,GAAG,EAAG;QAE7DwgB,UAAU,CAAC9gD,IAAI,CAAE;UAEhB6kC,QAAQ,EAAEA,QAAQ;UAClBpQ,KAAK,EAAE+0F,eAAe,CAACryG,KAAK,EAAE;UAC9BoP,EAAE,EAAE+iB,QAAQ,CAACgB,gBAAgB,CAAEk/E,eAAe,EAAEM,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE,IAAI1zG,OAAO,EAAE,CAAE;UAChG2qC,IAAI,EAAE,IAAI;UACV5/C,MAAM,EAAE;QAET,CAAC,CAAE;MAEJ;IAAC;MAAA/G,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAAy0E,MAAA,CAAAhwH,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAK1jB,MAAM,CAACxK,MAAM,KAAKvb,SAAS,EAAG,IAAI,CAACub,MAAM,CAACpD,IAAI,CAAE4N,MAAM,CAACxK,MAAM,CAAE;QAEpE,IAAI,CAAC6tB,QAAQ,GAAGrjB,MAAM,CAACqjB,QAAQ;QAE/B,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA+hF,MAAA;EAAA,EAzHmBznF,QAAQ;EA6H7B,SAAS8nF,eAAeA,CAAEC,cAAc,EAAEC,UAAU,EAAEnwG,MAAM,EAAEsE,KAAK,EAAExJ,GAAG,EAAED,GAAG,EAAG;IAE/E;IACAs0G,gBAAgB,CAAC/xG,UAAU,CAAE8yG,cAAc,EAAElwG,MAAM,CAAE,CAACjD,SAAS,CAAE,GAAG,CAAE,CAACM,QAAQ,CAAEiH,KAAK,CAAE;;IAExF;IACA,IAAKxJ,GAAG,KAAKrW,SAAS,EAAG;MAExB2qH,gBAAgB,CAACn3G,CAAC,GAAK4C,GAAG,GAAGs0G,gBAAgB,CAACl3G,CAAC,GAAO6C,GAAG,GAAGq0G,gBAAgB,CAAC52G,CAAG;MAChF62G,gBAAgB,CAAC72G,CAAC,GAAKuC,GAAG,GAAGq0G,gBAAgB,CAACl3G,CAAC,GAAO4C,GAAG,GAAGs0G,gBAAgB,CAAC52G,CAAG;IAEjF,CAAC,MAAM;MAEN62G,gBAAgB,CAACxyG,IAAI,CAAEuyG,gBAAgB,CAAE;IAE1C;IAGAe,cAAc,CAACtzG,IAAI,CAAEuzG,UAAU,CAAE;IACjCD,cAAc,CAACj4G,CAAC,IAAIm3G,gBAAgB,CAACn3G,CAAC;IACtCi4G,cAAc,CAAC33G,CAAC,IAAI62G,gBAAgB,CAAC72G,CAAC;;IAEtC;IACA23G,cAAc,CAAC3jG,YAAY,CAAE8iG,gBAAgB,CAAE;EAEhD;EAEA,IAAMe,KAAK,GAAG,aAAc,IAAI76F,OAAO,EAAE;EACzC,IAAM86F,KAAK,GAAG,aAAc,IAAI96F,OAAO,EAAE;EAAC,IAEpC+6F,GAAG,0BAAAC,UAAA;IAAAhnG,SAAA,CAAA+mG,GAAA,EAAAC,UAAA;IAAA,IAAAC,QAAA,GAAA/mG,YAAA,CAAA6mG,GAAA;IAER,SAAAA,IAAA,EAAc;MAAA,IAAAG,OAAA;MAAAloH,eAAA,OAAA+nH,GAAA;MAEbG,OAAA,GAAAD,QAAA,CAAAvuH,IAAA;MAEAwuH,OAAA,CAAKC,aAAa,GAAG,CAAC;MAEtBD,OAAA,CAAKzuH,IAAI,GAAG,KAAK;MAEjBrC,MAAM,CAACipC,gBAAgB,CAAAre,sBAAA,CAAAkmG,OAAA,GAAQ;QAC9B/jB,MAAM,EAAE;UACP7rG,UAAU,EAAE,IAAI;UAChBV,KAAK,EAAE;QACR,CAAC;QACDqpH,KAAK,EAAE;UACNrpH,KAAK,EAAE;QACR;MACD,CAAC,CAAE;MAEHswH,OAAA,CAAKp3B,UAAU,GAAG,IAAI;MAAC,OAAAo3B,OAAA;IAExB;IAAC1nH,YAAA,CAAAunH,GAAA;MAAArwH,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAm1E,GAAA,CAAA1wH,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE,KAAK;QAEzB,IAAMkiF,MAAM,GAAGliF,MAAM,CAACkiF,MAAM;QAE5B,KAAM,IAAI1mG,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG+1F,MAAM,CAAC3mG,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEjD,IAAMmmH,KAAK,GAAGzf,MAAM,CAAE1mG,CAAC,CAAE;UAEzB,IAAI,CAAC2qH,QAAQ,CAAExE,KAAK,CAACnlH,MAAM,CAAC2V,KAAK,EAAE,EAAEwvG,KAAK,CAAC9hF,QAAQ,EAAE8hF,KAAK,CAACyE,UAAU,CAAE;QAExE;QAEA,IAAI,CAACv3B,UAAU,GAAG7uE,MAAM,CAAC6uE,UAAU;QAEnC,OAAO,IAAI;MAEZ;IAAC;MAAAp5F,GAAA;MAAAE,KAAA,EAED,SAAAwwH,SAAU3pH,MAAM,EAAEqjC,QAAQ,GAAG,CAAC,EAAEumF,UAAU,GAAG,CAAC,EAAG;QAEhDvmF,QAAQ,GAAGtzB,IAAI,CAACgC,GAAG,CAAEsxB,QAAQ,CAAE;QAE/B,IAAMqiE,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAI/1F,CAAC;QAEL,KAAMA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+1F,MAAM,CAAC3mG,MAAM,EAAE4Q,CAAC,EAAG,EAAG;UAEtC,IAAK0zB,QAAQ,GAAGqiE,MAAM,CAAE/1F,CAAC,CAAE,CAAC0zB,QAAQ,EAAG;YAEtC;UAED;QAED;QAEAqiE,MAAM,CAACn2F,MAAM,CAAEI,CAAC,EAAE,CAAC,EAAE;UAAE0zB,QAAQ,EAAEA,QAAQ;UAAEumF,UAAU,EAAEA,UAAU;UAAE5pH,MAAM,EAAEA;QAAO,CAAC,CAAE;QAErF,IAAI,CAAC8V,GAAG,CAAE9V,MAAM,CAAE;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAA/G,GAAA;MAAAE,KAAA,EAED,SAAA0wH,gBAAA,EAAkB;QAEjB,OAAO,IAAI,CAACH,aAAa;MAE1B;IAAC;MAAAzwH,GAAA;MAAAE,KAAA,EAID,SAAA2wH,qBAAsBzmF,QAAQ,EAAG;QAEhC,IAAMqiE,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAKA,MAAM,CAAC3mG,MAAM,GAAG,CAAC,EAAG;UAExB,IAAIC,CAAC,EAAE2Q,CAAC;UAER,KAAM3Q,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG+1F,MAAM,CAAC3mG,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAE7C,IAAI+qH,aAAa,GAAGrkB,MAAM,CAAE1mG,CAAC,CAAE,CAACqkC,QAAQ;YAExC,IAAKqiE,MAAM,CAAE1mG,CAAC,CAAE,CAACgB,MAAM,CAACmiC,OAAO,EAAG;cAEjC4nF,aAAa,IAAIA,aAAa,GAAGrkB,MAAM,CAAE1mG,CAAC,CAAE,CAAC4qH,UAAU;YAExD;YAEA,IAAKvmF,QAAQ,GAAG0mF,aAAa,EAAG;cAE/B;YAED;UAED;UAEA,OAAOrkB,MAAM,CAAE1mG,CAAC,GAAG,CAAC,CAAE,CAACgB,MAAM;QAE9B;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/G,GAAA;MAAAE,KAAA,EAED,SAAA0rC,QAASwa,SAAS,EAAEC,UAAU,EAAG;QAEhC,IAAMomD,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAKA,MAAM,CAAC3mG,MAAM,GAAG,CAAC,EAAG;UAExBqqH,KAAK,CAAC/3F,qBAAqB,CAAE,IAAI,CAACvB,WAAW,CAAE;UAE/C,IAAMuT,QAAQ,GAAGgc,SAAS,CAAChoB,GAAG,CAACF,MAAM,CAACtf,UAAU,CAAEuxG,KAAK,CAAE;UAEzD,IAAI,CAACU,oBAAoB,CAAEzmF,QAAQ,CAAE,CAACwB,OAAO,CAAEwa,SAAS,EAAEC,UAAU,CAAE;QAEvE;MAED;IAAC;MAAArmD,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAQmF,MAAM,EAAG;QAEhB,IAAMi2E,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAKA,MAAM,CAAC3mG,MAAM,GAAG,CAAC,EAAG;UAExBqqH,KAAK,CAAC/3F,qBAAqB,CAAE5B,MAAM,CAACK,WAAW,CAAE;UACjDu5F,KAAK,CAACh4F,qBAAqB,CAAE,IAAI,CAACvB,WAAW,CAAE;UAE/C,IAAMuT,QAAQ,GAAG+lF,KAAK,CAACvxG,UAAU,CAAEwxG,KAAK,CAAE,GAAG55F,MAAM,CAAC40B,IAAI;UAExDqhD,MAAM,CAAE,CAAC,CAAE,CAAC1lG,MAAM,CAACmiC,OAAO,GAAG,IAAI;UAEjC,IAAInjC,CAAC,EAAE2Q,CAAC;UAER,KAAM3Q,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG+1F,MAAM,CAAC3mG,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAE7C,IAAI+qH,aAAa,GAAGrkB,MAAM,CAAE1mG,CAAC,CAAE,CAACqkC,QAAQ;YAExC,IAAKqiE,MAAM,CAAE1mG,CAAC,CAAE,CAACgB,MAAM,CAACmiC,OAAO,EAAG;cAEjC4nF,aAAa,IAAIA,aAAa,GAAGrkB,MAAM,CAAE1mG,CAAC,CAAE,CAAC4qH,UAAU;YAExD;YAEA,IAAKvmF,QAAQ,IAAI0mF,aAAa,EAAG;cAEhCrkB,MAAM,CAAE1mG,CAAC,GAAG,CAAC,CAAE,CAACgB,MAAM,CAACmiC,OAAO,GAAG,KAAK;cACtCujE,MAAM,CAAE1mG,CAAC,CAAE,CAACgB,MAAM,CAACmiC,OAAO,GAAG,IAAI;YAElC,CAAC,MAAM;cAEN;YAED;UAED;UAEA,IAAI,CAACunF,aAAa,GAAG1qH,CAAC,GAAG,CAAC;UAE1B,OAAQA,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAErB0mG,MAAM,CAAE1mG,CAAC,CAAE,CAACgB,MAAM,CAACmiC,OAAO,GAAG,KAAK;UAEnC;QAED;MAED;IAAC;MAAAlpC,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAML,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAm1E,GAAA,CAAA1wH,SAAA,mBAAAqC,IAAA,OAAiBymB,IAAI,CAAE;QAEjC,IAAK,IAAI,CAAC2wE,UAAU,KAAK,KAAK,EAAGhxE,IAAI,CAACrhB,MAAM,CAACqyF,UAAU,GAAG,KAAK;QAE/DhxE,IAAI,CAACrhB,MAAM,CAAC0lG,MAAM,GAAG,EAAE;QAEvB,IAAMA,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,KAAM,IAAI1mG,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG+1F,MAAM,CAAC3mG,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEjD,IAAMmmH,KAAK,GAAGzf,MAAM,CAAE1mG,CAAC,CAAE;UAEzBqiB,IAAI,CAACrhB,MAAM,CAAC0lG,MAAM,CAAClnG,IAAI,CAAE;YACxBwB,MAAM,EAAEmlH,KAAK,CAACnlH,MAAM,CAACwQ,IAAI;YACzB6yB,QAAQ,EAAE8hF,KAAK,CAAC9hF,QAAQ;YACxBumF,UAAU,EAAEzE,KAAK,CAACyE;UACnB,CAAC,CAAE;QAEJ;QAEA,OAAOvoG,IAAI;MAEZ;IAAC;IAAA,OAAAioG,GAAA;EAAA,EA1MgBnoF,QAAQ;EA8M1B,IAAM6oF,aAAa,GAAG,aAAc,IAAIz7F,OAAO,EAAE;EAEjD,IAAM07F,UAAU,GAAG,aAAc,IAAIjlG,OAAO,EAAE;EAC9C,IAAMklG,WAAW,GAAG,aAAc,IAAIllG,OAAO,EAAE;EAE/C,IAAM05F,QAAQ,GAAG,aAAc,IAAInwF,OAAO,EAAE;EAC5C,IAAM47F,QAAQ,GAAG,aAAc,IAAInwF,OAAO,EAAE;EAC5C,IAAMowF,OAAO,GAAG,aAAc,IAAI77F,OAAO,EAAE;EAAC,IAEtC87F,WAAW,0BAAAC,KAAA;IAAA/nG,SAAA,CAAA8nG,WAAA,EAAAC,KAAA;IAAA,IAAAC,QAAA,GAAA9nG,YAAA,CAAA4nG,WAAA;IAEhB,SAAAA,YAAa32F,QAAQ,EAAEmT,QAAQ,EAAG;MAAA,IAAA2jF,OAAA;MAAAjpH,eAAA,OAAA8oH,WAAA;MAEjCG,OAAA,GAAAD,QAAA,CAAAtvH,IAAA,OAAOy4B,QAAQ,EAAEmT,QAAQ;MAEzB2jF,OAAA,CAAK/jF,aAAa,GAAG,IAAI;MAEzB+jF,OAAA,CAAKxvH,IAAI,GAAG,aAAa;MAEzBwvH,OAAA,CAAK9jF,QAAQ,GAAG,UAAU;MAC1B8jF,OAAA,CAAK7jF,UAAU,GAAG,IAAI3M,OAAO,EAAE;MAC/BwwF,OAAA,CAAKC,iBAAiB,GAAG,IAAIzwF,OAAO,EAAE;MAEtCwwF,OAAA,CAAKl3F,WAAW,GAAG,IAAI;MACvBk3F,OAAA,CAAKlxE,cAAc,GAAG,IAAI;MAAC,OAAAkxE,OAAA;IAE5B;IAACzoH,YAAA,CAAAsoH,WAAA;MAAApxH,GAAA;MAAAE,KAAA,EAED,SAAAo6B,mBAAA,EAAqB;QAEpB,IAAMG,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,IAAK,IAAI,CAACJ,WAAW,KAAK,IAAI,EAAG;UAEhC,IAAI,CAACA,WAAW,GAAG,IAAIzB,IAAI,EAAE;QAE9B;QAEA,IAAI,CAACyB,WAAW,CAACrB,SAAS,EAAE;QAE5B,IAAMgqB,iBAAiB,GAAGvoB,QAAQ,CAACimB,YAAY,CAAE,UAAU,CAAE;QAE7D,KAAM,IAAI36C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi9C,iBAAiB,CAAC1yB,KAAK,EAAEvqB,CAAC,EAAG,EAAG;UAEpDorH,OAAO,CAACzxG,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,CAAC,CAAE;UACnD,IAAI,CAACogD,kBAAkB,CAAEpgD,CAAC,EAAEorH,OAAO,CAAE;UACrC,IAAI,CAAC92F,WAAW,CAACpB,aAAa,CAAEk4F,OAAO,CAAE;QAE1C;MAED;IAAC;MAAAnxH,GAAA;MAAAE,KAAA,EAED,SAAAihD,sBAAA,EAAwB;QAEvB,IAAM1mB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,IAAK,IAAI,CAAC4lB,cAAc,KAAK,IAAI,EAAG;UAEnC,IAAI,CAACA,cAAc,GAAG,IAAInjB,MAAM,EAAE;QAEnC;QAEA,IAAI,CAACmjB,cAAc,CAACrnB,SAAS,EAAE;QAE/B,IAAMgqB,iBAAiB,GAAGvoB,QAAQ,CAACimB,YAAY,CAAE,UAAU,CAAE;QAE7D,KAAM,IAAI36C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi9C,iBAAiB,CAAC1yB,KAAK,EAAEvqB,CAAC,EAAG,EAAG;UAEpDorH,OAAO,CAACzxG,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,CAAC,CAAE;UACnD,IAAI,CAACogD,kBAAkB,CAAEpgD,CAAC,EAAEorH,OAAO,CAAE;UACrC,IAAI,CAAC9wE,cAAc,CAACpnB,aAAa,CAAEk4F,OAAO,CAAE;QAE7C;MAED;IAAC;MAAAnxH,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAAk2E,WAAA,CAAAzxH,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAACR,QAAQ,GAAGljB,MAAM,CAACkjB,QAAQ;QAC/B,IAAI,CAACC,UAAU,CAAC/wB,IAAI,CAAE4N,MAAM,CAACmjB,UAAU,CAAE;QACzC,IAAI,CAAC8jF,iBAAiB,CAAC70G,IAAI,CAAE4N,MAAM,CAACinG,iBAAiB,CAAE;QAEvD,IAAI,CAAC7jF,QAAQ,GAAGpjB,MAAM,CAACojB,QAAQ;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAA3tC,GAAA;MAAAE,KAAA,EAED,SAAAghH,KAAMvzE,QAAQ,EAAED,UAAU,EAAG;QAE5B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;QAExB,IAAKD,UAAU,KAAKlpC,SAAS,EAAG;UAE/B,IAAI,CAACwnC,iBAAiB,CAAE,IAAI,CAAE;UAE9B,IAAI,CAAC2B,QAAQ,CAAC8jF,iBAAiB,EAAE;UAEjC/jF,UAAU,GAAG,IAAI,CAAC7W,WAAW;QAE9B;QAEA,IAAI,CAAC6W,UAAU,CAAC/wB,IAAI,CAAE+wB,UAAU,CAAE;QAClC,IAAI,CAAC8jF,iBAAiB,CAAC70G,IAAI,CAAE+wB,UAAU,CAAE,CAACzqB,MAAM,EAAE;MAEnD;IAAC;MAAAjjB,GAAA;MAAAE,KAAA,EAED,SAAAi4G,KAAA,EAAO;QAEN,IAAI,CAACxqE,QAAQ,CAACwqE,IAAI,EAAE;MAErB;IAAC;MAAAn4G,GAAA;MAAAE,KAAA,EAED,SAAAwxH,qBAAA,EAAuB;QAEtB,IAAMx3F,MAAM,GAAG,IAAInO,OAAO,EAAE;QAE5B,IAAM4lG,UAAU,GAAG,IAAI,CAACl3F,QAAQ,CAACC,UAAU,CAACi3F,UAAU;QAEtD,KAAM,IAAI5rH,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGi7G,UAAU,CAACrhG,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEpDm0B,MAAM,CAACxa,mBAAmB,CAAEiyG,UAAU,EAAE5rH,CAAC,CAAE;UAE3C,IAAMse,KAAK,GAAG,GAAG,GAAG6V,MAAM,CAAC7b,eAAe,EAAE;UAE5C,IAAKgG,KAAK,KAAKwU,QAAQ,EAAG;YAEzBqB,MAAM,CAAC7c,cAAc,CAAEgH,KAAK,CAAE;UAE/B,CAAC,MAAM;YAEN6V,MAAM,CAAC5e,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC;UAE3B;;UAEAq2G,UAAU,CAAC30E,OAAO,CAAEj3C,CAAC,EAAEm0B,MAAM,CAACliB,CAAC,EAAEkiB,MAAM,CAAC5hB,CAAC,EAAE4hB,MAAM,CAACjO,CAAC,EAAEiO,MAAM,CAAChO,CAAC,CAAE;QAEhE;MAED;IAAC;MAAAlsB,GAAA;MAAAE,KAAA,EAED,SAAA8rC,kBAAmBC,KAAK,EAAG;QAE1BgP,IAAA,CAAAC,eAAA,CAAAk2E,WAAA,CAAAzxH,SAAA,8BAAAqC,IAAA,OAAyBiqC,KAAK;QAE9B,IAAK,IAAI,CAACwB,QAAQ,KAAK,UAAU,EAAG;UAEnC,IAAI,CAAC+jF,iBAAiB,CAAC70G,IAAI,CAAE,IAAI,CAACka,WAAW,CAAE,CAAC5T,MAAM,EAAE;QAEzD,CAAC,MAAM,IAAK,IAAI,CAACwqB,QAAQ,KAAK,UAAU,EAAG;UAE1C,IAAI,CAAC+jF,iBAAiB,CAAC70G,IAAI,CAAE,IAAI,CAAC+wB,UAAU,CAAE,CAACzqB,MAAM,EAAE;QAExD,CAAC,MAAM;UAENxZ,OAAO,CAACC,IAAI,CAAE,4CAA4C,GAAG,IAAI,CAAC+jC,QAAQ,CAAE;QAE7E;MAED;IAAC;MAAAztC,GAAA;MAAAE,KAAA,EAED,SAAAimD,mBAAoB9vC,KAAK,EAAE6jB,MAAM,EAAG;QAEnC,IAAMyT,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAMlT,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9Bu2F,UAAU,CAACtxG,mBAAmB,CAAE+a,QAAQ,CAACC,UAAU,CAACk3F,SAAS,EAAEv7G,KAAK,CAAE;QACtE46G,WAAW,CAACvxG,mBAAmB,CAAE+a,QAAQ,CAACC,UAAU,CAACi3F,UAAU,EAAEt7G,KAAK,CAAE;QAExE06G,aAAa,CAACp0G,IAAI,CAAEud,MAAM,CAAE,CAAC5N,YAAY,CAAE,IAAI,CAACohB,UAAU,CAAE;QAE5DxT,MAAM,CAAC5e,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAErB,KAAM,IAAIvV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAMuvE,MAAM,GAAG27C,WAAW,CAACx0G,YAAY,CAAE1W,CAAC,CAAE;UAE5C,IAAKuvE,MAAM,KAAK,CAAC,EAAG;YAEnB,IAAMu8C,SAAS,GAAGb,UAAU,CAACv0G,YAAY,CAAE1W,CAAC,CAAE;YAE9CmrH,QAAQ,CAAC5vG,gBAAgB,CAAEqsB,QAAQ,CAACmkF,KAAK,CAAED,SAAS,CAAE,CAACh7F,WAAW,EAAE8W,QAAQ,CAACokF,YAAY,CAAEF,SAAS,CAAE,CAAE;YAExG33F,MAAM,CAACld,eAAe,CAAEyoG,QAAQ,CAAC9oG,IAAI,CAAEo0G,aAAa,CAAE,CAACzkG,YAAY,CAAE4kG,QAAQ,CAAE,EAAE57C,MAAM,CAAE;UAE1F;QAED;QAEA,OAAOp7C,MAAM,CAAC5N,YAAY,CAAE,IAAI,CAACklG,iBAAiB,CAAE;MAErD;IAAC;MAAAxxH,GAAA;MAAAE,KAAA,EAED,SAAA8xH,cAAe37G,KAAK,EAAE6jB,MAAM,EAAG;QAAE;;QAEhCzwB,OAAO,CAACC,IAAI,CAAE,mFAAmF,CAAE;QACnG,OAAO,IAAI,CAACy8C,kBAAkB,CAAE9vC,KAAK,EAAE6jB,MAAM,CAAE;MAEhD;IAAC;IAAA,OAAAk3F,WAAA;EAAA,EA/LwB7rE,IAAI;EAAA,IAoMxB0sE,IAAI,0BAAAC,UAAA;IAAA5oG,SAAA,CAAA2oG,IAAA,EAAAC,UAAA;IAAA,IAAAC,QAAA,GAAA3oG,YAAA,CAAAyoG,IAAA;IAET,SAAAA,KAAA,EAAc;MAAA,IAAAG,OAAA;MAAA9pH,eAAA,OAAA2pH,IAAA;MAEbG,OAAA,GAAAD,QAAA,CAAAnwH,IAAA;MAEAowH,OAAA,CAAKC,MAAM,GAAG,IAAI;MAElBD,OAAA,CAAKrwH,IAAI,GAAG,MAAM;MAAC,OAAAqwH,OAAA;IAEpB;IAAC,OAAAtpH,YAAA,CAAAmpH,IAAA;EAAA,EAViB/pF,QAAQ;EAAA,IAcrBoqF,WAAW,0BAAAC,SAAA;IAAAjpG,SAAA,CAAAgpG,WAAA,EAAAC,SAAA;IAAA,IAAAC,QAAA,GAAAhpG,YAAA,CAAA8oG,WAAA;IAEhB,SAAAA,YAAalqG,IAAI,GAAG,IAAI,EAAEZ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEuC,MAAM,EAAEjoB,IAAI,EAAE2nB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,GAAGpb,aAAa,EAAEqb,SAAS,GAAGrb,aAAa,EAAEub,UAAU,EAAEE,QAAQ,EAAG;MAAA,IAAAsoG,OAAA;MAAAnqH,eAAA,OAAAgqH,WAAA;MAElKG,OAAA,GAAAD,QAAA,CAAAxwH,IAAA,OAAO,IAAI,EAAE0nB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEjoB,IAAI,EAAEkoB,UAAU,EAAEE,QAAQ;MAE5FsoG,OAAA,CAAKzpG,aAAa,GAAG,IAAI;MAEzBypG,OAAA,CAAKtrG,KAAK,GAAG;QAAEiB,IAAI,EAAEA,IAAI;QAAEZ,KAAK,EAAEA,KAAK;QAAEC,MAAM,EAAEA;MAAO,CAAC;MAEzDgrG,OAAA,CAAK5nG,eAAe,GAAG,KAAK;MAC5B4nG,OAAA,CAAK1nG,KAAK,GAAG,KAAK;MAClB0nG,OAAA,CAAKznG,eAAe,GAAG,CAAC;MAAC,OAAAynG,OAAA;IAE1B;IAAC,OAAA3pH,YAAA,CAAAwpH,WAAA;EAAA,EAdwBlpG,OAAO;EAkBjC,IAAMspG,aAAa,GAAG,aAAc,IAAI3xF,OAAO,EAAE;EACjD,IAAM4xF,eAAe,GAAG,aAAc,IAAI5xF,OAAO,EAAE;EAAC,IAE9C6xF,QAAQ;IAEb,SAAAA,SAAad,KAAK,GAAG,EAAE,EAAEC,YAAY,GAAG,EAAE,EAAG;MAAAzpH,eAAA,OAAAsqH,QAAA;MAE5C,IAAI,CAACr7G,IAAI,GAAGN,YAAY,EAAE;MAE1B,IAAI,CAAC66G,KAAK,GAAGA,KAAK,CAACzqH,KAAK,CAAE,CAAC,CAAE;MAC7B,IAAI,CAAC0qH,YAAY,GAAGA,YAAY;MAChC,IAAI,CAACc,YAAY,GAAG,IAAI;MAExB,IAAI,CAAC/H,WAAW,GAAG,IAAI;MACvB,IAAI,CAACE,eAAe,GAAG,CAAC;MAExB,IAAI,CAAC74D,KAAK,GAAG,CAAE,CAAC;MAEhB,IAAI,CAACuc,IAAI,EAAE;IAEZ;IAAC5lE,YAAA,CAAA8pH,QAAA;MAAA5yH,GAAA;MAAAE,KAAA,EAED,SAAAwuE,KAAA,EAAO;QAEN,IAAMojD,KAAK,GAAG,IAAI,CAACA,KAAK;QACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;QAEtC,IAAI,CAACc,YAAY,GAAG,IAAIr3G,YAAY,CAAEs2G,KAAK,CAAChsH,MAAM,GAAG,EAAE,CAAE;;QAEzD;;QAEA,IAAKisH,YAAY,CAACjsH,MAAM,KAAK,CAAC,EAAG;UAEhC,IAAI,CAAC2rH,iBAAiB,EAAE;QAEzB,CAAC,MAAM;UAEN;;UAEA,IAAKK,KAAK,CAAChsH,MAAM,KAAKisH,YAAY,CAACjsH,MAAM,EAAG;YAE3C2D,OAAO,CAACC,IAAI,CAAE,iFAAiF,CAAE;YAEjG,IAAI,CAACqoH,YAAY,GAAG,EAAE;YAEtB,KAAM,IAAIhsH,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG,IAAI,CAACqhG,KAAK,CAAChsH,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;cAEvD,IAAI,CAACgsH,YAAY,CAACxsH,IAAI,CAAE,IAAIw7B,OAAO,EAAE,CAAE;YAExC;UAED;QAED;MAED;IAAC;MAAA/gC,GAAA;MAAAE,KAAA,EAED,SAAAuxH,kBAAA,EAAoB;QAEnB,IAAI,CAACM,YAAY,CAACjsH,MAAM,GAAG,CAAC;QAE5B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG,IAAI,CAACqhG,KAAK,CAAChsH,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAEvD,IAAM+sH,OAAO,GAAG,IAAI/xF,OAAO,EAAE;UAE7B,IAAK,IAAI,CAAC+wF,KAAK,CAAE/rH,CAAC,CAAE,EAAG;YAEtB+sH,OAAO,CAACn2G,IAAI,CAAE,IAAI,CAACm1G,KAAK,CAAE/rH,CAAC,CAAE,CAAC8wB,WAAW,CAAE,CAAC5T,MAAM,EAAE;UAErD;UAEA,IAAI,CAAC8uG,YAAY,CAACxsH,IAAI,CAAEutH,OAAO,CAAE;QAElC;MAED;IAAC;MAAA9yH,GAAA;MAAAE,KAAA,EAED,SAAAi4G,KAAA,EAAO;QAEN;;QAEA,KAAM,IAAIpyG,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG,IAAI,CAACqhG,KAAK,CAAChsH,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAEvD,IAAMgtH,IAAI,GAAG,IAAI,CAACjB,KAAK,CAAE/rH,CAAC,CAAE;UAE5B,IAAKgtH,IAAI,EAAG;YAEXA,IAAI,CAACl8F,WAAW,CAACla,IAAI,CAAE,IAAI,CAACo1G,YAAY,CAAEhsH,CAAC,CAAE,CAAE,CAACkd,MAAM,EAAE;UAEzD;QAED;;QAEA;;QAEA,KAAM,IAAIld,IAAC,GAAG,CAAC,EAAE0qB,KAAE,GAAG,IAAI,CAACqhG,KAAK,CAAChsH,MAAM,EAAEC,IAAC,GAAG0qB,KAAE,EAAE1qB,IAAC,EAAG,EAAG;UAEvD,IAAMgtH,KAAI,GAAG,IAAI,CAACjB,KAAK,CAAE/rH,IAAC,CAAE;UAE5B,IAAKgtH,KAAI,EAAG;YAEX,IAAKA,KAAI,CAACxqF,MAAM,IAAIwqF,KAAI,CAACxqF,MAAM,CAAC8pF,MAAM,EAAG;cAExCU,KAAI,CAACnuG,MAAM,CAACjI,IAAI,CAAEo2G,KAAI,CAACxqF,MAAM,CAAC1R,WAAW,CAAE,CAAC5T,MAAM,EAAE;cACpD8vG,KAAI,CAACnuG,MAAM,CAACxH,QAAQ,CAAE21G,KAAI,CAACl8F,WAAW,CAAE;YAEzC,CAAC,MAAM;cAENk8F,KAAI,CAACnuG,MAAM,CAACjI,IAAI,CAAEo2G,KAAI,CAACl8F,WAAW,CAAE;YAErC;YAEAk8F,KAAI,CAACnuG,MAAM,CAACsgB,SAAS,CAAE6tF,KAAI,CAACp4F,QAAQ,EAAEo4F,KAAI,CAAC7hG,UAAU,EAAE6hG,KAAI,CAAC1uG,KAAK,CAAE;UAEpE;QAED;MAED;IAAC;MAAArkB,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAA,EAAS;QAER,IAAMygG,KAAK,GAAG,IAAI,CAACA,KAAK;QACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;QACtC,IAAMc,YAAY,GAAG,IAAI,CAACA,YAAY;QACtC,IAAM/H,WAAW,GAAG,IAAI,CAACA,WAAW;;QAEpC;;QAEA,KAAM,IAAI/kH,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGqhG,KAAK,CAAChsH,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAElD;;UAEA,IAAM6e,MAAM,GAAGktG,KAAK,CAAE/rH,CAAC,CAAE,GAAG+rH,KAAK,CAAE/rH,CAAC,CAAE,CAAC8wB,WAAW,GAAG87F,eAAe;UAEpED,aAAa,CAACpxG,gBAAgB,CAAEsD,MAAM,EAAEmtG,YAAY,CAAEhsH,CAAC,CAAE,CAAE;UAC3D2sH,aAAa,CAACjzG,OAAO,CAAEozG,YAAY,EAAE9sH,CAAC,GAAG,EAAE,CAAE;QAE9C;QAEA,IAAK+kH,WAAW,KAAK,IAAI,EAAG;UAE3BA,WAAW,CAACr/F,WAAW,GAAG,IAAI;QAE/B;MAED;IAAC;MAAAzrB,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAIk2G,QAAQ,CAAE,IAAI,CAACd,KAAK,EAAE,IAAI,CAACC,YAAY,CAAE;MAErD;IAAC;MAAA/xH,GAAA;MAAAE,KAAA,EAED,SAAA6qH,mBAAA,EAAqB;QAEpB;QACA;QACA;QACA;QACA;QACA;;QAEA,IAAIxxF,IAAI,GAAGziB,IAAI,CAACsH,IAAI,CAAE,IAAI,CAAC0zG,KAAK,CAAChsH,MAAM,GAAG,CAAC,CAAE,CAAC,CAAC;QAC/CyzB,IAAI,GAAGvf,cAAc,CAAEuf,IAAI,CAAE;QAC7BA,IAAI,GAAGziB,IAAI,CAACa,GAAG,CAAE4hB,IAAI,EAAE,CAAC,CAAE;QAE1B,IAAMs5F,YAAY,GAAG,IAAIr3G,YAAY,CAAE+d,IAAI,GAAGA,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC;QAC1Ds5F,YAAY,CAACv3G,GAAG,CAAE,IAAI,CAACu3G,YAAY,CAAE,CAAC,CAAC;;QAEvC,IAAM/H,WAAW,GAAG,IAAIwH,WAAW,CAAEO,YAAY,EAAEt5F,IAAI,EAAEA,IAAI,EAAEvpB,UAAU,EAAEN,SAAS,CAAE;QACtFo7G,WAAW,CAACr/F,WAAW,GAAG,IAAI;QAE9B,IAAI,CAAConG,YAAY,GAAGA,YAAY;QAChC,IAAI,CAAC/H,WAAW,GAAGA,WAAW;QAC9B,IAAI,CAACE,eAAe,GAAGzxF,IAAI;QAE3B,OAAO,IAAI;MAEZ;IAAC;MAAAv5B,GAAA;MAAAE,KAAA,EAED,SAAA8yH,cAAe3sH,IAAI,EAAG;QAErB,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG,IAAI,CAACqhG,KAAK,CAAChsH,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAEvD,IAAMgtH,IAAI,GAAG,IAAI,CAACjB,KAAK,CAAE/rH,CAAC,CAAE;UAE5B,IAAKgtH,IAAI,CAAC1sH,IAAI,KAAKA,IAAI,EAAG;YAEzB,OAAO0sH,IAAI;UAEZ;QAED;QAEA,OAAOvuH,SAAS;MAEjB;IAAC;MAAAxE,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAW;QAEV,IAAK,IAAI,CAACk/F,WAAW,KAAK,IAAI,EAAG;UAEhC,IAAI,CAACA,WAAW,CAACl/F,OAAO,EAAE;UAE1B,IAAI,CAACk/F,WAAW,GAAG,IAAI;QAExB;MAED;IAAC;MAAA9qH,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAEnB,KAAK,EAAG;QAEvB,IAAI,CAACv6G,IAAI,GAAG07G,IAAI,CAAC17G,IAAI;QAErB,KAAM,IAAIxR,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGu8G,IAAI,CAACnB,KAAK,CAAChsH,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAErD,IAAMwR,IAAI,GAAG07G,IAAI,CAACnB,KAAK,CAAE/rH,CAAC,CAAE;UAC5B,IAAIgtH,IAAI,GAAGjB,KAAK,CAAEv6G,IAAI,CAAE;UAExB,IAAKw7G,IAAI,KAAKvuH,SAAS,EAAG;YAEzBiF,OAAO,CAACC,IAAI,CAAE,0CAA0C,EAAE6N,IAAI,CAAE;YAChEw7G,IAAI,GAAG,IAAId,IAAI,EAAE;UAElB;UAEA,IAAI,CAACH,KAAK,CAACvsH,IAAI,CAAEwtH,IAAI,CAAE;UACvB,IAAI,CAAChB,YAAY,CAACxsH,IAAI,CAAE,IAAIw7B,OAAO,EAAE,CAACxhB,SAAS,CAAE0zG,IAAI,CAAClB,YAAY,CAAEhsH,CAAC,CAAE,CAAE,CAAE;QAE5E;QAEA,IAAI,CAAC2oE,IAAI,EAAE;QAEX,OAAO,IAAI;MAEZ;IAAC;MAAA1uE,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAG;UACZuD,QAAQ,EAAE;YACTpD,OAAO,EAAE,GAAG;YACZxmB,IAAI,EAAE,UAAU;YAChBR,SAAS,EAAE;UACZ,CAAC;UACDuwH,KAAK,EAAE,EAAE;UACTC,YAAY,EAAE;QACf,CAAC;QAED3pG,IAAI,CAAC7Q,IAAI,GAAG,IAAI,CAACA,IAAI;QAErB,IAAMu6G,KAAK,GAAG,IAAI,CAACA,KAAK;QACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;QAEtC,KAAM,IAAIhsH,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGo7G,KAAK,CAAChsH,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEhD,IAAMgtH,IAAI,GAAGjB,KAAK,CAAE/rH,CAAC,CAAE;UACvBqiB,IAAI,CAAC0pG,KAAK,CAACvsH,IAAI,CAAEwtH,IAAI,CAACx7G,IAAI,CAAE;UAE5B,IAAM27G,WAAW,GAAGnB,YAAY,CAAEhsH,CAAC,CAAE;UACrCqiB,IAAI,CAAC2pG,YAAY,CAACxsH,IAAI,CAAE2tH,WAAW,CAACzzG,OAAO,EAAE,CAAE;QAEhD;QAEA,OAAO2I,IAAI;MAEZ;IAAC;IAAA,OAAAwqG,QAAA;EAAA;EAAA,IAIIO,wBAAwB,0BAAAC,kBAAA;IAAA9pG,SAAA,CAAA6pG,wBAAA,EAAAC,kBAAA;IAAA,IAAAC,QAAA,GAAA7pG,YAAA,CAAA2pG,wBAAA;IAE7B,SAAAA,yBAAa18G,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU,EAAEguB,gBAAgB,GAAG,CAAC,EAAG;MAAA,IAAAkpD,OAAA;MAAAhrH,eAAA,OAAA6qH,wBAAA;MAEhEG,OAAA,GAAAD,QAAA,CAAArxH,IAAA,OAAOyU,KAAK,EAAE0lC,QAAQ,EAAEC,UAAU;MAElCk3E,OAAA,CAAKtoD,0BAA0B,GAAG,IAAI;MAEtCsoD,OAAA,CAAKlpD,gBAAgB,GAAGA,gBAAgB;MAAC,OAAAkpD,OAAA;IAE1C;IAACxqH,YAAA,CAAAqqH,wBAAA;MAAAnzH,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAi4E,wBAAA,CAAAxzH,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC6/C,gBAAgB,GAAG7/C,MAAM,CAAC6/C,gBAAgB;QAE/C,OAAO,IAAI;MAEZ;IAAC;MAAApqE,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAi4E,wBAAA,CAAAxzH,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACgiD,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;QAE7ChiD,IAAI,CAAC4iD,0BAA0B,GAAG,IAAI;QAEtC,OAAO5iD,IAAI;MAEZ;IAAC;IAAA,OAAA+qG,wBAAA;EAAA,EAhCqCj3E,eAAe;EAoCtD,IAAMq3E,oBAAoB,GAAG,aAAc,IAAIxyF,OAAO,EAAE;EACxD,IAAMyyF,oBAAoB,GAAG,aAAc,IAAIzyF,OAAO,EAAE;EAExD,IAAM0yF,mBAAmB,GAAG,EAAE;EAE9B,IAAMC,KAAK,GAAG,aAAc,IAAI96F,IAAI,EAAE;EACtC,IAAM+6F,SAAS,GAAG,aAAc,IAAI5yF,OAAO,EAAE;EAC7C,IAAM6yF,KAAK,GAAG,aAAc,IAAIruE,IAAI,EAAE;EACtC,IAAMsuE,SAAS,GAAG,aAAc,IAAI32F,MAAM,EAAE;EAAC,IAEvC42F,aAAa,0BAAAC,MAAA;IAAAzqG,SAAA,CAAAwqG,aAAA,EAAAC,MAAA;IAAA,IAAAC,QAAA,GAAAxqG,YAAA,CAAAsqG,aAAA;IAElB,SAAAA,cAAar5F,QAAQ,EAAEmT,QAAQ,EAAEtd,KAAK,EAAG;MAAA,IAAA2jG,OAAA;MAAA3rH,eAAA,OAAAwrH,aAAA;MAExCG,OAAA,GAAAD,QAAA,CAAAhyH,IAAA,OAAOy4B,QAAQ,EAAEmT,QAAQ;MAEzBqmF,OAAA,CAAKxnF,eAAe,GAAG,IAAI;MAE3BwnF,OAAA,CAAKvnF,cAAc,GAAG,IAAIymF,wBAAwB,CAAE,IAAI33G,YAAY,CAAE8U,KAAK,GAAG,EAAE,CAAE,EAAE,EAAE,CAAE;MACxF2jG,OAAA,CAAKtnF,aAAa,GAAG,IAAI;MAEzBsnF,OAAA,CAAK3jG,KAAK,GAAGA,KAAK;MAElB2jG,OAAA,CAAK55F,WAAW,GAAG,IAAI;MACvB45F,OAAA,CAAK5zE,cAAc,GAAG,IAAI;MAE1B,KAAM,IAAIt6C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuqB,KAAK,EAAEvqB,CAAC,EAAG,EAAG;QAElCkuH,OAAA,CAAKC,WAAW,CAAEnuH,CAAC,EAAE4tH,SAAS,CAAE;MAEjC;MAAC,OAAAM,OAAA;IAEF;IAACnrH,YAAA,CAAAgrH,aAAA;MAAA9zH,GAAA;MAAAE,KAAA,EAED,SAAAo6B,mBAAA,EAAqB;QAEpB,IAAMG,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAMnK,KAAK,GAAG,IAAI,CAACA,KAAK;QAExB,IAAK,IAAI,CAAC+J,WAAW,KAAK,IAAI,EAAG;UAEhC,IAAI,CAACA,WAAW,GAAG,IAAIzB,IAAI,EAAE;QAE9B;QAEA,IAAK6B,QAAQ,CAACJ,WAAW,KAAK,IAAI,EAAG;UAEpCI,QAAQ,CAACH,kBAAkB,EAAE;QAE9B;QAEA,IAAI,CAACD,WAAW,CAACrB,SAAS,EAAE;QAE5B,KAAM,IAAIjzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuqB,KAAK,EAAEvqB,CAAC,EAAG,EAAG;UAElC,IAAI,CAACouH,WAAW,CAAEpuH,CAAC,EAAEwtH,oBAAoB,CAAE;UAE3CG,KAAK,CAAC/2G,IAAI,CAAE8d,QAAQ,CAACJ,WAAW,CAAE,CAAC/N,YAAY,CAAEinG,oBAAoB,CAAE;UAEvE,IAAI,CAACl5F,WAAW,CAACG,KAAK,CAAEk5F,KAAK,CAAE;QAEhC;MAED;IAAC;MAAA1zH,GAAA;MAAAE,KAAA,EAED,SAAAihD,sBAAA,EAAwB;QAEvB,IAAM1mB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAMnK,KAAK,GAAG,IAAI,CAACA,KAAK;QAExB,IAAK,IAAI,CAAC+vB,cAAc,KAAK,IAAI,EAAG;UAEnC,IAAI,CAACA,cAAc,GAAG,IAAInjB,MAAM,EAAE;QAEnC;QAEA,IAAKzC,QAAQ,CAAC4lB,cAAc,KAAK,IAAI,EAAG;UAEvC5lB,QAAQ,CAAC0mB,qBAAqB,EAAE;QAEjC;QAEA,IAAI,CAACd,cAAc,CAACrnB,SAAS,EAAE;QAE/B,KAAM,IAAIjzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuqB,KAAK,EAAEvqB,CAAC,EAAG,EAAG;UAElC,IAAI,CAACouH,WAAW,CAAEpuH,CAAC,EAAEwtH,oBAAoB,CAAE;UAE3CM,SAAS,CAACl3G,IAAI,CAAE8d,QAAQ,CAAC4lB,cAAc,CAAE,CAAC/zB,YAAY,CAAEinG,oBAAoB,CAAE;UAE9E,IAAI,CAAClzE,cAAc,CAAC7lB,KAAK,CAAEq5F,SAAS,CAAE;QAEvC;MAED;IAAC;MAAA7zH,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAA44E,aAAA,CAAAn0H,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAACvB,cAAc,CAAC/vB,IAAI,CAAE4N,MAAM,CAACmiB,cAAc,CAAE;QAEjD,IAAKniB,MAAM,CAACoiB,aAAa,KAAK,IAAI,EAAG,IAAI,CAACA,aAAa,GAAGpiB,MAAM,CAACoiB,aAAa,CAACjwB,KAAK,EAAE;QAEtF,IAAI,CAAC4T,KAAK,GAAG/F,MAAM,CAAC+F,KAAK;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAAtwB,GAAA;MAAAE,KAAA,EAED,SAAAk0H,WAAY/9G,KAAK,EAAEuP,KAAK,EAAG;QAE1BA,KAAK,CAACrG,SAAS,CAAE,IAAI,CAACotB,aAAa,CAACl2B,KAAK,EAAEJ,KAAK,GAAG,CAAC,CAAE;MAEvD;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAi0H,YAAa99G,KAAK,EAAEuO,MAAM,EAAG;QAE5BA,MAAM,CAACrF,SAAS,CAAE,IAAI,CAACmtB,cAAc,CAACj2B,KAAK,EAAEJ,KAAK,GAAG,EAAE,CAAE;MAE1D;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAA0rC,QAASwa,SAAS,EAAEC,UAAU,EAAG;QAEhC,IAAMxvB,WAAW,GAAG,IAAI,CAACA,WAAW;QACpC,IAAMw9F,YAAY,GAAG,IAAI,CAAC/jG,KAAK;QAE/BsjG,KAAK,CAACn5F,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9Bm5F,KAAK,CAAChmF,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,IAAKgmF,KAAK,CAAChmF,QAAQ,KAAKppC,SAAS,EAAG;;QAEpC;;QAEA,IAAK,IAAI,CAAC67C,cAAc,KAAK,IAAI,EAAG,IAAI,CAACc,qBAAqB,EAAE;QAEhE0yE,SAAS,CAACl3G,IAAI,CAAE,IAAI,CAAC0jC,cAAc,CAAE;QACrCwzE,SAAS,CAACvnG,YAAY,CAAEuK,WAAW,CAAE;QAErC,IAAKuvB,SAAS,CAAChoB,GAAG,CAACnD,gBAAgB,CAAE44F,SAAS,CAAE,KAAK,KAAK,EAAG;;QAE7D;;QAEA,KAAM,IAAIS,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGD,YAAY,EAAEC,UAAU,EAAG,EAAG;UAEpE;;UAEA,IAAI,CAACH,WAAW,CAAEG,UAAU,EAAEf,oBAAoB,CAAE;UAEpDC,oBAAoB,CAAClyG,gBAAgB,CAAEuV,WAAW,EAAE08F,oBAAoB,CAAE;;UAE1E;;UAEAK,KAAK,CAAC/8F,WAAW,GAAG28F,oBAAoB;UAExCI,KAAK,CAAChoF,OAAO,CAAEwa,SAAS,EAAEqtE,mBAAmB,CAAE;;UAE/C;;UAEA,KAAM,IAAI1tH,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG+8G,mBAAmB,CAAC3tH,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAE9D,IAAMu2B,SAAS,GAAGm3F,mBAAmB,CAAE1tH,CAAC,CAAE;YAC1Cu2B,SAAS,CAACg4F,UAAU,GAAGA,UAAU;YACjCh4F,SAAS,CAACv1B,MAAM,GAAG,IAAI;YACvBs/C,UAAU,CAAC9gD,IAAI,CAAE+2B,SAAS,CAAE;UAE7B;UAEAm3F,mBAAmB,CAAC3tH,MAAM,GAAG,CAAC;QAE/B;MAED;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAAq0H,WAAYl+G,KAAK,EAAEuP,KAAK,EAAG;QAE1B,IAAK,IAAI,CAAC+mB,aAAa,KAAK,IAAI,EAAG;UAElC,IAAI,CAACA,aAAa,GAAG,IAAIwmF,wBAAwB,CAAE,IAAI33G,YAAY,CAAE,IAAI,CAACkxB,cAAc,CAACpc,KAAK,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE;QAE1G;QAEA1K,KAAK,CAACnG,OAAO,CAAE,IAAI,CAACktB,aAAa,CAACl2B,KAAK,EAAEJ,KAAK,GAAG,CAAC,CAAE;MAErD;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAg0H,YAAa79G,KAAK,EAAEuO,MAAM,EAAG;QAE5BA,MAAM,CAACnF,OAAO,CAAE,IAAI,CAACitB,cAAc,CAACj2B,KAAK,EAAEJ,KAAK,GAAG,EAAE,CAAE;MAExD;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAylD,mBAAA,EAAqB,CAErB;IAAC;MAAA3lD,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAACrV,aAAa,CAAE;UAAExU,IAAI,EAAE;QAAU,CAAC,CAAE;MAE1C;IAAC;IAAA,OAAA+xH,aAAA;EAAA,EA9L0BvuE,IAAI;EAAA,IAkM1B+oC,iBAAiB,0BAAAkmC,UAAA;IAAAlrG,SAAA,CAAAglE,iBAAA,EAAAkmC,UAAA;IAAA,IAAAC,QAAA,GAAAjrG,YAAA,CAAA8kE,iBAAA;IAEtB,SAAAA,kBAAahhD,UAAU,EAAG;MAAA,IAAAonF,OAAA;MAAApsH,eAAA,OAAAgmF,iBAAA;MAEzBomC,OAAA,GAAAD,QAAA,CAAAzyH,IAAA;MAEA0yH,OAAA,CAAKtU,mBAAmB,GAAG,IAAI;MAE/BsU,OAAA,CAAK3yH,IAAI,GAAG,mBAAmB;MAE/B2yH,OAAA,CAAK9uG,KAAK,GAAG,IAAI8yB,KAAK,CAAE,QAAQ,CAAE;MAElCg8E,OAAA,CAAKl/E,GAAG,GAAG,IAAI;MAEfk/E,OAAA,CAAKh9E,SAAS,GAAG,CAAC;MAClBg9E,OAAA,CAAKC,OAAO,GAAG,OAAO;MACtBD,OAAA,CAAKE,QAAQ,GAAG,OAAO;MAEvBF,OAAA,CAAKv8E,GAAG,GAAG,IAAI;MAEfu8E,OAAA,CAAK5gF,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAonF,OAAA;IAE9B;IAAC5rH,YAAA,CAAAwlF,iBAAA;MAAAtuF,GAAA;MAAAE,KAAA,EAGD,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAozC,iBAAA,CAAA3uF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC3E,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAE/B,IAAI,CAAC4vB,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QAErB,IAAI,CAACkC,SAAS,GAAGntB,MAAM,CAACmtB,SAAS;QACjC,IAAI,CAACi9E,OAAO,GAAGpqG,MAAM,CAACoqG,OAAO;QAC7B,IAAI,CAACC,QAAQ,GAAGrqG,MAAM,CAACqqG,QAAQ;QAE/B,IAAI,CAACz8E,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QAErB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAm2C,iBAAA;EAAA,EAzC8Bt9C,QAAQ;EA6CxC,IAAM6jF,QAAQ,GAAG,aAAc,IAAIv/F,OAAO,EAAE;EAC5C,IAAMw/F,MAAM,GAAG,aAAc,IAAIx/F,OAAO,EAAE;EAC1C,IAAMy/F,gBAAgB,GAAG,aAAc,IAAIh0F,OAAO,EAAE;EACpD,IAAMi0F,MAAM,GAAG,aAAc,IAAI/2F,GAAG,EAAE;EACtC,IAAMg3F,SAAS,GAAG,aAAc,IAAI/3F,MAAM,EAAE;EAAC,IAEvCg4F,IAAI,0BAAAC,UAAA;IAAA7rG,SAAA,CAAA4rG,IAAA,EAAAC,UAAA;IAAA,IAAAC,QAAA,GAAA5rG,YAAA,CAAA0rG,IAAA;IAET,SAAAA,KAAaz6F,QAAQ,GAAG,IAAIolB,cAAc,EAAE,EAAEjS,QAAQ,GAAG,IAAI0gD,iBAAiB,EAAE,EAAG;MAAA,IAAA+mC,OAAA;MAAA/sH,eAAA,OAAA4sH,IAAA;MAElFG,OAAA,GAAAD,QAAA,CAAApzH,IAAA;MAEAqzH,OAAA,CAAKjoF,MAAM,GAAG,IAAI;MAElBioF,OAAA,CAAKtzH,IAAI,GAAG,MAAM;MAElBszH,OAAA,CAAK56F,QAAQ,GAAGA,QAAQ;MACxB46F,OAAA,CAAKznF,QAAQ,GAAGA,QAAQ;MAExBynF,OAAA,CAAK1vE,kBAAkB,EAAE;MAAC,OAAA0vE,OAAA;IAE3B;IAACvsH,YAAA,CAAAosH,IAAA;MAAAl1H,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAAg6E,IAAA,CAAAv1H,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAACL,QAAQ,GAAGrjB,MAAM,CAACqjB,QAAQ;QAC/B,IAAI,CAACnT,QAAQ,GAAGlQ,MAAM,CAACkQ,QAAQ;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAz6B,GAAA;MAAAE,KAAA,EAED,SAAAo1H,qBAAA,EAAuB;QAEtB,IAAM76F,QAAQ,GAAG,IAAI,CAACA,QAAQ;;QAE9B;;QAEA,IAAKA,QAAQ,CAACpkB,KAAK,KAAK,IAAI,EAAG;UAE9B,IAAM2sC,iBAAiB,GAAGvoB,QAAQ,CAACC,UAAU,CAACC,QAAQ;UACtD,IAAM46F,aAAa,GAAG,CAAE,CAAC,CAAE;UAE3B,KAAM,IAAIxvH,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGssC,iBAAiB,CAAC1yB,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAE3D8uH,QAAQ,CAACn1G,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,CAAC,GAAG,CAAC,CAAE;YACxD+uH,MAAM,CAACp1G,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,CAAC,CAAE;YAElDwvH,aAAa,CAAExvH,CAAC,CAAE,GAAGwvH,aAAa,CAAExvH,CAAC,GAAG,CAAC,CAAE;YAC3CwvH,aAAa,CAAExvH,CAAC,CAAE,IAAI8uH,QAAQ,CAACj2G,UAAU,CAAEk2G,MAAM,CAAE;UAEpD;UAEAr6F,QAAQ,CAACkmB,YAAY,CAAE,cAAc,EAAE,IAAI3B,sBAAsB,CAAEu2E,aAAa,EAAE,CAAC,CAAE,CAAE;QAExF,CAAC,MAAM;UAEN9rH,OAAO,CAACC,IAAI,CAAE,+FAA+F,CAAE;QAEhH;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA1J,GAAA;MAAAE,KAAA,EAED,SAAA0rC,QAASwa,SAAS,EAAEC,UAAU,EAAG;QAEhC,IAAM5rB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAM5D,WAAW,GAAG,IAAI,CAACA,WAAW;QACpC,IAAMogF,SAAS,GAAG7wD,SAAS,CAAC+sB,MAAM,CAAC+hD,IAAI,CAACje,SAAS;QACjD,IAAM32D,SAAS,GAAG7lB,QAAQ,CAAC6lB,SAAS;;QAEpC;;QAEA,IAAK7lB,QAAQ,CAAC4lB,cAAc,KAAK,IAAI,EAAG5lB,QAAQ,CAAC0mB,qBAAqB,EAAE;QAExE8zE,SAAS,CAACt4G,IAAI,CAAE8d,QAAQ,CAAC4lB,cAAc,CAAE;QACzC40E,SAAS,CAAC3oG,YAAY,CAAEuK,WAAW,CAAE;QACrCo+F,SAAS,CAACl9F,MAAM,IAAIk/E,SAAS;QAE7B,IAAK7wD,SAAS,CAAChoB,GAAG,CAACnD,gBAAgB,CAAEg6F,SAAS,CAAE,KAAK,KAAK,EAAG;;QAE7D;;QAEAF,gBAAgB,CAACp4G,IAAI,CAAEka,WAAW,CAAE,CAAC5T,MAAM,EAAE;QAC7C+xG,MAAM,CAACr4G,IAAI,CAAEypC,SAAS,CAAChoB,GAAG,CAAE,CAAC9R,YAAY,CAAEyoG,gBAAgB,CAAE;QAE7D,IAAMS,cAAc,GAAGve,SAAS,IAAK,CAAE,IAAI,CAAC5yF,KAAK,CAACrM,CAAC,GAAG,IAAI,CAACqM,KAAK,CAAC/L,CAAC,GAAG,IAAI,CAAC+L,KAAK,CAAC4H,CAAC,IAAK,CAAC,CAAE;QACzF,IAAMwpG,gBAAgB,GAAGD,cAAc,GAAGA,cAAc;QAExD,IAAME,MAAM,GAAG,IAAIpgG,OAAO,EAAE;QAC5B,IAAMqgG,IAAI,GAAG,IAAIrgG,OAAO,EAAE;QAC1B,IAAMsgG,YAAY,GAAG,IAAItgG,OAAO,EAAE;QAClC,IAAMugG,QAAQ,GAAG,IAAIvgG,OAAO,EAAE;QAC9B,IAAMjD,IAAI,GAAG,IAAI,CAACw2F,cAAc,GAAG,CAAC,GAAG,CAAC;QAExC,IAAMxyG,KAAK,GAAGokB,QAAQ,CAACpkB,KAAK;QAC5B,IAAMqkB,UAAU,GAAGD,QAAQ,CAACC,UAAU;QACtC,IAAMsoB,iBAAiB,GAAGtoB,UAAU,CAACC,QAAQ;QAE7C,IAAKtkB,KAAK,KAAK,IAAI,EAAG;UAErB,IAAMkqC,KAAK,GAAGzpC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE2oC,SAAS,CAACC,KAAK,CAAE;UAC5C,IAAMiG,GAAG,GAAG1vC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACia,KAAK,EAAIgwB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAChwB,KAAK,CAAI;UAE1E,KAAM,IAAIvqB,CAAC,GAAGw6C,KAAK,EAAE7pC,CAAC,GAAG8vC,GAAG,GAAG,CAAC,EAAEzgD,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,IAAIssB,IAAI,EAAG;YAEpD,IAAM7X,CAAC,GAAGnE,KAAK,CAACuJ,IAAI,CAAE7Z,CAAC,CAAE;YACzB,IAAM0U,CAAC,GAAGpE,KAAK,CAACuJ,IAAI,CAAE7Z,CAAC,GAAG,CAAC,CAAE;YAE7B2vH,MAAM,CAACh2G,mBAAmB,CAAEsjC,iBAAiB,EAAExoC,CAAC,CAAE;YAClDm7G,IAAI,CAACj2G,mBAAmB,CAAEsjC,iBAAiB,EAAEvoC,CAAC,CAAE;YAEhD,IAAMq7G,MAAM,GAAGd,MAAM,CAACr2F,mBAAmB,CAAE+2F,MAAM,EAAEC,IAAI,EAAEE,QAAQ,EAAED,YAAY,CAAE;YAEjF,IAAKE,MAAM,GAAGL,gBAAgB,EAAG;YAEjCI,QAAQ,CAACvpG,YAAY,CAAE,IAAI,CAACuK,WAAW,CAAE,CAAC,CAAC;;YAE3C,IAAMuT,QAAQ,GAAGgc,SAAS,CAAChoB,GAAG,CAACF,MAAM,CAACtf,UAAU,CAAEi3G,QAAQ,CAAE;YAE5D,IAAKzrF,QAAQ,GAAGgc,SAAS,CAACxgB,IAAI,IAAIwE,QAAQ,GAAGgc,SAAS,CAACvgB,GAAG,EAAG;YAE7DwgB,UAAU,CAAC9gD,IAAI,CAAE;cAEhB6kC,QAAQ,EAAEA,QAAQ;cAClB;cACA;cACApQ,KAAK,EAAE47F,YAAY,CAACl5G,KAAK,EAAE,CAAC4P,YAAY,CAAE,IAAI,CAACuK,WAAW,CAAE;cAC5DxgB,KAAK,EAAEtQ,CAAC;cACR4gD,IAAI,EAAE,IAAI;cACVD,SAAS,EAAE,IAAI;cACf3/C,MAAM,EAAE;YAET,CAAC,CAAE;UAEJ;QAED,CAAC,MAAM;UAEN,IAAMw5C,OAAK,GAAGzpC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE2oC,SAAS,CAACC,KAAK,CAAE;UAC5C,IAAMiG,KAAG,GAAG1vC,IAAI,CAACY,GAAG,CAAEsrC,iBAAiB,CAAC1yB,KAAK,EAAIgwB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAChwB,KAAK,CAAI;UAEtF,KAAM,IAAIvqB,IAAC,GAAGw6C,OAAK,EAAE7pC,GAAC,GAAG8vC,KAAG,GAAG,CAAC,EAAEzgD,IAAC,GAAG2Q,GAAC,EAAE3Q,IAAC,IAAIssB,IAAI,EAAG;YAEpDqjG,MAAM,CAACh2G,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,IAAC,CAAE;YAClD4vH,IAAI,CAACj2G,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,IAAC,GAAG,CAAC,CAAE;YAEpD,IAAM+vH,OAAM,GAAGd,MAAM,CAACr2F,mBAAmB,CAAE+2F,MAAM,EAAEC,IAAI,EAAEE,QAAQ,EAAED,YAAY,CAAE;YAEjF,IAAKE,OAAM,GAAGL,gBAAgB,EAAG;YAEjCI,QAAQ,CAACvpG,YAAY,CAAE,IAAI,CAACuK,WAAW,CAAE,CAAC,CAAC;;YAE3C,IAAMuT,SAAQ,GAAGgc,SAAS,CAAChoB,GAAG,CAACF,MAAM,CAACtf,UAAU,CAAEi3G,QAAQ,CAAE;YAE5D,IAAKzrF,SAAQ,GAAGgc,SAAS,CAACxgB,IAAI,IAAIwE,SAAQ,GAAGgc,SAAS,CAACvgB,GAAG,EAAG;YAE7DwgB,UAAU,CAAC9gD,IAAI,CAAE;cAEhB6kC,QAAQ,EAAEA,SAAQ;cAClB;cACA;cACApQ,KAAK,EAAE47F,YAAY,CAACl5G,KAAK,EAAE,CAAC4P,YAAY,CAAE,IAAI,CAACuK,WAAW,CAAE;cAC5DxgB,KAAK,EAAEtQ,IAAC;cACR4gD,IAAI,EAAE,IAAI;cACVD,SAAS,EAAE,IAAI;cACf3/C,MAAM,EAAE;YAET,CAAC,CAAE;UAEJ;QAED;MAED;IAAC;MAAA/G,GAAA;MAAAE,KAAA,EAED,SAAAylD,mBAAA,EAAqB;QAEpB,IAAMlrB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,IAAMylB,eAAe,GAAGzlB,QAAQ,CAACylB,eAAe;QAChD,IAAMr5C,IAAI,GAAGnH,MAAM,CAACmH,IAAI,CAAEq5C,eAAe,CAAE;QAE3C,IAAKr5C,IAAI,CAACf,MAAM,GAAG,CAAC,EAAG;UAEtB,IAAMw7C,cAAc,GAAGpB,eAAe,CAAEr5C,IAAI,CAAE,CAAC,CAAE,CAAE;UAEnD,IAAKy6C,cAAc,KAAK98C,SAAS,EAAG;YAEnC,IAAI,CAACohD,qBAAqB,GAAG,EAAE;YAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;YAE/B,KAAM,IAAI/tC,CAAC,GAAG,CAAC,EAAEguC,EAAE,GAAGxE,cAAc,CAACx7C,MAAM,EAAEgS,CAAC,GAAGguC,EAAE,EAAEhuC,CAAC,EAAG,EAAG;cAE3D,IAAMzR,IAAI,GAAGi7C,cAAc,CAAExpC,CAAC,CAAE,CAACzR,IAAI,IAAI6C,MAAM,CAAE4O,CAAC,CAAE;cAEpD,IAAI,CAAC8tC,qBAAqB,CAACrgD,IAAI,CAAE,CAAC,CAAE;cACpC,IAAI,CAACsgD,qBAAqB,CAAEx/C,IAAI,CAAE,GAAGyR,CAAC;YAEvC;UAED;QAED;MAED;IAAC;IAAA,OAAAo9G,IAAA;EAAA,EA1MiBhtF,QAAQ;EA8M3B,IAAM6tF,MAAM,GAAG,aAAc,IAAIzgG,OAAO,EAAE;EAC1C,IAAM0gG,IAAI,GAAG,aAAc,IAAI1gG,OAAO,EAAE;EAAC,IAEnC2gG,YAAY,0BAAAC,KAAA;IAAA5sG,SAAA,CAAA2sG,YAAA,EAAAC,KAAA;IAAA,IAAAC,QAAA,GAAA3sG,YAAA,CAAAysG,YAAA;IAEjB,SAAAA,aAAax7F,QAAQ,EAAEmT,QAAQ,EAAG;MAAA,IAAAwoF,OAAA;MAAA9tH,eAAA,OAAA2tH,YAAA;MAEjCG,OAAA,GAAAD,QAAA,CAAAn0H,IAAA,OAAOy4B,QAAQ,EAAEmT,QAAQ;MAEzBwoF,OAAA,CAAKvN,cAAc,GAAG,IAAI;MAE1BuN,OAAA,CAAKr0H,IAAI,GAAG,cAAc;MAAC,OAAAq0H,OAAA;IAE5B;IAACttH,YAAA,CAAAmtH,YAAA;MAAAj2H,GAAA;MAAAE,KAAA,EAED,SAAAo1H,qBAAA,EAAuB;QAEtB,IAAM76F,QAAQ,GAAG,IAAI,CAACA,QAAQ;;QAE9B;;QAEA,IAAKA,QAAQ,CAACpkB,KAAK,KAAK,IAAI,EAAG;UAE9B,IAAM2sC,iBAAiB,GAAGvoB,QAAQ,CAACC,UAAU,CAACC,QAAQ;UACtD,IAAM46F,aAAa,GAAG,EAAE;UAExB,KAAM,IAAIxvH,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGssC,iBAAiB,CAAC1yB,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,IAAI,CAAC,EAAG;YAE7DgwH,MAAM,CAACr2G,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,CAAC,CAAE;YAClDiwH,IAAI,CAACt2G,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,CAAC,GAAG,CAAC,CAAE;YAEpDwvH,aAAa,CAAExvH,CAAC,CAAE,GAAKA,CAAC,KAAK,CAAC,GAAK,CAAC,GAAGwvH,aAAa,CAAExvH,CAAC,GAAG,CAAC,CAAE;YAC7DwvH,aAAa,CAAExvH,CAAC,GAAG,CAAC,CAAE,GAAGwvH,aAAa,CAAExvH,CAAC,CAAE,GAAGgwH,MAAM,CAACn3G,UAAU,CAAEo3G,IAAI,CAAE;UAExE;UAEAv7F,QAAQ,CAACkmB,YAAY,CAAE,cAAc,EAAE,IAAI3B,sBAAsB,CAAEu2E,aAAa,EAAE,CAAC,CAAE,CAAE;QAExF,CAAC,MAAM;UAEN9rH,OAAO,CAACC,IAAI,CAAE,uGAAuG,CAAE;QAExH;QAEA,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAusH,YAAA;EAAA,EA3CyBf,IAAI;EAAA,IA+CzBmB,QAAQ,0BAAAC,MAAA;IAAAhtG,SAAA,CAAA+sG,QAAA,EAAAC,MAAA;IAAA,IAAAC,QAAA,GAAA/sG,YAAA,CAAA6sG,QAAA;IAEb,SAAAA,SAAa57F,QAAQ,EAAEmT,QAAQ,EAAG;MAAA,IAAA4oF,OAAA;MAAAluH,eAAA,OAAA+tH,QAAA;MAEjCG,OAAA,GAAAD,QAAA,CAAAv0H,IAAA,OAAOy4B,QAAQ,EAAEmT,QAAQ;MAEzB4oF,OAAA,CAAK1N,UAAU,GAAG,IAAI;MAEtB0N,OAAA,CAAKz0H,IAAI,GAAG,UAAU;MAAC,OAAAy0H,OAAA;IAExB;IAAC,OAAA1tH,YAAA,CAAAutH,QAAA;EAAA,EAVqBnB,IAAI;EAAA,IAcrB1mC,cAAc,0BAAAioC,UAAA;IAAAntG,SAAA,CAAAklE,cAAA,EAAAioC,UAAA;IAAA,IAAAC,QAAA,GAAAltG,YAAA,CAAAglE,cAAA;IAEnB,SAAAA,eAAalhD,UAAU,EAAG;MAAA,IAAAqpF,OAAA;MAAAruH,eAAA,OAAAkmF,cAAA;MAEzBmoC,OAAA,GAAAD,QAAA,CAAA10H,IAAA;MAEA20H,OAAA,CAAKnW,gBAAgB,GAAG,IAAI;MAE5BmW,OAAA,CAAK50H,IAAI,GAAG,gBAAgB;MAE5B40H,OAAA,CAAK/wG,KAAK,GAAG,IAAI8yB,KAAK,CAAE,QAAQ,CAAE;MAElCi+E,OAAA,CAAKnhF,GAAG,GAAG,IAAI;MAEfmhF,OAAA,CAAKjhF,QAAQ,GAAG,IAAI;MAEpBihF,OAAA,CAAKp9F,IAAI,GAAG,CAAC;MACbo9F,OAAA,CAAKl/E,eAAe,GAAG,IAAI;MAE3Bk/E,OAAA,CAAKx+E,GAAG,GAAG,IAAI;MAEfw+E,OAAA,CAAK7iF,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAqpF,OAAA;IAE9B;IAAC7tH,YAAA,CAAA0lF,cAAA;MAAAxuF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAszC,cAAA,CAAA7uF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC3E,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAE/B,IAAI,CAAC4vB,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QAErB,IAAI,CAACE,QAAQ,GAAGnrB,MAAM,CAACmrB,QAAQ;QAE/B,IAAI,CAACnc,IAAI,GAAGhP,MAAM,CAACgP,IAAI;QACvB,IAAI,CAACke,eAAe,GAAGltB,MAAM,CAACktB,eAAe;QAE7C,IAAI,CAACU,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QAErB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAq2C,cAAA;EAAA,EA1C2Bx9C,QAAQ;EA8CrC,IAAM4lF,cAAc,GAAG,aAAc,IAAI71F,OAAO,EAAE;EAClD,IAAM81F,IAAI,GAAG,aAAc,IAAI54F,GAAG,EAAE;EACpC,IAAM64F,OAAO,GAAG,aAAc,IAAI55F,MAAM,EAAE;EAC1C,IAAM65F,WAAW,GAAG,aAAc,IAAIzhG,OAAO,EAAE;EAAC,IAE1C0hG,MAAM,0BAAAC,WAAA;IAAA3tG,SAAA,CAAA0tG,MAAA,EAAAC,WAAA;IAAA,IAAAC,QAAA,GAAA1tG,YAAA,CAAAwtG,MAAA;IAEX,SAAAA,OAAav8F,QAAQ,GAAG,IAAIolB,cAAc,EAAE,EAAEjS,QAAQ,GAAG,IAAI4gD,cAAc,EAAE,EAAG;MAAA,IAAA2oC,OAAA;MAAA7uH,eAAA,OAAA0uH,MAAA;MAE/EG,OAAA,GAAAD,QAAA,CAAAl1H,IAAA;MAEAm1H,OAAA,CAAK9pF,QAAQ,GAAG,IAAI;MAEpB8pF,OAAA,CAAKp1H,IAAI,GAAG,QAAQ;MAEpBo1H,OAAA,CAAK18F,QAAQ,GAAGA,QAAQ;MACxB08F,OAAA,CAAKvpF,QAAQ,GAAGA,QAAQ;MAExBupF,OAAA,CAAKxxE,kBAAkB,EAAE;MAAC,OAAAwxE,OAAA;IAE3B;IAACruH,YAAA,CAAAkuH,MAAA;MAAAh3H,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAA87E,MAAA,CAAAr3H,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAACL,QAAQ,GAAGrjB,MAAM,CAACqjB,QAAQ;QAC/B,IAAI,CAACnT,QAAQ,GAAGlQ,MAAM,CAACkQ,QAAQ;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAz6B,GAAA;MAAAE,KAAA,EAED,SAAA0rC,QAASwa,SAAS,EAAEC,UAAU,EAAG;QAEhC,IAAM5rB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAM5D,WAAW,GAAG,IAAI,CAACA,WAAW;QACpC,IAAMogF,SAAS,GAAG7wD,SAAS,CAAC+sB,MAAM,CAAC6jD,MAAM,CAAC/f,SAAS;QACnD,IAAM32D,SAAS,GAAG7lB,QAAQ,CAAC6lB,SAAS;;QAEpC;;QAEA,IAAK7lB,QAAQ,CAAC4lB,cAAc,KAAK,IAAI,EAAG5lB,QAAQ,CAAC0mB,qBAAqB,EAAE;QAExE21E,OAAO,CAACn6G,IAAI,CAAE8d,QAAQ,CAAC4lB,cAAc,CAAE;QACvCy2E,OAAO,CAACxqG,YAAY,CAAEuK,WAAW,CAAE;QACnCigG,OAAO,CAAC/+F,MAAM,IAAIk/E,SAAS;QAE3B,IAAK7wD,SAAS,CAAChoB,GAAG,CAACnD,gBAAgB,CAAE67F,OAAO,CAAE,KAAK,KAAK,EAAG;;QAE3D;;QAEAF,cAAc,CAACj6G,IAAI,CAAEka,WAAW,CAAE,CAAC5T,MAAM,EAAE;QAC3C4zG,IAAI,CAACl6G,IAAI,CAAEypC,SAAS,CAAChoB,GAAG,CAAE,CAAC9R,YAAY,CAAEsqG,cAAc,CAAE;QAEzD,IAAMpB,cAAc,GAAGve,SAAS,IAAK,CAAE,IAAI,CAAC5yF,KAAK,CAACrM,CAAC,GAAG,IAAI,CAACqM,KAAK,CAAC/L,CAAC,GAAG,IAAI,CAAC+L,KAAK,CAAC4H,CAAC,IAAK,CAAC,CAAE;QACzF,IAAMwpG,gBAAgB,GAAGD,cAAc,GAAGA,cAAc;QAExD,IAAMn/G,KAAK,GAAGokB,QAAQ,CAACpkB,KAAK;QAC5B,IAAMqkB,UAAU,GAAGD,QAAQ,CAACC,UAAU;QACtC,IAAMsoB,iBAAiB,GAAGtoB,UAAU,CAACC,QAAQ;QAE7C,IAAKtkB,KAAK,KAAK,IAAI,EAAG;UAErB,IAAMkqC,KAAK,GAAGzpC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE2oC,SAAS,CAACC,KAAK,CAAE;UAC5C,IAAMiG,GAAG,GAAG1vC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACia,KAAK,EAAIgwB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAChwB,KAAK,CAAI;UAE1E,KAAM,IAAIvqB,CAAC,GAAGw6C,KAAK,EAAE9vB,EAAE,GAAG+1B,GAAG,EAAEzgD,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;YAE7C,IAAMyU,CAAC,GAAGnE,KAAK,CAACuJ,IAAI,CAAE7Z,CAAC,CAAE;YAEzBgxH,WAAW,CAACr3G,mBAAmB,CAAEsjC,iBAAiB,EAAExoC,CAAC,CAAE;YAEvD48G,SAAS,CAAEL,WAAW,EAAEv8G,CAAC,EAAEi7G,gBAAgB,EAAE5+F,WAAW,EAAEuvB,SAAS,EAAEC,UAAU,EAAE,IAAI,CAAE;UAExF;QAED,CAAC,MAAM;UAEN,IAAM9F,OAAK,GAAGzpC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE2oC,SAAS,CAACC,KAAK,CAAE;UAC5C,IAAMiG,KAAG,GAAG1vC,IAAI,CAACY,GAAG,CAAEsrC,iBAAiB,CAAC1yB,KAAK,EAAIgwB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAChwB,KAAK,CAAI;UAEtF,KAAM,IAAIvqB,IAAC,GAAGw6C,OAAK,EAAE7pC,CAAC,GAAG8vC,KAAG,EAAEzgD,IAAC,GAAG2Q,CAAC,EAAE3Q,IAAC,EAAG,EAAG;YAE3CgxH,WAAW,CAACr3G,mBAAmB,CAAEsjC,iBAAiB,EAAEj9C,IAAC,CAAE;YAEvDqxH,SAAS,CAAEL,WAAW,EAAEhxH,IAAC,EAAE0vH,gBAAgB,EAAE5+F,WAAW,EAAEuvB,SAAS,EAAEC,UAAU,EAAE,IAAI,CAAE;UAExF;QAED;MAED;IAAC;MAAArmD,GAAA;MAAAE,KAAA,EAED,SAAAylD,mBAAA,EAAqB;QAEpB,IAAMlrB,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,IAAMylB,eAAe,GAAGzlB,QAAQ,CAACylB,eAAe;QAChD,IAAMr5C,IAAI,GAAGnH,MAAM,CAACmH,IAAI,CAAEq5C,eAAe,CAAE;QAE3C,IAAKr5C,IAAI,CAACf,MAAM,GAAG,CAAC,EAAG;UAEtB,IAAMw7C,cAAc,GAAGpB,eAAe,CAAEr5C,IAAI,CAAE,CAAC,CAAE,CAAE;UAEnD,IAAKy6C,cAAc,KAAK98C,SAAS,EAAG;YAEnC,IAAI,CAACohD,qBAAqB,GAAG,EAAE;YAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;YAE/B,KAAM,IAAI/tC,CAAC,GAAG,CAAC,EAAEguC,EAAE,GAAGxE,cAAc,CAACx7C,MAAM,EAAEgS,CAAC,GAAGguC,EAAE,EAAEhuC,CAAC,EAAG,EAAG;cAE3D,IAAMzR,IAAI,GAAGi7C,cAAc,CAAExpC,CAAC,CAAE,CAACzR,IAAI,IAAI6C,MAAM,CAAE4O,CAAC,CAAE;cAEpD,IAAI,CAAC8tC,qBAAqB,CAACrgD,IAAI,CAAE,CAAC,CAAE;cACpC,IAAI,CAACsgD,qBAAqB,CAAEx/C,IAAI,CAAE,GAAGyR,CAAC;YAEvC;UAED;QAED;MAED;IAAC;IAAA,OAAAk/G,MAAA;EAAA,EAtHmB9uF,QAAQ;EA0H7B,SAASkvF,SAASA,CAAEp9F,KAAK,EAAE3jB,KAAK,EAAEo/G,gBAAgB,EAAE5+F,WAAW,EAAEuvB,SAAS,EAAEC,UAAU,EAAEt/C,MAAM,EAAG;IAEhG,IAAMswH,kBAAkB,GAAGR,IAAI,CAACn4F,iBAAiB,CAAE1E,KAAK,CAAE;IAE1D,IAAKq9F,kBAAkB,GAAG5B,gBAAgB,EAAG;MAE5C,IAAM6B,cAAc,GAAG,IAAIhiG,OAAO,EAAE;MAEpCuhG,IAAI,CAACr4F,mBAAmB,CAAExE,KAAK,EAAEs9F,cAAc,CAAE;MACjDA,cAAc,CAAChrG,YAAY,CAAEuK,WAAW,CAAE;MAE1C,IAAMuT,QAAQ,GAAGgc,SAAS,CAAChoB,GAAG,CAACF,MAAM,CAACtf,UAAU,CAAE04G,cAAc,CAAE;MAElE,IAAKltF,QAAQ,GAAGgc,SAAS,CAACxgB,IAAI,IAAIwE,QAAQ,GAAGgc,SAAS,CAACvgB,GAAG,EAAG;MAE7DwgB,UAAU,CAAC9gD,IAAI,CAAE;QAEhB6kC,QAAQ,EAAEA,QAAQ;QAClBmtF,aAAa,EAAEzgH,IAAI,CAACsH,IAAI,CAAEi5G,kBAAkB,CAAE;QAC9Cr9F,KAAK,EAAEs9F,cAAc;QACrBjhH,KAAK,EAAEA,KAAK;QACZswC,IAAI,EAAE,IAAI;QACV5/C,MAAM,EAAEA;MAET,CAAC,CAAE;IAEJ;EAED;EAAC,IAEKywH,YAAY,0BAAAC,SAAA;IAAAnuG,SAAA,CAAAkuG,YAAA,EAAAC,SAAA;IAAA,IAAAC,QAAA,GAAAluG,YAAA,CAAAguG,YAAA;IAEjB,SAAAA,aAAaG,KAAK,EAAEjuG,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEjoB,IAAI,EAAEkoB,UAAU,EAAG;MAAA,IAAA2tG,OAAA;MAAAtvH,eAAA,OAAAkvH,YAAA;MAE3FI,OAAA,GAAAF,QAAA,CAAA11H,IAAA,OAAO21H,KAAK,EAAEjuG,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEjoB,IAAI,EAAEkoB,UAAU;MAEnF2tG,OAAA,CAAKxmC,cAAc,GAAG,IAAI;MAE1BwmC,OAAA,CAAK7tG,SAAS,GAAGA,SAAS,KAAKvlB,SAAS,GAAGulB,SAAS,GAAGhb,YAAY;MACnE6oH,OAAA,CAAK9tG,SAAS,GAAGA,SAAS,KAAKtlB,SAAS,GAAGslB,SAAS,GAAG/a,YAAY;MAEnE6oH,OAAA,CAAK/sG,eAAe,GAAG,KAAK;MAE5B,IAAMu8B,KAAK,GAAA98B,sBAAA,CAAAstG,OAAA,CAAO;MAElB,SAASC,WAAWA,CAAA,EAAG;QAEtBzwE,KAAK,CAAC37B,WAAW,GAAG,IAAI;QACxBksG,KAAK,CAACG,yBAAyB,CAAED,WAAW,CAAE;MAE/C;MAEA,IAAK,2BAA2B,IAAIF,KAAK,EAAG;QAE3CA,KAAK,CAACG,yBAAyB,CAAED,WAAW,CAAE;MAE/C;MAAC,OAAAD,OAAA;IAEF;IAAC9uH,YAAA,CAAA0uH,YAAA;MAAAx3H,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,CAAE,IAAI,CAAC+gB,KAAK,CAAE,CAACxK,IAAI,CAAE,IAAI,CAAE;MAEvD;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAA,EAAS;QAER,IAAMsmG,KAAK,GAAG,IAAI,CAACxwG,KAAK;QACxB,IAAM4wG,qBAAqB,IAAG,2BAA2B,IAAIJ,KAAK;QAElE,IAAKI,qBAAqB,KAAK,KAAK,IAAIJ,KAAK,CAACK,UAAU,IAAIL,KAAK,CAACM,iBAAiB,EAAG;UAErF,IAAI,CAACxsG,WAAW,GAAG,IAAI;QAExB;MAED;IAAC;IAAA,OAAA+rG,YAAA;EAAA,EA/CyBpuG,OAAO;EAAA,IAmD5B8uG,kBAAkB,0BAAAC,SAAA;IAAA7uG,SAAA,CAAA4uG,kBAAA,EAAAC,SAAA;IAAA,IAAAC,QAAA,GAAA5uG,YAAA,CAAA0uG,kBAAA;IAEvB,SAAAA,mBAAa1wG,KAAK,EAAEC,MAAM,EAAEuC,MAAM,EAAG;MAAA,IAAAquG,OAAA;MAAA/vH,eAAA,OAAA4vH,kBAAA;MAEpCG,OAAA,GAAAD,QAAA,CAAAp2H,IAAA,OAAO;QAAEwlB,KAAK,EAALA,KAAK;QAAEC,MAAM,EAANA;MAAO,CAAC;MAExB4wG,OAAA,CAAK9vB,oBAAoB,GAAG,IAAI;MAEhC8vB,OAAA,CAAKruG,MAAM,GAAGA,MAAM;MAEpBquG,OAAA,CAAKvuG,SAAS,GAAGpb,aAAa;MAC9B2pH,OAAA,CAAKtuG,SAAS,GAAGrb,aAAa;MAE9B2pH,OAAA,CAAKxtG,eAAe,GAAG,KAAK;MAE5BwtG,OAAA,CAAK5sG,WAAW,GAAG,IAAI;MAAC,OAAA4sG,OAAA;IAEzB;IAAC,OAAAvvH,YAAA,CAAAovH,kBAAA;EAAA,EAjB+B9uG,OAAO;EAAA,IAqBlCkvG,iBAAiB,0BAAAC,SAAA;IAAAjvG,SAAA,CAAAgvG,iBAAA,EAAAC,SAAA;IAAA,IAAAC,QAAA,GAAAhvG,YAAA,CAAA8uG,iBAAA;IAEtB,SAAAA,kBAAa9tG,OAAO,EAAEhD,KAAK,EAAEC,MAAM,EAAEuC,MAAM,EAAEjoB,IAAI,EAAE2nB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEE,UAAU,EAAEE,QAAQ,EAAG;MAAA,IAAAsuG,OAAA;MAAAnwH,eAAA,OAAAgwH,iBAAA;MAEtHG,OAAA,GAAAD,QAAA,CAAAx2H,IAAA,OAAO,IAAI,EAAE0nB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEjoB,IAAI,EAAEkoB,UAAU,EAAEE,QAAQ;MAE5FsuG,OAAA,CAAKjwB,mBAAmB,GAAG,IAAI;MAE/BiwB,OAAA,CAAKtxG,KAAK,GAAG;QAAEK,KAAK,EAAEA,KAAK;QAAEC,MAAM,EAAEA;MAAO,CAAC;MAC7CgxG,OAAA,CAAKjuG,OAAO,GAAGA,OAAO;;MAEtB;MACA;;MAEAiuG,OAAA,CAAK1tG,KAAK,GAAG,KAAK;;MAElB;MACA;;MAEA0tG,OAAA,CAAK5tG,eAAe,GAAG,KAAK;MAAC,OAAA4tG,OAAA;IAE9B;IAAC,OAAA3vH,YAAA,CAAAwvH,iBAAA;EAAA,EArB8BlvG,OAAO;EAAA,IAyBjCsvG,sBAAsB,0BAAAC,kBAAA;IAAArvG,SAAA,CAAAovG,sBAAA,EAAAC,kBAAA;IAAA,IAAAC,QAAA,GAAApvG,YAAA,CAAAkvG,sBAAA;IAE3B,SAAAA,uBAAaluG,OAAO,EAAEhD,KAAK,EAAEC,MAAM,EAAE0G,KAAK,EAAEnE,MAAM,EAAEjoB,IAAI,EAAG;MAAA,IAAA82H,OAAA;MAAAvwH,eAAA,OAAAowH,sBAAA;MAE1DG,OAAA,GAAAD,QAAA,CAAA52H,IAAA,OAAOwoB,OAAO,EAAEhD,KAAK,EAAEC,MAAM,EAAEuC,MAAM,EAAEjoB,IAAI;MAE3C82H,OAAA,CAAKjtB,wBAAwB,GAAG,IAAI;MACpCitB,OAAA,CAAK1xG,KAAK,CAACgH,KAAK,GAAGA,KAAK;MACxB0qG,OAAA,CAAK1pG,KAAK,GAAG3gB,mBAAmB;MAAC,OAAAqqH,OAAA;IAElC;IAAC,OAAA/vH,YAAA,CAAA4vH,sBAAA;EAAA,EAVmCJ,iBAAiB;EAAA,IAchDQ,aAAa,0BAAAC,SAAA;IAAAzvG,SAAA,CAAAwvG,aAAA,EAAAC,SAAA;IAAA,IAAAC,QAAA,GAAAxvG,YAAA,CAAAsvG,aAAA;IAElB,SAAAA,cAAavxG,MAAM,EAAEmC,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEjoB,IAAI,EAAEkoB,UAAU,EAAG;MAAA,IAAAgvG,OAAA;MAAA3wH,eAAA,OAAAwwH,aAAA;MAE5FG,OAAA,GAAAD,QAAA,CAAAh3H,IAAA,OAAOulB,MAAM,EAAEmC,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEjoB,IAAI,EAAEkoB,UAAU;MAEpFgvG,OAAA,CAAKC,eAAe,GAAG,IAAI;MAE3BD,OAAA,CAAKxtG,WAAW,GAAG,IAAI;MAAC,OAAAwtG,OAAA;IAEzB;IAAC,OAAAnwH,YAAA,CAAAgwH,aAAA;EAAA,EAV0B1vG,OAAO;EAcnC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EA5BC,IA8BM+vG,KAAK;IAEV,SAAAA,MAAA,EAAc;MAAA7wH,eAAA,OAAA6wH,KAAA;MAEb,IAAI,CAACp3H,IAAI,GAAG,OAAO;MAEnB,IAAI,CAACq3H,kBAAkB,GAAG,GAAG;IAE9B;;IAEA;IACA;IAAAtwH,YAAA,CAAAqwH,KAAA;MAAAn5H,GAAA;MAAAE,KAAA,EAEA,SAAAm5H,SAAA,CAAU;MAAA,EAA0B;QAEnC5vH,OAAO,CAACC,IAAI,CAAE,2CAA2C,CAAE;QAC3D,OAAO,IAAI;MAEZ;;MAEA;MACA;IAAA;MAAA1J,GAAA;MAAAE,KAAA,EAEA,SAAAo5H,WAAY5gG,CAAC,EAAE6gG,cAAc,EAAG;QAE/B,IAAM/gH,CAAC,GAAG,IAAI,CAACghH,cAAc,CAAE9gG,CAAC,CAAE;QAClC,OAAO,IAAI,CAAC2gG,QAAQ,CAAE7gH,CAAC,EAAE+gH,cAAc,CAAE;MAE1C;;MAEA;IAAA;MAAAv5H,GAAA;MAAAE,KAAA,EAEA,SAAAu5H,UAAWC,SAAS,GAAG,CAAC,EAAG;QAE1B,IAAMrgG,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAIxW,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI62G,SAAS,EAAE72G,CAAC,EAAG,EAAG;UAEvCwW,MAAM,CAAC9zB,IAAI,CAAE,IAAI,CAAC8zH,QAAQ,CAAEx2G,CAAC,GAAG62G,SAAS,CAAE,CAAE;QAE9C;QAEA,OAAOrgG,MAAM;MAEd;;MAEA;IAAA;MAAAr5B,GAAA;MAAAE,KAAA,EAEA,SAAAy5H,gBAAiBD,SAAS,GAAG,CAAC,EAAG;QAEhC,IAAMrgG,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAIxW,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI62G,SAAS,EAAE72G,CAAC,EAAG,EAAG;UAEvCwW,MAAM,CAAC9zB,IAAI,CAAE,IAAI,CAAC+zH,UAAU,CAAEz2G,CAAC,GAAG62G,SAAS,CAAE,CAAE;QAEhD;QAEA,OAAOrgG,MAAM;MAEd;;MAEA;IAAA;MAAAr5B,GAAA;MAAAE,KAAA,EAEA,SAAA05H,UAAA,EAAY;QAEX,IAAMC,OAAO,GAAG,IAAI,CAACC,UAAU,EAAE;QACjC,OAAOD,OAAO,CAAEA,OAAO,CAAC/zH,MAAM,GAAG,CAAC,CAAE;MAErC;;MAEA;IAAA;MAAA9F,GAAA;MAAAE,KAAA,EAEA,SAAA45H,WAAYJ,SAAS,GAAG,IAAI,CAACN,kBAAkB,EAAG;QAEjD,IAAK,IAAI,CAACW,eAAe,IACtB,IAAI,CAACA,eAAe,CAACj0H,MAAM,KAAK4zH,SAAS,GAAG,CAAG,IACjD,CAAE,IAAI,CAACjuG,WAAW,EAAG;UAErB,OAAO,IAAI,CAACsuG,eAAe;QAE5B;QAEA,IAAI,CAACtuG,WAAW,GAAG,KAAK;QAExB,IAAMuiB,KAAK,GAAG,EAAE;QAChB,IAAIgsF,OAAO;UAAEC,IAAI,GAAG,IAAI,CAACZ,QAAQ,CAAE,CAAC,CAAE;QACtC,IAAIhkD,GAAG,GAAG,CAAC;QAEXrnC,KAAK,CAACzoC,IAAI,CAAE,CAAC,CAAE;QAEf,KAAM,IAAIwgC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI2zF,SAAS,EAAE3zF,CAAC,EAAG,EAAG;UAEvCi0F,OAAO,GAAG,IAAI,CAACX,QAAQ,CAAEtzF,CAAC,GAAG2zF,SAAS,CAAE;UACxCrkD,GAAG,IAAI2kD,OAAO,CAACp7G,UAAU,CAAEq7G,IAAI,CAAE;UACjCjsF,KAAK,CAACzoC,IAAI,CAAE8vE,GAAG,CAAE;UACjB4kD,IAAI,GAAGD,OAAO;QAEf;QAEA,IAAI,CAACD,eAAe,GAAG/rF,KAAK;QAE5B,OAAOA,KAAK,CAAC,CAAC;MAEf;IAAC;MAAAhuC,GAAA;MAAAE,KAAA,EAED,SAAAg6H,iBAAA,EAAmB;QAElB,IAAI,CAACzuG,WAAW,GAAG,IAAI;QACvB,IAAI,CAACquG,UAAU,EAAE;MAElB;;MAEA;IAAA;MAAA95H,GAAA;MAAAE,KAAA,EAEA,SAAAs5H,eAAgB9gG,CAAC,EAAE0R,QAAQ,EAAG;QAE7B,IAAM+vF,UAAU,GAAG,IAAI,CAACL,UAAU,EAAE;QAEpC,IAAI/zH,CAAC,GAAG,CAAC;QACT,IAAM0qB,EAAE,GAAG0pG,UAAU,CAACr0H,MAAM;QAE5B,IAAIs0H,eAAe,CAAC,CAAC;;QAErB,IAAKhwF,QAAQ,EAAG;UAEfgwF,eAAe,GAAGhwF,QAAQ;QAE3B,CAAC,MAAM;UAENgwF,eAAe,GAAG1hG,CAAC,GAAGyhG,UAAU,CAAE1pG,EAAE,GAAG,CAAC,CAAE;QAE3C;;QAEA;;QAEA,IAAIvX,GAAG,GAAG,CAAC;UAAEC,IAAI,GAAGsX,EAAE,GAAG,CAAC;UAAE4pG,UAAU;QAEtC,OAAQnhH,GAAG,IAAIC,IAAI,EAAG;UAErBpT,CAAC,GAAG+Q,IAAI,CAACsC,KAAK,CAAEF,GAAG,GAAG,CAAEC,IAAI,GAAGD,GAAG,IAAK,CAAC,CAAE,CAAC,CAAC;;UAE5CmhH,UAAU,GAAGF,UAAU,CAAEp0H,CAAC,CAAE,GAAGq0H,eAAe;UAE9C,IAAKC,UAAU,GAAG,CAAC,EAAG;YAErBnhH,GAAG,GAAGnT,CAAC,GAAG,CAAC;UAEZ,CAAC,MAAM,IAAKs0H,UAAU,GAAG,CAAC,EAAG;YAE5BlhH,IAAI,GAAGpT,CAAC,GAAG,CAAC;UAEb,CAAC,MAAM;YAENoT,IAAI,GAAGpT,CAAC;YACR;;YAEA;UAED;QAED;;QAEAA,CAAC,GAAGoT,IAAI;QAER,IAAKghH,UAAU,CAAEp0H,CAAC,CAAE,KAAKq0H,eAAe,EAAG;UAE1C,OAAOr0H,CAAC,IAAK0qB,EAAE,GAAG,CAAC,CAAE;QAEtB;;QAEA;;QAEA,IAAM6pG,YAAY,GAAGH,UAAU,CAAEp0H,CAAC,CAAE;QACpC,IAAMw0H,WAAW,GAAGJ,UAAU,CAAEp0H,CAAC,GAAG,CAAC,CAAE;QAEvC,IAAMy0H,aAAa,GAAGD,WAAW,GAAGD,YAAY;;QAEhD;;QAEA,IAAMG,eAAe,GAAG,CAAEL,eAAe,GAAGE,YAAY,IAAKE,aAAa;;QAE1E;;QAEA,IAAMhiH,CAAC,GAAG,CAAEzS,CAAC,GAAG00H,eAAe,KAAOhqG,EAAE,GAAG,CAAC,CAAE;QAE9C,OAAOjY,CAAC;MAET;;MAEA;MACA;MACA;MACA;IAAA;MAAAxY,GAAA;MAAAE,KAAA,EAEA,SAAAw6H,WAAYliH,CAAC,EAAE+gH,cAAc,EAAG;QAE/B,IAAM97F,KAAK,GAAG,MAAM;QACpB,IAAIiC,EAAE,GAAGlnB,CAAC,GAAGilB,KAAK;QAClB,IAAIk9F,EAAE,GAAGniH,CAAC,GAAGilB,KAAK;;QAElB;;QAEA,IAAKiC,EAAE,GAAG,CAAC,EAAGA,EAAE,GAAG,CAAC;QACpB,IAAKi7F,EAAE,GAAG,CAAC,EAAGA,EAAE,GAAG,CAAC;QAEpB,IAAMC,GAAG,GAAG,IAAI,CAACvB,QAAQ,CAAE35F,EAAE,CAAE;QAC/B,IAAMm7F,GAAG,GAAG,IAAI,CAACxB,QAAQ,CAAEsB,EAAE,CAAE;QAE/B,IAAMz5E,OAAO,GAAGq4E,cAAc,KAAQqB,GAAG,CAAC1+G,SAAS,GAAK,IAAIF,OAAO,EAAE,GAAG,IAAIsZ,OAAO,EAAE,CAAE;QAEvF4rB,OAAO,CAACvkC,IAAI,CAAEk+G,GAAG,CAAE,CAAC59G,GAAG,CAAE29G,GAAG,CAAE,CAAC/+G,SAAS,EAAE;QAE1C,OAAOqlC,OAAO;MAEf;IAAC;MAAAlhD,GAAA;MAAAE,KAAA,EAED,SAAA46H,aAAcpiG,CAAC,EAAE6gG,cAAc,EAAG;QAEjC,IAAM/gH,CAAC,GAAG,IAAI,CAACghH,cAAc,CAAE9gG,CAAC,CAAE;QAClC,OAAO,IAAI,CAACgiG,UAAU,CAAEliH,CAAC,EAAE+gH,cAAc,CAAE;MAE5C;IAAC;MAAAv5H,GAAA;MAAAE,KAAA,EAED,SAAA66H,oBAAqBC,QAAQ,EAAEC,MAAM,EAAG;QAEvC;;QAEA,IAAMtjG,MAAM,GAAG,IAAIrC,OAAO,EAAE;QAE5B,IAAMwsB,QAAQ,GAAG,EAAE;QACnB,IAAMH,OAAO,GAAG,EAAE;QAClB,IAAMu5E,SAAS,GAAG,EAAE;QAEpB,IAAMC,GAAG,GAAG,IAAI7lG,OAAO,EAAE;QACzB,IAAM8lG,GAAG,GAAG,IAAIr6F,OAAO,EAAE;;QAEzB;;QAEA,KAAM,IAAIh7B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIi1H,QAAQ,EAAEj1H,CAAC,EAAG,EAAG;UAEtC,IAAM2yB,CAAC,GAAG3yB,CAAC,GAAGi1H,QAAQ;UAEtBl5E,QAAQ,CAAE/7C,CAAC,CAAE,GAAG,IAAI,CAAC+0H,YAAY,CAAEpiG,CAAC,EAAE,IAAIpD,OAAO,EAAE,CAAE;QAEtD;;QAEA;QACA;;QAEAqsB,OAAO,CAAE,CAAC,CAAE,GAAG,IAAIrsB,OAAO,EAAE;QAC5B4lG,SAAS,CAAE,CAAC,CAAE,GAAG,IAAI5lG,OAAO,EAAE;QAC9B,IAAI5d,GAAG,GAAGlO,MAAM,CAAC6xH,SAAS;QAC1B,IAAMv3G,EAAE,GAAGhN,IAAI,CAACgC,GAAG,CAAEgpC,QAAQ,CAAE,CAAC,CAAE,CAAC9pC,CAAC,CAAE;QACtC,IAAM+L,EAAE,GAAGjN,IAAI,CAACgC,GAAG,CAAEgpC,QAAQ,CAAE,CAAC,CAAE,CAACxpC,CAAC,CAAE;QACtC,IAAMgjH,EAAE,GAAGxkH,IAAI,CAACgC,GAAG,CAAEgpC,QAAQ,CAAE,CAAC,CAAE,CAAC71B,CAAC,CAAE;QAEtC,IAAKnI,EAAE,IAAIpM,GAAG,EAAG;UAEhBA,GAAG,GAAGoM,EAAE;UACR6T,MAAM,CAACrc,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEtB;QAEA,IAAKyI,EAAE,IAAIrM,GAAG,EAAG;UAEhBA,GAAG,GAAGqM,EAAE;UACR4T,MAAM,CAACrc,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEtB;QAEA,IAAKggH,EAAE,IAAI5jH,GAAG,EAAG;UAEhBigB,MAAM,CAACrc,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEtB;QAEA6/G,GAAG,CAACpkG,YAAY,CAAE+qB,QAAQ,CAAE,CAAC,CAAE,EAAEnqB,MAAM,CAAE,CAAC9b,SAAS,EAAE;QAErD8lC,OAAO,CAAE,CAAC,CAAE,CAAC5qB,YAAY,CAAE+qB,QAAQ,CAAE,CAAC,CAAE,EAAEq5E,GAAG,CAAE;QAC/CD,SAAS,CAAE,CAAC,CAAE,CAACnkG,YAAY,CAAE+qB,QAAQ,CAAE,CAAC,CAAE,EAAEH,OAAO,CAAE,CAAC,CAAE,CAAE;;QAG1D;;QAEA,KAAM,IAAI57C,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIi1H,QAAQ,EAAEj1H,IAAC,EAAG,EAAG;UAEtC47C,OAAO,CAAE57C,IAAC,CAAE,GAAG47C,OAAO,CAAE57C,IAAC,GAAG,CAAC,CAAE,CAAC2W,KAAK,EAAE;UAEvCw+G,SAAS,CAAEn1H,IAAC,CAAE,GAAGm1H,SAAS,CAAEn1H,IAAC,GAAG,CAAC,CAAE,CAAC2W,KAAK,EAAE;UAE3Cy+G,GAAG,CAACpkG,YAAY,CAAE+qB,QAAQ,CAAE/7C,IAAC,GAAG,CAAC,CAAE,EAAE+7C,QAAQ,CAAE/7C,IAAC,CAAE,CAAE;UAEpD,IAAKo1H,GAAG,CAACr1H,MAAM,EAAE,GAAG0D,MAAM,CAAC2oB,OAAO,EAAG;YAEpCgpG,GAAG,CAACt/G,SAAS,EAAE;YAEf,IAAM6C,KAAK,GAAG5H,IAAI,CAAC6H,IAAI,CAAElH,KAAK,CAAEqqC,QAAQ,CAAE/7C,IAAC,GAAG,CAAC,CAAE,CAACkY,GAAG,CAAE6jC,QAAQ,CAAE/7C,IAAC,CAAE,CAAE,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAC,CAAC;;YAEpF47C,OAAO,CAAE57C,IAAC,CAAE,CAACumB,YAAY,CAAE8uG,GAAG,CAAC72F,gBAAgB,CAAE42F,GAAG,EAAEz8G,KAAK,CAAE,CAAE;UAEhE;UAEAw8G,SAAS,CAAEn1H,IAAC,CAAE,CAACgxB,YAAY,CAAE+qB,QAAQ,CAAE/7C,IAAC,CAAE,EAAE47C,OAAO,CAAE57C,IAAC,CAAE,CAAE;QAE3D;;QAEA;;QAEA,IAAKk1H,MAAM,KAAK,IAAI,EAAG;UAEtB,IAAIv8G,MAAK,GAAG5H,IAAI,CAAC6H,IAAI,CAAElH,KAAK,CAAEkqC,OAAO,CAAE,CAAC,CAAE,CAAC1jC,GAAG,CAAE0jC,OAAO,CAAEq5E,QAAQ,CAAE,CAAE,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;UACjFt8G,MAAK,IAAIs8G,QAAQ;UAEjB,IAAKl5E,QAAQ,CAAE,CAAC,CAAE,CAAC7jC,GAAG,CAAEk9G,GAAG,CAACpkG,YAAY,CAAE4qB,OAAO,CAAE,CAAC,CAAE,EAAEA,OAAO,CAAEq5E,QAAQ,CAAE,CAAE,CAAE,GAAG,CAAC,EAAG;YAErFt8G,MAAK,GAAG,CAAEA,MAAK;UAEhB;UAEA,KAAM,IAAI3Y,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIi1H,QAAQ,EAAEj1H,IAAC,EAAG,EAAG;YAEtC;YACA47C,OAAO,CAAE57C,IAAC,CAAE,CAACumB,YAAY,CAAE8uG,GAAG,CAAC72F,gBAAgB,CAAEud,QAAQ,CAAE/7C,IAAC,CAAE,EAAE2Y,MAAK,GAAG3Y,IAAC,CAAE,CAAE;YAC7Em1H,SAAS,CAAEn1H,IAAC,CAAE,CAACgxB,YAAY,CAAE+qB,QAAQ,CAAE/7C,IAAC,CAAE,EAAE47C,OAAO,CAAE57C,IAAC,CAAE,CAAE;UAE3D;QAED;QAEA,OAAO;UACN+7C,QAAQ,EAAEA,QAAQ;UAClBH,OAAO,EAAEA,OAAO;UAChBu5E,SAAS,EAAEA;QACZ,CAAC;MAEF;IAAC;MAAAl7H,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd,IAAI,CAAC6uG,kBAAkB,GAAG7uG,MAAM,CAAC6uG,kBAAkB;QAEnD,OAAO,IAAI;MAEZ;IAAC;MAAAp5H,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAG;UACZuD,QAAQ,EAAE;YACTpD,OAAO,EAAE,GAAG;YACZxmB,IAAI,EAAE,OAAO;YACbR,SAAS,EAAE;UACZ;QACD,CAAC;QAED6mB,IAAI,CAACgxG,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;QACjDhxG,IAAI,CAACrmB,IAAI,GAAG,IAAI,CAACA,IAAI;QAErB,OAAOqmB,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhB,IAAI,CAACmG,kBAAkB,GAAGnG,IAAI,CAACmG,kBAAkB;QAEjD,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAD,KAAA;EAAA;EAAA,IAIIoC,YAAY,0BAAAC,MAAA;IAAAlyG,SAAA,CAAAiyG,YAAA,EAAAC,MAAA;IAAA,IAAAC,QAAA,GAAAjyG,YAAA,CAAA+xG,YAAA;IAEjB,SAAAA,aAAaG,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,EAAEC,WAAW,GAAG,CAAC,EAAEC,SAAS,GAAGjlH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAEilH,UAAU,GAAG,KAAK,EAAEC,SAAS,GAAG,CAAC,EAAG;MAAA,IAAAC,OAAA;MAAA5zH,eAAA,OAAAizH,YAAA;MAEpIW,OAAA,GAAAT,QAAA,CAAAz5H,IAAA;MAEAk6H,OAAA,CAAKC,cAAc,GAAG,IAAI;MAE1BD,OAAA,CAAKn6H,IAAI,GAAG,cAAc;MAE1Bm6H,OAAA,CAAKR,EAAE,GAAGA,EAAE;MACZQ,OAAA,CAAKP,EAAE,GAAGA,EAAE;MAEZO,OAAA,CAAKN,OAAO,GAAGA,OAAO;MACtBM,OAAA,CAAKL,OAAO,GAAGA,OAAO;MAEtBK,OAAA,CAAKJ,WAAW,GAAGA,WAAW;MAC9BI,OAAA,CAAKH,SAAS,GAAGA,SAAS;MAE1BG,OAAA,CAAKF,UAAU,GAAGA,UAAU;MAE5BE,OAAA,CAAKD,SAAS,GAAGA,SAAS;MAAC,OAAAC,OAAA;IAE5B;IAACpzH,YAAA,CAAAyyH,YAAA;MAAAv7H,GAAA;MAAAE,KAAA,EAED,SAAAm5H,SAAU7gH,CAAC,EAAE+gH,cAAc,EAAG;QAE7B,IAAMv/F,KAAK,GAAGu/F,cAAc,IAAI,IAAIv9G,OAAO,EAAE;QAE7C,IAAMogH,KAAK,GAAGtlH,IAAI,CAACC,EAAE,GAAG,CAAC;QACzB,IAAIslH,UAAU,GAAG,IAAI,CAACN,SAAS,GAAG,IAAI,CAACD,WAAW;QAClD,IAAMQ,UAAU,GAAGxlH,IAAI,CAACgC,GAAG,CAAEujH,UAAU,CAAE,GAAG7yH,MAAM,CAAC2oB,OAAO;;QAE1D;QACA,OAAQkqG,UAAU,GAAG,CAAC,EAAGA,UAAU,IAAID,KAAK;QAC5C,OAAQC,UAAU,GAAGD,KAAK,EAAGC,UAAU,IAAID,KAAK;QAEhD,IAAKC,UAAU,GAAG7yH,MAAM,CAAC2oB,OAAO,EAAG;UAElC,IAAKmqG,UAAU,EAAG;YAEjBD,UAAU,GAAG,CAAC;UAEf,CAAC,MAAM;YAENA,UAAU,GAAGD,KAAK;UAEnB;QAED;QAEA,IAAK,IAAI,CAACJ,UAAU,KAAK,IAAI,IAAI,CAAEM,UAAU,EAAG;UAE/C,IAAKD,UAAU,KAAKD,KAAK,EAAG;YAE3BC,UAAU,GAAG,CAAED,KAAK;UAErB,CAAC,MAAM;YAENC,UAAU,GAAGA,UAAU,GAAGD,KAAK;UAEhC;QAED;QAEA,IAAM99G,KAAK,GAAG,IAAI,CAACw9G,WAAW,GAAGtjH,CAAC,GAAG6jH,UAAU;QAC/C,IAAIrkH,CAAC,GAAG,IAAI,CAAC0jH,EAAE,GAAG,IAAI,CAACE,OAAO,GAAG9kH,IAAI,CAAC8D,GAAG,CAAE0D,KAAK,CAAE;QAClD,IAAIhG,CAAC,GAAG,IAAI,CAACqjH,EAAE,GAAG,IAAI,CAACE,OAAO,GAAG/kH,IAAI,CAAC+D,GAAG,CAAEyD,KAAK,CAAE;QAElD,IAAK,IAAI,CAAC29G,SAAS,KAAK,CAAC,EAAG;UAE3B,IAAMrhH,GAAG,GAAG9D,IAAI,CAAC8D,GAAG,CAAE,IAAI,CAACqhH,SAAS,CAAE;UACtC,IAAMphH,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAE,IAAI,CAACohH,SAAS,CAAE;UAEtC,IAAMn4G,EAAE,GAAG9L,CAAC,GAAG,IAAI,CAAC0jH,EAAE;UACtB,IAAM33G,EAAE,GAAGzL,CAAC,GAAG,IAAI,CAACqjH,EAAE;;UAEtB;UACA3jH,CAAC,GAAG8L,EAAE,GAAGlJ,GAAG,GAAGmJ,EAAE,GAAGlJ,GAAG,GAAG,IAAI,CAAC6gH,EAAE;UACjCpjH,CAAC,GAAGwL,EAAE,GAAGjJ,GAAG,GAAGkJ,EAAE,GAAGnJ,GAAG,GAAG,IAAI,CAAC+gH,EAAE;QAElC;QAEA,OAAO3hG,KAAK,CAAC1e,GAAG,CAAEtD,CAAC,EAAEM,CAAC,CAAE;MAEzB;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAqgF,YAAA,CAAA57H,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACmxG,EAAE,GAAGnxG,MAAM,CAACmxG,EAAE;QACnB,IAAI,CAACC,EAAE,GAAGpxG,MAAM,CAACoxG,EAAE;QAEnB,IAAI,CAACC,OAAO,GAAGrxG,MAAM,CAACqxG,OAAO;QAC7B,IAAI,CAACC,OAAO,GAAGtxG,MAAM,CAACsxG,OAAO;QAE7B,IAAI,CAACC,WAAW,GAAGvxG,MAAM,CAACuxG,WAAW;QACrC,IAAI,CAACC,SAAS,GAAGxxG,MAAM,CAACwxG,SAAS;QAEjC,IAAI,CAACC,UAAU,GAAGzxG,MAAM,CAACyxG,UAAU;QAEnC,IAAI,CAACC,SAAS,GAAG1xG,MAAM,CAAC0xG,SAAS;QAEjC,OAAO,IAAI;MAEZ;IAAC;MAAAj8H,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAqgF,YAAA,CAAA57H,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACszG,EAAE,GAAG,IAAI,CAACA,EAAE;QACjBtzG,IAAI,CAACuzG,EAAE,GAAG,IAAI,CAACA,EAAE;QAEjBvzG,IAAI,CAACwzG,OAAO,GAAG,IAAI,CAACA,OAAO;QAC3BxzG,IAAI,CAACyzG,OAAO,GAAG,IAAI,CAACA,OAAO;QAE3BzzG,IAAI,CAAC0zG,WAAW,GAAG,IAAI,CAACA,WAAW;QACnC1zG,IAAI,CAAC2zG,SAAS,GAAG,IAAI,CAACA,SAAS;QAE/B3zG,IAAI,CAAC4zG,UAAU,GAAG,IAAI,CAACA,UAAU;QAEjC5zG,IAAI,CAAC6zG,SAAS,GAAG,IAAI,CAACA,SAAS;QAE/B,OAAO7zG,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAAqgF,YAAA,CAAA57H,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAACyI,EAAE,GAAGzI,IAAI,CAACyI,EAAE;QACjB,IAAI,CAACC,EAAE,GAAG1I,IAAI,CAAC0I,EAAE;QAEjB,IAAI,CAACC,OAAO,GAAG3I,IAAI,CAAC2I,OAAO;QAC3B,IAAI,CAACC,OAAO,GAAG5I,IAAI,CAAC4I,OAAO;QAE3B,IAAI,CAACC,WAAW,GAAG7I,IAAI,CAAC6I,WAAW;QACnC,IAAI,CAACC,SAAS,GAAG9I,IAAI,CAAC8I,SAAS;QAE/B,IAAI,CAACC,UAAU,GAAG/I,IAAI,CAAC+I,UAAU;QAEjC,IAAI,CAACC,SAAS,GAAGhJ,IAAI,CAACgJ,SAAS;QAE/B,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAV,YAAA;EAAA,EApJyBpC,KAAK;EAAA,IAwJ1BoD,QAAQ,0BAAAC,aAAA;IAAAlzG,SAAA,CAAAizG,QAAA,EAAAC,aAAA;IAAA,IAAAC,QAAA,GAAAjzG,YAAA,CAAA+yG,QAAA;IAEb,SAAAA,SAAab,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;MAAA,IAAAW,OAAA;MAAAr0H,eAAA,OAAAi0H,QAAA;MAElEI,OAAA,GAAAF,QAAA,CAAAz6H,IAAA,OAAO05H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEA,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU;MAEnEW,OAAA,CAAKC,UAAU,GAAG,IAAI;MAEtBD,OAAA,CAAK56H,IAAI,GAAG,UAAU;MAAC,OAAA46H,OAAA;IAExB;IAAC,OAAA7zH,YAAA,CAAAyzH,QAAA;EAAA,EAVqBhB,YAAY;EAcnC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EAGC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EAGC,SAASsB,SAASA,CAAA,EAAG;IAEpB,IAAIC,EAAE,GAAG,CAAC;MAAEvrG,EAAE,GAAG,CAAC;MAAEzW,EAAE,GAAG,CAAC;MAAE0W,EAAE,GAAG,CAAC;;IAElC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAASk9C,IAAIA,CAAEj6C,EAAE,EAAEI,EAAE,EAAE4K,EAAE,EAAEC,EAAE,EAAG;MAE/Bo9F,EAAE,GAAGroG,EAAE;MACPlD,EAAE,GAAGkO,EAAE;MACP3kB,EAAE,GAAG,CAAE,CAAC,GAAG2Z,EAAE,GAAG,CAAC,GAAGI,EAAE,GAAG,CAAC,GAAG4K,EAAE,GAAGC,EAAE;MACpClO,EAAE,GAAG,CAAC,GAAGiD,EAAE,GAAG,CAAC,GAAGI,EAAE,GAAG4K,EAAE,GAAGC,EAAE;IAE/B;IAEA,OAAO;MAENq9F,cAAc,EAAE,SAAAA,eAAWtoG,EAAE,EAAEI,EAAE,EAAE+P,EAAE,EAAEo4F,EAAE,EAAEC,OAAO,EAAG;QAEpDvuD,IAAI,CAAE75C,EAAE,EAAE+P,EAAE,EAAEq4F,OAAO,IAAKr4F,EAAE,GAAGnQ,EAAE,CAAE,EAAEwoG,OAAO,IAAKD,EAAE,GAAGnoG,EAAE,CAAE,CAAE;MAE7D,CAAC;MAEDqoG,wBAAwB,EAAE,SAAAA,yBAAWzoG,EAAE,EAAEI,EAAE,EAAE+P,EAAE,EAAEo4F,EAAE,EAAEG,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;QAEpE;QACA,IAAI39F,EAAE,GAAG,CAAE7K,EAAE,GAAGJ,EAAE,IAAK0oG,GAAG,GAAG,CAAEv4F,EAAE,GAAGnQ,EAAE,KAAO0oG,GAAG,GAAGC,GAAG,CAAE,GAAG,CAAEx4F,EAAE,GAAG/P,EAAE,IAAKuoG,GAAG;QAC5E,IAAIzC,EAAE,GAAG,CAAE/1F,EAAE,GAAG/P,EAAE,IAAKuoG,GAAG,GAAG,CAAEJ,EAAE,GAAGnoG,EAAE,KAAOuoG,GAAG,GAAGC,GAAG,CAAE,GAAG,CAAEL,EAAE,GAAGp4F,EAAE,IAAKy4F,GAAG;;QAE5E;QACA39F,EAAE,IAAI09F,GAAG;QACTzC,EAAE,IAAIyC,GAAG;QAET1uD,IAAI,CAAE75C,EAAE,EAAE+P,EAAE,EAAElF,EAAE,EAAEi7F,EAAE,CAAE;MAEvB,CAAC;MAED2C,IAAI,EAAE,SAAAA,KAAW9kH,CAAC,EAAG;QAEpB,IAAMmiH,EAAE,GAAGniH,CAAC,GAAGA,CAAC;QAChB,IAAM+kH,EAAE,GAAG5C,EAAE,GAAGniH,CAAC;QACjB,OAAOskH,EAAE,GAAGvrG,EAAE,GAAG/Y,CAAC,GAAGsC,EAAE,GAAG6/G,EAAE,GAAGnpG,EAAE,GAAG+rG,EAAE;MAEvC;IAED,CAAC;EAEF;;EAEA;;EAEA,IAAM/5G,GAAG,GAAG,aAAc,IAAI8R,OAAO,EAAE;EACvC,IAAMkoG,EAAE,GAAG,aAAc,IAAIX,SAAS,EAAE;EACxC,IAAMY,EAAE,GAAG,aAAc,IAAIZ,SAAS,EAAE;EACxC,IAAMa,EAAE,GAAG,aAAc,IAAIb,SAAS,EAAE;EAAC,IAEnCc,gBAAgB,0BAAAC,OAAA;IAAAt0G,SAAA,CAAAq0G,gBAAA,EAAAC,OAAA;IAAA,IAAAC,QAAA,GAAAr0G,YAAA,CAAAm0G,gBAAA;IAErB,SAAAA,iBAAatkG,MAAM,GAAG,EAAE,EAAE4hG,MAAM,GAAG,KAAK,EAAE6C,SAAS,GAAG,aAAa,EAAEb,OAAO,GAAG,GAAG,EAAG;MAAA,IAAAc,OAAA;MAAAz1H,eAAA,OAAAq1H,gBAAA;MAEpFI,OAAA,GAAAF,QAAA,CAAA77H,IAAA;MAEA+7H,OAAA,CAAKC,kBAAkB,GAAG,IAAI;MAE9BD,OAAA,CAAKh8H,IAAI,GAAG,kBAAkB;MAE9Bg8H,OAAA,CAAK1kG,MAAM,GAAGA,MAAM;MACpB0kG,OAAA,CAAK9C,MAAM,GAAGA,MAAM;MACpB8C,OAAA,CAAKD,SAAS,GAAGA,SAAS;MAC1BC,OAAA,CAAKd,OAAO,GAAGA,OAAO;MAAC,OAAAc,OAAA;IAExB;IAACj1H,YAAA,CAAA60H,gBAAA;MAAA39H,GAAA;MAAAE,KAAA,EAED,SAAAm5H,SAAU7gH,CAAC,EAAE+gH,cAAc,GAAG,IAAIjkG,OAAO,EAAE,EAAG;QAE7C,IAAM0E,KAAK,GAAGu/F,cAAc;QAE5B,IAAMlgG,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1B,IAAM3iB,CAAC,GAAG2iB,MAAM,CAACvzB,MAAM;QAEvB,IAAMigC,CAAC,GAAG,CAAErvB,CAAC,IAAK,IAAI,CAACukH,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,IAAKziH,CAAC;QAC7C,IAAIylH,QAAQ,GAAGnnH,IAAI,CAACsC,KAAK,CAAE2sB,CAAC,CAAE;QAC9B,IAAIuvC,MAAM,GAAGvvC,CAAC,GAAGk4F,QAAQ;QAEzB,IAAK,IAAI,CAAChD,MAAM,EAAG;UAElBgD,QAAQ,IAAIA,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAEnnH,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACgC,GAAG,CAAEmlH,QAAQ,CAAE,GAAGvnH,CAAC,CAAE,GAAG,CAAC,IAAKA,CAAC;QAElF,CAAC,MAAM,IAAK4+D,MAAM,KAAK,CAAC,IAAI2oD,QAAQ,KAAKvnH,CAAC,GAAG,CAAC,EAAG;UAEhDunH,QAAQ,GAAGvnH,CAAC,GAAG,CAAC;UAChB4+D,MAAM,GAAG,CAAC;QAEX;QAEA,IAAI14C,EAAE,EAAEkU,EAAE,CAAC,CAAC;;QAEZ,IAAK,IAAI,CAACmqF,MAAM,IAAIgD,QAAQ,GAAG,CAAC,EAAG;UAElCrhG,EAAE,GAAGvD,MAAM,CAAE,CAAE4kG,QAAQ,GAAG,CAAC,IAAKvnH,CAAC,CAAE;QAEpC,CAAC,MAAM;UAEN;UACA8M,GAAG,CAACrG,UAAU,CAAEkc,MAAM,CAAE,CAAC,CAAE,EAAEA,MAAM,CAAE,CAAC,CAAE,CAAE,CAACxc,GAAG,CAAEwc,MAAM,CAAE,CAAC,CAAE,CAAE;UAC7DuD,EAAE,GAAGpZ,GAAG;QAET;QAEA,IAAMqZ,EAAE,GAAGxD,MAAM,CAAE4kG,QAAQ,GAAGvnH,CAAC,CAAE;QACjC,IAAMomB,EAAE,GAAGzD,MAAM,CAAE,CAAE4kG,QAAQ,GAAG,CAAC,IAAKvnH,CAAC,CAAE;QAEzC,IAAK,IAAI,CAACukH,MAAM,IAAIgD,QAAQ,GAAG,CAAC,GAAGvnH,CAAC,EAAG;UAEtCo6B,EAAE,GAAGzX,MAAM,CAAE,CAAE4kG,QAAQ,GAAG,CAAC,IAAKvnH,CAAC,CAAE;QAEpC,CAAC,MAAM;UAEN;UACA8M,GAAG,CAACrG,UAAU,CAAEkc,MAAM,CAAE3iB,CAAC,GAAG,CAAC,CAAE,EAAE2iB,MAAM,CAAE3iB,CAAC,GAAG,CAAC,CAAE,CAAE,CAACmG,GAAG,CAAEwc,MAAM,CAAE3iB,CAAC,GAAG,CAAC,CAAE,CAAE;UACzEo6B,EAAE,GAAGttB,GAAG;QAET;QAEA,IAAK,IAAI,CAACs6G,SAAS,KAAK,aAAa,IAAI,IAAI,CAACA,SAAS,KAAK,SAAS,EAAG;UAEvE;UACA,IAAM7jH,GAAG,GAAG,IAAI,CAAC6jH,SAAS,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI;UACrD,IAAIX,GAAG,GAAGrmH,IAAI,CAACmD,GAAG,CAAE2iB,EAAE,CAAC/d,iBAAiB,CAAEge,EAAE,CAAE,EAAE5iB,GAAG,CAAE;UACrD,IAAImjH,GAAG,GAAGtmH,IAAI,CAACmD,GAAG,CAAE4iB,EAAE,CAAChe,iBAAiB,CAAEie,EAAE,CAAE,EAAE7iB,GAAG,CAAE;UACrD,IAAIojH,GAAG,GAAGvmH,IAAI,CAACmD,GAAG,CAAE6iB,EAAE,CAACje,iBAAiB,CAAEiyB,EAAE,CAAE,EAAE72B,GAAG,CAAE;;UAErD;UACA,IAAKmjH,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAG,GAAG;UAC3B,IAAKD,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAGC,GAAG;UAC3B,IAAKC,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAGD,GAAG;UAE3BI,EAAE,CAACN,wBAAwB,CAAEtgG,EAAE,CAAC5kB,CAAC,EAAE6kB,EAAE,CAAC7kB,CAAC,EAAE8kB,EAAE,CAAC9kB,CAAC,EAAE84B,EAAE,CAAC94B,CAAC,EAAEmlH,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAE;UACpEI,EAAE,CAACP,wBAAwB,CAAEtgG,EAAE,CAACtkB,CAAC,EAAEukB,EAAE,CAACvkB,CAAC,EAAEwkB,EAAE,CAACxkB,CAAC,EAAEw4B,EAAE,CAACx4B,CAAC,EAAE6kH,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAE;UACpEK,EAAE,CAACR,wBAAwB,CAAEtgG,EAAE,CAAC3Q,CAAC,EAAE4Q,EAAE,CAAC5Q,CAAC,EAAE6Q,EAAE,CAAC7Q,CAAC,EAAE6kB,EAAE,CAAC7kB,CAAC,EAAEkxG,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAE;QAErE,CAAC,MAAM,IAAK,IAAI,CAACS,SAAS,KAAK,YAAY,EAAG;UAE7CN,EAAE,CAACT,cAAc,CAAEngG,EAAE,CAAC5kB,CAAC,EAAE6kB,EAAE,CAAC7kB,CAAC,EAAE8kB,EAAE,CAAC9kB,CAAC,EAAE84B,EAAE,CAAC94B,CAAC,EAAE,IAAI,CAACilH,OAAO,CAAE;UACzDQ,EAAE,CAACV,cAAc,CAAEngG,EAAE,CAACtkB,CAAC,EAAEukB,EAAE,CAACvkB,CAAC,EAAEwkB,EAAE,CAACxkB,CAAC,EAAEw4B,EAAE,CAACx4B,CAAC,EAAE,IAAI,CAAC2kH,OAAO,CAAE;UACzDS,EAAE,CAACX,cAAc,CAAEngG,EAAE,CAAC3Q,CAAC,EAAE4Q,EAAE,CAAC5Q,CAAC,EAAE6Q,EAAE,CAAC7Q,CAAC,EAAE6kB,EAAE,CAAC7kB,CAAC,EAAE,IAAI,CAACgxG,OAAO,CAAE;QAE1D;QAEAjjG,KAAK,CAAC1e,GAAG,CACRkiH,EAAE,CAACF,IAAI,CAAEhoD,MAAM,CAAE,EACjBmoD,EAAE,CAACH,IAAI,CAAEhoD,MAAM,CAAE,EACjBooD,EAAE,CAACJ,IAAI,CAAEhoD,MAAM,CAAE,CACjB;QAED,OAAOt7C,KAAK;MAEb;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAyiF,gBAAA,CAAAh+H,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC8O,MAAM,GAAG,EAAE;QAEhB,KAAM,IAAItzB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG6T,MAAM,CAAC8O,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAExD,IAAMi0B,KAAK,GAAGzP,MAAM,CAAC8O,MAAM,CAAEtzB,CAAC,CAAE;UAEhC,IAAI,CAACszB,MAAM,CAAC9zB,IAAI,CAAEy0B,KAAK,CAACtd,KAAK,EAAE,CAAE;QAElC;QAEA,IAAI,CAACu+G,MAAM,GAAG1wG,MAAM,CAAC0wG,MAAM;QAC3B,IAAI,CAAC6C,SAAS,GAAGvzG,MAAM,CAACuzG,SAAS;QACjC,IAAI,CAACb,OAAO,GAAG1yG,MAAM,CAAC0yG,OAAO;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAj9H,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAyiF,gBAAA,CAAAh+H,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACiR,MAAM,GAAG,EAAE;QAEhB,KAAM,IAAItzB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC2iB,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEtD,IAAMi0B,KAAK,GAAG,IAAI,CAACX,MAAM,CAAEtzB,CAAC,CAAE;UAC9BqiB,IAAI,CAACiR,MAAM,CAAC9zB,IAAI,CAAEy0B,KAAK,CAACva,OAAO,EAAE,CAAE;QAEpC;QAEA2I,IAAI,CAAC6yG,MAAM,GAAG,IAAI,CAACA,MAAM;QACzB7yG,IAAI,CAAC01G,SAAS,GAAG,IAAI,CAACA,SAAS;QAC/B11G,IAAI,CAAC60G,OAAO,GAAG,IAAI,CAACA,OAAO;QAE3B,OAAO70G,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAAyiF,gBAAA,CAAAh+H,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAAC55F,MAAM,GAAG,EAAE;QAEhB,KAAM,IAAItzB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGu8G,IAAI,CAAC55F,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEtD,IAAMi0B,KAAK,GAAGi5F,IAAI,CAAC55F,MAAM,CAAEtzB,CAAC,CAAE;UAC9B,IAAI,CAACszB,MAAM,CAAC9zB,IAAI,CAAE,IAAI+vB,OAAO,EAAE,CAAC/V,SAAS,CAAEya,KAAK,CAAE,CAAE;QAErD;QAEA,IAAI,CAACihG,MAAM,GAAGhI,IAAI,CAACgI,MAAM;QACzB,IAAI,CAAC6C,SAAS,GAAG7K,IAAI,CAAC6K,SAAS;QAC/B,IAAI,CAACb,OAAO,GAAGhK,IAAI,CAACgK,OAAO;QAE3B,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAU,gBAAA;EAAA,EArK6BxE,KAAK;EAyKpC;AACD;AACA;AACA;EAEC,SAAS+E,UAAUA,CAAE1lH,CAAC,EAAEokB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEgU,EAAE,EAAG;IAExC,IAAMrU,EAAE,GAAG,CAAEK,EAAE,GAAGF,EAAE,IAAK,GAAG;IAC5B,IAAMxd,EAAE,GAAG,CAAE0xB,EAAE,GAAGjU,EAAE,IAAK,GAAG;IAC5B,IAAM89F,EAAE,GAAGniH,CAAC,GAAGA,CAAC;IAChB,IAAM+kH,EAAE,GAAG/kH,CAAC,GAAGmiH,EAAE;IACjB,OAAO,CAAE,CAAC,GAAG99F,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAGL,EAAE,GAAGrd,EAAE,IAAKm+G,EAAE,GAAG,CAAE,CAAE,CAAC,GAAG1gG,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAG,CAAC,GAAGL,EAAE,GAAGrd,EAAE,IAAKu7G,EAAE,GAAGl+F,EAAE,GAAGjkB,CAAC,GAAGqkB,EAAE;EAEnG;;EAEA;;EAEA,SAASshG,iBAAiBA,CAAE3lH,CAAC,EAAEutB,CAAC,EAAG;IAElC,IAAMq1D,CAAC,GAAG,CAAC,GAAG5iF,CAAC;IACf,OAAO4iF,CAAC,GAAGA,CAAC,GAAGr1D,CAAC;EAEjB;EAEA,SAASq4F,iBAAiBA,CAAE5lH,CAAC,EAAEutB,CAAC,EAAG;IAElC,OAAO,CAAC,IAAK,CAAC,GAAGvtB,CAAC,CAAE,GAAGA,CAAC,GAAGutB,CAAC;EAE7B;EAEA,SAASs4F,iBAAiBA,CAAE7lH,CAAC,EAAEutB,CAAC,EAAG;IAElC,OAAOvtB,CAAC,GAAGA,CAAC,GAAGutB,CAAC;EAEjB;EAEA,SAASu4F,eAAeA,CAAE9lH,CAAC,EAAEokB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;IAEzC,OAAOqhG,iBAAiB,CAAE3lH,CAAC,EAAEokB,EAAE,CAAE,GAAGwhG,iBAAiB,CAAE5lH,CAAC,EAAEqkB,EAAE,CAAE,GAC7DwhG,iBAAiB,CAAE7lH,CAAC,EAAEskB,EAAE,CAAE;EAE5B;;EAEA;;EAEA,SAASyhG,aAAaA,CAAE/lH,CAAC,EAAEutB,CAAC,EAAG;IAE9B,IAAMq1D,CAAC,GAAG,CAAC,GAAG5iF,CAAC;IACf,OAAO4iF,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGr1D,CAAC;EAErB;EAEA,SAASy4F,aAAaA,CAAEhmH,CAAC,EAAEutB,CAAC,EAAG;IAE9B,IAAMq1D,CAAC,GAAG,CAAC,GAAG5iF,CAAC;IACf,OAAO,CAAC,GAAG4iF,CAAC,GAAGA,CAAC,GAAG5iF,CAAC,GAAGutB,CAAC;EAEzB;EAEA,SAAS04F,aAAaA,CAAEjmH,CAAC,EAAEutB,CAAC,EAAG;IAE9B,OAAO,CAAC,IAAK,CAAC,GAAGvtB,CAAC,CAAE,GAAGA,CAAC,GAAGA,CAAC,GAAGutB,CAAC;EAEjC;EAEA,SAAS24F,aAAaA,CAAElmH,CAAC,EAAEutB,CAAC,EAAG;IAE9B,OAAOvtB,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGutB,CAAC;EAErB;EAEA,SAAS44F,WAAWA,CAAEnmH,CAAC,EAAEokB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEgU,EAAE,EAAG;IAEzC,OAAOytF,aAAa,CAAE/lH,CAAC,EAAEokB,EAAE,CAAE,GAAG4hG,aAAa,CAAEhmH,CAAC,EAAEqkB,EAAE,CAAE,GAAG4hG,aAAa,CAAEjmH,CAAC,EAAEskB,EAAE,CAAE,GAC9E4hG,aAAa,CAAElmH,CAAC,EAAEs4B,EAAE,CAAE;EAExB;EAAC,IAEK8tF,gBAAgB,0BAAAC,OAAA;IAAAv1G,SAAA,CAAAs1G,gBAAA,EAAAC,OAAA;IAAA,IAAAC,QAAA,GAAAt1G,YAAA,CAAAo1G,gBAAA;IAErB,SAAAA,iBAAaniG,EAAE,GAAG,IAAIzgB,OAAO,EAAE,EAAEoD,EAAE,GAAG,IAAIpD,OAAO,EAAE,EAAEqD,EAAE,GAAG,IAAIrD,OAAO,EAAE,EAAE8zB,EAAE,GAAG,IAAI9zB,OAAO,EAAE,EAAG;MAAA,IAAA+iH,OAAA;MAAAz2H,eAAA,OAAAs2H,gBAAA;MAE7FG,OAAA,GAAAD,QAAA,CAAA98H,IAAA;MAEA+8H,OAAA,CAAKC,kBAAkB,GAAG,IAAI;MAE9BD,OAAA,CAAKh9H,IAAI,GAAG,kBAAkB;MAE9Bg9H,OAAA,CAAKtiG,EAAE,GAAGA,EAAE;MACZsiG,OAAA,CAAK3/G,EAAE,GAAGA,EAAE;MACZ2/G,OAAA,CAAK1/G,EAAE,GAAGA,EAAE;MACZ0/G,OAAA,CAAKjvF,EAAE,GAAGA,EAAE;MAAC,OAAAivF,OAAA;IAEd;IAACj2H,YAAA,CAAA81H,gBAAA;MAAA5+H,GAAA;MAAAE,KAAA,EAED,SAAAm5H,SAAU7gH,CAAC,EAAE+gH,cAAc,GAAG,IAAIv9G,OAAO,EAAE,EAAG;QAE7C,IAAMge,KAAK,GAAGu/F,cAAc;QAE5B,IAAM98F,EAAE,GAAG,IAAI,CAACA,EAAE;UAAErd,EAAE,GAAG,IAAI,CAACA,EAAE;UAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;UAAEywB,EAAE,GAAG,IAAI,CAACA,EAAE;QAE5D9V,KAAK,CAAC1e,GAAG,CACRqjH,WAAW,CAAEnmH,CAAC,EAAEikB,EAAE,CAACzkB,CAAC,EAAEoH,EAAE,CAACpH,CAAC,EAAEqH,EAAE,CAACrH,CAAC,EAAE83B,EAAE,CAAC93B,CAAC,CAAE,EACxC2mH,WAAW,CAAEnmH,CAAC,EAAEikB,EAAE,CAACnkB,CAAC,EAAE8G,EAAE,CAAC9G,CAAC,EAAE+G,EAAE,CAAC/G,CAAC,EAAEw3B,EAAE,CAACx3B,CAAC,CAAE,CACxC;QAED,OAAO0hB,KAAK;MAEb;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA0jF,gBAAA,CAAAj/H,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACkS,EAAE,CAAC9f,IAAI,CAAE4N,MAAM,CAACkS,EAAE,CAAE;QACzB,IAAI,CAACrd,EAAE,CAACzC,IAAI,CAAE4N,MAAM,CAACnL,EAAE,CAAE;QACzB,IAAI,CAACC,EAAE,CAAC1C,IAAI,CAAE4N,MAAM,CAAClL,EAAE,CAAE;QACzB,IAAI,CAACywB,EAAE,CAACnzB,IAAI,CAAE4N,MAAM,CAACulB,EAAE,CAAE;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAA9vC,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAA0jF,gBAAA,CAAAj/H,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACqU,EAAE,GAAG,IAAI,CAACA,EAAE,CAAChd,OAAO,EAAE;QAC3B2I,IAAI,CAAChJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;QAC3B2I,IAAI,CAAC/I,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;QAC3B2I,IAAI,CAAC0nB,EAAE,GAAG,IAAI,CAACA,EAAE,CAACrwB,OAAO,EAAE;QAE3B,OAAO2I,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAA0jF,gBAAA,CAAAj/H,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAACx2F,EAAE,CAACld,SAAS,CAAE0zG,IAAI,CAACx2F,EAAE,CAAE;QAC5B,IAAI,CAACrd,EAAE,CAACG,SAAS,CAAE0zG,IAAI,CAAC7zG,EAAE,CAAE;QAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE0zG,IAAI,CAAC5zG,EAAE,CAAE;QAC5B,IAAI,CAACywB,EAAE,CAACvwB,SAAS,CAAE0zG,IAAI,CAACnjF,EAAE,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA8uF,gBAAA;EAAA,EArE6BzF,KAAK;EAAA,IAyE9B8F,iBAAiB,0BAAAC,OAAA;IAAA51G,SAAA,CAAA21G,iBAAA,EAAAC,OAAA;IAAA,IAAAC,QAAA,GAAA31G,YAAA,CAAAy1G,iBAAA;IAEtB,SAAAA,kBAAaxiG,EAAE,GAAG,IAAInH,OAAO,EAAE,EAAElW,EAAE,GAAG,IAAIkW,OAAO,EAAE,EAAEjW,EAAE,GAAG,IAAIiW,OAAO,EAAE,EAAEwa,EAAE,GAAG,IAAIxa,OAAO,EAAE,EAAG;MAAA,IAAA8pG,OAAA;MAAA92H,eAAA,OAAA22H,iBAAA;MAE7FG,OAAA,GAAAD,QAAA,CAAAn9H,IAAA;MAEAo9H,OAAA,CAAKC,mBAAmB,GAAG,IAAI;MAE/BD,OAAA,CAAKr9H,IAAI,GAAG,mBAAmB;MAE/Bq9H,OAAA,CAAK3iG,EAAE,GAAGA,EAAE;MACZ2iG,OAAA,CAAKhgH,EAAE,GAAGA,EAAE;MACZggH,OAAA,CAAK//G,EAAE,GAAGA,EAAE;MACZ+/G,OAAA,CAAKtvF,EAAE,GAAGA,EAAE;MAAC,OAAAsvF,OAAA;IAEd;IAACt2H,YAAA,CAAAm2H,iBAAA;MAAAj/H,GAAA;MAAAE,KAAA,EAED,SAAAm5H,SAAU7gH,CAAC,EAAE+gH,cAAc,GAAG,IAAIjkG,OAAO,EAAE,EAAG;QAE7C,IAAM0E,KAAK,GAAGu/F,cAAc;QAE5B,IAAM98F,EAAE,GAAG,IAAI,CAACA,EAAE;UAAErd,EAAE,GAAG,IAAI,CAACA,EAAE;UAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;UAAEywB,EAAE,GAAG,IAAI,CAACA,EAAE;QAE5D9V,KAAK,CAAC1e,GAAG,CACRqjH,WAAW,CAAEnmH,CAAC,EAAEikB,EAAE,CAACzkB,CAAC,EAAEoH,EAAE,CAACpH,CAAC,EAAEqH,EAAE,CAACrH,CAAC,EAAE83B,EAAE,CAAC93B,CAAC,CAAE,EACxC2mH,WAAW,CAAEnmH,CAAC,EAAEikB,EAAE,CAACnkB,CAAC,EAAE8G,EAAE,CAAC9G,CAAC,EAAE+G,EAAE,CAAC/G,CAAC,EAAEw3B,EAAE,CAACx3B,CAAC,CAAE,EACxCqmH,WAAW,CAAEnmH,CAAC,EAAEikB,EAAE,CAACxQ,CAAC,EAAE7M,EAAE,CAAC6M,CAAC,EAAE5M,EAAE,CAAC4M,CAAC,EAAE6jB,EAAE,CAAC7jB,CAAC,CAAE,CACxC;QAED,OAAO+N,KAAK;MAEb;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA+jF,iBAAA,CAAAt/H,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACkS,EAAE,CAAC9f,IAAI,CAAE4N,MAAM,CAACkS,EAAE,CAAE;QACzB,IAAI,CAACrd,EAAE,CAACzC,IAAI,CAAE4N,MAAM,CAACnL,EAAE,CAAE;QACzB,IAAI,CAACC,EAAE,CAAC1C,IAAI,CAAE4N,MAAM,CAAClL,EAAE,CAAE;QACzB,IAAI,CAACywB,EAAE,CAACnzB,IAAI,CAAE4N,MAAM,CAACulB,EAAE,CAAE;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAA9vC,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAA+jF,iBAAA,CAAAt/H,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACqU,EAAE,GAAG,IAAI,CAACA,EAAE,CAAChd,OAAO,EAAE;QAC3B2I,IAAI,CAAChJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;QAC3B2I,IAAI,CAAC/I,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;QAC3B2I,IAAI,CAAC0nB,EAAE,GAAG,IAAI,CAACA,EAAE,CAACrwB,OAAO,EAAE;QAE3B,OAAO2I,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAA+jF,iBAAA,CAAAt/H,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAACx2F,EAAE,CAACld,SAAS,CAAE0zG,IAAI,CAACx2F,EAAE,CAAE;QAC5B,IAAI,CAACrd,EAAE,CAACG,SAAS,CAAE0zG,IAAI,CAAC7zG,EAAE,CAAE;QAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE0zG,IAAI,CAAC5zG,EAAE,CAAE;QAC5B,IAAI,CAACywB,EAAE,CAACvwB,SAAS,CAAE0zG,IAAI,CAACnjF,EAAE,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAmvF,iBAAA;EAAA,EAtE8B9F,KAAK;EAAA,IA0E/BmG,SAAS,0BAAAC,OAAA;IAAAj2G,SAAA,CAAAg2G,SAAA,EAAAC,OAAA;IAAA,IAAAC,QAAA,GAAAh2G,YAAA,CAAA81G,SAAA;IAEd,SAAAA,UAAalgH,EAAE,GAAG,IAAIpD,OAAO,EAAE,EAAEqD,EAAE,GAAG,IAAIrD,OAAO,EAAE,EAAG;MAAA,IAAAyjH,OAAA;MAAAn3H,eAAA,OAAAg3H,SAAA;MAErDG,OAAA,GAAAD,QAAA,CAAAx9H,IAAA;MAEAy9H,OAAA,CAAKC,WAAW,GAAG,IAAI;MAEvBD,OAAA,CAAK19H,IAAI,GAAG,WAAW;MAEvB09H,OAAA,CAAKrgH,EAAE,GAAGA,EAAE;MACZqgH,OAAA,CAAKpgH,EAAE,GAAGA,EAAE;MAAC,OAAAogH,OAAA;IAEd;IAAC32H,YAAA,CAAAw2H,SAAA;MAAAt/H,GAAA;MAAAE,KAAA,EAED,SAAAm5H,SAAU7gH,CAAC,EAAE+gH,cAAc,GAAG,IAAIv9G,OAAO,EAAE,EAAG;QAE7C,IAAMge,KAAK,GAAGu/F,cAAc;QAE5B,IAAK/gH,CAAC,KAAK,CAAC,EAAG;UAEdwhB,KAAK,CAACrd,IAAI,CAAE,IAAI,CAAC0C,EAAE,CAAE;QAEtB,CAAC,MAAM;UAEN2a,KAAK,CAACrd,IAAI,CAAE,IAAI,CAAC0C,EAAE,CAAE,CAACpC,GAAG,CAAE,IAAI,CAACmC,EAAE,CAAE;UACpC4a,KAAK,CAAC3c,cAAc,CAAE7E,CAAC,CAAE,CAACqE,GAAG,CAAE,IAAI,CAACuC,EAAE,CAAE;QAEzC;QAEA,OAAO4a,KAAK;MAEb;;MAEA;IAAA;MAAAh6B,GAAA;MAAAE,KAAA,EACA,SAAAo5H,WAAY5gG,CAAC,EAAE6gG,cAAc,EAAG;QAE/B,OAAO,IAAI,CAACF,QAAQ,CAAE3gG,CAAC,EAAE6gG,cAAc,CAAE;MAE1C;IAAC;MAAAv5H,GAAA;MAAAE,KAAA,EAED,SAAAw6H,WAAYliH,CAAC,EAAE+gH,cAAc,GAAG,IAAIv9G,OAAO,EAAE,EAAG;QAE/C,OAAOu9G,cAAc,CAACp8G,UAAU,CAAE,IAAI,CAACkC,EAAE,EAAE,IAAI,CAACD,EAAE,CAAE,CAACvD,SAAS,EAAE;MAEjE;IAAC;MAAA7b,GAAA;MAAAE,KAAA,EAED,SAAA46H,aAAcpiG,CAAC,EAAE6gG,cAAc,EAAG;QAEjC,OAAO,IAAI,CAACmB,UAAU,CAAEhiG,CAAC,EAAE6gG,cAAc,CAAE;MAE5C;IAAC;MAAAv5H,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAokF,SAAA,CAAA3/H,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACnL,EAAE,CAACzC,IAAI,CAAE4N,MAAM,CAACnL,EAAE,CAAE;QACzB,IAAI,CAACC,EAAE,CAAC1C,IAAI,CAAE4N,MAAM,CAAClL,EAAE,CAAE;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAArf,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAokF,SAAA,CAAA3/H,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAAChJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;QAC3B2I,IAAI,CAAC/I,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;QAE3B,OAAO2I,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAAokF,SAAA,CAAA3/H,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAAC7zG,EAAE,CAACG,SAAS,CAAE0zG,IAAI,CAAC7zG,EAAE,CAAE;QAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE0zG,IAAI,CAAC5zG,EAAE,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAigH,SAAA;EAAA,EApFsBnG,KAAK;EAAA,IAwFvBwG,UAAU,0BAAAC,OAAA;IAAAt2G,SAAA,CAAAq2G,UAAA,EAAAC,OAAA;IAAA,IAAAC,QAAA,GAAAr2G,YAAA,CAAAm2G,UAAA;IAEf,SAAAA,WAAavgH,EAAE,GAAG,IAAIkW,OAAO,EAAE,EAAEjW,EAAE,GAAG,IAAIiW,OAAO,EAAE,EAAG;MAAA,IAAAwqG,OAAA;MAAAx3H,eAAA,OAAAq3H,UAAA;MAErDG,OAAA,GAAAD,QAAA,CAAA79H,IAAA;MAEA89H,OAAA,CAAKC,YAAY,GAAG,IAAI;MAExBD,OAAA,CAAK/9H,IAAI,GAAG,YAAY;MAExB+9H,OAAA,CAAK1gH,EAAE,GAAGA,EAAE;MACZ0gH,OAAA,CAAKzgH,EAAE,GAAGA,EAAE;MAAC,OAAAygH,OAAA;IAEd;IAACh3H,YAAA,CAAA62H,UAAA;MAAA3/H,GAAA;MAAAE,KAAA,EACD,SAAAm5H,SAAU7gH,CAAC,EAAE+gH,cAAc,GAAG,IAAIjkG,OAAO,EAAE,EAAG;QAE7C,IAAM0E,KAAK,GAAGu/F,cAAc;QAE5B,IAAK/gH,CAAC,KAAK,CAAC,EAAG;UAEdwhB,KAAK,CAACrd,IAAI,CAAE,IAAI,CAAC0C,EAAE,CAAE;QAEtB,CAAC,MAAM;UAEN2a,KAAK,CAACrd,IAAI,CAAE,IAAI,CAAC0C,EAAE,CAAE,CAACpC,GAAG,CAAE,IAAI,CAACmC,EAAE,CAAE;UACpC4a,KAAK,CAAC3c,cAAc,CAAE7E,CAAC,CAAE,CAACqE,GAAG,CAAE,IAAI,CAACuC,EAAE,CAAE;QAEzC;QAEA,OAAO4a,KAAK;MAEb;MACA;IAAA;MAAAh6B,GAAA;MAAAE,KAAA,EACA,SAAAo5H,WAAY5gG,CAAC,EAAE6gG,cAAc,EAAG;QAE/B,OAAO,IAAI,CAACF,QAAQ,CAAE3gG,CAAC,EAAE6gG,cAAc,CAAE;MAE1C;IAAC;MAAAv5H,GAAA;MAAAE,KAAA,EAED,SAAAw6H,WAAYliH,CAAC,EAAE+gH,cAAc,GAAG,IAAIjkG,OAAO,EAAE,EAAG;QAE/C,OAAOikG,cAAc,CAACp8G,UAAU,CAAE,IAAI,CAACkC,EAAE,EAAE,IAAI,CAACD,EAAE,CAAE,CAACvD,SAAS,EAAE;MAEjE;IAAC;MAAA7b,GAAA;MAAAE,KAAA,EAED,SAAA46H,aAAcpiG,CAAC,EAAE6gG,cAAc,EAAG;QAEjC,OAAO,IAAI,CAACmB,UAAU,CAAEhiG,CAAC,EAAE6gG,cAAc,CAAE;MAE5C;IAAC;MAAAv5H,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAykF,UAAA,CAAAhgI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACnL,EAAE,CAACzC,IAAI,CAAE4N,MAAM,CAACnL,EAAE,CAAE;QACzB,IAAI,CAACC,EAAE,CAAC1C,IAAI,CAAE4N,MAAM,CAAClL,EAAE,CAAE;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAArf,GAAA;MAAAE,KAAA,EACD,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAykF,UAAA,CAAAhgI,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAAChJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;QAC3B2I,IAAI,CAAC/I,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;QAE3B,OAAO2I,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EACD,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAAykF,UAAA,CAAAhgI,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAAC7zG,EAAE,CAACG,SAAS,CAAE0zG,IAAI,CAAC7zG,EAAE,CAAE;QAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE0zG,IAAI,CAAC5zG,EAAE,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAsgH,UAAA;EAAA,EAhFuBxG,KAAK;EAAA,IAoFxB6G,oBAAoB,0BAAAC,OAAA;IAAA32G,SAAA,CAAA02G,oBAAA,EAAAC,OAAA;IAAA,IAAAC,QAAA,GAAA12G,YAAA,CAAAw2G,oBAAA;IAEzB,SAAAA,qBAAavjG,EAAE,GAAG,IAAIzgB,OAAO,EAAE,EAAEoD,EAAE,GAAG,IAAIpD,OAAO,EAAE,EAAEqD,EAAE,GAAG,IAAIrD,OAAO,EAAE,EAAG;MAAA,IAAAmkH,OAAA;MAAA73H,eAAA,OAAA03H,oBAAA;MAEzEG,OAAA,GAAAD,QAAA,CAAAl+H,IAAA;MAEAm+H,OAAA,CAAKC,sBAAsB,GAAG,IAAI;MAElCD,OAAA,CAAKp+H,IAAI,GAAG,sBAAsB;MAElCo+H,OAAA,CAAK1jG,EAAE,GAAGA,EAAE;MACZ0jG,OAAA,CAAK/gH,EAAE,GAAGA,EAAE;MACZ+gH,OAAA,CAAK9gH,EAAE,GAAGA,EAAE;MAAC,OAAA8gH,OAAA;IAEd;IAACr3H,YAAA,CAAAk3H,oBAAA;MAAAhgI,GAAA;MAAAE,KAAA,EAED,SAAAm5H,SAAU7gH,CAAC,EAAE+gH,cAAc,GAAG,IAAIv9G,OAAO,EAAE,EAAG;QAE7C,IAAMge,KAAK,GAAGu/F,cAAc;QAE5B,IAAM98F,EAAE,GAAG,IAAI,CAACA,EAAE;UAAErd,EAAE,GAAG,IAAI,CAACA,EAAE;UAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;QAE9C2a,KAAK,CAAC1e,GAAG,CACRgjH,eAAe,CAAE9lH,CAAC,EAAEikB,EAAE,CAACzkB,CAAC,EAAEoH,EAAE,CAACpH,CAAC,EAAEqH,EAAE,CAACrH,CAAC,CAAE,EACtCsmH,eAAe,CAAE9lH,CAAC,EAAEikB,EAAE,CAACnkB,CAAC,EAAE8G,EAAE,CAAC9G,CAAC,EAAE+G,EAAE,CAAC/G,CAAC,CAAE,CACtC;QAED,OAAO0hB,KAAK;MAEb;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA8kF,oBAAA,CAAArgI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACkS,EAAE,CAAC9f,IAAI,CAAE4N,MAAM,CAACkS,EAAE,CAAE;QACzB,IAAI,CAACrd,EAAE,CAACzC,IAAI,CAAE4N,MAAM,CAACnL,EAAE,CAAE;QACzB,IAAI,CAACC,EAAE,CAAC1C,IAAI,CAAE4N,MAAM,CAAClL,EAAE,CAAE;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAArf,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAA8kF,oBAAA,CAAArgI,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACqU,EAAE,GAAG,IAAI,CAACA,EAAE,CAAChd,OAAO,EAAE;QAC3B2I,IAAI,CAAChJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;QAC3B2I,IAAI,CAAC/I,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;QAE3B,OAAO2I,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAA8kF,oBAAA,CAAArgI,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAACx2F,EAAE,CAACld,SAAS,CAAE0zG,IAAI,CAACx2F,EAAE,CAAE;QAC5B,IAAI,CAACrd,EAAE,CAACG,SAAS,CAAE0zG,IAAI,CAAC7zG,EAAE,CAAE;QAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE0zG,IAAI,CAAC5zG,EAAE,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA2gH,oBAAA;EAAA,EAjEiC7G,KAAK;EAAA,IAqElCkH,qBAAqB,0BAAAC,OAAA;IAAAh3G,SAAA,CAAA+2G,qBAAA,EAAAC,OAAA;IAAA,IAAAC,QAAA,GAAA/2G,YAAA,CAAA62G,qBAAA;IAE1B,SAAAA,sBAAa5jG,EAAE,GAAG,IAAInH,OAAO,EAAE,EAAElW,EAAE,GAAG,IAAIkW,OAAO,EAAE,EAAEjW,EAAE,GAAG,IAAIiW,OAAO,EAAE,EAAG;MAAA,IAAAkrG,OAAA;MAAAl4H,eAAA,OAAA+3H,qBAAA;MAEzEG,OAAA,GAAAD,QAAA,CAAAv+H,IAAA;MAEAw+H,OAAA,CAAKC,uBAAuB,GAAG,IAAI;MAEnCD,OAAA,CAAKz+H,IAAI,GAAG,uBAAuB;MAEnCy+H,OAAA,CAAK/jG,EAAE,GAAGA,EAAE;MACZ+jG,OAAA,CAAKphH,EAAE,GAAGA,EAAE;MACZohH,OAAA,CAAKnhH,EAAE,GAAGA,EAAE;MAAC,OAAAmhH,OAAA;IAEd;IAAC13H,YAAA,CAAAu3H,qBAAA;MAAArgI,GAAA;MAAAE,KAAA,EAED,SAAAm5H,SAAU7gH,CAAC,EAAE+gH,cAAc,GAAG,IAAIjkG,OAAO,EAAE,EAAG;QAE7C,IAAM0E,KAAK,GAAGu/F,cAAc;QAE5B,IAAM98F,EAAE,GAAG,IAAI,CAACA,EAAE;UAAErd,EAAE,GAAG,IAAI,CAACA,EAAE;UAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;QAE9C2a,KAAK,CAAC1e,GAAG,CACRgjH,eAAe,CAAE9lH,CAAC,EAAEikB,EAAE,CAACzkB,CAAC,EAAEoH,EAAE,CAACpH,CAAC,EAAEqH,EAAE,CAACrH,CAAC,CAAE,EACtCsmH,eAAe,CAAE9lH,CAAC,EAAEikB,EAAE,CAACnkB,CAAC,EAAE8G,EAAE,CAAC9G,CAAC,EAAE+G,EAAE,CAAC/G,CAAC,CAAE,EACtCgmH,eAAe,CAAE9lH,CAAC,EAAEikB,EAAE,CAACxQ,CAAC,EAAE7M,EAAE,CAAC6M,CAAC,EAAE5M,EAAE,CAAC4M,CAAC,CAAE,CACtC;QAED,OAAO+N,KAAK;MAEb;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAmlF,qBAAA,CAAA1gI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACkS,EAAE,CAAC9f,IAAI,CAAE4N,MAAM,CAACkS,EAAE,CAAE;QACzB,IAAI,CAACrd,EAAE,CAACzC,IAAI,CAAE4N,MAAM,CAACnL,EAAE,CAAE;QACzB,IAAI,CAACC,EAAE,CAAC1C,IAAI,CAAE4N,MAAM,CAAClL,EAAE,CAAE;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAArf,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAmlF,qBAAA,CAAA1gI,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACqU,EAAE,GAAG,IAAI,CAACA,EAAE,CAAChd,OAAO,EAAE;QAC3B2I,IAAI,CAAChJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;QAC3B2I,IAAI,CAAC/I,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;QAE3B,OAAO2I,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAAmlF,qBAAA,CAAA1gI,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAACx2F,EAAE,CAACld,SAAS,CAAE0zG,IAAI,CAACx2F,EAAE,CAAE;QAC5B,IAAI,CAACrd,EAAE,CAACG,SAAS,CAAE0zG,IAAI,CAAC7zG,EAAE,CAAE;QAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAE0zG,IAAI,CAAC5zG,EAAE,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAghH,qBAAA;EAAA,EAlEkClH,KAAK;EAAA,IAsEnCuH,WAAW,0BAAAC,OAAA;IAAAr3G,SAAA,CAAAo3G,WAAA,EAAAC,OAAA;IAAA,IAAAC,QAAA,GAAAp3G,YAAA,CAAAk3G,WAAA;IAEhB,SAAAA,YAAarnG,MAAM,GAAG,EAAE,EAAG;MAAA,IAAAwnG,OAAA;MAAAv4H,eAAA,OAAAo4H,WAAA;MAE1BG,OAAA,GAAAD,QAAA,CAAA5+H,IAAA;MAEA6+H,OAAA,CAAKC,aAAa,GAAG,IAAI;MAEzBD,OAAA,CAAK9+H,IAAI,GAAG,aAAa;MAEzB8+H,OAAA,CAAKxnG,MAAM,GAAGA,MAAM;MAAC,OAAAwnG,OAAA;IAEtB;IAAC/3H,YAAA,CAAA43H,WAAA;MAAA1gI,GAAA;MAAAE,KAAA,EAED,SAAAm5H,SAAU7gH,CAAC,EAAE+gH,cAAc,GAAG,IAAIv9G,OAAO,EAAE,EAAG;QAE7C,IAAMge,KAAK,GAAGu/F,cAAc;QAE5B,IAAMlgG,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1B,IAAM0M,CAAC,GAAG,CAAE1M,MAAM,CAACvzB,MAAM,GAAG,CAAC,IAAK0S,CAAC;QAEnC,IAAMylH,QAAQ,GAAGnnH,IAAI,CAACsC,KAAK,CAAE2sB,CAAC,CAAE;QAChC,IAAMuvC,MAAM,GAAGvvC,CAAC,GAAGk4F,QAAQ;QAE3B,IAAMrhG,EAAE,GAAGvD,MAAM,CAAE4kG,QAAQ,KAAK,CAAC,GAAGA,QAAQ,GAAGA,QAAQ,GAAG,CAAC,CAAE;QAC7D,IAAMphG,EAAE,GAAGxD,MAAM,CAAE4kG,QAAQ,CAAE;QAC7B,IAAMnhG,EAAE,GAAGzD,MAAM,CAAE4kG,QAAQ,GAAG5kG,MAAM,CAACvzB,MAAM,GAAG,CAAC,GAAGuzB,MAAM,CAACvzB,MAAM,GAAG,CAAC,GAAGm4H,QAAQ,GAAG,CAAC,CAAE;QACpF,IAAMntF,EAAE,GAAGzX,MAAM,CAAE4kG,QAAQ,GAAG5kG,MAAM,CAACvzB,MAAM,GAAG,CAAC,GAAGuzB,MAAM,CAACvzB,MAAM,GAAG,CAAC,GAAGm4H,QAAQ,GAAG,CAAC,CAAE;QAEpFjkG,KAAK,CAAC1e,GAAG,CACR4iH,UAAU,CAAE5oD,MAAM,EAAE14C,EAAE,CAAC5kB,CAAC,EAAE6kB,EAAE,CAAC7kB,CAAC,EAAE8kB,EAAE,CAAC9kB,CAAC,EAAE84B,EAAE,CAAC94B,CAAC,CAAE,EAC5CkmH,UAAU,CAAE5oD,MAAM,EAAE14C,EAAE,CAACtkB,CAAC,EAAEukB,EAAE,CAACvkB,CAAC,EAAEwkB,EAAE,CAACxkB,CAAC,EAAEw4B,EAAE,CAACx4B,CAAC,CAAE,CAC5C;QAED,OAAO0hB,KAAK;MAEb;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAwlF,WAAA,CAAA/gI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC8O,MAAM,GAAG,EAAE;QAEhB,KAAM,IAAItzB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG6T,MAAM,CAAC8O,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAExD,IAAMi0B,KAAK,GAAGzP,MAAM,CAAC8O,MAAM,CAAEtzB,CAAC,CAAE;UAEhC,IAAI,CAACszB,MAAM,CAAC9zB,IAAI,CAAEy0B,KAAK,CAACtd,KAAK,EAAE,CAAE;QAElC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA1c,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAwlF,WAAA,CAAA/gI,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACiR,MAAM,GAAG,EAAE;QAEhB,KAAM,IAAItzB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC2iB,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEtD,IAAMi0B,KAAK,GAAG,IAAI,CAACX,MAAM,CAAEtzB,CAAC,CAAE;UAC9BqiB,IAAI,CAACiR,MAAM,CAAC9zB,IAAI,CAAEy0B,KAAK,CAACva,OAAO,EAAE,CAAE;QAEpC;QAEA,OAAO2I,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAAwlF,WAAA,CAAA/gI,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAAC55F,MAAM,GAAG,EAAE;QAEhB,KAAM,IAAItzB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGu8G,IAAI,CAAC55F,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEtD,IAAMi0B,KAAK,GAAGi5F,IAAI,CAAC55F,MAAM,CAAEtzB,CAAC,CAAE;UAC9B,IAAI,CAACszB,MAAM,CAAC9zB,IAAI,CAAE,IAAIyW,OAAO,EAAE,CAACuD,SAAS,CAAEya,KAAK,CAAE,CAAE;QAErD;QAEA,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA0mG,WAAA;EAAA,EAxFwBvH,KAAK;EA4F/B,IAAI4H,MAAM,GAAG,aAAarhI,MAAM,CAACshI,MAAM,CAAC;IACvCx6H,SAAS,EAAE,IAAI;IACf+1H,QAAQ,EAAEA,QAAQ;IAClBoB,gBAAgB,EAAEA,gBAAgB;IAClCiB,gBAAgB,EAAEA,gBAAgB;IAClCK,iBAAiB,EAAEA,iBAAiB;IACpC1D,YAAY,EAAEA,YAAY;IAC1B+D,SAAS,EAAEA,SAAS;IACpBK,UAAU,EAAEA,UAAU;IACtBK,oBAAoB,EAAEA,oBAAoB;IAC1CK,qBAAqB,EAAEA,qBAAqB;IAC5CK,WAAW,EAAEA;EACd,CAAC,CAAC;;EAEF;AACD;AACA;AACA;EAHC,IAKMO,SAAS,0BAAAC,QAAA;IAAA53G,SAAA,CAAA23G,SAAA,EAAAC,QAAA;IAAA,IAAAC,QAAA,GAAA33G,YAAA,CAAAy3G,SAAA;IAEd,SAAAA,UAAA,EAAc;MAAA,IAAAG,OAAA;MAAA94H,eAAA,OAAA24H,SAAA;MAEbG,OAAA,GAAAD,QAAA,CAAAn/H,IAAA;MAEAo/H,OAAA,CAAKr/H,IAAI,GAAG,WAAW;MAEvBq/H,OAAA,CAAKC,MAAM,GAAG,EAAE;MAChBD,OAAA,CAAKE,SAAS,GAAG,KAAK,CAAC,CAAC;MAAA,OAAAF,OAAA;IAEzB;IAACt4H,YAAA,CAAAm4H,SAAA;MAAAjhI,GAAA;MAAAE,KAAA,EAED,SAAA2c,IAAK0kH,KAAK,EAAG;QAEZ,IAAI,CAACF,MAAM,CAAC97H,IAAI,CAAEg8H,KAAK,CAAE;MAE1B;IAAC;MAAAvhI,GAAA;MAAAE,KAAA,EAED,SAAAshI,UAAA,EAAY;QAEX;QACA,IAAMC,UAAU,GAAG,IAAI,CAACJ,MAAM,CAAE,CAAC,CAAE,CAAChI,QAAQ,CAAE,CAAC,CAAE;QACjD,IAAMqI,QAAQ,GAAG,IAAI,CAACL,MAAM,CAAE,IAAI,CAACA,MAAM,CAACv7H,MAAM,GAAG,CAAC,CAAE,CAACuzH,QAAQ,CAAE,CAAC,CAAE;QAEpE,IAAK,CAAEoI,UAAU,CAACniH,MAAM,CAAEoiH,QAAQ,CAAE,EAAG;UAEtC,IAAI,CAACL,MAAM,CAAC97H,IAAI,CAAE,IAAI+5H,SAAS,CAAEoC,QAAQ,EAAED,UAAU,CAAE,CAAE;QAE1D;MAED;;MAEA;MACA;MACA;;MAEA;MACA;MACA;MACA;IAAA;MAAAzhI,GAAA;MAAAE,KAAA,EAEA,SAAAm5H,SAAU7gH,CAAC,EAAE+gH,cAAc,EAAG;QAE7B,IAAM12G,CAAC,GAAGrK,CAAC,GAAG,IAAI,CAACohH,SAAS,EAAE;QAC9B,IAAM+H,YAAY,GAAG,IAAI,CAACC,eAAe,EAAE;QAC3C,IAAI77H,CAAC,GAAG,CAAC;;QAET;;QAEA,OAAQA,CAAC,GAAG47H,YAAY,CAAC77H,MAAM,EAAG;UAEjC,IAAK67H,YAAY,CAAE57H,CAAC,CAAE,IAAI8c,CAAC,EAAG;YAE7B,IAAMg/G,IAAI,GAAGF,YAAY,CAAE57H,CAAC,CAAE,GAAG8c,CAAC;YAClC,IAAM0+G,KAAK,GAAG,IAAI,CAACF,MAAM,CAAEt7H,CAAC,CAAE;YAE9B,IAAMy0H,aAAa,GAAG+G,KAAK,CAAC3H,SAAS,EAAE;YACvC,IAAMlhG,CAAC,GAAG8hG,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAGqH,IAAI,GAAGrH,aAAa;YAE5D,OAAO+G,KAAK,CAACjI,UAAU,CAAE5gG,CAAC,EAAE6gG,cAAc,CAAE;UAE7C;UAEAxzH,CAAC,EAAG;QAEL;QAEA,OAAO,IAAI;;QAEX;MAED;;MAEA;MACA;MACA;IAAA;MAAA/F,GAAA;MAAAE,KAAA,EAEA,SAAA05H,UAAA,EAAY;QAEX,IAAMkI,IAAI,GAAG,IAAI,CAACF,eAAe,EAAE;QACnC,OAAOE,IAAI,CAAEA,IAAI,CAACh8H,MAAM,GAAG,CAAC,CAAE;MAE/B;;MAEA;IAAA;MAAA9F,GAAA;MAAAE,KAAA,EACA,SAAAg6H,iBAAA,EAAmB;QAElB,IAAI,CAACzuG,WAAW,GAAG,IAAI;QACvB,IAAI,CAACs2G,YAAY,GAAG,IAAI;QACxB,IAAI,CAACH,eAAe,EAAE;MAEvB;;MAEA;MACA;IAAA;MAAA5hI,GAAA;MAAAE,KAAA,EAEA,SAAA0hI,gBAAA,EAAkB;QAEjB;;QAEA,IAAK,IAAI,CAACG,YAAY,IAAI,IAAI,CAACA,YAAY,CAACj8H,MAAM,KAAK,IAAI,CAACu7H,MAAM,CAACv7H,MAAM,EAAG;UAE3E,OAAO,IAAI,CAACi8H,YAAY;QAEzB;;QAEA;QACA;;QAEA,IAAMlI,OAAO,GAAG,EAAE;QAClB,IAAImI,IAAI,GAAG,CAAC;QAEZ,KAAM,IAAIj8H,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC2qH,MAAM,CAACv7H,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEtDi8H,IAAI,IAAI,IAAI,CAACX,MAAM,CAAEt7H,CAAC,CAAE,CAAC6zH,SAAS,EAAE;UACpCC,OAAO,CAACt0H,IAAI,CAAEy8H,IAAI,CAAE;QAErB;QAEA,IAAI,CAACD,YAAY,GAAGlI,OAAO;QAE3B,OAAOA,OAAO;MAEf;IAAC;MAAA75H,GAAA;MAAAE,KAAA,EAED,SAAAy5H,gBAAiBD,SAAS,GAAG,EAAE,EAAG;QAEjC,IAAMrgG,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAItzB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI2zH,SAAS,EAAE3zH,CAAC,EAAG,EAAG;UAEvCszB,MAAM,CAAC9zB,IAAI,CAAE,IAAI,CAAC8zH,QAAQ,CAAEtzH,CAAC,GAAG2zH,SAAS,CAAE,CAAE;QAE9C;QAEA,IAAK,IAAI,CAAC4H,SAAS,EAAG;UAErBjoG,MAAM,CAAC9zB,IAAI,CAAE8zB,MAAM,CAAE,CAAC,CAAE,CAAE;QAE3B;QAEA,OAAOA,MAAM;MAEd;IAAC;MAAAr5B,GAAA;MAAAE,KAAA,EAED,SAAAu5H,UAAWC,SAAS,GAAG,EAAE,EAAG;QAE3B,IAAMrgG,MAAM,GAAG,EAAE;QACjB,IAAI4gG,IAAI;QAER,KAAM,IAAIl0H,CAAC,GAAG,CAAC,EAAEs7H,MAAM,GAAG,IAAI,CAACA,MAAM,EAAEt7H,CAAC,GAAGs7H,MAAM,CAACv7H,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEhE,IAAMw7H,KAAK,GAAGF,MAAM,CAAEt7H,CAAC,CAAE;UACzB,IAAMgzF,UAAU,GAAGwoC,KAAK,CAACpF,cAAc,GAAGzC,SAAS,GAAG,CAAC,GAClD6H,KAAK,CAAC7B,WAAW,IAAI6B,KAAK,CAACxB,YAAY,GAAK,CAAC,GAC9CwB,KAAK,CAACT,aAAa,GAAGpH,SAAS,GAAG6H,KAAK,CAACloG,MAAM,CAACvzB,MAAM,GACpD4zH,SAAS;UAEd,IAAMuI,GAAG,GAAGV,KAAK,CAAC9H,SAAS,CAAE1gC,UAAU,CAAE;UAEzC,KAAM,IAAIp8D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGslG,GAAG,CAACn8H,MAAM,EAAE62B,CAAC,EAAG,EAAG;YAEvC,IAAM3C,KAAK,GAAGioG,GAAG,CAAEtlG,CAAC,CAAE;YAEtB,IAAKs9F,IAAI,IAAIA,IAAI,CAAC36G,MAAM,CAAE0a,KAAK,CAAE,EAAG,SAAS,CAAC;;YAE9CX,MAAM,CAAC9zB,IAAI,CAAEy0B,KAAK,CAAE;YACpBigG,IAAI,GAAGjgG,KAAK;UAEb;QAED;QAEA,IAAK,IAAI,CAACsnG,SAAS,IAAIjoG,MAAM,CAACvzB,MAAM,GAAG,CAAC,IAAI,CAAEuzB,MAAM,CAAEA,MAAM,CAACvzB,MAAM,GAAG,CAAC,CAAE,CAACwZ,MAAM,CAAE+Z,MAAM,CAAE,CAAC,CAAE,CAAE,EAAG;UAEjGA,MAAM,CAAC9zB,IAAI,CAAE8zB,MAAM,CAAE,CAAC,CAAE,CAAE;QAE3B;QAEA,OAAOA,MAAM;MAEd;IAAC;MAAAr5B,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA+lF,SAAA,CAAAthI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC82G,MAAM,GAAG,EAAE;QAEhB,KAAM,IAAIt7H,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG6T,MAAM,CAAC82G,MAAM,CAACv7H,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAExD,IAAMw7H,KAAK,GAAGh3G,MAAM,CAAC82G,MAAM,CAAEt7H,CAAC,CAAE;UAEhC,IAAI,CAACs7H,MAAM,CAAC97H,IAAI,CAAEg8H,KAAK,CAAC7kH,KAAK,EAAE,CAAE;QAElC;QAEA,IAAI,CAAC4kH,SAAS,GAAG/2G,MAAM,CAAC+2G,SAAS;QAEjC,OAAO,IAAI;MAEZ;IAAC;MAAAthI,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAA+lF,SAAA,CAAAthI,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACk5G,SAAS,GAAG,IAAI,CAACA,SAAS;QAC/Bl5G,IAAI,CAACi5G,MAAM,GAAG,EAAE;QAEhB,KAAM,IAAIt7H,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC2qH,MAAM,CAACv7H,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEtD,IAAMw7H,KAAK,GAAG,IAAI,CAACF,MAAM,CAAEt7H,CAAC,CAAE;UAC9BqiB,IAAI,CAACi5G,MAAM,CAAC97H,IAAI,CAAEg8H,KAAK,CAAC/4G,MAAM,EAAE,CAAE;QAEnC;QAEA,OAAOJ,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAA+lF,SAAA,CAAAthI,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAACqO,SAAS,GAAGrO,IAAI,CAACqO,SAAS;QAC/B,IAAI,CAACD,MAAM,GAAG,EAAE;QAEhB,KAAM,IAAIt7H,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGu8G,IAAI,CAACoO,MAAM,CAACv7H,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEtD,IAAMw7H,KAAK,GAAGtO,IAAI,CAACoO,MAAM,CAAEt7H,CAAC,CAAE;UAC9B,IAAI,CAACs7H,MAAM,CAAC97H,IAAI,CAAE,IAAIw7H,MAAM,CAAEQ,KAAK,CAACx/H,IAAI,CAAE,EAAE,CAACumD,QAAQ,CAAEi5E,KAAK,CAAE,CAAE;QAEjE;QAEA,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAN,SAAA;EAAA,EA9OsB9H,KAAK;EAAA,IAkPvB+I,IAAI,0BAAAC,UAAA;IAAA74G,SAAA,CAAA44G,IAAA,EAAAC,UAAA;IAAA,IAAAC,QAAA,GAAA54G,YAAA,CAAA04G,IAAA;IAET,SAAAA,KAAa7oG,MAAM,EAAG;MAAA,IAAAgpG,OAAA;MAAA/5H,eAAA,OAAA45H,IAAA;MAErBG,OAAA,GAAAD,QAAA,CAAApgI,IAAA;MAEAqgI,OAAA,CAAKtgI,IAAI,GAAG,MAAM;MAElBsgI,OAAA,CAAKC,YAAY,GAAG,IAAItmH,OAAO,EAAE;MAEjC,IAAKqd,MAAM,EAAG;QAEbgpG,OAAA,CAAKjpG,aAAa,CAAEC,MAAM,CAAE;MAE7B;MAAC,OAAAgpG,OAAA;IAEF;IAACv5H,YAAA,CAAAo5H,IAAA;MAAAliI,GAAA;MAAAE,KAAA,EAED,SAAAk5B,cAAeC,MAAM,EAAG;QAEvB,IAAI,CAACkpG,MAAM,CAAElpG,MAAM,CAAE,CAAC,CAAE,CAACrhB,CAAC,EAAEqhB,MAAM,CAAE,CAAC,CAAE,CAAC/gB,CAAC,CAAE;QAE3C,KAAM,IAAIvS,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG2iB,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEjD,IAAI,CAACy8H,MAAM,CAAEnpG,MAAM,CAAEtzB,CAAC,CAAE,CAACiS,CAAC,EAAEqhB,MAAM,CAAEtzB,CAAC,CAAE,CAACuS,CAAC,CAAE;QAE5C;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAqiI,OAAQvqH,CAAC,EAAEM,CAAC,EAAG;QAEd,IAAI,CAACgqH,YAAY,CAAChnH,GAAG,CAAEtD,CAAC,EAAEM,CAAC,CAAE,CAAC,CAAC;;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAsiI,OAAQxqH,CAAC,EAAEM,CAAC,EAAG;QAEd,IAAMipH,KAAK,GAAG,IAAIjC,SAAS,CAAE,IAAI,CAACgD,YAAY,CAAC5lH,KAAK,EAAE,EAAE,IAAIV,OAAO,CAAEhE,CAAC,EAAEM,CAAC,CAAE,CAAE;QAC7E,IAAI,CAAC+oH,MAAM,CAAC97H,IAAI,CAAEg8H,KAAK,CAAE;QAEzB,IAAI,CAACe,YAAY,CAAChnH,GAAG,CAAEtD,CAAC,EAAEM,CAAC,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAuiI,iBAAkBC,IAAI,EAAEC,IAAI,EAAEjH,EAAE,EAAEC,EAAE,EAAG;QAEtC,IAAM4F,KAAK,GAAG,IAAIvB,oBAAoB,CACrC,IAAI,CAACsC,YAAY,CAAC5lH,KAAK,EAAE,EACzB,IAAIV,OAAO,CAAE0mH,IAAI,EAAEC,IAAI,CAAE,EACzB,IAAI3mH,OAAO,CAAE0/G,EAAE,EAAEC,EAAE,CAAE,CACrB;QAED,IAAI,CAAC0F,MAAM,CAAC97H,IAAI,CAAEg8H,KAAK,CAAE;QAEzB,IAAI,CAACe,YAAY,CAAChnH,GAAG,CAAEogH,EAAE,EAAEC,EAAE,CAAE;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAA37H,GAAA;MAAAE,KAAA,EAED,SAAA0iI,cAAeC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEtH,EAAE,EAAEC,EAAE,EAAG;QAEnD,IAAM4F,KAAK,GAAG,IAAI3C,gBAAgB,CACjC,IAAI,CAAC0D,YAAY,CAAC5lH,KAAK,EAAE,EACzB,IAAIV,OAAO,CAAE6mH,KAAK,EAAEC,KAAK,CAAE,EAC3B,IAAI9mH,OAAO,CAAE+mH,KAAK,EAAEC,KAAK,CAAE,EAC3B,IAAIhnH,OAAO,CAAE0/G,EAAE,EAAEC,EAAE,CAAE,CACrB;QAED,IAAI,CAAC0F,MAAM,CAAC97H,IAAI,CAAEg8H,KAAK,CAAE;QAEzB,IAAI,CAACe,YAAY,CAAChnH,GAAG,CAAEogH,EAAE,EAAEC,EAAE,CAAE;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAA37H,GAAA;MAAAE,KAAA,EAED,SAAA+iI,WAAYhB,GAAG,CAAC,qBAAsB;QAErC,IAAMiB,IAAI,GAAG,CAAE,IAAI,CAACZ,YAAY,CAAC5lH,KAAK,EAAE,CAAE,CAACmK,MAAM,CAAEo7G,GAAG,CAAE;QAExD,IAAMV,KAAK,GAAG,IAAIb,WAAW,CAAEwC,IAAI,CAAE;QACrC,IAAI,CAAC7B,MAAM,CAAC97H,IAAI,CAAEg8H,KAAK,CAAE;QAEzB,IAAI,CAACe,YAAY,CAAC3lH,IAAI,CAAEslH,GAAG,CAAEA,GAAG,CAACn8H,MAAM,GAAG,CAAC,CAAE,CAAE;QAE/C,OAAO,IAAI;MAEZ;IAAC;MAAA9F,GAAA;MAAAE,KAAA,EAED,SAAAijI,IAAKzH,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;QAE1D,IAAMvnG,EAAE,GAAG,IAAI,CAAC6tG,YAAY,CAACtqH,CAAC;QAC9B,IAAM0c,EAAE,GAAG,IAAI,CAAC4tG,YAAY,CAAChqH,CAAC;QAE9B,IAAI,CAAC8qH,MAAM,CAAE1H,EAAE,GAAGjnG,EAAE,EAAEknG,EAAE,GAAGjnG,EAAE,EAAEgoG,OAAO,EACrCZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,CAAE;QAErC,OAAO,IAAI;MAEZ;IAAC;MAAAh8H,GAAA;MAAAE,KAAA,EAED,SAAAkjI,OAAQ1H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;QAE7D,IAAI,CAACqH,UAAU,CAAE3H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEA,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,CAAE;QAE/E,OAAO,IAAI;MAEZ;IAAC;MAAAh8H,GAAA;MAAAE,KAAA,EAED,SAAAojI,QAAS5H,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAG;QAElF,IAAMxnG,EAAE,GAAG,IAAI,CAAC6tG,YAAY,CAACtqH,CAAC;QAC9B,IAAM0c,EAAE,GAAG,IAAI,CAAC4tG,YAAY,CAAChqH,CAAC;QAE9B,IAAI,CAAC+qH,UAAU,CAAE3H,EAAE,GAAGjnG,EAAE,EAAEknG,EAAE,GAAGjnG,EAAE,EAAEknG,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,CAAE;QAEpG,OAAO,IAAI;MAEZ;IAAC;MAAAj8H,GAAA;MAAAE,KAAA,EAED,SAAAmjI,WAAY3H,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAG;QAErF,IAAMsF,KAAK,GAAG,IAAIhG,YAAY,CAAEG,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,CAAE;QAEzG,IAAK,IAAI,CAACoF,MAAM,CAACv7H,MAAM,GAAG,CAAC,EAAG;UAE7B;UACA,IAAMy9H,UAAU,GAAGhC,KAAK,CAAClI,QAAQ,CAAE,CAAC,CAAE;UAEtC,IAAK,CAAEkK,UAAU,CAACjkH,MAAM,CAAE,IAAI,CAACgjH,YAAY,CAAE,EAAG;YAE/C,IAAI,CAACE,MAAM,CAAEe,UAAU,CAACvrH,CAAC,EAAEurH,UAAU,CAACjrH,CAAC,CAAE;UAE1C;QAED;QAEA,IAAI,CAAC+oH,MAAM,CAAC97H,IAAI,CAAEg8H,KAAK,CAAE;QAEzB,IAAMiC,SAAS,GAAGjC,KAAK,CAAClI,QAAQ,CAAE,CAAC,CAAE;QACrC,IAAI,CAACiJ,YAAY,CAAC3lH,IAAI,CAAE6mH,SAAS,CAAE;QAEnC,OAAO,IAAI;MAEZ;IAAC;MAAAxjI,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAgnF,IAAA,CAAAviI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+3G,YAAY,CAAC3lH,IAAI,CAAE4N,MAAM,CAAC+3G,YAAY,CAAE;QAE7C,OAAO,IAAI;MAEZ;IAAC;MAAAtiI,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAgnF,IAAA,CAAAviI,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACk6G,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC7iH,OAAO,EAAE;QAE/C,OAAO2I,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAAgnF,IAAA,CAAAviI,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAACqP,YAAY,CAAC/iH,SAAS,CAAE0zG,IAAI,CAACqP,YAAY,CAAE;QAEhD,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAJ,IAAA;EAAA,EAtLiBjB,SAAS;EAAA,IA0LtBwC,aAAa,0BAAAC,gBAAA;IAAAp6G,SAAA,CAAAm6G,aAAA,EAAAC,gBAAA;IAAA,IAAAC,QAAA,GAAAn6G,YAAA,CAAAi6G,aAAA;IAElB,SAAAA,cAAapqG,MAAM,GAAG,CAAE,IAAIrd,OAAO,CAAE,CAAC,EAAE,CAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,GAAG,CAAE,CAAE,EAAEg/G,QAAQ,GAAG,EAAE,EAAE4I,QAAQ,GAAG,CAAC,EAAEC,SAAS,GAAG/sH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;MAAA,IAAA+sH,OAAA;MAAAx7H,eAAA,OAAAm7H,aAAA;MAEvJK,OAAA,GAAAH,QAAA,CAAA3hI,IAAA;MAEA8hI,OAAA,CAAK/hI,IAAI,GAAG,eAAe;MAE3B+hI,OAAA,CAAKx2F,UAAU,GAAG;QACjBjU,MAAM,EAAEA,MAAM;QACd2hG,QAAQ,EAAEA,QAAQ;QAClB4I,QAAQ,EAAEA,QAAQ;QAClBC,SAAS,EAAEA;MACZ,CAAC;MAED7I,QAAQ,GAAGlkH,IAAI,CAACsC,KAAK,CAAE4hH,QAAQ,CAAE;;MAEjC;;MAEA6I,SAAS,GAAGpsH,KAAK,CAAEosH,SAAS,EAAE,CAAC,EAAE/sH,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;;MAE9C;;MAEA,IAAM0qC,OAAO,GAAG,EAAE;MAClB,IAAM4F,QAAQ,GAAG,EAAE;MACnB,IAAMzF,GAAG,GAAG,EAAE;MACd,IAAMmiF,WAAW,GAAG,EAAE;MACtB,IAAMpiF,OAAO,GAAG,EAAE;;MAElB;;MAEA,IAAMqiF,eAAe,GAAG,GAAG,GAAGhJ,QAAQ;MACtC,IAAMljC,MAAM,GAAG,IAAIxiE,OAAO,EAAE;MAC5B,IAAMxJ,EAAE,GAAG,IAAI9P,OAAO,EAAE;MACxB,IAAM2b,MAAM,GAAG,IAAIrC,OAAO,EAAE;MAC5B,IAAM2uG,SAAS,GAAG,IAAI3uG,OAAO,EAAE;MAC/B,IAAM4uG,UAAU,GAAG,IAAI5uG,OAAO,EAAE;MAChC,IAAIxW,EAAE,GAAG,CAAC;MACV,IAAIC,EAAE,GAAG,CAAC;;MAEV;;MAEA,KAAM,IAAI4d,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAMtD,MAAM,CAACvzB,MAAM,GAAG,CAAG,EAAE62B,CAAC,EAAG,EAAG;QAEnD,QAASA,CAAC;UAET,KAAK,CAAC;YAAK;;YAEV7d,EAAE,GAAGua,MAAM,CAAEsD,CAAC,GAAG,CAAC,CAAE,CAAC3kB,CAAC,GAAGqhB,MAAM,CAAEsD,CAAC,CAAE,CAAC3kB,CAAC;YACtC+G,EAAE,GAAGsa,MAAM,CAAEsD,CAAC,GAAG,CAAC,CAAE,CAACrkB,CAAC,GAAG+gB,MAAM,CAAEsD,CAAC,CAAE,CAACrkB,CAAC;YAEtCqf,MAAM,CAAC3f,CAAC,GAAG+G,EAAE,GAAG,GAAG;YACnB4Y,MAAM,CAACrf,CAAC,GAAG,CAAEwG,EAAE;YACf6Y,MAAM,CAAC1L,CAAC,GAAGlN,EAAE,GAAG,GAAG;YAEnBmlH,UAAU,CAACvnH,IAAI,CAAEgb,MAAM,CAAE;YAEzBA,MAAM,CAAC9b,SAAS,EAAE;YAElBkoH,WAAW,CAACx+H,IAAI,CAAEoyB,MAAM,CAAC3f,CAAC,EAAE2f,MAAM,CAACrf,CAAC,EAAEqf,MAAM,CAAC1L,CAAC,CAAE;YAEhD;UAED,KAAOoN,MAAM,CAACvzB,MAAM,GAAG,CAAC;YAAI;;YAE3Bi+H,WAAW,CAACx+H,IAAI,CAAE2+H,UAAU,CAAClsH,CAAC,EAAEksH,UAAU,CAAC5rH,CAAC,EAAE4rH,UAAU,CAACj4G,CAAC,CAAE;YAE5D;UAED;YAAW;;YAEVnN,EAAE,GAAGua,MAAM,CAAEsD,CAAC,GAAG,CAAC,CAAE,CAAC3kB,CAAC,GAAGqhB,MAAM,CAAEsD,CAAC,CAAE,CAAC3kB,CAAC;YACtC+G,EAAE,GAAGsa,MAAM,CAAEsD,CAAC,GAAG,CAAC,CAAE,CAACrkB,CAAC,GAAG+gB,MAAM,CAAEsD,CAAC,CAAE,CAACrkB,CAAC;YAEtCqf,MAAM,CAAC3f,CAAC,GAAG+G,EAAE,GAAG,GAAG;YACnB4Y,MAAM,CAACrf,CAAC,GAAG,CAAEwG,EAAE;YACf6Y,MAAM,CAAC1L,CAAC,GAAGlN,EAAE,GAAG,GAAG;YAEnBklH,SAAS,CAACtnH,IAAI,CAAEgb,MAAM,CAAE;YAExBA,MAAM,CAAC3f,CAAC,IAAIksH,UAAU,CAAClsH,CAAC;YACxB2f,MAAM,CAACrf,CAAC,IAAI4rH,UAAU,CAAC5rH,CAAC;YACxBqf,MAAM,CAAC1L,CAAC,IAAIi4G,UAAU,CAACj4G,CAAC;YAExB0L,MAAM,CAAC9b,SAAS,EAAE;YAElBkoH,WAAW,CAACx+H,IAAI,CAAEoyB,MAAM,CAAC3f,CAAC,EAAE2f,MAAM,CAACrf,CAAC,EAAEqf,MAAM,CAAC1L,CAAC,CAAE;YAEhDi4G,UAAU,CAACvnH,IAAI,CAAEsnH,SAAS,CAAE;QAAC;MAIhC;;MAEA;;MAEA,KAAM,IAAIl+H,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIi1H,QAAQ,EAAEj1H,CAAC,EAAG,EAAG;QAEtC,IAAMiyB,GAAG,GAAG4rG,QAAQ,GAAG79H,CAAC,GAAGi+H,eAAe,GAAGH,SAAS;QAEtD,IAAMhpH,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAEmd,GAAG,CAAE;QAC3B,IAAMpd,GAAG,GAAG9D,IAAI,CAAC8D,GAAG,CAAEod,GAAG,CAAE;QAE3B,KAAM,IAAI2E,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAMtD,MAAM,CAACvzB,MAAM,GAAG,CAAG,EAAE62B,GAAC,EAAG,EAAG;UAEnD;;UAEAm7D,MAAM,CAAC9/E,CAAC,GAAGqhB,MAAM,CAAEsD,GAAC,CAAE,CAAC3kB,CAAC,GAAG6C,GAAG;UAC9Bi9E,MAAM,CAACx/E,CAAC,GAAG+gB,MAAM,CAAEsD,GAAC,CAAE,CAACrkB,CAAC;UACxBw/E,MAAM,CAAC7rE,CAAC,GAAGoN,MAAM,CAAEsD,GAAC,CAAE,CAAC3kB,CAAC,GAAG4C,GAAG;UAE9BysC,QAAQ,CAAC9hD,IAAI,CAAEuyF,MAAM,CAAC9/E,CAAC,EAAE8/E,MAAM,CAACx/E,CAAC,EAAEw/E,MAAM,CAAC7rE,CAAC,CAAE;;UAE7C;;UAEAH,EAAE,CAAC9T,CAAC,GAAGjS,CAAC,GAAGi1H,QAAQ;UACnBlvG,EAAE,CAACxT,CAAC,GAAGqkB,GAAC,IAAKtD,MAAM,CAACvzB,MAAM,GAAG,CAAC,CAAE;UAEhC87C,GAAG,CAACr8C,IAAI,CAAEumB,EAAE,CAAC9T,CAAC,EAAE8T,EAAE,CAACxT,CAAC,CAAE;;UAEtB;;UAEA,IAAMN,CAAC,GAAG+rH,WAAW,CAAE,CAAC,GAAGpnG,GAAC,GAAG,CAAC,CAAE,GAAG9hB,GAAG;UACxC,IAAMvC,CAAC,GAAGyrH,WAAW,CAAE,CAAC,GAAGpnG,GAAC,GAAG,CAAC,CAAE;UAClC,IAAM1Q,CAAC,GAAG83G,WAAW,CAAE,CAAC,GAAGpnG,GAAC,GAAG,CAAC,CAAE,GAAG/hB,GAAG;UAExC+mC,OAAO,CAACp8C,IAAI,CAAEyS,CAAC,EAAEM,CAAC,EAAE2T,CAAC,CAAE;QAExB;MAED;;MAEA;;MAEA,KAAM,IAAIlmB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGi1H,QAAQ,EAAEj1H,IAAC,EAAG,EAAG;QAErC,KAAM,IAAI42B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAKtD,MAAM,CAACvzB,MAAM,GAAG,CAAG,EAAE62B,GAAC,EAAG,EAAG;UAElD,IAAMwnG,IAAI,GAAGxnG,GAAC,GAAG52B,IAAC,GAAGszB,MAAM,CAACvzB,MAAM;UAElC,IAAM0U,CAAC,GAAG2pH,IAAI;UACd,IAAM1pH,CAAC,GAAG0pH,IAAI,GAAG9qG,MAAM,CAACvzB,MAAM;UAC9B,IAAM4U,CAAC,GAAGypH,IAAI,GAAG9qG,MAAM,CAACvzB,MAAM,GAAG,CAAC;UAClC,IAAM+c,CAAC,GAAGshH,IAAI,GAAG,CAAC;;UAElB;;UAEA1iF,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;UACvB4+B,OAAO,CAACl8C,IAAI,CAAEmV,CAAC,EAAEmI,CAAC,EAAEpI,CAAC,CAAE;QAExB;MAED;;MAEA;;MAEAqpH,OAAA,CAAKrjF,QAAQ,CAAEgB,OAAO,CAAE;MACxBqiF,OAAA,CAAKnjF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1Ey8E,OAAA,CAAKnjF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;MAC/DkiF,OAAA,CAAKnjF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MAAC,OAAAmiF,OAAA;IAEzE;IAACh7H,YAAA,CAAA26H,aAAA;MAAAzjI,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAuoF,aAAA,CAAA9jI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAIq7G,aAAa,CAAEr7G,IAAI,CAACiR,MAAM,EAAEjR,IAAI,CAAC4yG,QAAQ,EAAE5yG,IAAI,CAACw7G,QAAQ,EAAEx7G,IAAI,CAACy7G,SAAS,CAAE;MAEtF;IAAC;IAAA,OAAAJ,aAAA;EAAA,EAjL0B5jF,cAAc;EAAA,IAqLpCukF,eAAe,0BAAAC,cAAA;IAAA/6G,SAAA,CAAA86G,eAAA,EAAAC,cAAA;IAAA,IAAAC,QAAA,GAAA96G,YAAA,CAAA46G,eAAA;IAEpB,SAAAA,gBAAarsG,MAAM,GAAG,CAAC,EAAEjyB,MAAM,GAAG,CAAC,EAAEy+H,WAAW,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAG;MAAA,IAAAC,OAAA;MAAAn8H,eAAA,OAAA87H,eAAA;MAE1E,IAAMzjD,IAAI,GAAG,IAAIuhD,IAAI,EAAE;MACvBvhD,IAAI,CAACyiD,MAAM,CAAE,CAAC,EAAE,CAAEt9H,MAAM,GAAG,CAAC,EAAEiyB,MAAM,EAAEjhB,IAAI,CAACC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAE;MACxD4pE,IAAI,CAACyiD,MAAM,CAAE,CAAC,EAAEt9H,MAAM,GAAG,CAAC,EAAEiyB,MAAM,EAAE,CAAC,EAAEjhB,IAAI,CAACC,EAAE,GAAG,GAAG,CAAE;MAEtD0tH,OAAA,GAAAH,QAAA,CAAAtiI,IAAA,OAAO2+E,IAAI,CAAC84C,SAAS,CAAE8K,WAAW,CAAE,EAAEC,cAAc;MAEpDC,OAAA,CAAK1iI,IAAI,GAAG,iBAAiB;MAE7B0iI,OAAA,CAAKn3F,UAAU,GAAG;QACjBvV,MAAM,EAAEA,MAAM;QACdtQ,MAAM,EAAE3hB,MAAM;QACdy+H,WAAW,EAAEA,WAAW;QACxBC,cAAc,EAAEA;MACjB,CAAC;MAAC,OAAAC,OAAA;IAEH;IAAC37H,YAAA,CAAAs7H,eAAA;MAAApkI,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAIg8G,eAAe,CAAEh8G,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAACtiB,MAAM,EAAEsiB,IAAI,CAACm8G,WAAW,EAAEn8G,IAAI,CAACo8G,cAAc,CAAE;MAE9F;IAAC;IAAA,OAAAJ,eAAA;EAAA,EAzB4BX,aAAa;EAAA,IA6BrCiB,cAAc,0BAAAC,gBAAA;IAAAr7G,SAAA,CAAAo7G,cAAA,EAAAC,gBAAA;IAAA,IAAAC,QAAA,GAAAp7G,YAAA,CAAAk7G,cAAA;IAEnB,SAAAA,eAAa3sG,MAAM,GAAG,CAAC,EAAEijG,QAAQ,GAAG,EAAE,EAAE6J,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGhuH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;MAAA,IAAAguH,OAAA;MAAAz8H,eAAA,OAAAo8H,cAAA;MAEnFK,OAAA,GAAAH,QAAA,CAAA5iI,IAAA;MAEA+iI,OAAA,CAAKhjI,IAAI,GAAG,gBAAgB;MAE5BgjI,OAAA,CAAKz3F,UAAU,GAAG;QACjBvV,MAAM,EAAEA,MAAM;QACdijG,QAAQ,EAAEA,QAAQ;QAClB6J,UAAU,EAAEA,UAAU;QACtBC,WAAW,EAAEA;MACd,CAAC;MAED9J,QAAQ,GAAGlkH,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEqjH,QAAQ,CAAE;;MAElC;;MAEA,IAAMv5E,OAAO,GAAG,EAAE;MAClB,IAAM4F,QAAQ,GAAG,EAAE;MACnB,IAAM1F,OAAO,GAAG,EAAE;MAClB,IAAMC,GAAG,GAAG,EAAE;;MAEd;;MAEA,IAAMk2C,MAAM,GAAG,IAAIxiE,OAAO,EAAE;MAC5B,IAAMxJ,EAAE,GAAG,IAAI9P,OAAO,EAAE;;MAExB;;MAEAqrC,QAAQ,CAAC9hD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACxBo8C,OAAO,CAACp8C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACvBq8C,GAAG,CAACr8C,IAAI,CAAE,GAAG,EAAE,GAAG,CAAE;MAEpB,KAAM,IAAIkU,CAAC,GAAG,CAAC,EAAE1T,CAAC,GAAG,CAAC,EAAE0T,CAAC,IAAIuhH,QAAQ,EAAEvhH,CAAC,EAAG,EAAE1T,CAAC,IAAI,CAAC,EAAG;QAErD,IAAMi/H,OAAO,GAAGH,UAAU,GAAGprH,CAAC,GAAGuhH,QAAQ,GAAG8J,WAAW;;QAEvD;;QAEAhtC,MAAM,CAAC9/E,CAAC,GAAG+f,MAAM,GAAGjhB,IAAI,CAAC8D,GAAG,CAAEoqH,OAAO,CAAE;QACvCltC,MAAM,CAACx/E,CAAC,GAAGyf,MAAM,GAAGjhB,IAAI,CAAC+D,GAAG,CAAEmqH,OAAO,CAAE;QAEvC39E,QAAQ,CAAC9hD,IAAI,CAAEuyF,MAAM,CAAC9/E,CAAC,EAAE8/E,MAAM,CAACx/E,CAAC,EAAEw/E,MAAM,CAAC7rE,CAAC,CAAE;;QAE7C;;QAEA01B,OAAO,CAACp8C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;;QAEvB;;QAEAumB,EAAE,CAAC9T,CAAC,GAAG,CAAEqvC,QAAQ,CAAEthD,CAAC,CAAE,GAAGgyB,MAAM,GAAG,CAAC,IAAK,CAAC;QACzCjM,EAAE,CAACxT,CAAC,GAAG,CAAE+uC,QAAQ,CAAEthD,CAAC,GAAG,CAAC,CAAE,GAAGgyB,MAAM,GAAG,CAAC,IAAK,CAAC;QAE7C6pB,GAAG,CAACr8C,IAAI,CAAEumB,EAAE,CAAC9T,CAAC,EAAE8T,EAAE,CAACxT,CAAC,CAAE;MAEvB;;MAEA;;MAEA,KAAM,IAAIvS,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIi1H,QAAQ,EAAEj1H,IAAC,EAAG,EAAG;QAEtC07C,OAAO,CAACl8C,IAAI,CAAEQ,IAAC,EAAEA,IAAC,GAAG,CAAC,EAAE,CAAC,CAAE;MAE5B;;MAEA;;MAEAg/H,OAAA,CAAKtkF,QAAQ,CAAEgB,OAAO,CAAE;MACxBsjF,OAAA,CAAKpkF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1E09E,OAAA,CAAKpkF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MACvEojF,OAAA,CAAKpkF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;MAAC,OAAAmjF,OAAA;IAEjE;IAACj8H,YAAA,CAAA47H,cAAA;MAAA1kI,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAwpF,cAAA,CAAA/kI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAIs8G,cAAc,CAAEt8G,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAAC4yG,QAAQ,EAAE5yG,IAAI,CAACy8G,UAAU,EAAEz8G,IAAI,CAAC08G,WAAW,CAAE;MAE3F;IAAC;IAAA,OAAAJ,cAAA;EAAA,EA1F2B7kF,cAAc;EAAA,IA8FrColF,gBAAgB,0BAAAC,gBAAA;IAAA57G,SAAA,CAAA27G,gBAAA,EAAAC,gBAAA;IAAA,IAAAC,QAAA,GAAA37G,YAAA,CAAAy7G,gBAAA;IAErB,SAAAA,iBAAaG,SAAS,GAAG,CAAC,EAAEC,YAAY,GAAG,CAAC,EAAE59G,MAAM,GAAG,CAAC,EAAE+8G,cAAc,GAAG,EAAE,EAAEv9E,cAAc,GAAG,CAAC,EAAEq+E,SAAS,GAAG,KAAK,EAAET,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGhuH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;MAAA,IAAAwuH,OAAA;MAAAj9H,eAAA,OAAA28H,gBAAA;MAEjKM,OAAA,GAAAJ,QAAA,CAAAnjI,IAAA;MAEAujI,OAAA,CAAKxjI,IAAI,GAAG,kBAAkB;MAE9BwjI,OAAA,CAAKj4F,UAAU,GAAG;QACjB83F,SAAS,EAAEA,SAAS;QACpBC,YAAY,EAAEA,YAAY;QAC1B59G,MAAM,EAAEA,MAAM;QACd+8G,cAAc,EAAEA,cAAc;QAC9Bv9E,cAAc,EAAEA,cAAc;QAC9Bq+E,SAAS,EAAEA,SAAS;QACpBT,UAAU,EAAEA,UAAU;QACtBC,WAAW,EAAEA;MACd,CAAC;MAED,IAAM19E,KAAK,GAAA98B,sBAAA,CAAAi7G,OAAA,CAAO;MAElBf,cAAc,GAAG1tH,IAAI,CAACsC,KAAK,CAAEorH,cAAc,CAAE;MAC7Cv9E,cAAc,GAAGnwC,IAAI,CAACsC,KAAK,CAAE6tC,cAAc,CAAE;;MAE7C;;MAEA,IAAMxF,OAAO,GAAG,EAAE;MAClB,IAAM4F,QAAQ,GAAG,EAAE;MACnB,IAAM1F,OAAO,GAAG,EAAE;MAClB,IAAMC,GAAG,GAAG,EAAE;;MAEd;;MAEA,IAAIvrC,KAAK,GAAG,CAAC;MACb,IAAMmvH,UAAU,GAAG,EAAE;MACrB,IAAMhyC,UAAU,GAAG/rE,MAAM,GAAG,CAAC;MAC7B,IAAI8/B,UAAU,GAAG,CAAC;;MAElB;;MAEAk+E,aAAa,EAAE;MAEf,IAAKH,SAAS,KAAK,KAAK,EAAG;QAE1B,IAAKF,SAAS,GAAG,CAAC,EAAGM,WAAW,CAAE,IAAI,CAAE;QACxC,IAAKL,YAAY,GAAG,CAAC,EAAGK,WAAW,CAAE,KAAK,CAAE;MAE7C;;MAEA;;MAEAH,OAAA,CAAK9kF,QAAQ,CAAEgB,OAAO,CAAE;MACxB8jF,OAAA,CAAK5kF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1Ek+E,OAAA,CAAK5kF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MACvE4jF,OAAA,CAAK5kF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;MAE/D,SAAS6jF,aAAaA,CAAA,EAAG;QAExB,IAAM9tG,MAAM,GAAG,IAAIrC,OAAO,EAAE;QAC5B,IAAMwiE,MAAM,GAAG,IAAIxiE,OAAO,EAAE;QAE5B,IAAI+yB,UAAU,GAAG,CAAC;;QAElB;QACA,IAAMs9E,KAAK,GAAG,CAAEN,YAAY,GAAGD,SAAS,IAAK39G,MAAM;;QAEnD;;QAEA,KAAM,IAAInP,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI2uC,cAAc,EAAE3uC,CAAC,EAAG,EAAG;UAE5C,IAAMstH,QAAQ,GAAG,EAAE;UAEnB,IAAMhpH,CAAC,GAAGtE,CAAC,GAAG2uC,cAAc;;UAE5B;;UAEA,IAAMlvB,MAAM,GAAGnb,CAAC,IAAKyoH,YAAY,GAAGD,SAAS,CAAE,GAAGA,SAAS;UAE3D,KAAM,IAAIptH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIwsH,cAAc,EAAExsH,CAAC,EAAG,EAAG;YAE5C,IAAM0gB,CAAC,GAAG1gB,CAAC,GAAGwsH,cAAc;YAE5B,IAAM9lH,KAAK,GAAGga,CAAC,GAAGosG,WAAW,GAAGD,UAAU;YAE1C,IAAMgB,QAAQ,GAAG/uH,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;YAClC,IAAMonH,QAAQ,GAAGhvH,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;;YAElC;;YAEAo5E,MAAM,CAAC9/E,CAAC,GAAG+f,MAAM,GAAG8tG,QAAQ;YAC5B/tC,MAAM,CAACx/E,CAAC,GAAG,CAAEsE,CAAC,GAAG6K,MAAM,GAAG+rE,UAAU;YACpCsE,MAAM,CAAC7rE,CAAC,GAAG8L,MAAM,GAAG+tG,QAAQ;YAC5Bz+E,QAAQ,CAAC9hD,IAAI,CAAEuyF,MAAM,CAAC9/E,CAAC,EAAE8/E,MAAM,CAACx/E,CAAC,EAAEw/E,MAAM,CAAC7rE,CAAC,CAAE;;YAE7C;;YAEA0L,MAAM,CAACrc,GAAG,CAAEuqH,QAAQ,EAAEF,KAAK,EAAEG,QAAQ,CAAE,CAACjqH,SAAS,EAAE;YACnD8lC,OAAO,CAACp8C,IAAI,CAAEoyB,MAAM,CAAC3f,CAAC,EAAE2f,MAAM,CAACrf,CAAC,EAAEqf,MAAM,CAAC1L,CAAC,CAAE;;YAE5C;;YAEA21B,GAAG,CAACr8C,IAAI,CAAEmzB,CAAC,EAAE,CAAC,GAAG9b,CAAC,CAAE;;YAEpB;;YAEAgpH,QAAQ,CAACrgI,IAAI,CAAE8Q,KAAK,EAAG,CAAE;UAE1B;;UAEA;;UAEAmvH,UAAU,CAACjgI,IAAI,CAAEqgI,QAAQ,CAAE;QAE5B;;QAEA;;QAEA,KAAM,IAAI5tH,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGwsH,cAAc,EAAExsH,GAAC,EAAG,EAAG;UAE3C,KAAM,IAAIM,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG2uC,cAAc,EAAE3uC,GAAC,EAAG,EAAG;YAE3C;;YAEA,IAAMkC,CAAC,GAAGgrH,UAAU,CAAEltH,GAAC,CAAE,CAAEN,GAAC,CAAE;YAC9B,IAAMyC,CAAC,GAAG+qH,UAAU,CAAEltH,GAAC,GAAG,CAAC,CAAE,CAAEN,GAAC,CAAE;YAClC,IAAM0C,CAAC,GAAG8qH,UAAU,CAAEltH,GAAC,GAAG,CAAC,CAAE,CAAEN,GAAC,GAAG,CAAC,CAAE;YACtC,IAAM6K,CAAC,GAAG2iH,UAAU,CAAEltH,GAAC,CAAE,CAAEN,GAAC,GAAG,CAAC,CAAE;;YAElC;;YAEAypC,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;YACvB4+B,OAAO,CAACl8C,IAAI,CAAEkV,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;;YAEvB;;YAEAwlC,UAAU,IAAI,CAAC;UAEhB;QAED;;QAEA;;QAEAjB,KAAK,CAACtG,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAE,CAAC,CAAE;;QAE3C;;QAEAd,UAAU,IAAIc,UAAU;MAEzB;MAEA,SAASq9E,WAAWA,CAAEhgG,GAAG,EAAG;QAE3B;QACA,IAAMqgG,gBAAgB,GAAG1vH,KAAK;QAE9B,IAAMyV,EAAE,GAAG,IAAI9P,OAAO,EAAE;QACxB,IAAM87E,MAAM,GAAG,IAAIxiE,OAAO,EAAE;QAE5B,IAAI+yB,UAAU,GAAG,CAAC;QAElB,IAAMtwB,MAAM,GAAK2N,GAAG,KAAK,IAAI,GAAK0/F,SAAS,GAAGC,YAAY;QAC1D,IAAM1kG,IAAI,GAAK+E,GAAG,KAAK,IAAI,GAAK,CAAC,GAAG,CAAE,CAAC;;QAEvC;QACA;QACA;;QAEA,KAAM,IAAI1tB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIwsH,cAAc,EAAExsH,CAAC,EAAG,EAAG;UAE5C;;UAEAqvC,QAAQ,CAAC9hD,IAAI,CAAE,CAAC,EAAEiuF,UAAU,GAAG7yD,IAAI,EAAE,CAAC,CAAE;;UAExC;;UAEAghB,OAAO,CAACp8C,IAAI,CAAE,CAAC,EAAEo7B,IAAI,EAAE,CAAC,CAAE;;UAE1B;;UAEAihB,GAAG,CAACr8C,IAAI,CAAE,GAAG,EAAE,GAAG,CAAE;;UAEpB;;UAEA8Q,KAAK,EAAG;QAET;;QAEA;QACA,IAAM2vH,cAAc,GAAG3vH,KAAK;;QAE5B;;QAEA,KAAM,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAIwsH,cAAc,EAAExsH,GAAC,EAAG,EAAG;UAE5C,IAAM0gB,CAAC,GAAG1gB,GAAC,GAAGwsH,cAAc;UAC5B,IAAM9lH,KAAK,GAAGga,CAAC,GAAGosG,WAAW,GAAGD,UAAU;UAE1C,IAAMiB,QAAQ,GAAGhvH,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;UAClC,IAAMmnH,QAAQ,GAAG/uH,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;;UAElC;;UAEAo5E,MAAM,CAAC9/E,CAAC,GAAG+f,MAAM,GAAG8tG,QAAQ;UAC5B/tC,MAAM,CAACx/E,CAAC,GAAGk7E,UAAU,GAAG7yD,IAAI;UAC5Bm3D,MAAM,CAAC7rE,CAAC,GAAG8L,MAAM,GAAG+tG,QAAQ;UAC5Bz+E,QAAQ,CAAC9hD,IAAI,CAAEuyF,MAAM,CAAC9/E,CAAC,EAAE8/E,MAAM,CAACx/E,CAAC,EAAEw/E,MAAM,CAAC7rE,CAAC,CAAE;;UAE7C;;UAEA01B,OAAO,CAACp8C,IAAI,CAAE,CAAC,EAAEo7B,IAAI,EAAE,CAAC,CAAE;;UAE1B;;UAEA7U,EAAE,CAAC9T,CAAC,GAAK8tH,QAAQ,GAAG,GAAG,GAAK,GAAG;UAC/Bh6G,EAAE,CAACxT,CAAC,GAAKutH,QAAQ,GAAG,GAAG,GAAGllG,IAAI,GAAK,GAAG;UACtCihB,GAAG,CAACr8C,IAAI,CAAEumB,EAAE,CAAC9T,CAAC,EAAE8T,EAAE,CAACxT,CAAC,CAAE;;UAEtB;;UAEAjC,KAAK,EAAG;QAET;;QAEA;;QAEA,KAAM,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGwsH,cAAc,EAAExsH,GAAC,EAAG,EAAG;UAE3C,IAAM0C,CAAC,GAAGqrH,gBAAgB,GAAG/tH,GAAC;UAC9B,IAAMjS,CAAC,GAAGigI,cAAc,GAAGhuH,GAAC;UAE5B,IAAK0tB,GAAG,KAAK,IAAI,EAAG;YAEnB;;YAEA+b,OAAO,CAACl8C,IAAI,CAAEQ,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE2U,CAAC,CAAE;UAE5B,CAAC,MAAM;YAEN;;YAEA+mC,OAAO,CAACl8C,IAAI,CAAEQ,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE2U,CAAC,CAAE;UAE5B;UAEA2tC,UAAU,IAAI,CAAC;QAEhB;;QAEA;;QAEAjB,KAAK,CAACtG,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAE3iB,GAAG,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,CAAE;;QAE9D;;QAEA6hB,UAAU,IAAIc,UAAU;MAEzB;MAAC,OAAAk9E,OAAA;IAEF;IAACz8H,YAAA,CAAAm8H,gBAAA;MAAAjlI,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA+pF,gBAAA,CAAAtlI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAI68G,gBAAgB,CAAE78G,IAAI,CAACg9G,SAAS,EAAEh9G,IAAI,CAACi9G,YAAY,EAAEj9G,IAAI,CAACX,MAAM,EAAEW,IAAI,CAACo8G,cAAc,EAAEp8G,IAAI,CAAC6+B,cAAc,EAAE7+B,IAAI,CAACk9G,SAAS,EAAEl9G,IAAI,CAACy8G,UAAU,EAAEz8G,IAAI,CAAC08G,WAAW,CAAE;MAE3K;IAAC;IAAA,OAAAG,gBAAA;EAAA,EAnR6BplF,cAAc;EAAA,IAuRvComF,YAAY,0BAAAC,iBAAA;IAAA58G,SAAA,CAAA28G,YAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAA38G,YAAA,CAAAy8G,YAAA;IAEjB,SAAAA,aAAaluG,MAAM,GAAG,CAAC,EAAEtQ,MAAM,GAAG,CAAC,EAAE+8G,cAAc,GAAG,EAAE,EAAEv9E,cAAc,GAAG,CAAC,EAAEq+E,SAAS,GAAG,KAAK,EAAET,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGhuH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;MAAA,IAAAqvH,OAAA;MAAA99H,eAAA,OAAA29H,YAAA;MAE5IG,OAAA,GAAAD,QAAA,CAAAnkI,IAAA,OAAO,CAAC,EAAE+1B,MAAM,EAAEtQ,MAAM,EAAE+8G,cAAc,EAAEv9E,cAAc,EAAEq+E,SAAS,EAAET,UAAU,EAAEC,WAAW;MAE5FsB,OAAA,CAAKrkI,IAAI,GAAG,cAAc;MAE1BqkI,OAAA,CAAK94F,UAAU,GAAG;QACjBvV,MAAM,EAAEA,MAAM;QACdtQ,MAAM,EAAEA,MAAM;QACd+8G,cAAc,EAAEA,cAAc;QAC9Bv9E,cAAc,EAAEA,cAAc;QAC9Bq+E,SAAS,EAAEA,SAAS;QACpBT,UAAU,EAAEA,UAAU;QACtBC,WAAW,EAAEA;MACd,CAAC;MAAC,OAAAsB,OAAA;IAEH;IAACt9H,YAAA,CAAAm9H,YAAA;MAAAjmI,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAI69G,YAAY,CAAE79G,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAACX,MAAM,EAAEW,IAAI,CAACo8G,cAAc,EAAEp8G,IAAI,CAAC6+B,cAAc,EAAE7+B,IAAI,CAACk9G,SAAS,EAAEl9G,IAAI,CAACy8G,UAAU,EAAEz8G,IAAI,CAAC08G,WAAW,CAAE;MAEjJ;IAAC;IAAA,OAAAmB,YAAA;EAAA,EAxByBhB,gBAAgB;EAAA,IA4BrCoB,kBAAkB,0BAAAC,gBAAA;IAAAh9G,SAAA,CAAA+8G,kBAAA,EAAAC,gBAAA;IAAA,IAAAC,QAAA,GAAA/8G,YAAA,CAAA68G,kBAAA;IAEvB,SAAAA,mBAAah/E,QAAQ,GAAG,EAAE,EAAE5F,OAAO,GAAG,EAAE,EAAE1pB,MAAM,GAAG,CAAC,EAAEy1F,MAAM,GAAG,CAAC,EAAG;MAAA,IAAAgZ,OAAA;MAAAl+H,eAAA,OAAA+9H,kBAAA;MAElEG,OAAA,GAAAD,QAAA,CAAAvkI,IAAA;MAEAwkI,OAAA,CAAKzkI,IAAI,GAAG,oBAAoB;MAEhCykI,OAAA,CAAKl5F,UAAU,GAAG;QACjB+Z,QAAQ,EAAEA,QAAQ;QAClB5F,OAAO,EAAEA,OAAO;QAChB1pB,MAAM,EAAEA,MAAM;QACdy1F,MAAM,EAAEA;MACT,CAAC;;MAED;;MAEA,IAAMiZ,YAAY,GAAG,EAAE;MACvB,IAAMC,QAAQ,GAAG,EAAE;;MAEnB;;MAEAC,SAAS,CAAEnZ,MAAM,CAAE;;MAEnB;;MAEAoZ,WAAW,CAAE7uG,MAAM,CAAE;;MAErB;;MAEA8uG,WAAW,EAAE;;MAEb;;MAEAL,OAAA,CAAK7lF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEynF,YAAY,EAAE,CAAC,CAAE,CAAE;MAC9ED,OAAA,CAAK7lF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAEynF,YAAY,CAACp/H,KAAK,EAAE,EAAE,CAAC,CAAE,CAAE;MACpFm/H,OAAA,CAAK7lF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE0nF,QAAQ,EAAE,CAAC,CAAE,CAAE;MAEpE,IAAKlZ,MAAM,KAAK,CAAC,EAAG;QAEnBgZ,OAAA,CAAKzjF,oBAAoB,EAAE,CAAC,CAAC;MAE9B,CAAC,MAAM;QAENyjF,OAAA,CAAK9iF,gBAAgB,EAAE,CAAC,CAAC;MAE1B;;MAEA;;MAEA,SAASijF,SAASA,CAAEnZ,MAAM,EAAG;QAE5B,IAAMhzG,CAAC,GAAG,IAAI8a,OAAO,EAAE;QACvB,IAAM7a,CAAC,GAAG,IAAI6a,OAAO,EAAE;QACvB,IAAM5a,CAAC,GAAG,IAAI4a,OAAO,EAAE;;QAEvB;;QAEA,KAAM,IAAIvvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG07C,OAAO,CAAC37C,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;UAE7C;;UAEA+gI,gBAAgB,CAAErlF,OAAO,CAAE17C,CAAC,GAAG,CAAC,CAAE,EAAEyU,CAAC,CAAE;UACvCssH,gBAAgB,CAAErlF,OAAO,CAAE17C,CAAC,GAAG,CAAC,CAAE,EAAE0U,CAAC,CAAE;UACvCqsH,gBAAgB,CAAErlF,OAAO,CAAE17C,CAAC,GAAG,CAAC,CAAE,EAAE2U,CAAC,CAAE;;UAEvC;;UAEAqsH,aAAa,CAAEvsH,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE8yG,MAAM,CAAE;QAEjC;MAED;MAEA,SAASuZ,aAAaA,CAAEvsH,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE8yG,MAAM,EAAG;QAEzC,IAAMwZ,IAAI,GAAGxZ,MAAM,GAAG,CAAC;;QAEvB;;QAEA,IAAM5wG,CAAC,GAAG,EAAE;;QAEZ;;QAEA,KAAM,IAAI7W,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIihI,IAAI,EAAEjhI,CAAC,EAAG,EAAG;UAElC6W,CAAC,CAAE7W,CAAC,CAAE,GAAG,EAAE;UAEX,IAAMkhI,EAAE,GAAGzsH,CAAC,CAACkC,KAAK,EAAE,CAACnE,IAAI,CAAEmC,CAAC,EAAE3U,CAAC,GAAGihI,IAAI,CAAE;UACxC,IAAME,EAAE,GAAGzsH,CAAC,CAACiC,KAAK,EAAE,CAACnE,IAAI,CAAEmC,CAAC,EAAE3U,CAAC,GAAGihI,IAAI,CAAE;UAExC,IAAMG,IAAI,GAAGH,IAAI,GAAGjhI,CAAC;UAErB,KAAM,IAAI42B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIwqG,IAAI,EAAExqG,CAAC,EAAG,EAAG;YAElC,IAAKA,CAAC,KAAK,CAAC,IAAI52B,CAAC,KAAKihI,IAAI,EAAG;cAE5BpqH,CAAC,CAAE7W,CAAC,CAAE,CAAE42B,CAAC,CAAE,GAAGsqG,EAAE;YAEjB,CAAC,MAAM;cAENrqH,CAAC,CAAE7W,CAAC,CAAE,CAAE42B,CAAC,CAAE,GAAGsqG,EAAE,CAACvqH,KAAK,EAAE,CAACnE,IAAI,CAAE2uH,EAAE,EAAEvqG,CAAC,GAAGwqG,IAAI,CAAE;YAE9C;UAED;QAED;;QAEA;;QAEA,KAAM,IAAIphI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGihI,IAAI,EAAEjhI,IAAC,EAAG,EAAG;UAEjC,KAAM,IAAI42B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,IAAKqqG,IAAI,GAAGjhI,IAAC,CAAE,GAAG,CAAC,EAAE42B,GAAC,EAAG,EAAG;YAEjD,IAAMy+D,CAAC,GAAGtkF,IAAI,CAACsC,KAAK,CAAEujB,GAAC,GAAG,CAAC,CAAE;YAE7B,IAAKA,GAAC,GAAG,CAAC,KAAK,CAAC,EAAG;cAElByqG,UAAU,CAAExqH,CAAC,CAAE7W,IAAC,CAAE,CAAEq1F,CAAC,GAAG,CAAC,CAAE,CAAE;cAC7BgsC,UAAU,CAAExqH,CAAC,CAAE7W,IAAC,GAAG,CAAC,CAAE,CAAEq1F,CAAC,CAAE,CAAE;cAC7BgsC,UAAU,CAAExqH,CAAC,CAAE7W,IAAC,CAAE,CAAEq1F,CAAC,CAAE,CAAE;YAE1B,CAAC,MAAM;cAENgsC,UAAU,CAAExqH,CAAC,CAAE7W,IAAC,CAAE,CAAEq1F,CAAC,GAAG,CAAC,CAAE,CAAE;cAC7BgsC,UAAU,CAAExqH,CAAC,CAAE7W,IAAC,GAAG,CAAC,CAAE,CAAEq1F,CAAC,GAAG,CAAC,CAAE,CAAE;cACjCgsC,UAAU,CAAExqH,CAAC,CAAE7W,IAAC,GAAG,CAAC,CAAE,CAAEq1F,CAAC,CAAE,CAAE;YAE9B;UAED;QAED;MAED;MAEA,SAASwrC,WAAWA,CAAE7uG,MAAM,EAAG;QAE9B,IAAM+/D,MAAM,GAAG,IAAIxiE,OAAO,EAAE;;QAE5B;;QAEA,KAAM,IAAIvvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0gI,YAAY,CAAC3gI,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;UAElD+xF,MAAM,CAAC9/E,CAAC,GAAGyuH,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE;UAChC+xF,MAAM,CAACx/E,CAAC,GAAGmuH,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE;UAChC+xF,MAAM,CAAC7rE,CAAC,GAAGw6G,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE;UAEhC+xF,MAAM,CAACj8E,SAAS,EAAE,CAACwB,cAAc,CAAE0a,MAAM,CAAE;UAE3C0uG,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,GAAG+xF,MAAM,CAAC9/E,CAAC;UAChCyuH,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,GAAG+xF,MAAM,CAACx/E,CAAC;UAChCmuH,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,GAAG+xF,MAAM,CAAC7rE,CAAC;QAEjC;MAED;MAEA,SAAS46G,WAAWA,CAAA,EAAG;QAEtB,IAAM/uC,MAAM,GAAG,IAAIxiE,OAAO,EAAE;QAE5B,KAAM,IAAIvvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0gI,YAAY,CAAC3gI,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;UAElD+xF,MAAM,CAAC9/E,CAAC,GAAGyuH,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE;UAChC+xF,MAAM,CAACx/E,CAAC,GAAGmuH,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE;UAChC+xF,MAAM,CAAC7rE,CAAC,GAAGw6G,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE;UAEhC,IAAM2yB,CAAC,GAAG2uG,OAAO,CAAEvvC,MAAM,CAAE,GAAG,CAAC,GAAGhhF,IAAI,CAACC,EAAE,GAAG,GAAG;UAC/C,IAAM6F,CAAC,GAAG0qH,WAAW,CAAExvC,MAAM,CAAE,GAAGhhF,IAAI,CAACC,EAAE,GAAG,GAAG;UAC/C2vH,QAAQ,CAACnhI,IAAI,CAAEmzB,CAAC,EAAE,CAAC,GAAG9b,CAAC,CAAE;QAE1B;QAEA2qH,UAAU,EAAE;QAEZC,WAAW,EAAE;MAEd;MAEA,SAASA,WAAWA,CAAA,EAAG;QAEtB;;QAEA,KAAM,IAAIzhI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2gI,QAAQ,CAAC5gI,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;UAE9C;;UAEA,IAAM0uB,EAAE,GAAGiyG,QAAQ,CAAE3gI,CAAC,GAAG,CAAC,CAAE;UAC5B,IAAM8uB,EAAE,GAAG6xG,QAAQ,CAAE3gI,CAAC,GAAG,CAAC,CAAE;UAC5B,IAAM6+B,EAAE,GAAG8hG,QAAQ,CAAE3gI,CAAC,GAAG,CAAC,CAAE;UAE5B,IAAM4R,GAAG,GAAGb,IAAI,CAACa,GAAG,CAAE8c,EAAE,EAAEI,EAAE,EAAE+P,EAAE,CAAE;UAClC,IAAMltB,GAAG,GAAGZ,IAAI,CAACY,GAAG,CAAE+c,EAAE,EAAEI,EAAE,EAAE+P,EAAE,CAAE;;UAElC;;UAEA,IAAKjtB,GAAG,GAAG,GAAG,IAAID,GAAG,GAAG,GAAG,EAAG;YAE7B,IAAK+c,EAAE,GAAG,GAAG,EAAGiyG,QAAQ,CAAE3gI,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;YACtC,IAAK8uB,EAAE,GAAG,GAAG,EAAG6xG,QAAQ,CAAE3gI,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;YACtC,IAAK6+B,EAAE,GAAG,GAAG,EAAG8hG,QAAQ,CAAE3gI,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;UAEvC;QAED;MAED;MAEA,SAASqhI,UAAUA,CAAEtvC,MAAM,EAAG;QAE7B2uC,YAAY,CAAClhI,IAAI,CAAEuyF,MAAM,CAAC9/E,CAAC,EAAE8/E,MAAM,CAACx/E,CAAC,EAAEw/E,MAAM,CAAC7rE,CAAC,CAAE;MAElD;MAEA,SAAS66G,gBAAgBA,CAAEzwH,KAAK,EAAEyhF,MAAM,EAAG;QAE1C,IAAM9zC,MAAM,GAAG3tC,KAAK,GAAG,CAAC;QAExByhF,MAAM,CAAC9/E,CAAC,GAAGqvC,QAAQ,CAAErD,MAAM,GAAG,CAAC,CAAE;QACjC8zC,MAAM,CAACx/E,CAAC,GAAG+uC,QAAQ,CAAErD,MAAM,GAAG,CAAC,CAAE;QACjC8zC,MAAM,CAAC7rE,CAAC,GAAGo7B,QAAQ,CAAErD,MAAM,GAAG,CAAC,CAAE;MAElC;MAEA,SAASujF,UAAUA,CAAA,EAAG;QAErB,IAAM/sH,CAAC,GAAG,IAAI8a,OAAO,EAAE;QACvB,IAAM7a,CAAC,GAAG,IAAI6a,OAAO,EAAE;QACvB,IAAM5a,CAAC,GAAG,IAAI4a,OAAO,EAAE;QAEvB,IAAMmyG,QAAQ,GAAG,IAAInyG,OAAO,EAAE;QAE9B,IAAM8sB,GAAG,GAAG,IAAIpmC,OAAO,EAAE;QACzB,IAAMqmC,GAAG,GAAG,IAAIrmC,OAAO,EAAE;QACzB,IAAMsmC,GAAG,GAAG,IAAItmC,OAAO,EAAE;QAEzB,KAAM,IAAIjW,CAAC,GAAG,CAAC,EAAE42B,CAAC,GAAG,CAAC,EAAE52B,CAAC,GAAG0gI,YAAY,CAAC3gI,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE42B,CAAC,IAAI,CAAC,EAAG;UAEjEniB,CAAC,CAACc,GAAG,CAAEmrH,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,EAAE0gI,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,EAAE0gI,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,CAAE;UAC5E0U,CAAC,CAACa,GAAG,CAAEmrH,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,EAAE0gI,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,EAAE0gI,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,CAAE;UAC5E2U,CAAC,CAACY,GAAG,CAAEmrH,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,EAAE0gI,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,EAAE0gI,YAAY,CAAE1gI,CAAC,GAAG,CAAC,CAAE,CAAE;UAE5Eq8C,GAAG,CAAC9mC,GAAG,CAAEorH,QAAQ,CAAE/pG,CAAC,GAAG,CAAC,CAAE,EAAE+pG,QAAQ,CAAE/pG,CAAC,GAAG,CAAC,CAAE,CAAE;UAC/C0lB,GAAG,CAAC/mC,GAAG,CAAEorH,QAAQ,CAAE/pG,CAAC,GAAG,CAAC,CAAE,EAAE+pG,QAAQ,CAAE/pG,CAAC,GAAG,CAAC,CAAE,CAAE;UAC/C2lB,GAAG,CAAChnC,GAAG,CAAEorH,QAAQ,CAAE/pG,CAAC,GAAG,CAAC,CAAE,EAAE+pG,QAAQ,CAAE/pG,CAAC,GAAG,CAAC,CAAE,CAAE;UAE/C8qG,QAAQ,CAAC9qH,IAAI,CAAEnC,CAAC,CAAE,CAACqC,GAAG,CAAEpC,CAAC,CAAE,CAACoC,GAAG,CAAEnC,CAAC,CAAE,CAAC6C,YAAY,CAAE,CAAC,CAAE;UAEtD,IAAMmqH,GAAG,GAAGL,OAAO,CAAEI,QAAQ,CAAE;UAE/BE,SAAS,CAAEvlF,GAAG,EAAEzlB,CAAC,GAAG,CAAC,EAAEniB,CAAC,EAAEktH,GAAG,CAAE;UAC/BC,SAAS,CAAEtlF,GAAG,EAAE1lB,CAAC,GAAG,CAAC,EAAEliB,CAAC,EAAEitH,GAAG,CAAE;UAC/BC,SAAS,CAAErlF,GAAG,EAAE3lB,CAAC,GAAG,CAAC,EAAEjiB,CAAC,EAAEgtH,GAAG,CAAE;QAEhC;MAED;MAEA,SAASC,SAASA,CAAE77G,EAAE,EAAEk4B,MAAM,EAAE9pB,MAAM,EAAEmtG,OAAO,EAAG;QAEjD,IAAOA,OAAO,GAAG,CAAC,IAAQv7G,EAAE,CAAC9T,CAAC,KAAK,CAAG,EAAG;UAExC0uH,QAAQ,CAAE1iF,MAAM,CAAE,GAAGl4B,EAAE,CAAC9T,CAAC,GAAG,CAAC;QAE9B;QAEA,IAAOkiB,MAAM,CAACliB,CAAC,KAAK,CAAC,IAAQkiB,MAAM,CAACjO,CAAC,KAAK,CAAG,EAAG;UAE/Cy6G,QAAQ,CAAE1iF,MAAM,CAAE,GAAGqjF,OAAO,GAAG,CAAC,GAAGvwH,IAAI,CAACC,EAAE,GAAG,GAAG;QAEjD;MAED;;MAEA;;MAEA,SAASswH,OAAOA,CAAEntG,MAAM,EAAG;QAE1B,OAAOpjB,IAAI,CAACyH,KAAK,CAAE2b,MAAM,CAACjO,CAAC,EAAE,CAAEiO,MAAM,CAACliB,CAAC,CAAE;MAE1C;;MAGA;;MAEA,SAASsvH,WAAWA,CAAEptG,MAAM,EAAG;QAE9B,OAAOpjB,IAAI,CAACyH,KAAK,CAAE,CAAE2b,MAAM,CAAC5hB,CAAC,EAAExB,IAAI,CAACsH,IAAI,CAAI8b,MAAM,CAACliB,CAAC,GAAGkiB,MAAM,CAACliB,CAAC,GAAOkiB,MAAM,CAACjO,CAAC,GAAGiO,MAAM,CAACjO,CAAG,CAAE,CAAE;MAEhG;MAAC,OAAAu6G,OAAA;IAEF;IAAC19H,YAAA,CAAAu9H,kBAAA;MAAArmI,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAmrF,kBAAA,CAAA1mI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAIi+G,kBAAkB,CAAEj+G,IAAI,CAACi/B,QAAQ,EAAEj/B,IAAI,CAACq5B,OAAO,EAAEr5B,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAACw/G,OAAO,CAAE;MAExF;IAAC;IAAA,OAAAvB,kBAAA;EAAA,EArT+BxmF,cAAc;EAAA,IAyTzCgoF,oBAAoB,0BAAAC,mBAAA;IAAAx+G,SAAA,CAAAu+G,oBAAA,EAAAC,mBAAA;IAAA,IAAAC,QAAA,GAAAv+G,YAAA,CAAAq+G,oBAAA;IAEzB,SAAAA,qBAAa9vG,MAAM,GAAG,CAAC,EAAEy1F,MAAM,GAAG,CAAC,EAAG;MAAA,IAAAwa,OAAA;MAAA1/H,eAAA,OAAAu/H,oBAAA;MAErC,IAAMrvH,CAAC,GAAG,CAAE,CAAC,GAAG1B,IAAI,CAACsH,IAAI,CAAE,CAAC,CAAE,IAAK,CAAC;MACpC,IAAMwF,CAAC,GAAG,CAAC,GAAGpL,CAAC;MAEf,IAAM6uC,QAAQ,GAAG;MAEhB;MACA,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAC1B,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACtB,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EACtB,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;MAElB;MACA,CAAC,EAAE,CAAEzjC,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAC,EAAE,CAAEoL,CAAC,EAAEpL,CAAC,EACtB,CAAC,EAAEoL,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAC,EAAEoL,CAAC,EAAEpL,CAAC;MAElB;MACA,CAAEoL,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAC,EAAE,CAAEoL,CAAC,EAAEpL,CAAC,EAAE,CAAC,EACtBoL,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAC,EAAEoL,CAAC,EAAEpL,CAAC,EAAE,CAAC;MAElB;MACA,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAEoL,CAAC,EAAEpL,CAAC,EAAE,CAAC,EAAE,CAAEoL,CAAC,EACtB,CAAEpL,CAAC,EAAE,CAAC,EAAEoL,CAAC,EAAEpL,CAAC,EAAE,CAAC,EAAEoL,CAAC,CAClB;MAED,IAAM69B,OAAO,GAAG,CACf,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC/B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC9B,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC/B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAC9B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAC9B;MAEDumF,OAAA,GAAAD,QAAA,CAAA/lI,IAAA,OAAOqlD,QAAQ,EAAE5F,OAAO,EAAE1pB,MAAM,EAAEy1F,MAAM;MAExCwa,OAAA,CAAKjmI,IAAI,GAAG,sBAAsB;MAElCimI,OAAA,CAAK16F,UAAU,GAAG;QACjBvV,MAAM,EAAEA,MAAM;QACdy1F,MAAM,EAAEA;MACT,CAAC;MAAC,OAAAwa,OAAA;IAEH;IAACl/H,YAAA,CAAA++H,oBAAA;MAAA7nI,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAIy/G,oBAAoB,CAAEz/G,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAAColG,MAAM,CAAE;MAE5D;IAAC;IAAA,OAAAqa,oBAAA;EAAA,EA1DiCxB,kBAAkB;EA8DrD,IAAM4B,GAAG,GAAG,aAAc,IAAI3yG,OAAO,EAAE;EACvC,IAAM4yG,KAAK,GAAG,aAAc,IAAI5yG,OAAO,EAAE;EACzC,IAAM6yG,OAAO,GAAG,aAAc,IAAI7yG,OAAO,EAAE;EAC3C,IAAM8yG,SAAS,GAAG,aAAc,IAAIv5F,QAAQ,EAAE;EAAC,IAEzCw5F,aAAa,0BAAAC,gBAAA;IAAAh/G,SAAA,CAAA++G,aAAA,EAAAC,gBAAA;IAAA,IAAAC,QAAA,GAAA/+G,YAAA,CAAA6+G,aAAA;IAElB,SAAAA,cAAa5tG,QAAQ,GAAG,IAAI,EAAE+tG,cAAc,GAAG,CAAC,EAAG;MAAA,IAAAC,OAAA;MAAAngI,eAAA,OAAA+/H,aAAA;MAElDI,OAAA,GAAAF,QAAA,CAAAvmI,IAAA;MAEAymI,OAAA,CAAK1mI,IAAI,GAAG,eAAe;MAE3B0mI,OAAA,CAAKn7F,UAAU,GAAG;QACjB7S,QAAQ,EAAEA,QAAQ;QAClB+tG,cAAc,EAAEA;MACjB,CAAC;MAED,IAAK/tG,QAAQ,KAAK,IAAI,EAAG;QAExB,IAAMiuG,eAAe,GAAG,CAAC;QACzB,IAAM11F,SAAS,GAAGl8B,IAAI,CAACmD,GAAG,CAAE,EAAE,EAAEyuH,eAAe,CAAE;QACjD,IAAMC,YAAY,GAAG7xH,IAAI,CAAC8D,GAAG,CAAE/D,OAAO,GAAG2xH,cAAc,CAAE;QAEzD,IAAMI,SAAS,GAAGnuG,QAAQ,CAAC+lB,QAAQ,EAAE;QACrC,IAAMqoF,YAAY,GAAGpuG,QAAQ,CAACimB,YAAY,CAAE,UAAU,CAAE;QACxD,IAAMooF,UAAU,GAAGF,SAAS,GAAGA,SAAS,CAACt4G,KAAK,GAAGu4G,YAAY,CAACv4G,KAAK;QAEnE,IAAMy4G,QAAQ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAC5B,IAAMC,QAAQ,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;QAClC,IAAMC,MAAM,GAAG,IAAIngH,KAAK,CAAE,CAAC,CAAE;QAE7B,IAAMogH,QAAQ,GAAG,CAAC,CAAC;QACnB,IAAM7hF,QAAQ,GAAG,EAAE;QACnB,KAAM,IAAIthD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+iI,UAAU,EAAE/iI,CAAC,IAAI,CAAC,EAAG;UAEzC,IAAK6iI,SAAS,EAAG;YAEhBG,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAAChpH,IAAI,CAAE7Z,CAAC,CAAE;YACnCgjI,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAAChpH,IAAI,CAAE7Z,CAAC,GAAG,CAAC,CAAE;YACvCgjI,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAAChpH,IAAI,CAAE7Z,CAAC,GAAG,CAAC,CAAE;UAExC,CAAC,MAAM;YAENgjI,QAAQ,CAAE,CAAC,CAAE,GAAGhjI,CAAC;YACjBgjI,QAAQ,CAAE,CAAC,CAAE,GAAGhjI,CAAC,GAAG,CAAC;YACrBgjI,QAAQ,CAAE,CAAC,CAAE,GAAGhjI,CAAC,GAAG,CAAC;UAEtB;UAEA,IAAQyU,CAAC,GAAW4tH,SAAS,CAArB5tH,CAAC;YAAEC,CAAC,GAAQ2tH,SAAS,CAAlB3tH,CAAC;YAAEC,CAAC,GAAK0tH,SAAS,CAAf1tH,CAAC;UACfF,CAAC,CAACkF,mBAAmB,CAAEmpH,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAE,CAAE;UACpDtuH,CAAC,CAACiF,mBAAmB,CAAEmpH,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAE,CAAE;UACpDruH,CAAC,CAACgF,mBAAmB,CAAEmpH,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAE,CAAE;UACpDX,SAAS,CAAC/4F,SAAS,CAAE84F,OAAO,CAAE;;UAE9B;UACAc,MAAM,CAAE,CAAC,CAAE,MAAApiH,MAAA,CAAO/P,IAAI,CAACgF,KAAK,CAAEtB,CAAC,CAACxC,CAAC,GAAGg7B,SAAS,CAAE,OAAAnsB,MAAA,CAAM/P,IAAI,CAACgF,KAAK,CAAEtB,CAAC,CAAClC,CAAC,GAAG06B,SAAS,CAAE,OAAAnsB,MAAA,CAAM/P,IAAI,CAACgF,KAAK,CAAEtB,CAAC,CAACyR,CAAC,GAAG+mB,SAAS,CAAE,CAAG;UACxHi2F,MAAM,CAAE,CAAC,CAAE,MAAApiH,MAAA,CAAO/P,IAAI,CAACgF,KAAK,CAAErB,CAAC,CAACzC,CAAC,GAAGg7B,SAAS,CAAE,OAAAnsB,MAAA,CAAM/P,IAAI,CAACgF,KAAK,CAAErB,CAAC,CAACnC,CAAC,GAAG06B,SAAS,CAAE,OAAAnsB,MAAA,CAAM/P,IAAI,CAACgF,KAAK,CAAErB,CAAC,CAACwR,CAAC,GAAG+mB,SAAS,CAAE,CAAG;UACxHi2F,MAAM,CAAE,CAAC,CAAE,MAAApiH,MAAA,CAAO/P,IAAI,CAACgF,KAAK,CAAEpB,CAAC,CAAC1C,CAAC,GAAGg7B,SAAS,CAAE,OAAAnsB,MAAA,CAAM/P,IAAI,CAACgF,KAAK,CAAEpB,CAAC,CAACpC,CAAC,GAAG06B,SAAS,CAAE,OAAAnsB,MAAA,CAAM/P,IAAI,CAACgF,KAAK,CAAEpB,CAAC,CAACuR,CAAC,GAAG+mB,SAAS,CAAE,CAAG;;UAExH;UACA,IAAKi2F,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,IAAIA,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,IAAIA,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,EAAG;YAEhG;UAED;;UAEA;UACA,KAAM,IAAItsG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;YAE9B;YACA,IAAMwsG,KAAK,GAAG,CAAExsG,CAAC,GAAG,CAAC,IAAK,CAAC;YAC3B,IAAMysG,QAAQ,GAAGH,MAAM,CAAEtsG,CAAC,CAAE;YAC5B,IAAM0sG,QAAQ,GAAGJ,MAAM,CAAEE,KAAK,CAAE;YAChC,IAAM1sG,EAAE,GAAG2rG,SAAS,CAAEY,QAAQ,CAAErsG,CAAC,CAAE,CAAE;YACrC,IAAMvd,EAAE,GAAGgpH,SAAS,CAAEY,QAAQ,CAAEG,KAAK,CAAE,CAAE;YAEzC,IAAMn1C,IAAI,MAAAntE,MAAA,CAAOuiH,QAAQ,OAAAviH,MAAA,CAAMwiH,QAAQ,CAAG;YAC1C,IAAMC,WAAW,MAAAziH,MAAA,CAAOwiH,QAAQ,OAAAxiH,MAAA,CAAMuiH,QAAQ,CAAG;YAEjD,IAAKE,WAAW,IAAIJ,QAAQ,IAAIA,QAAQ,CAAEI,WAAW,CAAE,EAAG;cAEzD;cACA;cACA,IAAKnB,OAAO,CAAClqH,GAAG,CAAEirH,QAAQ,CAAEI,WAAW,CAAE,CAAC3xG,MAAM,CAAE,IAAIgxG,YAAY,EAAG;gBAEpEthF,QAAQ,CAAC9hD,IAAI,CAAEk3B,EAAE,CAACzkB,CAAC,EAAEykB,EAAE,CAACnkB,CAAC,EAAEmkB,EAAE,CAACxQ,CAAC,CAAE;gBACjCo7B,QAAQ,CAAC9hD,IAAI,CAAE6Z,EAAE,CAACpH,CAAC,EAAEoH,EAAE,CAAC9G,CAAC,EAAE8G,EAAE,CAAC6M,CAAC,CAAE;cAElC;cAEAi9G,QAAQ,CAAEI,WAAW,CAAE,GAAG,IAAI;YAE/B,CAAC,MAAM,IAAK,EAAIt1C,IAAI,IAAIk1C,QAAQ,CAAE,EAAG;cAEpC;cACAA,QAAQ,CAAEl1C,IAAI,CAAE,GAAG;gBAElBu1C,MAAM,EAAER,QAAQ,CAAEpsG,CAAC,CAAE;gBACrBggB,MAAM,EAAEosF,QAAQ,CAAEI,KAAK,CAAE;gBACzBxxG,MAAM,EAAEwwG,OAAO,CAACzrH,KAAK;cAEtB,CAAC;YAEF;UAED;QAED;;QAEA;QACA,KAAM,IAAM1c,GAAG,IAAIkpI,QAAQ,EAAG;UAE7B,IAAKA,QAAQ,CAAElpI,GAAG,CAAE,EAAG;YAEtB,IAAAwpI,aAAA,GAA2BN,QAAQ,CAAElpI,GAAG,CAAE;cAAlCupI,MAAM,GAAAC,aAAA,CAAND,MAAM;cAAE5sF,MAAM,GAAA6sF,aAAA,CAAN7sF,MAAM;YACtBsrF,GAAG,CAACvoH,mBAAmB,CAAEmpH,YAAY,EAAEU,MAAM,CAAE;YAC/CrB,KAAK,CAACxoH,mBAAmB,CAAEmpH,YAAY,EAAElsF,MAAM,CAAE;YAEjD0K,QAAQ,CAAC9hD,IAAI,CAAE0iI,GAAG,CAACjwH,CAAC,EAAEiwH,GAAG,CAAC3vH,CAAC,EAAE2vH,GAAG,CAACh8G,CAAC,CAAE;YACpCo7B,QAAQ,CAAC9hD,IAAI,CAAE2iI,KAAK,CAAClwH,CAAC,EAAEkwH,KAAK,CAAC5vH,CAAC,EAAE4vH,KAAK,CAACj8G,CAAC,CAAE;UAE3C;QAED;QAEAw8G,OAAA,CAAK9nF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAE3E;MAAC,OAAAohF,OAAA;IAEF;IAAC3/H,YAAA,CAAAu/H,aAAA;MAAAroI,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAmtF,aAAA,CAAA1oI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA+6F,aAAA;EAAA,EAxI0BxoF,cAAc;EAAA,IA4IpC4pF,KAAK,0BAAAC,KAAA;IAAApgH,SAAA,CAAAmgH,KAAA,EAAAC,KAAA;IAAA,IAAAC,QAAA,GAAAngH,YAAA,CAAAigH,KAAA;IAEV,SAAAA,MAAapwG,MAAM,EAAG;MAAA,IAAAuwG,OAAA;MAAAthI,eAAA,OAAAmhI,KAAA;MAErBG,OAAA,GAAAD,QAAA,CAAA3nI,IAAA,OAAOq3B,MAAM;MAEbuwG,OAAA,CAAKryH,IAAI,GAAGN,YAAY,EAAE;MAE1B2yH,OAAA,CAAK7nI,IAAI,GAAG,OAAO;MAEnB6nI,OAAA,CAAKC,KAAK,GAAG,EAAE;MAAC,OAAAD,OAAA;IAEjB;IAAC9gI,YAAA,CAAA2gI,KAAA;MAAAzpI,GAAA;MAAAE,KAAA,EAED,SAAA4pI,eAAgBpQ,SAAS,EAAG;QAE3B,IAAMqQ,QAAQ,GAAG,EAAE;QAEnB,KAAM,IAAIhkI,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAACmzH,KAAK,CAAC/jI,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAErDgkI,QAAQ,CAAEhkI,CAAC,CAAE,GAAG,IAAI,CAAC8jI,KAAK,CAAE9jI,CAAC,CAAE,CAAC0zH,SAAS,CAAEC,SAAS,CAAE;QAEvD;QAEA,OAAOqQ,QAAQ;MAEhB;;MAEA;IAAA;MAAA/pI,GAAA;MAAAE,KAAA,EAEA,SAAA8pI,cAAetQ,SAAS,EAAG;QAE1B,OAAO;UAENnsF,KAAK,EAAE,IAAI,CAACksF,SAAS,CAAEC,SAAS,CAAE;UAClCmQ,KAAK,EAAE,IAAI,CAACC,cAAc,CAAEpQ,SAAS;QAEtC,CAAC;MAEF;IAAC;MAAA15H,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAuuF,KAAA,CAAA9pI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACs/G,KAAK,GAAG,EAAE;QAEf,KAAM,IAAI9jI,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG6T,MAAM,CAACs/G,KAAK,CAAC/jI,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEvD,IAAMkkI,IAAI,GAAG1/G,MAAM,CAACs/G,KAAK,CAAE9jI,CAAC,CAAE;UAE9B,IAAI,CAAC8jI,KAAK,CAACtkI,IAAI,CAAE0kI,IAAI,CAACvtH,KAAK,EAAE,CAAE;QAEhC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA1c,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAuuF,KAAA,CAAA9pI,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAAC7Q,IAAI,GAAG,IAAI,CAACA,IAAI;QACrB6Q,IAAI,CAACyhH,KAAK,GAAG,EAAE;QAEf,KAAM,IAAI9jI,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAACmzH,KAAK,CAAC/jI,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAErD,IAAMkkI,IAAI,GAAG,IAAI,CAACJ,KAAK,CAAE9jI,CAAC,CAAE;UAC5BqiB,IAAI,CAACyhH,KAAK,CAACtkI,IAAI,CAAE0kI,IAAI,CAACzhH,MAAM,EAAE,CAAE;QAEjC;QAEA,OAAOJ,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhBh4E,IAAA,CAAAC,eAAA,CAAAuuF,KAAA,CAAA9pI,SAAA,qBAAAqC,IAAA,OAAgBixH,IAAI;QAEpB,IAAI,CAAC17G,IAAI,GAAG07G,IAAI,CAAC17G,IAAI;QACrB,IAAI,CAACsyH,KAAK,GAAG,EAAE;QAEf,KAAM,IAAI9jI,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGu8G,IAAI,CAAC4W,KAAK,CAAC/jI,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAErD,IAAMkkI,IAAI,GAAGhX,IAAI,CAAC4W,KAAK,CAAE9jI,CAAC,CAAE;UAC5B,IAAI,CAAC8jI,KAAK,CAACtkI,IAAI,CAAE,IAAI28H,IAAI,EAAE,CAAC55E,QAAQ,CAAE2hF,IAAI,CAAE,CAAE;QAE/C;QAEA,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAR,KAAA;EAAA,EA7FkBvH,IAAI;EAiGxB;AACD;AACA;EAEC,IAAMgI,MAAM,GAAG;IAEdC,WAAW,EAAE,SAAAA,YAAW/hH,IAAI,EAAEgiH,WAAW,EAAEC,GAAG,GAAG,CAAC,EAAG;MAEpD,IAAMC,QAAQ,GAAGF,WAAW,IAAIA,WAAW,CAACtkI,MAAM;MAClD,IAAMykI,QAAQ,GAAGD,QAAQ,GAAGF,WAAW,CAAE,CAAC,CAAE,GAAGC,GAAG,GAAGjiH,IAAI,CAACtiB,MAAM;MAChE,IAAI0kI,SAAS,GAAGC,UAAU,CAAEriH,IAAI,EAAE,CAAC,EAAEmiH,QAAQ,EAAEF,GAAG,EAAE,IAAI,CAAE;MAC1D,IAAMzyD,SAAS,GAAG,EAAE;MAEpB,IAAK,CAAE4yD,SAAS,IAAIA,SAAS,CAAC3lI,IAAI,KAAK2lI,SAAS,CAACrjI,IAAI,EAAG,OAAOywE,SAAS;MAExE,IAAI8yD,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE7yH,CAAC,EAAEM,CAAC,EAAEwyH,OAAO;MAEzC,IAAKR,QAAQ,EAAGE,SAAS,GAAGO,cAAc,CAAE3iH,IAAI,EAAEgiH,WAAW,EAAEI,SAAS,EAAEH,GAAG,CAAE;;MAE/E;MACA,IAAKjiH,IAAI,CAACtiB,MAAM,GAAG,EAAE,GAAGukI,GAAG,EAAG;QAE7BK,IAAI,GAAGE,IAAI,GAAGxiH,IAAI,CAAE,CAAC,CAAE;QACvBuiH,IAAI,GAAGE,IAAI,GAAGziH,IAAI,CAAE,CAAC,CAAE;QAEvB,KAAM,IAAIriB,CAAC,GAAGskI,GAAG,EAAEtkI,CAAC,GAAGwkI,QAAQ,EAAExkI,CAAC,IAAIskI,GAAG,EAAG;UAE3CryH,CAAC,GAAGoQ,IAAI,CAAEriB,CAAC,CAAE;UACbuS,CAAC,GAAG8P,IAAI,CAAEriB,CAAC,GAAG,CAAC,CAAE;UACjB,IAAKiS,CAAC,GAAG0yH,IAAI,EAAGA,IAAI,GAAG1yH,CAAC;UACxB,IAAKM,CAAC,GAAGqyH,IAAI,EAAGA,IAAI,GAAGryH,CAAC;UACxB,IAAKN,CAAC,GAAG4yH,IAAI,EAAGA,IAAI,GAAG5yH,CAAC;UACxB,IAAKM,CAAC,GAAGuyH,IAAI,EAAGA,IAAI,GAAGvyH,CAAC;QAEzB;;QAEA;QACAwyH,OAAO,GAAGh0H,IAAI,CAACa,GAAG,CAAEizH,IAAI,GAAGF,IAAI,EAAEG,IAAI,GAAGF,IAAI,CAAE;QAC9CG,OAAO,GAAGA,OAAO,KAAK,CAAC,GAAG,KAAK,GAAGA,OAAO,GAAG,CAAC;MAE9C;MAEAE,YAAY,CAAER,SAAS,EAAE5yD,SAAS,EAAEyyD,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAC,CAAE;MAEjE,OAAOlzD,SAAS;IAEjB;EAED,CAAC;;EAED;EACA,SAAS6yD,UAAUA,CAAEriH,IAAI,EAAEm4B,KAAK,EAAEiG,GAAG,EAAE6jF,GAAG,EAAEY,SAAS,EAAG;IAEvD,IAAIllI,CAAC,EAAEk0H,IAAI;IAEX,IAAKgR,SAAS,KAAOC,UAAU,CAAE9iH,IAAI,EAAEm4B,KAAK,EAAEiG,GAAG,EAAE6jF,GAAG,CAAE,GAAG,CAAG,EAAG;MAEhE,KAAMtkI,CAAC,GAAGw6C,KAAK,EAAEx6C,CAAC,GAAGygD,GAAG,EAAEzgD,CAAC,IAAIskI,GAAG,EAAGpQ,IAAI,GAAGkR,UAAU,CAAEplI,CAAC,EAAEqiB,IAAI,CAAEriB,CAAC,CAAE,EAAEqiB,IAAI,CAAEriB,CAAC,GAAG,CAAC,CAAE,EAAEk0H,IAAI,CAAE;IAE5F,CAAC,MAAM;MAEN,KAAMl0H,CAAC,GAAGygD,GAAG,GAAG6jF,GAAG,EAAEtkI,CAAC,IAAIw6C,KAAK,EAAEx6C,CAAC,IAAIskI,GAAG,EAAGpQ,IAAI,GAAGkR,UAAU,CAAEplI,CAAC,EAAEqiB,IAAI,CAAEriB,CAAC,CAAE,EAAEqiB,IAAI,CAAEriB,CAAC,GAAG,CAAC,CAAE,EAAEk0H,IAAI,CAAE;IAEnG;IAEA,IAAKA,IAAI,IAAI36G,MAAM,CAAE26G,IAAI,EAAEA,IAAI,CAACp1H,IAAI,CAAE,EAAG;MAExCumI,UAAU,CAAEnR,IAAI,CAAE;MAClBA,IAAI,GAAGA,IAAI,CAACp1H,IAAI;IAEjB;IAEA,OAAOo1H,IAAI;EAEZ;;EAEA;EACA,SAASoR,YAAYA,CAAE9qF,KAAK,EAAEiG,GAAG,EAAG;IAEnC,IAAK,CAAEjG,KAAK,EAAG,OAAOA,KAAK;IAC3B,IAAK,CAAEiG,GAAG,EAAGA,GAAG,GAAGjG,KAAK;IAExB,IAAIxa,CAAC,GAAGwa,KAAK;MACZ+qF,KAAK;IACN,GAAG;MAEFA,KAAK,GAAG,KAAK;MAEb,IAAK,CAAEvlG,CAAC,CAACwlG,OAAO,KAAMjsH,MAAM,CAAEymB,CAAC,EAAEA,CAAC,CAAClhC,IAAI,CAAE,IAAI2mI,IAAI,CAAEzlG,CAAC,CAAC5+B,IAAI,EAAE4+B,CAAC,EAAEA,CAAC,CAAClhC,IAAI,CAAE,KAAK,CAAC,CAAE,EAAG;QAEhFumI,UAAU,CAAErlG,CAAC,CAAE;QACfA,CAAC,GAAGygB,GAAG,GAAGzgB,CAAC,CAAC5+B,IAAI;QAChB,IAAK4+B,CAAC,KAAKA,CAAC,CAAClhC,IAAI,EAAG;QACpBymI,KAAK,GAAG,IAAI;MAEb,CAAC,MAAM;QAENvlG,CAAC,GAAGA,CAAC,CAAClhC,IAAI;MAEX;IAED,CAAC,QAASymI,KAAK,IAAIvlG,CAAC,KAAKygB,GAAG;IAE5B,OAAOA,GAAG;EAEX;;EAEA;EACA,SAASwkF,YAAYA,CAAES,GAAG,EAAE7zD,SAAS,EAAEyyD,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAEY,IAAI,EAAG;IAEvE,IAAK,CAAED,GAAG,EAAG;;IAEb;IACA,IAAK,CAAEC,IAAI,IAAIZ,OAAO,EAAGa,UAAU,CAAEF,GAAG,EAAEf,IAAI,EAAEC,IAAI,EAAEG,OAAO,CAAE;IAE/D,IAAIxjI,IAAI,GAAGmkI,GAAG;MACbtkI,IAAI;MAAEtC,IAAI;;IAEX;IACA,OAAQ4mI,GAAG,CAACtkI,IAAI,KAAKskI,GAAG,CAAC5mI,IAAI,EAAG;MAE/BsC,IAAI,GAAGskI,GAAG,CAACtkI,IAAI;MACftC,IAAI,GAAG4mI,GAAG,CAAC5mI,IAAI;MAEf,IAAKimI,OAAO,GAAGc,WAAW,CAAEH,GAAG,EAAEf,IAAI,EAAEC,IAAI,EAAEG,OAAO,CAAE,GAAGe,KAAK,CAAEJ,GAAG,CAAE,EAAG;QAEvE;QACA7zD,SAAS,CAACryE,IAAI,CAAE4B,IAAI,CAACpB,CAAC,GAAGskI,GAAG,GAAG,CAAC,CAAE;QAClCzyD,SAAS,CAACryE,IAAI,CAAEkmI,GAAG,CAAC1lI,CAAC,GAAGskI,GAAG,GAAG,CAAC,CAAE;QACjCzyD,SAAS,CAACryE,IAAI,CAAEV,IAAI,CAACkB,CAAC,GAAGskI,GAAG,GAAG,CAAC,CAAE;QAElCe,UAAU,CAAEK,GAAG,CAAE;;QAEjB;QACAA,GAAG,GAAG5mI,IAAI,CAACA,IAAI;QACfyC,IAAI,GAAGzC,IAAI,CAACA,IAAI;QAEhB;MAED;MAEA4mI,GAAG,GAAG5mI,IAAI;;MAEV;MACA,IAAK4mI,GAAG,KAAKnkI,IAAI,EAAG;QAEnB;QACA,IAAK,CAAEokI,IAAI,EAAG;UAEbV,YAAY,CAAEK,YAAY,CAAEI,GAAG,CAAE,EAAE7zD,SAAS,EAAEyyD,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAC,CAAE;;UAE3E;QAED,CAAC,MAAM,IAAKY,IAAI,KAAK,CAAC,EAAG;UAExBD,GAAG,GAAGK,sBAAsB,CAAET,YAAY,CAAEI,GAAG,CAAE,EAAE7zD,SAAS,EAAEyyD,GAAG,CAAE;UACnEW,YAAY,CAAES,GAAG,EAAE7zD,SAAS,EAAEyyD,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAC,CAAE;;UAE3D;QAED,CAAC,MAAM,IAAKY,IAAI,KAAK,CAAC,EAAG;UAExBK,WAAW,CAAEN,GAAG,EAAE7zD,SAAS,EAAEyyD,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,CAAE;QAExD;QAEA;MAED;IAED;EAED;;EAEA;EACA,SAASe,KAAKA,CAAEJ,GAAG,EAAG;IAErB,IAAMjxH,CAAC,GAAGixH,GAAG,CAACtkI,IAAI;MACjBsT,CAAC,GAAGgxH,GAAG;MACP/wH,CAAC,GAAG+wH,GAAG,CAAC5mI,IAAI;IAEb,IAAK2mI,IAAI,CAAEhxH,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC,CAAC;;IAE1C;IACA,IAAMsc,EAAE,GAAGxc,CAAC,CAACxC,CAAC;MAAEmf,EAAE,GAAG1c,CAAC,CAACzC,CAAC;MAAEmM,EAAE,GAAGzJ,CAAC,CAAC1C,CAAC;MAAEif,EAAE,GAAGzc,CAAC,CAAClC,CAAC;MAAE8e,EAAE,GAAG3c,CAAC,CAACnC,CAAC;MAAE8L,EAAE,GAAG1J,CAAC,CAACpC,CAAC;;IAEhE;IACA,IAAMmc,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAG7S,EAAE,GAAG6S,EAAE,GAAG7S,EAAE,GAAOgT,EAAE,GAAGhT,EAAE,GAAGgT,EAAE,GAAGhT,EAAI;MACjEuQ,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAG7S,EAAE,GAAG6S,EAAE,GAAG7S,EAAE,GAAOgT,EAAE,GAAGhT,EAAE,GAAGgT,EAAE,GAAGhT,EAAI;MAC5DyQ,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAG7S,EAAE,GAAG6S,EAAE,GAAG7S,EAAE,GAAOgT,EAAE,GAAGhT,EAAE,GAAGgT,EAAE,GAAGhT,EAAI;MAC5D2Q,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAG7S,EAAE,GAAG6S,EAAE,GAAG7S,EAAE,GAAOgT,EAAE,GAAGhT,EAAE,GAAGgT,EAAE,GAAGhT,EAAI;IAE7D,IAAI2hB,CAAC,GAAGrrB,CAAC,CAAC7V,IAAI;IACd,OAAQkhC,CAAC,KAAKvrB,CAAC,EAAG;MAEjB,IAAKurB,CAAC,CAAC/tB,CAAC,IAAIyc,EAAE,IAAIsR,CAAC,CAAC/tB,CAAC,IAAI6c,EAAE,IAAIkR,CAAC,CAACztB,CAAC,IAAIoc,EAAE,IAAIqR,CAAC,CAACztB,CAAC,IAAIwc,EAAE,IACpDk3G,eAAe,CAAEh1G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAEjT,EAAE,EAAEC,EAAE,EAAE2hB,CAAC,CAAC/tB,CAAC,EAAE+tB,CAAC,CAACztB,CAAC,CAAE,IACnDkzH,IAAI,CAAEzlG,CAAC,CAAC5+B,IAAI,EAAE4+B,CAAC,EAAEA,CAAC,CAAClhC,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK;MAC9CkhC,CAAC,GAAGA,CAAC,CAAClhC,IAAI;IAEX;IAEA,OAAO,IAAI;EAEZ;EAEA,SAAS+mI,WAAWA,CAAEH,GAAG,EAAEf,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;IAEhD,IAAMtwH,CAAC,GAAGixH,GAAG,CAACtkI,IAAI;MACjBsT,CAAC,GAAGgxH,GAAG;MACP/wH,CAAC,GAAG+wH,GAAG,CAAC5mI,IAAI;IAEb,IAAK2mI,IAAI,CAAEhxH,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC,CAAC;;IAE1C,IAAMsc,EAAE,GAAGxc,CAAC,CAACxC,CAAC;MAAEmf,EAAE,GAAG1c,CAAC,CAACzC,CAAC;MAAEmM,EAAE,GAAGzJ,CAAC,CAAC1C,CAAC;MAAEif,EAAE,GAAGzc,CAAC,CAAClC,CAAC;MAAE8e,EAAE,GAAG3c,CAAC,CAACnC,CAAC;MAAE8L,EAAE,GAAG1J,CAAC,CAACpC,CAAC;;IAEhE;IACA,IAAMmc,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAG7S,EAAE,GAAG6S,EAAE,GAAG7S,EAAE,GAAOgT,EAAE,GAAGhT,EAAE,GAAGgT,EAAE,GAAGhT,EAAI;MACjEuQ,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAG7S,EAAE,GAAG6S,EAAE,GAAG7S,EAAE,GAAOgT,EAAE,GAAGhT,EAAE,GAAGgT,EAAE,GAAGhT,EAAI;MAC5DyQ,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAG7S,EAAE,GAAG6S,EAAE,GAAG7S,EAAE,GAAOgT,EAAE,GAAGhT,EAAE,GAAGgT,EAAE,GAAGhT,EAAI;MAC5D2Q,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAG7S,EAAE,GAAG6S,EAAE,GAAG7S,EAAE,GAAOgT,EAAE,GAAGhT,EAAE,GAAGgT,EAAE,GAAGhT,EAAI;;IAE7D;IACA,IAAM6nH,IAAI,GAAGC,MAAM,CAAEz3G,EAAE,EAAEC,EAAE,EAAEg2G,IAAI,EAAEC,IAAI,EAAEG,OAAO,CAAE;MACjDqB,IAAI,GAAGD,MAAM,CAAEr3G,EAAE,EAAEC,EAAE,EAAE41G,IAAI,EAAEC,IAAI,EAAEG,OAAO,CAAE;IAE7C,IAAI/kG,CAAC,GAAG0lG,GAAG,CAACW,KAAK;MAChBv0H,CAAC,GAAG4zH,GAAG,CAACY,KAAK;;IAEd;IACA,OAAQtmG,CAAC,IAAIA,CAAC,CAAC9Z,CAAC,IAAIggH,IAAI,IAAIp0H,CAAC,IAAIA,CAAC,CAACoU,CAAC,IAAIkgH,IAAI,EAAG;MAE9C,IAAKpmG,CAAC,CAAC/tB,CAAC,IAAIyc,EAAE,IAAIsR,CAAC,CAAC/tB,CAAC,IAAI6c,EAAE,IAAIkR,CAAC,CAACztB,CAAC,IAAIoc,EAAE,IAAIqR,CAAC,CAACztB,CAAC,IAAIwc,EAAE,IAAIiR,CAAC,KAAKvrB,CAAC,IAAIurB,CAAC,KAAKrrB,CAAC,IAC1EsxH,eAAe,CAAEh1G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAEjT,EAAE,EAAEC,EAAE,EAAE2hB,CAAC,CAAC/tB,CAAC,EAAE+tB,CAAC,CAACztB,CAAC,CAAE,IAAIkzH,IAAI,CAAEzlG,CAAC,CAAC5+B,IAAI,EAAE4+B,CAAC,EAAEA,CAAC,CAAClhC,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK;MACrGkhC,CAAC,GAAGA,CAAC,CAACqmG,KAAK;MAEX,IAAKv0H,CAAC,CAACG,CAAC,IAAIyc,EAAE,IAAI5c,CAAC,CAACG,CAAC,IAAI6c,EAAE,IAAIhd,CAAC,CAACS,CAAC,IAAIoc,EAAE,IAAI7c,CAAC,CAACS,CAAC,IAAIwc,EAAE,IAAIjd,CAAC,KAAK2C,CAAC,IAAI3C,CAAC,KAAK6C,CAAC,IAC1EsxH,eAAe,CAAEh1G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAEjT,EAAE,EAAEC,EAAE,EAAEvM,CAAC,CAACG,CAAC,EAAEH,CAAC,CAACS,CAAC,CAAE,IAAIkzH,IAAI,CAAE3zH,CAAC,CAAC1Q,IAAI,EAAE0Q,CAAC,EAAEA,CAAC,CAAChT,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK;MACrGgT,CAAC,GAAGA,CAAC,CAACw0H,KAAK;IAEZ;;IAEA;IACA,OAAQtmG,CAAC,IAAIA,CAAC,CAAC9Z,CAAC,IAAIggH,IAAI,EAAG;MAE1B,IAAKlmG,CAAC,CAAC/tB,CAAC,IAAIyc,EAAE,IAAIsR,CAAC,CAAC/tB,CAAC,IAAI6c,EAAE,IAAIkR,CAAC,CAACztB,CAAC,IAAIoc,EAAE,IAAIqR,CAAC,CAACztB,CAAC,IAAIwc,EAAE,IAAIiR,CAAC,KAAKvrB,CAAC,IAAIurB,CAAC,KAAKrrB,CAAC,IAC1EsxH,eAAe,CAAEh1G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAEjT,EAAE,EAAEC,EAAE,EAAE2hB,CAAC,CAAC/tB,CAAC,EAAE+tB,CAAC,CAACztB,CAAC,CAAE,IAAIkzH,IAAI,CAAEzlG,CAAC,CAAC5+B,IAAI,EAAE4+B,CAAC,EAAEA,CAAC,CAAClhC,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK;MACrGkhC,CAAC,GAAGA,CAAC,CAACqmG,KAAK;IAEZ;;IAEA;IACA,OAAQv0H,CAAC,IAAIA,CAAC,CAACoU,CAAC,IAAIkgH,IAAI,EAAG;MAE1B,IAAKt0H,CAAC,CAACG,CAAC,IAAIyc,EAAE,IAAI5c,CAAC,CAACG,CAAC,IAAI6c,EAAE,IAAIhd,CAAC,CAACS,CAAC,IAAIoc,EAAE,IAAI7c,CAAC,CAACS,CAAC,IAAIwc,EAAE,IAAIjd,CAAC,KAAK2C,CAAC,IAAI3C,CAAC,KAAK6C,CAAC,IAC1EsxH,eAAe,CAAEh1G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAEjT,EAAE,EAAEC,EAAE,EAAEvM,CAAC,CAACG,CAAC,EAAEH,CAAC,CAACS,CAAC,CAAE,IAAIkzH,IAAI,CAAE3zH,CAAC,CAAC1Q,IAAI,EAAE0Q,CAAC,EAAEA,CAAC,CAAChT,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK;MACrGgT,CAAC,GAAGA,CAAC,CAACw0H,KAAK;IAEZ;IAEA,OAAO,IAAI;EAEZ;;EAEA;EACA,SAASP,sBAAsBA,CAAEvrF,KAAK,EAAEq3B,SAAS,EAAEyyD,GAAG,EAAG;IAExD,IAAItkG,CAAC,GAAGwa,KAAK;IACb,GAAG;MAEF,IAAM/lC,CAAC,GAAGurB,CAAC,CAAC5+B,IAAI;QACfsT,CAAC,GAAGsrB,CAAC,CAAClhC,IAAI,CAACA,IAAI;MAEhB,IAAK,CAAEya,MAAM,CAAE9E,CAAC,EAAEC,CAAC,CAAE,IAAI4rC,UAAU,CAAE7rC,CAAC,EAAEurB,CAAC,EAAEA,CAAC,CAAClhC,IAAI,EAAE4V,CAAC,CAAE,IAAI6xH,aAAa,CAAE9xH,CAAC,EAAEC,CAAC,CAAE,IAAI6xH,aAAa,CAAE7xH,CAAC,EAAED,CAAC,CAAE,EAAG;QAE1Go9D,SAAS,CAACryE,IAAI,CAAEiV,CAAC,CAACzU,CAAC,GAAGskI,GAAG,GAAG,CAAC,CAAE;QAC/BzyD,SAAS,CAACryE,IAAI,CAAEwgC,CAAC,CAAChgC,CAAC,GAAGskI,GAAG,GAAG,CAAC,CAAE;QAC/BzyD,SAAS,CAACryE,IAAI,CAAEkV,CAAC,CAAC1U,CAAC,GAAGskI,GAAG,GAAG,CAAC,CAAE;;QAE/B;QACAe,UAAU,CAAErlG,CAAC,CAAE;QACfqlG,UAAU,CAAErlG,CAAC,CAAClhC,IAAI,CAAE;QAEpBkhC,CAAC,GAAGwa,KAAK,GAAG9lC,CAAC;MAEd;MAEAsrB,CAAC,GAAGA,CAAC,CAAClhC,IAAI;IAEX,CAAC,QAASkhC,CAAC,KAAKwa,KAAK;IAErB,OAAO8qF,YAAY,CAAEtlG,CAAC,CAAE;EAEzB;;EAEA;EACA,SAASgmG,WAAWA,CAAExrF,KAAK,EAAEq3B,SAAS,EAAEyyD,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;IAElE;IACA,IAAItwH,CAAC,GAAG+lC,KAAK;IACb,GAAG;MAEF,IAAI9lC,CAAC,GAAGD,CAAC,CAAC3V,IAAI,CAACA,IAAI;MACnB,OAAQ4V,CAAC,KAAKD,CAAC,CAACrT,IAAI,EAAG;QAEtB,IAAKqT,CAAC,CAACzU,CAAC,KAAK0U,CAAC,CAAC1U,CAAC,IAAIwmI,eAAe,CAAE/xH,CAAC,EAAEC,CAAC,CAAE,EAAG;UAE7C;UACA,IAAIC,CAAC,GAAG8xH,YAAY,CAAEhyH,CAAC,EAAEC,CAAC,CAAE;;UAE5B;UACAD,CAAC,GAAG6wH,YAAY,CAAE7wH,CAAC,EAAEA,CAAC,CAAC3V,IAAI,CAAE;UAC7B6V,CAAC,GAAG2wH,YAAY,CAAE3wH,CAAC,EAAEA,CAAC,CAAC7V,IAAI,CAAE;;UAE7B;UACAmmI,YAAY,CAAExwH,CAAC,EAAEo9D,SAAS,EAAEyyD,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAC,CAAE;UACzDE,YAAY,CAAEtwH,CAAC,EAAEk9D,SAAS,EAAEyyD,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAC,CAAE;UACzD;QAED;QAEArwH,CAAC,GAAGA,CAAC,CAAC5V,IAAI;MAEX;MAEA2V,CAAC,GAAGA,CAAC,CAAC3V,IAAI;IAEX,CAAC,QAAS2V,CAAC,KAAK+lC,KAAK;EAEtB;;EAEA;EACA,SAASwqF,cAAcA,CAAE3iH,IAAI,EAAEgiH,WAAW,EAAEI,SAAS,EAAEH,GAAG,EAAG;IAE5D,IAAMoC,KAAK,GAAG,EAAE;IAChB,IAAI1mI,CAAC,EAAEovB,GAAG,EAAEorB,KAAK,EAAEiG,GAAG,EAAE4sC,IAAI;IAE5B,KAAMrtF,CAAC,GAAG,CAAC,EAAEovB,GAAG,GAAGi1G,WAAW,CAACtkI,MAAM,EAAEC,CAAC,GAAGovB,GAAG,EAAEpvB,CAAC,EAAG,EAAG;MAEtDw6C,KAAK,GAAG6pF,WAAW,CAAErkI,CAAC,CAAE,GAAGskI,GAAG;MAC9B7jF,GAAG,GAAGzgD,CAAC,GAAGovB,GAAG,GAAG,CAAC,GAAGi1G,WAAW,CAAErkI,CAAC,GAAG,CAAC,CAAE,GAAGskI,GAAG,GAAGjiH,IAAI,CAACtiB,MAAM;MAC5DstF,IAAI,GAAGq3C,UAAU,CAAEriH,IAAI,EAAEm4B,KAAK,EAAEiG,GAAG,EAAE6jF,GAAG,EAAE,KAAK,CAAE;MACjD,IAAKj3C,IAAI,KAAKA,IAAI,CAACvuF,IAAI,EAAGuuF,IAAI,CAACm4C,OAAO,GAAG,IAAI;MAC7CkB,KAAK,CAAClnI,IAAI,CAAEmnI,WAAW,CAAEt5C,IAAI,CAAE,CAAE;IAElC;IAEAq5C,KAAK,CAACzyD,IAAI,CAAE2yD,QAAQ,CAAE;;IAEtB;IACA,KAAM5mI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0mI,KAAK,CAAC3mI,MAAM,EAAEC,CAAC,EAAG,EAAG;MAErCykI,SAAS,GAAGoC,aAAa,CAAEH,KAAK,CAAE1mI,CAAC,CAAE,EAAEykI,SAAS,CAAE;IAEnD;IAEA,OAAOA,SAAS;EAEjB;EAEA,SAASmC,QAAQA,CAAEnyH,CAAC,EAAEC,CAAC,EAAG;IAEzB,OAAOD,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;EAEjB;;EAEA;EACA,SAAS40H,aAAaA,CAAE3C,IAAI,EAAEO,SAAS,EAAG;IAEzC,IAAMqC,MAAM,GAAGC,cAAc,CAAE7C,IAAI,EAAEO,SAAS,CAAE;IAChD,IAAK,CAAEqC,MAAM,EAAG;MAEf,OAAOrC,SAAS;IAEjB;IAEA,IAAMuC,aAAa,GAAGP,YAAY,CAAEK,MAAM,EAAE5C,IAAI,CAAE;;IAElD;IACAoB,YAAY,CAAE0B,aAAa,EAAEA,aAAa,CAACloI,IAAI,CAAE;IACjD,OAAOwmI,YAAY,CAAEwB,MAAM,EAAEA,MAAM,CAAChoI,IAAI,CAAE;EAE3C;;EAEA;EACA,SAASioI,cAAcA,CAAE7C,IAAI,EAAEO,SAAS,EAAG;IAE1C,IAAIzkG,CAAC,GAAGykG,SAAS;MAChBz0G,EAAE,GAAG,CAAE8C,QAAQ;MACf/gB,CAAC;IAEF,IAAMk1H,EAAE,GAAG/C,IAAI,CAACjyH,CAAC;MAAEi1H,EAAE,GAAGhD,IAAI,CAAC3xH,CAAC;;IAE9B;IACA;IACA,GAAG;MAEF,IAAK20H,EAAE,IAAIlnG,CAAC,CAACztB,CAAC,IAAI20H,EAAE,IAAIlnG,CAAC,CAAClhC,IAAI,CAACyT,CAAC,IAAIytB,CAAC,CAAClhC,IAAI,CAACyT,CAAC,KAAKytB,CAAC,CAACztB,CAAC,EAAG;QAEtD,IAAMN,CAAC,GAAG+tB,CAAC,CAAC/tB,CAAC,GAAG,CAAEi1H,EAAE,GAAGlnG,CAAC,CAACztB,CAAC,KAAOytB,CAAC,CAAClhC,IAAI,CAACmT,CAAC,GAAG+tB,CAAC,CAAC/tB,CAAC,CAAE,IAAK+tB,CAAC,CAAClhC,IAAI,CAACyT,CAAC,GAAGytB,CAAC,CAACztB,CAAC,CAAE;QACtE,IAAKN,CAAC,IAAIg1H,EAAE,IAAIh1H,CAAC,GAAG+d,EAAE,EAAG;UAExBA,EAAE,GAAG/d,CAAC;UACNF,CAAC,GAAGiuB,CAAC,CAAC/tB,CAAC,GAAG+tB,CAAC,CAAClhC,IAAI,CAACmT,CAAC,GAAG+tB,CAAC,GAAGA,CAAC,CAAClhC,IAAI;UAC/B,IAAKmT,CAAC,KAAKg1H,EAAE,EAAG,OAAOl1H,CAAC,CAAC,CAAC;QAE3B;MAED;;MAEAiuB,CAAC,GAAGA,CAAC,CAAClhC,IAAI;IAEX,CAAC,QAASkhC,CAAC,KAAKykG,SAAS;IAEzB,IAAK,CAAE1yH,CAAC,EAAG,OAAO,IAAI;;IAEtB;IACA;IACA;;IAEA,IAAMxQ,IAAI,GAAGwQ,CAAC;MACbo1H,EAAE,GAAGp1H,CAAC,CAACE,CAAC;MACRm1H,EAAE,GAAGr1H,CAAC,CAACQ,CAAC;IACT,IAAI80H,MAAM,GAAGv0G,QAAQ;MAAEmzB,GAAG;IAE1BjmB,CAAC,GAAGjuB,CAAC;IAEL,GAAG;MAEF,IAAKk1H,EAAE,IAAIjnG,CAAC,CAAC/tB,CAAC,IAAI+tB,CAAC,CAAC/tB,CAAC,IAAIk1H,EAAE,IAAIF,EAAE,KAAKjnG,CAAC,CAAC/tB,CAAC,IACvCg0H,eAAe,CAAEiB,EAAE,GAAGE,EAAE,GAAGH,EAAE,GAAGj3G,EAAE,EAAEk3G,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEF,EAAE,GAAGE,EAAE,GAAGp3G,EAAE,GAAGi3G,EAAE,EAAEC,EAAE,EAAElnG,CAAC,CAAC/tB,CAAC,EAAE+tB,CAAC,CAACztB,CAAC,CAAE,EAAG;QAErF0zC,GAAG,GAAGl1C,IAAI,CAACgC,GAAG,CAAEm0H,EAAE,GAAGlnG,CAAC,CAACztB,CAAC,CAAE,IAAK00H,EAAE,GAAGjnG,CAAC,CAAC/tB,CAAC,CAAE,CAAC,CAAC;;QAE3C,IAAKs0H,aAAa,CAAEvmG,CAAC,EAAEkkG,IAAI,CAAE,KAAMj+E,GAAG,GAAGohF,MAAM,IAAMphF,GAAG,KAAKohF,MAAM,KAAMrnG,CAAC,CAAC/tB,CAAC,GAAGF,CAAC,CAACE,CAAC,IAAM+tB,CAAC,CAAC/tB,CAAC,KAAKF,CAAC,CAACE,CAAC,IAAIq1H,oBAAoB,CAAEv1H,CAAC,EAAEiuB,CAAC,CAAI,CAAI,CAAE,EAAG;UAE7IjuB,CAAC,GAAGiuB,CAAC;UACLqnG,MAAM,GAAGphF,GAAG;QAEb;MAED;MAEAjmB,CAAC,GAAGA,CAAC,CAAClhC,IAAI;IAEX,CAAC,QAASkhC,CAAC,KAAKz+B,IAAI;IAEpB,OAAOwQ,CAAC;EAET;;EAEA;EACA,SAASu1H,oBAAoBA,CAAEv1H,CAAC,EAAEiuB,CAAC,EAAG;IAErC,OAAOylG,IAAI,CAAE1zH,CAAC,CAAC3Q,IAAI,EAAE2Q,CAAC,EAAEiuB,CAAC,CAAC5+B,IAAI,CAAE,GAAG,CAAC,IAAIqkI,IAAI,CAAEzlG,CAAC,CAAClhC,IAAI,EAAEiT,CAAC,EAAEA,CAAC,CAACjT,IAAI,CAAE,GAAG,CAAC;EAEtE;;EAEA;EACA,SAAS8mI,UAAUA,CAAEprF,KAAK,EAAEmqF,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;IAEjD,IAAI/kG,CAAC,GAAGwa,KAAK;IACb,GAAG;MAEF,IAAKxa,CAAC,CAAC9Z,CAAC,KAAK,CAAC,EAAG8Z,CAAC,CAAC9Z,CAAC,GAAGigH,MAAM,CAAEnmG,CAAC,CAAC/tB,CAAC,EAAE+tB,CAAC,CAACztB,CAAC,EAAEoyH,IAAI,EAAEC,IAAI,EAAEG,OAAO,CAAE;MAC9D/kG,CAAC,CAACqmG,KAAK,GAAGrmG,CAAC,CAAC5+B,IAAI;MAChB4+B,CAAC,CAACsmG,KAAK,GAAGtmG,CAAC,CAAClhC,IAAI;MAChBkhC,CAAC,GAAGA,CAAC,CAAClhC,IAAI;IAEX,CAAC,QAASkhC,CAAC,KAAKwa,KAAK;IAErBxa,CAAC,CAACqmG,KAAK,CAACC,KAAK,GAAG,IAAI;IACpBtmG,CAAC,CAACqmG,KAAK,GAAG,IAAI;IAEdkB,UAAU,CAAEvnG,CAAC,CAAE;EAEhB;;EAEA;EACA;EACA,SAASunG,UAAUA,CAAEl6C,IAAI,EAAG;IAE3B,IAAIrtF,CAAC;MAAEggC,CAAC;MAAExrB,CAAC;MAAEkD,CAAC;MAAE8vH,IAAI;MAAEC,SAAS;MAAEC,KAAK;MAAEC,KAAK;MAC5CC,MAAM,GAAG,CAAC;IAEX,GAAG;MAEF5nG,CAAC,GAAGqtD,IAAI;MACRA,IAAI,GAAG,IAAI;MACXm6C,IAAI,GAAG,IAAI;MACXC,SAAS,GAAG,CAAC;MAEb,OAAQznG,CAAC,EAAG;QAEXynG,SAAS,EAAG;QACZjzH,CAAC,GAAGwrB,CAAC;QACL0nG,KAAK,GAAG,CAAC;QACT,KAAM1nI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4nI,MAAM,EAAE5nI,CAAC,EAAG,EAAG;UAE/B0nI,KAAK,EAAG;UACRlzH,CAAC,GAAGA,CAAC,CAAC8xH,KAAK;UACX,IAAK,CAAE9xH,CAAC,EAAG;QAEZ;QAEAmzH,KAAK,GAAGC,MAAM;QAEd,OAAQF,KAAK,GAAG,CAAC,IAAMC,KAAK,GAAG,CAAC,IAAInzH,CAAG,EAAG;UAEzC,IAAKkzH,KAAK,KAAK,CAAC,KAAMC,KAAK,KAAK,CAAC,IAAI,CAAEnzH,CAAC,IAAIwrB,CAAC,CAAC9Z,CAAC,IAAI1R,CAAC,CAAC0R,CAAC,CAAE,EAAG;YAE1DxO,CAAC,GAAGsoB,CAAC;YACLA,CAAC,GAAGA,CAAC,CAACsmG,KAAK;YACXoB,KAAK,EAAG;UAET,CAAC,MAAM;YAENhwH,CAAC,GAAGlD,CAAC;YACLA,CAAC,GAAGA,CAAC,CAAC8xH,KAAK;YACXqB,KAAK,EAAG;UAET;UAEA,IAAKH,IAAI,EAAGA,IAAI,CAAClB,KAAK,GAAG5uH,CAAC,CAAC,KACtB21E,IAAI,GAAG31E,CAAC;UAEbA,CAAC,CAAC2uH,KAAK,GAAGmB,IAAI;UACdA,IAAI,GAAG9vH,CAAC;QAET;QAEAsoB,CAAC,GAAGxrB,CAAC;MAEN;MAEAgzH,IAAI,CAAClB,KAAK,GAAG,IAAI;MACjBsB,MAAM,IAAI,CAAC;IAEZ,CAAC,QAASH,SAAS,GAAG,CAAC;IAEvB,OAAOp6C,IAAI;EAEZ;;EAEA;EACA,SAAS84C,MAAMA,CAAEl0H,CAAC,EAAEM,CAAC,EAAEoyH,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;IAE5C;IACA9yH,CAAC,GAAG,CAAEA,CAAC,GAAG0yH,IAAI,IAAKI,OAAO,GAAG,CAAC;IAC9BxyH,CAAC,GAAG,CAAEA,CAAC,GAAGqyH,IAAI,IAAKG,OAAO,GAAG,CAAC;IAE9B9yH,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;IACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;IACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;IACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;IAEnCM,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;IACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;IACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;IACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;IAEnC,OAAON,CAAC,GAAKM,CAAC,IAAI,CAAG;EAEtB;;EAEA;EACA,SAASo0H,WAAWA,CAAEnsF,KAAK,EAAG;IAE7B,IAAIxa,CAAC,GAAGwa,KAAK;MACZqtF,QAAQ,GAAGrtF,KAAK;IACjB,GAAG;MAEF,IAAKxa,CAAC,CAAC/tB,CAAC,GAAG41H,QAAQ,CAAC51H,CAAC,IAAM+tB,CAAC,CAAC/tB,CAAC,KAAK41H,QAAQ,CAAC51H,CAAC,IAAI+tB,CAAC,CAACztB,CAAC,GAAGs1H,QAAQ,CAACt1H,CAAG,EAAGs1H,QAAQ,GAAG7nG,CAAC;MAClFA,CAAC,GAAGA,CAAC,CAAClhC,IAAI;IAEX,CAAC,QAASkhC,CAAC,KAAKwa,KAAK;IAErB,OAAOqtF,QAAQ;EAEhB;;EAEA;EACA,SAAS5B,eAAeA,CAAEh1G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAEjT,EAAE,EAAEC,EAAE,EAAEo5G,EAAE,EAAEC,EAAE,EAAG;IAE1D,OAAO,CAAEt5G,EAAE,GAAGq5G,EAAE,KAAOvmG,EAAE,GAAGwmG,EAAE,CAAE,IAAI,CAAEzmG,EAAE,GAAGwmG,EAAE,KAAOp5G,EAAE,GAAGq5G,EAAE,CAAE,IACnD,CAAEzmG,EAAE,GAAGwmG,EAAE,KAAOpmG,EAAE,GAAGqmG,EAAE,CAAE,IAAI,CAAEtmG,EAAE,GAAGqmG,EAAE,KAAOvmG,EAAE,GAAGwmG,EAAE,CAAE,IACtD,CAAEtmG,EAAE,GAAGqmG,EAAE,KAAOp5G,EAAE,GAAGq5G,EAAE,CAAE,IAAI,CAAEt5G,EAAE,GAAGq5G,EAAE,KAAOpmG,EAAE,GAAGqmG,EAAE,CAAE;EAEjE;;EAEA;EACA,SAAS8O,eAAeA,CAAE/xH,CAAC,EAAEC,CAAC,EAAG;IAEhC,OAAOD,CAAC,CAAC3V,IAAI,CAACkB,CAAC,KAAK0U,CAAC,CAAC1U,CAAC,IAAIyU,CAAC,CAACrT,IAAI,CAACpB,CAAC,KAAK0U,CAAC,CAAC1U,CAAC,IAAI,CAAE8nI,iBAAiB,CAAErzH,CAAC,EAAEC,CAAC,CAAE;IAAI;IAClE6xH,aAAa,CAAE9xH,CAAC,EAAEC,CAAC,CAAE,IAAI6xH,aAAa,CAAE7xH,CAAC,EAAED,CAAC,CAAE,IAAIszH,YAAY,CAAEtzH,CAAC,EAAEC,CAAC,CAAE;IAAI;IACzE+wH,IAAI,CAAEhxH,CAAC,CAACrT,IAAI,EAAEqT,CAAC,EAAEC,CAAC,CAACtT,IAAI,CAAE,IAAIqkI,IAAI,CAAEhxH,CAAC,EAAEC,CAAC,CAACtT,IAAI,EAAEsT,CAAC,CAAE,CAAE;IAAI;IACzD6E,MAAM,CAAE9E,CAAC,EAAEC,CAAC,CAAE,IAAI+wH,IAAI,CAAEhxH,CAAC,CAACrT,IAAI,EAAEqT,CAAC,EAAEA,CAAC,CAAC3V,IAAI,CAAE,GAAG,CAAC,IAAI2mI,IAAI,CAAE/wH,CAAC,CAACtT,IAAI,EAAEsT,CAAC,EAAEA,CAAC,CAAC5V,IAAI,CAAE,GAAG,CAAC,CAAE,CAAC,CAAC;EAEhG;;EAEA;EACA,SAAS2mI,IAAIA,CAAEzlG,CAAC,EAAExrB,CAAC,EAAEqJ,CAAC,EAAG;IAExB,OAAO,CAAErJ,CAAC,CAACjC,CAAC,GAAGytB,CAAC,CAACztB,CAAC,KAAOsL,CAAC,CAAC5L,CAAC,GAAGuC,CAAC,CAACvC,CAAC,CAAE,GAAG,CAAEuC,CAAC,CAACvC,CAAC,GAAG+tB,CAAC,CAAC/tB,CAAC,KAAO4L,CAAC,CAACtL,CAAC,GAAGiC,CAAC,CAACjC,CAAC,CAAE;EAErE;;EAEA;EACA,SAASgH,MAAMA,CAAEud,EAAE,EAAEC,EAAE,EAAG;IAEzB,OAAOD,EAAE,CAAC7kB,CAAC,KAAK8kB,EAAE,CAAC9kB,CAAC,IAAI6kB,EAAE,CAACvkB,CAAC,KAAKwkB,EAAE,CAACxkB,CAAC;EAEtC;;EAEA;EACA,SAAS+tC,UAAUA,CAAExpB,EAAE,EAAEkxG,EAAE,EAAEjxG,EAAE,EAAEkxG,EAAE,EAAG;IAErC,IAAMC,EAAE,GAAGttG,IAAI,CAAE6qG,IAAI,CAAE3uG,EAAE,EAAEkxG,EAAE,EAAEjxG,EAAE,CAAE,CAAE;IACrC,IAAMoxG,EAAE,GAAGvtG,IAAI,CAAE6qG,IAAI,CAAE3uG,EAAE,EAAEkxG,EAAE,EAAEC,EAAE,CAAE,CAAE;IACrC,IAAMG,EAAE,GAAGxtG,IAAI,CAAE6qG,IAAI,CAAE1uG,EAAE,EAAEkxG,EAAE,EAAEnxG,EAAE,CAAE,CAAE;IACrC,IAAMuxG,EAAE,GAAGztG,IAAI,CAAE6qG,IAAI,CAAE1uG,EAAE,EAAEkxG,EAAE,EAAED,EAAE,CAAE,CAAE;IAErC,IAAKE,EAAE,KAAKC,EAAE,IAAIC,EAAE,KAAKC,EAAE,EAAG,OAAO,IAAI,CAAC,CAAC;;IAE3C,IAAKH,EAAE,KAAK,CAAC,IAAII,SAAS,CAAExxG,EAAE,EAAEC,EAAE,EAAEixG,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC;IACxD,IAAKG,EAAE,KAAK,CAAC,IAAIG,SAAS,CAAExxG,EAAE,EAAEmxG,EAAE,EAAED,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC;IACxD,IAAKI,EAAE,KAAK,CAAC,IAAIE,SAAS,CAAEvxG,EAAE,EAAED,EAAE,EAAEmxG,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC;IACxD,IAAKI,EAAE,KAAK,CAAC,IAAIC,SAAS,CAAEvxG,EAAE,EAAEixG,EAAE,EAAEC,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC;;IAExD,OAAO,KAAK;EAEb;;EAEA;EACA,SAASK,SAASA,CAAEtoG,CAAC,EAAExrB,CAAC,EAAEqJ,CAAC,EAAG;IAE7B,OAAOrJ,CAAC,CAACvC,CAAC,IAAIlB,IAAI,CAACa,GAAG,CAAEouB,CAAC,CAAC/tB,CAAC,EAAE4L,CAAC,CAAC5L,CAAC,CAAE,IAAIuC,CAAC,CAACvC,CAAC,IAAIlB,IAAI,CAACY,GAAG,CAAEquB,CAAC,CAAC/tB,CAAC,EAAE4L,CAAC,CAAC5L,CAAC,CAAE,IAAIuC,CAAC,CAACjC,CAAC,IAAIxB,IAAI,CAACa,GAAG,CAAEouB,CAAC,CAACztB,CAAC,EAAEsL,CAAC,CAACtL,CAAC,CAAE,IAAIiC,CAAC,CAACjC,CAAC,IAAIxB,IAAI,CAACY,GAAG,CAAEquB,CAAC,CAACztB,CAAC,EAAEsL,CAAC,CAACtL,CAAC,CAAE;EAEhI;EAEA,SAASqoB,IAAIA,CAAE2tG,GAAG,EAAG;IAEpB,OAAOA,GAAG,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC;EAEvC;;EAEA;EACA,SAAST,iBAAiBA,CAAErzH,CAAC,EAAEC,CAAC,EAAG;IAElC,IAAIsrB,CAAC,GAAGvrB,CAAC;IACT,GAAG;MAEF,IAAKurB,CAAC,CAAChgC,CAAC,KAAKyU,CAAC,CAACzU,CAAC,IAAIggC,CAAC,CAAClhC,IAAI,CAACkB,CAAC,KAAKyU,CAAC,CAACzU,CAAC,IAAIggC,CAAC,CAAChgC,CAAC,KAAK0U,CAAC,CAAC1U,CAAC,IAAIggC,CAAC,CAAClhC,IAAI,CAACkB,CAAC,KAAK0U,CAAC,CAAC1U,CAAC,IACtEsgD,UAAU,CAAEtgB,CAAC,EAAEA,CAAC,CAAClhC,IAAI,EAAE2V,CAAC,EAAEC,CAAC,CAAE,EAAG,OAAO,IAAI;MAC5CsrB,CAAC,GAAGA,CAAC,CAAClhC,IAAI;IAEX,CAAC,QAASkhC,CAAC,KAAKvrB,CAAC;IAEjB,OAAO,KAAK;EAEb;;EAEA;EACA,SAAS8xH,aAAaA,CAAE9xH,CAAC,EAAEC,CAAC,EAAG;IAE9B,OAAO+wH,IAAI,CAAEhxH,CAAC,CAACrT,IAAI,EAAEqT,CAAC,EAAEA,CAAC,CAAC3V,IAAI,CAAE,GAAG,CAAC,GACnC2mI,IAAI,CAAEhxH,CAAC,EAAEC,CAAC,EAAED,CAAC,CAAC3V,IAAI,CAAE,IAAI,CAAC,IAAI2mI,IAAI,CAAEhxH,CAAC,EAAEA,CAAC,CAACrT,IAAI,EAAEsT,CAAC,CAAE,IAAI,CAAC,GACtD+wH,IAAI,CAAEhxH,CAAC,EAAEC,CAAC,EAAED,CAAC,CAACrT,IAAI,CAAE,GAAG,CAAC,IAAIqkI,IAAI,CAAEhxH,CAAC,EAAEA,CAAC,CAAC3V,IAAI,EAAE4V,CAAC,CAAE,GAAG,CAAC;EAEtD;;EAEA;EACA,SAASqzH,YAAYA,CAAEtzH,CAAC,EAAEC,CAAC,EAAG;IAE7B,IAAIsrB,CAAC,GAAGvrB,CAAC;MACR+zH,MAAM,GAAG,KAAK;IACf,IAAM/Q,EAAE,GAAG,CAAEhjH,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC,IAAK,CAAC;MAC3BylH,EAAE,GAAG,CAAEjjH,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC,IAAK,CAAC;IACvB,GAAG;MAEF,IAASytB,CAAC,CAACztB,CAAC,GAAGmlH,EAAE,KAAS13F,CAAC,CAAClhC,IAAI,CAACyT,CAAC,GAAGmlH,EAAI,IAAM13F,CAAC,CAAClhC,IAAI,CAACyT,CAAC,KAAKytB,CAAC,CAACztB,CAAC,IAC5DklH,EAAE,GAAG,CAAEz3F,CAAC,CAAClhC,IAAI,CAACmT,CAAC,GAAG+tB,CAAC,CAAC/tB,CAAC,KAAOylH,EAAE,GAAG13F,CAAC,CAACztB,CAAC,CAAE,IAAKytB,CAAC,CAAClhC,IAAI,CAACyT,CAAC,GAAGytB,CAAC,CAACztB,CAAC,CAAE,GAAGytB,CAAC,CAAC/tB,CAAG,EACrEu2H,MAAM,GAAG,CAAEA,MAAM;MAClBxoG,CAAC,GAAGA,CAAC,CAAClhC,IAAI;IAEX,CAAC,QAASkhC,CAAC,KAAKvrB,CAAC;IAEjB,OAAO+zH,MAAM;EAEd;;EAEA;EACA;EACA,SAAS/B,YAAYA,CAAEhyH,CAAC,EAAEC,CAAC,EAAG;IAE7B,IAAMvC,EAAE,GAAG,IAAIs2H,IAAI,CAAEh0H,CAAC,CAACzU,CAAC,EAAEyU,CAAC,CAACxC,CAAC,EAAEwC,CAAC,CAAClC,CAAC,CAAE;MACnCF,EAAE,GAAG,IAAIo2H,IAAI,CAAE/zH,CAAC,CAAC1U,CAAC,EAAE0U,CAAC,CAACzC,CAAC,EAAEyC,CAAC,CAACnC,CAAC,CAAE;MAC9Bm2H,EAAE,GAAGj0H,CAAC,CAAC3V,IAAI;MACX6pI,EAAE,GAAGj0H,CAAC,CAACtT,IAAI;IAEZqT,CAAC,CAAC3V,IAAI,GAAG4V,CAAC;IACVA,CAAC,CAACtT,IAAI,GAAGqT,CAAC;IAEVtC,EAAE,CAACrT,IAAI,GAAG4pI,EAAE;IACZA,EAAE,CAACtnI,IAAI,GAAG+Q,EAAE;IAEZE,EAAE,CAACvT,IAAI,GAAGqT,EAAE;IACZA,EAAE,CAAC/Q,IAAI,GAAGiR,EAAE;IAEZs2H,EAAE,CAAC7pI,IAAI,GAAGuT,EAAE;IACZA,EAAE,CAACjR,IAAI,GAAGunI,EAAE;IAEZ,OAAOt2H,EAAE;EAEV;;EAEA;EACA,SAAS+yH,UAAUA,CAAEplI,CAAC,EAAEiS,CAAC,EAAEM,CAAC,EAAE2hH,IAAI,EAAG;IAEpC,IAAMl0F,CAAC,GAAG,IAAIyoG,IAAI,CAAEzoI,CAAC,EAAEiS,CAAC,EAAEM,CAAC,CAAE;IAE7B,IAAK,CAAE2hH,IAAI,EAAG;MAEbl0F,CAAC,CAAC5+B,IAAI,GAAG4+B,CAAC;MACVA,CAAC,CAAClhC,IAAI,GAAGkhC,CAAC;IAEX,CAAC,MAAM;MAENA,CAAC,CAAClhC,IAAI,GAAGo1H,IAAI,CAACp1H,IAAI;MAClBkhC,CAAC,CAAC5+B,IAAI,GAAG8yH,IAAI;MACbA,IAAI,CAACp1H,IAAI,CAACsC,IAAI,GAAG4+B,CAAC;MAClBk0F,IAAI,CAACp1H,IAAI,GAAGkhC,CAAC;IAEd;IAEA,OAAOA,CAAC;EAET;EAEA,SAASqlG,UAAUA,CAAErlG,CAAC,EAAG;IAExBA,CAAC,CAAClhC,IAAI,CAACsC,IAAI,GAAG4+B,CAAC,CAAC5+B,IAAI;IACpB4+B,CAAC,CAAC5+B,IAAI,CAACtC,IAAI,GAAGkhC,CAAC,CAAClhC,IAAI;IAEpB,IAAKkhC,CAAC,CAACqmG,KAAK,EAAGrmG,CAAC,CAACqmG,KAAK,CAACC,KAAK,GAAGtmG,CAAC,CAACsmG,KAAK;IACtC,IAAKtmG,CAAC,CAACsmG,KAAK,EAAGtmG,CAAC,CAACsmG,KAAK,CAACD,KAAK,GAAGrmG,CAAC,CAACqmG,KAAK;EAEvC;EAEA,SAASoC,IAAIA,CAAEzoI,CAAC,EAAEiS,CAAC,EAAEM,CAAC,EAAG;IAExB;IACA,IAAI,CAACvS,CAAC,GAAGA,CAAC;;IAEV;IACA,IAAI,CAACiS,CAAC,GAAGA,CAAC;IACV,IAAI,CAACM,CAAC,GAAGA,CAAC;;IAEV;IACA,IAAI,CAACnR,IAAI,GAAG,IAAI;IAChB,IAAI,CAACtC,IAAI,GAAG,IAAI;;IAEhB;IACA,IAAI,CAAConB,CAAC,GAAG,CAAC;;IAEV;IACA,IAAI,CAACmgH,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,KAAK,GAAG,IAAI;;IAEjB;IACA,IAAI,CAACd,OAAO,GAAG,KAAK;EAErB;EAEA,SAASL,UAAUA,CAAE9iH,IAAI,EAAEm4B,KAAK,EAAEiG,GAAG,EAAE6jF,GAAG,EAAG;IAE5C,IAAIh1D,GAAG,GAAG,CAAC;IACX,KAAM,IAAItvE,CAAC,GAAGw6C,KAAK,EAAE5jB,CAAC,GAAG6pB,GAAG,GAAG6jF,GAAG,EAAEtkI,CAAC,GAAGygD,GAAG,EAAEzgD,CAAC,IAAIskI,GAAG,EAAG;MAEvDh1D,GAAG,IAAI,CAAEjtD,IAAI,CAAEuU,CAAC,CAAE,GAAGvU,IAAI,CAAEriB,CAAC,CAAE,KAAOqiB,IAAI,CAAEriB,CAAC,GAAG,CAAC,CAAE,GAAGqiB,IAAI,CAAEuU,CAAC,GAAG,CAAC,CAAE,CAAE;MACpEA,CAAC,GAAG52B,CAAC;IAEN;IAEA,OAAOsvE,GAAG;EAEX;EAAC,IAEKs5D,UAAU;IAAA,SAAAA,WAAA;MAAArmI,eAAA,OAAAqmI,UAAA;IAAA;IAAA7lI,YAAA,CAAA6lI,UAAA;MAAA3uI,GAAA;MAAAE,KAAA;MAEf;;MAEA,SAAAsrI,KAAaoD,OAAO,EAAG;QAEtB,IAAM/2H,CAAC,GAAG+2H,OAAO,CAAC9oI,MAAM;QACxB,IAAI0U,CAAC,GAAG,GAAG;QAEX,KAAM,IAAIurB,CAAC,GAAGluB,CAAC,GAAG,CAAC,EAAE0C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1C,CAAC,EAAEkuB,CAAC,GAAGxrB,CAAC,EAAG,EAAG;UAE7CC,CAAC,IAAIo0H,OAAO,CAAE7oG,CAAC,CAAE,CAAC/tB,CAAC,GAAG42H,OAAO,CAAEr0H,CAAC,CAAE,CAACjC,CAAC,GAAGs2H,OAAO,CAAEr0H,CAAC,CAAE,CAACvC,CAAC,GAAG42H,OAAO,CAAE7oG,CAAC,CAAE,CAACztB,CAAC;QAEvE;QAEA,OAAOkC,CAAC,GAAG,GAAG;MAEf;IAAC;MAAAxa,GAAA;MAAAE,KAAA,EAED,SAAA2uI,YAAoB5M,GAAG,EAAG;QAEzB,OAAO0M,UAAU,CAACnD,IAAI,CAAEvJ,GAAG,CAAE,GAAG,CAAC;MAElC;IAAC;MAAAjiI,GAAA;MAAAE,KAAA,EAED,SAAA4uI,iBAAyBF,OAAO,EAAE/E,KAAK,EAAG;QAEzC,IAAMxiF,QAAQ,GAAG,EAAE,CAAC,CAAC;QACrB,IAAM+iF,WAAW,GAAG,EAAE,CAAC,CAAC;QACxB,IAAM2E,KAAK,GAAG,EAAE,CAAC,CAAC;;QAElBC,eAAe,CAAEJ,OAAO,CAAE;QAC1BK,UAAU,CAAE5nF,QAAQ,EAAEunF,OAAO,CAAE;;QAE/B;;QAEA,IAAIM,SAAS,GAAGN,OAAO,CAAC9oI,MAAM;QAE9B+jI,KAAK,CAAClnI,OAAO,CAAEqsI,eAAe,CAAE;QAEhC,KAAM,IAAIjpI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8jI,KAAK,CAAC/jI,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEzCqkI,WAAW,CAAC7kI,IAAI,CAAE2pI,SAAS,CAAE;UAC7BA,SAAS,IAAIrF,KAAK,CAAE9jI,CAAC,CAAE,CAACD,MAAM;UAC9BmpI,UAAU,CAAE5nF,QAAQ,EAAEwiF,KAAK,CAAE9jI,CAAC,CAAE,CAAE;QAEnC;;QAEA;;QAEA,IAAM6xE,SAAS,GAAGsyD,MAAM,CAACC,WAAW,CAAE9iF,QAAQ,EAAE+iF,WAAW,CAAE;;QAE7D;;QAEA,KAAM,IAAIrkI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG6xE,SAAS,CAAC9xE,MAAM,EAAEC,IAAC,IAAI,CAAC,EAAG;UAE/CgpI,KAAK,CAACxpI,IAAI,CAAEqyE,SAAS,CAACvwE,KAAK,CAAEtB,IAAC,EAAEA,IAAC,GAAG,CAAC,CAAE,CAAE;QAE1C;QAEA,OAAOgpI,KAAK;MAEb;IAAC;IAAA,OAAAJ,UAAA;EAAA;EAIF,SAASK,eAAeA,CAAE31G,MAAM,EAAG;IAElC,IAAM3iB,CAAC,GAAG2iB,MAAM,CAACvzB,MAAM;IAEvB,IAAK4Q,CAAC,GAAG,CAAC,IAAI2iB,MAAM,CAAE3iB,CAAC,GAAG,CAAC,CAAE,CAAC4I,MAAM,CAAE+Z,MAAM,CAAE,CAAC,CAAE,CAAE,EAAG;MAErDA,MAAM,CAACpyB,GAAG,EAAE;IAEb;EAED;EAEA,SAASgoI,UAAUA,CAAE5nF,QAAQ,EAAEunF,OAAO,EAAG;IAExC,KAAM,IAAI7oI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6oI,OAAO,CAAC9oI,MAAM,EAAEC,CAAC,EAAG,EAAG;MAE3CshD,QAAQ,CAAC9hD,IAAI,CAAEqpI,OAAO,CAAE7oI,CAAC,CAAE,CAACiS,CAAC,CAAE;MAC/BqvC,QAAQ,CAAC9hD,IAAI,CAAEqpI,OAAO,CAAE7oI,CAAC,CAAE,CAACuS,CAAC,CAAE;IAEhC;EAED;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EApBC,IAsBM62H,eAAe,0BAAAC,gBAAA;IAAA9lH,SAAA,CAAA6lH,eAAA,EAAAC,gBAAA;IAAA,IAAAC,QAAA,GAAA7lH,YAAA,CAAA2lH,eAAA;IAEpB,SAAAA,gBAAa7iG,MAAM,GAAG,IAAIm9F,KAAK,CAAE,CAAE,IAAIztH,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,CAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAE,GAAG,CAAE,CAAE,CAAE,EAAEgS,OAAO,GAAG,CAAC,CAAC,EAAG;MAAA,IAAAshH,OAAA;MAAAhnI,eAAA,OAAA6mI,eAAA;MAEjKG,OAAA,GAAAD,QAAA,CAAArtI,IAAA;MAEAstI,OAAA,CAAKvtI,IAAI,GAAG,iBAAiB;MAE7ButI,OAAA,CAAKhiG,UAAU,GAAG;QACjBhB,MAAM,EAAEA,MAAM;QACdte,OAAO,EAAEA;MACV,CAAC;MAEDse,MAAM,GAAGxjB,KAAK,CAACC,OAAO,CAAEujB,MAAM,CAAE,GAAGA,MAAM,GAAG,CAAEA,MAAM,CAAE;MAEtD,IAAM8a,KAAK,GAAA98B,sBAAA,CAAAglH,OAAA,CAAO;MAElB,IAAMC,aAAa,GAAG,EAAE;MACxB,IAAMC,OAAO,GAAG,EAAE;MAElB,KAAM,IAAIzpI,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG41B,MAAM,CAACxmC,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;QAEjD,IAAMwnC,KAAK,GAAGjB,MAAM,CAAEvmC,CAAC,CAAE;QACzB0pI,QAAQ,CAAEliG,KAAK,CAAE;MAElB;;MAEA;;MAEA+hG,OAAA,CAAK3uF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEuwF,aAAa,EAAE,CAAC,CAAE,CAAE;MAC/ED,OAAA,CAAK3uF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAEwwF,OAAO,EAAE,CAAC,CAAE,CAAE;MAEnEF,OAAA,CAAKvsF,oBAAoB,EAAE;;MAE3B;;MAEA,SAAS0sF,QAAQA,CAAEliG,KAAK,EAAG;QAE1B,IAAMmiG,WAAW,GAAG,EAAE;;QAEtB;;QAEA,IAAMC,aAAa,GAAG3hH,OAAO,CAAC2hH,aAAa,KAAKnrI,SAAS,GAAGwpB,OAAO,CAAC2hH,aAAa,GAAG,EAAE;QACtF,IAAMC,KAAK,GAAG5hH,OAAO,CAAC4hH,KAAK,KAAKprI,SAAS,GAAGwpB,OAAO,CAAC4hH,KAAK,GAAG,CAAC;QAC7D,IAAMzhH,KAAK,GAAGH,OAAO,CAACG,KAAK,KAAK3pB,SAAS,GAAGwpB,OAAO,CAACG,KAAK,GAAG,CAAC;QAE7D,IAAI0hH,YAAY,GAAG7hH,OAAO,CAAC6hH,YAAY,KAAKrrI,SAAS,GAAGwpB,OAAO,CAAC6hH,YAAY,GAAG,IAAI;QACnF,IAAIC,cAAc,GAAG9hH,OAAO,CAAC8hH,cAAc,KAAKtrI,SAAS,GAAGwpB,OAAO,CAAC8hH,cAAc,GAAG,GAAG;QACxF,IAAIC,SAAS,GAAG/hH,OAAO,CAAC+hH,SAAS,KAAKvrI,SAAS,GAAGwpB,OAAO,CAAC+hH,SAAS,GAAGD,cAAc,GAAG,GAAG;QAC1F,IAAIE,WAAW,GAAGhiH,OAAO,CAACgiH,WAAW,KAAKxrI,SAAS,GAAGwpB,OAAO,CAACgiH,WAAW,GAAG,CAAC;QAC7E,IAAIC,aAAa,GAAGjiH,OAAO,CAACiiH,aAAa,KAAKzrI,SAAS,GAAGwpB,OAAO,CAACiiH,aAAa,GAAG,CAAC;QAEnF,IAAMC,WAAW,GAAGliH,OAAO,CAACkiH,WAAW;QAEvC,IAAMC,KAAK,GAAGniH,OAAO,CAACoiH,WAAW,KAAK5rI,SAAS,GAAGwpB,OAAO,CAACoiH,WAAW,GAAGC,gBAAgB;;QAExF;;QAEA,IAAIC,UAAU;UAAEC,aAAa,GAAG,KAAK;QACrC,IAAIC,UAAU,EAAEC,QAAQ,EAAE94G,MAAM,EAAE+4G,SAAS;QAE3C,IAAKR,WAAW,EAAG;UAElBI,UAAU,GAAGJ,WAAW,CAACvW,eAAe,CAAEiW,KAAK,CAAE;UAEjDW,aAAa,GAAG,IAAI;UACpBV,YAAY,GAAG,KAAK,CAAC,CAAC;;UAEtB;;UAEA;;UAEAW,UAAU,GAAGN,WAAW,CAACnV,mBAAmB,CAAE6U,KAAK,EAAE,KAAK,CAAE;;UAE5D;;UAEAa,QAAQ,GAAG,IAAIn7G,OAAO,EAAE;UACxBqC,MAAM,GAAG,IAAIrC,OAAO,EAAE;UACtBo7G,SAAS,GAAG,IAAIp7G,OAAO,EAAE;QAE1B;;QAEA;;QAEA,IAAK,CAAEu6G,YAAY,EAAG;UAErBI,aAAa,GAAG,CAAC;UACjBH,cAAc,GAAG,CAAC;UAClBC,SAAS,GAAG,CAAC;UACbC,WAAW,GAAG,CAAC;QAEhB;;QAEA;;QAEA,IAAMW,WAAW,GAAGpjG,KAAK,CAACy8F,aAAa,CAAE2F,aAAa,CAAE;QAExD,IAAItoF,QAAQ,GAAGspF,WAAW,CAACpjG,KAAK;QAChC,IAAMs8F,KAAK,GAAG8G,WAAW,CAAC9G,KAAK;QAE/B,IAAM7iI,OAAO,GAAG,CAAE2nI,UAAU,CAACE,WAAW,CAAExnF,QAAQ,CAAE;QAEpD,IAAKrgD,OAAO,EAAG;UAEdqgD,QAAQ,GAAGA,QAAQ,CAACrgD,OAAO,EAAE;;UAE7B;;UAEA,KAAM,IAAIgc,CAAC,GAAG,CAAC,EAAE4tH,EAAE,GAAG/G,KAAK,CAAC/jI,MAAM,EAAEkd,CAAC,GAAG4tH,EAAE,EAAE5tH,CAAC,EAAG,EAAG;YAElD,IAAM6tH,KAAK,GAAGhH,KAAK,CAAE7mH,CAAC,CAAE;YAExB,IAAK2rH,UAAU,CAACE,WAAW,CAAEgC,KAAK,CAAE,EAAG;cAEtChH,KAAK,CAAE7mH,CAAC,CAAE,GAAG6tH,KAAK,CAAC7pI,OAAO,EAAE;YAE7B;UAED;QAED;QAGA,IAAM+nI,KAAK,GAAGJ,UAAU,CAACG,gBAAgB,CAAEznF,QAAQ,EAAEwiF,KAAK,CAAE;;QAE5D;;QAEA,IAAM+E,OAAO,GAAGvnF,QAAQ,CAAC,CAAC;;QAE1B,KAAM,IAAIrkC,EAAC,GAAG,CAAC,EAAE4tH,GAAE,GAAG/G,KAAK,CAAC/jI,MAAM,EAAEkd,EAAC,GAAG4tH,GAAE,EAAE5tH,EAAC,EAAG,EAAG;UAElD,IAAM6tH,MAAK,GAAGhH,KAAK,CAAE7mH,EAAC,CAAE;UAExBqkC,QAAQ,GAAGA,QAAQ,CAACxgC,MAAM,CAAEgqH,MAAK,CAAE;QAEpC;QAGA,SAASC,QAAQA,CAAEC,EAAE,EAAE5V,GAAG,EAAE5hG,IAAI,EAAG;UAElC,IAAK,CAAE4hG,GAAG,EAAG1xH,OAAO,CAAChG,KAAK,CAAE,2CAA2C,CAAE;UAEzE,OAAOstI,EAAE,CAACr0H,KAAK,EAAE,CAACM,eAAe,CAAEm+G,GAAG,EAAE5hG,IAAI,CAAE;QAE/C;QAEA,IAAMy3G,IAAI,GAAG3pF,QAAQ,CAACvhD,MAAM;UAAEmrI,IAAI,GAAGlC,KAAK,CAACjpI,MAAM;;QAGjD;;QAGA,SAASorI,WAAWA,CAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAG;UAE5C;UACA;UACA;UACA;UACA;UACA;;UAEA,IAAIC,SAAS,EAAEC,SAAS,EAAEC,SAAS,CAAC,CAAC;;UAErC;UACA;;UAEA,IAAMC,QAAQ,GAAGN,IAAI,CAACn5H,CAAC,GAAGo5H,MAAM,CAACp5H,CAAC;YACjC05H,QAAQ,GAAGP,IAAI,CAAC74H,CAAC,GAAG84H,MAAM,CAAC94H,CAAC;UAC7B,IAAMq5H,QAAQ,GAAGN,MAAM,CAACr5H,CAAC,GAAGm5H,IAAI,CAACn5H,CAAC;YACjC45H,QAAQ,GAAGP,MAAM,CAAC/4H,CAAC,GAAG64H,IAAI,CAAC74H,CAAC;UAE7B,IAAMu5H,YAAY,GAAKJ,QAAQ,GAAGA,QAAQ,GAAGC,QAAQ,GAAGA,QAAU;;UAElE;UACA,IAAMI,UAAU,GAAKL,QAAQ,GAAGG,QAAQ,GAAGF,QAAQ,GAAGC,QAAU;UAEhE,IAAK76H,IAAI,CAACgC,GAAG,CAAEg5H,UAAU,CAAE,GAAGtoI,MAAM,CAAC2oB,OAAO,EAAG;YAE9C;;YAEA;;YAEA,IAAM4/G,UAAU,GAAGj7H,IAAI,CAACsH,IAAI,CAAEyzH,YAAY,CAAE;YAC5C,IAAMG,UAAU,GAAGl7H,IAAI,CAACsH,IAAI,CAAEuzH,QAAQ,GAAGA,QAAQ,GAAGC,QAAQ,GAAGA,QAAQ,CAAE;;YAEzE;;YAEA,IAAMK,aAAa,GAAKb,MAAM,CAACp5H,CAAC,GAAG05H,QAAQ,GAAGK,UAAY;YAC1D,IAAMG,aAAa,GAAKd,MAAM,CAAC94H,CAAC,GAAGm5H,QAAQ,GAAGM,UAAY;YAE1D,IAAMI,aAAa,GAAKd,MAAM,CAACr5H,CAAC,GAAG45H,QAAQ,GAAGI,UAAY;YAC1D,IAAMI,aAAa,GAAKf,MAAM,CAAC/4H,CAAC,GAAGq5H,QAAQ,GAAGK,UAAY;;YAE1D;;YAEA,IAAMK,EAAE,GAAG,CAAE,CAAEF,aAAa,GAAGF,aAAa,IAAKL,QAAQ,GACvD,CAAEQ,aAAa,GAAGF,aAAa,IAAKP,QAAQ,KAC3CF,QAAQ,GAAGG,QAAQ,GAAGF,QAAQ,GAAGC,QAAQ,CAAE;;YAE9C;;YAEAL,SAAS,GAAKW,aAAa,GAAGR,QAAQ,GAAGY,EAAE,GAAGlB,IAAI,CAACn5H,CAAG;YACtDu5H,SAAS,GAAKW,aAAa,GAAGR,QAAQ,GAAGW,EAAE,GAAGlB,IAAI,CAAC74H,CAAG;;YAEtD;YACA;YACA,IAAMg6H,aAAa,GAAKhB,SAAS,GAAGA,SAAS,GAAGC,SAAS,GAAGA,SAAW;YACvE,IAAKe,aAAa,IAAI,CAAC,EAAG;cAEzB,OAAO,IAAIt2H,OAAO,CAAEs1H,SAAS,EAAEC,SAAS,CAAE;YAE3C,CAAC,MAAM;cAENC,SAAS,GAAG16H,IAAI,CAACsH,IAAI,CAAEk0H,aAAa,GAAG,CAAC,CAAE;YAE3C;UAED,CAAC,MAAM;YAEN;;YAEA,IAAIC,YAAY,GAAG,KAAK,CAAC,CAAC;;YAE1B,IAAKd,QAAQ,GAAGjoI,MAAM,CAAC2oB,OAAO,EAAG;cAEhC,IAAKw/G,QAAQ,GAAGnoI,MAAM,CAAC2oB,OAAO,EAAG;gBAEhCogH,YAAY,GAAG,IAAI;cAEpB;YAED,CAAC,MAAM;cAEN,IAAKd,QAAQ,GAAG,CAAEjoI,MAAM,CAAC2oB,OAAO,EAAG;gBAElC,IAAKw/G,QAAQ,GAAG,CAAEnoI,MAAM,CAAC2oB,OAAO,EAAG;kBAElCogH,YAAY,GAAG,IAAI;gBAEpB;cAED,CAAC,MAAM;gBAEN,IAAKz7H,IAAI,CAAC6pB,IAAI,CAAE+wG,QAAQ,CAAE,KAAK56H,IAAI,CAAC6pB,IAAI,CAAEixG,QAAQ,CAAE,EAAG;kBAEtDW,YAAY,GAAG,IAAI;gBAEpB;cAED;YAED;YAEA,IAAKA,YAAY,EAAG;cAEnB;cACAjB,SAAS,GAAG,CAAEI,QAAQ;cACtBH,SAAS,GAAGE,QAAQ;cACpBD,SAAS,GAAG16H,IAAI,CAACsH,IAAI,CAAEyzH,YAAY,CAAE;YAEtC,CAAC,MAAM;cAEN;cACAP,SAAS,GAAGG,QAAQ;cACpBF,SAAS,GAAGG,QAAQ;cACpBF,SAAS,GAAG16H,IAAI,CAACsH,IAAI,CAAEyzH,YAAY,GAAG,CAAC,CAAE;YAE1C;UAED;UAEA,OAAO,IAAI71H,OAAO,CAAEs1H,SAAS,GAAGE,SAAS,EAAED,SAAS,GAAGC,SAAS,CAAE;QAEnE;QAGA,IAAMgB,gBAAgB,GAAG,EAAE;QAE3B,KAAM,IAAIzsI,IAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGm+G,OAAO,CAAC9oI,MAAM,EAAE62B,CAAC,GAAGlM,EAAE,GAAG,CAAC,EAAE2qE,CAAC,GAAGr1F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG0qB,EAAE,EAAE1qB,IAAC,EAAG,EAAE42B,CAAC,EAAG,EAAEy+D,CAAC,EAAG,EAAG;UAEvF,IAAKz+D,CAAC,KAAKlM,EAAE,EAAGkM,CAAC,GAAG,CAAC;UACrB,IAAKy+D,CAAC,KAAK3qE,EAAE,EAAG2qE,CAAC,GAAG,CAAC;;UAErB;UACA;;UAEAo3C,gBAAgB,CAAEzsI,IAAC,CAAE,GAAGmrI,WAAW,CAAEtC,OAAO,CAAE7oI,IAAC,CAAE,EAAE6oI,OAAO,CAAEjyG,CAAC,CAAE,EAAEiyG,OAAO,CAAExzC,CAAC,CAAE,CAAE;QAEhF;QAEA,IAAMq3C,cAAc,GAAG,EAAE;QACzB,IAAIC,gBAAgB;UAAEC,iBAAiB,GAAGH,gBAAgB,CAAC3rH,MAAM,EAAE;QAEnE,KAAM,IAAI7D,GAAC,GAAG,CAAC,EAAE4tH,IAAE,GAAG/G,KAAK,CAAC/jI,MAAM,EAAEkd,GAAC,GAAG4tH,IAAE,EAAE5tH,GAAC,EAAG,EAAG;UAElD,IAAM6tH,OAAK,GAAGhH,KAAK,CAAE7mH,GAAC,CAAE;UAExB0vH,gBAAgB,GAAG,EAAE;UAErB,KAAM,IAAI3sI,IAAC,GAAG,CAAC,EAAE0qB,KAAE,GAAGogH,OAAK,CAAC/qI,MAAM,EAAE62B,GAAC,GAAGlM,KAAE,GAAG,CAAC,EAAE2qE,EAAC,GAAGr1F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG0qB,KAAE,EAAE1qB,IAAC,EAAG,EAAE42B,GAAC,EAAG,EAAEy+D,EAAC,EAAG,EAAG;YAErF,IAAKz+D,GAAC,KAAKlM,KAAE,EAAGkM,GAAC,GAAG,CAAC;YACrB,IAAKy+D,EAAC,KAAK3qE,KAAE,EAAG2qE,EAAC,GAAG,CAAC;;YAErB;YACAs3C,gBAAgB,CAAE3sI,IAAC,CAAE,GAAGmrI,WAAW,CAAEL,OAAK,CAAE9qI,IAAC,CAAE,EAAE8qI,OAAK,CAAEl0G,GAAC,CAAE,EAAEk0G,OAAK,CAAEz1C,EAAC,CAAE,CAAE;UAE1E;UAEAq3C,cAAc,CAACltI,IAAI,CAAEmtI,gBAAgB,CAAE;UACvCC,iBAAiB,GAAGA,iBAAiB,CAAC9rH,MAAM,CAAE6rH,gBAAgB,CAAE;QAEjE;;QAGA;;QAEA,KAAM,IAAIj4H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGw1H,aAAa,EAAEx1H,CAAC,EAAG,EAAG;UAE1C;;UAEA,IAAMjC,CAAC,GAAGiC,CAAC,GAAGw1H,aAAa;UAC3B,IAAMhkH,CAAC,GAAG6jH,cAAc,GAAGh5H,IAAI,CAAC8D,GAAG,CAAEpC,CAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;UACtD,IAAM67H,GAAE,GAAG7C,SAAS,GAAGj5H,IAAI,CAAC+D,GAAG,CAAErC,CAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE,GAAGi5H,WAAW;;UAEhE;;UAEA,KAAM,IAAIjqI,IAAC,GAAG,CAAC,EAAE0qB,KAAE,GAAGm+G,OAAO,CAAC9oI,MAAM,EAAEC,IAAC,GAAG0qB,KAAE,EAAE1qB,IAAC,EAAG,EAAG;YAEpD,IAAM8sI,IAAI,GAAG/B,QAAQ,CAAElC,OAAO,CAAE7oI,IAAC,CAAE,EAAEysI,gBAAgB,CAAEzsI,IAAC,CAAE,EAAE6sI,GAAE,CAAE;YAEhEh2H,CAAC,CAAEi2H,IAAI,CAAC76H,CAAC,EAAE66H,IAAI,CAACv6H,CAAC,EAAE,CAAE2T,CAAC,CAAE;UAEzB;;UAEA;;UAEA,KAAM,IAAIjJ,GAAC,GAAG,CAAC,EAAE4tH,IAAE,GAAG/G,KAAK,CAAC/jI,MAAM,EAAEkd,GAAC,GAAG4tH,IAAE,EAAE5tH,GAAC,EAAG,EAAG;YAElD,IAAM6tH,OAAK,GAAGhH,KAAK,CAAE7mH,GAAC,CAAE;YACxB0vH,gBAAgB,GAAGD,cAAc,CAAEzvH,GAAC,CAAE;YAEtC,KAAM,IAAIjd,IAAC,GAAG,CAAC,EAAE0qB,KAAE,GAAGogH,OAAK,CAAC/qI,MAAM,EAAEC,IAAC,GAAG0qB,KAAE,EAAE1qB,IAAC,EAAG,EAAG;cAElD,IAAM8sI,KAAI,GAAG/B,QAAQ,CAAED,OAAK,CAAE9qI,IAAC,CAAE,EAAE2sI,gBAAgB,CAAE3sI,IAAC,CAAE,EAAE6sI,GAAE,CAAE;cAE9Dh2H,CAAC,CAAEi2H,KAAI,CAAC76H,CAAC,EAAE66H,KAAI,CAACv6H,CAAC,EAAE,CAAE2T,CAAC,CAAE;YAEzB;UAED;QAED;QAEA,IAAM2mH,EAAE,GAAG7C,SAAS,GAAGC,WAAW;;QAElC;;QAEA,KAAM,IAAIjqI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGirI,IAAI,EAAEjrI,IAAC,EAAG,EAAG;UAEjC,IAAM8sI,MAAI,GAAGhD,YAAY,GAAGiB,QAAQ,CAAEzpF,QAAQ,CAAEthD,IAAC,CAAE,EAAE4sI,iBAAiB,CAAE5sI,IAAC,CAAE,EAAE6sI,EAAE,CAAE,GAAGvrF,QAAQ,CAAEthD,IAAC,CAAE;UAEjG,IAAK,CAAEwqI,aAAa,EAAG;YAEtB3zH,CAAC,CAAEi2H,MAAI,CAAC76H,CAAC,EAAE66H,MAAI,CAACv6H,CAAC,EAAE,CAAC,CAAE;UAEvB,CAAC,MAAM;YAEN;;YAEAqf,MAAM,CAAChb,IAAI,CAAE6zH,UAAU,CAAC7uF,OAAO,CAAE,CAAC,CAAE,CAAE,CAACtkC,cAAc,CAAEw1H,MAAI,CAAC76H,CAAC,CAAE;YAC/Dy4H,QAAQ,CAAC9zH,IAAI,CAAE6zH,UAAU,CAACtV,SAAS,CAAE,CAAC,CAAE,CAAE,CAAC79G,cAAc,CAAEw1H,MAAI,CAACv6H,CAAC,CAAE;YAEnEo4H,SAAS,CAAC/zH,IAAI,CAAE2zH,UAAU,CAAE,CAAC,CAAE,CAAE,CAACzzH,GAAG,CAAE8a,MAAM,CAAE,CAAC9a,GAAG,CAAE4zH,QAAQ,CAAE;YAE/D7zH,CAAC,CAAE8zH,SAAS,CAAC14H,CAAC,EAAE04H,SAAS,CAACp4H,CAAC,EAAEo4H,SAAS,CAACzkH,CAAC,CAAE;UAE3C;QAED;;QAEA;QACA;;QAEA,KAAM,IAAIxS,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIm2H,KAAK,EAAEn2H,CAAC,EAAG,EAAG;UAEnC,KAAM,IAAI1T,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGirI,IAAI,EAAEjrI,IAAC,EAAG,EAAG;YAEjC,IAAM8sI,MAAI,GAAGhD,YAAY,GAAGiB,QAAQ,CAAEzpF,QAAQ,CAAEthD,IAAC,CAAE,EAAE4sI,iBAAiB,CAAE5sI,IAAC,CAAE,EAAE6sI,EAAE,CAAE,GAAGvrF,QAAQ,CAAEthD,IAAC,CAAE;YAEjG,IAAK,CAAEwqI,aAAa,EAAG;cAEtB3zH,CAAC,CAAEi2H,MAAI,CAAC76H,CAAC,EAAE66H,MAAI,CAACv6H,CAAC,EAAE6V,KAAK,GAAGyhH,KAAK,GAAGn2H,CAAC,CAAE;YAEvC,CAAC,MAAM;cAEN;;cAEAke,MAAM,CAAChb,IAAI,CAAE6zH,UAAU,CAAC7uF,OAAO,CAAEloC,CAAC,CAAE,CAAE,CAAC4D,cAAc,CAAEw1H,MAAI,CAAC76H,CAAC,CAAE;cAC/Dy4H,QAAQ,CAAC9zH,IAAI,CAAE6zH,UAAU,CAACtV,SAAS,CAAEzhH,CAAC,CAAE,CAAE,CAAC4D,cAAc,CAAEw1H,MAAI,CAACv6H,CAAC,CAAE;cAEnEo4H,SAAS,CAAC/zH,IAAI,CAAE2zH,UAAU,CAAE72H,CAAC,CAAE,CAAE,CAACoD,GAAG,CAAE8a,MAAM,CAAE,CAAC9a,GAAG,CAAE4zH,QAAQ,CAAE;cAE/D7zH,CAAC,CAAE8zH,SAAS,CAAC14H,CAAC,EAAE04H,SAAS,CAACp4H,CAAC,EAAEo4H,SAAS,CAACzkH,CAAC,CAAE;YAE3C;UAED;QAED;;QAGA;;QAEA;QACA,KAAM,IAAIxR,GAAC,GAAGw1H,aAAa,GAAG,CAAC,EAAEx1H,GAAC,IAAI,CAAC,EAAEA,GAAC,EAAG,EAAG;UAE/C,IAAMjC,EAAC,GAAGiC,GAAC,GAAGw1H,aAAa;UAC3B,IAAMhkH,GAAC,GAAG6jH,cAAc,GAAGh5H,IAAI,CAAC8D,GAAG,CAAEpC,EAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;UACtD,IAAM67H,IAAE,GAAG7C,SAAS,GAAGj5H,IAAI,CAAC+D,GAAG,CAAErC,EAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE,GAAGi5H,WAAW;;UAEhE;;UAEA,KAAM,IAAIjqI,IAAC,GAAG,CAAC,EAAE0qB,KAAE,GAAGm+G,OAAO,CAAC9oI,MAAM,EAAEC,IAAC,GAAG0qB,KAAE,EAAE1qB,IAAC,EAAG,EAAG;YAEpD,IAAM8sI,MAAI,GAAG/B,QAAQ,CAAElC,OAAO,CAAE7oI,IAAC,CAAE,EAAEysI,gBAAgB,CAAEzsI,IAAC,CAAE,EAAE6sI,IAAE,CAAE;YAChEh2H,CAAC,CAAEi2H,MAAI,CAAC76H,CAAC,EAAE66H,MAAI,CAACv6H,CAAC,EAAE6V,KAAK,GAAGlC,GAAC,CAAE;UAE/B;;UAEA;;UAEA,KAAM,IAAIjJ,GAAC,GAAG,CAAC,EAAE4tH,IAAE,GAAG/G,KAAK,CAAC/jI,MAAM,EAAEkd,GAAC,GAAG4tH,IAAE,EAAE5tH,GAAC,EAAG,EAAG;YAElD,IAAM6tH,OAAK,GAAGhH,KAAK,CAAE7mH,GAAC,CAAE;YACxB0vH,gBAAgB,GAAGD,cAAc,CAAEzvH,GAAC,CAAE;YAEtC,KAAM,IAAIjd,IAAC,GAAG,CAAC,EAAE0qB,KAAE,GAAGogH,OAAK,CAAC/qI,MAAM,EAAEC,IAAC,GAAG0qB,KAAE,EAAE1qB,IAAC,EAAG,EAAG;cAElD,IAAM8sI,MAAI,GAAG/B,QAAQ,CAAED,OAAK,CAAE9qI,IAAC,CAAE,EAAE2sI,gBAAgB,CAAE3sI,IAAC,CAAE,EAAE6sI,IAAE,CAAE;cAE9D,IAAK,CAAErC,aAAa,EAAG;gBAEtB3zH,CAAC,CAAEi2H,MAAI,CAAC76H,CAAC,EAAE66H,MAAI,CAACv6H,CAAC,EAAE6V,KAAK,GAAGlC,GAAC,CAAE;cAE/B,CAAC,MAAM;gBAENrP,CAAC,CAAEi2H,MAAI,CAAC76H,CAAC,EAAE66H,MAAI,CAACv6H,CAAC,GAAGg4H,UAAU,CAAEV,KAAK,GAAG,CAAC,CAAE,CAACt3H,CAAC,EAAEg4H,UAAU,CAAEV,KAAK,GAAG,CAAC,CAAE,CAAC53H,CAAC,GAAGiU,GAAC,CAAE;cAE/E;YAED;UAED;QAED;;QAEA;;QAEA;;QAEA6mH,aAAa,EAAE;;QAEf;;QAEAC,cAAc,EAAE;;QAGhB;;QAEA,SAASD,aAAaA,CAAA,EAAG;UAExB,IAAMvyF,KAAK,GAAGgvF,aAAa,CAACzpI,MAAM,GAAG,CAAC;UAEtC,IAAK+pI,YAAY,EAAG;YAEnB,IAAIrkB,KAAK,GAAG,CAAC,CAAC,CAAC;YACf,IAAIhsG,MAAM,GAAGwxH,IAAI,GAAGxlB,KAAK;;YAEzB;;YAEA,KAAM,IAAIzlH,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkrI,IAAI,EAAElrI,IAAC,EAAG,EAAG;cAEjC,IAAM4gD,IAAI,GAAGooF,KAAK,CAAEhpI,IAAC,CAAE;cACvBitI,EAAE,CAAErsF,IAAI,CAAE,CAAC,CAAE,GAAGnnC,MAAM,EAAEmnC,IAAI,CAAE,CAAC,CAAE,GAAGnnC,MAAM,EAAEmnC,IAAI,CAAE,CAAC,CAAE,GAAGnnC,MAAM,CAAE;YAEjE;YAEAgsG,KAAK,GAAGokB,KAAK,GAAGK,aAAa,GAAG,CAAC;YACjCzwH,MAAM,GAAGwxH,IAAI,GAAGxlB,KAAK;;YAErB;;YAEA,KAAM,IAAIzlH,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkrI,IAAI,EAAElrI,IAAC,EAAG,EAAG;cAEjC,IAAM4gD,KAAI,GAAGooF,KAAK,CAAEhpI,IAAC,CAAE;cACvBitI,EAAE,CAAErsF,KAAI,CAAE,CAAC,CAAE,GAAGnnC,MAAM,EAAEmnC,KAAI,CAAE,CAAC,CAAE,GAAGnnC,MAAM,EAAEmnC,KAAI,CAAE,CAAC,CAAE,GAAGnnC,MAAM,CAAE;YAEjE;UAED,CAAC,MAAM;YAEN;;YAEA,KAAM,IAAIzZ,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkrI,IAAI,EAAElrI,IAAC,EAAG,EAAG;cAEjC,IAAM4gD,MAAI,GAAGooF,KAAK,CAAEhpI,IAAC,CAAE;cACvBitI,EAAE,CAAErsF,MAAI,CAAE,CAAC,CAAE,EAAEA,MAAI,CAAE,CAAC,CAAE,EAAEA,MAAI,CAAE,CAAC,CAAE,CAAE;YAEtC;;YAEA;;YAEA,KAAM,IAAI5gD,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkrI,IAAI,EAAElrI,IAAC,EAAG,EAAG;cAEjC,IAAM4gD,MAAI,GAAGooF,KAAK,CAAEhpI,IAAC,CAAE;cACvBitI,EAAE,CAAErsF,MAAI,CAAE,CAAC,CAAE,GAAGqqF,IAAI,GAAGpB,KAAK,EAAEjpF,MAAI,CAAE,CAAC,CAAE,GAAGqqF,IAAI,GAAGpB,KAAK,EAAEjpF,MAAI,CAAE,CAAC,CAAE,GAAGqqF,IAAI,GAAGpB,KAAK,CAAE;YAEnF;UAED;UAEAxoF,KAAK,CAACtG,QAAQ,CAAEP,KAAK,EAAEgvF,aAAa,CAACzpI,MAAM,GAAG,CAAC,GAAGy6C,KAAK,EAAE,CAAC,CAAE;QAE7D;;QAEA;;QAEA,SAASwyF,cAAcA,CAAA,EAAG;UAEzB,IAAMxyF,KAAK,GAAGgvF,aAAa,CAACzpI,MAAM,GAAG,CAAC;UACtC,IAAImtI,WAAW,GAAG,CAAC;UACnBC,SAAS,CAAEtE,OAAO,EAAEqE,WAAW,CAAE;UACjCA,WAAW,IAAIrE,OAAO,CAAC9oI,MAAM;UAE7B,KAAM,IAAIkd,GAAC,GAAG,CAAC,EAAE4tH,IAAE,GAAG/G,KAAK,CAAC/jI,MAAM,EAAEkd,GAAC,GAAG4tH,IAAE,EAAE5tH,GAAC,EAAG,EAAG;YAElD,IAAM6tH,OAAK,GAAGhH,KAAK,CAAE7mH,GAAC,CAAE;YACxBkwH,SAAS,CAAErC,OAAK,EAAEoC,WAAW,CAAE;;YAE/B;YACAA,WAAW,IAAIpC,OAAK,CAAC/qI,MAAM;UAE5B;UAGAshD,KAAK,CAACtG,QAAQ,CAAEP,KAAK,EAAEgvF,aAAa,CAACzpI,MAAM,GAAG,CAAC,GAAGy6C,KAAK,EAAE,CAAC,CAAE;QAG7D;QAEA,SAAS2yF,SAASA,CAAEtE,OAAO,EAAEqE,WAAW,EAAG;UAE1C,IAAIltI,CAAC,GAAG6oI,OAAO,CAAC9oI,MAAM;UAEtB,OAAQ,EAAGC,CAAC,IAAI,CAAC,EAAG;YAEnB,IAAM42B,GAAC,GAAG52B,CAAC;YACX,IAAIq1F,GAAC,GAAGr1F,CAAC,GAAG,CAAC;YACb,IAAKq1F,GAAC,GAAG,CAAC,EAAGA,GAAC,GAAGwzC,OAAO,CAAC9oI,MAAM,GAAG,CAAC;;YAEnC;;YAEA,KAAM,IAAI2T,GAAC,GAAG,CAAC,EAAE05H,EAAE,GAAKvD,KAAK,GAAGK,aAAa,GAAG,CAAG,EAAEx2H,GAAC,GAAG05H,EAAE,EAAE15H,GAAC,EAAG,EAAG;cAEnE,IAAM25H,KAAK,GAAGpC,IAAI,GAAGv3H,GAAC;cACtB,IAAM45H,KAAK,GAAGrC,IAAI,IAAKv3H,GAAC,GAAG,CAAC,CAAE;cAE9B,IAAMe,CAAC,GAAGy4H,WAAW,GAAGt2G,GAAC,GAAGy2G,KAAK;gBAChC34H,GAAC,GAAGw4H,WAAW,GAAG73C,GAAC,GAAGg4C,KAAK;gBAC3B14H,CAAC,GAAGu4H,WAAW,GAAG73C,GAAC,GAAGi4C,KAAK;gBAC3BxwH,CAAC,GAAGowH,WAAW,GAAGt2G,GAAC,GAAG02G,KAAK;cAE5BC,EAAE,CAAE94H,CAAC,EAAEC,GAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;YAEjB;UAED;QAED;QAEA,SAASjG,CAACA,CAAE5E,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;UAErByjH,WAAW,CAACnqI,IAAI,CAAEyS,CAAC,CAAE;UACrB03H,WAAW,CAACnqI,IAAI,CAAE+S,CAAC,CAAE;UACrBo3H,WAAW,CAACnqI,IAAI,CAAE0mB,CAAC,CAAE;QAEtB;QAGA,SAAS+mH,EAAEA,CAAEx4H,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;UAEtB64H,SAAS,CAAE/4H,CAAC,CAAE;UACd+4H,SAAS,CAAE94H,CAAC,CAAE;UACd84H,SAAS,CAAE74H,CAAC,CAAE;UAEd,IAAM84H,SAAS,GAAGjE,aAAa,CAACzpI,MAAM,GAAG,CAAC;UAC1C,IAAM87C,GAAG,GAAGuuF,KAAK,CAACsD,aAAa,CAAErsF,KAAK,EAAEmoF,aAAa,EAAEiE,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,CAAE;UAEpGE,KAAK,CAAE9xF,GAAG,CAAE,CAAC,CAAE,CAAE;UACjB8xF,KAAK,CAAE9xF,GAAG,CAAE,CAAC,CAAE,CAAE;UACjB8xF,KAAK,CAAE9xF,GAAG,CAAE,CAAC,CAAE,CAAE;QAElB;QAEA,SAAS0xF,EAAEA,CAAE94H,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEmI,CAAC,EAAG;UAEzB0wH,SAAS,CAAE/4H,CAAC,CAAE;UACd+4H,SAAS,CAAE94H,CAAC,CAAE;UACd84H,SAAS,CAAE1wH,CAAC,CAAE;UAEd0wH,SAAS,CAAE94H,CAAC,CAAE;UACd84H,SAAS,CAAE74H,CAAC,CAAE;UACd64H,SAAS,CAAE1wH,CAAC,CAAE;UAGd,IAAM2wH,SAAS,GAAGjE,aAAa,CAACzpI,MAAM,GAAG,CAAC;UAC1C,IAAM87C,GAAG,GAAGuuF,KAAK,CAACwD,kBAAkB,CAAEvsF,KAAK,EAAEmoF,aAAa,EAAEiE,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,CAAE;UAExHE,KAAK,CAAE9xF,GAAG,CAAE,CAAC,CAAE,CAAE;UACjB8xF,KAAK,CAAE9xF,GAAG,CAAE,CAAC,CAAE,CAAE;UACjB8xF,KAAK,CAAE9xF,GAAG,CAAE,CAAC,CAAE,CAAE;UAEjB8xF,KAAK,CAAE9xF,GAAG,CAAE,CAAC,CAAE,CAAE;UACjB8xF,KAAK,CAAE9xF,GAAG,CAAE,CAAC,CAAE,CAAE;UACjB8xF,KAAK,CAAE9xF,GAAG,CAAE,CAAC,CAAE,CAAE;QAElB;QAEA,SAAS2xF,SAASA,CAAEl9H,KAAK,EAAG;UAE3Bk5H,aAAa,CAAChqI,IAAI,CAAEmqI,WAAW,CAAEr5H,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAAE;UAClDk5H,aAAa,CAAChqI,IAAI,CAAEmqI,WAAW,CAAEr5H,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAAE;UAClDk5H,aAAa,CAAChqI,IAAI,CAAEmqI,WAAW,CAAEr5H,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAAE;QAEnD;QAGA,SAASq9H,KAAKA,CAAEE,OAAO,EAAG;UAEzBpE,OAAO,CAACjqI,IAAI,CAAEquI,OAAO,CAAC57H,CAAC,CAAE;UACzBw3H,OAAO,CAACjqI,IAAI,CAAEquI,OAAO,CAACt7H,CAAC,CAAE;QAE1B;MAED;MAAC,OAAAg3H,OAAA;IAEF;IAACxmI,YAAA,CAAAqmI,eAAA;MAAAnvI,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAi0F,eAAA,CAAAxvI,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAi0F,eAAA,CAAAxvI,SAAA,mBAAAqC,IAAA,MAAiB;QAE3B,IAAMsqC,MAAM,GAAG,IAAI,CAACgB,UAAU,CAAChB,MAAM;QACrC,IAAMte,OAAO,GAAG,IAAI,CAACsf,UAAU,CAACtf,OAAO;QAEvC,OAAO6lH,QAAQ,CAAEvnG,MAAM,EAAEte,OAAO,EAAE5F,IAAI,CAAE;MAEzC;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAEkkB,MAAM,EAAG;QAE/B,IAAMwnG,cAAc,GAAG,EAAE;QAEzB,KAAM,IAAIn3G,CAAC,GAAG,CAAC,EAAE4kB,EAAE,GAAGn5B,IAAI,CAACkkB,MAAM,CAACxmC,MAAM,EAAE62B,CAAC,GAAG4kB,EAAE,EAAE5kB,CAAC,EAAG,EAAG;UAExD,IAAM4Q,KAAK,GAAGjB,MAAM,CAAElkB,IAAI,CAACkkB,MAAM,CAAE3P,CAAC,CAAE,CAAE;UAExCm3G,cAAc,CAACvuI,IAAI,CAAEgoC,KAAK,CAAE;QAE7B;QAEA,IAAM2iG,WAAW,GAAG9nH,IAAI,CAAC4F,OAAO,CAACkiH,WAAW;QAE5C,IAAKA,WAAW,KAAK1rI,SAAS,EAAG;UAEhC4jB,IAAI,CAAC4F,OAAO,CAACkiH,WAAW,GAAG,IAAInP,MAAM,CAAEmP,WAAW,CAACnuI,IAAI,CAAE,EAAE,CAACumD,QAAQ,CAAE4nF,WAAW,CAAE;QAEpF;QAEA,OAAO,IAAIf,eAAe,CAAE2E,cAAc,EAAE1rH,IAAI,CAAC4F,OAAO,CAAE;MAE3D;IAAC;IAAA,OAAAmhH,eAAA;EAAA,EAprB4BtvF,cAAc;EAwrB5C,IAAMwwF,gBAAgB,GAAG;IAExBoD,aAAa,EAAE,SAAAA,cAAWh5G,QAAQ,EAAE4sB,QAAQ,EAAE0sF,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAG;MAEtE,IAAMC,GAAG,GAAG7sF,QAAQ,CAAE0sF,MAAM,GAAG,CAAC,CAAE;MAClC,IAAMI,GAAG,GAAG9sF,QAAQ,CAAE0sF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MACtC,IAAMK,GAAG,GAAG/sF,QAAQ,CAAE2sF,MAAM,GAAG,CAAC,CAAE;MAClC,IAAMK,GAAG,GAAGhtF,QAAQ,CAAE2sF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MACtC,IAAMM,GAAG,GAAGjtF,QAAQ,CAAE4sF,MAAM,GAAG,CAAC,CAAE;MAClC,IAAMM,GAAG,GAAGltF,QAAQ,CAAE4sF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MAEtC,OAAO,CACN,IAAIj4H,OAAO,CAAEk4H,GAAG,EAAEC,GAAG,CAAE,EACvB,IAAIn4H,OAAO,CAAEo4H,GAAG,EAAEC,GAAG,CAAE,EACvB,IAAIr4H,OAAO,CAAEs4H,GAAG,EAAEC,GAAG,CAAE,CACvB;IAEF,CAAC;IAEDZ,kBAAkB,EAAE,SAAAA,mBAAWl5G,QAAQ,EAAE4sB,QAAQ,EAAE0sF,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEO,MAAM,EAAG;MAEnF,IAAMN,GAAG,GAAG7sF,QAAQ,CAAE0sF,MAAM,GAAG,CAAC,CAAE;MAClC,IAAMI,GAAG,GAAG9sF,QAAQ,CAAE0sF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MACtC,IAAMU,GAAG,GAAGptF,QAAQ,CAAE0sF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MACtC,IAAMK,GAAG,GAAG/sF,QAAQ,CAAE2sF,MAAM,GAAG,CAAC,CAAE;MAClC,IAAMK,GAAG,GAAGhtF,QAAQ,CAAE2sF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MACtC,IAAMU,GAAG,GAAGrtF,QAAQ,CAAE2sF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MACtC,IAAMM,GAAG,GAAGjtF,QAAQ,CAAE4sF,MAAM,GAAG,CAAC,CAAE;MAClC,IAAMM,GAAG,GAAGltF,QAAQ,CAAE4sF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MACtC,IAAMU,GAAG,GAAGttF,QAAQ,CAAE4sF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MACtC,IAAMW,GAAG,GAAGvtF,QAAQ,CAAEmtF,MAAM,GAAG,CAAC,CAAE;MAClC,IAAMK,GAAG,GAAGxtF,QAAQ,CAAEmtF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MACtC,IAAMM,GAAG,GAAGztF,QAAQ,CAAEmtF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;MAEtC,IAAK19H,IAAI,CAACgC,GAAG,CAAEq7H,GAAG,GAAGE,GAAG,CAAE,GAAGv9H,IAAI,CAACgC,GAAG,CAAEo7H,GAAG,GAAGE,GAAG,CAAE,EAAG;QAEpD,OAAO,CACN,IAAIp4H,OAAO,CAAEk4H,GAAG,EAAE,CAAC,GAAGO,GAAG,CAAE,EAC3B,IAAIz4H,OAAO,CAAEo4H,GAAG,EAAE,CAAC,GAAGM,GAAG,CAAE,EAC3B,IAAI14H,OAAO,CAAEs4H,GAAG,EAAE,CAAC,GAAGK,GAAG,CAAE,EAC3B,IAAI34H,OAAO,CAAE44H,GAAG,EAAE,CAAC,GAAGE,GAAG,CAAE,CAC3B;MAEF,CAAC,MAAM;QAEN,OAAO,CACN,IAAI94H,OAAO,CAAEm4H,GAAG,EAAE,CAAC,GAAGM,GAAG,CAAE,EAC3B,IAAIz4H,OAAO,CAAEq4H,GAAG,EAAE,CAAC,GAAGK,GAAG,CAAE,EAC3B,IAAI14H,OAAO,CAAEu4H,GAAG,EAAE,CAAC,GAAGI,GAAG,CAAE,EAC3B,IAAI34H,OAAO,CAAE64H,GAAG,EAAE,CAAC,GAAGC,GAAG,CAAE,CAC3B;MAEF;IAED;EAED,CAAC;EAED,SAASjB,QAAQA,CAAEvnG,MAAM,EAAEte,OAAO,EAAE5F,IAAI,EAAG;IAE1CA,IAAI,CAACkkB,MAAM,GAAG,EAAE;IAEhB,IAAKxjB,KAAK,CAACC,OAAO,CAAEujB,MAAM,CAAE,EAAG;MAE9B,KAAM,IAAIvmC,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG41B,MAAM,CAACxmC,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;QAEjD,IAAMwnC,KAAK,GAAGjB,MAAM,CAAEvmC,CAAC,CAAE;QAEzBqiB,IAAI,CAACkkB,MAAM,CAAC/mC,IAAI,CAAEgoC,KAAK,CAACh2B,IAAI,CAAE;MAE/B;IAED,CAAC,MAAM;MAEN6Q,IAAI,CAACkkB,MAAM,CAAC/mC,IAAI,CAAE+mC,MAAM,CAAC/0B,IAAI,CAAE;IAEhC;IAEA6Q,IAAI,CAAC4F,OAAO,GAAGtuB,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEb,OAAO,CAAE;IAE3C,IAAKA,OAAO,CAACkiH,WAAW,KAAK1rI,SAAS,EAAG4jB,IAAI,CAAC4F,OAAO,CAACkiH,WAAW,GAAGliH,OAAO,CAACkiH,WAAW,CAAC1nH,MAAM,EAAE;IAEhG,OAAOJ,IAAI;EAEZ;EAAC,IAEK2sH,mBAAmB,0BAAAC,oBAAA;IAAA1rH,SAAA,CAAAyrH,mBAAA,EAAAC,oBAAA;IAAA,IAAAC,QAAA,GAAAzrH,YAAA,CAAAurH,mBAAA;IAExB,SAAAA,oBAAah9G,MAAM,GAAG,CAAC,EAAEy1F,MAAM,GAAG,CAAC,EAAG;MAAA,IAAA0nB,OAAA;MAAA5sI,eAAA,OAAAysI,mBAAA;MAErC,IAAMv8H,CAAC,GAAG,CAAE,CAAC,GAAG1B,IAAI,CAACsH,IAAI,CAAE,CAAC,CAAE,IAAK,CAAC;MAEpC,IAAMipC,QAAQ,GAAG,CAChB,CAAE,CAAC,EAAE7uC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAEA,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAEA,CAAC,EAAE,CAAC,EAC7C,CAAC,EAAE,CAAE,CAAC,EAAEA,CAAC,EAAG,CAAC,EAAE,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAEA,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAEA,CAAC,EAC5CA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAGA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAC,CAC7C;MAED,IAAMipC,OAAO,GAAG,CACf,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EACnD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5C,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAC9C;MAEDyzF,OAAA,GAAAD,QAAA,CAAAjzI,IAAA,OAAOqlD,QAAQ,EAAE5F,OAAO,EAAE1pB,MAAM,EAAEy1F,MAAM;MAExC0nB,OAAA,CAAKnzI,IAAI,GAAG,qBAAqB;MAEjCmzI,OAAA,CAAK5nG,UAAU,GAAG;QACjBvV,MAAM,EAAEA,MAAM;QACdy1F,MAAM,EAAEA;MACT,CAAC;MAAC,OAAA0nB,OAAA;IAEH;IAACpsI,YAAA,CAAAisI,mBAAA;MAAA/0I,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAI2sH,mBAAmB,CAAE3sH,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAAColG,MAAM,CAAE;MAE3D;IAAC;IAAA,OAAAunB,mBAAA;EAAA,EAlCgC1O,kBAAkB;EAAA,IAsC9C8O,kBAAkB,0BAAAC,oBAAA;IAAA9rH,SAAA,CAAA6rH,kBAAA,EAAAC,oBAAA;IAAA,IAAAC,QAAA,GAAA7rH,YAAA,CAAA2rH,kBAAA;IAEvB,SAAAA,mBAAap9G,MAAM,GAAG,CAAC,EAAEy1F,MAAM,GAAG,CAAC,EAAG;MAAA,IAAA8nB,OAAA;MAAAhtI,eAAA,OAAA6sI,kBAAA;MAErC,IAAM9tF,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAC9B;MAED,IAAM5F,OAAO,GAAG,CACf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAChB;MAED6zF,OAAA,GAAAD,QAAA,CAAArzI,IAAA,OAAOqlD,QAAQ,EAAE5F,OAAO,EAAE1pB,MAAM,EAAEy1F,MAAM;MAExC8nB,OAAA,CAAKvzI,IAAI,GAAG,oBAAoB;MAEhCuzI,OAAA,CAAKhoG,UAAU,GAAG;QACjBvV,MAAM,EAAEA,MAAM;QACdy1F,MAAM,EAAEA;MACT,CAAC;MAAC,OAAA8nB,OAAA;IAEH;IAACxsI,YAAA,CAAAqsI,kBAAA;MAAAn1I,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAI+sH,kBAAkB,CAAE/sH,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAAColG,MAAM,CAAE;MAE1D;IAAC;IAAA,OAAA2nB,kBAAA;EAAA,EA9B+B9O,kBAAkB;EAAA,IAkC7CkP,YAAY,0BAAAC,gBAAA;IAAAlsH,SAAA,CAAAisH,YAAA,EAAAC,gBAAA;IAAA,IAAAC,QAAA,GAAAjsH,YAAA,CAAA+rH,YAAA;IAEjB,SAAAA,aAAaG,WAAW,GAAG,GAAG,EAAEC,WAAW,GAAG,CAAC,EAAEC,aAAa,GAAG,EAAE,EAAEC,WAAW,GAAG,CAAC,EAAEhR,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGhuH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;MAAA,IAAA++H,OAAA;MAAAxtI,eAAA,OAAAitI,YAAA;MAEjIO,OAAA,GAAAL,QAAA,CAAAzzI,IAAA;MAEA8zI,OAAA,CAAK/zI,IAAI,GAAG,cAAc;MAE1B+zI,OAAA,CAAKxoG,UAAU,GAAG;QACjBooG,WAAW,EAAEA,WAAW;QACxBC,WAAW,EAAEA,WAAW;QACxBC,aAAa,EAAEA,aAAa;QAC5BC,WAAW,EAAEA,WAAW;QACxBhR,UAAU,EAAEA,UAAU;QACtBC,WAAW,EAAEA;MACd,CAAC;MAED8Q,aAAa,GAAG9+H,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEi+H,aAAa,CAAE;MAC5CC,WAAW,GAAG/+H,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEk+H,WAAW,CAAE;;MAExC;;MAEA,IAAMp0F,OAAO,GAAG,EAAE;MAClB,IAAM4F,QAAQ,GAAG,EAAE;MACnB,IAAM1F,OAAO,GAAG,EAAE;MAClB,IAAMC,GAAG,GAAG,EAAE;;MAEd;;MAEA,IAAI7pB,MAAM,GAAG29G,WAAW;MACxB,IAAMK,UAAU,GAAK,CAAEJ,WAAW,GAAGD,WAAW,IAAKG,WAAa;MAClE,IAAM/9C,MAAM,GAAG,IAAIxiE,OAAO,EAAE;MAC5B,IAAMxJ,EAAE,GAAG,IAAI9P,OAAO,EAAE;;MAExB;;MAEA,KAAM,IAAI2gB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIk5G,WAAW,EAAEl5G,CAAC,EAAG,EAAG;QAEzC,KAAM,IAAI52B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6vI,aAAa,EAAE7vI,CAAC,EAAG,EAAG;UAE3C;;UAEA,IAAMi/H,OAAO,GAAGH,UAAU,GAAG9+H,CAAC,GAAG6vI,aAAa,GAAG9Q,WAAW;;UAE5D;;UAEAhtC,MAAM,CAAC9/E,CAAC,GAAG+f,MAAM,GAAGjhB,IAAI,CAAC8D,GAAG,CAAEoqH,OAAO,CAAE;UACvCltC,MAAM,CAACx/E,CAAC,GAAGyf,MAAM,GAAGjhB,IAAI,CAAC+D,GAAG,CAAEmqH,OAAO,CAAE;UAEvC39E,QAAQ,CAAC9hD,IAAI,CAAEuyF,MAAM,CAAC9/E,CAAC,EAAE8/E,MAAM,CAACx/E,CAAC,EAAEw/E,MAAM,CAAC7rE,CAAC,CAAE;;UAE7C;;UAEA01B,OAAO,CAACp8C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;;UAEvB;;UAEAumB,EAAE,CAAC9T,CAAC,GAAG,CAAE8/E,MAAM,CAAC9/E,CAAC,GAAG29H,WAAW,GAAG,CAAC,IAAK,CAAC;UACzC7pH,EAAE,CAACxT,CAAC,GAAG,CAAEw/E,MAAM,CAACx/E,CAAC,GAAGq9H,WAAW,GAAG,CAAC,IAAK,CAAC;UAEzC/zF,GAAG,CAACr8C,IAAI,CAAEumB,EAAE,CAAC9T,CAAC,EAAE8T,EAAE,CAACxT,CAAC,CAAE;QAEvB;;QAEA;;QAEAyf,MAAM,IAAIg+G,UAAU;MAErB;;MAEA;;MAEA,KAAM,IAAIp5G,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGk5G,WAAW,EAAEl5G,IAAC,EAAG,EAAG;QAExC,IAAMq5G,iBAAiB,GAAGr5G,IAAC,IAAKi5G,aAAa,GAAG,CAAC,CAAE;QAEnD,KAAM,IAAI7vI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG6vI,aAAa,EAAE7vI,IAAC,EAAG,EAAG;UAE1C,IAAMi/H,QAAO,GAAGj/H,IAAC,GAAGiwI,iBAAiB;UAErC,IAAMx7H,CAAC,GAAGwqH,QAAO;UACjB,IAAMvqH,CAAC,GAAGuqH,QAAO,GAAG4Q,aAAa,GAAG,CAAC;UACrC,IAAMl7H,CAAC,GAAGsqH,QAAO,GAAG4Q,aAAa,GAAG,CAAC;UACrC,IAAM/yH,CAAC,GAAGmiH,QAAO,GAAG,CAAC;;UAErB;;UAEAvjF,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;UACvB4+B,OAAO,CAACl8C,IAAI,CAAEkV,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;QAExB;MAED;;MAEA;;MAEAizH,OAAA,CAAKr1F,QAAQ,CAAEgB,OAAO,CAAE;MACxBq0F,OAAA,CAAKn1F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1EyuF,OAAA,CAAKn1F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MACvEm0F,OAAA,CAAKn1F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;MAAC,OAAAk0F,OAAA;IAEjE;IAAChtI,YAAA,CAAAysI,YAAA;MAAAv1I,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAq6F,YAAA,CAAA51I,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAImtH,YAAY,CAAEntH,IAAI,CAACstH,WAAW,EAAEttH,IAAI,CAACutH,WAAW,EAAEvtH,IAAI,CAACwtH,aAAa,EAAExtH,IAAI,CAACytH,WAAW,EAAEztH,IAAI,CAACy8G,UAAU,EAAEz8G,IAAI,CAAC08G,WAAW,CAAE;MAEvI;IAAC;IAAA,OAAAyQ,YAAA;EAAA,EArHyB11F,cAAc;EAAA,IAyHnCo2F,aAAa,0BAAAC,iBAAA;IAAA5sH,SAAA,CAAA2sH,aAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAA3sH,YAAA,CAAAysH,aAAA;IAElB,SAAAA,cAAa3pG,MAAM,GAAG,IAAIm9F,KAAK,CAAE,CAAE,IAAIztH,OAAO,CAAE,CAAC,EAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,CAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAE,GAAG,CAAE,CAAE,CAAE,EAAE2zH,aAAa,GAAG,EAAE,EAAG;MAAA,IAAAyG,OAAA;MAAA9tI,eAAA,OAAA2tI,aAAA;MAE1IG,OAAA,GAAAD,QAAA,CAAAn0I,IAAA;MAEAo0I,OAAA,CAAKr0I,IAAI,GAAG,eAAe;MAE3Bq0I,OAAA,CAAK9oG,UAAU,GAAG;QACjBhB,MAAM,EAAEA,MAAM;QACdqjG,aAAa,EAAEA;MAChB,CAAC;;MAED;;MAEA,IAAMluF,OAAO,GAAG,EAAE;MAClB,IAAM4F,QAAQ,GAAG,EAAE;MACnB,IAAM1F,OAAO,GAAG,EAAE;MAClB,IAAMC,GAAG,GAAG,EAAE;;MAEd;;MAEA,IAAI2F,UAAU,GAAG,CAAC;MAClB,IAAIc,UAAU,GAAG,CAAC;;MAElB;;MAEA,IAAKv/B,KAAK,CAACC,OAAO,CAAEujB,MAAM,CAAE,KAAK,KAAK,EAAG;QAExCmjG,QAAQ,CAAEnjG,MAAM,CAAE;MAEnB,CAAC,MAAM;QAEN,KAAM,IAAIvmC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGumC,MAAM,CAACxmC,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE1C0pI,QAAQ,CAAEnjG,MAAM,CAAEvmC,CAAC,CAAE,CAAE;UAEvBqwI,OAAA,CAAKt1F,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAEtiD,CAAC,CAAE,CAAC,CAAC;;UAE5CwhD,UAAU,IAAIc,UAAU;UACxBA,UAAU,GAAG,CAAC;QAEf;MAED;;MAEA;;MAEA+tF,OAAA,CAAK31F,QAAQ,CAAEgB,OAAO,CAAE;MACxB20F,OAAA,CAAKz1F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1E+uF,OAAA,CAAKz1F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MACvEy0F,OAAA,CAAKz1F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;;MAG/D;;MAEA,SAAS6tF,QAAQA,CAAEliG,KAAK,EAAG;QAE1B,IAAM8oG,WAAW,GAAGhvF,QAAQ,CAACvhD,MAAM,GAAG,CAAC;QACvC,IAAMuzB,MAAM,GAAGkU,KAAK,CAACy8F,aAAa,CAAE2F,aAAa,CAAE;QAEnD,IAAI2G,aAAa,GAAGj9G,MAAM,CAACkU,KAAK;QAChC,IAAMgpG,UAAU,GAAGl9G,MAAM,CAACwwG,KAAK;;QAE/B;;QAEA,IAAK8E,UAAU,CAACE,WAAW,CAAEyH,aAAa,CAAE,KAAK,KAAK,EAAG;UAExDA,aAAa,GAAGA,aAAa,CAACtvI,OAAO,EAAE;QAExC;QAEA,KAAM,IAAIjB,IAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG6/H,UAAU,CAACzwI,MAAM,EAAEC,IAAC,GAAG2Q,CAAC,EAAE3Q,IAAC,EAAG,EAAG;UAErD,IAAMywI,SAAS,GAAGD,UAAU,CAAExwI,IAAC,CAAE;UAEjC,IAAK4oI,UAAU,CAACE,WAAW,CAAE2H,SAAS,CAAE,KAAK,IAAI,EAAG;YAEnDD,UAAU,CAAExwI,IAAC,CAAE,GAAGywI,SAAS,CAACxvI,OAAO,EAAE;UAEtC;QAED;QAEA,IAAM+nI,KAAK,GAAGJ,UAAU,CAACG,gBAAgB,CAAEwH,aAAa,EAAEC,UAAU,CAAE;;QAEtE;;QAEA,KAAM,IAAIxwI,IAAC,GAAG,CAAC,EAAE2Q,GAAC,GAAG6/H,UAAU,CAACzwI,MAAM,EAAEC,IAAC,GAAG2Q,GAAC,EAAE3Q,IAAC,EAAG,EAAG;UAErD,IAAMywI,UAAS,GAAGD,UAAU,CAAExwI,IAAC,CAAE;UACjCuwI,aAAa,GAAGA,aAAa,CAACzvH,MAAM,CAAE2vH,UAAS,CAAE;QAElD;;QAEA;;QAEA,KAAM,IAAIzwI,IAAC,GAAG,CAAC,EAAE2Q,GAAC,GAAG4/H,aAAa,CAACxwI,MAAM,EAAEC,IAAC,GAAG2Q,GAAC,EAAE3Q,IAAC,EAAG,EAAG;UAExD,IAAM+xF,QAAM,GAAGw+C,aAAa,CAAEvwI,IAAC,CAAE;UAEjCshD,QAAQ,CAAC9hD,IAAI,CAAEuyF,QAAM,CAAC9/E,CAAC,EAAE8/E,QAAM,CAACx/E,CAAC,EAAE,CAAC,CAAE;UACtCqpC,OAAO,CAACp8C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UACvBq8C,GAAG,CAACr8C,IAAI,CAAEuyF,QAAM,CAAC9/E,CAAC,EAAE8/E,QAAM,CAACx/E,CAAC,CAAE,CAAC,CAAC;QAEjC;;QAEA;;QAEA,KAAM,IAAIvS,IAAC,GAAG,CAAC,EAAE2Q,IAAC,GAAGq4H,KAAK,CAACjpI,MAAM,EAAEC,IAAC,GAAG2Q,IAAC,EAAE3Q,IAAC,EAAG,EAAG;UAEhD,IAAM4gD,IAAI,GAAGooF,KAAK,CAAEhpI,IAAC,CAAE;UAEvB,IAAMyU,CAAC,GAAGmsC,IAAI,CAAE,CAAC,CAAE,GAAG0vF,WAAW;UACjC,IAAM57H,CAAC,GAAGksC,IAAI,CAAE,CAAC,CAAE,GAAG0vF,WAAW;UACjC,IAAM37H,CAAC,GAAGisC,IAAI,CAAE,CAAC,CAAE,GAAG0vF,WAAW;UAEjC50F,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAE;UACvB2tC,UAAU,IAAI,CAAC;QAEhB;MAED;MAAC,OAAA+tF,OAAA;IAEF;IAACttI,YAAA,CAAAmtI,aAAA;MAAAj2I,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA+6F,aAAA,CAAAt2I,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAA+6F,aAAA,CAAAt2I,SAAA,mBAAAqC,IAAA,MAAiB;QAE3B,IAAMsqC,MAAM,GAAG,IAAI,CAACgB,UAAU,CAAChB,MAAM;QAErC,OAAO9jB,OAAM,CAAE8jB,MAAM,EAAElkB,IAAI,CAAE;MAE9B;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAEkkB,MAAM,EAAG;QAE/B,IAAMwnG,cAAc,GAAG,EAAE;QAEzB,KAAM,IAAIn3G,CAAC,GAAG,CAAC,EAAE4kB,EAAE,GAAGn5B,IAAI,CAACkkB,MAAM,CAACxmC,MAAM,EAAE62B,CAAC,GAAG4kB,EAAE,EAAE5kB,CAAC,EAAG,EAAG;UAExD,IAAM4Q,KAAK,GAAGjB,MAAM,CAAElkB,IAAI,CAACkkB,MAAM,CAAE3P,CAAC,CAAE,CAAE;UAExCm3G,cAAc,CAACvuI,IAAI,CAAEgoC,KAAK,CAAE;QAE7B;QAEA,OAAO,IAAI0oG,aAAa,CAAEnC,cAAc,EAAE1rH,IAAI,CAACunH,aAAa,CAAE;MAE/D;IAAC;IAAA,OAAAsG,aAAA;EAAA,EAhK0Bp2F,cAAc;EAoK1C,SAASr3B,OAAMA,CAAE8jB,MAAM,EAAElkB,IAAI,EAAG;IAE/BA,IAAI,CAACkkB,MAAM,GAAG,EAAE;IAEhB,IAAKxjB,KAAK,CAACC,OAAO,CAAEujB,MAAM,CAAE,EAAG;MAE9B,KAAM,IAAIvmC,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG41B,MAAM,CAACxmC,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;QAEjD,IAAMwnC,KAAK,GAAGjB,MAAM,CAAEvmC,CAAC,CAAE;QAEzBqiB,IAAI,CAACkkB,MAAM,CAAC/mC,IAAI,CAAEgoC,KAAK,CAACh2B,IAAI,CAAE;MAE/B;IAED,CAAC,MAAM;MAEN6Q,IAAI,CAACkkB,MAAM,CAAC/mC,IAAI,CAAE+mC,MAAM,CAAC/0B,IAAI,CAAE;IAEhC;IAEA,OAAO6Q,IAAI;EAEZ;EAAC,IAEKquH,cAAc,0BAAAC,iBAAA;IAAAptH,SAAA,CAAAmtH,cAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAAntH,YAAA,CAAAitH,cAAA;IAEnB,SAAAA,eAAa1+G,MAAM,GAAG,CAAC,EAAEivB,aAAa,GAAG,EAAE,EAAEC,cAAc,GAAG,EAAE,EAAE28E,QAAQ,GAAG,CAAC,EAAEC,SAAS,GAAG/sH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE8tH,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGhuH,IAAI,CAACC,EAAE,EAAG;MAAA,IAAA6/H,OAAA;MAAAtuI,eAAA,OAAAmuI,cAAA;MAEhJG,OAAA,GAAAD,QAAA,CAAA30I,IAAA;MAEA40I,OAAA,CAAK70I,IAAI,GAAG,gBAAgB;MAE5B60I,OAAA,CAAKtpG,UAAU,GAAG;QACjBvV,MAAM,EAAEA,MAAM;QACdivB,aAAa,EAAEA,aAAa;QAC5BC,cAAc,EAAEA,cAAc;QAC9B28E,QAAQ,EAAEA,QAAQ;QAClBC,SAAS,EAAEA,SAAS;QACpBgB,UAAU,EAAEA,UAAU;QACtBC,WAAW,EAAEA;MACd,CAAC;MAED99E,aAAa,GAAGlwC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEb,IAAI,CAACsC,KAAK,CAAE4tC,aAAa,CAAE,CAAE;MAC1DC,cAAc,GAAGnwC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEb,IAAI,CAACsC,KAAK,CAAE6tC,cAAc,CAAE,CAAE;MAE5D,IAAM4vF,QAAQ,GAAG//H,IAAI,CAACY,GAAG,CAAEmtH,UAAU,GAAGC,WAAW,EAAEhuH,IAAI,CAACC,EAAE,CAAE;MAE9D,IAAIV,KAAK,GAAG,CAAC;MACb,IAAMygI,IAAI,GAAG,EAAE;MAEf,IAAMh/C,MAAM,GAAG,IAAIxiE,OAAO,EAAE;MAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,EAAE;;MAE5B;;MAEA,IAAMmsB,OAAO,GAAG,EAAE;MAClB,IAAM4F,QAAQ,GAAG,EAAE;MACnB,IAAM1F,OAAO,GAAG,EAAE;MAClB,IAAMC,GAAG,GAAG,EAAE;;MAEd;;MAEA,KAAM,IAAIxrB,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAI6wB,cAAc,EAAE7wB,EAAE,EAAG,EAAG;QAE/C,IAAM2gH,WAAW,GAAG,EAAE;QAEtB,IAAMn6H,CAAC,GAAGwZ,EAAE,GAAG6wB,cAAc;;QAE7B;;QAEA,IAAI+vF,OAAO,GAAG,CAAC;QAEf,IAAK5gH,EAAE,KAAK,CAAC,IAAIyuG,UAAU,KAAK,CAAC,EAAG;UAEnCmS,OAAO,GAAG,GAAG,GAAGhwF,aAAa;QAE9B,CAAC,MAAM,IAAK5wB,EAAE,KAAK6wB,cAAc,IAAI4vF,QAAQ,KAAK//H,IAAI,CAACC,EAAE,EAAG;UAE3DigI,OAAO,GAAG,CAAE,GAAG,GAAGhwF,aAAa;QAEhC;QAEA,KAAM,IAAI7wB,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAI6wB,aAAa,EAAE7wB,EAAE,EAAG,EAAG;UAE9C,IAAMuC,CAAC,GAAGvC,EAAE,GAAG6wB,aAAa;;UAE5B;;UAEA8wC,MAAM,CAAC9/E,CAAC,GAAG,CAAE+f,MAAM,GAAGjhB,IAAI,CAAC8D,GAAG,CAAEgpH,QAAQ,GAAGlrG,CAAC,GAAGmrG,SAAS,CAAE,GAAG/sH,IAAI,CAAC+D,GAAG,CAAEgqH,UAAU,GAAGjoH,CAAC,GAAGkoH,WAAW,CAAE;UACrGhtC,MAAM,CAACx/E,CAAC,GAAGyf,MAAM,GAAGjhB,IAAI,CAAC8D,GAAG,CAAEiqH,UAAU,GAAGjoH,CAAC,GAAGkoH,WAAW,CAAE;UAC5DhtC,MAAM,CAAC7rE,CAAC,GAAG8L,MAAM,GAAGjhB,IAAI,CAAC+D,GAAG,CAAE+oH,QAAQ,GAAGlrG,CAAC,GAAGmrG,SAAS,CAAE,GAAG/sH,IAAI,CAAC+D,GAAG,CAAEgqH,UAAU,GAAGjoH,CAAC,GAAGkoH,WAAW,CAAE;UAEnGz9E,QAAQ,CAAC9hD,IAAI,CAAEuyF,MAAM,CAAC9/E,CAAC,EAAE8/E,MAAM,CAACx/E,CAAC,EAAEw/E,MAAM,CAAC7rE,CAAC,CAAE;;UAE7C;;UAEA0L,MAAM,CAAChb,IAAI,CAAEm7E,MAAM,CAAE,CAACj8E,SAAS,EAAE;UACjC8lC,OAAO,CAACp8C,IAAI,CAAEoyB,MAAM,CAAC3f,CAAC,EAAE2f,MAAM,CAACrf,CAAC,EAAEqf,MAAM,CAAC1L,CAAC,CAAE;;UAE5C;;UAEA21B,GAAG,CAACr8C,IAAI,CAAEmzB,CAAC,GAAGs+G,OAAO,EAAE,CAAC,GAAGp6H,CAAC,CAAE;UAE9Bm6H,WAAW,CAACxxI,IAAI,CAAE8Q,KAAK,EAAG,CAAE;QAE7B;QAEAygI,IAAI,CAACvxI,IAAI,CAAEwxI,WAAW,CAAE;MAEzB;;MAEA;;MAEA,KAAM,IAAI3gH,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAG6wB,cAAc,EAAE7wB,IAAE,EAAG,EAAG;QAE9C,KAAM,IAAID,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAG6wB,aAAa,EAAE7wB,IAAE,EAAG,EAAG;UAE7C,IAAM3b,CAAC,GAAGs8H,IAAI,CAAE1gH,IAAE,CAAE,CAAED,IAAE,GAAG,CAAC,CAAE;UAC9B,IAAM1b,CAAC,GAAGq8H,IAAI,CAAE1gH,IAAE,CAAE,CAAED,IAAE,CAAE;UAC1B,IAAMzb,CAAC,GAAGo8H,IAAI,CAAE1gH,IAAE,GAAG,CAAC,CAAE,CAAED,IAAE,CAAE;UAC9B,IAAMtT,CAAC,GAAGi0H,IAAI,CAAE1gH,IAAE,GAAG,CAAC,CAAE,CAAED,IAAE,GAAG,CAAC,CAAE;UAElC,IAAKC,IAAE,KAAK,CAAC,IAAIyuG,UAAU,GAAG,CAAC,EAAGpjF,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;UACzD,IAAKuT,IAAE,KAAK6wB,cAAc,GAAG,CAAC,IAAI4vF,QAAQ,GAAG//H,IAAI,CAACC,EAAE,EAAG0qC,OAAO,CAACl8C,IAAI,CAAEkV,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;QAE/E;MAED;;MAEA;;MAEA+zH,OAAA,CAAKn2F,QAAQ,CAAEgB,OAAO,CAAE;MACxBm1F,OAAA,CAAKj2F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1EuvF,OAAA,CAAKj2F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MACvEi1F,OAAA,CAAKj2F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;MAAC,OAAAg1F,OAAA;IAEjE;IAAC9tI,YAAA,CAAA2tI,cAAA;MAAAz2I,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAu7F,cAAA,CAAA92I,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAIquH,cAAc,CAAEruH,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAAC4+B,aAAa,EAAE5+B,IAAI,CAAC6+B,cAAc,EAAE7+B,IAAI,CAACw7G,QAAQ,EAAEx7G,IAAI,CAACy7G,SAAS,EAAEz7G,IAAI,CAACy8G,UAAU,EAAEz8G,IAAI,CAAC08G,WAAW,CAAE;MAEpJ;IAAC;IAAA,OAAA2R,cAAA;EAAA,EAhI2B52F,cAAc;EAAA,IAoIrCo3F,mBAAmB,0BAAAC,oBAAA;IAAA5tH,SAAA,CAAA2tH,mBAAA,EAAAC,oBAAA;IAAA,IAAAC,QAAA,GAAA3tH,YAAA,CAAAytH,mBAAA;IAExB,SAAAA,oBAAal/G,MAAM,GAAG,CAAC,EAAEy1F,MAAM,GAAG,CAAC,EAAG;MAAA,IAAA4pB,OAAA;MAAA9uI,eAAA,OAAA2uI,mBAAA;MAErC,IAAM5vF,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CACjD;MAED,IAAM5F,OAAO,GAAG,CACf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACnC;MAED21F,OAAA,GAAAD,QAAA,CAAAn1I,IAAA,OAAOqlD,QAAQ,EAAE5F,OAAO,EAAE1pB,MAAM,EAAEy1F,MAAM;MAExC4pB,OAAA,CAAKr1I,IAAI,GAAG,qBAAqB;MAEjCq1I,OAAA,CAAK9pG,UAAU,GAAG;QACjBvV,MAAM,EAAEA,MAAM;QACdy1F,MAAM,EAAEA;MACT,CAAC;MAAC,OAAA4pB,OAAA;IAEH;IAACtuI,YAAA,CAAAmuI,mBAAA;MAAAj3I,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAI6uH,mBAAmB,CAAE7uH,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAAColG,MAAM,CAAE;MAE3D;IAAC;IAAA,OAAAypB,mBAAA;EAAA,EA3BgC5Q,kBAAkB;EAAA,IA+B9CgR,aAAa,0BAAAC,iBAAA;IAAAhuH,SAAA,CAAA+tH,aAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAA/tH,YAAA,CAAA6tH,aAAA;IAElB,SAAAA,cAAat/G,MAAM,GAAG,CAAC,EAAEy/G,IAAI,GAAG,GAAG,EAAEhT,cAAc,GAAG,EAAE,EAAEiT,eAAe,GAAG,EAAE,EAAEtU,GAAG,GAAGrsH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;MAAA,IAAA2gI,OAAA;MAAApvI,eAAA,OAAA+uI,aAAA;MAEnGK,OAAA,GAAAH,QAAA,CAAAv1I,IAAA;MAEA01I,OAAA,CAAK31I,IAAI,GAAG,eAAe;MAE3B21I,OAAA,CAAKpqG,UAAU,GAAG;QACjBvV,MAAM,EAAEA,MAAM;QACdy/G,IAAI,EAAEA,IAAI;QACVhT,cAAc,EAAEA,cAAc;QAC9BiT,eAAe,EAAEA,eAAe;QAChCtU,GAAG,EAAEA;MACN,CAAC;MAEDqB,cAAc,GAAG1tH,IAAI,CAACsC,KAAK,CAAEorH,cAAc,CAAE;MAC7CiT,eAAe,GAAG3gI,IAAI,CAACsC,KAAK,CAAEq+H,eAAe,CAAE;;MAE/C;;MAEA,IAAMh2F,OAAO,GAAG,EAAE;MAClB,IAAM4F,QAAQ,GAAG,EAAE;MACnB,IAAM1F,OAAO,GAAG,EAAE;MAClB,IAAMC,GAAG,GAAG,EAAE;;MAEd;;MAEA,IAAM7hC,MAAM,GAAG,IAAIuV,OAAO,EAAE;MAC5B,IAAMwiE,MAAM,GAAG,IAAIxiE,OAAO,EAAE;MAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,EAAE;;MAE5B;;MAEA,KAAM,IAAIqH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6nG,cAAc,EAAE7nG,CAAC,EAAG,EAAG;QAE5C,KAAM,IAAI52B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0xI,eAAe,EAAE1xI,CAAC,EAAG,EAAG;UAE7C,IAAM2yB,CAAC,GAAG3yB,CAAC,GAAG0xI,eAAe,GAAGtU,GAAG;UACnC,IAAMvmH,CAAC,GAAG+f,CAAC,GAAG6nG,cAAc,GAAG1tH,IAAI,CAACC,EAAE,GAAG,CAAC;;UAE1C;;UAEA+gF,MAAM,CAAC9/E,CAAC,GAAG,CAAE+f,MAAM,GAAGy/G,IAAI,GAAG1gI,IAAI,CAAC8D,GAAG,CAAEgC,CAAC,CAAE,IAAK9F,IAAI,CAAC8D,GAAG,CAAE8d,CAAC,CAAE;UAC5Do/D,MAAM,CAACx/E,CAAC,GAAG,CAAEyf,MAAM,GAAGy/G,IAAI,GAAG1gI,IAAI,CAAC8D,GAAG,CAAEgC,CAAC,CAAE,IAAK9F,IAAI,CAAC+D,GAAG,CAAE6d,CAAC,CAAE;UAC5Do/D,MAAM,CAAC7rE,CAAC,GAAGurH,IAAI,GAAG1gI,IAAI,CAAC+D,GAAG,CAAE+B,CAAC,CAAE;UAE/ByqC,QAAQ,CAAC9hD,IAAI,CAAEuyF,MAAM,CAAC9/E,CAAC,EAAE8/E,MAAM,CAACx/E,CAAC,EAAEw/E,MAAM,CAAC7rE,CAAC,CAAE;;UAE7C;;UAEAlM,MAAM,CAAC/H,CAAC,GAAG+f,MAAM,GAAGjhB,IAAI,CAAC8D,GAAG,CAAE8d,CAAC,CAAE;UACjC3Y,MAAM,CAACzH,CAAC,GAAGyf,MAAM,GAAGjhB,IAAI,CAAC+D,GAAG,CAAE6d,CAAC,CAAE;UACjCf,MAAM,CAACxa,UAAU,CAAE26E,MAAM,EAAE/3E,MAAM,CAAE,CAAClE,SAAS,EAAE;UAE/C8lC,OAAO,CAACp8C,IAAI,CAAEoyB,MAAM,CAAC3f,CAAC,EAAE2f,MAAM,CAACrf,CAAC,EAAEqf,MAAM,CAAC1L,CAAC,CAAE;;UAE5C;;UAEA21B,GAAG,CAACr8C,IAAI,CAAEQ,CAAC,GAAG0xI,eAAe,CAAE;UAC/B71F,GAAG,CAACr8C,IAAI,CAAEo3B,CAAC,GAAG6nG,cAAc,CAAE;QAE/B;MAED;;MAEA;;MAEA,KAAM,IAAI7nG,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI6nG,cAAc,EAAE7nG,IAAC,EAAG,EAAG;QAE5C,KAAM,IAAI52B,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI0xI,eAAe,EAAE1xI,IAAC,EAAG,EAAG;UAE7C;;UAEA,IAAMyU,CAAC,GAAG,CAAEi9H,eAAe,GAAG,CAAC,IAAK96G,IAAC,GAAG52B,IAAC,GAAG,CAAC;UAC7C,IAAM0U,CAAC,GAAG,CAAEg9H,eAAe,GAAG,CAAC,KAAO96G,IAAC,GAAG,CAAC,CAAE,GAAG52B,IAAC,GAAG,CAAC;UACrD,IAAM2U,CAAC,GAAG,CAAE+8H,eAAe,GAAG,CAAC,KAAO96G,IAAC,GAAG,CAAC,CAAE,GAAG52B,IAAC;UACjD,IAAM8c,CAAC,GAAG,CAAE40H,eAAe,GAAG,CAAC,IAAK96G,IAAC,GAAG52B,IAAC;;UAEzC;;UAEA07C,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;UACvB4+B,OAAO,CAACl8C,IAAI,CAAEkV,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;QAExB;MAED;;MAEA;;MAEA60H,OAAA,CAAKj3F,QAAQ,CAAEgB,OAAO,CAAE;MACxBi2F,OAAA,CAAK/2F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1EqwF,OAAA,CAAK/2F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MACvE+1F,OAAA,CAAK/2F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;MAAC,OAAA81F,OAAA;IAEjE;IAAC5uI,YAAA,CAAAuuI,aAAA;MAAAr3I,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAm8F,aAAA,CAAA13I,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAIivH,aAAa,CAAEjvH,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAACovH,IAAI,EAAEpvH,IAAI,CAACo8G,cAAc,EAAEp8G,IAAI,CAACqvH,eAAe,EAAErvH,IAAI,CAAC+6G,GAAG,CAAE;MAExG;IAAC;IAAA,OAAAkU,aAAA;EAAA,EA/G0Bx3F,cAAc;EAAA,IAmHpC83F,iBAAiB,0BAAAC,iBAAA;IAAAtuH,SAAA,CAAAquH,iBAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAAruH,YAAA,CAAAmuH,iBAAA;IAEtB,SAAAA,kBAAa5/G,MAAM,GAAG,CAAC,EAAEy/G,IAAI,GAAG,GAAG,EAAEC,eAAe,GAAG,EAAE,EAAEjT,cAAc,GAAG,CAAC,EAAEz+F,CAAC,GAAG,CAAC,EAAExrB,CAAC,GAAG,CAAC,EAAG;MAAA,IAAAu9H,OAAA;MAAAxvI,eAAA,OAAAqvI,iBAAA;MAE7FG,OAAA,GAAAD,QAAA,CAAA71I,IAAA;MAEA81I,OAAA,CAAK/1I,IAAI,GAAG,mBAAmB;MAE/B+1I,OAAA,CAAKxqG,UAAU,GAAG;QACjBvV,MAAM,EAAEA,MAAM;QACdy/G,IAAI,EAAEA,IAAI;QACVC,eAAe,EAAEA,eAAe;QAChCjT,cAAc,EAAEA,cAAc;QAC9Bz+F,CAAC,EAAEA,CAAC;QACJxrB,CAAC,EAAEA;MACJ,CAAC;MAEDk9H,eAAe,GAAG3gI,IAAI,CAACsC,KAAK,CAAEq+H,eAAe,CAAE;MAC/CjT,cAAc,GAAG1tH,IAAI,CAACsC,KAAK,CAAEorH,cAAc,CAAE;;MAE7C;;MAEA,IAAM/iF,OAAO,GAAG,EAAE;MAClB,IAAM4F,QAAQ,GAAG,EAAE;MACnB,IAAM1F,OAAO,GAAG,EAAE;MAClB,IAAMC,GAAG,GAAG,EAAE;;MAEd;;MAEA,IAAMk2C,MAAM,GAAG,IAAIxiE,OAAO,EAAE;MAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,EAAE;MAE5B,IAAMyiH,EAAE,GAAG,IAAIziH,OAAO,EAAE;MACxB,IAAM0iH,EAAE,GAAG,IAAI1iH,OAAO,EAAE;MAExB,IAAM2iH,CAAC,GAAG,IAAI3iH,OAAO,EAAE;MACvB,IAAM4iH,CAAC,GAAG,IAAI5iH,OAAO,EAAE;MACvB,IAAM6iH,CAAC,GAAG,IAAI7iH,OAAO,EAAE;;MAEvB;;MAEA,KAAM,IAAIvvB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0xI,eAAe,EAAE,EAAG1xI,CAAC,EAAG;QAE7C;;QAEA,IAAM2yB,CAAC,GAAG3yB,CAAC,GAAG0xI,eAAe,GAAG1xG,CAAC,GAAGjvB,IAAI,CAACC,EAAE,GAAG,CAAC;;QAE/C;QACA;;QAEAqhI,wBAAwB,CAAE1/G,CAAC,EAAEqN,CAAC,EAAExrB,CAAC,EAAEwd,MAAM,EAAEggH,EAAE,CAAE;QAC/CK,wBAAwB,CAAE1/G,CAAC,GAAG,IAAI,EAAEqN,CAAC,EAAExrB,CAAC,EAAEwd,MAAM,EAAEigH,EAAE,CAAE;;QAEtD;;QAEAE,CAAC,CAAC/6H,UAAU,CAAE66H,EAAE,EAAED,EAAE,CAAE;QACtBI,CAAC,CAACp7H,UAAU,CAAEi7H,EAAE,EAAED,EAAE,CAAE;QACtBE,CAAC,CAAClhH,YAAY,CAAEmhH,CAAC,EAAEC,CAAC,CAAE;QACtBA,CAAC,CAACphH,YAAY,CAAEkhH,CAAC,EAAEC,CAAC,CAAE;;QAEtB;;QAEAD,CAAC,CAACp8H,SAAS,EAAE;QACbs8H,CAAC,CAACt8H,SAAS,EAAE;QAEb,KAAM,IAAI8gB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6nG,cAAc,EAAE,EAAG7nG,CAAC,EAAG;UAE5C;UACA;;UAEA,IAAM/f,CAAC,GAAG+f,CAAC,GAAG6nG,cAAc,GAAG1tH,IAAI,CAACC,EAAE,GAAG,CAAC;UAC1C,IAAMoN,EAAE,GAAG,CAAEqzH,IAAI,GAAG1gI,IAAI,CAAC8D,GAAG,CAAEgC,CAAC,CAAE;UACjC,IAAMwH,EAAE,GAAGozH,IAAI,GAAG1gI,IAAI,CAAC+D,GAAG,CAAE+B,CAAC,CAAE;;UAE/B;UACA;;UAEAk7E,MAAM,CAAC9/E,CAAC,GAAG+/H,EAAE,CAAC//H,CAAC,IAAKmM,EAAE,GAAGg0H,CAAC,CAACngI,CAAC,GAAGoM,EAAE,GAAG6zH,CAAC,CAACjgI,CAAC,CAAE;UACzC8/E,MAAM,CAACx/E,CAAC,GAAGy/H,EAAE,CAACz/H,CAAC,IAAK6L,EAAE,GAAGg0H,CAAC,CAAC7/H,CAAC,GAAG8L,EAAE,GAAG6zH,CAAC,CAAC3/H,CAAC,CAAE;UACzCw/E,MAAM,CAAC7rE,CAAC,GAAG8rH,EAAE,CAAC9rH,CAAC,IAAK9H,EAAE,GAAGg0H,CAAC,CAAClsH,CAAC,GAAG7H,EAAE,GAAG6zH,CAAC,CAAChsH,CAAC,CAAE;UAEzCo7B,QAAQ,CAAC9hD,IAAI,CAAEuyF,MAAM,CAAC9/E,CAAC,EAAE8/E,MAAM,CAACx/E,CAAC,EAAEw/E,MAAM,CAAC7rE,CAAC,CAAE;;UAE7C;;UAEA0L,MAAM,CAACxa,UAAU,CAAE26E,MAAM,EAAEigD,EAAE,CAAE,CAACl8H,SAAS,EAAE;UAE3C8lC,OAAO,CAACp8C,IAAI,CAAEoyB,MAAM,CAAC3f,CAAC,EAAE2f,MAAM,CAACrf,CAAC,EAAEqf,MAAM,CAAC1L,CAAC,CAAE;;UAE5C;;UAEA21B,GAAG,CAACr8C,IAAI,CAAEQ,CAAC,GAAG0xI,eAAe,CAAE;UAC/B71F,GAAG,CAACr8C,IAAI,CAAEo3B,CAAC,GAAG6nG,cAAc,CAAE;QAE/B;MAED;;MAEA;;MAEA,KAAM,IAAI7nG,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI86G,eAAe,EAAE96G,IAAC,EAAG,EAAG;QAE7C,KAAM,IAAI52B,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIy+H,cAAc,EAAEz+H,IAAC,EAAG,EAAG;UAE5C;;UAEA,IAAMyU,CAAC,GAAG,CAAEgqH,cAAc,GAAG,CAAC,KAAO7nG,IAAC,GAAG,CAAC,CAAE,IAAK52B,IAAC,GAAG,CAAC,CAAE;UACxD,IAAM0U,CAAC,GAAG,CAAE+pH,cAAc,GAAG,CAAC,IAAK7nG,IAAC,IAAK52B,IAAC,GAAG,CAAC,CAAE;UAChD,IAAM2U,CAAC,GAAG,CAAE8pH,cAAc,GAAG,CAAC,IAAK7nG,IAAC,GAAG52B,IAAC;UACxC,IAAM8c,CAAC,GAAG,CAAE2hH,cAAc,GAAG,CAAC,KAAO7nG,IAAC,GAAG,CAAC,CAAE,GAAG52B,IAAC;;UAEhD;;UAEA07C,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;UACvB4+B,OAAO,CAACl8C,IAAI,CAAEkV,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;QAExB;MAED;;MAEA;;MAEAi1H,OAAA,CAAKr3F,QAAQ,CAAEgB,OAAO,CAAE;MACxBq2F,OAAA,CAAKn3F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1EywF,OAAA,CAAKn3F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MACvEm2F,OAAA,CAAKn3F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;;MAE/D;;MAEA,SAASw2F,wBAAwBA,CAAE1/G,CAAC,EAAEqN,CAAC,EAAExrB,CAAC,EAAEwd,MAAM,EAAE4C,QAAQ,EAAG;QAE9D,IAAM09G,EAAE,GAAGvhI,IAAI,CAAC8D,GAAG,CAAE8d,CAAC,CAAE;QACxB,IAAM4/G,EAAE,GAAGxhI,IAAI,CAAC+D,GAAG,CAAE6d,CAAC,CAAE;QACxB,IAAM6/G,OAAO,GAAGh+H,CAAC,GAAGwrB,CAAC,GAAGrN,CAAC;QACzB,IAAM8/G,EAAE,GAAG1hI,IAAI,CAAC8D,GAAG,CAAE29H,OAAO,CAAE;QAE9B59G,QAAQ,CAAC3iB,CAAC,GAAG+f,MAAM,IAAK,CAAC,GAAGygH,EAAE,CAAE,GAAG,GAAG,GAAGH,EAAE;QAC3C19G,QAAQ,CAACriB,CAAC,GAAGyf,MAAM,IAAK,CAAC,GAAGygH,EAAE,CAAE,GAAGF,EAAE,GAAG,GAAG;QAC3C39G,QAAQ,CAAC1O,CAAC,GAAG8L,MAAM,GAAGjhB,IAAI,CAAC+D,GAAG,CAAE09H,OAAO,CAAE,GAAG,GAAG;MAEhD;MAAC,OAAAT,OAAA;IAEF;IAAChvI,YAAA,CAAA6uI,iBAAA;MAAA33I,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAy8F,iBAAA,CAAAh4I,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB,OAAO,IAAIuvH,iBAAiB,CAAEvvH,IAAI,CAAC2P,MAAM,EAAE3P,IAAI,CAACovH,IAAI,EAAEpvH,IAAI,CAACqvH,eAAe,EAAErvH,IAAI,CAACo8G,cAAc,EAAEp8G,IAAI,CAAC2d,CAAC,EAAE3d,IAAI,CAAC7N,CAAC,CAAE;MAElH;IAAC;IAAA,OAAAo9H,iBAAA;EAAA,EA9J8B93F,cAAc;EAAA,IAkKxC44F,YAAY,0BAAAC,iBAAA;IAAApvH,SAAA,CAAAmvH,YAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAAnvH,YAAA,CAAAivH,YAAA;IAEjB,SAAAA,aAAa93D,IAAI,GAAG,IAAI0/C,qBAAqB,CAAE,IAAI/qG,OAAO,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE,EAAEmiH,eAAe,GAAG,EAAE,EAAE1/G,MAAM,GAAG,CAAC,EAAEysG,cAAc,GAAG,CAAC,EAAEvJ,MAAM,GAAG,KAAK,EAAG;MAAA,IAAA2d,OAAA;MAAAtwI,eAAA,OAAAmwI,YAAA;MAErMG,OAAA,GAAAD,QAAA,CAAA32I,IAAA;MAEA42I,OAAA,CAAK72I,IAAI,GAAG,cAAc;MAE1B62I,OAAA,CAAKtrG,UAAU,GAAG;QACjBqzC,IAAI,EAAEA,IAAI;QACV82D,eAAe,EAAEA,eAAe;QAChC1/G,MAAM,EAAEA,MAAM;QACdysG,cAAc,EAAEA,cAAc;QAC9BvJ,MAAM,EAAEA;MACT,CAAC;MAED,IAAM4d,MAAM,GAAGl4D,IAAI,CAACo6C,mBAAmB,CAAE0c,eAAe,EAAExc,MAAM,CAAE;;MAElE;;MAEA2d,OAAA,CAAK92F,QAAQ,GAAG+2F,MAAM,CAAC/2F,QAAQ;MAC/B82F,OAAA,CAAKj3F,OAAO,GAAGk3F,MAAM,CAACl3F,OAAO;MAC7Bi3F,OAAA,CAAK1d,SAAS,GAAG2d,MAAM,CAAC3d,SAAS;;MAEjC;;MAEA,IAAMpjC,MAAM,GAAG,IAAIxiE,OAAO,EAAE;MAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,EAAE;MAC5B,IAAMxJ,EAAE,GAAG,IAAI9P,OAAO,EAAE;MACxB,IAAI88H,CAAC,GAAG,IAAIxjH,OAAO,EAAE;;MAErB;;MAEA,IAAM+xB,QAAQ,GAAG,EAAE;MACnB,IAAM1F,OAAO,GAAG,EAAE;MAClB,IAAMC,GAAG,GAAG,EAAE;MACd,IAAMH,OAAO,GAAG,EAAE;;MAElB;;MAEAs3F,kBAAkB,EAAE;;MAEpB;;MAEAH,OAAA,CAAKn4F,QAAQ,CAAEgB,OAAO,CAAE;MACxBm3F,OAAA,CAAKj4F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC1EuxF,OAAA,CAAKj4F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;MACvEi3F,OAAA,CAAKj4F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;;MAE/D;;MAEA,SAASm3F,kBAAkBA,CAAA,EAAG;QAE7B,KAAM,IAAIhzI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0xI,eAAe,EAAE1xI,CAAC,EAAG,EAAG;UAE5CizI,eAAe,CAAEjzI,CAAC,CAAE;QAErB;;QAEA;QACA;QACA;QACA;;QAEAizI,eAAe,CAAI/d,MAAM,KAAK,KAAK,GAAKwc,eAAe,GAAG,CAAC,CAAE;;QAE7D;QACA;;QAEA5Q,WAAW,EAAE;;QAEb;;QAEAoS,eAAe,EAAE;MAElB;MAEA,SAASD,eAAeA,CAAEjzI,CAAC,EAAG;QAE7B;;QAEA+yI,CAAC,GAAGn4D,IAAI,CAAC24C,UAAU,CAAEvzH,CAAC,GAAG0xI,eAAe,EAAEqB,CAAC,CAAE;;QAE7C;;QAEA,IAAMX,CAAC,GAAGU,MAAM,CAACl3F,OAAO,CAAE57C,CAAC,CAAE;QAC7B,IAAMkyI,CAAC,GAAGY,MAAM,CAAC3d,SAAS,CAAEn1H,CAAC,CAAE;;QAE/B;;QAEA,KAAM,IAAI42B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6nG,cAAc,EAAE7nG,CAAC,EAAG,EAAG;UAE5C,IAAM/f,CAAC,GAAG+f,CAAC,GAAG6nG,cAAc,GAAG1tH,IAAI,CAACC,EAAE,GAAG,CAAC;UAE1C,IAAM8D,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAE+B,CAAC,CAAE;UACzB,IAAMhC,GAAG,GAAG,CAAE9D,IAAI,CAAC8D,GAAG,CAAEgC,CAAC,CAAE;;UAE3B;;UAEA+a,MAAM,CAAC3f,CAAC,GAAK4C,GAAG,GAAGu9H,CAAC,CAACngI,CAAC,GAAG6C,GAAG,GAAGo9H,CAAC,CAACjgI,CAAG;UACpC2f,MAAM,CAACrf,CAAC,GAAKsC,GAAG,GAAGu9H,CAAC,CAAC7/H,CAAC,GAAGuC,GAAG,GAAGo9H,CAAC,CAAC3/H,CAAG;UACpCqf,MAAM,CAAC1L,CAAC,GAAKrR,GAAG,GAAGu9H,CAAC,CAAClsH,CAAC,GAAGpR,GAAG,GAAGo9H,CAAC,CAAChsH,CAAG;UACpC0L,MAAM,CAAC9b,SAAS,EAAE;UAElB8lC,OAAO,CAACp8C,IAAI,CAAEoyB,MAAM,CAAC3f,CAAC,EAAE2f,MAAM,CAACrf,CAAC,EAAEqf,MAAM,CAAC1L,CAAC,CAAE;;UAE5C;;UAEA6rE,MAAM,CAAC9/E,CAAC,GAAG8gI,CAAC,CAAC9gI,CAAC,GAAG+f,MAAM,GAAGJ,MAAM,CAAC3f,CAAC;UAClC8/E,MAAM,CAACx/E,CAAC,GAAGwgI,CAAC,CAACxgI,CAAC,GAAGyf,MAAM,GAAGJ,MAAM,CAACrf,CAAC;UAClCw/E,MAAM,CAAC7rE,CAAC,GAAG6sH,CAAC,CAAC7sH,CAAC,GAAG8L,MAAM,GAAGJ,MAAM,CAAC1L,CAAC;UAElCo7B,QAAQ,CAAC9hD,IAAI,CAAEuyF,MAAM,CAAC9/E,CAAC,EAAE8/E,MAAM,CAACx/E,CAAC,EAAEw/E,MAAM,CAAC7rE,CAAC,CAAE;QAE9C;MAED;MAEA,SAASgtH,eAAeA,CAAA,EAAG;QAE1B,KAAM,IAAIt8G,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI86G,eAAe,EAAE96G,CAAC,EAAG,EAAG;UAE7C,KAAM,IAAI52B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIy+H,cAAc,EAAEz+H,CAAC,EAAG,EAAG;YAE5C,IAAMyU,CAAC,GAAG,CAAEgqH,cAAc,GAAG,CAAC,KAAO7nG,CAAC,GAAG,CAAC,CAAE,IAAK52B,CAAC,GAAG,CAAC,CAAE;YACxD,IAAM0U,CAAC,GAAG,CAAE+pH,cAAc,GAAG,CAAC,IAAK7nG,CAAC,IAAK52B,CAAC,GAAG,CAAC,CAAE;YAChD,IAAM2U,CAAC,GAAG,CAAE8pH,cAAc,GAAG,CAAC,IAAK7nG,CAAC,GAAG52B,CAAC;YACxC,IAAM8c,CAAC,GAAG,CAAE2hH,cAAc,GAAG,CAAC,KAAO7nG,CAAC,GAAG,CAAC,CAAE,GAAG52B,CAAC;;YAEhD;;YAEA07C,OAAO,CAACl8C,IAAI,CAAEiV,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;YACvB4+B,OAAO,CAACl8C,IAAI,CAAEkV,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;UAExB;QAED;MAED;MAEA,SAASgkH,WAAWA,CAAA,EAAG;QAEtB,KAAM,IAAI9gI,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0xI,eAAe,EAAE1xI,CAAC,EAAG,EAAG;UAE7C,KAAM,IAAI42B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6nG,cAAc,EAAE7nG,CAAC,EAAG,EAAG;YAE5C7Q,EAAE,CAAC9T,CAAC,GAAGjS,CAAC,GAAG0xI,eAAe;YAC1B3rH,EAAE,CAACxT,CAAC,GAAGqkB,CAAC,GAAG6nG,cAAc;YAEzB5iF,GAAG,CAACr8C,IAAI,CAAEumB,EAAE,CAAC9T,CAAC,EAAE8T,EAAE,CAACxT,CAAC,CAAE;UAEvB;QAED;MAED;MAAC,OAAAsgI,OAAA;IAEF;IAAC9vI,YAAA,CAAA2vI,YAAA;MAAAz4I,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAu9F,YAAA,CAAA94I,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;MAAAttC,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAu9F,YAAA,CAAA94I,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAACu4D,IAAI,GAAG,IAAI,CAACrzC,UAAU,CAACqzC,IAAI,CAACn4D,MAAM,EAAE;QAEzC,OAAOJ,IAAI;MAEZ;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAiBlgC,IAAI,EAAG;QAEvB;QACA;QACA,OAAO,IAAIqwH,YAAY,CACtB,IAAI1X,MAAM,CAAE34G,IAAI,CAACu4D,IAAI,CAAC5+E,IAAI,CAAE,EAAE,CAACumD,QAAQ,CAAElgC,IAAI,CAACu4D,IAAI,CAAE,EACpDv4D,IAAI,CAACqvH,eAAe,EACpBrvH,IAAI,CAAC2P,MAAM,EACX3P,IAAI,CAACo8G,cAAc,EACnBp8G,IAAI,CAAC6yG,MAAM,CACX;MAEF;IAAC;IAAA,OAAAwd,YAAA;EAAA,EA/LyB54F,cAAc;EAAA,IAmMnCq5F,iBAAiB,0BAAAC,iBAAA;IAAA7vH,SAAA,CAAA4vH,iBAAA,EAAAC,iBAAA;IAAA,IAAAC,QAAA,GAAA5vH,YAAA,CAAA0vH,iBAAA;IAEtB,SAAAA,kBAAaz+G,QAAQ,GAAG,IAAI,EAAG;MAAA,IAAA4+G,OAAA;MAAA/wI,eAAA,OAAA4wI,iBAAA;MAE9BG,OAAA,GAAAD,QAAA,CAAAp3I,IAAA;MAEAq3I,OAAA,CAAKt3I,IAAI,GAAG,mBAAmB;MAE/Bs3I,OAAA,CAAK/rG,UAAU,GAAG;QACjB7S,QAAQ,EAAEA;MACX,CAAC;MAED,IAAKA,QAAQ,KAAK,IAAI,EAAG;QAExB;;QAEA,IAAM4sB,QAAQ,GAAG,EAAE;QACnB,IAAMiyF,KAAK,GAAG,IAAIlsD,GAAG,EAAE;;QAEvB;;QAEA,IAAM7sC,KAAK,GAAG,IAAIjrB,OAAO,EAAE;QAC3B,IAAMkxB,GAAG,GAAG,IAAIlxB,OAAO,EAAE;QAEzB,IAAKmF,QAAQ,CAACpkB,KAAK,KAAK,IAAI,EAAG;UAE9B;;UAEA,IAAMskB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;UAC7C,IAAM8mB,OAAO,GAAGhnB,QAAQ,CAACpkB,KAAK;UAC9B,IAAI+pC,MAAM,GAAG3lB,QAAQ,CAAC2lB,MAAM;UAE5B,IAAKA,MAAM,CAACt6C,MAAM,KAAK,CAAC,EAAG;YAE1Bs6C,MAAM,GAAG,CAAE;cAAEG,KAAK,EAAE,CAAC;cAAEjwB,KAAK,EAAEmxB,OAAO,CAACnxB,KAAK;cAAEywB,aAAa,EAAE;YAAE,CAAC,CAAE;UAElE;;UAEA;;UAEA,KAAM,IAAIw4F,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGp5F,MAAM,CAACt6C,MAAM,EAAEyzI,CAAC,GAAGC,EAAE,EAAE,EAAGD,CAAC,EAAG;YAEnD,IAAM52F,KAAK,GAAGvC,MAAM,CAAEm5F,CAAC,CAAE;YAEzB,IAAMhyF,UAAU,GAAG5E,KAAK,CAACpC,KAAK;YAC9B,IAAM8H,UAAU,GAAG1F,KAAK,CAACryB,KAAK;YAE9B,KAAM,IAAIvqB,CAAC,GAAGwhD,UAAU,EAAE7wC,CAAC,GAAK6wC,UAAU,GAAGc,UAAY,EAAEtiD,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,IAAI,CAAC,EAAG;cAE1E,KAAM,IAAI42B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;gBAE9B,IAAMggB,MAAM,GAAG8E,OAAO,CAAC7hC,IAAI,CAAE7Z,CAAC,GAAG42B,CAAC,CAAE;gBACpC,IAAMigB,MAAM,GAAG6E,OAAO,CAAC7hC,IAAI,CAAE7Z,CAAC,GAAG,CAAE42B,CAAC,GAAG,CAAC,IAAK,CAAC,CAAE;gBAEhD4jB,KAAK,CAAC7gC,mBAAmB,CAAEib,QAAQ,EAAEgiB,MAAM,CAAE;gBAC7C6J,GAAG,CAAC9mC,mBAAmB,CAAEib,QAAQ,EAAEiiB,MAAM,CAAE;gBAE3C,IAAK68F,YAAY,CAAEl5F,KAAK,EAAEiG,GAAG,EAAE8yF,KAAK,CAAE,KAAK,IAAI,EAAG;kBAEjDjyF,QAAQ,CAAC9hD,IAAI,CAAEg7C,KAAK,CAACvoC,CAAC,EAAEuoC,KAAK,CAACjoC,CAAC,EAAEioC,KAAK,CAACt0B,CAAC,CAAE;kBAC1Co7B,QAAQ,CAAC9hD,IAAI,CAAEihD,GAAG,CAACxuC,CAAC,EAAEwuC,GAAG,CAACluC,CAAC,EAAEkuC,GAAG,CAACv6B,CAAC,CAAE;gBAErC;cAED;YAED;UAED;QAED,CAAC,MAAM;UAEN;;UAEA,IAAM0O,UAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;UAE7C,KAAM,IAAI50B,IAAC,GAAG,CAAC,EAAE2Q,IAAC,GAAKikB,UAAQ,CAACrK,KAAK,GAAG,CAAG,EAAEvqB,IAAC,GAAG2Q,IAAC,EAAE3Q,IAAC,EAAG,EAAG;YAE1D,KAAM,IAAI42B,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;cAE9B;cACA;;cAEA,IAAMggB,MAAM,GAAG,CAAC,GAAG52C,IAAC,GAAG42B,IAAC;cACxB,IAAMigB,OAAM,GAAG,CAAC,GAAG72C,IAAC,GAAK,CAAE42B,IAAC,GAAG,CAAC,IAAK,CAAG;cAExC4jB,KAAK,CAAC7gC,mBAAmB,CAAEib,UAAQ,EAAEgiB,MAAM,CAAE;cAC7C6J,GAAG,CAAC9mC,mBAAmB,CAAEib,UAAQ,EAAEiiB,OAAM,CAAE;cAE3C,IAAK68F,YAAY,CAAEl5F,KAAK,EAAEiG,GAAG,EAAE8yF,KAAK,CAAE,KAAK,IAAI,EAAG;gBAEjDjyF,QAAQ,CAAC9hD,IAAI,CAAEg7C,KAAK,CAACvoC,CAAC,EAAEuoC,KAAK,CAACjoC,CAAC,EAAEioC,KAAK,CAACt0B,CAAC,CAAE;gBAC1Co7B,QAAQ,CAAC9hD,IAAI,CAAEihD,GAAG,CAACxuC,CAAC,EAAEwuC,GAAG,CAACluC,CAAC,EAAEkuC,GAAG,CAACv6B,CAAC,CAAE;cAErC;YAED;UAED;QAED;;QAEA;;QAEAotH,OAAA,CAAK14F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAE3E;MAAC,OAAAgyF,OAAA;IAEF;IAACvwI,YAAA,CAAAowI,iBAAA;MAAAl5I,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAg+F,iBAAA,CAAAv5I,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC+iB,UAAU,GAAG5tC,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEtE,MAAM,CAAC+iB,UAAU,CAAE;QAExD,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA4rG,iBAAA;EAAA,EAtH8Br5F,cAAc;EA0H9C,SAAS45F,YAAYA,CAAEl5F,KAAK,EAAEiG,GAAG,EAAE8yF,KAAK,EAAG;IAE1C,IAAMI,KAAK,MAAA7yH,MAAA,CAAM05B,KAAK,CAACvoC,CAAC,OAAA6O,MAAA,CAAI05B,KAAK,CAACjoC,CAAC,OAAAuO,MAAA,CAAI05B,KAAK,CAACt0B,CAAC,OAAApF,MAAA,CAAI2/B,GAAG,CAACxuC,CAAC,OAAA6O,MAAA,CAAI2/B,GAAG,CAACluC,CAAC,OAAAuO,MAAA,CAAI2/B,GAAG,CAACv6B,CAAC,CAAE;IAC3E,IAAM0tH,KAAK,MAAA9yH,MAAA,CAAM2/B,GAAG,CAACxuC,CAAC,OAAA6O,MAAA,CAAI2/B,GAAG,CAACluC,CAAC,OAAAuO,MAAA,CAAI2/B,GAAG,CAACv6B,CAAC,OAAApF,MAAA,CAAI05B,KAAK,CAACvoC,CAAC,OAAA6O,MAAA,CAAI05B,KAAK,CAACjoC,CAAC,OAAAuO,MAAA,CAAI05B,KAAK,CAACt0B,CAAC,CAAE,CAAC,CAAC;;IAE7E,IAAKqtH,KAAK,CAACntE,GAAG,CAAEutE,KAAK,CAAE,KAAK,IAAI,IAAIJ,KAAK,CAACntE,GAAG,CAAEwtE,KAAK,CAAE,KAAK,IAAI,EAAG;MAEjE,OAAO,KAAK;IAEb,CAAC,MAAM;MAENL,KAAK,CAACz8H,GAAG,CAAE68H,KAAK,CAAE;MAClBJ,KAAK,CAACz8H,GAAG,CAAE88H,KAAK,CAAE;MAClB,OAAO,IAAI;IAEZ;EAED;EAEA,IAAIC,UAAU,GAAG,aAAal6I,MAAM,CAACshI,MAAM,CAAC;IAC3Cx6H,SAAS,EAAE,IAAI;IACfqgD,WAAW,EAAEA,WAAW;IACxBu9E,eAAe,EAAEA,eAAe;IAChCM,cAAc,EAAEA,cAAc;IAC9BuB,YAAY,EAAEA,YAAY;IAC1BhB,gBAAgB,EAAEA,gBAAgB;IAClC4C,oBAAoB,EAAEA,oBAAoB;IAC1CQ,aAAa,EAAEA,aAAa;IAC5B8G,eAAe,EAAEA,eAAe;IAChC4F,mBAAmB,EAAEA,mBAAmB;IACxCtR,aAAa,EAAEA,aAAa;IAC5B0R,kBAAkB,EAAEA,kBAAkB;IACtChhF,aAAa,EAAEA,aAAa;IAC5BkyE,kBAAkB,EAAEA,kBAAkB;IACtCkP,YAAY,EAAEA,YAAY;IAC1BU,aAAa,EAAEA,aAAa;IAC5BQ,cAAc,EAAEA,cAAc;IAC9BQ,mBAAmB,EAAEA,mBAAmB;IACxCI,aAAa,EAAEA,aAAa;IAC5BM,iBAAiB,EAAEA,iBAAiB;IACpCc,YAAY,EAAEA,YAAY;IAC1BS,iBAAiB,EAAEA;EACpB,CAAC,CAAC;EAAC,IAEGzqD,cAAc,0BAAAorD,UAAA;IAAAvwH,SAAA,CAAAmlE,cAAA,EAAAorD,UAAA;IAAA,IAAAC,QAAA,GAAAtwH,YAAA,CAAAilE,cAAA;IAEnB,SAAAA,eAAanhD,UAAU,EAAG;MAAA,IAAAysG,OAAA;MAAAzxI,eAAA,OAAAmmF,cAAA;MAEzBsrD,OAAA,GAAAD,QAAA,CAAA93I,IAAA;MAEA+3I,OAAA,CAAKn5B,gBAAgB,GAAG,IAAI;MAE5Bm5B,OAAA,CAAKh4I,IAAI,GAAG,gBAAgB;MAE5Bg4I,OAAA,CAAKn0H,KAAK,GAAG,IAAI8yB,KAAK,CAAE,QAAQ,CAAE;MAClCqhG,OAAA,CAAKtoG,WAAW,GAAG,IAAI;MAEvBsoG,OAAA,CAAK5hG,GAAG,GAAG,IAAI;MAEf4hG,OAAA,CAAKjmG,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAysG,OAAA;IAE9B;IAACjxI,YAAA,CAAA2lF,cAAA;MAAAzuF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAuzC,cAAA,CAAA9uF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC3E,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAE/B,IAAI,CAACuyB,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QAErB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAs2C,cAAA;EAAA,EA7B2Bz9C,QAAQ;EAAA,IAiC/BgpG,iBAAiB,0BAAAC,eAAA;IAAA3wH,SAAA,CAAA0wH,iBAAA,EAAAC,eAAA;IAAA,IAAAC,QAAA,GAAA1wH,YAAA,CAAAwwH,iBAAA;IAEtB,SAAAA,kBAAa1sG,UAAU,EAAG;MAAA,IAAA6sG,OAAA;MAAA7xI,eAAA,OAAA0xI,iBAAA;MAEzBG,OAAA,GAAAD,QAAA,CAAAl4I,IAAA,OAAOsrC,UAAU;MAEjB6sG,OAAA,CAAKvyD,mBAAmB,GAAG,IAAI;MAE/BuyD,OAAA,CAAKp4I,IAAI,GAAG,mBAAmB;MAAC,OAAAo4I,OAAA;IAEjC;IAAC,OAAArxI,YAAA,CAAAkxI,iBAAA;EAAA,EAV8B5wF,cAAc;EAAA,IAcxC+kC,oBAAoB,0BAAAisD,UAAA;IAAA9wH,SAAA,CAAA6kE,oBAAA,EAAAisD,UAAA;IAAA,IAAAC,QAAA,GAAA7wH,YAAA,CAAA2kE,oBAAA;IAEzB,SAAAA,qBAAa7gD,UAAU,EAAG;MAAA,IAAAgtG,OAAA;MAAAhyI,eAAA,OAAA6lF,oBAAA;MAEzBmsD,OAAA,GAAAD,QAAA,CAAAr4I,IAAA;MAEAs4I,OAAA,CAAKxrD,sBAAsB,GAAG,IAAI;MAElCwrD,OAAA,CAAK7wF,OAAO,GAAG;QAAE,UAAU,EAAE;MAAG,CAAC;MAEjC6wF,OAAA,CAAKv4I,IAAI,GAAG,sBAAsB;MAElCu4I,OAAA,CAAK10H,KAAK,GAAG,IAAI8yB,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;MACpC4hG,OAAA,CAAKpmG,SAAS,GAAG,GAAG;MACpBomG,OAAA,CAAKnmG,SAAS,GAAG,GAAG;MAEpBmmG,OAAA,CAAK9kG,GAAG,GAAG,IAAI;MAEf8kG,OAAA,CAAK3kG,QAAQ,GAAG,IAAI;MACpB2kG,OAAA,CAAK1kG,iBAAiB,GAAG,GAAG;MAE5B0kG,OAAA,CAAKzkG,KAAK,GAAG,IAAI;MACjBykG,OAAA,CAAKxkG,cAAc,GAAG,GAAG;MAEzBwkG,OAAA,CAAK/lG,QAAQ,GAAG,IAAImE,KAAK,CAAE,QAAQ,CAAE;MACrC4hG,OAAA,CAAK9lG,iBAAiB,GAAG,GAAG;MAC5B8lG,OAAA,CAAK7jG,WAAW,GAAG,IAAI;MAEvB6jG,OAAA,CAAKvkG,OAAO,GAAG,IAAI;MACnBukG,OAAA,CAAKtkG,SAAS,GAAG,CAAC;MAElBskG,OAAA,CAAKrkG,SAAS,GAAG,IAAI;MACrBqkG,OAAA,CAAKpkG,aAAa,GAAGxiC,qBAAqB;MAC1C4mI,OAAA,CAAKnkG,WAAW,GAAG,IAAIn6B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MAEtCs+H,OAAA,CAAKlkG,eAAe,GAAG,IAAI;MAC3BkkG,OAAA,CAAKjkG,iBAAiB,GAAG,CAAC;MAC1BikG,OAAA,CAAKhkG,gBAAgB,GAAG,CAAC;MAEzBgkG,OAAA,CAAK/jG,YAAY,GAAG,IAAI;MAExB+jG,OAAA,CAAK9jG,YAAY,GAAG,IAAI;MAExB8jG,OAAA,CAAK5kG,QAAQ,GAAG,IAAI;MAEpB4kG,OAAA,CAAKzjG,MAAM,GAAG,IAAI;MAClByjG,OAAA,CAAKvjG,eAAe,GAAG,GAAG;MAE1BujG,OAAA,CAAKxiG,SAAS,GAAG,KAAK;MACtBwiG,OAAA,CAAKviG,kBAAkB,GAAG,CAAC;MAC3BuiG,OAAA,CAAKtiG,gBAAgB,GAAG,OAAO;MAC/BsiG,OAAA,CAAKriG,iBAAiB,GAAG,OAAO;MAEhCqiG,OAAA,CAAKpiG,WAAW,GAAG,KAAK;MAExBoiG,OAAA,CAAKniG,GAAG,GAAG,IAAI;MAEfmiG,OAAA,CAAKxmG,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAgtG,OAAA;IAE9B;IAACxxI,YAAA,CAAAqlF,oBAAA;MAAAnuF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAizC,oBAAA,CAAAxuF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACk/B,OAAO,GAAG;UAAE,UAAU,EAAE;QAAG,CAAC;QAEjC,IAAI,CAAC7jC,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAC/B,IAAI,CAACsuB,SAAS,GAAG3pB,MAAM,CAAC2pB,SAAS;QACjC,IAAI,CAACC,SAAS,GAAG5pB,MAAM,CAAC4pB,SAAS;QAEjC,IAAI,CAACqB,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QAErB,IAAI,CAACG,QAAQ,GAAGprB,MAAM,CAACorB,QAAQ;QAC/B,IAAI,CAACC,iBAAiB,GAAGrrB,MAAM,CAACqrB,iBAAiB;QAEjD,IAAI,CAACC,KAAK,GAAGtrB,MAAM,CAACsrB,KAAK;QACzB,IAAI,CAACC,cAAc,GAAGvrB,MAAM,CAACurB,cAAc;QAE3C,IAAI,CAACvB,QAAQ,CAAC53B,IAAI,CAAE4N,MAAM,CAACgqB,QAAQ,CAAE;QACrC,IAAI,CAACkC,WAAW,GAAGlsB,MAAM,CAACksB,WAAW;QACrC,IAAI,CAACjC,iBAAiB,GAAGjqB,MAAM,CAACiqB,iBAAiB;QAEjD,IAAI,CAACuB,OAAO,GAAGxrB,MAAM,CAACwrB,OAAO;QAC7B,IAAI,CAACC,SAAS,GAAGzrB,MAAM,CAACyrB,SAAS;QAEjC,IAAI,CAACC,SAAS,GAAG1rB,MAAM,CAAC0rB,SAAS;QACjC,IAAI,CAACC,aAAa,GAAG3rB,MAAM,CAAC2rB,aAAa;QACzC,IAAI,CAACC,WAAW,CAACx5B,IAAI,CAAE4N,MAAM,CAAC4rB,WAAW,CAAE;QAE3C,IAAI,CAACC,eAAe,GAAG7rB,MAAM,CAAC6rB,eAAe;QAC7C,IAAI,CAACC,iBAAiB,GAAG9rB,MAAM,CAAC8rB,iBAAiB;QACjD,IAAI,CAACC,gBAAgB,GAAG/rB,MAAM,CAAC+rB,gBAAgB;QAE/C,IAAI,CAACC,YAAY,GAAGhsB,MAAM,CAACgsB,YAAY;QAEvC,IAAI,CAACC,YAAY,GAAGjsB,MAAM,CAACisB,YAAY;QAEvC,IAAI,CAACd,QAAQ,GAAGnrB,MAAM,CAACmrB,QAAQ;QAE/B,IAAI,CAACmB,MAAM,GAAGtsB,MAAM,CAACssB,MAAM;QAC3B,IAAI,CAACE,eAAe,GAAGxsB,MAAM,CAACwsB,eAAe;QAE7C,IAAI,CAACe,SAAS,GAAGvtB,MAAM,CAACutB,SAAS;QACjC,IAAI,CAACC,kBAAkB,GAAGxtB,MAAM,CAACwtB,kBAAkB;QACnD,IAAI,CAACC,gBAAgB,GAAGztB,MAAM,CAACytB,gBAAgB;QAC/C,IAAI,CAACC,iBAAiB,GAAG1tB,MAAM,CAAC0tB,iBAAiB;QAEjD,IAAI,CAACC,WAAW,GAAG3tB,MAAM,CAAC2tB,WAAW;QAErC,IAAI,CAACC,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QAErB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAg2C,oBAAA;EAAA,EAlHiCn9C,QAAQ;EAAA,IAsHrCo9C,oBAAoB,0BAAAmsD,qBAAA;IAAAjxH,SAAA,CAAA8kE,oBAAA,EAAAmsD,qBAAA;IAAA,IAAAC,QAAA,GAAAhxH,YAAA,CAAA4kE,oBAAA;IAEzB,SAAAA,qBAAa9gD,UAAU,EAAG;MAAA,IAAAmtG,OAAA;MAAAnyI,eAAA,OAAA8lF,oBAAA;MAEzBqsD,OAAA,GAAAD,QAAA,CAAAx4I,IAAA;MAEAy4I,OAAA,CAAK36B,sBAAsB,GAAG,IAAI;MAElC26B,OAAA,CAAKhxF,OAAO,GAAG;QAEd,UAAU,EAAE,EAAE;QACd,UAAU,EAAE;MAEb,CAAC;MAEDgxF,OAAA,CAAK14I,IAAI,GAAG,sBAAsB;MAElC04I,OAAA,CAAK1lG,YAAY,GAAG,IAAI;MACxB0lG,OAAA,CAAK3lG,kBAAkB,GAAG,GAAG;MAC7B2lG,OAAA,CAAKzlG,qBAAqB,GAAG,IAAI;MACjCylG,OAAA,CAAKvlG,oBAAoB,GAAG,IAAIl5B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MAC/Cy+H,OAAA,CAAKxlG,kBAAkB,GAAG,IAAI;MAE9BwlG,OAAA,CAAK16E,GAAG,GAAG,GAAG;MAEdrgE,MAAM,CAACI,cAAc,CAAAwqB,sBAAA,CAAAmwH,OAAA,GAAQ,cAAc,EAAE;QAC5Ct+H,GAAG,EAAE,SAAAA,IAAA,EAAY;UAEhB,OAAS1E,KAAK,CAAE,GAAG,IAAK,IAAI,CAACsoD,GAAG,GAAG,CAAC,CAAE,IAAK,IAAI,CAACA,GAAG,GAAG,CAAC,CAAE,EAAE,CAAC,EAAE,CAAC,CAAE;QAElE,CAAC;QACDzkD,GAAG,EAAE,SAAAA,IAAW07B,YAAY,EAAG;UAE9B,IAAI,CAAC+oB,GAAG,GAAG,CAAE,CAAC,GAAG,GAAG,GAAG/oB,YAAY,KAAO,CAAC,GAAG,GAAG,GAAGA,YAAY,CAAE;QAEnE;MACD,CAAC,CAAE;MAEHyjG,OAAA,CAAKnlG,cAAc,GAAG,IAAI;MAC1BmlG,OAAA,CAAKrlG,cAAc,GAAG,GAAG;MACzBqlG,OAAA,CAAKplG,yBAAyB,GAAG,CAAE,GAAG,EAAE,GAAG,CAAE;MAC7ColG,OAAA,CAAKllG,uBAAuB,GAAG,IAAI;MAEnCklG,OAAA,CAAKpmG,UAAU,GAAG,IAAIqE,KAAK,CAAE,QAAQ,CAAE;MACvC+hG,OAAA,CAAKv1E,aAAa,GAAG,IAAI;MACzBu1E,OAAA,CAAKnmG,cAAc,GAAG,GAAG;MACzBmmG,OAAA,CAAKr1E,iBAAiB,GAAG,IAAI;MAE7Bq1E,OAAA,CAAKrjG,eAAe,GAAG,IAAI;MAE3BqjG,OAAA,CAAKpjG,SAAS,GAAG,CAAC;MAClBojG,OAAA,CAAKnjG,YAAY,GAAG,IAAI;MACxBmjG,OAAA,CAAKljG,mBAAmB,GAAG1e,QAAQ;MACnC4hH,OAAA,CAAKjjG,gBAAgB,GAAG,IAAIkB,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAE5C+hG,OAAA,CAAK/lG,iBAAiB,GAAG,GAAG;MAC5B+lG,OAAA,CAAK9jG,oBAAoB,GAAG,IAAI;MAChC8jG,OAAA,CAAK9lG,aAAa,GAAG,IAAI+D,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACzC+hG,OAAA,CAAK7jG,gBAAgB,GAAG,IAAI;MAE5B6jG,OAAA,CAAKC,MAAM,GAAG,GAAG;MACjBD,OAAA,CAAKE,UAAU,GAAG,CAAC;MACnBF,OAAA,CAAKG,YAAY,GAAG,CAAC;MACrBH,OAAA,CAAKI,aAAa,GAAG,CAAC;MAEtBJ,OAAA,CAAK3mG,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAmtG,OAAA;IAE9B;IAAC3xI,YAAA,CAAAslF,oBAAA;MAAApuF,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAY;QAEX,OAAO,IAAI,CAACu+H,MAAM;MAEnB,CAAC;MAAAp/H,GAAA,EAED,SAAAA,IAAWpb,KAAK,EAAG;QAElB,IAAK,IAAI,CAACw6I,MAAM,GAAG,CAAC,KAAKx6I,KAAK,GAAG,CAAC,EAAG;UAEpC,IAAI,CAACqoB,OAAO,EAAG;QAEhB;QAEA,IAAI,CAACmyH,MAAM,GAAGx6I,KAAK;MAEpB;IAAC;MAAAF,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAgB;QAEf,OAAO,IAAI,CAACw+H,UAAU;MAEvB,CAAC;MAAAr/H,GAAA,EAED,SAAAA,IAAepb,KAAK,EAAG;QAEtB,IAAK,IAAI,CAACy6I,UAAU,GAAG,CAAC,KAAKz6I,KAAK,GAAG,CAAC,EAAG;UAExC,IAAI,CAACqoB,OAAO,EAAG;QAEhB;QAEA,IAAI,CAACoyH,UAAU,GAAGz6I,KAAK;MAExB;IAAC;MAAAF,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAkB;QAEjB,OAAO,IAAI,CAACy+H,YAAY;MAEzB,CAAC;MAAAt/H,GAAA,EAED,SAAAA,IAAiBpb,KAAK,EAAG;QAExB,IAAK,IAAI,CAAC06I,YAAY,GAAG,CAAC,KAAK16I,KAAK,GAAG,CAAC,EAAG;UAE1C,IAAI,CAACqoB,OAAO,EAAG;QAEhB;QAEA,IAAI,CAACqyH,YAAY,GAAG16I,KAAK;MAE1B;IAAC;MAAAF,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAmB;QAElB,OAAO,IAAI,CAAC0+H,aAAa;MAE1B,CAAC;MAAAv/H,GAAA,EAED,SAAAA,IAAkBpb,KAAK,EAAG;QAEzB,IAAK,IAAI,CAAC26I,aAAa,GAAG,CAAC,KAAK36I,KAAK,GAAG,CAAC,EAAG;UAE3C,IAAI,CAACqoB,OAAO,EAAG;QAEhB;QAEA,IAAI,CAACsyH,aAAa,GAAG36I,KAAK;MAE3B;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAkzC,oBAAA,CAAAzuF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACk/B,OAAO,GAAG;UAEd,UAAU,EAAE,EAAE;UACd,UAAU,EAAE;QAEb,CAAC;QAED,IAAI,CAAC5U,SAAS,GAAGtqB,MAAM,CAACsqB,SAAS;QACjC,IAAI,CAACE,YAAY,GAAGxqB,MAAM,CAACwqB,YAAY;QACvC,IAAI,CAACD,kBAAkB,GAAGvqB,MAAM,CAACuqB,kBAAkB;QACnD,IAAI,CAACE,qBAAqB,GAAGzqB,MAAM,CAACyqB,qBAAqB;QACzD,IAAI,CAACC,kBAAkB,GAAG1qB,MAAM,CAAC0qB,kBAAkB;QACnD,IAAI,CAACC,oBAAoB,CAACv4B,IAAI,CAAE4N,MAAM,CAAC2qB,oBAAoB,CAAE;QAE7D,IAAI,CAAC6qB,GAAG,GAAGx1C,MAAM,CAACw1C,GAAG;QAErB,IAAI,CAAC5qB,WAAW,GAAG5qB,MAAM,CAAC4qB,WAAW;QACrC,IAAI,CAACG,cAAc,GAAG/qB,MAAM,CAAC+qB,cAAc;QAC3C,IAAI,CAACF,cAAc,GAAG7qB,MAAM,CAAC6qB,cAAc;QAC3C,IAAI,CAACC,yBAAyB,GAAAylG,kBAAA,CAAQvwH,MAAM,CAAC8qB,yBAAyB,CAAE;QACxE,IAAI,CAACE,uBAAuB,GAAGhrB,MAAM,CAACgrB,uBAAuB;QAE7D,IAAI,CAACnB,KAAK,GAAG7pB,MAAM,CAAC6pB,KAAK;QACzB,IAAI,CAACC,UAAU,CAAC13B,IAAI,CAAE4N,MAAM,CAAC8pB,UAAU,CAAE;QACzC,IAAI,CAAC6wB,aAAa,GAAG36C,MAAM,CAAC26C,aAAa;QACzC,IAAI,CAAC5wB,cAAc,GAAG/pB,MAAM,CAAC+pB,cAAc;QAC3C,IAAI,CAAC8wB,iBAAiB,GAAG76C,MAAM,CAAC66C,iBAAiB;QAEjD,IAAI,CAACjuB,YAAY,GAAG5sB,MAAM,CAAC4sB,YAAY;QACvC,IAAI,CAACC,eAAe,GAAG7sB,MAAM,CAAC6sB,eAAe;QAE7C,IAAI,CAACC,SAAS,GAAG9sB,MAAM,CAAC8sB,SAAS;QACjC,IAAI,CAACC,YAAY,GAAG/sB,MAAM,CAAC+sB,YAAY;QACvC,IAAI,CAACC,mBAAmB,GAAGhtB,MAAM,CAACgtB,mBAAmB;QACrD,IAAI,CAACC,gBAAgB,CAAC76B,IAAI,CAAE4N,MAAM,CAACitB,gBAAgB,CAAE;QAErD,IAAI,CAAC9C,iBAAiB,GAAGnqB,MAAM,CAACmqB,iBAAiB;QACjD,IAAI,CAACiC,oBAAoB,GAAGpsB,MAAM,CAACosB,oBAAoB;QACvD,IAAI,CAAChC,aAAa,CAACh4B,IAAI,CAAE4N,MAAM,CAACoqB,aAAa,CAAE;QAC/C,IAAI,CAACiC,gBAAgB,GAAGrsB,MAAM,CAACqsB,gBAAgB;QAE/C,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAw3C,oBAAA;EAAA,EA5LiCD,oBAAoB;EAAA,IAgMjDF,iBAAiB,0BAAA8sD,WAAA;IAAAzxH,SAAA,CAAA2kE,iBAAA,EAAA8sD,WAAA;IAAA,IAAAC,QAAA,GAAAxxH,YAAA,CAAAykE,iBAAA;IAEtB,SAAAA,kBAAa3gD,UAAU,EAAG;MAAA,IAAA2tG,OAAA;MAAA3yI,eAAA,OAAA2lF,iBAAA;MAEzBgtD,OAAA,GAAAD,QAAA,CAAAh5I,IAAA;MAEAi5I,OAAA,CAAKt7B,mBAAmB,GAAG,IAAI;MAE/Bs7B,OAAA,CAAKl5I,IAAI,GAAG,mBAAmB;MAE/Bk5I,OAAA,CAAKr1H,KAAK,GAAG,IAAI8yB,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;MACpCuiG,OAAA,CAAKxmG,QAAQ,GAAG,IAAIiE,KAAK,CAAE,QAAQ,CAAE;MACrCuiG,OAAA,CAAKrmG,SAAS,GAAG,EAAE;MAEnBqmG,OAAA,CAAKzlG,GAAG,GAAG,IAAI;MAEfylG,OAAA,CAAKtlG,QAAQ,GAAG,IAAI;MACpBslG,OAAA,CAAKrlG,iBAAiB,GAAG,GAAG;MAE5BqlG,OAAA,CAAKplG,KAAK,GAAG,IAAI;MACjBolG,OAAA,CAAKnlG,cAAc,GAAG,GAAG;MAEzBmlG,OAAA,CAAK1mG,QAAQ,GAAG,IAAImE,KAAK,CAAE,QAAQ,CAAE;MACrCuiG,OAAA,CAAKzmG,iBAAiB,GAAG,GAAG;MAC5BymG,OAAA,CAAKxkG,WAAW,GAAG,IAAI;MAEvBwkG,OAAA,CAAKllG,OAAO,GAAG,IAAI;MACnBklG,OAAA,CAAKjlG,SAAS,GAAG,CAAC;MAElBilG,OAAA,CAAKhlG,SAAS,GAAG,IAAI;MACrBglG,OAAA,CAAK/kG,aAAa,GAAGxiC,qBAAqB;MAC1CunI,OAAA,CAAK9kG,WAAW,GAAG,IAAIn6B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MAEtCi/H,OAAA,CAAK7kG,eAAe,GAAG,IAAI;MAC3B6kG,OAAA,CAAK5kG,iBAAiB,GAAG,CAAC;MAC1B4kG,OAAA,CAAK3kG,gBAAgB,GAAG,CAAC;MAEzB2kG,OAAA,CAAKvkG,WAAW,GAAG,IAAI;MAEvBukG,OAAA,CAAKvlG,QAAQ,GAAG,IAAI;MAEpBulG,OAAA,CAAKpkG,MAAM,GAAG,IAAI;MAClBokG,OAAA,CAAKnkG,OAAO,GAAGtpC,iBAAiB;MAChCytI,OAAA,CAAKjkG,YAAY,GAAG,CAAC;MACrBikG,OAAA,CAAKhkG,eAAe,GAAG,IAAI;MAE3BgkG,OAAA,CAAKnjG,SAAS,GAAG,KAAK;MACtBmjG,OAAA,CAAKljG,kBAAkB,GAAG,CAAC;MAC3BkjG,OAAA,CAAKjjG,gBAAgB,GAAG,OAAO;MAC/BijG,OAAA,CAAKhjG,iBAAiB,GAAG,OAAO;MAEhCgjG,OAAA,CAAK/iG,WAAW,GAAG,KAAK;MAExB+iG,OAAA,CAAK9iG,GAAG,GAAG,IAAI;MAEf8iG,OAAA,CAAKnnG,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAA2tG,OAAA;IAE9B;IAACnyI,YAAA,CAAAmlF,iBAAA;MAAAjuF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA+yC,iBAAA,CAAAtuF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC3E,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAC/B,IAAI,CAAC6uB,QAAQ,CAAC93B,IAAI,CAAE4N,MAAM,CAACkqB,QAAQ,CAAE;QACrC,IAAI,CAACG,SAAS,GAAGrqB,MAAM,CAACqqB,SAAS;QAEjC,IAAI,CAACY,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QAErB,IAAI,CAACG,QAAQ,GAAGprB,MAAM,CAACorB,QAAQ;QAC/B,IAAI,CAACC,iBAAiB,GAAGrrB,MAAM,CAACqrB,iBAAiB;QAEjD,IAAI,CAACC,KAAK,GAAGtrB,MAAM,CAACsrB,KAAK;QACzB,IAAI,CAACC,cAAc,GAAGvrB,MAAM,CAACurB,cAAc;QAE3C,IAAI,CAACvB,QAAQ,CAAC53B,IAAI,CAAE4N,MAAM,CAACgqB,QAAQ,CAAE;QACrC,IAAI,CAACkC,WAAW,GAAGlsB,MAAM,CAACksB,WAAW;QACrC,IAAI,CAACjC,iBAAiB,GAAGjqB,MAAM,CAACiqB,iBAAiB;QAEjD,IAAI,CAACuB,OAAO,GAAGxrB,MAAM,CAACwrB,OAAO;QAC7B,IAAI,CAACC,SAAS,GAAGzrB,MAAM,CAACyrB,SAAS;QAEjC,IAAI,CAACC,SAAS,GAAG1rB,MAAM,CAAC0rB,SAAS;QACjC,IAAI,CAACC,aAAa,GAAG3rB,MAAM,CAAC2rB,aAAa;QACzC,IAAI,CAACC,WAAW,CAACx5B,IAAI,CAAE4N,MAAM,CAAC4rB,WAAW,CAAE;QAE3C,IAAI,CAACC,eAAe,GAAG7rB,MAAM,CAAC6rB,eAAe;QAC7C,IAAI,CAACC,iBAAiB,GAAG9rB,MAAM,CAAC8rB,iBAAiB;QACjD,IAAI,CAACC,gBAAgB,GAAG/rB,MAAM,CAAC+rB,gBAAgB;QAE/C,IAAI,CAACI,WAAW,GAAGnsB,MAAM,CAACmsB,WAAW;QAErC,IAAI,CAAChB,QAAQ,GAAGnrB,MAAM,CAACmrB,QAAQ;QAE/B,IAAI,CAACmB,MAAM,GAAGtsB,MAAM,CAACssB,MAAM;QAC3B,IAAI,CAACC,OAAO,GAAGvsB,MAAM,CAACusB,OAAO;QAC7B,IAAI,CAACE,YAAY,GAAGzsB,MAAM,CAACysB,YAAY;QACvC,IAAI,CAACC,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;QAE7C,IAAI,CAACa,SAAS,GAAGvtB,MAAM,CAACutB,SAAS;QACjC,IAAI,CAACC,kBAAkB,GAAGxtB,MAAM,CAACwtB,kBAAkB;QACnD,IAAI,CAACC,gBAAgB,GAAGztB,MAAM,CAACytB,gBAAgB;QAC/C,IAAI,CAACC,iBAAiB,GAAG1tB,MAAM,CAAC0tB,iBAAiB;QAEjD,IAAI,CAACC,WAAW,GAAG3tB,MAAM,CAAC2tB,WAAW;QAErC,IAAI,CAACC,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QAErB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA81C,iBAAA;EAAA,EA9G8Bj9C,QAAQ;EAAA,IAkHlCk9C,gBAAgB,0BAAAgtD,WAAA;IAAA5xH,SAAA,CAAA4kE,gBAAA,EAAAgtD,WAAA;IAAA,IAAAC,QAAA,GAAA3xH,YAAA,CAAA0kE,gBAAA;IAErB,SAAAA,iBAAa5gD,UAAU,EAAG;MAAA,IAAA8tG,OAAA;MAAA9yI,eAAA,OAAA4lF,gBAAA;MAEzBktD,OAAA,GAAAD,QAAA,CAAAn5I,IAAA;MAEAo5I,OAAA,CAAK37B,kBAAkB,GAAG,IAAI;MAE9B27B,OAAA,CAAK3xF,OAAO,GAAG;QAAE,MAAM,EAAE;MAAG,CAAC;MAE7B2xF,OAAA,CAAKr5I,IAAI,GAAG,kBAAkB;MAE9Bq5I,OAAA,CAAKx1H,KAAK,GAAG,IAAI8yB,KAAK,CAAE,QAAQ,CAAE;MAElC0iG,OAAA,CAAK5lG,GAAG,GAAG,IAAI;MACf4lG,OAAA,CAAKlkG,WAAW,GAAG,IAAI;MAEvBkkG,OAAA,CAAKzlG,QAAQ,GAAG,IAAI;MACpBylG,OAAA,CAAKxlG,iBAAiB,GAAG,GAAG;MAE5BwlG,OAAA,CAAKvlG,KAAK,GAAG,IAAI;MACjBulG,OAAA,CAAKtlG,cAAc,GAAG,GAAG;MAEzBslG,OAAA,CAAK7mG,QAAQ,GAAG,IAAImE,KAAK,CAAE,QAAQ,CAAE;MACrC0iG,OAAA,CAAK5mG,iBAAiB,GAAG,GAAG;MAC5B4mG,OAAA,CAAK3kG,WAAW,GAAG,IAAI;MAEvB2kG,OAAA,CAAKrlG,OAAO,GAAG,IAAI;MACnBqlG,OAAA,CAAKplG,SAAS,GAAG,CAAC;MAElBolG,OAAA,CAAKnlG,SAAS,GAAG,IAAI;MACrBmlG,OAAA,CAAKllG,aAAa,GAAGxiC,qBAAqB;MAC1C0nI,OAAA,CAAKjlG,WAAW,GAAG,IAAIn6B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MAEtCo/H,OAAA,CAAKhlG,eAAe,GAAG,IAAI;MAC3BglG,OAAA,CAAK/kG,iBAAiB,GAAG,CAAC;MAC1B+kG,OAAA,CAAK9kG,gBAAgB,GAAG,CAAC;MAEzB8kG,OAAA,CAAK1lG,QAAQ,GAAG,IAAI;MAEpB0lG,OAAA,CAAKtjG,SAAS,GAAG,KAAK;MACtBsjG,OAAA,CAAKrjG,kBAAkB,GAAG,CAAC;MAC3BqjG,OAAA,CAAKpjG,gBAAgB,GAAG,OAAO;MAC/BojG,OAAA,CAAKnjG,iBAAiB,GAAG,OAAO;MAEhCmjG,OAAA,CAAKjjG,GAAG,GAAG,IAAI;MAEfijG,OAAA,CAAKtnG,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAA8tG,OAAA;IAE9B;IAACtyI,YAAA,CAAAolF,gBAAA;MAAAluF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAgzC,gBAAA,CAAAvuF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC3E,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAE/B,IAAI,CAAC4vB,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QACrB,IAAI,CAAC0B,WAAW,GAAG3sB,MAAM,CAAC2sB,WAAW;QAErC,IAAI,CAACvB,QAAQ,GAAGprB,MAAM,CAACorB,QAAQ;QAC/B,IAAI,CAACC,iBAAiB,GAAGrrB,MAAM,CAACqrB,iBAAiB;QAEjD,IAAI,CAACC,KAAK,GAAGtrB,MAAM,CAACsrB,KAAK;QACzB,IAAI,CAACC,cAAc,GAAGvrB,MAAM,CAACurB,cAAc;QAE3C,IAAI,CAACvB,QAAQ,CAAC53B,IAAI,CAAE4N,MAAM,CAACgqB,QAAQ,CAAE;QACrC,IAAI,CAACkC,WAAW,GAAGlsB,MAAM,CAACksB,WAAW;QACrC,IAAI,CAACjC,iBAAiB,GAAGjqB,MAAM,CAACiqB,iBAAiB;QAEjD,IAAI,CAACuB,OAAO,GAAGxrB,MAAM,CAACwrB,OAAO;QAC7B,IAAI,CAACC,SAAS,GAAGzrB,MAAM,CAACyrB,SAAS;QAEjC,IAAI,CAACC,SAAS,GAAG1rB,MAAM,CAAC0rB,SAAS;QACjC,IAAI,CAACC,aAAa,GAAG3rB,MAAM,CAAC2rB,aAAa;QACzC,IAAI,CAACC,WAAW,CAACx5B,IAAI,CAAE4N,MAAM,CAAC4rB,WAAW,CAAE;QAE3C,IAAI,CAACC,eAAe,GAAG7rB,MAAM,CAAC6rB,eAAe;QAC7C,IAAI,CAACC,iBAAiB,GAAG9rB,MAAM,CAAC8rB,iBAAiB;QACjD,IAAI,CAACC,gBAAgB,GAAG/rB,MAAM,CAAC+rB,gBAAgB;QAE/C,IAAI,CAACZ,QAAQ,GAAGnrB,MAAM,CAACmrB,QAAQ;QAE/B,IAAI,CAACoC,SAAS,GAAGvtB,MAAM,CAACutB,SAAS;QACjC,IAAI,CAACC,kBAAkB,GAAGxtB,MAAM,CAACwtB,kBAAkB;QACnD,IAAI,CAACC,gBAAgB,GAAGztB,MAAM,CAACytB,gBAAgB;QAC/C,IAAI,CAACC,iBAAiB,GAAG1tB,MAAM,CAAC0tB,iBAAiB;QAEjD,IAAI,CAACE,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QAErB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA+1C,gBAAA;EAAA,EA5F6Bl9C,QAAQ;EAAA,IAgGjC+8C,kBAAkB,0BAAAstD,WAAA;IAAA/xH,SAAA,CAAAykE,kBAAA,EAAAstD,WAAA;IAAA,IAAAC,QAAA,GAAA9xH,YAAA,CAAAukE,kBAAA;IAEvB,SAAAA,mBAAazgD,UAAU,EAAG;MAAA,IAAAiuG,OAAA;MAAAjzI,eAAA,OAAAylF,kBAAA;MAEzBwtD,OAAA,GAAAD,QAAA,CAAAt5I,IAAA;MAEAu5I,OAAA,CAAKp7B,oBAAoB,GAAG,IAAI;MAEhCo7B,OAAA,CAAKx5I,IAAI,GAAG,oBAAoB;MAEhCw5I,OAAA,CAAKxlG,OAAO,GAAG,IAAI;MACnBwlG,OAAA,CAAKvlG,SAAS,GAAG,CAAC;MAElBulG,OAAA,CAAKtlG,SAAS,GAAG,IAAI;MACrBslG,OAAA,CAAKrlG,aAAa,GAAGxiC,qBAAqB;MAC1C6nI,OAAA,CAAKplG,WAAW,GAAG,IAAIn6B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MAEtCu/H,OAAA,CAAKnlG,eAAe,GAAG,IAAI;MAC3BmlG,OAAA,CAAKllG,iBAAiB,GAAG,CAAC;MAC1BklG,OAAA,CAAKjlG,gBAAgB,GAAG,CAAC;MAEzBilG,OAAA,CAAKzjG,SAAS,GAAG,KAAK;MACtByjG,OAAA,CAAKxjG,kBAAkB,GAAG,CAAC;MAE3BwjG,OAAA,CAAKrjG,WAAW,GAAG,KAAK;MAExBqjG,OAAA,CAAKznG,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAiuG,OAAA;IAE9B;IAACzyI,YAAA,CAAAilF,kBAAA;MAAA/tF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA6yC,kBAAA,CAAApuF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACwrB,OAAO,GAAGxrB,MAAM,CAACwrB,OAAO;QAC7B,IAAI,CAACC,SAAS,GAAGzrB,MAAM,CAACyrB,SAAS;QAEjC,IAAI,CAACC,SAAS,GAAG1rB,MAAM,CAAC0rB,SAAS;QACjC,IAAI,CAACC,aAAa,GAAG3rB,MAAM,CAAC2rB,aAAa;QACzC,IAAI,CAACC,WAAW,CAACx5B,IAAI,CAAE4N,MAAM,CAAC4rB,WAAW,CAAE;QAE3C,IAAI,CAACC,eAAe,GAAG7rB,MAAM,CAAC6rB,eAAe;QAC7C,IAAI,CAACC,iBAAiB,GAAG9rB,MAAM,CAAC8rB,iBAAiB;QACjD,IAAI,CAACC,gBAAgB,GAAG/rB,MAAM,CAAC+rB,gBAAgB;QAE/C,IAAI,CAACwB,SAAS,GAAGvtB,MAAM,CAACutB,SAAS;QACjC,IAAI,CAACC,kBAAkB,GAAGxtB,MAAM,CAACwtB,kBAAkB;QAEnD,IAAI,CAACG,WAAW,GAAG3tB,MAAM,CAAC2tB,WAAW;QAErC,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA61C,kBAAA;EAAA,EApD+B/8C,QAAQ;EAAA,IAwDnCg9C,mBAAmB,0BAAAwtD,WAAA;IAAAlyH,SAAA,CAAA0kE,mBAAA,EAAAwtD,WAAA;IAAA,IAAAC,QAAA,GAAAjyH,YAAA,CAAAwkE,mBAAA;IAExB,SAAAA,oBAAa1gD,UAAU,EAAG;MAAA,IAAAouG,OAAA;MAAApzI,eAAA,OAAA0lF,mBAAA;MAEzB0tD,OAAA,GAAAD,QAAA,CAAAz5I,IAAA;MAEA05I,OAAA,CAAKl8B,qBAAqB,GAAG,IAAI;MAEjCk8B,OAAA,CAAK35I,IAAI,GAAG,qBAAqB;MAEjC25I,OAAA,CAAK91H,KAAK,GAAG,IAAI8yB,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;;MAEpCgjG,OAAA,CAAKlmG,GAAG,GAAG,IAAI;MAEfkmG,OAAA,CAAK/lG,QAAQ,GAAG,IAAI;MACpB+lG,OAAA,CAAK9lG,iBAAiB,GAAG,GAAG;MAE5B8lG,OAAA,CAAK7lG,KAAK,GAAG,IAAI;MACjB6lG,OAAA,CAAK5lG,cAAc,GAAG,GAAG;MAEzB4lG,OAAA,CAAKnnG,QAAQ,GAAG,IAAImE,KAAK,CAAE,QAAQ,CAAE;MACrCgjG,OAAA,CAAKlnG,iBAAiB,GAAG,GAAG;MAC5BknG,OAAA,CAAKjlG,WAAW,GAAG,IAAI;MAEvBilG,OAAA,CAAK3lG,OAAO,GAAG,IAAI;MACnB2lG,OAAA,CAAK1lG,SAAS,GAAG,CAAC;MAElB0lG,OAAA,CAAKzlG,SAAS,GAAG,IAAI;MACrBylG,OAAA,CAAKxlG,aAAa,GAAGxiC,qBAAqB;MAC1CgoI,OAAA,CAAKvlG,WAAW,GAAG,IAAIn6B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MAEtC0/H,OAAA,CAAKtlG,eAAe,GAAG,IAAI;MAC3BslG,OAAA,CAAKrlG,iBAAiB,GAAG,CAAC;MAC1BqlG,OAAA,CAAKplG,gBAAgB,GAAG,CAAC;MAEzBolG,OAAA,CAAKhlG,WAAW,GAAG,IAAI;MAEvBglG,OAAA,CAAKhmG,QAAQ,GAAG,IAAI;MAEpBgmG,OAAA,CAAK7kG,MAAM,GAAG,IAAI;MAClB6kG,OAAA,CAAK5kG,OAAO,GAAGtpC,iBAAiB;MAChCkuI,OAAA,CAAK1kG,YAAY,GAAG,CAAC;MACrB0kG,OAAA,CAAKzkG,eAAe,GAAG,IAAI;MAE3BykG,OAAA,CAAK5jG,SAAS,GAAG,KAAK;MACtB4jG,OAAA,CAAK3jG,kBAAkB,GAAG,CAAC;MAC3B2jG,OAAA,CAAK1jG,gBAAgB,GAAG,OAAO;MAC/B0jG,OAAA,CAAKzjG,iBAAiB,GAAG,OAAO;MAEhCyjG,OAAA,CAAKxjG,WAAW,GAAG,KAAK;MAExBwjG,OAAA,CAAKvjG,GAAG,GAAG,IAAI;MAEfujG,OAAA,CAAK5nG,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAouG,OAAA;IAE9B;IAAC5yI,YAAA,CAAAklF,mBAAA;MAAAhuF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA8yC,mBAAA,CAAAruF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC3E,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAE/B,IAAI,CAAC4vB,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QAErB,IAAI,CAACG,QAAQ,GAAGprB,MAAM,CAACorB,QAAQ;QAC/B,IAAI,CAACC,iBAAiB,GAAGrrB,MAAM,CAACqrB,iBAAiB;QAEjD,IAAI,CAACC,KAAK,GAAGtrB,MAAM,CAACsrB,KAAK;QACzB,IAAI,CAACC,cAAc,GAAGvrB,MAAM,CAACurB,cAAc;QAE3C,IAAI,CAACvB,QAAQ,CAAC53B,IAAI,CAAE4N,MAAM,CAACgqB,QAAQ,CAAE;QACrC,IAAI,CAACkC,WAAW,GAAGlsB,MAAM,CAACksB,WAAW;QACrC,IAAI,CAACjC,iBAAiB,GAAGjqB,MAAM,CAACiqB,iBAAiB;QAEjD,IAAI,CAACuB,OAAO,GAAGxrB,MAAM,CAACwrB,OAAO;QAC7B,IAAI,CAACC,SAAS,GAAGzrB,MAAM,CAACyrB,SAAS;QAEjC,IAAI,CAACC,SAAS,GAAG1rB,MAAM,CAAC0rB,SAAS;QACjC,IAAI,CAACC,aAAa,GAAG3rB,MAAM,CAAC2rB,aAAa;QACzC,IAAI,CAACC,WAAW,CAACx5B,IAAI,CAAE4N,MAAM,CAAC4rB,WAAW,CAAE;QAE3C,IAAI,CAACC,eAAe,GAAG7rB,MAAM,CAAC6rB,eAAe;QAC7C,IAAI,CAACC,iBAAiB,GAAG9rB,MAAM,CAAC8rB,iBAAiB;QACjD,IAAI,CAACC,gBAAgB,GAAG/rB,MAAM,CAAC+rB,gBAAgB;QAE/C,IAAI,CAACI,WAAW,GAAGnsB,MAAM,CAACmsB,WAAW;QAErC,IAAI,CAAChB,QAAQ,GAAGnrB,MAAM,CAACmrB,QAAQ;QAE/B,IAAI,CAACmB,MAAM,GAAGtsB,MAAM,CAACssB,MAAM;QAC3B,IAAI,CAACC,OAAO,GAAGvsB,MAAM,CAACusB,OAAO;QAC7B,IAAI,CAACE,YAAY,GAAGzsB,MAAM,CAACysB,YAAY;QACvC,IAAI,CAACC,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;QAE7C,IAAI,CAACa,SAAS,GAAGvtB,MAAM,CAACutB,SAAS;QACjC,IAAI,CAACC,kBAAkB,GAAGxtB,MAAM,CAACwtB,kBAAkB;QACnD,IAAI,CAACC,gBAAgB,GAAGztB,MAAM,CAACytB,gBAAgB;QAC/C,IAAI,CAACC,iBAAiB,GAAG1tB,MAAM,CAAC0tB,iBAAiB;QAEjD,IAAI,CAACC,WAAW,GAAG3tB,MAAM,CAAC2tB,WAAW;QAErC,IAAI,CAACC,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QAErB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA61C,mBAAA;EAAA,EA1GgCh9C,QAAQ;EAAA,IA8GpCq9C,kBAAkB,0BAAAstD,WAAA;IAAAryH,SAAA,CAAA+kE,kBAAA,EAAAstD,WAAA;IAAA,IAAAC,QAAA,GAAApyH,YAAA,CAAA6kE,kBAAA;IAEvB,SAAAA,mBAAa/gD,UAAU,EAAG;MAAA,IAAAuuG,OAAA;MAAAvzI,eAAA,OAAA+lF,kBAAA;MAEzBwtD,OAAA,GAAAD,QAAA,CAAA55I,IAAA;MAEA65I,OAAA,CAAK77B,oBAAoB,GAAG,IAAI;MAEhC67B,OAAA,CAAKpyF,OAAO,GAAG;QAAE,QAAQ,EAAE;MAAG,CAAC;MAE/BoyF,OAAA,CAAK95I,IAAI,GAAG,oBAAoB;MAEhC85I,OAAA,CAAKj2H,KAAK,GAAG,IAAI8yB,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;;MAEpCmjG,OAAA,CAAKpmG,MAAM,GAAG,IAAI;MAElBomG,OAAA,CAAKrmG,GAAG,GAAG,IAAI;MAEfqmG,OAAA,CAAK9lG,OAAO,GAAG,IAAI;MACnB8lG,OAAA,CAAK7lG,SAAS,GAAG,CAAC;MAElB6lG,OAAA,CAAK5lG,SAAS,GAAG,IAAI;MACrB4lG,OAAA,CAAK3lG,aAAa,GAAGxiC,qBAAqB;MAC1CmoI,OAAA,CAAK1lG,WAAW,GAAG,IAAIn6B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MAEtC6/H,OAAA,CAAKzlG,eAAe,GAAG,IAAI;MAC3BylG,OAAA,CAAKxlG,iBAAiB,GAAG,CAAC;MAC1BwlG,OAAA,CAAKvlG,gBAAgB,GAAG,CAAC;MAEzBulG,OAAA,CAAKnmG,QAAQ,GAAG,IAAI;MAEpBmmG,OAAA,CAAK3jG,WAAW,GAAG,KAAK;MAExB2jG,OAAA,CAAK1jG,GAAG,GAAG,IAAI;MAEf0jG,OAAA,CAAK/nG,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAAuuG,OAAA;IAE9B;IAAC/yI,YAAA,CAAAulF,kBAAA;MAAAruF,GAAA;MAAAE,KAAA,EAGD,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAmzC,kBAAA,CAAA1uF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACk/B,OAAO,GAAG;UAAE,QAAQ,EAAE;QAAG,CAAC;QAE/B,IAAI,CAAC7jC,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAE/B,IAAI,CAAC6vB,MAAM,GAAGlrB,MAAM,CAACkrB,MAAM;QAE3B,IAAI,CAACD,GAAG,GAAGjrB,MAAM,CAACirB,GAAG;QAErB,IAAI,CAACO,OAAO,GAAGxrB,MAAM,CAACwrB,OAAO;QAC7B,IAAI,CAACC,SAAS,GAAGzrB,MAAM,CAACyrB,SAAS;QAEjC,IAAI,CAACC,SAAS,GAAG1rB,MAAM,CAAC0rB,SAAS;QACjC,IAAI,CAACC,aAAa,GAAG3rB,MAAM,CAAC2rB,aAAa;QACzC,IAAI,CAACC,WAAW,CAACx5B,IAAI,CAAE4N,MAAM,CAAC4rB,WAAW,CAAE;QAE3C,IAAI,CAACC,eAAe,GAAG7rB,MAAM,CAAC6rB,eAAe;QAC7C,IAAI,CAACC,iBAAiB,GAAG9rB,MAAM,CAAC8rB,iBAAiB;QACjD,IAAI,CAACC,gBAAgB,GAAG/rB,MAAM,CAAC+rB,gBAAgB;QAE/C,IAAI,CAACZ,QAAQ,GAAGnrB,MAAM,CAACmrB,QAAQ;QAE/B,IAAI,CAACwC,WAAW,GAAG3tB,MAAM,CAAC2tB,WAAW;QAErC,IAAI,CAACC,GAAG,GAAG5tB,MAAM,CAAC4tB,GAAG;QAErB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAk2C,kBAAA;EAAA,EAvE+Br9C,QAAQ;EAAA,IA2EnCu9C,kBAAkB,0BAAAutD,kBAAA;IAAAxyH,SAAA,CAAAilE,kBAAA,EAAAutD,kBAAA;IAAA,IAAAC,SAAA,GAAAvyH,YAAA,CAAA+kE,kBAAA;IAEvB,SAAAA,mBAAajhD,UAAU,EAAG;MAAA,IAAA0uG,OAAA;MAAA1zI,eAAA,OAAAimF,kBAAA;MAEzBytD,OAAA,GAAAD,SAAA,CAAA/5I,IAAA;MAEAg6I,OAAA,CAAK17B,oBAAoB,GAAG,IAAI;MAEhC07B,OAAA,CAAKj6I,IAAI,GAAG,oBAAoB;MAEhCi6I,OAAA,CAAK33H,KAAK,GAAG,CAAC;MACd23H,OAAA,CAAKrkG,QAAQ,GAAG,CAAC;MACjBqkG,OAAA,CAAKpkG,OAAO,GAAG,CAAC;MAEhBokG,OAAA,CAAKloG,SAAS,CAAExG,UAAU,CAAE;MAAC,OAAA0uG,OAAA;IAE9B;IAAClzI,YAAA,CAAAylF,kBAAA;MAAAvuF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAqzC,kBAAA,CAAA5uF,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAClG,KAAK,GAAGkG,MAAM,CAAClG,KAAK;QACzB,IAAI,CAACszB,QAAQ,GAAGptB,MAAM,CAACotB,QAAQ;QAC/B,IAAI,CAACC,OAAO,GAAGrtB,MAAM,CAACqtB,OAAO;QAE7B,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA22C,kBAAA;EAAA,EA5B+BD,iBAAiB,GAgClD;EACA,SAAS2tD,UAAUA,CAAExlI,KAAK,EAAEyS,IAAI,EAAEi5D,EAAE,EAAG;IAEtC,IAAK+5D,YAAY,CAAEzlI,KAAK,CAAE,EAAG;MAE5B;MACA;MACA,OAAO,IAAIA,KAAK,CAACrQ,WAAW,CAAEqQ,KAAK,CAACq9C,QAAQ,CAAE5qC,IAAI,EAAEi5D,EAAE,KAAK39E,SAAS,GAAG29E,EAAE,GAAG1rE,KAAK,CAAC3Q,MAAM,CAAE,CAAE;IAE7F;IAEA,OAAO2Q,KAAK,CAACpP,KAAK,CAAE6hB,IAAI,EAAEi5D,EAAE,CAAE;EAE/B;;EAEA;EACA,SAASg6D,YAAYA,CAAE1lI,KAAK,EAAE1U,IAAI,EAAEq6I,UAAU,EAAG;IAEhD,IAAK,CAAE3lI,KAAK;IAAI;IACf,CAAE2lI,UAAU,IAAI3lI,KAAK,CAACrQ,WAAW,KAAKrE,IAAI,EAAG,OAAO0U,KAAK;IAE1D,IAAK,OAAO1U,IAAI,CAAC4xD,iBAAiB,KAAK,QAAQ,EAAG;MAEjD,OAAO,IAAI5xD,IAAI,CAAE0U,KAAK,CAAE,CAAC,CAAC;IAE3B;;IAEA,OAAOqS,KAAK,CAACnpB,SAAS,CAAC0H,KAAK,CAACrF,IAAI,CAAEyU,KAAK,CAAE,CAAC,CAAC;EAE7C;;EAEA,SAASylI,YAAYA,CAAEn1I,MAAM,EAAG;IAE/B,OAAOs0C,WAAW,CAACghG,MAAM,CAAEt1I,MAAM,CAAE,IAClC,EAAIA,MAAM,YAAYu1I,QAAQ,CAAE;EAElC;;EAEA;EACA,SAASC,gBAAgBA,CAAEC,KAAK,EAAG;IAElC,SAASC,WAAWA,CAAE12I,CAAC,EAAE42B,CAAC,EAAG;MAE5B,OAAO6/G,KAAK,CAAEz2I,CAAC,CAAE,GAAGy2I,KAAK,CAAE7/G,CAAC,CAAE;IAE/B;IAEA,IAAM9kB,CAAC,GAAG2kI,KAAK,CAAC12I,MAAM;IACtB,IAAM1C,MAAM,GAAG,IAAI0lB,KAAK,CAAEjR,CAAC,CAAE;IAC7B,KAAM,IAAI9R,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG3C,MAAM,CAAE2C,CAAC,CAAE,GAAGA,CAAC;IAEhD3C,MAAM,CAAC42E,IAAI,CAAEyiE,WAAW,CAAE;IAE1B,OAAOr5I,MAAM;EAEd;;EAEA;EACA,SAASs5I,WAAWA,CAAEl6I,MAAM,EAAEwhD,MAAM,EAAErpC,KAAK,EAAG;IAE7C,IAAMgiI,OAAO,GAAGn6I,MAAM,CAACsD,MAAM;IAC7B,IAAM1C,MAAM,GAAG,IAAIZ,MAAM,CAAC4D,WAAW,CAAEu2I,OAAO,CAAE;IAEhD,KAAM,IAAI52I,CAAC,GAAG,CAAC,EAAEquB,SAAS,GAAG,CAAC,EAAEA,SAAS,KAAKuoH,OAAO,EAAE,EAAG52I,CAAC,EAAG;MAE7D,IAAM62I,SAAS,GAAGjiI,KAAK,CAAE5U,CAAC,CAAE,GAAGi+C,MAAM;MAErC,KAAM,IAAIrnB,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKqnB,MAAM,EAAE,EAAGrnB,CAAC,EAAG;QAErCv5B,MAAM,CAAEgxB,SAAS,EAAG,CAAE,GAAG5xB,MAAM,CAAEo6I,SAAS,GAAGjgH,CAAC,CAAE;MAEjD;IAED;IAEA,OAAOv5B,MAAM;EAEd;;EAEA;EACA,SAASy5I,WAAWA,CAAEC,QAAQ,EAAEN,KAAK,EAAEh6I,MAAM,EAAEu6I,iBAAiB,EAAG;IAElE,IAAIh3I,CAAC,GAAG,CAAC;MAAE/F,GAAG,GAAG88I,QAAQ,CAAE,CAAC,CAAE;IAE9B,OAAQ98I,GAAG,KAAKwE,SAAS,IAAIxE,GAAG,CAAE+8I,iBAAiB,CAAE,KAAKv4I,SAAS,EAAG;MAErExE,GAAG,GAAG88I,QAAQ,CAAE/2I,CAAC,EAAG,CAAE;IAEvB;IAEA,IAAK/F,GAAG,KAAKwE,SAAS,EAAG,OAAO,CAAC;;IAEjC,IAAItE,KAAK,GAAGF,GAAG,CAAE+8I,iBAAiB,CAAE;IACpC,IAAK78I,KAAK,KAAKsE,SAAS,EAAG,OAAO,CAAC;;IAEnC,IAAKskB,KAAK,CAACC,OAAO,CAAE7oB,KAAK,CAAE,EAAG;MAE7B,GAAG;QAEFA,KAAK,GAAGF,GAAG,CAAE+8I,iBAAiB,CAAE;QAEhC,IAAK78I,KAAK,KAAKsE,SAAS,EAAG;UAE1Bg4I,KAAK,CAACj3I,IAAI,CAAEvF,GAAG,CAACkyD,IAAI,CAAE;UACtB1vD,MAAM,CAAC+C,IAAI,CAACk/F,KAAK,CAAEjiG,MAAM,EAAEtC,KAAK,CAAE,CAAC,CAAC;QAErC;;QAEAF,GAAG,GAAG88I,QAAQ,CAAE/2I,CAAC,EAAG,CAAE;MAEvB,CAAC,QAAS/F,GAAG,KAAKwE,SAAS;IAE5B,CAAC,MAAM,IAAKtE,KAAK,CAACuf,OAAO,KAAKjb,SAAS,EAAG;MAEzC;;MAEA,GAAG;QAEFtE,KAAK,GAAGF,GAAG,CAAE+8I,iBAAiB,CAAE;QAEhC,IAAK78I,KAAK,KAAKsE,SAAS,EAAG;UAE1Bg4I,KAAK,CAACj3I,IAAI,CAAEvF,GAAG,CAACkyD,IAAI,CAAE;UACtBhyD,KAAK,CAACuf,OAAO,CAAEjd,MAAM,EAAEA,MAAM,CAACsD,MAAM,CAAE;QAEvC;QAEA9F,GAAG,GAAG88I,QAAQ,CAAE/2I,CAAC,EAAG,CAAE;MAEvB,CAAC,QAAS/F,GAAG,KAAKwE,SAAS;IAE5B,CAAC,MAAM;MAEN;;MAEA,GAAG;QAEFtE,KAAK,GAAGF,GAAG,CAAE+8I,iBAAiB,CAAE;QAEhC,IAAK78I,KAAK,KAAKsE,SAAS,EAAG;UAE1Bg4I,KAAK,CAACj3I,IAAI,CAAEvF,GAAG,CAACkyD,IAAI,CAAE;UACtB1vD,MAAM,CAAC+C,IAAI,CAAErF,KAAK,CAAE;QAErB;QAEAF,GAAG,GAAG88I,QAAQ,CAAE/2I,CAAC,EAAG,CAAE;MAEvB,CAAC,QAAS/F,GAAG,KAAKwE,SAAS;IAE5B;EAED;EAEA,SAASw4I,OAAOA,CAAEC,UAAU,EAAE52I,IAAI,EAAE62I,UAAU,EAAEC,QAAQ,EAAEC,GAAG,GAAG,EAAE,EAAG;IAEpE,IAAMC,IAAI,GAAGJ,UAAU,CAACvgI,KAAK,EAAE;IAE/B2gI,IAAI,CAACh3I,IAAI,GAAGA,IAAI;IAEhB,IAAMi3I,MAAM,GAAG,EAAE;IAEjB,KAAM,IAAIv3I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs3I,IAAI,CAACC,MAAM,CAACx3I,MAAM,EAAE,EAAGC,CAAC,EAAG;MAE/C,IAAMw3I,KAAK,GAAGF,IAAI,CAACC,MAAM,CAAEv3I,CAAC,CAAE;MAC9B,IAAMy3I,SAAS,GAAGD,KAAK,CAACE,YAAY,EAAE;MAEtC,IAAMjB,KAAK,GAAG,EAAE;MAChB,IAAMh6I,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIm6B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4gH,KAAK,CAACf,KAAK,CAAC12I,MAAM,EAAE,EAAG62B,CAAC,EAAG;QAE/C,IAAMw1B,KAAK,GAAGorF,KAAK,CAACf,KAAK,CAAE7/G,CAAC,CAAE,GAAGygH,GAAG;QAEpC,IAAKjrF,KAAK,GAAG+qF,UAAU,IAAI/qF,KAAK,IAAIgrF,QAAQ,EAAG;QAE/CX,KAAK,CAACj3I,IAAI,CAAEg4I,KAAK,CAACf,KAAK,CAAE7/G,CAAC,CAAE,CAAE;QAE9B,KAAM,IAAIy+D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoiD,SAAS,EAAE,EAAGpiD,CAAC,EAAG;UAEtC54F,MAAM,CAAC+C,IAAI,CAAEg4I,KAAK,CAAC/6I,MAAM,CAAEm6B,CAAC,GAAG6gH,SAAS,GAAGpiD,CAAC,CAAE,CAAE;QAEjD;MAED;MAEA,IAAKohD,KAAK,CAAC12I,MAAM,KAAK,CAAC,EAAG;MAE1By3I,KAAK,CAACf,KAAK,GAAGL,YAAY,CAAEK,KAAK,EAAEe,KAAK,CAACf,KAAK,CAACp2I,WAAW,CAAE;MAC5Dm3I,KAAK,CAAC/6I,MAAM,GAAG25I,YAAY,CAAE35I,MAAM,EAAE+6I,KAAK,CAAC/6I,MAAM,CAAC4D,WAAW,CAAE;MAE/Dk3I,MAAM,CAAC/3I,IAAI,CAAEg4I,KAAK,CAAE;IAErB;IAEAF,IAAI,CAACC,MAAM,GAAGA,MAAM;;IAEpB;;IAEA,IAAII,YAAY,GAAG7kH,QAAQ;IAE3B,KAAM,IAAI9yB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGs3I,IAAI,CAACC,MAAM,CAACx3I,MAAM,EAAE,EAAGC,IAAC,EAAG;MAE/C,IAAK23I,YAAY,GAAGL,IAAI,CAACC,MAAM,CAAEv3I,IAAC,CAAE,CAACy2I,KAAK,CAAE,CAAC,CAAE,EAAG;QAEjDkB,YAAY,GAAGL,IAAI,CAACC,MAAM,CAAEv3I,IAAC,CAAE,CAACy2I,KAAK,CAAE,CAAC,CAAE;MAE3C;IAED;;IAEA;;IAEA,KAAM,IAAIz2I,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGs3I,IAAI,CAACC,MAAM,CAACx3I,MAAM,EAAE,EAAGC,IAAC,EAAG;MAE/Cs3I,IAAI,CAACC,MAAM,CAAEv3I,IAAC,CAAE,CAACqgH,KAAK,CAAE,CAAE,CAAC,GAAGs3B,YAAY,CAAE;IAE7C;IAEAL,IAAI,CAACM,aAAa,EAAE;IAEpB,OAAON,IAAI;EAEZ;EAEA,SAASO,gBAAgBA,CAAEC,UAAU,EAAEC,cAAc,GAAG,CAAC,EAAEC,aAAa,GAAGF,UAAU,EAAET,GAAG,GAAG,EAAE,EAAG;IAEjG,IAAKA,GAAG,IAAI,CAAC,EAAGA,GAAG,GAAG,EAAE;IAExB,IAAMY,SAAS,GAAGD,aAAa,CAACT,MAAM,CAACx3I,MAAM;IAC7C,IAAMm4I,aAAa,GAAGH,cAAc,GAAGV,GAAG;;IAE1C;IAAA,IAAAc,KAAA,YAAAA,MAAA,EACuC;MAEtC,IAAMC,cAAc,GAAGJ,aAAa,CAACT,MAAM,CAAEv3I,CAAC,CAAE;MAChD,IAAMq4I,kBAAkB,GAAGD,cAAc,CAACE,aAAa;;MAEvD;MACA,IAAKD,kBAAkB,KAAK,MAAM,IAAIA,kBAAkB,KAAK,QAAQ;;MAErE;MACA,IAAME,WAAW,GAAGT,UAAU,CAACP,MAAM,CAACiB,IAAI,CAAE,UAAWhB,KAAK,EAAG;QAE9D,OAAOA,KAAK,CAACl3I,IAAI,KAAK83I,cAAc,CAAC93I,IAAI,IACrCk3I,KAAK,CAACc,aAAa,KAAKD,kBAAkB;MAE/C,CAAC,CAAE;MAEH,IAAKE,WAAW,KAAK95I,SAAS;MAE9B,IAAIg6I,eAAe,GAAG,CAAC;MACvB,IAAMC,kBAAkB,GAAGN,cAAc,CAACV,YAAY,EAAE;MAExD,IAAKU,cAAc,CAACO,iBAAiB,CAACC,yCAAyC,EAAG;QAEjFH,eAAe,GAAGC,kBAAkB,GAAG,CAAC;MAEzC;MAEA,IAAIG,YAAY,GAAG,CAAC;MACpB,IAAMC,eAAe,GAAGP,WAAW,CAACb,YAAY,EAAE;MAElD,IAAKa,WAAW,CAACI,iBAAiB,CAACC,yCAAyC,EAAG;QAE9EC,YAAY,GAAGC,eAAe,GAAG,CAAC;MAEnC;MAEA,IAAMh+D,SAAS,GAAGs9D,cAAc,CAAC3B,KAAK,CAAC12I,MAAM,GAAG,CAAC;MACjD,IAAIg5I,cAAc;;MAElB;MACA,IAAKb,aAAa,IAAIE,cAAc,CAAC3B,KAAK,CAAE,CAAC,CAAE,EAAG;QAEjD;QACA,IAAMuC,UAAU,GAAGP,eAAe;QAClC,IAAMQ,QAAQ,GAAGP,kBAAkB,GAAGD,eAAe;QACrDM,cAAc,GAAG7C,UAAU,CAAEkC,cAAc,CAAC37I,MAAM,EAAEu8I,UAAU,EAAEC,QAAQ,CAAE;MAE3E,CAAC,MAAM,IAAKf,aAAa,IAAIE,cAAc,CAAC3B,KAAK,CAAE37D,SAAS,CAAE,EAAG;QAEhE;QACA,IAAMk+D,WAAU,GAAGl+D,SAAS,GAAG49D,kBAAkB,GAAGD,eAAe;QACnE,IAAMQ,SAAQ,GAAGD,WAAU,GAAGN,kBAAkB,GAAGD,eAAe;QAClEM,cAAc,GAAG7C,UAAU,CAAEkC,cAAc,CAAC37I,MAAM,EAAEu8I,WAAU,EAAEC,SAAQ,CAAE;MAE3E,CAAC,MAAM;QAEN;QACA,IAAMC,WAAW,GAAGd,cAAc,CAACO,iBAAiB,EAAE;QACtD,IAAMK,YAAU,GAAGP,eAAe;QAClC,IAAMQ,UAAQ,GAAGP,kBAAkB,GAAGD,eAAe;QACrDS,WAAW,CAACC,QAAQ,CAAEjB,aAAa,CAAE;QACrCa,cAAc,GAAG7C,UAAU,CAAEgD,WAAW,CAACE,YAAY,EAAEJ,YAAU,EAAEC,UAAQ,CAAE;MAE9E;;MAEA;MACA,IAAKZ,kBAAkB,KAAK,YAAY,EAAG;QAE1C,IAAMgB,aAAa,GAAG,IAAI1uH,UAAU,EAAE,CAACnR,SAAS,CAAEu/H,cAAc,CAAE,CAACjjI,SAAS,EAAE,CAAC0W,SAAS,EAAE;QAC1F6sH,aAAa,CAAC3/H,OAAO,CAAEq/H,cAAc,CAAE;MAExC;;MAEA;;MAEA,IAAMO,QAAQ,GAAGf,WAAW,CAAC9B,KAAK,CAAC12I,MAAM;MACzC,KAAM,IAAI62B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0iH,QAAQ,EAAE,EAAG1iH,CAAC,EAAG;QAErC,IAAM2iH,UAAU,GAAG3iH,CAAC,GAAGkiH,eAAe,GAAGD,YAAY;QAErD,IAAKR,kBAAkB,KAAK,YAAY,EAAG;UAE1C;UACA1tH,UAAU,CAAC2E,uBAAuB,CACjCipH,WAAW,CAAC97I,MAAM,EAClB88I,UAAU,EACVR,cAAc,EACd,CAAC,EACDR,WAAW,CAAC97I,MAAM,EAClB88I,UAAU,CACV;QAEF,CAAC,MAAM;UAEN,IAAMC,QAAQ,GAAGV,eAAe,GAAGD,YAAY,GAAG,CAAC;;UAEnD;UACA,KAAM,IAAIxjD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmkD,QAAQ,EAAE,EAAGnkD,CAAC,EAAG;YAErCkjD,WAAW,CAAC97I,MAAM,CAAE88I,UAAU,GAAGlkD,CAAC,CAAE,IAAI0jD,cAAc,CAAE1jD,CAAC,CAAE;UAE5D;QAED;MAED;IAED,CAAC;IA3GD,KAAM,IAAIr1F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi4I,SAAS,EAAE,EAAGj4I,CAAC;MAAA,IAAAy5I,IAAA,GAAAtB,KAAA;MAAA,IAAAsB,IAAA,iBAMqC;IAAS;IAuGlF3B,UAAU,CAAC4B,SAAS,GAAGvsI,0BAA0B;IAEjD,OAAO2qI,UAAU;EAElB;EAEA,IAAM6B,cAAc,GAAG;IACtBzD,UAAU,EAAEA,UAAU;IACtBE,YAAY,EAAEA,YAAY;IAC1BD,YAAY,EAAEA,YAAY;IAC1BK,gBAAgB,EAAEA,gBAAgB;IAClCG,WAAW,EAAEA,WAAW;IACxBG,WAAW,EAAEA,WAAW;IACxBG,OAAO,EAAEA,OAAO;IAChBY,gBAAgB,EAAEA;EACnB,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAnBC,IAqBM+B,WAAW;IAEhB,SAAAA,YAAaC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;MAAA72I,eAAA,OAAAq3I,WAAA;MAEzE,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;MAC5C,IAAI,CAACG,YAAY,GAAG,CAAC;MAErB,IAAI,CAACZ,YAAY,GAAGA,YAAY,KAAK36I,SAAS,GAC7C26I,YAAY,GAAG,IAAIU,YAAY,CAACz5I,WAAW,CAAE05I,UAAU,CAAE;MAC1D,IAAI,CAACD,YAAY,GAAGA,YAAY;MAChC,IAAI,CAACrC,SAAS,GAAGsC,UAAU;MAE3B,IAAI,CAACE,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC;IAE3B;IAACn3I,YAAA,CAAA62I,WAAA;MAAA3/I,GAAA;MAAAE,KAAA,EAED,SAAAg/I,SAAU1mI,CAAC,EAAG;QAEb,IAAM0nI,EAAE,GAAG,IAAI,CAACN,kBAAkB;QAClC,IAAI5wG,EAAE,GAAG,IAAI,CAAC+wG,YAAY;UACzBrgH,EAAE,GAAGwgH,EAAE,CAAElxG,EAAE,CAAE;UACbvP,EAAE,GAAGygH,EAAE,CAAElxG,EAAE,GAAG,CAAC,CAAE;QAElBmxG,iBAAiB,EAAE;UAElBC,IAAI,EAAE;YAEL,IAAI36G,KAAK;YAET46G,WAAW,EAAE;cAEZ;cACA;cACA;cACA;cACAC,YAAY,EAAE,IAAK,EAAI9nI,CAAC,GAAGknB,EAAE,CAAE,EAAG;gBAEjC,KAAM,IAAI6gH,QAAQ,GAAGvxG,EAAE,GAAG,CAAC,IAAM;kBAEhC,IAAKtP,EAAE,KAAKl7B,SAAS,EAAG;oBAEvB,IAAKgU,CAAC,GAAGinB,EAAE,EAAG,MAAM6gH,YAAY;;oBAEhC;;oBAEAtxG,EAAE,GAAGkxG,EAAE,CAACp6I,MAAM;oBACd,IAAI,CAACi6I,YAAY,GAAG/wG,EAAE;oBACtB,OAAO,IAAI,CAACwxG,gBAAgB,CAAExxG,EAAE,GAAG,CAAC,CAAE;kBAEvC;kBAEA,IAAKA,EAAE,KAAKuxG,QAAQ,EAAG,MAAM,CAAC;;kBAE9B9gH,EAAE,GAAGC,EAAE;kBACPA,EAAE,GAAGwgH,EAAE,CAAE,EAAGlxG,EAAE,CAAE;kBAEhB,IAAKx2B,CAAC,GAAGknB,EAAE,EAAG;oBAEb;oBACA,MAAM0gH,IAAI;kBAEX;gBAED;;gBAEA;gBACA36G,KAAK,GAAGy6G,EAAE,CAACp6I,MAAM;gBACjB,MAAMu6I,WAAW;cAElB;;cAEA;cACA;cACA,IAAK,EAAI7nI,CAAC,IAAIinB,EAAE,CAAE,EAAG;gBAEpB;;gBAEA,IAAMghH,QAAQ,GAAGP,EAAE,CAAE,CAAC,CAAE;gBAExB,IAAK1nI,CAAC,GAAGioI,QAAQ,EAAG;kBAEnBzxG,EAAE,GAAG,CAAC,CAAC,CAAC;kBACRvP,EAAE,GAAGghH,QAAQ;gBAEd;;gBAEA;;gBAEA,KAAM,IAAIF,SAAQ,GAAGvxG,EAAE,GAAG,CAAC,IAAM;kBAEhC,IAAKvP,EAAE,KAAKj7B,SAAS,EAAG;oBAEvB;;oBAEA,IAAI,CAACu7I,YAAY,GAAG,CAAC;oBACrB,OAAO,IAAI,CAACS,gBAAgB,CAAE,CAAC,CAAE;kBAElC;kBAEA,IAAKxxG,EAAE,KAAKuxG,SAAQ,EAAG,MAAM,CAAC;;kBAE9B7gH,EAAE,GAAGD,EAAE;kBACPA,EAAE,GAAGygH,EAAE,CAAE,EAAGlxG,EAAE,GAAG,CAAC,CAAE;kBAEpB,IAAKx2B,CAAC,IAAIinB,EAAE,EAAG;oBAEd;oBACA,MAAM2gH,IAAI;kBAEX;gBAED;;gBAEA;gBACA36G,KAAK,GAAGuJ,EAAE;gBACVA,EAAE,GAAG,CAAC;gBACN,MAAMqxG,WAAW;cAElB;;cAEA;;cAEA,MAAMF,iBAAiB;YAExB,CAAC,CAAC;;YAEF;;YAEA,OAAQnxG,EAAE,GAAGvJ,KAAK,EAAG;cAEpB,IAAMi7G,GAAG,GAAK1xG,EAAE,GAAGvJ,KAAK,KAAO,CAAC;cAEhC,IAAKjtB,CAAC,GAAG0nI,EAAE,CAAEQ,GAAG,CAAE,EAAG;gBAEpBj7G,KAAK,GAAGi7G,GAAG;cAEZ,CAAC,MAAM;gBAEN1xG,EAAE,GAAG0xG,GAAG,GAAG,CAAC;cAEb;YAED;YAEAhhH,EAAE,GAAGwgH,EAAE,CAAElxG,EAAE,CAAE;YACbvP,EAAE,GAAGygH,EAAE,CAAElxG,EAAE,GAAG,CAAC,CAAE;;YAEjB;;YAEA,IAAKvP,EAAE,KAAKj7B,SAAS,EAAG;cAEvB,IAAI,CAACu7I,YAAY,GAAG,CAAC;cACrB,OAAO,IAAI,CAACS,gBAAgB,CAAE,CAAC,CAAE;YAElC;YAEA,IAAK9gH,EAAE,KAAKl7B,SAAS,EAAG;cAEvBwqC,EAAE,GAAGkxG,EAAE,CAACp6I,MAAM;cACd,IAAI,CAACi6I,YAAY,GAAG/wG,EAAE;cACtB,OAAO,IAAI,CAACwxG,gBAAgB,CAAExxG,EAAE,GAAG,CAAC,CAAE;YAEvC;UAED,CAAC,CAAC;;UAEF,IAAI,CAAC+wG,YAAY,GAAG/wG,EAAE;UAEtB,IAAI,CAAC2xG,gBAAgB,CAAE3xG,EAAE,EAAEvP,EAAE,EAAEC,EAAE,CAAE;QAEpC,CAAC,CAAC;;QAEF,OAAO,IAAI,CAACkhH,YAAY,CAAE5xG,EAAE,EAAEvP,EAAE,EAAEjnB,CAAC,EAAEknB,EAAE,CAAE;MAE1C;IAAC;MAAA1/B,GAAA;MAAAE,KAAA,EAED,SAAA2gJ,aAAA,EAAe;QAEd,OAAO,IAAI,CAACb,QAAQ,IAAI,IAAI,CAACC,gBAAgB;MAE9C;IAAC;MAAAjgJ,GAAA;MAAAE,KAAA,EAED,SAAAsgJ,iBAAkBnqI,KAAK,EAAG;QAEzB;;QAEA,IAAMjT,MAAM,GAAG,IAAI,CAAC+7I,YAAY;UAC/B38I,MAAM,GAAG,IAAI,CAACq9I,YAAY;UAC1B77F,MAAM,GAAG,IAAI,CAACw5F,SAAS;UACvBh+H,MAAM,GAAGnJ,KAAK,GAAG2tC,MAAM;QAExB,KAAM,IAAIj+C,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKi+C,MAAM,EAAE,EAAGj+C,CAAC,EAAG;UAErC3C,MAAM,CAAE2C,CAAC,CAAE,GAAGvD,MAAM,CAAEgd,MAAM,GAAGzZ,CAAC,CAAE;QAEnC;QAEA,OAAO3C,MAAM;MAEd;;MAEA;IAAA;MAAApD,GAAA;MAAAE,KAAA,EAEA,SAAA0gJ,aAAA,CAAc;MAAA,EAAsB;QAEnC,MAAM,IAAI/8I,KAAK,CAAE,yBAAyB,CAAE;QAC5C;MAED;IAAC;MAAA7D,GAAA;MAAAE,KAAA,EAED,SAAAygJ,iBAAA,CAAkB;MAAA,EAAmB;;QAEpC;MAAA;IAEA;IAAA,OAAAhB,WAAA;EAAA;EAIF;AACD;AACA;AACA;AACA;AACA;AACA;EANC,IAQMmB,gBAAgB,0BAAAC,YAAA;IAAAz3H,SAAA,CAAAw3H,gBAAA,EAAAC,YAAA;IAAA,IAAAC,SAAA,GAAAx3H,YAAA,CAAAs3H,gBAAA;IAErB,SAAAA,iBAAalB,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;MAAA,IAAA8B,OAAA;MAAA34I,eAAA,OAAAw4I,gBAAA;MAEzEG,OAAA,GAAAD,SAAA,CAAAh/I,IAAA,OAAO49I,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;MAEjE8B,OAAA,CAAKC,WAAW,GAAG,CAAE,CAAC;MACtBD,OAAA,CAAKE,WAAW,GAAG,CAAE,CAAC;MACtBF,OAAA,CAAKG,WAAW,GAAG,CAAE,CAAC;MACtBH,OAAA,CAAKI,WAAW,GAAG,CAAE,CAAC;MAEtBJ,OAAA,CAAKhB,gBAAgB,GAAG;QAEvBqB,WAAW,EAAExuI,mBAAmB;QAChCyuI,SAAS,EAAEzuI;MAEZ,CAAC;MAAC,OAAAmuI,OAAA;IAEH;IAACn4I,YAAA,CAAAg4I,gBAAA;MAAA9gJ,GAAA;MAAAE,KAAA,EAED,SAAAygJ,iBAAkB3xG,EAAE,EAAEvP,EAAE,EAAEC,EAAE,EAAG;QAE9B,IAAMwgH,EAAE,GAAG,IAAI,CAACN,kBAAkB;QAClC,IAAI4B,KAAK,GAAGxyG,EAAE,GAAG,CAAC;UACjByyG,KAAK,GAAGzyG,EAAE,GAAG,CAAC;UAEd0yG,KAAK,GAAGxB,EAAE,CAAEsB,KAAK,CAAE;UACnBG,KAAK,GAAGzB,EAAE,CAAEuB,KAAK,CAAE;QAEpB,IAAKC,KAAK,KAAKl9I,SAAS,EAAG;UAE1B,QAAS,IAAI,CAACq8I,YAAY,EAAE,CAACS,WAAW;YAEvC,KAAKvuI,eAAe;cAEnB;cACAyuI,KAAK,GAAGxyG,EAAE;cACV0yG,KAAK,GAAG,CAAC,GAAGjiH,EAAE,GAAGC,EAAE;cAEnB;YAED,KAAK1sB,gBAAgB;cAEpB;cACAwuI,KAAK,GAAGtB,EAAE,CAACp6I,MAAM,GAAG,CAAC;cACrB47I,KAAK,GAAGjiH,EAAE,GAAGygH,EAAE,CAAEsB,KAAK,CAAE,GAAGtB,EAAE,CAAEsB,KAAK,GAAG,CAAC,CAAE;cAE1C;YAED;cAAS;;cAER;cACAA,KAAK,GAAGxyG,EAAE;cACV0yG,KAAK,GAAGhiH,EAAE;UAAC;QAId;QAEA,IAAKiiH,KAAK,KAAKn9I,SAAS,EAAG;UAE1B,QAAS,IAAI,CAACq8I,YAAY,EAAE,CAACU,SAAS;YAErC,KAAKxuI,eAAe;cAEnB;cACA0uI,KAAK,GAAGzyG,EAAE;cACV2yG,KAAK,GAAG,CAAC,GAAGjiH,EAAE,GAAGD,EAAE;cAEnB;YAED,KAAKzsB,gBAAgB;cAEpB;cACAyuI,KAAK,GAAG,CAAC;cACTE,KAAK,GAAGjiH,EAAE,GAAGwgH,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;cAE9B;YAED;cAAS;;cAER;cACAuB,KAAK,GAAGzyG,EAAE,GAAG,CAAC;cACd2yG,KAAK,GAAGliH,EAAE;UAAC;QAId;QAEA,IAAMmiH,MAAM,GAAG,CAAEliH,EAAE,GAAGD,EAAE,IAAK,GAAG;UAC/BukB,MAAM,GAAG,IAAI,CAACw5F,SAAS;QAExB,IAAI,CAAC0D,WAAW,GAAGU,MAAM,IAAKniH,EAAE,GAAGiiH,KAAK,CAAE;QAC1C,IAAI,CAACN,WAAW,GAAGQ,MAAM,IAAKD,KAAK,GAAGjiH,EAAE,CAAE;QAC1C,IAAI,CAACyhH,WAAW,GAAGK,KAAK,GAAGx9F,MAAM;QACjC,IAAI,CAACq9F,WAAW,GAAGI,KAAK,GAAGz9F,MAAM;MAElC;IAAC;MAAAhkD,GAAA;MAAAE,KAAA,EAED,SAAA0gJ,aAAc5xG,EAAE,EAAEvP,EAAE,EAAEjnB,CAAC,EAAEknB,EAAE,EAAG;QAE7B,IAAMt8B,MAAM,GAAG,IAAI,CAAC+7I,YAAY;UAC/B38I,MAAM,GAAG,IAAI,CAACq9I,YAAY;UAC1B77F,MAAM,GAAG,IAAI,CAACw5F,SAAS;UAEvBvP,EAAE,GAAGj/F,EAAE,GAAGgV,MAAM;UAAG69F,EAAE,GAAG5T,EAAE,GAAGjqF,MAAM;UACnC89F,EAAE,GAAG,IAAI,CAACX,WAAW;UAAGY,EAAE,GAAG,IAAI,CAACV,WAAW;UAC7CW,EAAE,GAAG,IAAI,CAACd,WAAW;UAAEe,EAAE,GAAG,IAAI,CAACb,WAAW;UAE5Cr7G,CAAC,GAAG,CAAEvtB,CAAC,GAAGinB,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;UAC5BygH,EAAE,GAAGn6G,CAAC,GAAGA,CAAC;UACVm8G,GAAG,GAAGhC,EAAE,GAAGn6G,CAAC;;QAEb;;QAEA,IAAMo8G,EAAE,GAAG,CAAEH,EAAE,GAAGE,GAAG,GAAG,CAAC,GAAGF,EAAE,GAAG9B,EAAE,GAAG8B,EAAE,GAAGj8G,CAAC;QAC5C,IAAM9G,EAAE,GAAG,CAAE,CAAC,GAAG+iH,EAAE,IAAKE,GAAG,GAAG,CAAE,CAAE,GAAG,GAAG,CAAC,GAAGF,EAAE,IAAK9B,EAAE,GAAG,CAAE,CAAE,GAAG,GAAG8B,EAAE,IAAKj8G,CAAC,GAAG,CAAC;QAC9E,IAAMtU,EAAE,GAAG,CAAE,CAAE,CAAC,GAAGwwH,EAAE,IAAKC,GAAG,GAAG,CAAE,GAAG,GAAGD,EAAE,IAAK/B,EAAE,GAAG,GAAG,GAAGn6G,CAAC;QAC3D,IAAMq8G,EAAE,GAAGH,EAAE,GAAGC,GAAG,GAAGD,EAAE,GAAG/B,EAAE;;QAE7B;;QAEA,KAAM,IAAIn6I,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKi+C,MAAM,EAAE,EAAGj+C,CAAC,EAAG;UAErC3C,MAAM,CAAE2C,CAAC,CAAE,GACTo8I,EAAE,GAAG3/I,MAAM,CAAEs/I,EAAE,GAAG/7I,CAAC,CAAE,GACrBk5B,EAAE,GAAGz8B,MAAM,CAAEq/I,EAAE,GAAG97I,CAAC,CAAE,GACrB0rB,EAAE,GAAGjvB,MAAM,CAAEyrI,EAAE,GAAGloI,CAAC,CAAE,GACrBq8I,EAAE,GAAG5/I,MAAM,CAAEu/I,EAAE,GAAGh8I,CAAC,CAAE;QAExB;QAEA,OAAO3C,MAAM;MAEd;IAAC;IAAA,OAAA09I,gBAAA;EAAA,EAtI6BnB,WAAW;EAAA,IA0IpC0C,iBAAiB,0BAAAC,aAAA;IAAAh5H,SAAA,CAAA+4H,iBAAA,EAAAC,aAAA;IAAA,IAAAC,SAAA,GAAA/4H,YAAA,CAAA64H,iBAAA;IAEtB,SAAAA,kBAAazC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;MAAA72I,eAAA,OAAA+5I,iBAAA;MAAA,OAAAE,SAAA,CAAAvgJ,IAAA,OAElE49I,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;IAElE;IAACr2I,YAAA,CAAAu5I,iBAAA;MAAAriJ,GAAA;MAAAE,KAAA,EAED,SAAA0gJ,aAAc5xG,EAAE,EAAEvP,EAAE,EAAEjnB,CAAC,EAAEknB,EAAE,EAAG;QAE7B,IAAMt8B,MAAM,GAAG,IAAI,CAAC+7I,YAAY;UAC/B38I,MAAM,GAAG,IAAI,CAACq9I,YAAY;UAC1B77F,MAAM,GAAG,IAAI,CAACw5F,SAAS;UAEvBgF,OAAO,GAAGxzG,EAAE,GAAGgV,MAAM;UACrBy+F,OAAO,GAAGD,OAAO,GAAGx+F,MAAM;UAE1B0+F,OAAO,GAAG,CAAElqI,CAAC,GAAGinB,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;UAClCkjH,OAAO,GAAG,CAAC,GAAGD,OAAO;QAEtB,KAAM,IAAI38I,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKi+C,MAAM,EAAE,EAAGj+C,CAAC,EAAG;UAErC3C,MAAM,CAAE2C,CAAC,CAAE,GACTvD,MAAM,CAAEigJ,OAAO,GAAG18I,CAAC,CAAE,GAAG48I,OAAO,GAC/BngJ,MAAM,CAAEggJ,OAAO,GAAGz8I,CAAC,CAAE,GAAG28I,OAAO;QAElC;QAEA,OAAOt/I,MAAM;MAEd;IAAC;IAAA,OAAAi/I,iBAAA;EAAA,EA9B8B1C,WAAW;EAkC3C;AACD;AACA;AACA;AACA;EAJC,IAMMiD,mBAAmB,0BAAAC,aAAA;IAAAv5H,SAAA,CAAAs5H,mBAAA,EAAAC,aAAA;IAAA,IAAAC,SAAA,GAAAt5H,YAAA,CAAAo5H,mBAAA;IAExB,SAAAA,oBAAahD,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;MAAA72I,eAAA,OAAAs6I,mBAAA;MAAA,OAAAE,SAAA,CAAA9gJ,IAAA,OAElE49I,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;IAElE;IAACr2I,YAAA,CAAA85I,mBAAA;MAAA5iJ,GAAA;MAAAE,KAAA,EAED,SAAA0gJ,aAAc5xG,EAAE,CAAC,kBAAmB;QAEnC,OAAO,IAAI,CAACwxG,gBAAgB,CAAExxG,EAAE,GAAG,CAAC,CAAE;MAEvC;IAAC;IAAA,OAAA4zG,mBAAA;EAAA,EAZgCjD,WAAW;EAAA,IAgBvCoD,aAAa;IAElB,SAAAA,cAAa18I,IAAI,EAAEm2I,KAAK,EAAEh6I,MAAM,EAAEwgJ,aAAa,EAAG;MAAA16I,eAAA,OAAAy6I,aAAA;MAEjD,IAAK18I,IAAI,KAAK7B,SAAS,EAAG,MAAM,IAAIX,KAAK,CAAE,8CAA8C,CAAE;MAC3F,IAAK24I,KAAK,KAAKh4I,SAAS,IAAIg4I,KAAK,CAAC12I,MAAM,KAAK,CAAC,EAAG,MAAM,IAAIjC,KAAK,CAAE,mDAAmD,GAAGwC,IAAI,CAAE;MAE9H,IAAI,CAACA,IAAI,GAAGA,IAAI;MAEhB,IAAI,CAACm2I,KAAK,GAAGL,YAAY,CAAEK,KAAK,EAAE,IAAI,CAACyG,cAAc,CAAE;MACvD,IAAI,CAACzgJ,MAAM,GAAG25I,YAAY,CAAE35I,MAAM,EAAE,IAAI,CAAC0gJ,eAAe,CAAE;MAE1D,IAAI,CAACC,gBAAgB,CAAEH,aAAa,IAAI,IAAI,CAACI,oBAAoB,CAAE;IAEpE;;IAEA;IACA;IAAAt6I,YAAA,CAAAi6I,aAAA;MAAA/iJ,GAAA;MAAAE,KAAA,EAwCA,SAAAmjJ,iCAAkCjgJ,MAAM,EAAG;QAE1C,OAAO,IAAIw/I,mBAAmB,CAAE,IAAI,CAACpG,KAAK,EAAE,IAAI,CAACh6I,MAAM,EAAE,IAAI,CAACi7I,YAAY,EAAE,EAAEr6I,MAAM,CAAE;MAEvF;IAAC;MAAApD,GAAA;MAAAE,KAAA,EAED,SAAAojJ,+BAAgClgJ,MAAM,EAAG;QAExC,OAAO,IAAIi/I,iBAAiB,CAAE,IAAI,CAAC7F,KAAK,EAAE,IAAI,CAACh6I,MAAM,EAAE,IAAI,CAACi7I,YAAY,EAAE,EAAEr6I,MAAM,CAAE;MAErF;IAAC;MAAApD,GAAA;MAAAE,KAAA,EAED,SAAAqjJ,+BAAgCngJ,MAAM,EAAG;QAExC,OAAO,IAAI09I,gBAAgB,CAAE,IAAI,CAACtE,KAAK,EAAE,IAAI,CAACh6I,MAAM,EAAE,IAAI,CAACi7I,YAAY,EAAE,EAAEr6I,MAAM,CAAE;MAEpF;IAAC;MAAApD,GAAA;MAAAE,KAAA,EAED,SAAAijJ,iBAAkBH,aAAa,EAAG;QAEjC,IAAIQ,aAAa;QAEjB,QAASR,aAAa;UAErB,KAAKrwI,mBAAmB;YAEvB6wI,aAAa,GAAG,IAAI,CAACH,gCAAgC;YAErD;UAED,KAAKzwI,iBAAiB;YAErB4wI,aAAa,GAAG,IAAI,CAACF,8BAA8B;YAEnD;UAED,KAAKzwI,iBAAiB;YAErB2wI,aAAa,GAAG,IAAI,CAACD,8BAA8B;YAEnD;QAAM;QAIR,IAAKC,aAAa,KAAKh/I,SAAS,EAAG;UAElC,IAAM6hH,OAAO,GAAG,gCAAgC,GAC/C,IAAI,CAACg4B,aAAa,GAAG,wBAAwB,GAAG,IAAI,CAACh4I,IAAI;UAE1D,IAAK,IAAI,CAACq4I,iBAAiB,KAAKl6I,SAAS,EAAG;YAE3C;YACA,IAAKw+I,aAAa,KAAK,IAAI,CAACI,oBAAoB,EAAG;cAElD,IAAI,CAACD,gBAAgB,CAAE,IAAI,CAACC,oBAAoB,CAAE;YAEnD,CAAC,MAAM;cAEN,MAAM,IAAIv/I,KAAK,CAAEwiH,OAAO,CAAE,CAAC,CAAC;YAE7B;UAED;;UAEA58G,OAAO,CAACC,IAAI,CAAE,sBAAsB,EAAE28G,OAAO,CAAE;UAC/C,OAAO,IAAI;QAEZ;QAEA,IAAI,CAACq4B,iBAAiB,GAAG8E,aAAa;QAEtC,OAAO,IAAI;MAEZ;IAAC;MAAAxjJ,GAAA;MAAAE,KAAA,EAED,SAAA2vC,iBAAA,EAAmB;QAElB,QAAS,IAAI,CAAC6uG,iBAAiB;UAE9B,KAAK,IAAI,CAAC2E,gCAAgC;YAEzC,OAAO1wI,mBAAmB;UAE3B,KAAK,IAAI,CAAC2wI,8BAA8B;YAEvC,OAAO1wI,iBAAiB;UAEzB,KAAK,IAAI,CAAC2wI,8BAA8B;YAEvC,OAAO1wI,iBAAiB;QAAC;MAI5B;IAAC;MAAA7S,GAAA;MAAAE,KAAA,EAED,SAAAu9I,aAAA,EAAe;QAEd,OAAO,IAAI,CAACj7I,MAAM,CAACsD,MAAM,GAAG,IAAI,CAAC02I,KAAK,CAAC12I,MAAM;MAE9C;;MAEA;IAAA;MAAA9F,GAAA;MAAAE,KAAA,EACA,SAAAkmH,MAAOq9B,UAAU,EAAG;QAEnB,IAAKA,UAAU,KAAK,GAAG,EAAG;UAEzB,IAAMjH,KAAK,GAAG,IAAI,CAACA,KAAK;UAExB,KAAM,IAAIz2I,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG2kI,KAAK,CAAC12I,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;YAElDy2I,KAAK,CAAEz2I,CAAC,CAAE,IAAI09I,UAAU;UAEzB;QAED;QAEA,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAAzjJ,GAAA;MAAAE,KAAA,EACA,SAAAmkB,MAAOq/H,SAAS,EAAG;QAElB,IAAKA,SAAS,KAAK,GAAG,EAAG;UAExB,IAAMlH,KAAK,GAAG,IAAI,CAACA,KAAK;UAExB,KAAM,IAAIz2I,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG2kI,KAAK,CAAC12I,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;YAElDy2I,KAAK,CAAEz2I,CAAC,CAAE,IAAI29I,SAAS;UAExB;QAED;QAEA,OAAO,IAAI;MAEZ;;MAEA;MACA;IAAA;MAAA1jJ,GAAA;MAAAE,KAAA,EACA,SAAA0iF,KAAM+gE,SAAS,EAAEC,OAAO,EAAG;QAE1B,IAAMpH,KAAK,GAAG,IAAI,CAACA,KAAK;UACvBqH,KAAK,GAAGrH,KAAK,CAAC12I,MAAM;QAErB,IAAIojB,IAAI,GAAG,CAAC;UACXi5D,EAAE,GAAG0hE,KAAK,GAAG,CAAC;QAEf,OAAQ36H,IAAI,KAAK26H,KAAK,IAAIrH,KAAK,CAAEtzH,IAAI,CAAE,GAAGy6H,SAAS,EAAG;UAErD,EAAGz6H,IAAI;QAER;QAEA,OAAQi5D,EAAE,KAAK,CAAE,CAAC,IAAIq6D,KAAK,CAAEr6D,EAAE,CAAE,GAAGyhE,OAAO,EAAG;UAE7C,EAAGzhE,EAAE;QAEN;QAEA,EAAGA,EAAE,CAAC,CAAC;;QAEP,IAAKj5D,IAAI,KAAK,CAAC,IAAIi5D,EAAE,KAAK0hE,KAAK,EAAG;UAEjC;UACA,IAAK36H,IAAI,IAAIi5D,EAAE,EAAG;YAEjBA,EAAE,GAAGrrE,IAAI,CAACa,GAAG,CAAEwqE,EAAE,EAAE,CAAC,CAAE;YACtBj5D,IAAI,GAAGi5D,EAAE,GAAG,CAAC;UAEd;UAEA,IAAMn+B,MAAM,GAAG,IAAI,CAACy5F,YAAY,EAAE;UAClC,IAAI,CAACjB,KAAK,GAAGP,UAAU,CAAEO,KAAK,EAAEtzH,IAAI,EAAEi5D,EAAE,CAAE;UAC1C,IAAI,CAAC3/E,MAAM,GAAGy5I,UAAU,CAAE,IAAI,CAACz5I,MAAM,EAAE0mB,IAAI,GAAG86B,MAAM,EAAEm+B,EAAE,GAAGn+B,MAAM,CAAE;QAEpE;QAEA,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAAhkD,GAAA;MAAAE,KAAA,EACA,SAAA4jJ,SAAA,EAAW;QAEV,IAAIC,KAAK,GAAG,IAAI;QAEhB,IAAMvG,SAAS,GAAG,IAAI,CAACC,YAAY,EAAE;QACrC,IAAKD,SAAS,GAAG1mI,IAAI,CAACsC,KAAK,CAAEokI,SAAS,CAAE,KAAK,CAAC,EAAG;UAEhD/zI,OAAO,CAAChG,KAAK,CAAE,mDAAmD,EAAE,IAAI,CAAE;UAC1EsgJ,KAAK,GAAG,KAAK;QAEd;QAEA,IAAMvH,KAAK,GAAG,IAAI,CAACA,KAAK;UACvBh6I,MAAM,GAAG,IAAI,CAACA,MAAM;UAEpBqhJ,KAAK,GAAGrH,KAAK,CAAC12I,MAAM;QAErB,IAAK+9I,KAAK,KAAK,CAAC,EAAG;UAElBp6I,OAAO,CAAChG,KAAK,CAAE,sCAAsC,EAAE,IAAI,CAAE;UAC7DsgJ,KAAK,GAAG,KAAK;QAEd;QAEA,IAAIC,QAAQ,GAAG,IAAI;QAEnB,KAAM,IAAIj+I,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK89I,KAAK,EAAE99I,CAAC,EAAG,EAAG;UAEpC,IAAMk+I,QAAQ,GAAGzH,KAAK,CAAEz2I,CAAC,CAAE;UAE3B,IAAK,OAAOk+I,QAAQ,KAAK,QAAQ,IAAIp+I,KAAK,CAAEo+I,QAAQ,CAAE,EAAG;YAExDx6I,OAAO,CAAChG,KAAK,CAAE,kDAAkD,EAAE,IAAI,EAAEsC,CAAC,EAAEk+I,QAAQ,CAAE;YACtFF,KAAK,GAAG,KAAK;YACb;UAED;UAEA,IAAKC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,GAAGC,QAAQ,EAAG;YAE/Cx6I,OAAO,CAAChG,KAAK,CAAE,yCAAyC,EAAE,IAAI,EAAEsC,CAAC,EAAEk+I,QAAQ,EAAED,QAAQ,CAAE;YACvFD,KAAK,GAAG,KAAK;YACb;UAED;UAEAC,QAAQ,GAAGC,QAAQ;QAEpB;QAEA,IAAKzhJ,MAAM,KAAKgC,SAAS,EAAG;UAE3B,IAAK03I,YAAY,CAAE15I,MAAM,CAAE,EAAG;YAE7B,KAAM,IAAIuD,IAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGrV,MAAM,CAACsD,MAAM,EAAEC,IAAC,KAAK8R,CAAC,EAAE,EAAG9R,IAAC,EAAG;cAEnD,IAAM7F,OAAK,GAAGsC,MAAM,CAAEuD,IAAC,CAAE;cAEzB,IAAKF,KAAK,CAAE3F,OAAK,CAAE,EAAG;gBAErBuJ,OAAO,CAAChG,KAAK,CAAE,mDAAmD,EAAE,IAAI,EAAEsC,IAAC,EAAE7F,OAAK,CAAE;gBACpF6jJ,KAAK,GAAG,KAAK;gBACb;cAED;YAED;UAED;QAED;QAEA,OAAOA,KAAK;MAEb;;MAEA;MACA;IAAA;MAAA/jJ,GAAA;MAAAE,KAAA,EACA,SAAAgkJ,SAAA,EAAW;QAEV;QACA,IAAM1H,KAAK,GAAGP,UAAU,CAAE,IAAI,CAACO,KAAK,CAAE;UACrCh6I,MAAM,GAAGy5I,UAAU,CAAE,IAAI,CAACz5I,MAAM,CAAE;UAClCwhD,MAAM,GAAG,IAAI,CAACy5F,YAAY,EAAE;UAE5B0G,mBAAmB,GAAG,IAAI,CAACt0G,gBAAgB,EAAE,KAAKh9B,iBAAiB;UAEnEguE,SAAS,GAAG27D,KAAK,CAAC12I,MAAM,GAAG,CAAC;QAE7B,IAAIs+I,UAAU,GAAG,CAAC;QAElB,KAAM,IAAIr+I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG86E,SAAS,EAAE,EAAG96E,CAAC,EAAG;UAEtC,IAAIs+I,IAAI,GAAG,KAAK;UAEhB,IAAMnyF,IAAI,GAAGsqF,KAAK,CAAEz2I,CAAC,CAAE;UACvB,IAAMu+I,QAAQ,GAAG9H,KAAK,CAAEz2I,CAAC,GAAG,CAAC,CAAE;;UAE/B;;UAEA,IAAKmsD,IAAI,KAAKoyF,QAAQ,KAAMv+I,CAAC,KAAK,CAAC,IAAImsD,IAAI,KAAKsqF,KAAK,CAAE,CAAC,CAAE,CAAE,EAAG;YAE9D,IAAK,CAAE2H,mBAAmB,EAAG;cAE5B;;cAEA,IAAM3kI,MAAM,GAAGzZ,CAAC,GAAGi+C,MAAM;gBACxBugG,OAAO,GAAG/kI,MAAM,GAAGwkC,MAAM;gBACzBwgG,OAAO,GAAGhlI,MAAM,GAAGwkC,MAAM;cAE1B,KAAM,IAAIrnB,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKqnB,MAAM,EAAE,EAAGrnB,CAAC,EAAG;gBAErC,IAAMz8B,OAAK,GAAGsC,MAAM,CAAEgd,MAAM,GAAGmd,CAAC,CAAE;gBAElC,IAAKz8B,OAAK,KAAKsC,MAAM,CAAE+hJ,OAAO,GAAG5nH,CAAC,CAAE,IACnCz8B,OAAK,KAAKsC,MAAM,CAAEgiJ,OAAO,GAAG7nH,CAAC,CAAE,EAAG;kBAElC0nH,IAAI,GAAG,IAAI;kBACX;gBAED;cAED;YAED,CAAC,MAAM;cAENA,IAAI,GAAG,IAAI;YAEZ;UAED;;UAEA;;UAEA,IAAKA,IAAI,EAAG;YAEX,IAAKt+I,CAAC,KAAKq+I,UAAU,EAAG;cAEvB5H,KAAK,CAAE4H,UAAU,CAAE,GAAG5H,KAAK,CAAEz2I,CAAC,CAAE;cAEhC,IAAM0+I,UAAU,GAAG1+I,CAAC,GAAGi+C,MAAM;gBAC5B0gG,WAAW,GAAGN,UAAU,GAAGpgG,MAAM;cAElC,KAAM,IAAIrnB,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAKqnB,MAAM,EAAE,EAAGrnB,IAAC,EAAG;gBAErCn6B,MAAM,CAAEkiJ,WAAW,GAAG/nH,IAAC,CAAE,GAAGn6B,MAAM,CAAEiiJ,UAAU,GAAG9nH,IAAC,CAAE;cAErD;YAED;YAEA,EAAGynH,UAAU;UAEd;QAED;;QAEA;;QAEA,IAAKvjE,SAAS,GAAG,CAAC,EAAG;UAEpB27D,KAAK,CAAE4H,UAAU,CAAE,GAAG5H,KAAK,CAAE37D,SAAS,CAAE;UAExC,KAAM,IAAI4jE,WAAU,GAAG5jE,SAAS,GAAG78B,MAAM,EAAE0gG,YAAW,GAAGN,UAAU,GAAGpgG,MAAM,EAAErnB,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAKqnB,MAAM,EAAE,EAAGrnB,IAAC,EAAG;YAEzGn6B,MAAM,CAAEkiJ,YAAW,GAAG/nH,IAAC,CAAE,GAAGn6B,MAAM,CAAEiiJ,WAAU,GAAG9nH,IAAC,CAAE;UAErD;UAEA,EAAGynH,UAAU;QAEd;QAEA,IAAKA,UAAU,KAAK5H,KAAK,CAAC12I,MAAM,EAAG;UAElC,IAAI,CAAC02I,KAAK,GAAGP,UAAU,CAAEO,KAAK,EAAE,CAAC,EAAE4H,UAAU,CAAE;UAC/C,IAAI,CAAC5hJ,MAAM,GAAGy5I,UAAU,CAAEz5I,MAAM,EAAE,CAAC,EAAE4hJ,UAAU,GAAGpgG,MAAM,CAAE;QAE3D,CAAC,MAAM;UAEN,IAAI,CAACw4F,KAAK,GAAGA,KAAK;UAClB,IAAI,CAACh6I,MAAM,GAAGA,MAAM;QAErB;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAxC,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,IAAM8/H,KAAK,GAAGP,UAAU,CAAE,IAAI,CAACO,KAAK,EAAE,CAAC,CAAE;QACzC,IAAMh6I,MAAM,GAAGy5I,UAAU,CAAE,IAAI,CAACz5I,MAAM,EAAE,CAAC,CAAE;QAE3C,IAAMmiJ,kBAAkB,GAAG,IAAI,CAACv+I,WAAW;QAC3C,IAAMm3I,KAAK,GAAG,IAAIoH,kBAAkB,CAAE,IAAI,CAACt+I,IAAI,EAAEm2I,KAAK,EAAEh6I,MAAM,CAAE;;QAEhE;QACA+6I,KAAK,CAACmB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;QAEhD,OAAOnB,KAAK;MAEb;IAAC;MAAAv9I,GAAA;MAAAE,KAAA,EAxaD,SAAAsoB,OAAe+0H,KAAK,EAAG;QAEtB,IAAMqH,SAAS,GAAGrH,KAAK,CAACn3I,WAAW;QAEnC,IAAI6sH,IAAI;;QAER;QACA,IAAK2xB,SAAS,CAACp8H,MAAM,KAAK,IAAI,CAACA,MAAM,EAAG;UAEvCyqG,IAAI,GAAG2xB,SAAS,CAACp8H,MAAM,CAAE+0H,KAAK,CAAE;QAEjC,CAAC,MAAM;UAEN;UACAtqB,IAAI,GAAG;YAEN,MAAM,EAAEsqB,KAAK,CAACl3I,IAAI;YAClB,OAAO,EAAE81I,YAAY,CAAEoB,KAAK,CAACf,KAAK,EAAE1zH,KAAK,CAAE;YAC3C,QAAQ,EAAEqzH,YAAY,CAAEoB,KAAK,CAAC/6I,MAAM,EAAEsmB,KAAK;UAE5C,CAAC;UAED,IAAMk6H,aAAa,GAAGzF,KAAK,CAAC1tG,gBAAgB,EAAE;UAE9C,IAAKmzG,aAAa,KAAKzF,KAAK,CAAC6F,oBAAoB,EAAG;YAEnDnwB,IAAI,CAAC+vB,aAAa,GAAGA,aAAa;UAEnC;QAED;QAEA/vB,IAAI,CAAClxH,IAAI,GAAGw7I,KAAK,CAACc,aAAa,CAAC,CAAC;;QAEjC,OAAOprB,IAAI;MAEZ;IAAC;IAAA,OAAA8vB,aAAA;EAAA;EAwYFA,aAAa,CAACpjJ,SAAS,CAACsjJ,cAAc,GAAGznI,YAAY;EACrDunI,aAAa,CAACpjJ,SAAS,CAACujJ,eAAe,GAAG1nI,YAAY;EACtDunI,aAAa,CAACpjJ,SAAS,CAACyjJ,oBAAoB,GAAGxwI,iBAAiB;;EAEhE;AACD;AACA;EAFC,IAGMiyI,oBAAoB,0BAAAC,cAAA;IAAAx7H,SAAA,CAAAu7H,oBAAA,EAAAC,cAAA;IAAA,IAAAC,SAAA,GAAAv7H,YAAA,CAAAq7H,oBAAA;IAAA,SAAAA,qBAAA;MAAAv8I,eAAA,OAAAu8I,oBAAA;MAAA,OAAAE,SAAA,CAAAtgD,KAAA,OAAA75D,SAAA;IAAA;IAAA,OAAA9hC,YAAA,CAAA+7I,oBAAA;EAAA,EAAS9B,aAAa;EAEhD8B,oBAAoB,CAACllJ,SAAS,CAAC0+I,aAAa,GAAG,MAAM;EACrDwG,oBAAoB,CAACllJ,SAAS,CAACujJ,eAAe,GAAGp6H,KAAK;EACtD+7H,oBAAoB,CAACllJ,SAAS,CAACyjJ,oBAAoB,GAAGzwI,mBAAmB;EACzEkyI,oBAAoB,CAACllJ,SAAS,CAAC2jJ,8BAA8B,GAAG9+I,SAAS;EACzEqgJ,oBAAoB,CAACllJ,SAAS,CAAC4jJ,8BAA8B,GAAG/+I,SAAS;;EAEzE;AACD;AACA;EAFC,IAGMwgJ,kBAAkB,0BAAAC,eAAA;IAAA37H,SAAA,CAAA07H,kBAAA,EAAAC,eAAA;IAAA,IAAAC,SAAA,GAAA17H,YAAA,CAAAw7H,kBAAA;IAAA,SAAAA,mBAAA;MAAA18I,eAAA,OAAA08I,kBAAA;MAAA,OAAAE,SAAA,CAAAzgD,KAAA,OAAA75D,SAAA;IAAA;IAAA,OAAA9hC,YAAA,CAAAk8I,kBAAA;EAAA,EAASjC,aAAa;EAE9CiC,kBAAkB,CAACrlJ,SAAS,CAAC0+I,aAAa,GAAG,OAAO;;EAEpD;AACD;AACA;EAFC,IAGM8G,mBAAmB,0BAAAC,eAAA;IAAA97H,SAAA,CAAA67H,mBAAA,EAAAC,eAAA;IAAA,IAAAC,SAAA,GAAA77H,YAAA,CAAA27H,mBAAA;IAAA,SAAAA,oBAAA;MAAA78I,eAAA,OAAA68I,mBAAA;MAAA,OAAAE,SAAA,CAAA5gD,KAAA,OAAA75D,SAAA;IAAA;IAAA,OAAA9hC,YAAA,CAAAq8I,mBAAA;EAAA,EAASpC,aAAa;EAE/CoC,mBAAmB,CAACxlJ,SAAS,CAAC0+I,aAAa,GAAG,QAAQ;;EAEtD;AACD;AACA;EAFC,IAIMiH,2BAA2B,0BAAAC,aAAA;IAAAj8H,SAAA,CAAAg8H,2BAAA,EAAAC,aAAA;IAAA,IAAAC,SAAA,GAAAh8H,YAAA,CAAA87H,2BAAA;IAEhC,SAAAA,4BAAa1F,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;MAAA72I,eAAA,OAAAg9I,2BAAA;MAAA,OAAAE,SAAA,CAAAxjJ,IAAA,OAElE49I,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;IAElE;IAACr2I,YAAA,CAAAw8I,2BAAA;MAAAtlJ,GAAA;MAAAE,KAAA,EAED,SAAA0gJ,aAAc5xG,EAAE,EAAEvP,EAAE,EAAEjnB,CAAC,EAAEknB,EAAE,EAAG;QAE7B,IAAMt8B,MAAM,GAAG,IAAI,CAAC+7I,YAAY;UAC/B38I,MAAM,GAAG,IAAI,CAACq9I,YAAY;UAC1B77F,MAAM,GAAG,IAAI,CAACw5F,SAAS;UAEvBt+H,KAAK,GAAG,CAAE1G,CAAC,GAAGinB,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;QAEjC,IAAIjgB,MAAM,GAAGwvB,EAAE,GAAGgV,MAAM;QAExB,KAAM,IAAIwC,GAAG,GAAGhnC,MAAM,GAAGwkC,MAAM,EAAExkC,MAAM,KAAKgnC,GAAG,EAAEhnC,MAAM,IAAI,CAAC,EAAG;UAE9DkR,UAAU,CAACwD,SAAS,CAAE9wB,MAAM,EAAE,CAAC,EAAEZ,MAAM,EAAEgd,MAAM,GAAGwkC,MAAM,EAAExhD,MAAM,EAAEgd,MAAM,EAAEN,KAAK,CAAE;QAElF;QAEA,OAAO9b,MAAM;MAEd;IAAC;IAAA,OAAAkiJ,2BAAA;EAAA,EA1BwC3F,WAAW;EA8BrD;AACD;AACA;EAFC,IAGM8F,uBAAuB,0BAAAC,eAAA;IAAAp8H,SAAA,CAAAm8H,uBAAA,EAAAC,eAAA;IAAA,IAAAC,SAAA,GAAAn8H,YAAA,CAAAi8H,uBAAA;IAAA,SAAAA,wBAAA;MAAAn9I,eAAA,OAAAm9I,uBAAA;MAAA,OAAAE,SAAA,CAAAlhD,KAAA,OAAA75D,SAAA;IAAA;IAAA9hC,YAAA,CAAA28I,uBAAA;MAAAzlJ,GAAA;MAAAE,KAAA,EAE5B,SAAAojJ,+BAAgClgJ,MAAM,EAAG;QAExC,OAAO,IAAIkiJ,2BAA2B,CAAE,IAAI,CAAC9I,KAAK,EAAE,IAAI,CAACh6I,MAAM,EAAE,IAAI,CAACi7I,YAAY,EAAE,EAAEr6I,MAAM,CAAE;MAE/F;IAAC;IAAA,OAAAqiJ,uBAAA;EAAA,EANoC1C,aAAa;EAUnD0C,uBAAuB,CAAC9lJ,SAAS,CAAC0+I,aAAa,GAAG,YAAY;EAC9D;EACAoH,uBAAuB,CAAC9lJ,SAAS,CAACyjJ,oBAAoB,GAAGxwI,iBAAiB;EAC1E6yI,uBAAuB,CAAC9lJ,SAAS,CAAC4jJ,8BAA8B,GAAG/+I,SAAS;;EAE5E;AACD;AACA;EAFC,IAGMohJ,mBAAmB,0BAAAC,eAAA;IAAAv8H,SAAA,CAAAs8H,mBAAA,EAAAC,eAAA;IAAA,IAAAC,SAAA,GAAAt8H,YAAA,CAAAo8H,mBAAA;IAAA,SAAAA,oBAAA;MAAAt9I,eAAA,OAAAs9I,mBAAA;MAAA,OAAAE,SAAA,CAAArhD,KAAA,OAAA75D,SAAA;IAAA;IAAA,OAAA9hC,YAAA,CAAA88I,mBAAA;EAAA,EAAS7C,aAAa;EAE/C6C,mBAAmB,CAACjmJ,SAAS,CAAC0+I,aAAa,GAAG,QAAQ;EACtDuH,mBAAmB,CAACjmJ,SAAS,CAACujJ,eAAe,GAAGp6H,KAAK;EACrD88H,mBAAmB,CAACjmJ,SAAS,CAACyjJ,oBAAoB,GAAGzwI,mBAAmB;EACxEizI,mBAAmB,CAACjmJ,SAAS,CAAC2jJ,8BAA8B,GAAG9+I,SAAS;EACxEohJ,mBAAmB,CAACjmJ,SAAS,CAAC4jJ,8BAA8B,GAAG/+I,SAAS;;EAExE;AACD;AACA;EAFC,IAGMuhJ,mBAAmB,0BAAAC,eAAA;IAAA18H,SAAA,CAAAy8H,mBAAA,EAAAC,eAAA;IAAA,IAAAC,SAAA,GAAAz8H,YAAA,CAAAu8H,mBAAA;IAAA,SAAAA,oBAAA;MAAAz9I,eAAA,OAAAy9I,mBAAA;MAAA,OAAAE,SAAA,CAAAxhD,KAAA,OAAA75D,SAAA;IAAA;IAAA,OAAA9hC,YAAA,CAAAi9I,mBAAA;EAAA,EAAShD,aAAa;EAE/CgD,mBAAmB,CAACpmJ,SAAS,CAAC0+I,aAAa,GAAG,QAAQ;EAAC,IAEjD6H,aAAa;IAElB,SAAAA,cAAa7/I,IAAI,EAAE8/I,QAAQ,GAAG,CAAE,CAAC,EAAE7I,MAAM,EAAEmC,SAAS,GAAGxsI,wBAAwB,EAAG;MAAA3K,eAAA,OAAA49I,aAAA;MAEjF,IAAI,CAAC7/I,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACi3I,MAAM,GAAGA,MAAM;MACpB,IAAI,CAAC6I,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAAC1G,SAAS,GAAGA,SAAS;MAE1B,IAAI,CAACloI,IAAI,GAAGN,YAAY,EAAE;;MAE1B;MACA,IAAK,IAAI,CAACkvI,QAAQ,GAAG,CAAC,EAAG;QAExB,IAAI,CAACxI,aAAa,EAAE;MAErB;IAED;IAAC70I,YAAA,CAAAo9I,aAAA;MAAAlmJ,GAAA;MAAAE,KAAA,EA+RD,SAAAy9I,cAAA,EAAgB;QAEf,IAAML,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1B,IAAI6I,QAAQ,GAAG,CAAC;QAEhB,KAAM,IAAIpgJ,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGylI,MAAM,CAACx3I,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEnD,IAAMw3I,KAAK,GAAG,IAAI,CAACD,MAAM,CAAEv3I,CAAC,CAAE;UAE9BogJ,QAAQ,GAAGrvI,IAAI,CAACa,GAAG,CAAEwuI,QAAQ,EAAE5I,KAAK,CAACf,KAAK,CAAEe,KAAK,CAACf,KAAK,CAAC12I,MAAM,GAAG,CAAC,CAAE,CAAE;QAEvE;QAEA,IAAI,CAACqgJ,QAAQ,GAAGA,QAAQ;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAnmJ,GAAA;MAAAE,KAAA,EAED,SAAA0iF,KAAA,EAAO;QAEN,KAAM,IAAI78E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACu3I,MAAM,CAACx3I,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE/C,IAAI,CAACu3I,MAAM,CAAEv3I,CAAC,CAAE,CAAC68E,IAAI,CAAE,CAAC,EAAE,IAAI,CAACujE,QAAQ,CAAE;QAE1C;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAnmJ,GAAA;MAAAE,KAAA,EAED,SAAA4jJ,SAAA,EAAW;QAEV,IAAIC,KAAK,GAAG,IAAI;QAEhB,KAAM,IAAIh+I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACu3I,MAAM,CAACx3I,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE/Cg+I,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACzG,MAAM,CAAEv3I,CAAC,CAAE,CAAC+9I,QAAQ,EAAE;QAE7C;QAEA,OAAOC,KAAK;MAEb;IAAC;MAAA/jJ,GAAA;MAAAE,KAAA,EAED,SAAAgkJ,SAAA,EAAW;QAEV,KAAM,IAAIn+I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACu3I,MAAM,CAACx3I,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE/C,IAAI,CAACu3I,MAAM,CAAEv3I,CAAC,CAAE,CAACm+I,QAAQ,EAAE;QAE5B;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAlkJ,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,IAAM4gI,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAIv3I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACu3I,MAAM,CAACx3I,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE/Cu3I,MAAM,CAAC/3I,IAAI,CAAE,IAAI,CAAC+3I,MAAM,CAAEv3I,CAAC,CAAE,CAAC2W,KAAK,EAAE,CAAE;QAExC;QAEA,OAAO,IAAI,IAAI,CAACtW,WAAW,CAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAAC8/I,QAAQ,EAAE7I,MAAM,EAAE,IAAI,CAACmC,SAAS,CAAE;MAEhF;IAAC;MAAAz/I,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,OAAO,IAAI,CAACpiB,WAAW,CAACoiB,MAAM,CAAE,IAAI,CAAE;MAEvC;IAAC;MAAAxoB,GAAA;MAAAE,KAAA,EAvWD,SAAAqrB,MAAc0nG,IAAI,EAAG;QAEpB,IAAMqqB,MAAM,GAAG,EAAE;UAChB8I,UAAU,GAAGnzB,IAAI,CAACqqB,MAAM;UACxB+I,SAAS,GAAG,GAAG,IAAKpzB,IAAI,CAACmqB,GAAG,IAAI,GAAG,CAAE;QAEtC,KAAM,IAAIr3I,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGuuI,UAAU,CAACtgJ,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEvDu3I,MAAM,CAAC/3I,IAAI,CAAE+gJ,kBAAkB,CAAEF,UAAU,CAAErgJ,CAAC,CAAE,CAAE,CAACse,KAAK,CAAEgiI,SAAS,CAAE,CAAE;QAExE;QAEA,IAAMhJ,IAAI,GAAG,IAAI,IAAI,CAAEpqB,IAAI,CAAC5sH,IAAI,EAAE4sH,IAAI,CAACkzB,QAAQ,EAAE7I,MAAM,EAAErqB,IAAI,CAACwsB,SAAS,CAAE;QACzEpC,IAAI,CAAC9lI,IAAI,GAAG07G,IAAI,CAAC17G,IAAI;QAErB,OAAO8lI,IAAI;MAEZ;IAAC;MAAAr9I,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAe60H,IAAI,EAAG;QAErB,IAAMC,MAAM,GAAG,EAAE;UAChBiJ,UAAU,GAAGlJ,IAAI,CAACC,MAAM;QAEzB,IAAMrqB,IAAI,GAAG;UAEZ,MAAM,EAAEoqB,IAAI,CAACh3I,IAAI;UACjB,UAAU,EAAEg3I,IAAI,CAAC8I,QAAQ;UACzB,QAAQ,EAAE7I,MAAM;UAChB,MAAM,EAAED,IAAI,CAAC9lI,IAAI;UACjB,WAAW,EAAE8lI,IAAI,CAACoC;QAEnB,CAAC;QAED,KAAM,IAAI15I,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG0uI,UAAU,CAACzgJ,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEvDu3I,MAAM,CAAC/3I,IAAI,CAAEw9I,aAAa,CAACv6H,MAAM,CAAE+9H,UAAU,CAAExgJ,CAAC,CAAE,CAAE,CAAE;QAEvD;QAEA,OAAOktH,IAAI;MAEZ;IAAC;MAAAjzH,GAAA;MAAAE,KAAA,EAED,SAAAsmJ,8BAAsCngJ,IAAI,EAAEogJ,mBAAmB,EAAErJ,GAAG,EAAEsJ,MAAM,EAAG;QAE9E,IAAMC,eAAe,GAAGF,mBAAmB,CAAC3gJ,MAAM;QAClD,IAAMw3I,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAIv3I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4gJ,eAAe,EAAE5gJ,CAAC,EAAG,EAAG;UAE5C,IAAIy2I,KAAK,GAAG,EAAE;UACd,IAAIh6I,MAAM,GAAG,EAAE;UAEfg6I,KAAK,CAACj3I,IAAI,CACT,CAAEQ,CAAC,GAAG4gJ,eAAe,GAAG,CAAC,IAAKA,eAAe,EAC7C5gJ,CAAC,EACD,CAAEA,CAAC,GAAG,CAAC,IAAK4gJ,eAAe,CAAE;UAE9BnkJ,MAAM,CAAC+C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UAEtB,IAAMoV,KAAK,GAAG4hI,gBAAgB,CAAEC,KAAK,CAAE;UACvCA,KAAK,GAAGE,WAAW,CAAEF,KAAK,EAAE,CAAC,EAAE7hI,KAAK,CAAE;UACtCnY,MAAM,GAAGk6I,WAAW,CAAEl6I,MAAM,EAAE,CAAC,EAAEmY,KAAK,CAAE;;UAExC;UACA;UACA,IAAK,CAAE+rI,MAAM,IAAIlK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,EAAG;YAEnCA,KAAK,CAACj3I,IAAI,CAAEohJ,eAAe,CAAE;YAC7BnkJ,MAAM,CAAC+C,IAAI,CAAE/C,MAAM,CAAE,CAAC,CAAE,CAAE;UAE3B;UAEA86I,MAAM,CAAC/3I,IAAI,CACV,IAAI4/I,mBAAmB,CACtB,yBAAyB,GAAGsB,mBAAmB,CAAE1gJ,CAAC,CAAE,CAACM,IAAI,GAAG,GAAG,EAC/Dm2I,KAAK,EAAEh6I,MAAM,CACb,CAAC6hB,KAAK,CAAE,GAAG,GAAG+4H,GAAG,CAAE,CAAE;QAExB;QAEA,OAAO,IAAI,IAAI,CAAE/2I,IAAI,EAAE,CAAE,CAAC,EAAEi3I,MAAM,CAAE;MAErC;IAAC;MAAAt9I,GAAA;MAAAE,KAAA,EAED,SAAA0mJ,WAAmBC,iBAAiB,EAAExgJ,IAAI,EAAG;QAE5C,IAAIygJ,SAAS,GAAGD,iBAAiB;QAEjC,IAAK,CAAE/9H,KAAK,CAACC,OAAO,CAAE89H,iBAAiB,CAAE,EAAG;UAE3C,IAAMtN,CAAC,GAAGsN,iBAAiB;UAC3BC,SAAS,GAAGvN,CAAC,CAAC9+G,QAAQ,IAAI8+G,CAAC,CAAC9+G,QAAQ,CAAC8O,UAAU,IAAIgwG,CAAC,CAAChwG,UAAU;QAEhE;QAEA,KAAM,IAAIxjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+gJ,SAAS,CAAChhJ,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE7C,IAAK+gJ,SAAS,CAAE/gJ,CAAC,CAAE,CAACM,IAAI,KAAKA,IAAI,EAAG;YAEnC,OAAOygJ,SAAS,CAAE/gJ,CAAC,CAAE;UAEtB;QAED;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAA6mJ,oCAA4C7tE,YAAY,EAAEkkE,GAAG,EAAEsJ,MAAM,EAAG;QAEvE,IAAMM,uBAAuB,GAAG,CAAC,CAAC;;QAElC;QACA;QACA,IAAMC,OAAO,GAAG,oBAAoB;;QAEpC;QACA;QACA,KAAM,IAAIlhJ,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGyoD,YAAY,CAACpzE,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAEzD,IAAMwzE,WAAW,GAAGL,YAAY,CAAEnzE,CAAC,CAAE;UACrC,IAAMmhJ,KAAK,GAAG3tE,WAAW,CAAClzE,IAAI,CAACy6E,KAAK,CAAEmmE,OAAO,CAAE;UAE/C,IAAKC,KAAK,IAAIA,KAAK,CAACphJ,MAAM,GAAG,CAAC,EAAG;YAEhC,IAAMO,IAAI,GAAG6gJ,KAAK,CAAE,CAAC,CAAE;YAEvB,IAAIC,qBAAqB,GAAGH,uBAAuB,CAAE3gJ,IAAI,CAAE;YAE3D,IAAK,CAAE8gJ,qBAAqB,EAAG;cAE9BH,uBAAuB,CAAE3gJ,IAAI,CAAE,GAAG8gJ,qBAAqB,GAAG,EAAE;YAE7D;YAEAA,qBAAqB,CAAC5hJ,IAAI,CAAEg0E,WAAW,CAAE;UAE1C;QAED;QAEA,IAAM6tE,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAM/gJ,MAAI,IAAI2gJ,uBAAuB,EAAG;UAE7CI,KAAK,CAAC7hJ,IAAI,CAAE,IAAI,CAACihJ,6BAA6B,CAAEngJ,MAAI,EAAE2gJ,uBAAuB,CAAE3gJ,MAAI,CAAE,EAAE+2I,GAAG,EAAEsJ,MAAM,CAAE,CAAE;QAEvG;QAEA,OAAOU,KAAK;MAEb;;MAEA;IAAA;MAAApnJ,GAAA;MAAAE,KAAA,EACA,SAAAmnJ,eAAuBv5G,SAAS,EAAEgkF,KAAK,EAAG;QAEzC,IAAK,CAAEhkF,SAAS,EAAG;UAElBrkC,OAAO,CAAChG,KAAK,CAAE,uDAAuD,CAAE;UACxE,OAAO,IAAI;QAEZ;QAEA,IAAM6jJ,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAc1C,SAAS,EAAE2C,SAAS,EAAEC,aAAa,EAAEC,YAAY,EAAEC,UAAU,EAAG;UAEnG;UACA,IAAKF,aAAa,CAAC1hJ,MAAM,KAAK,CAAC,EAAG;YAEjC,IAAM02I,KAAK,GAAG,EAAE;YAChB,IAAMh6I,MAAM,GAAG,EAAE;YAEjBq6I,WAAW,CAAE2K,aAAa,EAAEhL,KAAK,EAAEh6I,MAAM,EAAEilJ,YAAY,CAAE;;YAEzD;YACA,IAAKjL,KAAK,CAAC12I,MAAM,KAAK,CAAC,EAAG;cAEzB4hJ,UAAU,CAACniJ,IAAI,CAAE,IAAIq/I,SAAS,CAAE2C,SAAS,EAAE/K,KAAK,EAAEh6I,MAAM,CAAE,CAAE;YAE7D;UAED;QAED,CAAC;QAED,IAAM86I,MAAM,GAAG,EAAE;QAEjB,IAAMqK,QAAQ,GAAG75G,SAAS,CAACznC,IAAI,IAAI,SAAS;QAC5C,IAAM+2I,GAAG,GAAGtvG,SAAS,CAACsvG,GAAG,IAAI,EAAE;QAC/B,IAAMqC,SAAS,GAAG3xG,SAAS,CAAC2xG,SAAS;;QAErC;QACA,IAAI0G,QAAQ,GAAGr4G,SAAS,CAAChoC,MAAM,IAAI,CAAE,CAAC;QAEtC,IAAM8hJ,eAAe,GAAG95G,SAAS,CAAC+5G,SAAS,IAAI,EAAE;QAEjD,KAAM,IAAI7kI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4kI,eAAe,CAAC9hJ,MAAM,EAAEkd,CAAC,EAAG,EAAG;UAEnD,IAAMwkI,aAAa,GAAGI,eAAe,CAAE5kI,CAAC,CAAE,CAACnc,IAAI;;UAE/C;UACA,IAAK,CAAE2gJ,aAAa,IAAIA,aAAa,CAAC1hJ,MAAM,KAAK,CAAC,EAAG;;UAErD;UACA,IAAK0hJ,aAAa,CAAE,CAAC,CAAE,CAACtuE,YAAY,EAAG;YAEtC;YACA,IAAM4uE,gBAAgB,GAAG,CAAC,CAAC;YAE3B,IAAI1sD,CAAC;YAEL,KAAMA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGosD,aAAa,CAAC1hJ,MAAM,EAAEs1F,CAAC,EAAG,EAAG;cAE7C,IAAKosD,aAAa,CAAEpsD,CAAC,CAAE,CAACliB,YAAY,EAAG;gBAEtC,KAAM,IAAIphE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0vI,aAAa,CAAEpsD,CAAC,CAAE,CAACliB,YAAY,CAACpzE,MAAM,EAAEgS,CAAC,EAAG,EAAG;kBAEnEgwI,gBAAgB,CAAEN,aAAa,CAAEpsD,CAAC,CAAE,CAACliB,YAAY,CAAEphE,CAAC,CAAE,CAAE,GAAG,CAAE,CAAC;gBAE/D;cAED;YAED;;YAEA;YACA;YACA;YACA,KAAM,IAAMiwI,eAAe,IAAID,gBAAgB,EAAG;cAEjD,IAAMtL,KAAK,GAAG,EAAE;cAChB,IAAMh6I,MAAM,GAAG,EAAE;cAEjB,KAAM,IAAIsV,EAAC,GAAG,CAAC,EAAEA,EAAC,KAAK0vI,aAAa,CAAEpsD,CAAC,CAAE,CAACliB,YAAY,CAACpzE,MAAM,EAAE,EAAGgS,EAAC,EAAG;gBAErE,IAAMkwI,YAAY,GAAGR,aAAa,CAAEpsD,CAAC,CAAE;gBAEvCohD,KAAK,CAACj3I,IAAI,CAAEyiJ,YAAY,CAAC91F,IAAI,CAAE;gBAC/B1vD,MAAM,CAAC+C,IAAI,CAAIyiJ,YAAY,CAACzuE,WAAW,KAAKwuE,eAAe,GAAK,CAAC,GAAG,CAAC,CAAE;cAExE;cAEAzK,MAAM,CAAC/3I,IAAI,CAAE,IAAI4/I,mBAAmB,CAAE,wBAAwB,GAAG4C,eAAe,GAAG,GAAG,EAAEvL,KAAK,EAAEh6I,MAAM,CAAE,CAAE;YAE1G;YAEA2jJ,QAAQ,GAAG2B,gBAAgB,CAAChiJ,MAAM,GAAGs3I,GAAG;UAEzC,CAAC,MAAM;YAEN;;YAEA,IAAM6K,QAAQ,GAAG,SAAS,GAAGn2B,KAAK,CAAE9uG,CAAC,CAAE,CAAC3c,IAAI,GAAG,GAAG;YAElDihJ,gBAAgB,CACfvB,mBAAmB,EAAEkC,QAAQ,GAAG,WAAW,EAC3CT,aAAa,EAAE,KAAK,EAAElK,MAAM,CAAE;YAE/BgK,gBAAgB,CACf7B,uBAAuB,EAAEwC,QAAQ,GAAG,aAAa,EACjDT,aAAa,EAAE,KAAK,EAAElK,MAAM,CAAE;YAE/BgK,gBAAgB,CACfvB,mBAAmB,EAAEkC,QAAQ,GAAG,QAAQ,EACxCT,aAAa,EAAE,KAAK,EAAElK,MAAM,CAAE;UAEhC;QAED;QAEA,IAAKA,MAAM,CAACx3I,MAAM,KAAK,CAAC,EAAG;UAE1B,OAAO,IAAI;QAEZ;QAEA,IAAMu3I,IAAI,GAAG,IAAI,IAAI,CAAEsK,QAAQ,EAAExB,QAAQ,EAAE7I,MAAM,EAAEmC,SAAS,CAAE;QAE9D,OAAOpC,IAAI;MAEZ;IAAC;IAAA,OAAA6I,aAAA;EAAA;EAiFF,SAASgC,4BAA4BA,CAAEC,QAAQ,EAAG;IAEjD,QAASA,QAAQ,CAAC3wI,WAAW,EAAE;MAE9B,KAAK,QAAQ;MACb,KAAK,QAAQ;MACb,KAAK,OAAO;MACZ,KAAK,QAAQ;MACb,KAAK,SAAS;QAEb,OAAO2tI,mBAAmB;MAE3B,KAAK,QAAQ;MACb,KAAK,SAAS;MACd,KAAK,SAAS;MACd,KAAK,SAAS;QAEb,OAAOY,mBAAmB;MAE3B,KAAK,OAAO;QAEX,OAAOf,kBAAkB;MAE1B,KAAK,YAAY;QAEhB,OAAOS,uBAAuB;MAE/B,KAAK,MAAM;MACX,KAAK,SAAS;QAEb,OAAOZ,oBAAoB;MAE5B,KAAK,QAAQ;QAEZ,OAAOe,mBAAmB;IAAC;IAI7B,MAAM,IAAI/hJ,KAAK,CAAE,6CAA6C,GAAGskJ,QAAQ,CAAE;EAE5E;EAEA,SAAS7B,kBAAkBA,CAAErzB,IAAI,EAAG;IAEnC,IAAKA,IAAI,CAAClxH,IAAI,KAAKyC,SAAS,EAAG;MAE9B,MAAM,IAAIX,KAAK,CAAE,0DAA0D,CAAE;IAE9E;IAEA,IAAM+gJ,SAAS,GAAGsD,4BAA4B,CAAEj1B,IAAI,CAAClxH,IAAI,CAAE;IAE3D,IAAKkxH,IAAI,CAACupB,KAAK,KAAKh4I,SAAS,EAAG;MAE/B,IAAMg4I,KAAK,GAAG,EAAE;QAAEh6I,MAAM,GAAG,EAAE;MAE7Bq6I,WAAW,CAAE5pB,IAAI,CAACpsH,IAAI,EAAE21I,KAAK,EAAEh6I,MAAM,EAAE,OAAO,CAAE;MAEhDywH,IAAI,CAACupB,KAAK,GAAGA,KAAK;MAClBvpB,IAAI,CAACzwH,MAAM,GAAGA,MAAM;IAErB;;IAEA;IACA,IAAKoiJ,SAAS,CAACr5H,KAAK,KAAK/mB,SAAS,EAAG;MAEpC,OAAOogJ,SAAS,CAACr5H,KAAK,CAAE0nG,IAAI,CAAE;IAE/B,CAAC,MAAM;MAEN;MACA,OAAO,IAAI2xB,SAAS,CAAE3xB,IAAI,CAAC5sH,IAAI,EAAE4sH,IAAI,CAACupB,KAAK,EAAEvpB,IAAI,CAACzwH,MAAM,EAAEywH,IAAI,CAAC+vB,aAAa,CAAE;IAE/E;EAED;EAEA,IAAMoF,KAAK,GAAG;IAEbhiI,OAAO,EAAE,KAAK;IAEdiiI,KAAK,EAAE,CAAC,CAAC;IAETxrI,GAAG,EAAE,SAAAA,IAAW7c,GAAG,EAAEsoJ,IAAI,EAAG;MAE3B,IAAK,IAAI,CAACliI,OAAO,KAAK,KAAK,EAAG;;MAE9B;;MAEA,IAAI,CAACiiI,KAAK,CAAEroJ,GAAG,CAAE,GAAGsoJ,IAAI;IAEzB,CAAC;IAEDnsI,GAAG,EAAE,SAAAA,IAAWnc,GAAG,EAAG;MAErB,IAAK,IAAI,CAAComB,OAAO,KAAK,KAAK,EAAG;;MAE9B;;MAEA,OAAO,IAAI,CAACiiI,KAAK,CAAEroJ,GAAG,CAAE;IAEzB,CAAC;IAED6qC,MAAM,EAAE,SAAAA,OAAW7qC,GAAG,EAAG;MAExB,OAAO,IAAI,CAACqoJ,KAAK,CAAEroJ,GAAG,CAAE;IAEzB,CAAC;IAED+qC,KAAK,EAAE,SAAAA,MAAA,EAAY;MAElB,IAAI,CAACs9G,KAAK,GAAG,CAAC,CAAC;IAEhB;EAED,CAAC;EAAC,IAEIE,cAAc,gBAAAz/I,YAAA,CAEnB,SAAAy/I,eAAaC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;IAAApgJ,eAAA,OAAAigJ,cAAA;IAE1C,IAAMnhG,KAAK,GAAG,IAAI;IAElB,IAAIuhG,SAAS,GAAG,KAAK;IACrB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,WAAW,GAAGtkJ,SAAS;IAC3B,IAAMukJ,QAAQ,GAAG,EAAE;;IAEnB;IACA;;IAEA,IAAI,CAACC,OAAO,GAAGxkJ,SAAS;IACxB,IAAI,CAACgkJ,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,OAAO,GAAGA,OAAO;IAEtB,IAAI,CAACO,SAAS,GAAG,UAAWpgI,GAAG,EAAG;MAEjCggI,UAAU,EAAG;MAEb,IAAKF,SAAS,KAAK,KAAK,EAAG;QAE1B,IAAKvhG,KAAK,CAAC4hG,OAAO,KAAKxkJ,SAAS,EAAG;UAElC4iD,KAAK,CAAC4hG,OAAO,CAAEngI,GAAG,EAAE+/H,WAAW,EAAEC,UAAU,CAAE;QAE9C;MAED;MAEAF,SAAS,GAAG,IAAI;IAEjB,CAAC;IAED,IAAI,CAACO,OAAO,GAAG,UAAWrgI,GAAG,EAAG;MAE/B+/H,WAAW,EAAG;MAEd,IAAKxhG,KAAK,CAACqhG,UAAU,KAAKjkJ,SAAS,EAAG;QAErC4iD,KAAK,CAACqhG,UAAU,CAAE5/H,GAAG,EAAE+/H,WAAW,EAAEC,UAAU,CAAE;MAEjD;MAEA,IAAKD,WAAW,KAAKC,UAAU,EAAG;QAEjCF,SAAS,GAAG,KAAK;QAEjB,IAAKvhG,KAAK,CAACohG,MAAM,KAAKhkJ,SAAS,EAAG;UAEjC4iD,KAAK,CAACohG,MAAM,EAAE;QAEf;MAED;IAED,CAAC;IAED,IAAI,CAACW,SAAS,GAAG,UAAWtgI,GAAG,EAAG;MAEjC,IAAKu+B,KAAK,CAACshG,OAAO,KAAKlkJ,SAAS,EAAG;QAElC4iD,KAAK,CAACshG,OAAO,CAAE7/H,GAAG,CAAE;MAErB;IAED,CAAC;IAED,IAAI,CAACugI,UAAU,GAAG,UAAWvgI,GAAG,EAAG;MAElC,IAAKigI,WAAW,EAAG;QAElB,OAAOA,WAAW,CAAEjgI,GAAG,CAAE;MAE1B;MAEA,OAAOA,GAAG;IAEX,CAAC;IAED,IAAI,CAACwgI,cAAc,GAAG,UAAWzyC,SAAS,EAAG;MAE5CkyC,WAAW,GAAGlyC,SAAS;MAEvB,OAAO,IAAI;IAEZ,CAAC;IAED,IAAI,CAAC0yC,UAAU,GAAG,UAAWC,KAAK,EAAEC,MAAM,EAAG;MAE5CT,QAAQ,CAACxjJ,IAAI,CAAEgkJ,KAAK,EAAEC,MAAM,CAAE;MAE9B,OAAO,IAAI;IAEZ,CAAC;IAED,IAAI,CAACC,aAAa,GAAG,UAAWF,KAAK,EAAG;MAEvC,IAAMlzI,KAAK,GAAG0yI,QAAQ,CAAC9yI,OAAO,CAAEszI,KAAK,CAAE;MAEvC,IAAKlzI,KAAK,KAAK,CAAE,CAAC,EAAG;QAEpB0yI,QAAQ,CAACzyI,MAAM,CAAED,KAAK,EAAE,CAAC,CAAE;MAE5B;MAEA,OAAO,IAAI;IAEZ,CAAC;IAED,IAAI,CAACqzI,UAAU,GAAG,UAAWpB,IAAI,EAAG;MAEnC,KAAM,IAAIviJ,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGqyI,QAAQ,CAACjjJ,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,IAAI,CAAC,EAAG;QAErD,IAAMwjJ,KAAK,GAAGR,QAAQ,CAAEhjJ,CAAC,CAAE;QAC3B,IAAMyjJ,MAAM,GAAGT,QAAQ,CAAEhjJ,CAAC,GAAG,CAAC,CAAE;QAEhC,IAAKwjJ,KAAK,CAAC5/I,MAAM,EAAG4/I,KAAK,CAAC1oE,SAAS,GAAG,CAAC,CAAC,CAAC;;QAEzC,IAAK0oE,KAAK,CAACniI,IAAI,CAAEkhI,IAAI,CAAE,EAAG;UAEzB,OAAOkB,MAAM;QAEd;MAED;MAEA,OAAO,IAAI;IAEZ,CAAC;EAEF,CAAC;EAIF,IAAMG,qBAAqB,GAAG,aAAc,IAAIpB,cAAc,EAAE;EAAC,IAE3DqB,MAAM;IAEX,SAAAA,OAAaC,OAAO,EAAG;MAAAvhJ,eAAA,OAAAshJ,MAAA;MAEtB,IAAI,CAACC,OAAO,GAAKA,OAAO,KAAKrlJ,SAAS,GAAKqlJ,OAAO,GAAGF,qBAAqB;MAE1E,IAAI,CAACG,WAAW,GAAG,WAAW;MAC9B,IAAI,CAACC,eAAe,GAAG,KAAK;MAC5B,IAAI,CAACppE,IAAI,GAAG,EAAE;MACd,IAAI,CAACqpE,YAAY,GAAG,EAAE;MACtB,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;IAExB;IAACnhJ,YAAA,CAAA8gJ,MAAA;MAAA5pJ,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAA,CAAM,wCAAyC,CAAC;IAAC;MAAAlqJ,GAAA;MAAAE,KAAA,EAEjD,SAAAiqJ,UAAWthI,GAAG,EAAE4/H,UAAU,EAAG;QAE5B,IAAMrhG,KAAK,GAAG,IAAI;QAElB,OAAO,IAAIzgD,OAAO,CAAE,UAAW1D,OAAO,EAAEC,MAAM,EAAG;UAEhDkkD,KAAK,CAAC8iG,IAAI,CAAErhI,GAAG,EAAE5lB,OAAO,EAAEwlJ,UAAU,EAAEvlJ,MAAM,CAAE;QAE/C,CAAC,CAAE;MAEJ;IAAC;MAAAlD,GAAA;MAAAE,KAAA,EAED,SAAAqrB,MAAA,CAAO,YAAa,CAAC;IAAC;MAAAvrB,GAAA;MAAAE,KAAA,EAEtB,SAAAkqJ,eAAgBN,WAAW,EAAG;QAE7B,IAAI,CAACA,WAAW,GAAGA,WAAW;QAC9B,OAAO,IAAI;MAEZ;IAAC;MAAA9pJ,GAAA;MAAAE,KAAA,EAED,SAAAmqJ,mBAAoBnqJ,KAAK,EAAG;QAE3B,IAAI,CAAC6pJ,eAAe,GAAG7pJ,KAAK;QAC5B,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAoqJ,QAAS3pE,IAAI,EAAG;QAEf,IAAI,CAACA,IAAI,GAAGA,IAAI;QAChB,OAAO,IAAI;MAEZ;IAAC;MAAA3gF,GAAA;MAAAE,KAAA,EAED,SAAAqqJ,gBAAiBP,YAAY,EAAG;QAE/B,IAAI,CAACA,YAAY,GAAGA,YAAY;QAChC,OAAO,IAAI;MAEZ;IAAC;MAAAhqJ,GAAA;MAAAE,KAAA,EAED,SAAAsqJ,iBAAkBP,aAAa,EAAG;QAEjC,IAAI,CAACA,aAAa,GAAGA,aAAa;QAClC,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAL,MAAA;EAAA;EAIF,IAAMa,OAAO,GAAG,CAAC,CAAC;EAAC,IAEbC,SAAS,0BAAAC,MAAA;IAAArhI,SAAA,CAAAohI,SAAA,EAAAC,MAAA;IAAA,IAAAC,SAAA,GAAAphI,YAAA,CAAAkhI,SAAA;IAEd,SAAAA,UAAarkC,OAAO,EAAEwkC,QAAQ,EAAG;MAAA,IAAAC,OAAA;MAAAxiJ,eAAA,OAAAoiJ,SAAA;MAEhCI,OAAA,GAAAF,SAAA,CAAA5oJ,IAAA,OAAOqkH,OAAO;MACdykC,OAAA,CAAKD,QAAQ,GAAGA,QAAQ;MAAC,OAAAC,OAAA;IAE1B;IAAC,OAAAhiJ,YAAA,CAAA4hJ,SAAA;EAAA,gBAAAK,gBAAA,CAPsBlnJ,KAAK;EAAA,IAWvBmnJ,UAAU,0BAAAC,OAAA;IAAA3hI,SAAA,CAAA0hI,UAAA,EAAAC,OAAA;IAAA,IAAAC,SAAA,GAAA1hI,YAAA,CAAAwhI,UAAA;IAEf,SAAAA,WAAanB,OAAO,EAAG;MAAAvhJ,eAAA,OAAA0iJ,UAAA;MAAA,OAAAE,SAAA,CAAAlpJ,IAAA,OAEf6nJ,OAAO;IAEf;IAAC/gJ,YAAA,CAAAkiJ,UAAA;MAAAhrJ,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAAA,IAAAyC,OAAA;QAExC,IAAKtiI,GAAG,KAAKrkB,SAAS,EAAGqkB,GAAG,GAAG,EAAE;QAEjC,IAAK,IAAI,CAAC83D,IAAI,KAAKn8E,SAAS,EAAGqkB,GAAG,GAAG,IAAI,CAAC83D,IAAI,GAAG93D,GAAG;QAEpDA,GAAG,GAAG,IAAI,CAACghI,OAAO,CAACT,UAAU,CAAEvgI,GAAG,CAAE;QAEpC,IAAMorC,MAAM,GAAGm0F,KAAK,CAACjsI,GAAG,CAAE0M,GAAG,CAAE;QAE/B,IAAKorC,MAAM,KAAKzvD,SAAS,EAAG;UAE3B,IAAI,CAACqlJ,OAAO,CAACZ,SAAS,CAAEpgI,GAAG,CAAE;UAE7BuiI,UAAU,CAAE,YAAM;YAEjB,IAAK5C,MAAM,EAAGA,MAAM,CAAEv0F,MAAM,CAAE;YAE9Bk3F,OAAI,CAACtB,OAAO,CAACX,OAAO,CAAErgI,GAAG,CAAE;UAE5B,CAAC,EAAE,CAAC,CAAE;UAEN,OAAOorC,MAAM;QAEd;;QAEA;;QAEA,IAAKw2F,OAAO,CAAE5hI,GAAG,CAAE,KAAKrkB,SAAS,EAAG;UAEnCimJ,OAAO,CAAE5hI,GAAG,CAAE,CAACtjB,IAAI,CAAE;YAEpBijJ,MAAM,EAAEA,MAAM;YACdC,UAAU,EAAEA,UAAU;YACtBC,OAAO,EAAEA;UAEV,CAAC,CAAE;UAEH;QAED;;QAEA;QACA+B,OAAO,CAAE5hI,GAAG,CAAE,GAAG,EAAE;QAEnB4hI,OAAO,CAAE5hI,GAAG,CAAE,CAACtjB,IAAI,CAAE;UACpBijJ,MAAM,EAAEA,MAAM;UACdC,UAAU,EAAEA,UAAU;UACtBC,OAAO,EAAEA;QACV,CAAC,CAAE;;QAEH;QACA,IAAM2C,GAAG,GAAG,IAAIC,OAAO,CAAEziI,GAAG,EAAE;UAC7B0iI,OAAO,EAAE,IAAIC,OAAO,CAAE,IAAI,CAACvB,aAAa,CAAE;UAC1CwB,WAAW,EAAE,IAAI,CAAC1B,eAAe,GAAG,SAAS,GAAG;UAChD;QACD,CAAC,CAAE;;QAEH;QACA,IAAM2B,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;;QAEtC;QACAC,KAAK,CAAEP,GAAG,CAAE,CACV9nJ,IAAI,CAAE,UAAAsnJ,QAAQ,EAAI;UAElB,IAAKA,QAAQ,CAACtoE,MAAM,KAAK,GAAG,IAAIsoE,QAAQ,CAACtoE,MAAM,KAAK,CAAC,EAAG;YAEvD;YACA;;YAEA,IAAKsoE,QAAQ,CAACtoE,MAAM,KAAK,CAAC,EAAG;cAE5B94E,OAAO,CAACC,IAAI,CAAE,2CAA2C,CAAE;YAE5D;;YAEA;;YAEA,IAAK,OAAOmiJ,cAAc,KAAK,WAAW,IAAIhB,QAAQ,CAACiB,IAAI,KAAKtnJ,SAAS,IAAIqmJ,QAAQ,CAACiB,IAAI,CAACC,SAAS,KAAKvnJ,SAAS,EAAG;cAEpH,OAAOqmJ,QAAQ;YAEhB;YAEA,IAAMmB,SAAS,GAAGvB,OAAO,CAAE5hI,GAAG,CAAE;YAChC,IAAMojI,MAAM,GAAGpB,QAAQ,CAACiB,IAAI,CAACC,SAAS,EAAE;;YAExC;YACA;YACA,IAAMG,aAAa,GAAGrB,QAAQ,CAACU,OAAO,CAACpvI,GAAG,CAAE,gBAAgB,CAAE,IAAI0uI,QAAQ,CAACU,OAAO,CAACpvI,GAAG,CAAE,aAAa,CAAE;YACvG,IAAMgwI,KAAK,GAAGD,aAAa,GAAG3yG,QAAQ,CAAE2yG,aAAa,CAAE,GAAG,CAAC;YAC3D,IAAME,gBAAgB,GAAGD,KAAK,KAAK,CAAC;YACpC,IAAIE,MAAM,GAAG,CAAC;;YAEd;YACA,IAAMC,MAAM,GAAG,IAAIT,cAAc,CAAE;cAClCtrG,KAAK,WAAAA,MAAE+4D,UAAU,EAAG;gBAEnBizC,QAAQ,EAAE;gBAEV,SAASA,QAAQA,CAAA,EAAG;kBAEnBN,MAAM,CAACO,IAAI,EAAE,CAACjpJ,IAAI,CAAE,UAAE;oBAAEe,IAAI,EAAJA,IAAI;oBAAEpE,KAAK,EAALA;kBAAM,CAAC,EAAM;oBAE1C,IAAKoE,IAAI,EAAG;sBAEXg1G,UAAU,CAACmzC,KAAK,EAAE;oBAEnB,CAAC,MAAM;sBAENJ,MAAM,IAAInsJ,KAAK,CAACwsJ,UAAU;sBAE1B,IAAMl2I,KAAK,GAAG,IAAIm2I,aAAa,CAAE,UAAU,EAAE;wBAAEP,gBAAgB,EAAhBA,gBAAgB;wBAAEC,MAAM,EAANA,MAAM;wBAAEF,KAAK,EAALA;sBAAM,CAAC,CAAE;sBAClF,KAAM,IAAIpmJ,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGu7H,SAAS,CAAClmJ,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;wBAEtD,IAAMiuB,QAAQ,GAAGg4H,SAAS,CAAEjmJ,CAAC,CAAE;wBAC/B,IAAKiuB,QAAQ,CAACy0H,UAAU,EAAGz0H,QAAQ,CAACy0H,UAAU,CAAEjyI,KAAK,CAAE;sBAExD;sBAEA8iG,UAAU,CAACszC,OAAO,CAAE1sJ,KAAK,CAAE;sBAC3BqsJ,QAAQ,EAAE;oBAEX;kBAED,CAAC,CAAE;gBAEJ;cAED;YAED,CAAC,CAAE;YAEH,OAAO,IAAIM,QAAQ,CAAEP,MAAM,CAAE;UAE9B,CAAC,MAAM;YAEN,MAAM,IAAI5B,SAAS,gBAAA7jI,MAAA,CAAgBgkI,QAAQ,CAAChiI,GAAG,wBAAAhC,MAAA,CAAoBgkI,QAAQ,CAACtoE,MAAM,QAAA17D,MAAA,CAAKgkI,QAAQ,CAACiC,UAAU,GAAIjC,QAAQ,CAAE;UAEzH;QAED,CAAC,CAAE,CACFtnJ,IAAI,CAAE,UAAAsnJ,QAAQ,EAAI;UAElB,QAASc,YAAY;YAEpB,KAAK,aAAa;cAEjB,OAAOd,QAAQ,CAACkC,WAAW,EAAE;YAE9B,KAAK,MAAM;cAEV,OAAOlC,QAAQ,CAACmC,IAAI,EAAE;YAEvB,KAAK,UAAU;cAEd,OAAOnC,QAAQ,CAACoC,IAAI,EAAE,CACpB1pJ,IAAI,CAAE,UAAA0pJ,IAAI,EAAI;gBAEd,IAAMC,MAAM,GAAG,IAAIC,SAAS,EAAE;gBAC9B,OAAOD,MAAM,CAACE,eAAe,CAAEH,IAAI,EAAEvB,QAAQ,CAAE;cAEhD,CAAC,CAAE;YAEL,KAAK,MAAM;cAEV,OAAOb,QAAQ,CAAC53B,IAAI,EAAE;YAEvB;cAEC,IAAKy4B,QAAQ,KAAKlnJ,SAAS,EAAG;gBAE7B,OAAOqmJ,QAAQ,CAACoC,IAAI,EAAE;cAEvB,CAAC,MAAM;gBAEN;gBACA,IAAMI,EAAE,GAAG,yBAAyB;gBACpC,IAAMh0G,IAAI,GAAGg0G,EAAE,CAACh0G,IAAI,CAAEqyG,QAAQ,CAAE;gBAChC,IAAM4B,KAAK,GAAGj0G,IAAI,IAAIA,IAAI,CAAE,CAAC,CAAE,GAAGA,IAAI,CAAE,CAAC,CAAE,CAAC7hC,WAAW,EAAE,GAAGhT,SAAS;gBACrE,IAAM+oJ,OAAO,GAAG,IAAIC,WAAW,CAAEF,KAAK,CAAE;gBACxC,OAAOzC,QAAQ,CAACkC,WAAW,EAAE,CAACxpJ,IAAI,CAAE,UAAAkgD,EAAE;kBAAA,OAAI8pG,OAAO,CAACE,MAAM,CAAEhqG,EAAE,CAAE;gBAAA,EAAE;cAEjE;UAAC;QAIJ,CAAC,CAAE,CACFlgD,IAAI,CAAE,UAAA6kB,IAAI,EAAI;UAEd;UACA;UACAggI,KAAK,CAACvrI,GAAG,CAAEgM,GAAG,EAAET,IAAI,CAAE;UAEtB,IAAM4jI,SAAS,GAAGvB,OAAO,CAAE5hI,GAAG,CAAE;UAChC,OAAO4hI,OAAO,CAAE5hI,GAAG,CAAE;UAErB,KAAM,IAAI9iB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGu7H,SAAS,CAAClmJ,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;YAEtD,IAAMiuB,QAAQ,GAAGg4H,SAAS,CAAEjmJ,CAAC,CAAE;YAC/B,IAAKiuB,QAAQ,CAACw0H,MAAM,EAAGx0H,QAAQ,CAACw0H,MAAM,CAAEpgI,IAAI,CAAE;UAE/C;QAED,CAAC,CAAE,CACFlgB,KAAK,CAAE,UAAAnH,GAAG,EAAI;UAEd;;UAEA,IAAMirJ,SAAS,GAAGvB,OAAO,CAAE5hI,GAAG,CAAE;UAEhC,IAAKmjI,SAAS,KAAKxnJ,SAAS,EAAG;YAE9B;YACA2mJ,OAAI,CAACtB,OAAO,CAACV,SAAS,CAAEtgI,GAAG,CAAE;YAC7B,MAAM9nB,GAAG;UAEV;UAEA,OAAO0pJ,OAAO,CAAE5hI,GAAG,CAAE;UAErB,KAAM,IAAI9iB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGu7H,SAAS,CAAClmJ,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;YAEtD,IAAMiuB,QAAQ,GAAGg4H,SAAS,CAAEjmJ,CAAC,CAAE;YAC/B,IAAKiuB,QAAQ,CAAC00H,OAAO,EAAG10H,QAAQ,CAAC00H,OAAO,CAAE3nJ,GAAG,CAAE;UAEhD;UAEAoqJ,OAAI,CAACtB,OAAO,CAACV,SAAS,CAAEtgI,GAAG,CAAE;QAE9B,CAAC,CAAE,CACF6kI,OAAO,CAAE,YAAM;UAEfvC,OAAI,CAACtB,OAAO,CAACX,OAAO,CAAErgI,GAAG,CAAE;QAE5B,CAAC,CAAE;QAEJ,IAAI,CAACghI,OAAO,CAACZ,SAAS,CAAEpgI,GAAG,CAAE;MAE9B;IAAC;MAAA7oB,GAAA;MAAAE,KAAA,EAED,SAAAytJ,gBAAiBztJ,KAAK,EAAG;QAExB,IAAI,CAACyrJ,YAAY,GAAGzrJ,KAAK;QACzB,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAA0tJ,YAAa1tJ,KAAK,EAAG;QAEpB,IAAI,CAACwrJ,QAAQ,GAAGxrJ,KAAK;QACrB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA8qJ,UAAA;EAAA,EAtQuBpB,MAAM;EAAA,IA0QzBiE,eAAe,0BAAAC,QAAA;IAAAxkI,SAAA,CAAAukI,eAAA,EAAAC,QAAA;IAAA,IAAAC,SAAA,GAAAvkI,YAAA,CAAAqkI,eAAA;IAEpB,SAAAA,gBAAahE,OAAO,EAAG;MAAAvhJ,eAAA,OAAAulJ,eAAA;MAAA,OAAAE,SAAA,CAAA/rJ,IAAA,OAEf6nJ,OAAO;IAEf;IAAC/gJ,YAAA,CAAA+kJ,eAAA;MAAA7tJ,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAExC,IAAMthG,KAAK,GAAG,IAAI;QAElB,IAAMoiG,MAAM,GAAG,IAAIwB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;QAC7CL,MAAM,CAACc,OAAO,CAAE,IAAI,CAAC3pE,IAAI,CAAE;QAC3B6oE,MAAM,CAACgB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;QAC7CT,MAAM,CAACa,kBAAkB,CAAE,IAAI,CAACN,eAAe,CAAE;QACjDP,MAAM,CAACU,IAAI,CAAErhI,GAAG,EAAE,UAAWokI,IAAI,EAAG;UAEnC,IAAI;YAEHzE,MAAM,CAAEphG,KAAK,CAAC77B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE0hI,IAAI,CAAE,CAAE,CAAE;UAE5C,CAAC,CAAC,OAAQxvI,CAAC,EAAG;YAEb,IAAKirI,OAAO,EAAG;cAEdA,OAAO,CAAEjrI,CAAC,CAAE;YAEb,CAAC,MAAM;cAENhU,OAAO,CAAChG,KAAK,CAAEga,CAAC,CAAE;YAEnB;YAEA2pC,KAAK,CAACyiG,OAAO,CAACV,SAAS,CAAEtgI,GAAG,CAAE;UAE/B;QAED,CAAC,EAAE4/H,UAAU,EAAEC,OAAO,CAAE;MAEzB;IAAC;MAAA1oJ,GAAA;MAAAE,KAAA,EAED,SAAAqrB,MAAO0nG,IAAI,EAAG;QAEb,IAAM1pF,UAAU,GAAG,EAAE;QAErB,KAAM,IAAIxjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGktH,IAAI,CAACntH,MAAM,EAAEC,CAAC,EAAG,EAAG;UAExC,IAAMs3I,IAAI,GAAG6I,aAAa,CAAC36H,KAAK,CAAE0nG,IAAI,CAAEltH,CAAC,CAAE,CAAE;UAE7CwjC,UAAU,CAAChkC,IAAI,CAAE83I,IAAI,CAAE;QAExB;QAEA,OAAO9zG,UAAU;MAElB;IAAC;IAAA,OAAAskH,eAAA;EAAA,EAxD4BjE,MAAM;EA4DpC;AACD;AACA;AACA;AACA;EAJC,IAMMoE,uBAAuB,0BAAAC,QAAA;IAAA3kI,SAAA,CAAA0kI,uBAAA,EAAAC,QAAA;IAAA,IAAAC,SAAA,GAAA1kI,YAAA,CAAAwkI,uBAAA;IAE5B,SAAAA,wBAAanE,OAAO,EAAG;MAAAvhJ,eAAA,OAAA0lJ,uBAAA;MAAA,OAAAE,SAAA,CAAAlsJ,IAAA,OAEf6nJ,OAAO;IAEf;IAAC/gJ,YAAA,CAAAklJ,uBAAA;MAAAhuJ,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAExC,IAAMthG,KAAK,GAAG,IAAI;QAElB,IAAMz+B,MAAM,GAAG,EAAE;QAEjB,IAAM4F,OAAO,GAAG,IAAI+pG,iBAAiB,EAAE;QAEvC,IAAMkxB,MAAM,GAAG,IAAIwB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;QAC7CL,MAAM,CAACc,OAAO,CAAE,IAAI,CAAC3pE,IAAI,CAAE;QAC3B6oE,MAAM,CAACmE,eAAe,CAAE,aAAa,CAAE;QACvCnE,MAAM,CAACgB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;QAC7CT,MAAM,CAACa,kBAAkB,CAAEjjG,KAAK,CAAC2iG,eAAe,CAAE;QAElD,IAAIsC,MAAM,GAAG,CAAC;QAEd,SAAS8B,WAAWA,CAAEpoJ,CAAC,EAAG;UAEzByjJ,MAAM,CAACU,IAAI,CAAErhI,GAAG,CAAE9iB,CAAC,CAAE,EAAE,UAAWqf,MAAM,EAAG;YAE1C,IAAMgpI,QAAQ,GAAGhnG,KAAK,CAAC77B,KAAK,CAAEnG,MAAM,EAAE,IAAI,CAAE;YAE5CuD,MAAM,CAAE5iB,CAAC,CAAE,GAAG;cACbyhB,KAAK,EAAE4mI,QAAQ,CAAC5mI,KAAK;cACrBC,MAAM,EAAE2mI,QAAQ,CAAC3mI,MAAM;cACvBuC,MAAM,EAAEokI,QAAQ,CAACpkI,MAAM;cACvBQ,OAAO,EAAE4jI,QAAQ,CAAC5jI;YACnB,CAAC;YAED6hI,MAAM,IAAI,CAAC;YAEX,IAAKA,MAAM,KAAK,CAAC,EAAG;cAEnB,IAAK+B,QAAQ,CAACC,WAAW,KAAK,CAAC,EAAG9/H,OAAO,CAACxE,SAAS,GAAGhb,YAAY;cAElEwf,OAAO,CAACpH,KAAK,GAAGwB,MAAM;cACtB4F,OAAO,CAACvE,MAAM,GAAGokI,QAAQ,CAACpkI,MAAM;cAChCuE,OAAO,CAAC9C,WAAW,GAAG,IAAI;cAE1B,IAAK+8H,MAAM,EAAGA,MAAM,CAAEj6H,OAAO,CAAE;YAEhC;UAED,CAAC,EAAEk6H,UAAU,EAAEC,OAAO,CAAE;QAEzB;QAEA,IAAK5/H,KAAK,CAACC,OAAO,CAAEF,GAAG,CAAE,EAAG;UAE3B,KAAM,IAAI9iB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG5H,GAAG,CAAC/iB,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE,EAAG1qB,CAAC,EAAG;YAEhDooJ,WAAW,CAAEpoJ,CAAC,CAAE;UAEjB;QAED,CAAC,MAAM;UAEN;;UAEAyjJ,MAAM,CAACU,IAAI,CAAErhI,GAAG,EAAE,UAAWzD,MAAM,EAAG;YAErC,IAAMgpI,QAAQ,GAAGhnG,KAAK,CAAC77B,KAAK,CAAEnG,MAAM,EAAE,IAAI,CAAE;YAE5C,IAAKgpI,QAAQ,CAACE,SAAS,EAAG;cAEzB,IAAMvf,KAAK,GAAGqf,QAAQ,CAAC5jI,OAAO,CAAC1kB,MAAM,GAAGsoJ,QAAQ,CAACC,WAAW;cAE5D,KAAM,IAAIvrI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGisH,KAAK,EAAEjsH,CAAC,EAAG,EAAG;gBAElC6F,MAAM,CAAE7F,CAAC,CAAE,GAAG;kBAAE0H,OAAO,EAAE;gBAAG,CAAC;gBAE7B,KAAM,IAAIzkB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGqoJ,QAAQ,CAACC,WAAW,EAAEtoJ,IAAC,EAAG,EAAG;kBAEjD4iB,MAAM,CAAE7F,CAAC,CAAE,CAAC0H,OAAO,CAACjlB,IAAI,CAAE6oJ,QAAQ,CAAC5jI,OAAO,CAAE1H,CAAC,GAAGsrI,QAAQ,CAACC,WAAW,GAAGtoJ,IAAC,CAAE,CAAE;kBAC5E4iB,MAAM,CAAE7F,CAAC,CAAE,CAACkH,MAAM,GAAGokI,QAAQ,CAACpkI,MAAM;kBACpCrB,MAAM,CAAE7F,CAAC,CAAE,CAAC0E,KAAK,GAAG4mI,QAAQ,CAAC5mI,KAAK;kBAClCmB,MAAM,CAAE7F,CAAC,CAAE,CAAC2E,MAAM,GAAG2mI,QAAQ,CAAC3mI,MAAM;gBAErC;cAED;cAEA8G,OAAO,CAACpH,KAAK,GAAGwB,MAAM;YAEvB,CAAC,MAAM;cAEN4F,OAAO,CAACpH,KAAK,CAACK,KAAK,GAAG4mI,QAAQ,CAAC5mI,KAAK;cACpC+G,OAAO,CAACpH,KAAK,CAACM,MAAM,GAAG2mI,QAAQ,CAAC3mI,MAAM;cACtC8G,OAAO,CAAC/D,OAAO,GAAG4jI,QAAQ,CAAC5jI,OAAO;YAEnC;YAEA,IAAK4jI,QAAQ,CAACC,WAAW,KAAK,CAAC,EAAG;cAEjC9/H,OAAO,CAACxE,SAAS,GAAGhb,YAAY;YAEjC;YAEAwf,OAAO,CAACvE,MAAM,GAAGokI,QAAQ,CAACpkI,MAAM;YAChCuE,OAAO,CAAC9C,WAAW,GAAG,IAAI;YAE1B,IAAK+8H,MAAM,EAAGA,MAAM,CAAEj6H,OAAO,CAAE;UAEhC,CAAC,EAAEk6H,UAAU,EAAEC,OAAO,CAAE;QAEzB;QAEA,OAAOn6H,OAAO;MAEf;IAAC;IAAA,OAAAy/H,uBAAA;EAAA,EArHoCpE,MAAM;EAAA,IAyHtC2E,WAAW,0BAAAC,QAAA;IAAAllI,SAAA,CAAAilI,WAAA,EAAAC,QAAA;IAAA,IAAAC,SAAA,GAAAjlI,YAAA,CAAA+kI,WAAA;IAEhB,SAAAA,YAAa1E,OAAO,EAAG;MAAAvhJ,eAAA,OAAAimJ,WAAA;MAAA,OAAAE,SAAA,CAAAzsJ,IAAA,OAEf6nJ,OAAO;IAEf;IAAC/gJ,YAAA,CAAAylJ,WAAA;MAAAvuJ,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAExC,IAAK,IAAI,CAAC/nE,IAAI,KAAKn8E,SAAS,EAAGqkB,GAAG,GAAG,IAAI,CAAC83D,IAAI,GAAG93D,GAAG;QAEpDA,GAAG,GAAG,IAAI,CAACghI,OAAO,CAACT,UAAU,CAAEvgI,GAAG,CAAE;QAEpC,IAAMu+B,KAAK,GAAG,IAAI;QAElB,IAAM6M,MAAM,GAAGm0F,KAAK,CAACjsI,GAAG,CAAE0M,GAAG,CAAE;QAE/B,IAAKorC,MAAM,KAAKzvD,SAAS,EAAG;UAE3B4iD,KAAK,CAACyiG,OAAO,CAACZ,SAAS,CAAEpgI,GAAG,CAAE;UAE9BuiI,UAAU,CAAE,YAAY;YAEvB,IAAK5C,MAAM,EAAGA,MAAM,CAAEv0F,MAAM,CAAE;YAE9B7M,KAAK,CAACyiG,OAAO,CAACX,OAAO,CAAErgI,GAAG,CAAE;UAE7B,CAAC,EAAE,CAAC,CAAE;UAEN,OAAOorC,MAAM;QAEd;QAEA,IAAM9sC,KAAK,GAAG9B,eAAe,CAAE,KAAK,CAAE;QAEtC,SAASqpI,WAAWA,CAAA,EAAG;UAEtBC,oBAAoB,EAAE;UAEtBvG,KAAK,CAACvrI,GAAG,CAAEgM,GAAG,EAAE,IAAI,CAAE;UAEtB,IAAK2/H,MAAM,EAAGA,MAAM,CAAE,IAAI,CAAE;UAE5BphG,KAAK,CAACyiG,OAAO,CAACX,OAAO,CAAErgI,GAAG,CAAE;QAE7B;QAEA,SAAS+lI,YAAYA,CAAEp4I,KAAK,EAAG;UAE9Bm4I,oBAAoB,EAAE;UAEtB,IAAKjG,OAAO,EAAGA,OAAO,CAAElyI,KAAK,CAAE;UAE/B4wC,KAAK,CAACyiG,OAAO,CAACV,SAAS,CAAEtgI,GAAG,CAAE;UAC9Bu+B,KAAK,CAACyiG,OAAO,CAACX,OAAO,CAAErgI,GAAG,CAAE;QAE7B;QAEA,SAAS8lI,oBAAoBA,CAAA,EAAG;UAE/BxnI,KAAK,CAAChR,mBAAmB,CAAE,MAAM,EAAEu4I,WAAW,EAAE,KAAK,CAAE;UACvDvnI,KAAK,CAAChR,mBAAmB,CAAE,OAAO,EAAEy4I,YAAY,EAAE,KAAK,CAAE;QAE1D;QAEAznI,KAAK,CAACtR,gBAAgB,CAAE,MAAM,EAAE64I,WAAW,EAAE,KAAK,CAAE;QACpDvnI,KAAK,CAACtR,gBAAgB,CAAE,OAAO,EAAE+4I,YAAY,EAAE,KAAK,CAAE;QAEtD,IAAK/lI,GAAG,CAACxhB,KAAK,CAAE,CAAC,EAAE,CAAC,CAAE,KAAK,OAAO,EAAG;UAEpC,IAAK,IAAI,CAACyiJ,WAAW,KAAKtlJ,SAAS,EAAG2iB,KAAK,CAAC2iI,WAAW,GAAG,IAAI,CAACA,WAAW;QAE3E;QAEA1iG,KAAK,CAACyiG,OAAO,CAACZ,SAAS,CAAEpgI,GAAG,CAAE;QAE9B1B,KAAK,CAACE,GAAG,GAAGwB,GAAG;QAEf,OAAO1B,KAAK;MAEb;IAAC;IAAA,OAAAonI,WAAA;EAAA,EAjFwB3E,MAAM;EAAA,IAqF1BiF,iBAAiB,0BAAAC,QAAA;IAAAxlI,SAAA,CAAAulI,iBAAA,EAAAC,QAAA;IAAA,IAAAC,SAAA,GAAAvlI,YAAA,CAAAqlI,iBAAA;IAEtB,SAAAA,kBAAahF,OAAO,EAAG;MAAAvhJ,eAAA,OAAAumJ,iBAAA;MAAA,OAAAE,SAAA,CAAA/sJ,IAAA,OAEf6nJ,OAAO;IAEf;IAAC/gJ,YAAA,CAAA+lJ,iBAAA;MAAA7uJ,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAM8E,IAAI,EAAExG,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAEzC,IAAMn6H,OAAO,GAAG,IAAIw/B,WAAW,EAAE;QAEjC,IAAMy7F,MAAM,GAAG,IAAI+E,WAAW,CAAE,IAAI,CAAC1E,OAAO,CAAE;QAC9CL,MAAM,CAACY,cAAc,CAAE,IAAI,CAACN,WAAW,CAAE;QACzCN,MAAM,CAACc,OAAO,CAAE,IAAI,CAAC3pE,IAAI,CAAE;QAE3B,IAAI0rE,MAAM,GAAG,CAAC;QAEd,SAAS8B,WAAWA,CAAEpoJ,CAAC,EAAG;UAEzByjJ,MAAM,CAACU,IAAI,CAAE8E,IAAI,CAAEjpJ,CAAC,CAAE,EAAE,UAAWohB,KAAK,EAAG;YAE1CoH,OAAO,CAAC5F,MAAM,CAAE5iB,CAAC,CAAE,GAAGohB,KAAK;YAE3BklI,MAAM,EAAG;YAET,IAAKA,MAAM,KAAK,CAAC,EAAG;cAEnB99H,OAAO,CAAC9C,WAAW,GAAG,IAAI;cAE1B,IAAK+8H,MAAM,EAAGA,MAAM,CAAEj6H,OAAO,CAAE;YAEhC;UAED,CAAC,EAAE/pB,SAAS,EAAEkkJ,OAAO,CAAE;QAExB;QAEA,KAAM,IAAI3iJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGipJ,IAAI,CAAClpJ,MAAM,EAAE,EAAGC,CAAC,EAAG;UAExCooJ,WAAW,CAAEpoJ,CAAC,CAAE;QAEjB;QAEA,OAAOwoB,OAAO;MAEf;IAAC;IAAA,OAAAsgI,iBAAA;EAAA,EA9C8BjF,MAAM;EAkDtC;AACD;AACA;AACA;AACA;EAJC,IAMMqF,iBAAiB,0BAAAC,QAAA;IAAA5lI,SAAA,CAAA2lI,iBAAA,EAAAC,QAAA;IAAA,IAAAC,SAAA,GAAA3lI,YAAA,CAAAylI,iBAAA;IAEtB,SAAAA,kBAAapF,OAAO,EAAG;MAAAvhJ,eAAA,OAAA2mJ,iBAAA;MAAA,OAAAE,SAAA,CAAAntJ,IAAA,OAEf6nJ,OAAO;IAEf;IAAC/gJ,YAAA,CAAAmmJ,iBAAA;MAAAjvJ,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAExC,IAAMthG,KAAK,GAAG,IAAI;QAElB,IAAM74B,OAAO,GAAG,IAAI+jG,WAAW,EAAE;QAEjC,IAAMk3B,MAAM,GAAG,IAAIwB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;QAC7CL,MAAM,CAACmE,eAAe,CAAE,aAAa,CAAE;QACvCnE,MAAM,CAACgB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;QAC7CT,MAAM,CAACc,OAAO,CAAE,IAAI,CAAC3pE,IAAI,CAAE;QAC3B6oE,MAAM,CAACa,kBAAkB,CAAEjjG,KAAK,CAAC2iG,eAAe,CAAE;QAClDP,MAAM,CAACU,IAAI,CAAErhI,GAAG,EAAE,UAAWzD,MAAM,EAAG;UAErC,IAAMgqI,OAAO,GAAGhoG,KAAK,CAAC77B,KAAK,CAAEnG,MAAM,CAAE;UAErC,IAAK,CAAEgqI,OAAO,EAAG;UAEjB,IAAKA,OAAO,CAACjoI,KAAK,KAAK3iB,SAAS,EAAG;YAElC+pB,OAAO,CAACpH,KAAK,GAAGioI,OAAO,CAACjoI,KAAK;UAE9B,CAAC,MAAM,IAAKioI,OAAO,CAAChnI,IAAI,KAAK5jB,SAAS,EAAG;YAExC+pB,OAAO,CAACpH,KAAK,CAACK,KAAK,GAAG4nI,OAAO,CAAC5nI,KAAK;YACnC+G,OAAO,CAACpH,KAAK,CAACM,MAAM,GAAG2nI,OAAO,CAAC3nI,MAAM;YACrC8G,OAAO,CAACpH,KAAK,CAACiB,IAAI,GAAGgnI,OAAO,CAAChnI,IAAI;UAElC;UAEAmG,OAAO,CAAC3E,KAAK,GAAGwlI,OAAO,CAACxlI,KAAK,KAAKplB,SAAS,GAAG4qJ,OAAO,CAACxlI,KAAK,GAAGpb,mBAAmB;UACjF+f,OAAO,CAAC1E,KAAK,GAAGulI,OAAO,CAACvlI,KAAK,KAAKrlB,SAAS,GAAG4qJ,OAAO,CAACvlI,KAAK,GAAGrb,mBAAmB;UAEjF+f,OAAO,CAACzE,SAAS,GAAGslI,OAAO,CAACtlI,SAAS,KAAKtlB,SAAS,GAAG4qJ,OAAO,CAACtlI,SAAS,GAAG/a,YAAY;UACtFwf,OAAO,CAACxE,SAAS,GAAGqlI,OAAO,CAACrlI,SAAS,KAAKvlB,SAAS,GAAG4qJ,OAAO,CAACrlI,SAAS,GAAGhb,YAAY;UAEtFwf,OAAO,CAACtE,UAAU,GAAGmlI,OAAO,CAACnlI,UAAU,KAAKzlB,SAAS,GAAG4qJ,OAAO,CAACnlI,UAAU,GAAG,CAAC;UAE9E,IAAKmlI,OAAO,CAACjlI,QAAQ,KAAK3lB,SAAS,EAAG;YAErC+pB,OAAO,CAACpE,QAAQ,GAAGilI,OAAO,CAACjlI,QAAQ;UAEpC;UAEA,IAAKilI,OAAO,CAACrkI,KAAK,KAAKvmB,SAAS,EAAG;YAElC+pB,OAAO,CAACxD,KAAK,GAAGqkI,OAAO,CAACrkI,KAAK;UAE9B;UAEA,IAAKqkI,OAAO,CAACplI,MAAM,KAAKxlB,SAAS,EAAG;YAEnC+pB,OAAO,CAACvE,MAAM,GAAGolI,OAAO,CAACplI,MAAM;UAEhC;UAEA,IAAKolI,OAAO,CAACrtJ,IAAI,KAAKyC,SAAS,EAAG;YAEjC+pB,OAAO,CAACxsB,IAAI,GAAGqtJ,OAAO,CAACrtJ,IAAI;UAE5B;UAEA,IAAKqtJ,OAAO,CAAC5kI,OAAO,KAAKhmB,SAAS,EAAG;YAEpC+pB,OAAO,CAAC/D,OAAO,GAAG4kI,OAAO,CAAC5kI,OAAO;YACjC+D,OAAO,CAACxE,SAAS,GAAG7a,wBAAwB,CAAC,CAAC;UAE/C;;UAEA,IAAKkgJ,OAAO,CAACf,WAAW,KAAK,CAAC,EAAG;YAEhC9/H,OAAO,CAACxE,SAAS,GAAGhb,YAAY;UAEjC;UAEA,IAAKqgJ,OAAO,CAACvkI,eAAe,KAAKrmB,SAAS,EAAG;YAE5C+pB,OAAO,CAAC1D,eAAe,GAAGukI,OAAO,CAACvkI,eAAe;UAElD;UAEA0D,OAAO,CAAC9C,WAAW,GAAG,IAAI;UAE1B,IAAK+8H,MAAM,EAAGA,MAAM,CAAEj6H,OAAO,EAAE6gI,OAAO,CAAE;QAEzC,CAAC,EAAE3G,UAAU,EAAEC,OAAO,CAAE;QAGxB,OAAOn6H,OAAO;MAEf;IAAC;IAAA,OAAA0gI,iBAAA;EAAA,EAjG8BrF,MAAM;EAAA,IAqGhCyF,aAAa,0BAAAC,QAAA;IAAAhmI,SAAA,CAAA+lI,aAAA,EAAAC,QAAA;IAAA,IAAAC,SAAA,GAAA/lI,YAAA,CAAA6lI,aAAA;IAElB,SAAAA,cAAaxF,OAAO,EAAG;MAAAvhJ,eAAA,OAAA+mJ,aAAA;MAAA,OAAAE,SAAA,CAAAvtJ,IAAA,OAEf6nJ,OAAO;IAEf;IAAC/gJ,YAAA,CAAAumJ,aAAA;MAAArvJ,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAExC,IAAMn6H,OAAO,GAAG,IAAInF,OAAO,EAAE;QAE7B,IAAMogI,MAAM,GAAG,IAAI+E,WAAW,CAAE,IAAI,CAAC1E,OAAO,CAAE;QAC9CL,MAAM,CAACY,cAAc,CAAE,IAAI,CAACN,WAAW,CAAE;QACzCN,MAAM,CAACc,OAAO,CAAE,IAAI,CAAC3pE,IAAI,CAAE;QAE3B6oE,MAAM,CAACU,IAAI,CAAErhI,GAAG,EAAE,UAAW1B,KAAK,EAAG;UAEpCoH,OAAO,CAACpH,KAAK,GAAGA,KAAK;UACrBoH,OAAO,CAAC9C,WAAW,GAAG,IAAI;UAE1B,IAAK+8H,MAAM,KAAKhkJ,SAAS,EAAG;YAE3BgkJ,MAAM,CAAEj6H,OAAO,CAAE;UAElB;QAED,CAAC,EAAEk6H,UAAU,EAAEC,OAAO,CAAE;QAExB,OAAOn6H,OAAO;MAEf;IAAC;IAAA,OAAA8gI,aAAA;EAAA,EA/B0BzF,MAAM;EAAA,IAmC5B4F,KAAK,0BAAAC,WAAA;IAAAnmI,SAAA,CAAAkmI,KAAA,EAAAC,WAAA;IAAA,IAAAC,SAAA,GAAAlmI,YAAA,CAAAgmI,KAAA;IAEV,SAAAA,MAAa5pI,KAAK,EAAEyvE,SAAS,GAAG,CAAC,EAAG;MAAA,IAAAs6D,OAAA;MAAArnJ,eAAA,OAAAknJ,KAAA;MAEnCG,OAAA,GAAAD,SAAA,CAAA1tJ,IAAA;MAEA2tJ,OAAA,CAAKhlH,OAAO,GAAG,IAAI;MAEnBglH,OAAA,CAAK5tJ,IAAI,GAAG,OAAO;MAEnB4tJ,OAAA,CAAK/pI,KAAK,GAAG,IAAI8yB,KAAK,CAAE9yB,KAAK,CAAE;MAC/B+pI,OAAA,CAAKt6D,SAAS,GAAGA,SAAS;MAAC,OAAAs6D,OAAA;IAE5B;IAAC7mJ,YAAA,CAAA0mJ,KAAA;MAAAxvJ,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;;QAET;MAAA;IAEA;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAAs0G,KAAA,CAAA7vJ,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAACroB,KAAK,CAACjJ,IAAI,CAAE4N,MAAM,CAAC3E,KAAK,CAAE;QAC/B,IAAI,CAACyvE,SAAS,GAAG9qE,MAAM,CAAC8qE,SAAS;QAEjC,OAAO,IAAI;MAEZ;IAAC;MAAAr1F,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAML,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAs0G,KAAA,CAAA7vJ,SAAA,mBAAAqC,IAAA,OAAiBymB,IAAI,CAAE;QAEjCL,IAAI,CAACrhB,MAAM,CAAC6e,KAAK,GAAG,IAAI,CAACA,KAAK,CAACquB,MAAM,EAAE;QACvC7rB,IAAI,CAACrhB,MAAM,CAACsuF,SAAS,GAAG,IAAI,CAACA,SAAS;QAEtC,IAAK,IAAI,CAACryB,WAAW,KAAKx+D,SAAS,EAAG4jB,IAAI,CAACrhB,MAAM,CAACi8D,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC/uB,MAAM,EAAE;QAEzF,IAAK,IAAI,CAAC7J,QAAQ,KAAK5lC,SAAS,EAAG4jB,IAAI,CAACrhB,MAAM,CAACqjC,QAAQ,GAAG,IAAI,CAACA,QAAQ;QACvE,IAAK,IAAI,CAAC9rB,KAAK,KAAK9Z,SAAS,EAAG4jB,IAAI,CAACrhB,MAAM,CAACuX,KAAK,GAAG,IAAI,CAACA,KAAK;QAC9D,IAAK,IAAI,CAAC6jD,KAAK,KAAK39D,SAAS,EAAG4jB,IAAI,CAACrhB,MAAM,CAACo7D,KAAK,GAAG,IAAI,CAACA,KAAK;QAC9D,IAAK,IAAI,CAAC6zB,QAAQ,KAAKxxF,SAAS,EAAG4jB,IAAI,CAACrhB,MAAM,CAACivF,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAEvE,IAAK,IAAI,CAACvxB,MAAM,KAAKjgE,SAAS,EAAG4jB,IAAI,CAACrhB,MAAM,CAAC09D,MAAM,GAAG,IAAI,CAACA,MAAM,CAACj8C,MAAM,EAAE;QAE1E,OAAOJ,IAAI;MAEZ;IAAC;IAAA,OAAAonI,KAAA;EAAA,EAlDkBtnH,QAAQ;EAAA,IAsDtB0nH,eAAe,0BAAAC,MAAA;IAAAvmI,SAAA,CAAAsmI,eAAA,EAAAC,MAAA;IAAA,IAAAC,SAAA,GAAAtmI,YAAA,CAAAomI,eAAA;IAEpB,SAAAA,gBAAa7sF,QAAQ,EAAEC,WAAW,EAAEqyB,SAAS,EAAG;MAAA,IAAA06D,OAAA;MAAAznJ,eAAA,OAAAsnJ,eAAA;MAE/CG,OAAA,GAAAD,SAAA,CAAA9tJ,IAAA,OAAO+gE,QAAQ,EAAEsyB,SAAS;MAE1B06D,OAAA,CAAK35D,iBAAiB,GAAG,IAAI;MAE7B25D,OAAA,CAAKhuJ,IAAI,GAAG,iBAAiB;MAE7BguJ,OAAA,CAAKp1H,QAAQ,CAAChe,IAAI,CAAEurB,QAAQ,CAACM,UAAU,CAAE;MACzCunH,OAAA,CAAK1kI,YAAY,EAAE;MAEnB0kI,OAAA,CAAK/sF,WAAW,GAAG,IAAItqB,KAAK,CAAEsqB,WAAW,CAAE;MAAC,OAAA+sF,OAAA;IAE7C;IAACjnJ,YAAA,CAAA8mJ,eAAA;MAAA5vJ,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAA00G,eAAA,CAAAjwJ,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAAC+0B,WAAW,CAACrmD,IAAI,CAAE4N,MAAM,CAACy4C,WAAW,CAAE;QAE3C,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA4sF,eAAA;EAAA,EAzB4BJ,KAAK;EA6BnC,IAAMQ,mBAAmB,GAAG,aAAc,IAAIjvH,OAAO,EAAE;EACvD,IAAMkvH,qBAAqB,GAAG,aAAc,IAAI36H,OAAO,EAAE;EACzD,IAAM46H,aAAa,GAAG,aAAc,IAAI56H,OAAO,EAAE;EAAC,IAE5C66H,WAAW;IAEhB,SAAAA,YAAa35H,MAAM,EAAG;MAAAluB,eAAA,OAAA6nJ,WAAA;MAErB,IAAI,CAAC35H,MAAM,GAAGA,MAAM;MAEpB,IAAI,CAACo/D,IAAI,GAAG,CAAC;MACb,IAAI,CAACC,UAAU,GAAG,CAAC;MACnB,IAAI,CAAC99D,MAAM,GAAG,CAAC;MACf,IAAI,CAACyiE,WAAW,GAAG,CAAC;MAEpB,IAAI,CAAC1E,OAAO,GAAG,IAAI95E,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;MAEtC,IAAI,CAACw5B,GAAG,GAAG,IAAI;MACf,IAAI,CAACilD,OAAO,GAAG,IAAI;MACnB,IAAI,CAAC71E,MAAM,GAAG,IAAImc,OAAO,EAAE;MAE3B,IAAI,CAACq4D,UAAU,GAAG,IAAI;MACtB,IAAI,CAAC3tE,WAAW,GAAG,KAAK;MAExB,IAAI,CAAC2sE,QAAQ,GAAG,IAAIjoC,OAAO,EAAE;MAC7B,IAAI,CAACigG,aAAa,GAAG,IAAIp0I,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MAExC,IAAI,CAACq0I,cAAc,GAAG,CAAC;MAEvB,IAAI,CAACC,UAAU,GAAG,CAEjB,IAAIvkI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAEzB;IAEF;IAACjjB,YAAA,CAAAqnJ,WAAA;MAAAnwJ,GAAA;MAAAE,KAAA,EAED,SAAA+5F,iBAAA,EAAmB;QAElB,OAAO,IAAI,CAACo2D,cAAc;MAE3B;IAAC;MAAArwJ,GAAA;MAAAE,KAAA,EAED,SAAAk6F,WAAA,EAAa;QAEZ,OAAO,IAAI,CAAChC,QAAQ;MAErB;IAAC;MAAAp4F,GAAA;MAAAE,KAAA,EAED,SAAA+1F,eAAgB3C,KAAK,EAAG;QAEvB,IAAM6H,YAAY,GAAG,IAAI,CAAC3kE,MAAM;QAChC,IAAM+5H,YAAY,GAAG,IAAI,CAAC3rI,MAAM;QAEhCqrI,qBAAqB,CAAC73H,qBAAqB,CAAEk7D,KAAK,CAACz8D,WAAW,CAAE;QAChEskE,YAAY,CAACxgE,QAAQ,CAAChe,IAAI,CAAEszI,qBAAqB,CAAE;QAEnDC,aAAa,CAAC93H,qBAAqB,CAAEk7D,KAAK,CAAC5qF,MAAM,CAACmuB,WAAW,CAAE;QAC/DskE,YAAY,CAAC78D,MAAM,CAAE4xH,aAAa,CAAE;QACpC/0D,YAAY,CAACnvD,iBAAiB,EAAE;QAEhCgkH,mBAAmB,CAAC1uI,gBAAgB,CAAE65E,YAAY,CAACzkE,gBAAgB,EAAEykE,YAAY,CAAC1kE,kBAAkB,CAAE;QACtG,IAAI,CAAC2hE,QAAQ,CAAC5nC,uBAAuB,CAAEw/F,mBAAmB,CAAE;QAE5DO,YAAY,CAACj1I,GAAG,CACf,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAClB;QAEDi1I,YAAY,CAACnzI,QAAQ,CAAE4yI,mBAAmB,CAAE;MAE7C;IAAC;MAAAhwJ,GAAA;MAAAE,KAAA,EAED,SAAAi6F,YAAaq2D,aAAa,EAAG;QAE5B,OAAO,IAAI,CAACF,UAAU,CAAEE,aAAa,CAAE;MAExC;IAAC;MAAAxwJ,GAAA;MAAAE,KAAA,EAED,SAAA45F,gBAAA,EAAkB;QAEjB,OAAO,IAAI,CAACs2D,aAAa;MAE1B;IAAC;MAAApwJ,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAK,IAAI,CAAC4pB,GAAG,EAAG;UAEf,IAAI,CAACA,GAAG,CAAC5pB,OAAO,EAAE;QAEnB;QAEA,IAAK,IAAI,CAAC6uE,OAAO,EAAG;UAEnB,IAAI,CAACA,OAAO,CAAC7uE,OAAO,EAAE;QAEvB;MAED;IAAC;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd,IAAI,CAACiM,MAAM,GAAGjM,MAAM,CAACiM,MAAM,CAAC9Z,KAAK,EAAE;QAEnC,IAAI,CAACk5E,IAAI,GAAGrrE,MAAM,CAACqrE,IAAI;QACvB,IAAI,CAAC79D,MAAM,GAAGxN,MAAM,CAACwN,MAAM;QAE3B,IAAI,CAAC+9D,OAAO,CAACn5E,IAAI,CAAE4N,MAAM,CAACurE,OAAO,CAAE;QAEnC,OAAO,IAAI;MAEZ;IAAC;MAAA91F,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMzhB,MAAM,GAAG,CAAC,CAAC;QAEjB,IAAK,IAAI,CAAC6uF,IAAI,KAAK,CAAC,EAAG7uF,MAAM,CAAC6uF,IAAI,GAAG,IAAI,CAACA,IAAI;QAC9C,IAAK,IAAI,CAACC,UAAU,KAAK,CAAC,EAAG9uF,MAAM,CAAC8uF,UAAU,GAAG,IAAI,CAACA,UAAU;QAChE,IAAK,IAAI,CAAC99D,MAAM,KAAK,CAAC,EAAGhxB,MAAM,CAACgxB,MAAM,GAAG,IAAI,CAACA,MAAM;QACpD,IAAK,IAAI,CAAC+9D,OAAO,CAAC99E,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC89E,OAAO,CAACx9E,CAAC,KAAK,GAAG,EAAGvR,MAAM,CAAC+uF,OAAO,GAAG,IAAI,CAACA,OAAO,CAACr2E,OAAO,EAAE;QAE/F1Y,MAAM,CAACyvB,MAAM,GAAG,IAAI,CAACA,MAAM,CAAChO,MAAM,CAAE,KAAK,CAAE,CAACzhB,MAAM;QAClD,OAAOA,MAAM,CAACyvB,MAAM,CAAC5R,MAAM;QAE3B,OAAO7d,MAAM;MAEd;IAAC;IAAA,OAAAopJ,WAAA;EAAA;EAAA,IAIIM,eAAe,0BAAAC,YAAA;IAAApnI,SAAA,CAAAmnI,eAAA,EAAAC,YAAA;IAAA,IAAAC,SAAA,GAAAnnI,YAAA,CAAAinI,eAAA;IAEpB,SAAAA,gBAAA,EAAc;MAAA,IAAAG,OAAA;MAAAtoJ,eAAA,OAAAmoJ,eAAA;MAEbG,OAAA,GAAAD,SAAA,CAAA3uJ,IAAA,OAAO,IAAI6oD,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE;MAE/C+lG,OAAA,CAAKC,iBAAiB,GAAG,IAAI;MAE7BD,OAAA,CAAKvlG,KAAK,GAAG,CAAC;MAAC,OAAAulG,OAAA;IAEhB;IAAC9nJ,YAAA,CAAA2nJ,eAAA;MAAAzwJ,GAAA;MAAAE,KAAA,EAED,SAAA+1F,eAAgB3C,KAAK,EAAG;QAEvB,IAAM98D,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAMw0B,GAAG,GAAGh0C,OAAO,GAAG,CAAC,GAAGs8E,KAAK,CAACh1E,KAAK,GAAG,IAAI,CAAC+sC,KAAK;QAClD,IAAMJ,MAAM,GAAG,IAAI,CAAC6qC,OAAO,CAACtuE,KAAK,GAAG,IAAI,CAACsuE,OAAO,CAACruE,MAAM;QACvD,IAAMoe,GAAG,GAAGytD,KAAK,CAAClpD,QAAQ,IAAI5T,MAAM,CAACqP,GAAG;QAExC,IAAKmlB,GAAG,KAAKx0B,MAAM,CAACw0B,GAAG,IAAIC,MAAM,KAAKz0B,MAAM,CAACy0B,MAAM,IAAIplB,GAAG,KAAKrP,MAAM,CAACqP,GAAG,EAAG;UAE3ErP,MAAM,CAACw0B,GAAG,GAAGA,GAAG;UAChBx0B,MAAM,CAACy0B,MAAM,GAAGA,MAAM;UACtBz0B,MAAM,CAACqP,GAAG,GAAGA,GAAG;UAChBrP,MAAM,CAACi1B,sBAAsB,EAAE;QAEhC;QAEAxQ,IAAA,CAAAC,eAAA,CAAAu1G,eAAA,CAAA9wJ,SAAA,2BAAAqC,IAAA,OAAsBsxF,KAAK;MAE5B;IAAC;MAAAtzF,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAu1G,eAAA,CAAA9wJ,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC8gC,KAAK,GAAG9gC,MAAM,CAAC8gC,KAAK;QAEzB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAolG,eAAA;EAAA,EAzC4BN,WAAW;EAAA,IA6CnCW,SAAS,0BAAAC,OAAA;IAAAznI,SAAA,CAAAwnI,SAAA,EAAAC,OAAA;IAAA,IAAAC,SAAA,GAAAxnI,YAAA,CAAAsnI,SAAA;IAEd,SAAAA,UAAalrI,KAAK,EAAEyvE,SAAS,EAAEjrD,QAAQ,GAAG,CAAC,EAAE9rB,KAAK,GAAGxH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAEi/E,QAAQ,GAAG,CAAC,EAAE7zB,KAAK,GAAG,CAAC,EAAG;MAAA,IAAA8uF,OAAA;MAAA3oJ,eAAA,OAAAwoJ,SAAA;MAE3FG,OAAA,GAAAD,SAAA,CAAAhvJ,IAAA,OAAO4jB,KAAK,EAAEyvE,SAAS;MAEvB47D,OAAA,CAAKl7D,WAAW,GAAG,IAAI;MAEvBk7D,OAAA,CAAKlvJ,IAAI,GAAG,WAAW;MAEvBkvJ,OAAA,CAAKt2H,QAAQ,CAAChe,IAAI,CAAEurB,QAAQ,CAACM,UAAU,CAAE;MACzCyoH,OAAA,CAAK5lI,YAAY,EAAE;MAEnB4lI,OAAA,CAAKvoJ,MAAM,GAAG,IAAIw/B,QAAQ,EAAE;MAE5B+oH,OAAA,CAAK7mH,QAAQ,GAAGA,QAAQ;MACxB6mH,OAAA,CAAK3yI,KAAK,GAAGA,KAAK;MAClB2yI,OAAA,CAAKj7D,QAAQ,GAAGA,QAAQ;MACxBi7D,OAAA,CAAK9uF,KAAK,GAAGA,KAAK;MAElB8uF,OAAA,CAAKz7G,GAAG,GAAG,IAAI;MAEfy7G,OAAA,CAAKxsF,MAAM,GAAG,IAAIgsF,eAAe,EAAE;MAAC,OAAAQ,OAAA;IAErC;IAACnoJ,YAAA,CAAAgoJ,SAAA;MAAA9wJ,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAY;QAEX;QACA;QACA,OAAO,IAAI,CAACk5E,SAAS,GAAGv+E,IAAI,CAACC,EAAE;MAEhC,CAAC;MAAAuE,GAAA,EAED,SAAAA,IAAW41I,KAAK,EAAG;QAElB;QACA,IAAI,CAAC77D,SAAS,GAAG67D,KAAK,GAAGp6I,IAAI,CAACC,EAAE;MAEjC;IAAC;MAAA/W,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC64C,MAAM,CAAC74C,OAAO,EAAE;MAEtB;IAAC;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAA41G,SAAA,CAAAnxJ,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAAC7D,QAAQ,GAAG7f,MAAM,CAAC6f,QAAQ;QAC/B,IAAI,CAAC9rB,KAAK,GAAGiM,MAAM,CAACjM,KAAK;QACzB,IAAI,CAAC03E,QAAQ,GAAGzrE,MAAM,CAACyrE,QAAQ;QAC/B,IAAI,CAAC7zB,KAAK,GAAG53C,MAAM,CAAC43C,KAAK;QAEzB,IAAI,CAACz5D,MAAM,GAAG6hB,MAAM,CAAC7hB,MAAM,CAACgU,KAAK,EAAE;QAEnC,IAAI,CAAC+nD,MAAM,GAAGl6C,MAAM,CAACk6C,MAAM,CAAC/nD,KAAK,EAAE;QAEnC,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAo0I,SAAA;EAAA,EA9DsBtB,KAAK;EAkE7B,IAAMhqC,iBAAiB,GAAG,aAAc,IAAIzkF,OAAO,EAAE;EACrD,IAAMowH,mBAAmB,GAAG,aAAc,IAAI77H,OAAO,EAAE;EACvD,IAAM87H,WAAW,GAAG,aAAc,IAAI97H,OAAO,EAAE;EAAC,IAE1C+7H,gBAAgB,0BAAAC,aAAA;IAAAhoI,SAAA,CAAA+nI,gBAAA,EAAAC,aAAA;IAAA,IAAAC,SAAA,GAAA/nI,YAAA,CAAA6nI,gBAAA;IAErB,SAAAA,iBAAA,EAAc;MAAA,IAAAG,OAAA;MAAAlpJ,eAAA,OAAA+oJ,gBAAA;MAEbG,OAAA,GAAAD,SAAA,CAAAvvJ,IAAA,OAAO,IAAI6oD,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE;MAE/C2mG,OAAA,CAAKl3D,kBAAkB,GAAG,IAAI;MAE9Bk3D,OAAA,CAAKpB,aAAa,GAAG,IAAIp0I,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;MAExCw1I,OAAA,CAAKnB,cAAc,GAAG,CAAC;MAEvBmB,OAAA,CAAKlB,UAAU,GAAG;MACjB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA,IAAIvkI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACzB;MACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACzB;MACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACzB;MACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACzB;MACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACzB;MACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CACzB;MAEDylI,OAAA,CAAKC,eAAe,GAAG,CACtB,IAAIn8H,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EACxE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAC1E;MAEDk8H,OAAA,CAAKE,QAAQ,GAAG,CACf,IAAIp8H,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EACtE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,CACxE;MAAC,OAAAk8H,OAAA;IAEH;IAAC1oJ,YAAA,CAAAuoJ,gBAAA;MAAArxJ,GAAA;MAAAE,KAAA,EAED,SAAA+1F,eAAgB3C,KAAK,EAAEk9D,aAAa,GAAG,CAAC,EAAG;QAE1C,IAAMh6H,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1B,IAAM+5H,YAAY,GAAG,IAAI,CAAC3rI,MAAM;QAEhC,IAAMihB,GAAG,GAAGytD,KAAK,CAAClpD,QAAQ,IAAI5T,MAAM,CAACqP,GAAG;QAExC,IAAKA,GAAG,KAAKrP,MAAM,CAACqP,GAAG,EAAG;UAEzBrP,MAAM,CAACqP,GAAG,GAAGA,GAAG;UAChBrP,MAAM,CAACi1B,sBAAsB,EAAE;QAEhC;QAEA0lG,mBAAmB,CAAC/4H,qBAAqB,CAAEk7D,KAAK,CAACz8D,WAAW,CAAE;QAC9DL,MAAM,CAACmE,QAAQ,CAAChe,IAAI,CAAEw0I,mBAAmB,CAAE;QAE3CC,WAAW,CAACz0I,IAAI,CAAE6Z,MAAM,CAACmE,QAAQ,CAAE;QACnCy2H,WAAW,CAACv0I,GAAG,CAAE,IAAI,CAAC40I,eAAe,CAAEjB,aAAa,CAAE,CAAE;QACxDh6H,MAAM,CAACwM,EAAE,CAACrmB,IAAI,CAAE,IAAI,CAAC+0I,QAAQ,CAAElB,aAAa,CAAE,CAAE;QAChDh6H,MAAM,CAAC8H,MAAM,CAAE8yH,WAAW,CAAE;QAC5B56H,MAAM,CAACwV,iBAAiB,EAAE;QAE1BukH,YAAY,CAAC5rI,eAAe,CAAE,CAAEwsI,mBAAmB,CAACn5I,CAAC,EAAE,CAAEm5I,mBAAmB,CAAC74I,CAAC,EAAE,CAAE64I,mBAAmB,CAACllI,CAAC,CAAE;QAEzGu5F,iBAAiB,CAAClkG,gBAAgB,CAAEkV,MAAM,CAACE,gBAAgB,EAAEF,MAAM,CAACC,kBAAkB,CAAE;QACxF,IAAI,CAAC2hE,QAAQ,CAAC5nC,uBAAuB,CAAEg1D,iBAAiB,CAAE;MAE3D;IAAC;IAAA,OAAA6rC,gBAAA;EAAA,EAhF6BlB,WAAW;EAAA,IAoFpCwB,UAAU,0BAAAC,OAAA;IAAAtoI,SAAA,CAAAqoI,UAAA,EAAAC,OAAA;IAAA,IAAAC,SAAA,GAAAroI,YAAA,CAAAmoI,UAAA;IAEf,SAAAA,WAAa/rI,KAAK,EAAEyvE,SAAS,EAAEjrD,QAAQ,GAAG,CAAC,EAAE+3B,KAAK,GAAG,CAAC,EAAG;MAAA,IAAA2vF,QAAA;MAAAxpJ,eAAA,OAAAqpJ,UAAA;MAExDG,QAAA,GAAAD,SAAA,CAAA7vJ,IAAA,OAAO4jB,KAAK,EAAEyvE,SAAS;MAEvBy8D,QAAA,CAAK37D,YAAY,GAAG,IAAI;MAExB27D,QAAA,CAAK/vJ,IAAI,GAAG,YAAY;MAExB+vJ,QAAA,CAAK1nH,QAAQ,GAAGA,QAAQ;MACxB0nH,QAAA,CAAK3vF,KAAK,GAAGA,KAAK;MAElB2vF,QAAA,CAAKrtF,MAAM,GAAG,IAAI4sF,gBAAgB,EAAE;MAAC,OAAAS,QAAA;IAEtC;IAAChpJ,YAAA,CAAA6oJ,UAAA;MAAA3xJ,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAY;QAEX;QACA;QACA,OAAO,IAAI,CAACk5E,SAAS,GAAG,CAAC,GAAGv+E,IAAI,CAACC,EAAE;MAEpC,CAAC;MAAAuE,GAAA,EAED,SAAAA,IAAW41I,KAAK,EAAG;QAElB;QACA,IAAI,CAAC77D,SAAS,GAAG67D,KAAK,IAAK,CAAC,GAAGp6I,IAAI,CAACC,EAAE,CAAE;MAEzC;IAAC;MAAA/W,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC64C,MAAM,CAAC74C,OAAO,EAAE;MAEtB;IAAC;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAAy2G,UAAA,CAAAhyJ,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAAC7D,QAAQ,GAAG7f,MAAM,CAAC6f,QAAQ;QAC/B,IAAI,CAAC+3B,KAAK,GAAG53C,MAAM,CAAC43C,KAAK;QAEzB,IAAI,CAACsC,MAAM,GAAGl6C,MAAM,CAACk6C,MAAM,CAAC/nD,KAAK,EAAE;QAEnC,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAi1I,UAAA;EAAA,EAjDuBnC,KAAK;EAAA,IAqDxBuC,sBAAsB,0BAAAC,aAAA;IAAA1oI,SAAA,CAAAyoI,sBAAA,EAAAC,aAAA;IAAA,IAAAC,SAAA,GAAAzoI,YAAA,CAAAuoI,sBAAA;IAE3B,SAAAA,uBAAA,EAAc;MAAA,IAAAG,QAAA;MAAA5pJ,eAAA,OAAAypJ,sBAAA;MAEbG,QAAA,GAAAD,SAAA,CAAAjwJ,IAAA,OAAO,IAAIiuE,kBAAkB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE;MAEzDiiF,QAAA,CAAKC,wBAAwB,GAAG,IAAI;MAAC,OAAAD,QAAA;IAEtC;IAAC,OAAAppJ,YAAA,CAAAipJ,sBAAA;EAAA,EARmC5B,WAAW;EAAA,IAY1CiC,gBAAgB,0BAAAC,OAAA;IAAA/oI,SAAA,CAAA8oI,gBAAA,EAAAC,OAAA;IAAA,IAAAC,SAAA,GAAA9oI,YAAA,CAAA4oI,gBAAA;IAErB,SAAAA,iBAAaxsI,KAAK,EAAEyvE,SAAS,EAAG;MAAA,IAAAk9D,QAAA;MAAAjqJ,eAAA,OAAA8pJ,gBAAA;MAE/BG,QAAA,GAAAD,SAAA,CAAAtwJ,IAAA,OAAO4jB,KAAK,EAAEyvE,SAAS;MAEvBk9D,QAAA,CAAK78D,kBAAkB,GAAG,IAAI;MAE9B68D,QAAA,CAAKxwJ,IAAI,GAAG,kBAAkB;MAE9BwwJ,QAAA,CAAK53H,QAAQ,CAAChe,IAAI,CAAEurB,QAAQ,CAACM,UAAU,CAAE;MACzC+pH,QAAA,CAAKlnI,YAAY,EAAE;MAEnBknI,QAAA,CAAK7pJ,MAAM,GAAG,IAAIw/B,QAAQ,EAAE;MAE5BqqH,QAAA,CAAK9tF,MAAM,GAAG,IAAIstF,sBAAsB,EAAE;MAAC,OAAAQ,QAAA;IAE5C;IAACzpJ,YAAA,CAAAspJ,gBAAA;MAAApyJ,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC64C,MAAM,CAAC74C,OAAO,EAAE;MAEtB;IAAC;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAk3G,gBAAA,CAAAzyJ,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC7hB,MAAM,GAAG6hB,MAAM,CAAC7hB,MAAM,CAACgU,KAAK,EAAE;QACnC,IAAI,CAAC+nD,MAAM,GAAGl6C,MAAM,CAACk6C,MAAM,CAAC/nD,KAAK,EAAE;QAEnC,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAA01I,gBAAA;EAAA,EAlC6B5C,KAAK;EAAA,IAsC9BgD,YAAY,0BAAAC,OAAA;IAAAnpI,SAAA,CAAAkpI,YAAA,EAAAC,OAAA;IAAA,IAAAC,SAAA,GAAAlpI,YAAA,CAAAgpI,YAAA;IAEjB,SAAAA,aAAa5sI,KAAK,EAAEyvE,SAAS,EAAG;MAAA,IAAAs9D,QAAA;MAAArqJ,eAAA,OAAAkqJ,YAAA;MAE/BG,QAAA,GAAAD,SAAA,CAAA1wJ,IAAA,OAAO4jB,KAAK,EAAEyvE,SAAS;MAEvBs9D,QAAA,CAAKr9D,cAAc,GAAG,IAAI;MAE1Bq9D,QAAA,CAAK5wJ,IAAI,GAAG,cAAc;MAAC,OAAA4wJ,QAAA;IAE5B;IAAC,OAAA7pJ,YAAA,CAAA0pJ,YAAA;EAAA,EAVyBhD,KAAK;EAAA,IAc1BoD,aAAa,0BAAAC,OAAA;IAAAvpI,SAAA,CAAAspI,aAAA,EAAAC,OAAA;IAAA,IAAAC,SAAA,GAAAtpI,YAAA,CAAAopI,aAAA;IAElB,SAAAA,cAAahtI,KAAK,EAAEyvE,SAAS,EAAE7tE,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,EAAG;MAAA,IAAAsrI,QAAA;MAAAzqJ,eAAA,OAAAsqJ,aAAA;MAExDG,QAAA,GAAAD,SAAA,CAAA9wJ,IAAA,OAAO4jB,KAAK,EAAEyvE,SAAS;MAEvB09D,QAAA,CAAK78D,eAAe,GAAG,IAAI;MAE3B68D,QAAA,CAAKhxJ,IAAI,GAAG,eAAe;MAE3BgxJ,QAAA,CAAKvrI,KAAK,GAAGA,KAAK;MAClBurI,QAAA,CAAKtrI,MAAM,GAAGA,MAAM;MAAC,OAAAsrI,QAAA;IAEtB;IAACjqJ,YAAA,CAAA8pJ,aAAA;MAAA5yJ,GAAA;MAAAmc,GAAA,EAED,SAAAA,IAAA,EAAY;QAEX;QACA,OAAO,IAAI,CAACk5E,SAAS,GAAG,IAAI,CAAC7tE,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG3Q,IAAI,CAACC,EAAE;MAE3D,CAAC;MAAAuE,GAAA,EAED,SAAAA,IAAW41I,KAAK,EAAG;QAElB;QACA,IAAI,CAAC77D,SAAS,GAAG67D,KAAK,IAAK,IAAI,CAAC1pI,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG3Q,IAAI,CAACC,EAAE,CAAE;MAEhE;IAAC;MAAA/W,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA03G,aAAA,CAAAjzJ,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC/C,KAAK,GAAG+C,MAAM,CAAC/C,KAAK;QACzB,IAAI,CAACC,MAAM,GAAG8C,MAAM,CAAC9C,MAAM;QAE3B,OAAO,IAAI;MAEZ;IAAC;MAAAznB,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAML,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAA03G,aAAA,CAAAjzJ,SAAA,mBAAAqC,IAAA,OAAiBymB,IAAI,CAAE;QAEjCL,IAAI,CAACrhB,MAAM,CAACygB,KAAK,GAAG,IAAI,CAACA,KAAK;QAC9BY,IAAI,CAACrhB,MAAM,CAAC0gB,MAAM,GAAG,IAAI,CAACA,MAAM;QAEhC,OAAOW,IAAI;MAEZ;IAAC;IAAA,OAAAwqI,aAAA;EAAA,EAjD0BpD,KAAK;EAqDjC;AACD;AACA;AACA;AACA;AACA;AACA;EAEC;EAAA,IAEMwD,mBAAmB;IAExB,SAAAA,oBAAA,EAAc;MAAA1qJ,eAAA,OAAA0qJ,mBAAA;MAEb,IAAI,CAACC,qBAAqB,GAAG,IAAI;MAEjC,IAAI,CAACx9D,YAAY,GAAG,EAAE;MAEtB,KAAM,IAAI1vF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAAC0vF,YAAY,CAAClwF,IAAI,CAAE,IAAI+vB,OAAO,EAAE,CAAE;MAExC;IAED;IAACxsB,YAAA,CAAAkqJ,mBAAA;MAAAhzJ,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKm6E,YAAY,EAAG;QAEnB,KAAM,IAAI1vF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAI,CAAC0vF,YAAY,CAAE1vF,CAAC,CAAE,CAAC4W,IAAI,CAAE84E,YAAY,CAAE1vF,CAAC,CAAE,CAAE;QAEjD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAgzJ,KAAA,EAAO;QAEN,KAAM,IAAIntJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAI,CAAC0vF,YAAY,CAAE1vF,CAAC,CAAE,CAACuV,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEtC;QAEA,OAAO,IAAI;MAEZ;;MAEA;MACA;IAAA;MAAAtb,GAAA;MAAAE,KAAA,EACA,SAAAizJ,MAAOx7H,MAAM,EAAEjvB,MAAM,EAAG;QAEvB;;QAEA,IAAMsP,CAAC,GAAG2f,MAAM,CAAC3f,CAAC;UAAEM,CAAC,GAAGqf,MAAM,CAACrf,CAAC;UAAE2T,CAAC,GAAG0L,MAAM,CAAC1L,CAAC;QAE9C,IAAMmnI,KAAK,GAAG,IAAI,CAAC39D,YAAY;;QAE/B;QACA/sF,MAAM,CAACiU,IAAI,CAAEy2I,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC/1I,cAAc,CAAE,QAAQ,CAAE;;QAEpD;QACA3U,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAG96I,CAAC,CAAE;QAClD5P,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGnnI,CAAC,CAAE;QAClDvjB,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGp7I,CAAC,CAAE;;QAElD;QACAtP,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAKp7I,CAAC,GAAGM,CAAC,CAAE,CAAE;QAC1D5P,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK96I,CAAC,GAAG2T,CAAC,CAAE,CAAE;QAC1DvjB,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK,GAAG,GAAGnnI,CAAC,GAAGA,CAAC,GAAG,GAAG,CAAE,CAAE;QACtEvjB,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAKp7I,CAAC,GAAGiU,CAAC,CAAE,CAAE;QAC1DvjB,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAKp7I,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,CAAE,CAAE;QAElE,OAAO5P,MAAM;MAEd;;MAEA;MACA;MACA;IAAA;MAAA1I,GAAA;MAAAE,KAAA,EACA,SAAAmzJ,gBAAiB17H,MAAM,EAAEjvB,MAAM,EAAG;QAEjC;;QAEA,IAAMsP,CAAC,GAAG2f,MAAM,CAAC3f,CAAC;UAAEM,CAAC,GAAGqf,MAAM,CAACrf,CAAC;UAAE2T,CAAC,GAAG0L,MAAM,CAAC1L,CAAC;QAE9C,IAAMmnI,KAAK,GAAG,IAAI,CAAC39D,YAAY;;QAE/B;QACA/sF,MAAM,CAACiU,IAAI,CAAEy2I,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC/1I,cAAc,CAAE,QAAQ,CAAE,CAAC,CAAC;;QAEtD;QACA3U,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG96I,CAAC,CAAE,CAAC,CAAC;QAC1D5P,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGnnI,CAAC,CAAE;QACxDvjB,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGp7I,CAAC,CAAE;;QAExD;QACAtP,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGp7I,CAAC,GAAGM,CAAC,CAAE,CAAC,CAAC;QAC9D5P,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG96I,CAAC,GAAG2T,CAAC,CAAE;QAC5DvjB,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGnnI,CAAC,GAAGA,CAAC,GAAG,QAAQ,CAAE,CAAC,CAAC;QACnEvjB,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGp7I,CAAC,GAAGiU,CAAC,CAAE;QAC5DvjB,MAAM,CAACsU,eAAe,CAAEo2I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAKp7I,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,CAAE,CAAE,CAAC,CAAC;;QAEpE,OAAO5P,MAAM;MAEd;IAAC;MAAA1I,GAAA;MAAAE,KAAA,EAED,SAAA2c,IAAK24E,EAAE,EAAG;QAET,KAAM,IAAIzvF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAI,CAAC0vF,YAAY,CAAE1vF,CAAC,CAAE,CAAC8W,GAAG,CAAE24E,EAAE,CAACC,YAAY,CAAE1vF,CAAC,CAAE,CAAE;QAEnD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAozJ,YAAa99D,EAAE,EAAE/7E,CAAC,EAAG;QAEpB,KAAM,IAAI1T,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAI,CAAC0vF,YAAY,CAAE1vF,CAAC,CAAE,CAACiX,eAAe,CAAEw4E,EAAE,CAACC,YAAY,CAAE1vF,CAAC,CAAE,EAAE0T,CAAC,CAAE;QAElE;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAAmkB,MAAO5K,CAAC,EAAG;QAEV,KAAM,IAAI1T,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAI,CAAC0vF,YAAY,CAAE1vF,CAAC,CAAE,CAACsX,cAAc,CAAE5D,CAAC,CAAE;QAE3C;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAAqY,KAAMi9E,EAAE,EAAEt2E,KAAK,EAAG;QAEjB,KAAM,IAAInZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAI,CAAC0vF,YAAY,CAAE1vF,CAAC,CAAE,CAACwS,IAAI,CAAEi9E,EAAE,CAACC,YAAY,CAAE1vF,CAAC,CAAE,EAAEmZ,KAAK,CAAE;QAE3D;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAlf,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQk2E,EAAE,EAAG;QAEZ,KAAM,IAAIzvF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B,IAAK,CAAE,IAAI,CAAC0vF,YAAY,CAAE1vF,CAAC,CAAE,CAACuZ,MAAM,CAAEk2E,EAAE,CAACC,YAAY,CAAE1vF,CAAC,CAAE,CAAE,EAAG;YAE9D,OAAO,KAAK;UAEb;QAED;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM64E,EAAE,EAAG;QAEV,OAAO,IAAI,CAACl6E,GAAG,CAAEk6E,EAAE,CAACC,YAAY,CAAE;MAEnC;IAAC;MAAAz1F,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAqf,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAMi2E,YAAY,GAAG,IAAI,CAACA,YAAY;QAEtC,KAAM,IAAI1vF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B0vF,YAAY,CAAE1vF,CAAC,CAAE,CAACwZ,SAAS,CAAE9I,KAAK,EAAE+I,MAAM,GAAKzZ,CAAC,GAAG,CAAG,CAAE;QAEzD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAuf,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;QAEjC,IAAMi2E,YAAY,GAAG,IAAI,CAACA,YAAY;QAEtC,KAAM,IAAI1vF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B0vF,YAAY,CAAE1vF,CAAC,CAAE,CAAC0Z,OAAO,CAAEhJ,KAAK,EAAE+I,MAAM,GAAKzZ,CAAC,GAAG,CAAG,CAAE;QAEvD;QAEA,OAAO0Q,KAAK;MAEb;;MAEA;MACA;IAAA;MAAAzW,GAAA;MAAAE,KAAA,EACA,SAAAqzJ,WAAmB57H,MAAM,EAAE67H,OAAO,EAAG;QAEpC;;QAEA,IAAMx7I,CAAC,GAAG2f,MAAM,CAAC3f,CAAC;UAAEM,CAAC,GAAGqf,MAAM,CAACrf,CAAC;UAAE2T,CAAC,GAAG0L,MAAM,CAAC1L,CAAC;;QAE9C;QACAunI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ;;QAEvB;QACAA,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGl7I,CAAC;QAC3Bk7I,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGvnI,CAAC;QAC3BunI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGx7I,CAAC;;QAE3B;QACAw7I,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGx7I,CAAC,GAAGM,CAAC;QAC/Bk7I,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGl7I,CAAC,GAAG2T,CAAC;QAC/BunI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,IAAK,CAAC,GAAGvnI,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAE;QAC3CunI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGx7I,CAAC,GAAGiU,CAAC;QAC/BunI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,IAAKx7I,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,CAAE;MAE5C;IAAC;IAAA,OAAA06I,mBAAA;EAAA;EAAA,IAIIS,UAAU,0BAAAC,OAAA;IAAApqI,SAAA,CAAAmqI,UAAA,EAAAC,OAAA;IAAA,IAAAC,SAAA,GAAAnqI,YAAA,CAAAiqI,UAAA;IAEf,SAAAA,WAAaj+D,EAAE,GAAG,IAAIw9D,mBAAmB,EAAE,EAAE39D,SAAS,GAAG,CAAC,EAAG;MAAA,IAAAu+D,QAAA;MAAAtrJ,eAAA,OAAAmrJ,UAAA;MAE5DG,QAAA,GAAAD,SAAA,CAAA3xJ,IAAA,OAAOwC,SAAS,EAAE6wF,SAAS;MAE3Bu+D,QAAA,CAAKr+D,YAAY,GAAG,IAAI;MAExBq+D,QAAA,CAAKp+D,EAAE,GAAGA,EAAE;MAAC,OAAAo+D,QAAA;IAEd;IAAC9qJ,YAAA,CAAA2qJ,UAAA;MAAAzzJ,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAu4G,UAAA,CAAA9zJ,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACirE,EAAE,CAAC74E,IAAI,CAAE4N,MAAM,CAACirE,EAAE,CAAE;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAAx1F,GAAA;MAAAE,KAAA,EAED,SAAAooD,SAAU2qE,IAAI,EAAG;QAEhB,IAAI,CAAC59B,SAAS,GAAG49B,IAAI,CAAC59B,SAAS,CAAC,CAAC;QACjC,IAAI,CAACG,EAAE,CAACj2E,SAAS,CAAE0zG,IAAI,CAACz9B,EAAE,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAAx1F,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQC,IAAI,EAAG;QAEd,IAAML,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAAu4G,UAAA,CAAA9zJ,SAAA,mBAAAqC,IAAA,OAAiBymB,IAAI,CAAE;QAEjCL,IAAI,CAACrhB,MAAM,CAACyuF,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC/1E,OAAO,EAAE;QAElC,OAAO2I,IAAI;MAEZ;IAAC;IAAA,OAAAqrI,UAAA;EAAA,EAvCuBjE,KAAK;EAAA,IA2CxBqE,cAAc,0BAAAC,QAAA;IAAAxqI,SAAA,CAAAuqI,cAAA,EAAAC,QAAA;IAAA,IAAAC,SAAA,GAAAvqI,YAAA,CAAAqqI,cAAA;IAEnB,SAAAA,eAAahK,OAAO,EAAG;MAAA,IAAAmK,QAAA;MAAA1rJ,eAAA,OAAAurJ,cAAA;MAEtBG,QAAA,GAAAD,SAAA,CAAA/xJ,IAAA,OAAO6nJ,OAAO;MACdmK,QAAA,CAAKtoI,QAAQ,GAAG,CAAC,CAAC;MAAC,OAAAsoI,QAAA;IAEpB;IAAClrJ,YAAA,CAAA+qJ,cAAA;MAAA7zJ,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAExC,IAAMthG,KAAK,GAAG,IAAI;QAElB,IAAMoiG,MAAM,GAAG,IAAIwB,UAAU,CAAE5jG,KAAK,CAACyiG,OAAO,CAAE;QAC9CL,MAAM,CAACc,OAAO,CAAEljG,KAAK,CAACu5B,IAAI,CAAE;QAC5B6oE,MAAM,CAACgB,gBAAgB,CAAEpjG,KAAK,CAAC6iG,aAAa,CAAE;QAC9CT,MAAM,CAACa,kBAAkB,CAAEjjG,KAAK,CAAC2iG,eAAe,CAAE;QAClDP,MAAM,CAACU,IAAI,CAAErhI,GAAG,EAAE,UAAWokI,IAAI,EAAG;UAEnC,IAAI;YAEHzE,MAAM,CAAEphG,KAAK,CAAC77B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE0hI,IAAI,CAAE,CAAE,CAAE;UAE5C,CAAC,CAAC,OAAQxvI,CAAC,EAAG;YAEb,IAAKirI,OAAO,EAAG;cAEdA,OAAO,CAAEjrI,CAAC,CAAE;YAEb,CAAC,MAAM;cAENhU,OAAO,CAAChG,KAAK,CAAEga,CAAC,CAAE;YAEnB;YAEA2pC,KAAK,CAACyiG,OAAO,CAACV,SAAS,CAAEtgI,GAAG,CAAE;UAE/B;QAED,CAAC,EAAE4/H,UAAU,EAAEC,OAAO,CAAE;MAEzB;IAAC;MAAA1oJ,GAAA;MAAAE,KAAA,EAED,SAAAqrB,MAAO0nG,IAAI,EAAG;QAEb,IAAMvnG,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,SAASuoI,UAAUA,CAAE5tJ,IAAI,EAAG;UAE3B,IAAKqlB,QAAQ,CAAErlB,IAAI,CAAE,KAAK7B,SAAS,EAAG;YAErCiF,OAAO,CAACC,IAAI,CAAE,yCAAyC,EAAErD,IAAI,CAAE;UAEhE;UAEA,OAAOqlB,QAAQ,CAAErlB,IAAI,CAAE;QAExB;QAEA,IAAMunC,QAAQ,GAAGimH,cAAc,CAACK,sBAAsB,CAAEjhC,IAAI,CAAClxH,IAAI,CAAE;QAEnE,IAAKkxH,IAAI,CAAC17G,IAAI,KAAK/S,SAAS,EAAGopC,QAAQ,CAACr2B,IAAI,GAAG07G,IAAI,CAAC17G,IAAI;QACxD,IAAK07G,IAAI,CAAC5sH,IAAI,KAAK7B,SAAS,EAAGopC,QAAQ,CAACvnC,IAAI,GAAG4sH,IAAI,CAAC5sH,IAAI;QACxD,IAAK4sH,IAAI,CAACrtG,KAAK,KAAKphB,SAAS,IAAIopC,QAAQ,CAAChoB,KAAK,KAAKphB,SAAS,EAAGopC,QAAQ,CAAChoB,KAAK,CAACizB,MAAM,CAAEo6E,IAAI,CAACrtG,KAAK,CAAE;QACnG,IAAKqtG,IAAI,CAAC/+E,SAAS,KAAK1vC,SAAS,EAAGopC,QAAQ,CAACsG,SAAS,GAAG++E,IAAI,CAAC/+E,SAAS;QACvE,IAAK++E,IAAI,CAAC9+E,SAAS,KAAK3vC,SAAS,EAAGopC,QAAQ,CAACuG,SAAS,GAAG8+E,IAAI,CAAC9+E,SAAS;QACvE,IAAK8+E,IAAI,CAAC7+E,KAAK,KAAK5vC,SAAS,EAAGopC,QAAQ,CAACwG,KAAK,GAAG6+E,IAAI,CAAC7+E,KAAK;QAC3D,IAAK6+E,IAAI,CAAC5+E,UAAU,KAAK7vC,SAAS,EAAGopC,QAAQ,CAACyG,UAAU,GAAG,IAAIqE,KAAK,EAAE,CAACG,MAAM,CAAEo6E,IAAI,CAAC5+E,UAAU,CAAE;QAChG,IAAK4+E,IAAI,CAAC3+E,cAAc,KAAK9vC,SAAS,EAAGopC,QAAQ,CAAC0G,cAAc,GAAG2+E,IAAI,CAAC3+E,cAAc;QACtF,IAAK2+E,IAAI,CAAC1+E,QAAQ,KAAK/vC,SAAS,IAAIopC,QAAQ,CAAC2G,QAAQ,KAAK/vC,SAAS,EAAGopC,QAAQ,CAAC2G,QAAQ,CAACsE,MAAM,CAAEo6E,IAAI,CAAC1+E,QAAQ,CAAE;QAC/G,IAAK0+E,IAAI,CAACx+E,QAAQ,KAAKjwC,SAAS,IAAIopC,QAAQ,CAAC6G,QAAQ,KAAKjwC,SAAS,EAAGopC,QAAQ,CAAC6G,QAAQ,CAACoE,MAAM,CAAEo6E,IAAI,CAACx+E,QAAQ,CAAE;QAC/G,IAAKw+E,IAAI,CAACv+E,iBAAiB,KAAKlwC,SAAS,EAAGopC,QAAQ,CAAC8G,iBAAiB,GAAGu+E,IAAI,CAACv+E,iBAAiB;QAC/F,IAAKu+E,IAAI,CAACt+E,aAAa,KAAKnwC,SAAS,IAAIopC,QAAQ,CAAC+G,aAAa,KAAKnwC,SAAS,EAAGopC,QAAQ,CAAC+G,aAAa,CAACkE,MAAM,CAAEo6E,IAAI,CAACt+E,aAAa,CAAE;QACnI,IAAKs+E,IAAI,CAACr+E,SAAS,KAAKpwC,SAAS,EAAGopC,QAAQ,CAACgH,SAAS,GAAGq+E,IAAI,CAACr+E,SAAS;QACvE,IAAKq+E,IAAI,CAACp+E,SAAS,KAAKrwC,SAAS,EAAGopC,QAAQ,CAACiH,SAAS,GAAGo+E,IAAI,CAACp+E,SAAS;QACvE,IAAKo+E,IAAI,CAACn+E,kBAAkB,KAAKtwC,SAAS,EAAGopC,QAAQ,CAACkH,kBAAkB,GAAGm+E,IAAI,CAACn+E,kBAAkB;QAClG,IAAKm+E,IAAI,CAAC99E,WAAW,KAAK3wC,SAAS,EAAGopC,QAAQ,CAACuH,WAAW,GAAG89E,IAAI,CAAC99E,WAAW;QAC7E,IAAK89E,IAAI,CAAC79E,cAAc,KAAK5wC,SAAS,EAAGopC,QAAQ,CAACwH,cAAc,GAAG69E,IAAI,CAAC79E,cAAc;QACtF,IAAK69E,IAAI,CAAC59E,yBAAyB,KAAK7wC,SAAS,EAAGopC,QAAQ,CAACyH,yBAAyB,GAAG49E,IAAI,CAAC59E,yBAAyB;QACvH,IAAK49E,IAAI,CAAC97E,YAAY,KAAK3yC,SAAS,EAAGopC,QAAQ,CAACuJ,YAAY,GAAG87E,IAAI,CAAC97E,YAAY;QAChF,IAAK87E,IAAI,CAAC57E,SAAS,KAAK7yC,SAAS,EAAGopC,QAAQ,CAACyJ,SAAS,GAAG47E,IAAI,CAAC57E,SAAS;QACvE,IAAK47E,IAAI,CAAC17E,mBAAmB,KAAK/yC,SAAS,EAAGopC,QAAQ,CAAC2J,mBAAmB,GAAG07E,IAAI,CAAC17E,mBAAmB;QACrG,IAAK07E,IAAI,CAACz7E,gBAAgB,KAAKhzC,SAAS,IAAIopC,QAAQ,CAAC4J,gBAAgB,KAAKhzC,SAAS,EAAGopC,QAAQ,CAAC4J,gBAAgB,CAACqB,MAAM,CAAEo6E,IAAI,CAACz7E,gBAAgB,CAAE;QAC/I,IAAKy7E,IAAI,CAAC96E,GAAG,KAAK3zC,SAAS,EAAGopC,QAAQ,CAACuK,GAAG,GAAG86E,IAAI,CAAC96E,GAAG;QACrD,IAAK86E,IAAI,CAAC/6E,WAAW,KAAK1zC,SAAS,EAAGopC,QAAQ,CAACsK,WAAW,GAAG+6E,IAAI,CAAC/6E,WAAW;QAC7E,IAAK+6E,IAAI,CAAC5hF,QAAQ,KAAK7sC,SAAS,EAAGopC,QAAQ,CAACyD,QAAQ,GAAG4hF,IAAI,CAAC5hF,QAAQ;QACpE,IAAK4hF,IAAI,CAACn8E,OAAO,KAAKtyC,SAAS,EAAGopC,QAAQ,CAACkJ,OAAO,GAAGm8E,IAAI,CAACn8E,OAAO;QACjE,IAAKm8E,IAAI,CAAC3hF,IAAI,KAAK9sC,SAAS,EAAGopC,QAAQ,CAAC0D,IAAI,GAAG2hF,IAAI,CAAC3hF,IAAI;QACxD,IAAK2hF,IAAI,CAACngF,UAAU,KAAKtuC,SAAS,EAAGopC,QAAQ,CAACkF,UAAU,GAAGmgF,IAAI,CAACngF,UAAU;QAC1E,IAAKmgF,IAAI,CAACzhF,OAAO,KAAKhtC,SAAS,EAAGopC,QAAQ,CAAC4D,OAAO,GAAGyhF,IAAI,CAACzhF,OAAO;QACjE,IAAKyhF,IAAI,CAACxhF,WAAW,KAAKjtC,SAAS,EAAGopC,QAAQ,CAAC6D,WAAW,GAAGwhF,IAAI,CAACxhF,WAAW;QAC7E,IAAKwhF,IAAI,CAACp7E,SAAS,KAAKrzC,SAAS,EAAGopC,QAAQ,CAACiK,SAAS,GAAGo7E,IAAI,CAACp7E,SAAS;QACvE,IAAKo7E,IAAI,CAAChhF,SAAS,KAAKztC,SAAS,EAAGopC,QAAQ,CAACqE,SAAS,GAAGghF,IAAI,CAAChhF,SAAS;QACvE,IAAKghF,IAAI,CAAC/gF,UAAU,KAAK1tC,SAAS,EAAGopC,QAAQ,CAACsE,UAAU,GAAG+gF,IAAI,CAAC/gF,UAAU;QAC1E,IAAK+gF,IAAI,CAAClgF,UAAU,KAAKvuC,SAAS,EAAGopC,QAAQ,CAACmF,UAAU,GAAGkgF,IAAI,CAAClgF,UAAU;QAE1E,IAAKkgF,IAAI,CAACvgF,YAAY,KAAKluC,SAAS,EAAGopC,QAAQ,CAAC8E,YAAY,GAAGugF,IAAI,CAACvgF,YAAY;QAChF,IAAKugF,IAAI,CAAC9gF,gBAAgB,KAAK3tC,SAAS,EAAGopC,QAAQ,CAACuE,gBAAgB,GAAG8gF,IAAI,CAAC9gF,gBAAgB;QAC5F,IAAK8gF,IAAI,CAAC7gF,WAAW,KAAK5tC,SAAS,EAAGopC,QAAQ,CAACwE,WAAW,GAAG6gF,IAAI,CAAC7gF,WAAW;QAC7E,IAAK6gF,IAAI,CAAC5gF,UAAU,KAAK7tC,SAAS,EAAGopC,QAAQ,CAACyE,UAAU,GAAG4gF,IAAI,CAAC5gF,UAAU;QAC1E,IAAK4gF,IAAI,CAAC3gF,eAAe,KAAK9tC,SAAS,EAAGopC,QAAQ,CAAC0E,eAAe,GAAG2gF,IAAI,CAAC3gF,eAAe;QACzF,IAAK2gF,IAAI,CAAC1gF,WAAW,KAAK/tC,SAAS,EAAGopC,QAAQ,CAAC2E,WAAW,GAAG0gF,IAAI,CAAC1gF,WAAW;QAC7E,IAAK0gF,IAAI,CAACzgF,YAAY,KAAKhuC,SAAS,EAAGopC,QAAQ,CAAC4E,YAAY,GAAGygF,IAAI,CAACzgF,YAAY;QAChF,IAAKygF,IAAI,CAACxgF,YAAY,KAAKjuC,SAAS,EAAGopC,QAAQ,CAAC6E,YAAY,GAAGwgF,IAAI,CAACxgF,YAAY;QAEhF,IAAKwgF,IAAI,CAACn7E,SAAS,KAAKtzC,SAAS,EAAGopC,QAAQ,CAACkK,SAAS,GAAGm7E,IAAI,CAACn7E,SAAS;QACvE,IAAKm7E,IAAI,CAACl7E,kBAAkB,KAAKvzC,SAAS,EAAGopC,QAAQ,CAACmK,kBAAkB,GAAGk7E,IAAI,CAACl7E,kBAAkB;QAClG,IAAKk7E,IAAI,CAACj7E,gBAAgB,KAAKxzC,SAAS,EAAGopC,QAAQ,CAACoK,gBAAgB,GAAGi7E,IAAI,CAACj7E,gBAAgB;QAC5F,IAAKi7E,IAAI,CAACh7E,iBAAiB,KAAKzzC,SAAS,EAAGopC,QAAQ,CAACqK,iBAAiB,GAAGg7E,IAAI,CAACh7E,iBAAiB;QAE/F,IAAKg7E,IAAI,CAAC/uG,QAAQ,KAAK1f,SAAS,EAAGopC,QAAQ,CAAC1pB,QAAQ,GAAG+uG,IAAI,CAAC/uG,QAAQ;QAEpE,IAAK+uG,IAAI,CAACv7E,SAAS,KAAK,CAAC,EAAG9J,QAAQ,CAAC8J,SAAS,GAAGu7E,IAAI,CAACv7E,SAAS;QAC/D,IAAKu7E,IAAI,CAACt7E,QAAQ,KAAKnzC,SAAS,EAAGopC,QAAQ,CAAC+J,QAAQ,GAAGs7E,IAAI,CAACt7E,QAAQ;QACpE,IAAKs7E,IAAI,CAACr7E,OAAO,KAAKpzC,SAAS,EAAGopC,QAAQ,CAACgK,OAAO,GAAGq7E,IAAI,CAACr7E,OAAO;QACjE,IAAKq7E,IAAI,CAAC5uG,KAAK,KAAK7f,SAAS,EAAGopC,QAAQ,CAACvpB,KAAK,GAAG4uG,IAAI,CAAC5uG,KAAK;QAE3D,IAAK4uG,IAAI,CAAChgF,aAAa,KAAKzuC,SAAS,EAAGopC,QAAQ,CAACqF,aAAa,GAAGggF,IAAI,CAAChgF,aAAa;QACnF,IAAKggF,IAAI,CAAC//E,mBAAmB,KAAK1uC,SAAS,EAAGopC,QAAQ,CAACsF,mBAAmB,GAAG+/E,IAAI,CAAC//E,mBAAmB;QACrG,IAAK+/E,IAAI,CAAC9/E,kBAAkB,KAAK3uC,SAAS,EAAGopC,QAAQ,CAACuF,kBAAkB,GAAG8/E,IAAI,CAAC9/E,kBAAkB;QAElG,IAAK8/E,IAAI,CAAC7/E,SAAS,KAAK5uC,SAAS,EAAGopC,QAAQ,CAACwF,SAAS,GAAG6/E,IAAI,CAAC7/E,SAAS;QAEvE,IAAK6/E,IAAI,CAAC5/E,eAAe,KAAK7uC,SAAS,EAAGopC,QAAQ,CAACyF,eAAe,GAAG4/E,IAAI,CAAC5/E,eAAe;QACzF,IAAK4/E,IAAI,CAAC3/E,kBAAkB,KAAK9uC,SAAS,EAAGopC,QAAQ,CAAC0F,kBAAkB,GAAG2/E,IAAI,CAAC3/E,kBAAkB;QAClG,IAAK2/E,IAAI,CAAC1/E,eAAe,KAAK/uC,SAAS,EAAGopC,QAAQ,CAAC2F,eAAe,GAAG0/E,IAAI,CAAC1/E,eAAe;QAEzF,IAAK0/E,IAAI,CAAC/pF,OAAO,KAAK1kC,SAAS,EAAGopC,QAAQ,CAAC1E,OAAO,GAAG+pF,IAAI,CAAC/pF,OAAO;QAEjE,IAAK+pF,IAAI,CAACz/E,UAAU,KAAKhvC,SAAS,EAAGopC,QAAQ,CAAC4F,UAAU,GAAGy/E,IAAI,CAACz/E,UAAU;QAE1E,IAAKy/E,IAAI,CAAChoG,QAAQ,KAAKzmB,SAAS,EAAGopC,QAAQ,CAAC3iB,QAAQ,GAAGgoG,IAAI,CAAChoG,QAAQ;QAEpE,IAAKgoG,IAAI,CAAC1hF,YAAY,KAAK/sC,SAAS,EAAG;UAEtC,IAAK,OAAOyuH,IAAI,CAAC1hF,YAAY,KAAK,QAAQ,EAAG;YAE5C3D,QAAQ,CAAC2D,YAAY,GAAK0hF,IAAI,CAAC1hF,YAAY,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK;UAEjE,CAAC,MAAM;YAEN3D,QAAQ,CAAC2D,YAAY,GAAG0hF,IAAI,CAAC1hF,YAAY;UAE1C;QAED;;QAEA;;QAEA,IAAK0hF,IAAI,CAACvqE,QAAQ,KAAKlkD,SAAS,EAAG;UAElC,KAAM,IAAM6B,IAAI,IAAI4sH,IAAI,CAACvqE,QAAQ,EAAG;YAEnC,IAAM8B,OAAO,GAAGyoE,IAAI,CAACvqE,QAAQ,CAAEriD,IAAI,CAAE;YAErCunC,QAAQ,CAAC8a,QAAQ,CAAEriD,IAAI,CAAE,GAAG,CAAC,CAAC;YAE9B,QAASmkD,OAAO,CAACzoD,IAAI;cAEpB,KAAK,GAAG;gBACP6rC,QAAQ,CAAC8a,QAAQ,CAAEriD,IAAI,CAAE,CAACnG,KAAK,GAAG+zJ,UAAU,CAAEzpG,OAAO,CAACtqD,KAAK,CAAE;gBAC7D;cAED,KAAK,GAAG;gBACP0tC,QAAQ,CAAC8a,QAAQ,CAAEriD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAIw4C,KAAK,EAAE,CAACG,MAAM,CAAE2R,OAAO,CAACtqD,KAAK,CAAE;gBACrE;cAED,KAAK,IAAI;gBACR0tC,QAAQ,CAAC8a,QAAQ,CAAEriD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAI8b,OAAO,EAAE,CAACuD,SAAS,CAAEirC,OAAO,CAACtqD,KAAK,CAAE;gBAC1E;cAED,KAAK,IAAI;gBACR0tC,QAAQ,CAAC8a,QAAQ,CAAEriD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAIo1B,OAAO,EAAE,CAAC/V,SAAS,CAAEirC,OAAO,CAACtqD,KAAK,CAAE;gBAC1E;cAED,KAAK,IAAI;gBACR0tC,QAAQ,CAAC8a,QAAQ,CAAEriD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAI6rB,OAAO,EAAE,CAACxM,SAAS,CAAEirC,OAAO,CAACtqD,KAAK,CAAE;gBAC1E;cAED,KAAK,IAAI;gBACR0tC,QAAQ,CAAC8a,QAAQ,CAAEriD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAIggB,OAAO,EAAE,CAACX,SAAS,CAAEirC,OAAO,CAACtqD,KAAK,CAAE;gBAC1E;cAED,KAAK,IAAI;gBACR0tC,QAAQ,CAAC8a,QAAQ,CAAEriD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAI6gC,OAAO,EAAE,CAACxhB,SAAS,CAAEirC,OAAO,CAACtqD,KAAK,CAAE;gBAC1E;cAED;gBACC0tC,QAAQ,CAAC8a,QAAQ,CAAEriD,IAAI,CAAE,CAACnG,KAAK,GAAGsqD,OAAO,CAACtqD,KAAK;YAAC;UAInD;QAED;QAEA,IAAK+yH,IAAI,CAACxpE,OAAO,KAAKjlD,SAAS,EAAGopC,QAAQ,CAAC6b,OAAO,GAAGwpE,IAAI,CAACxpE,OAAO;QACjE,IAAKwpE,IAAI,CAACtpE,YAAY,KAAKnlD,SAAS,EAAGopC,QAAQ,CAAC+b,YAAY,GAAGspE,IAAI,CAACtpE,YAAY;QAChF,IAAKspE,IAAI,CAACrpE,cAAc,KAAKplD,SAAS,EAAGopC,QAAQ,CAACgc,cAAc,GAAGqpE,IAAI,CAACrpE,cAAc;QACtF,IAAKqpE,IAAI,CAAC1oE,WAAW,KAAK/lD,SAAS,EAAGopC,QAAQ,CAAC2c,WAAW,GAAG0oE,IAAI,CAAC1oE,WAAW;QAE7E,IAAK0oE,IAAI,CAAClpE,UAAU,KAAKvlD,SAAS,EAAG;UAEpC,KAAM,IAAMxE,GAAG,IAAIizH,IAAI,CAAClpE,UAAU,EAAG;YAEpCnc,QAAQ,CAACmc,UAAU,CAAE/pD,GAAG,CAAE,GAAGizH,IAAI,CAAClpE,UAAU,CAAE/pD,GAAG,CAAE;UAEpD;QAED;;QAEA;;QAEA,IAAKizH,IAAI,CAAC15F,IAAI,KAAK/0B,SAAS,EAAGopC,QAAQ,CAACrU,IAAI,GAAG05F,IAAI,CAAC15F,IAAI;QACxD,IAAK05F,IAAI,CAACx7E,eAAe,KAAKjzC,SAAS,EAAGopC,QAAQ,CAAC6J,eAAe,GAAGw7E,IAAI,CAACx7E,eAAe;;QAEzF;;QAEA,IAAKw7E,IAAI,CAACz9E,GAAG,KAAKhxC,SAAS,EAAGopC,QAAQ,CAAC4H,GAAG,GAAGy+G,UAAU,CAAEhhC,IAAI,CAACz9E,GAAG,CAAE;QACnE,IAAKy9E,IAAI,CAACx9E,MAAM,KAAKjxC,SAAS,EAAGopC,QAAQ,CAAC6H,MAAM,GAAGw+G,UAAU,CAAEhhC,IAAI,CAACx9E,MAAM,CAAE;QAE5E,IAAKw9E,IAAI,CAACv9E,QAAQ,KAAKlxC,SAAS,EAAGopC,QAAQ,CAAC8H,QAAQ,GAAGu+G,UAAU,CAAEhhC,IAAI,CAACv9E,QAAQ,CAAE;QAElF,IAAKu9E,IAAI,CAACl9E,OAAO,KAAKvxC,SAAS,EAAGopC,QAAQ,CAACmI,OAAO,GAAGk+G,UAAU,CAAEhhC,IAAI,CAACl9E,OAAO,CAAE;QAC/E,IAAKk9E,IAAI,CAACj9E,SAAS,KAAKxxC,SAAS,EAAGopC,QAAQ,CAACoI,SAAS,GAAGi9E,IAAI,CAACj9E,SAAS;QAEvE,IAAKi9E,IAAI,CAACh9E,SAAS,KAAKzxC,SAAS,EAAGopC,QAAQ,CAACqI,SAAS,GAAGg+G,UAAU,CAAEhhC,IAAI,CAACh9E,SAAS,CAAE;QACrF,IAAKg9E,IAAI,CAAC/8E,aAAa,KAAK1xC,SAAS,EAAGopC,QAAQ,CAACsI,aAAa,GAAG+8E,IAAI,CAAC/8E,aAAa;QACnF,IAAK+8E,IAAI,CAAC98E,WAAW,KAAK3xC,SAAS,EAAG;UAErC,IAAI2xC,WAAW,GAAG88E,IAAI,CAAC98E,WAAW;UAElC,IAAKrtB,KAAK,CAACC,OAAO,CAAEotB,WAAW,CAAE,KAAK,KAAK,EAAG;YAE7C;;YAEAA,WAAW,GAAG,CAAEA,WAAW,EAAEA,WAAW,CAAE;UAE3C;UAEAvI,QAAQ,CAACuI,WAAW,GAAG,IAAIn6B,OAAO,EAAE,CAACuD,SAAS,CAAE42B,WAAW,CAAE;QAE9D;QAEA,IAAK88E,IAAI,CAAC78E,eAAe,KAAK5xC,SAAS,EAAGopC,QAAQ,CAACwI,eAAe,GAAG69G,UAAU,CAAEhhC,IAAI,CAAC78E,eAAe,CAAE;QACvG,IAAK68E,IAAI,CAAC58E,iBAAiB,KAAK7xC,SAAS,EAAGopC,QAAQ,CAACyI,iBAAiB,GAAG48E,IAAI,CAAC58E,iBAAiB;QAC/F,IAAK48E,IAAI,CAAC38E,gBAAgB,KAAK9xC,SAAS,EAAGopC,QAAQ,CAAC0I,gBAAgB,GAAG28E,IAAI,CAAC38E,gBAAgB;QAE5F,IAAK28E,IAAI,CAAC18E,YAAY,KAAK/xC,SAAS,EAAGopC,QAAQ,CAAC2I,YAAY,GAAG09G,UAAU,CAAEhhC,IAAI,CAAC18E,YAAY,CAAE;QAC9F,IAAK08E,IAAI,CAACz8E,YAAY,KAAKhyC,SAAS,EAAGopC,QAAQ,CAAC4I,YAAY,GAAGy9G,UAAU,CAAEhhC,IAAI,CAACz8E,YAAY,CAAE;QAE9F,IAAKy8E,IAAI,CAACx8E,WAAW,KAAKjyC,SAAS,EAAGopC,QAAQ,CAAC6I,WAAW,GAAGw9G,UAAU,CAAEhhC,IAAI,CAACx8E,WAAW,CAAE;QAC3F,IAAKw8E,IAAI,CAACz+E,iBAAiB,KAAKhwC,SAAS,EAAGopC,QAAQ,CAAC4G,iBAAiB,GAAGy+E,IAAI,CAACz+E,iBAAiB;QAE/F,IAAKy+E,IAAI,CAACv8E,WAAW,KAAKlyC,SAAS,EAAGopC,QAAQ,CAAC8I,WAAW,GAAGu9G,UAAU,CAAEhhC,IAAI,CAACv8E,WAAW,CAAE;QAC3F,IAAKu8E,IAAI,CAACt8E,oBAAoB,KAAKnyC,SAAS,EAAGopC,QAAQ,CAAC+I,oBAAoB,GAAGs9G,UAAU,CAAEhhC,IAAI,CAACt8E,oBAAoB,CAAE;QACtH,IAAKs8E,IAAI,CAACr8E,gBAAgB,KAAKpyC,SAAS,EAAGopC,QAAQ,CAACgJ,gBAAgB,GAAGq9G,UAAU,CAAEhhC,IAAI,CAACr8E,gBAAgB,CAAE;QAE1G,IAAKq8E,IAAI,CAACp8E,MAAM,KAAKryC,SAAS,EAAGopC,QAAQ,CAACiJ,MAAM,GAAGo9G,UAAU,CAAEhhC,IAAI,CAACp8E,MAAM,CAAE;QAC5E,IAAKo8E,IAAI,CAACl8E,eAAe,KAAKvyC,SAAS,EAAGopC,QAAQ,CAACmJ,eAAe,GAAGk8E,IAAI,CAACl8E,eAAe;QAEzF,IAAKk8E,IAAI,CAACj8E,YAAY,KAAKxyC,SAAS,EAAGopC,QAAQ,CAACoJ,YAAY,GAAGi8E,IAAI,CAACj8E,YAAY;QAChF,IAAKi8E,IAAI,CAACh8E,eAAe,KAAKzyC,SAAS,EAAGopC,QAAQ,CAACqJ,eAAe,GAAGg8E,IAAI,CAACh8E,eAAe;QAEzF,IAAKg8E,IAAI,CAACt9E,QAAQ,KAAKnxC,SAAS,EAAGopC,QAAQ,CAAC+H,QAAQ,GAAGs+G,UAAU,CAAEhhC,IAAI,CAACt9E,QAAQ,CAAE;QAClF,IAAKs9E,IAAI,CAACr9E,iBAAiB,KAAKpxC,SAAS,EAAGopC,QAAQ,CAACgI,iBAAiB,GAAGq9E,IAAI,CAACr9E,iBAAiB;QAE/F,IAAKq9E,IAAI,CAACp9E,KAAK,KAAKrxC,SAAS,EAAGopC,QAAQ,CAACiI,KAAK,GAAGo+G,UAAU,CAAEhhC,IAAI,CAACp9E,KAAK,CAAE;QACzE,IAAKo9E,IAAI,CAACn9E,cAAc,KAAKtxC,SAAS,EAAGopC,QAAQ,CAACkI,cAAc,GAAGm9E,IAAI,CAACn9E,cAAc;QAEtF,IAAKm9E,IAAI,CAAC/7E,WAAW,KAAK1yC,SAAS,EAAGopC,QAAQ,CAACsJ,WAAW,GAAG+8G,UAAU,CAAEhhC,IAAI,CAAC/7E,WAAW,CAAE;QAE3F,IAAK+7E,IAAI,CAACl+E,YAAY,KAAKvwC,SAAS,EAAGopC,QAAQ,CAACmH,YAAY,GAAGk/G,UAAU,CAAEhhC,IAAI,CAACl+E,YAAY,CAAE;QAC9F,IAAKk+E,IAAI,CAACj+E,qBAAqB,KAAKxwC,SAAS,EAAGopC,QAAQ,CAACoH,qBAAqB,GAAGi/G,UAAU,CAAEhhC,IAAI,CAACj+E,qBAAqB,CAAE;QACzH,IAAKi+E,IAAI,CAACh+E,kBAAkB,KAAKzwC,SAAS,EAAGopC,QAAQ,CAACqH,kBAAkB,GAAGg/G,UAAU,CAAEhhC,IAAI,CAACh+E,kBAAkB,CAAE;QAChH,IAAKg+E,IAAI,CAAC/9E,oBAAoB,KAAK1wC,SAAS,EAAGopC,QAAQ,CAACsH,oBAAoB,GAAG,IAAIl5B,OAAO,EAAE,CAACuD,SAAS,CAAE0zG,IAAI,CAAC/9E,oBAAoB,CAAE;QAEnI,IAAK+9E,IAAI,CAAC39E,cAAc,KAAK9wC,SAAS,EAAGopC,QAAQ,CAAC0H,cAAc,GAAG2+G,UAAU,CAAEhhC,IAAI,CAAC39E,cAAc,CAAE;QACpG,IAAK29E,IAAI,CAAC19E,uBAAuB,KAAK/wC,SAAS,EAAGopC,QAAQ,CAAC2H,uBAAuB,GAAG0+G,UAAU,CAAEhhC,IAAI,CAAC19E,uBAAuB,CAAE;QAE/H,IAAK09E,IAAI,CAAC77E,eAAe,KAAK5yC,SAAS,EAAGopC,QAAQ,CAACwJ,eAAe,GAAG68G,UAAU,CAAEhhC,IAAI,CAAC77E,eAAe,CAAE;QACvG,IAAK67E,IAAI,CAAC37E,YAAY,KAAK9yC,SAAS,EAAGopC,QAAQ,CAAC0J,YAAY,GAAG28G,UAAU,CAAEhhC,IAAI,CAAC37E,YAAY,CAAE;QAE9F,IAAK27E,IAAI,CAAC/tD,aAAa,KAAK1gE,SAAS,EAAGopC,QAAQ,CAACs3B,aAAa,GAAG+uF,UAAU,CAAEhhC,IAAI,CAAC/tD,aAAa,CAAE;QACjG,IAAK+tD,IAAI,CAAC7tD,iBAAiB,KAAK5gE,SAAS,EAAGopC,QAAQ,CAACw3B,iBAAiB,GAAG6uF,UAAU,CAAEhhC,IAAI,CAAC7tD,iBAAiB,CAAE;QAE7G,OAAOx3B,QAAQ;MAEhB;IAAC;MAAA5tC,GAAA;MAAAE,KAAA,EAED,SAAAi0J,YAAaj0J,KAAK,EAAG;QAEpB,IAAI,CAACwrB,QAAQ,GAAGxrB,KAAK;QACrB,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAg0J,uBAA+BnyJ,IAAI,EAAG;QAErC,IAAMqyJ,WAAW,GAAG;UACnB3lE,cAAc,EAAdA,cAAc;UACdC,cAAc,EAAdA,cAAc;UACdsrD,iBAAiB,EAAjBA,iBAAiB;UACjB5wF,cAAc,EAAdA,cAAc;UACdolC,cAAc,EAAdA,cAAc;UACdJ,oBAAoB,EAApBA,oBAAoB;UACpBD,oBAAoB,EAApBA,oBAAoB;UACpBF,iBAAiB,EAAjBA,iBAAiB;UACjBC,gBAAgB,EAAhBA,gBAAgB;UAChBH,kBAAkB,EAAlBA,kBAAkB;UAClBC,mBAAmB,EAAnBA,mBAAmB;UACnBH,iBAAiB,EAAjBA,iBAAiB;UACjBC,oBAAoB,EAApBA,oBAAoB;UACpBlzC,iBAAiB,EAAjBA,iBAAiB;UACjByzC,kBAAkB,EAAlBA,kBAAkB;UAClBE,kBAAkB,EAAlBA,kBAAkB;UAClBD,iBAAiB,EAAjBA,iBAAiB;UACjBt9C,QAAQ,EAARA;QACD,CAAC;QAED,OAAO,IAAIojH,WAAW,CAAEryJ,IAAI,CAAE,EAAE;MAEjC;IAAC;IAAA,OAAA8xJ,cAAA;EAAA,EAlU2BjK,MAAM;EAAA,IAsU7ByK,WAAW;IAAA,SAAAA,YAAA;MAAA/rJ,eAAA,OAAA+rJ,WAAA;IAAA;IAAAvrJ,YAAA,CAAAurJ,WAAA;MAAAr0J,GAAA;MAAAE,KAAA,EAEhB,SAAAo0J,WAAmB79I,KAAK,EAAG;QAE1B,IAAK,OAAO+2I,WAAW,KAAK,WAAW,EAAG;UAEzC,OAAO,IAAIA,WAAW,EAAE,CAACC,MAAM,CAAEh3I,KAAK,CAAE;QAEzC;;QAEA;QACA;;QAEA,IAAIgD,CAAC,GAAG,EAAE;QAEV,KAAM,IAAI1T,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGha,KAAK,CAAC3Q,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAElD;UACA0T,CAAC,IAAIvQ,MAAM,CAACqrJ,YAAY,CAAE99I,KAAK,CAAE1Q,CAAC,CAAE,CAAE;QAEvC;QAEA,IAAI;UAEH;;UAEA,OAAOyuJ,kBAAkB,CAAEC,MAAM,CAAEh7I,CAAC,CAAE,CAAE;QAEzC,CAAC,CAAC,OAAQgE,CAAC,EAAG;UAAE;;UAEf,OAAOhE,CAAC;QAET;MAED;IAAC;MAAAzZ,GAAA;MAAAE,KAAA,EAED,SAAAw0J,eAAuB7rI,GAAG,EAAG;QAE5B,IAAMxS,KAAK,GAAGwS,GAAG,CAAC8rI,WAAW,CAAE,GAAG,CAAE;QAEpC,IAAKt+I,KAAK,KAAK,CAAE,CAAC,EAAG,OAAO,IAAI;QAEhC,OAAOwS,GAAG,CAACxhB,KAAK,CAAE,CAAC,EAAEgP,KAAK,GAAG,CAAC,CAAE;MAEjC;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAkpJ,WAAmBvgI,GAAG,EAAE83D,IAAI,EAAG;QAE9B;QACA,IAAK,OAAO93D,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,EAAE,EAAG,OAAO,EAAE;;QAEtD;QACA,IAAK,eAAe,CAACzB,IAAI,CAAEu5D,IAAI,CAAE,IAAI,KAAK,CAACv5D,IAAI,CAAEyB,GAAG,CAAE,EAAG;UAExD83D,IAAI,GAAGA,IAAI,CAACoE,OAAO,CAAE,yBAAyB,EAAE,IAAI,CAAE;QAEvD;;QAEA;QACA,IAAK,kBAAkB,CAAC39D,IAAI,CAAEyB,GAAG,CAAE,EAAG,OAAOA,GAAG;;QAEhD;QACA,IAAK,eAAe,CAACzB,IAAI,CAAEyB,GAAG,CAAE,EAAG,OAAOA,GAAG;;QAE7C;QACA,IAAK,YAAY,CAACzB,IAAI,CAAEyB,GAAG,CAAE,EAAG,OAAOA,GAAG;;QAE1C;QACA,OAAO83D,IAAI,GAAG93D,GAAG;MAElB;IAAC;IAAA,OAAAwrI,WAAA;EAAA;EAAA,IAIIO,uBAAuB,0BAAAC,iBAAA;IAAAvrI,SAAA,CAAAsrI,uBAAA,EAAAC,iBAAA;IAAA,IAAAC,SAAA,GAAAtrI,YAAA,CAAAorI,uBAAA;IAE5B,SAAAA,wBAAA,EAAc;MAAA,IAAAG,QAAA;MAAAzsJ,eAAA,OAAAssJ,uBAAA;MAEbG,QAAA,GAAAD,SAAA,CAAA9yJ,IAAA;MAEA+yJ,QAAA,CAAKrqF,yBAAyB,GAAG,IAAI;MAErCqqF,QAAA,CAAKhzJ,IAAI,GAAG,yBAAyB;MACrCgzJ,QAAA,CAAKj9E,aAAa,GAAGj/C,QAAQ;MAAC,OAAAk8H,QAAA;IAE/B;IAACjsJ,YAAA,CAAA8rJ,uBAAA;MAAA50J,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAA05G,uBAAA,CAAAj1J,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAACutD,aAAa,GAAGvtD,MAAM,CAACutD,aAAa;QAEzC,OAAO,IAAI;MAEZ;IAAC;MAAA93E,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAA,EAAS;QAER,IAAMJ,IAAI,GAAA6yB,IAAA,CAAAC,eAAA,CAAA05G,uBAAA,CAAAj1J,SAAA,mBAAAqC,IAAA,MAAiB;QAE3BomB,IAAI,CAAC0vD,aAAa,GAAG,IAAI,CAACA,aAAa;QAEvC1vD,IAAI,CAACsiD,yBAAyB,GAAG,IAAI;QAErC,OAAOtiD,IAAI;MAEZ;IAAC;IAAA,OAAAwsI,uBAAA;EAAA,EAjCoC/0G,cAAc;EAAA,IAqC9Cm1G,oBAAoB,0BAAAC,QAAA;IAAA3rI,SAAA,CAAA0rI,oBAAA,EAAAC,QAAA;IAAA,IAAAC,SAAA,GAAA1rI,YAAA,CAAAwrI,oBAAA;IAEzB,SAAAA,qBAAanL,OAAO,EAAG;MAAAvhJ,eAAA,OAAA0sJ,oBAAA;MAAA,OAAAE,SAAA,CAAAlzJ,IAAA,OAEf6nJ,OAAO;IAEf;IAAC/gJ,YAAA,CAAAksJ,oBAAA;MAAAh1J,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAExC,IAAMthG,KAAK,GAAG,IAAI;QAElB,IAAMoiG,MAAM,GAAG,IAAIwB,UAAU,CAAE5jG,KAAK,CAACyiG,OAAO,CAAE;QAC9CL,MAAM,CAACc,OAAO,CAAEljG,KAAK,CAACu5B,IAAI,CAAE;QAC5B6oE,MAAM,CAACgB,gBAAgB,CAAEpjG,KAAK,CAAC6iG,aAAa,CAAE;QAC9CT,MAAM,CAACa,kBAAkB,CAAEjjG,KAAK,CAAC2iG,eAAe,CAAE;QAClDP,MAAM,CAACU,IAAI,CAAErhI,GAAG,EAAE,UAAWokI,IAAI,EAAG;UAEnC,IAAI;YAEHzE,MAAM,CAAEphG,KAAK,CAAC77B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE0hI,IAAI,CAAE,CAAE,CAAE;UAE5C,CAAC,CAAC,OAAQxvI,CAAC,EAAG;YAEb,IAAKirI,OAAO,EAAG;cAEdA,OAAO,CAAEjrI,CAAC,CAAE;YAEb,CAAC,MAAM;cAENhU,OAAO,CAAChG,KAAK,CAAEga,CAAC,CAAE;YAEnB;YAEA2pC,KAAK,CAACyiG,OAAO,CAACV,SAAS,CAAEtgI,GAAG,CAAE;UAE/B;QAED,CAAC,EAAE4/H,UAAU,EAAEC,OAAO,CAAE;MAEzB;IAAC;MAAA1oJ,GAAA;MAAAE,KAAA,EAED,SAAAqrB,MAAO0nG,IAAI,EAAG;QAEb,IAAMkiC,oBAAoB,GAAG,CAAC,CAAC;QAC/B,IAAMC,cAAc,GAAG,CAAC,CAAC;QAEzB,SAASC,oBAAoBA,CAAEpiC,IAAI,EAAE17G,IAAI,EAAG;UAE3C,IAAK49I,oBAAoB,CAAE59I,IAAI,CAAE,KAAK/S,SAAS,EAAG,OAAO2wJ,oBAAoB,CAAE59I,IAAI,CAAE;UAErF,IAAMm3G,kBAAkB,GAAGuE,IAAI,CAACvE,kBAAkB;UAClD,IAAMD,iBAAiB,GAAGC,kBAAkB,CAAEn3G,IAAI,CAAE;UAEpD,IAAM6N,MAAM,GAAGkwI,cAAc,CAAEriC,IAAI,EAAExE,iBAAiB,CAACrpG,MAAM,CAAE;UAE/D,IAAM3O,KAAK,GAAG0O,aAAa,CAAEspG,iBAAiB,CAAC1sH,IAAI,EAAEqjB,MAAM,CAAE;UAC7D,IAAMkpG,EAAE,GAAG,IAAIJ,iBAAiB,CAAEz3G,KAAK,EAAEg4G,iBAAiB,CAACzqE,MAAM,CAAE;UACnEsqE,EAAE,CAAC/2G,IAAI,GAAGk3G,iBAAiB,CAACl3G,IAAI;UAEhC49I,oBAAoB,CAAE59I,IAAI,CAAE,GAAG+2G,EAAE;UAEjC,OAAOA,EAAE;QAEV;QAEA,SAASgnC,cAAcA,CAAEriC,IAAI,EAAE17G,IAAI,EAAG;UAErC,IAAK69I,cAAc,CAAE79I,IAAI,CAAE,KAAK/S,SAAS,EAAG,OAAO4wJ,cAAc,CAAE79I,IAAI,CAAE;UAEzE,IAAM62G,YAAY,GAAG6E,IAAI,CAAC7E,YAAY;UACtC,IAAM2+B,WAAW,GAAG3+B,YAAY,CAAE72G,IAAI,CAAE;UAExC,IAAMksC,EAAE,GAAG,IAAIx+B,WAAW,CAAE8nI,WAAW,CAAE,CAAC3nI,MAAM;UAEhDgwI,cAAc,CAAE79I,IAAI,CAAE,GAAGksC,EAAE;UAE3B,OAAOA,EAAE;QAEV;QAEA,IAAMhpB,QAAQ,GAAGw4F,IAAI,CAACvoD,yBAAyB,GAAG,IAAIkqF,uBAAuB,EAAE,GAAG,IAAI/0G,cAAc,EAAE;QAEtG,IAAMxpC,KAAK,GAAG48G,IAAI,CAAC7qG,IAAI,CAAC/R,KAAK;QAE7B,IAAKA,KAAK,KAAK7R,SAAS,EAAG;UAE1B,IAAM+wJ,UAAU,GAAGpwI,aAAa,CAAE9O,KAAK,CAACtU,IAAI,EAAEsU,KAAK,CAACI,KAAK,CAAE;UAC3DgkB,QAAQ,CAACgmB,QAAQ,CAAE,IAAIvE,eAAe,CAAEq5G,UAAU,EAAE,CAAC,CAAE,CAAE;QAE1D;QAEA,IAAM76H,UAAU,GAAGu4F,IAAI,CAAC7qG,IAAI,CAACsS,UAAU;QAEvC,KAAM,IAAM16B,GAAG,IAAI06B,UAAU,EAAG;UAE/B,IAAM/a,SAAS,GAAG+a,UAAU,CAAE16B,GAAG,CAAE;UACnC,IAAIw1J,eAAe;UAEnB,IAAK71I,SAAS,CAACokC,4BAA4B,EAAG;YAE7C,IAAM0qE,iBAAiB,GAAG4mC,oBAAoB,CAAEpiC,IAAI,CAAC7qG,IAAI,EAAEzI,SAAS,CAACyI,IAAI,CAAE;YAC3EotI,eAAe,GAAG,IAAIhnC,0BAA0B,CAAEC,iBAAiB,EAAE9uG,SAAS,CAACw8B,QAAQ,EAAEx8B,SAAS,CAACH,MAAM,EAAEG,SAAS,CAACy8B,UAAU,CAAE;UAElI,CAAC,MAAM;YAEN,IAAMm5G,WAAU,GAAGpwI,aAAa,CAAExF,SAAS,CAAC5d,IAAI,EAAE4d,SAAS,CAAClJ,KAAK,CAAE;YACnE,IAAMg/I,qBAAqB,GAAG91I,SAAS,CAACqrD,0BAA0B,GAAGmoD,wBAAwB,GAAGj3E,eAAe;YAC/Gs5G,eAAe,GAAG,IAAIC,qBAAqB,CAAEF,WAAU,EAAE51I,SAAS,CAACw8B,QAAQ,EAAEx8B,SAAS,CAACy8B,UAAU,CAAE;UAEpG;UAEA,IAAKz8B,SAAS,CAACtZ,IAAI,KAAK7B,SAAS,EAAGgxJ,eAAe,CAACnvJ,IAAI,GAAGsZ,SAAS,CAACtZ,IAAI;UACzE,IAAKsZ,SAAS,CAAC28B,KAAK,KAAK93C,SAAS,EAAGgxJ,eAAe,CAAC/4G,QAAQ,CAAE98B,SAAS,CAAC28B,KAAK,CAAE;UAEhF,IAAK38B,SAAS,CAAC48B,WAAW,KAAK/3C,SAAS,EAAG;YAE1CgxJ,eAAe,CAACj5G,WAAW,CAAC/8B,MAAM,GAAGG,SAAS,CAAC48B,WAAW,CAAC/8B,MAAM;YACjEg2I,eAAe,CAACj5G,WAAW,CAACjsB,KAAK,GAAG3Q,SAAS,CAAC48B,WAAW,CAACjsB,KAAK;UAEhE;UAEAmK,QAAQ,CAACkmB,YAAY,CAAE3gD,GAAG,EAAEw1J,eAAe,CAAE;QAE9C;QAEA,IAAMt1G,eAAe,GAAG+yE,IAAI,CAAC7qG,IAAI,CAAC83B,eAAe;QAEjD,IAAKA,eAAe,EAAG;UAEtB,KAAM,IAAMlgD,KAAG,IAAIkgD,eAAe,EAAG;YAEpC,IAAMmE,cAAc,GAAGnE,eAAe,CAAElgD,KAAG,CAAE;YAE7C,IAAMyW,KAAK,GAAG,EAAE;YAEhB,KAAM,IAAI1Q,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG4zB,cAAc,CAACv+C,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;cAE3D,IAAM4Z,WAAS,GAAG0kC,cAAc,CAAEt+C,CAAC,CAAE;cACrC,IAAIyvJ,gBAAe;cAEnB,IAAK71I,WAAS,CAACokC,4BAA4B,EAAG;gBAE7C,IAAM0qE,kBAAiB,GAAG4mC,oBAAoB,CAAEpiC,IAAI,CAAC7qG,IAAI,EAAEzI,WAAS,CAACyI,IAAI,CAAE;gBAC3EotI,gBAAe,GAAG,IAAIhnC,0BAA0B,CAAEC,kBAAiB,EAAE9uG,WAAS,CAACw8B,QAAQ,EAAEx8B,WAAS,CAACH,MAAM,EAAEG,WAAS,CAACy8B,UAAU,CAAE;cAElI,CAAC,MAAM;gBAEN,IAAMm5G,YAAU,GAAGpwI,aAAa,CAAExF,WAAS,CAAC5d,IAAI,EAAE4d,WAAS,CAAClJ,KAAK,CAAE;gBACnE++I,gBAAe,GAAG,IAAIt5G,eAAe,CAAEq5G,YAAU,EAAE51I,WAAS,CAACw8B,QAAQ,EAAEx8B,WAAS,CAACy8B,UAAU,CAAE;cAE9F;cAEA,IAAKz8B,WAAS,CAACtZ,IAAI,KAAK7B,SAAS,EAAGgxJ,gBAAe,CAACnvJ,IAAI,GAAGsZ,WAAS,CAACtZ,IAAI;cACzEoQ,KAAK,CAAClR,IAAI,CAAEiwJ,gBAAe,CAAE;YAE9B;YAEA/6H,QAAQ,CAACylB,eAAe,CAAElgD,KAAG,CAAE,GAAGyW,KAAK;UAExC;QAED;QAEA,IAAM0pC,oBAAoB,GAAG8yE,IAAI,CAAC7qG,IAAI,CAAC+3B,oBAAoB;QAE3D,IAAKA,oBAAoB,EAAG;UAE3B1lB,QAAQ,CAAC0lB,oBAAoB,GAAG,IAAI;QAErC;QAEA,IAAMC,MAAM,GAAG6yE,IAAI,CAAC7qG,IAAI,CAACg4B,MAAM,IAAI6yE,IAAI,CAAC7qG,IAAI,CAACstI,SAAS,IAAIziC,IAAI,CAAC7qG,IAAI,CAACutI,OAAO;QAE3E,IAAKv1G,MAAM,KAAK57C,SAAS,EAAG;UAE3B,KAAM,IAAIuB,IAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGuoC,MAAM,CAACt6C,MAAM,EAAEC,IAAC,KAAK8R,CAAC,EAAE,EAAG9R,IAAC,EAAG;YAEnD,IAAM48C,KAAK,GAAGvC,MAAM,CAAEr6C,IAAC,CAAE;YAEzB00B,QAAQ,CAACqmB,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAACryB,KAAK,EAAEqyB,KAAK,CAAC5B,aAAa,CAAE;UAEnE;QAED;QAEA,IAAMV,cAAc,GAAG4yE,IAAI,CAAC7qG,IAAI,CAACi4B,cAAc;QAE/C,IAAKA,cAAc,KAAK77C,SAAS,EAAG;UAEnC,IAAMub,MAAM,GAAG,IAAIuV,OAAO,EAAE;UAE5B,IAAK+qB,cAAc,CAACtgC,MAAM,KAAKvb,SAAS,EAAG;YAE1Cub,MAAM,CAACR,SAAS,CAAE8gC,cAAc,CAACtgC,MAAM,CAAE;UAE1C;UAEA0a,QAAQ,CAAC4lB,cAAc,GAAG,IAAInjB,MAAM,CAAEnd,MAAM,EAAEsgC,cAAc,CAACtoB,MAAM,CAAE;QAEtE;QAEA,IAAKk7F,IAAI,CAAC5sH,IAAI,EAAGo0B,QAAQ,CAACp0B,IAAI,GAAG4sH,IAAI,CAAC5sH,IAAI;QAC1C,IAAK4sH,IAAI,CAAChoG,QAAQ,EAAGwP,QAAQ,CAACxP,QAAQ,GAAGgoG,IAAI,CAAChoG,QAAQ;QAEtD,OAAOwP,QAAQ;MAEhB;IAAC;IAAA,OAAAu6H,oBAAA;EAAA,EA/MiCpL,MAAM;EAAA,IAmNnCgM,YAAY,0BAAAC,SAAA;IAAAvsI,SAAA,CAAAssI,YAAA,EAAAC,SAAA;IAAA,IAAAC,SAAA,GAAAtsI,YAAA,CAAAosI,YAAA;IAEjB,SAAAA,aAAa/L,OAAO,EAAG;MAAAvhJ,eAAA,OAAAstJ,YAAA;MAAA,OAAAE,SAAA,CAAA9zJ,IAAA,OAEf6nJ,OAAO;IAEf;IAAC/gJ,YAAA,CAAA8sJ,YAAA;MAAA51J,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAExC,IAAMthG,KAAK,GAAG,IAAI;QAElB,IAAMu5B,IAAI,GAAK,IAAI,CAACA,IAAI,KAAK,EAAE,GAAK0zE,WAAW,CAACK,cAAc,CAAE7rI,GAAG,CAAE,GAAG,IAAI,CAAC83D,IAAI;QACjF,IAAI,CAACqpE,YAAY,GAAG,IAAI,CAACA,YAAY,IAAIrpE,IAAI;QAE7C,IAAM6oE,MAAM,GAAG,IAAIwB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;QAC7CL,MAAM,CAACc,OAAO,CAAE,IAAI,CAAC3pE,IAAI,CAAE;QAC3B6oE,MAAM,CAACgB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;QAC7CT,MAAM,CAACa,kBAAkB,CAAE,IAAI,CAACN,eAAe,CAAE;QACjDP,MAAM,CAACU,IAAI,CAAErhI,GAAG,EAAE,UAAWokI,IAAI,EAAG;UAEnC,IAAIh6B,IAAI,GAAG,IAAI;UAEf,IAAI;YAEHA,IAAI,GAAG3nG,IAAI,CAACC,KAAK,CAAE0hI,IAAI,CAAE;UAE1B,CAAC,CAAC,OAAQxpJ,KAAK,EAAG;YAEjB,IAAKilJ,OAAO,KAAKlkJ,SAAS,EAAGkkJ,OAAO,CAAEjlJ,KAAK,CAAE;YAE7CgG,OAAO,CAAChG,KAAK,CAAE,mCAAmC,GAAGolB,GAAG,GAAG,GAAG,EAAEplB,KAAK,CAAC4iH,OAAO,CAAE;YAE/E;UAED;UAEA,IAAM16F,QAAQ,GAAGsnG,IAAI,CAACtnG,QAAQ;UAE9B,IAAKA,QAAQ,KAAKnnB,SAAS,IAAImnB,QAAQ,CAAC5pB,IAAI,KAAKyC,SAAS,IAAImnB,QAAQ,CAAC5pB,IAAI,CAACyV,WAAW,EAAE,KAAK,UAAU,EAAG;YAE1G,IAAKkxI,OAAO,KAAKlkJ,SAAS,EAAGkkJ,OAAO,CAAE,IAAI7kJ,KAAK,CAAE,kCAAkC,GAAGglB,GAAG,CAAE,CAAE;YAE7Fpf,OAAO,CAAChG,KAAK,CAAE,kCAAkC,GAAGolB,GAAG,CAAE;YACzD;UAED;UAEAu+B,KAAK,CAAC77B,KAAK,CAAE0nG,IAAI,EAAEu1B,MAAM,CAAE;QAE5B,CAAC,EAAEC,UAAU,EAAEC,OAAO,CAAE;MAEzB;IAAC;MAAA1oJ,GAAA;MAAAE,KAAA;QAAA,IAAA61J,UAAA,GAAAx7C,iBAAA,eAAAh7G,mBAAA,GAAA+G,IAAA,CAED,SAAA0vJ,SAAiBntI,GAAG,EAAE4/H,UAAU;UAAA,IAAArhG,KAAA,EAAAu5B,IAAA,EAAA6oE,MAAA,EAAAyD,IAAA,EAAAh6B,IAAA,EAAAtnG,QAAA;UAAA,OAAApsB,mBAAA,GAAAyB,IAAA,UAAAi1J,UAAAC,UAAA;YAAA,kBAAAA,UAAA,CAAA/uJ,IAAA,GAAA+uJ,UAAA,CAAArxJ,IAAA;cAAA;gBAEzBuiD,KAAK,GAAG,IAAI;gBAEZu5B,IAAI,GAAK,IAAI,CAACA,IAAI,KAAK,EAAE,GAAK0zE,WAAW,CAACK,cAAc,CAAE7rI,GAAG,CAAE,GAAG,IAAI,CAAC83D,IAAI;gBACjF,IAAI,CAACqpE,YAAY,GAAG,IAAI,CAACA,YAAY,IAAIrpE,IAAI;gBAEvC6oE,MAAM,GAAG,IAAIwB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;gBAC7CL,MAAM,CAACc,OAAO,CAAE,IAAI,CAAC3pE,IAAI,CAAE;gBAC3B6oE,MAAM,CAACgB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;gBAC7CT,MAAM,CAACa,kBAAkB,CAAE,IAAI,CAACN,eAAe,CAAE;gBAACmM,UAAA,CAAArxJ,IAAA;gBAAA,OAE/B2kJ,MAAM,CAACW,SAAS,CAAEthI,GAAG,EAAE4/H,UAAU,CAAE;cAAA;gBAAhDwE,IAAI,GAAAiJ,UAAA,CAAAhyJ,IAAA;gBAEJ+uH,IAAI,GAAG3nG,IAAI,CAACC,KAAK,CAAE0hI,IAAI,CAAE;gBAEzBthI,QAAQ,GAAGsnG,IAAI,CAACtnG,QAAQ;gBAAA,MAEzBA,QAAQ,KAAKnnB,SAAS,IAAImnB,QAAQ,CAAC5pB,IAAI,KAAKyC,SAAS,IAAImnB,QAAQ,CAAC5pB,IAAI,CAACyV,WAAW,EAAE,KAAK,UAAU;kBAAA0+I,UAAA,CAAArxJ,IAAA;kBAAA;gBAAA;gBAAA,MAEjG,IAAIhB,KAAK,CAAE,kCAAkC,GAAGglB,GAAG,CAAE;cAAA;gBAAAqtI,UAAA,CAAArxJ,IAAA;gBAAA,OAI/CuiD,KAAK,CAAC+uG,UAAU,CAAEljC,IAAI,CAAE;cAAA;gBAAA,OAAAijC,UAAA,CAAA7xJ,MAAA,WAAA6xJ,UAAA,CAAAhyJ,IAAA;cAAA;cAAA;gBAAA,OAAAgyJ,UAAA,CAAA5uJ,IAAA;YAAA;UAAA,GAAA0uJ,QAAA;QAAA,CAErC;QAAA,SAAA7L,UAAAiM,GAAA,EAAAC,GAAA;UAAA,OAAAN,UAAA,CAAAtxD,KAAA,OAAA75D,SAAA;QAAA;QAAA,OAAAu/G,SAAA;MAAA;IAAA;MAAAnqJ,GAAA;MAAAE,KAAA,EAED,SAAAqrB,MAAO0nG,IAAI,EAAEu1B,MAAM,EAAG;QAErB,IAAMj/G,UAAU,GAAG,IAAI,CAAC+sH,eAAe,CAAErjC,IAAI,CAAC1pF,UAAU,CAAE;QAC1D,IAAM+C,MAAM,GAAG,IAAI,CAACiqH,WAAW,CAAEtjC,IAAI,CAAC3mF,MAAM,CAAE;QAC9C,IAAMF,UAAU,GAAG,IAAI,CAACoqH,eAAe,CAAEvjC,IAAI,CAAC7mF,UAAU,EAAEE,MAAM,CAAE;QAElE,IAAM3jB,MAAM,GAAG,IAAI,CAAC8tI,WAAW,CAAExjC,IAAI,CAACtqG,MAAM,EAAE,YAAY;UAEzD,IAAK6/H,MAAM,KAAKhkJ,SAAS,EAAGgkJ,MAAM,CAAEzhJ,MAAM,CAAE;QAE7C,CAAC,CAAE;QAEH,IAAM2kB,QAAQ,GAAG,IAAI,CAACgrI,aAAa,CAAEzjC,IAAI,CAACvnG,QAAQ,EAAE/C,MAAM,CAAE;QAC5D,IAAM0jB,SAAS,GAAG,IAAI,CAACsqH,cAAc,CAAE1jC,IAAI,CAAC5mF,SAAS,EAAE3gB,QAAQ,CAAE;QAEjE,IAAM3kB,MAAM,GAAG,IAAI,CAAC6vJ,WAAW,CAAE3jC,IAAI,CAAClsH,MAAM,EAAEqlC,UAAU,EAAEC,SAAS,EAAE3gB,QAAQ,EAAE6d,UAAU,CAAE;QAC3F,IAAMgD,SAAS,GAAG,IAAI,CAACsqH,cAAc,CAAE5jC,IAAI,CAAC1mF,SAAS,EAAExlC,MAAM,CAAE;QAE/D,IAAI,CAAC+vJ,aAAa,CAAE/vJ,MAAM,EAAEwlC,SAAS,CAAE;;QAEvC;;QAEA,IAAKi8G,MAAM,KAAKhkJ,SAAS,EAAG;UAE3B,IAAIuyJ,SAAS,GAAG,KAAK;UAErB,KAAM,IAAMx/I,IAAI,IAAIoR,MAAM,EAAG;YAE5B,IAAKA,MAAM,CAAEpR,IAAI,CAAE,CAAC6Q,IAAI,YAAYJ,gBAAgB,EAAG;cAEtD+uI,SAAS,GAAG,IAAI;cAChB;YAED;UAED;UAEA,IAAKA,SAAS,KAAK,KAAK,EAAGvO,MAAM,CAAEzhJ,MAAM,CAAE;QAE5C;QAEA,OAAOA,MAAM;MAEd;IAAC;MAAA/G,GAAA;MAAAE,KAAA;QAAA,IAAA82J,WAAA,GAAAz8C,iBAAA,eAAAh7G,mBAAA,GAAA+G,IAAA,CAED,SAAA2wJ,SAAkBhkC,IAAI;UAAA,IAAA1pF,UAAA,EAAA+C,MAAA,EAAAF,UAAA,EAAAzjB,MAAA,EAAA+C,QAAA,EAAA2gB,SAAA,EAAAtlC,MAAA,EAAAwlC,SAAA;UAAA,OAAAhtC,mBAAA,GAAAyB,IAAA,UAAAk2J,UAAAC,UAAA;YAAA,kBAAAA,UAAA,CAAAhwJ,IAAA,GAAAgwJ,UAAA,CAAAtyJ,IAAA;cAAA;gBAEf0kC,UAAU,GAAG,IAAI,CAAC+sH,eAAe,CAAErjC,IAAI,CAAC1pF,UAAU,CAAE;gBACpD+C,MAAM,GAAG,IAAI,CAACiqH,WAAW,CAAEtjC,IAAI,CAAC3mF,MAAM,CAAE;gBACxCF,UAAU,GAAG,IAAI,CAACoqH,eAAe,CAAEvjC,IAAI,CAAC7mF,UAAU,EAAEE,MAAM,CAAE;gBAAA6qH,UAAA,CAAAtyJ,IAAA;gBAAA,OAE7C,IAAI,CAACuyJ,gBAAgB,CAAEnkC,IAAI,CAACtqG,MAAM,CAAE;cAAA;gBAAnDA,MAAM,GAAAwuI,UAAA,CAAAjzJ,IAAA;gBAENwnB,QAAQ,GAAG,IAAI,CAACgrI,aAAa,CAAEzjC,IAAI,CAACvnG,QAAQ,EAAE/C,MAAM,CAAE;gBACtD0jB,SAAS,GAAG,IAAI,CAACsqH,cAAc,CAAE1jC,IAAI,CAAC5mF,SAAS,EAAE3gB,QAAQ,CAAE;gBAE3D3kB,MAAM,GAAG,IAAI,CAAC6vJ,WAAW,CAAE3jC,IAAI,CAAClsH,MAAM,EAAEqlC,UAAU,EAAEC,SAAS,EAAE3gB,QAAQ,EAAE6d,UAAU,CAAE;gBACrFgD,SAAS,GAAG,IAAI,CAACsqH,cAAc,CAAE5jC,IAAI,CAAC1mF,SAAS,EAAExlC,MAAM,CAAE;gBAE/D,IAAI,CAAC+vJ,aAAa,CAAE/vJ,MAAM,EAAEwlC,SAAS,CAAE;gBAAC,OAAA4qH,UAAA,CAAA9yJ,MAAA,WAEjC0C,MAAM;cAAA;cAAA;gBAAA,OAAAowJ,UAAA,CAAA7vJ,IAAA;YAAA;UAAA,GAAA2vJ,QAAA;QAAA,CAEb;QAAA,SAAAd,WAAAkB,GAAA;UAAA,OAAAL,WAAA,CAAAvyD,KAAA,OAAA75D,SAAA;QAAA;QAAA,OAAAurH,UAAA;MAAA;IAAA;MAAAn2J,GAAA;MAAAE,KAAA,EAED,SAAAq2J,YAAatjC,IAAI,EAAG;QAEnB,IAAM3mF,MAAM,GAAG,CAAC,CAAC;QAEjB,IAAK2mF,IAAI,KAAKzuH,SAAS,EAAG;UAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGu8G,IAAI,CAACntH,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAE/C,IAAMwnC,KAAK,GAAG,IAAIk8F,KAAK,EAAE,CAACnhF,QAAQ,CAAE2qE,IAAI,CAAEltH,CAAC,CAAE,CAAE;YAE/CumC,MAAM,CAAEiB,KAAK,CAACh2B,IAAI,CAAE,GAAGg2B,KAAK;UAE7B;QAED;QAEA,OAAOjB,MAAM;MAEd;IAAC;MAAAtsC,GAAA;MAAAE,KAAA,EAED,SAAA22J,eAAgB5jC,IAAI,EAAElsH,MAAM,EAAG;QAE9B,IAAMwlC,SAAS,GAAG,CAAC,CAAC;QACpB,IAAMulF,KAAK,GAAG,CAAC,CAAC;;QAEhB;;QAEA/qH,MAAM,CAAC8kC,QAAQ,CAAE,UAAWR,KAAK,EAAG;UAEnC,IAAKA,KAAK,CAACgnF,MAAM,EAAGP,KAAK,CAAEzmF,KAAK,CAAC9zB,IAAI,CAAE,GAAG8zB,KAAK;QAEhD,CAAC,CAAE;;QAEH;;QAEA,IAAK4nF,IAAI,KAAKzuH,SAAS,EAAG;UAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGu8G,IAAI,CAACntH,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAE/C,IAAM4nC,QAAQ,GAAG,IAAIilF,QAAQ,EAAE,CAACtqE,QAAQ,CAAE2qE,IAAI,CAAEltH,CAAC,CAAE,EAAE+rH,KAAK,CAAE;YAE5DvlF,SAAS,CAAEoB,QAAQ,CAACp2B,IAAI,CAAE,GAAGo2B,QAAQ;UAEtC;QAED;QAEA,OAAOpB,SAAS;MAEjB;IAAC;MAAAvsC,GAAA;MAAAE,KAAA,EAED,SAAAs2J,gBAAiBvjC,IAAI,EAAE3mF,MAAM,EAAG;QAE/B,IAAMF,UAAU,GAAG,CAAC,CAAC;QAErB,IAAK6mF,IAAI,KAAKzuH,SAAS,EAAG;UAEzB,IAAM8yJ,oBAAoB,GAAG,IAAItC,oBAAoB,EAAE;UAEvD,KAAM,IAAIjvJ,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGu8G,IAAI,CAACntH,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAE/C,IAAI00B,QAAQ;YACZ,IAAMrS,IAAI,GAAG6qG,IAAI,CAAEltH,CAAC,CAAE;YAEtB,QAASqiB,IAAI,CAACrmB,IAAI;cAEjB,KAAK,gBAAgB;cACrB,KAAK,yBAAyB;gBAE7B04B,QAAQ,GAAG68H,oBAAoB,CAAC/rI,KAAK,CAAEnD,IAAI,CAAE;gBAC7C;cAED;gBAEC,IAAKA,IAAI,CAACrmB,IAAI,IAAI63I,UAAU,EAAG;kBAE9Bn/G,QAAQ,GAAGm/G,UAAU,CAAExxH,IAAI,CAACrmB,IAAI,CAAE,CAACumD,QAAQ,CAAElgC,IAAI,EAAEkkB,MAAM,CAAE;gBAE5D,CAAC,MAAM;kBAEN7iC,OAAO,CAACC,IAAI,oDAAAmd,MAAA,CAAqDuB,IAAI,CAACrmB,IAAI,QAAM;gBAEjF;YAAC;YAIH04B,QAAQ,CAACljB,IAAI,GAAG6Q,IAAI,CAAC7Q,IAAI;YAEzB,IAAK6Q,IAAI,CAAC/hB,IAAI,KAAK7B,SAAS,EAAGi2B,QAAQ,CAACp0B,IAAI,GAAG+hB,IAAI,CAAC/hB,IAAI;YACxD,IAAK+hB,IAAI,CAAC6C,QAAQ,KAAKzmB,SAAS,EAAGi2B,QAAQ,CAACxP,QAAQ,GAAG7C,IAAI,CAAC6C,QAAQ;YAEpEmhB,UAAU,CAAEhkB,IAAI,CAAC7Q,IAAI,CAAE,GAAGkjB,QAAQ;UAEnC;QAED;QAEA,OAAO2R,UAAU;MAElB;IAAC;MAAApsC,GAAA;MAAAE,KAAA,EAED,SAAAy2J,eAAgB1jC,IAAI,EAAEvnG,QAAQ,EAAG;QAEhC,IAAMsiB,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,IAAM3B,SAAS,GAAG,CAAC,CAAC;QAEpB,IAAK4mF,IAAI,KAAKzuH,SAAS,EAAG;UAEzB,IAAMglJ,MAAM,GAAG,IAAIqK,cAAc,EAAE;UACnCrK,MAAM,CAAC2K,WAAW,CAAEzoI,QAAQ,CAAE;UAE9B,KAAM,IAAI3lB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGu8G,IAAI,CAACntH,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAE/C,IAAMqiB,IAAI,GAAG6qG,IAAI,CAAEltH,CAAC,CAAE;YAEtB,IAAKioC,KAAK,CAAE5lB,IAAI,CAAC7Q,IAAI,CAAE,KAAK/S,SAAS,EAAG;cAEvCwpC,KAAK,CAAE5lB,IAAI,CAAC7Q,IAAI,CAAE,GAAGiyI,MAAM,CAACj+H,KAAK,CAAEnD,IAAI,CAAE;YAE1C;YAEAikB,SAAS,CAAEjkB,IAAI,CAAC7Q,IAAI,CAAE,GAAGy2B,KAAK,CAAE5lB,IAAI,CAAC7Q,IAAI,CAAE;UAE5C;QAED;QAEA,OAAO80B,SAAS;MAEjB;IAAC;MAAArsC,GAAA;MAAAE,KAAA,EAED,SAAAo2J,gBAAiBrjC,IAAI,EAAG;QAEvB,IAAM1pF,UAAU,GAAG,CAAC,CAAC;QAErB,IAAK0pF,IAAI,KAAKzuH,SAAS,EAAG;UAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGktH,IAAI,CAACntH,MAAM,EAAEC,CAAC,EAAG,EAAG;YAExC,IAAMqiB,IAAI,GAAG6qG,IAAI,CAAEltH,CAAC,CAAE;YAEtB,IAAMs3I,IAAI,GAAG6I,aAAa,CAAC36H,KAAK,CAAEnD,IAAI,CAAE;YAExCmhB,UAAU,CAAE8zG,IAAI,CAAC9lI,IAAI,CAAE,GAAG8lI,IAAI;UAE/B;QAED;QAEA,OAAO9zG,UAAU;MAElB;IAAC;MAAAvpC,GAAA;MAAAE,KAAA,EAED,SAAAu2J,YAAaxjC,IAAI,EAAEu1B,MAAM,EAAG;QAE3B,IAAMphG,KAAK,GAAG,IAAI;QAClB,IAAMz+B,MAAM,GAAG,CAAC,CAAC;QAEjB,IAAI6gI,MAAM;QAEV,SAAS+N,SAASA,CAAE1uI,GAAG,EAAG;UAEzBu+B,KAAK,CAACyiG,OAAO,CAACZ,SAAS,CAAEpgI,GAAG,CAAE;UAE9B,OAAO2gI,MAAM,CAACU,IAAI,CAAErhI,GAAG,EAAE,YAAY;YAEpCu+B,KAAK,CAACyiG,OAAO,CAACX,OAAO,CAAErgI,GAAG,CAAE;UAE7B,CAAC,EAAErkB,SAAS,EAAE,YAAY;YAEzB4iD,KAAK,CAACyiG,OAAO,CAACV,SAAS,CAAEtgI,GAAG,CAAE;YAC9Bu+B,KAAK,CAACyiG,OAAO,CAACX,OAAO,CAAErgI,GAAG,CAAE;UAE7B,CAAC,CAAE;QAEJ;QAEA,SAAS2uI,gBAAgBA,CAAErwI,KAAK,EAAG;UAElC,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;YAEhC,IAAM0B,GAAG,GAAG1B,KAAK;YAEjB,IAAMw5D,IAAI,GAAG,2BAA2B,CAACv5D,IAAI,CAAEyB,GAAG,CAAE,GAAGA,GAAG,GAAGu+B,KAAK,CAAC4iG,YAAY,GAAGnhI,GAAG;YAErF,OAAO0uI,SAAS,CAAE52E,IAAI,CAAE;UAEzB,CAAC,MAAM;YAEN,IAAKx5D,KAAK,CAACiB,IAAI,EAAG;cAEjB,OAAO;gBACNA,IAAI,EAAEjD,aAAa,CAAEgC,KAAK,CAACplB,IAAI,EAAEolB,KAAK,CAACiB,IAAI,CAAE;gBAC7CZ,KAAK,EAAEL,KAAK,CAACK,KAAK;gBAClBC,MAAM,EAAEN,KAAK,CAACM;cACf,CAAC;YAEF,CAAC,MAAM;cAEN,OAAO,IAAI;YAEZ;UAED;QAED;QAEA,IAAKwrG,IAAI,KAAKzuH,SAAS,IAAIyuH,IAAI,CAACntH,MAAM,GAAG,CAAC,EAAG;UAE5C,IAAM+jJ,OAAO,GAAG,IAAItB,cAAc,CAAEC,MAAM,CAAE;UAE5CgB,MAAM,GAAG,IAAI+E,WAAW,CAAE1E,OAAO,CAAE;UACnCL,MAAM,CAACY,cAAc,CAAE,IAAI,CAACN,WAAW,CAAE;UAEzC,KAAM,IAAI/jJ,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGwiG,IAAI,CAACntH,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;YAEjD,IAAMohB,KAAK,GAAG8rG,IAAI,CAAEltH,CAAC,CAAE;YACvB,IAAM8iB,GAAG,GAAG1B,KAAK,CAAC0B,GAAG;YAErB,IAAKC,KAAK,CAACC,OAAO,CAAEF,GAAG,CAAE,EAAG;cAE3B;;cAEA,IAAM4uI,UAAU,GAAG,EAAE;cAErB,KAAM,IAAI96H,CAAC,GAAG,CAAC,EAAE4kB,EAAE,GAAG14B,GAAG,CAAC/iB,MAAM,EAAE62B,CAAC,GAAG4kB,EAAE,EAAE5kB,CAAC,EAAG,EAAG;gBAEhD,IAAM+6H,UAAU,GAAG7uI,GAAG,CAAE8T,CAAC,CAAE;gBAE3B,IAAMg7H,iBAAiB,GAAGH,gBAAgB,CAAEE,UAAU,CAAE;gBAExD,IAAKC,iBAAiB,KAAK,IAAI,EAAG;kBAEjC,IAAKA,iBAAiB,YAAY3vI,gBAAgB,EAAG;oBAEpDyvI,UAAU,CAAClyJ,IAAI,CAAEoyJ,iBAAiB,CAAE;kBAErC,CAAC,MAAM;oBAEN;;oBAEAF,UAAU,CAAClyJ,IAAI,CAAE,IAAI+sH,WAAW,CAAEqlC,iBAAiB,CAACvvI,IAAI,EAAEuvI,iBAAiB,CAACnwI,KAAK,EAAEmwI,iBAAiB,CAAClwI,MAAM,CAAE,CAAE;kBAEhH;gBAED;cAED;cAEAkB,MAAM,CAAExB,KAAK,CAAC5P,IAAI,CAAE,GAAG,IAAI8Q,MAAM,CAAEovI,UAAU,CAAE;YAEhD,CAAC,MAAM;cAEN;;cAEA,IAAME,kBAAiB,GAAGH,gBAAgB,CAAErwI,KAAK,CAAC0B,GAAG,CAAE;cACvDF,MAAM,CAAExB,KAAK,CAAC5P,IAAI,CAAE,GAAG,IAAI8Q,MAAM,CAAEsvI,kBAAiB,CAAE;YAGvD;UAED;QAED;QAEA,OAAOhvI,MAAM;MAEd;IAAC;MAAA3oB,GAAA;MAAAE,KAAA;QAAA,IAAA03J,iBAAA,GAAAr9C,iBAAA,eAAAh7G,mBAAA,GAAA+G,IAAA,CAED,SAAAuxJ,SAAwB5kC,IAAI;UAAA,IAAA7rE,KAAA,EAAAz+B,MAAA,EAAA6gI,MAAA,EAOZgO,gBAAgB,EAAAM,iBAAA,EAAA/xJ,CAAA,EAAA0qB,EAAA,EAAAtJ,KAAA,EAAA0B,GAAA,EAAA4uI,UAAA,EAAA96H,CAAA,EAAA4kB,EAAA,EAAAm2G,UAAA,EAAAC,iBAAA,EAAAI,mBAAA;UAAA,OAAAx4J,mBAAA,GAAAyB,IAAA,UAAAg3J,UAAAC,UAAA;YAAA,kBAAAA,UAAA,CAAA9wJ,IAAA,GAAA8wJ,UAAA,CAAApzJ,IAAA;cAAA;gBAAAizJ,iBAAA,YAAAI,mBAAA;kBAAAJ,iBAAA,GAAAv9C,iBAAA,eAAAh7G,mBAAA,GAAA+G,IAAA,CAA/B,SAAA6xJ,SAAiChxI,KAAK;oBAAA,IAAAixI,IAAA,EAAAz3E,IAAA;oBAAA,OAAAphF,mBAAA,GAAAyB,IAAA,UAAAq3J,UAAAC,UAAA;sBAAA,kBAAAA,UAAA,CAAAnxJ,IAAA,GAAAmxJ,UAAA,CAAAzzJ,IAAA;wBAAA;0BAAA,MAEhC,OAAOsiB,KAAK,KAAK,QAAQ;4BAAAmxI,UAAA,CAAAzzJ,IAAA;4BAAA;0BAAA;0BAEvBgkB,IAAG,GAAG1B,KAAK;0BAEXw5D,IAAI,GAAG,2BAA2B,CAACv5D,IAAI,CAAEyB,IAAG,CAAE,GAAGA,IAAG,GAAGu+B,KAAK,CAAC4iG,YAAY,GAAGnhI,IAAG;0BAAAyvI,UAAA,CAAAzzJ,IAAA;0BAAA,OAExE2kJ,MAAM,CAACW,SAAS,CAAExpE,IAAI,CAAE;wBAAA;0BAAA,OAAA23E,UAAA,CAAAj0J,MAAA,WAAAi0J,UAAA,CAAAp0J,IAAA;wBAAA;0BAAA,KAIhCijB,KAAK,CAACiB,IAAI;4BAAAkwI,UAAA,CAAAzzJ,IAAA;4BAAA;0BAAA;0BAAA,OAAAyzJ,UAAA,CAAAj0J,MAAA,WAEP;4BACN+jB,IAAI,EAAEjD,aAAa,CAAEgC,KAAK,CAACplB,IAAI,EAAEolB,KAAK,CAACiB,IAAI,CAAE;4BAC7CZ,KAAK,EAAEL,KAAK,CAACK,KAAK;4BAClBC,MAAM,EAAEN,KAAK,CAACM;0BACf,CAAC;wBAAA;0BAAA,OAAA6wI,UAAA,CAAAj0J,MAAA,WAIM,IAAI;wBAAA;wBAAA;0BAAA,OAAAi0J,UAAA,CAAAhxJ,IAAA;sBAAA;oBAAA,GAAA6wJ,QAAA;kBAAA,CAMb;kBAAA,OAAAL,iBAAA,CAAArzD,KAAA,OAAA75D,SAAA;gBAAA;gBA5Bc4sH,gBAAgB,YAAAe,mBAAAC,IAAA;kBAAA,OAAAV,iBAAA,CAAArzD,KAAA,OAAA75D,SAAA;gBAAA;gBALzBwc,KAAK,GAAG,IAAI;gBACZz+B,MAAM,GAAG,CAAC,CAAC;gBAAA,MAkCZsqG,IAAI,KAAKzuH,SAAS,IAAIyuH,IAAI,CAACntH,MAAM,GAAG,CAAC;kBAAAmyJ,UAAA,CAAApzJ,IAAA;kBAAA;gBAAA;gBAEzC2kJ,MAAM,GAAG,IAAI+E,WAAW,CAAE,IAAI,CAAC1E,OAAO,CAAE;gBACxCL,MAAM,CAACY,cAAc,CAAE,IAAI,CAACN,WAAW,CAAE;gBAE/B/jJ,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGwiG,IAAI,CAACntH,MAAM;cAAA;gBAAA,MAAEC,CAAC,GAAG0qB,EAAE;kBAAAwnI,UAAA,CAAApzJ,IAAA;kBAAA;gBAAA;gBAElCsiB,KAAK,GAAG8rG,IAAI,CAAEltH,CAAC,CAAE;gBACjB8iB,GAAG,GAAG1B,KAAK,CAAC0B,GAAG;gBAAA,KAEhBC,KAAK,CAACC,OAAO,CAAEF,GAAG,CAAE;kBAAAovI,UAAA,CAAApzJ,IAAA;kBAAA;gBAAA;gBAExB;gBAEM4yJ,UAAU,GAAG,EAAE;gBAEX96H,CAAC,GAAG,CAAC,EAAE4kB,EAAE,GAAG14B,GAAG,CAAC/iB,MAAM;cAAA;gBAAA,MAAE62B,CAAC,GAAG4kB,EAAE;kBAAA02G,UAAA,CAAApzJ,IAAA;kBAAA;gBAAA;gBAEjC6yJ,UAAU,GAAG7uI,GAAG,CAAE8T,CAAC,CAAE;gBAAAs7H,UAAA,CAAApzJ,IAAA;gBAAA,OAEK2yJ,gBAAgB,CAAEE,UAAU,CAAE;cAAA;gBAAxDC,iBAAiB,GAAAM,UAAA,CAAA/zJ,IAAA;gBAEvB,IAAKyzJ,iBAAiB,KAAK,IAAI,EAAG;kBAEjC,IAAKA,iBAAiB,YAAY3vI,gBAAgB,EAAG;oBAEpDyvI,UAAU,CAAClyJ,IAAI,CAAEoyJ,iBAAiB,CAAE;kBAErC,CAAC,MAAM;oBAEN;;oBAEAF,UAAU,CAAClyJ,IAAI,CAAE,IAAI+sH,WAAW,CAAEqlC,iBAAiB,CAACvvI,IAAI,EAAEuvI,iBAAiB,CAACnwI,KAAK,EAAEmwI,iBAAiB,CAAClwI,MAAM,CAAE,CAAE;kBAEhH;gBAED;cAAC;gBApBwCkV,CAAC,EAAG;gBAAAs7H,UAAA,CAAApzJ,IAAA;gBAAA;cAAA;gBAwB9C8jB,MAAM,CAAExB,KAAK,CAAC5P,IAAI,CAAE,GAAG,IAAI8Q,MAAM,CAAEovI,UAAU,CAAE;gBAACQ,UAAA,CAAApzJ,IAAA;gBAAA;cAAA;gBAAAozJ,UAAA,CAAApzJ,IAAA;gBAAA,OAMhB2yJ,gBAAgB,CAAErwI,KAAK,CAAC0B,GAAG,CAAE;cAAA;gBAAvD8uI,mBAAiB,GAAAM,UAAA,CAAA/zJ,IAAA;gBACvBykB,MAAM,CAAExB,KAAK,CAAC5P,IAAI,CAAE,GAAG,IAAI8Q,MAAM,CAAEsvI,mBAAiB,CAAE;cAAC;gBA1Cd5xJ,CAAC,EAAG;gBAAAkyJ,UAAA,CAAApzJ,IAAA;gBAAA;cAAA;gBAAA,OAAAozJ,UAAA,CAAA5zJ,MAAA,WAkDzCskB,MAAM;cAAA;cAAA;gBAAA,OAAAsvI,UAAA,CAAA3wJ,IAAA;YAAA;UAAA,GAAAuwJ,QAAA;QAAA,CAEb;QAAA,SAAAT,iBAAAqB,IAAA;UAAA,OAAAb,iBAAA,CAAAnzD,KAAA,OAAA75D,SAAA;QAAA;QAAA,OAAAwsH,gBAAA;MAAA;IAAA;MAAAp3J,GAAA;MAAAE,KAAA,EAED,SAAAw2J,cAAezjC,IAAI,EAAEtqG,MAAM,EAAG;QAE7B,SAAS+vI,aAAaA,CAAEx4J,KAAK,EAAE6B,IAAI,EAAG;UAErC,IAAK,OAAO7B,KAAK,KAAK,QAAQ,EAAG,OAAOA,KAAK;UAE7CuJ,OAAO,CAACC,IAAI,CAAE,sEAAsE,EAAExJ,KAAK,CAAE;UAE7F,OAAO6B,IAAI,CAAE7B,KAAK,CAAE;QAErB;QAEA,IAAMwrB,QAAQ,GAAG,CAAC,CAAC;QAEnB,IAAKunG,IAAI,KAAKzuH,SAAS,EAAG;UAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGu8G,IAAI,CAACntH,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAE/C,IAAMqiB,IAAI,GAAG6qG,IAAI,CAAEltH,CAAC,CAAE;YAEtB,IAAKqiB,IAAI,CAACjB,KAAK,KAAK3iB,SAAS,EAAG;cAE/BiF,OAAO,CAACC,IAAI,CAAE,8CAA8C,EAAE0e,IAAI,CAAC7Q,IAAI,CAAE;YAE1E;YAEA,IAAKoR,MAAM,CAAEP,IAAI,CAACjB,KAAK,CAAE,KAAK3iB,SAAS,EAAG;cAEzCiF,OAAO,CAACC,IAAI,CAAE,qCAAqC,EAAE0e,IAAI,CAACjB,KAAK,CAAE;YAElE;YAEA,IAAMoD,MAAM,GAAG5B,MAAM,CAAEP,IAAI,CAACjB,KAAK,CAAE;YACnC,IAAMA,KAAK,GAAGoD,MAAM,CAACnC,IAAI;YAEzB,IAAImG,OAAO;YAEX,IAAKzF,KAAK,CAACC,OAAO,CAAE5B,KAAK,CAAE,EAAG;cAE7BoH,OAAO,GAAG,IAAIw/B,WAAW,EAAE;cAE3B,IAAK5mC,KAAK,CAACrhB,MAAM,KAAK,CAAC,EAAGyoB,OAAO,CAAC9C,WAAW,GAAG,IAAI;YAErD,CAAC,MAAM;cAEN,IAAKtE,KAAK,IAAIA,KAAK,CAACiB,IAAI,EAAG;gBAE1BmG,OAAO,GAAG,IAAI+jG,WAAW,EAAE;cAE5B,CAAC,MAAM;gBAEN/jG,OAAO,GAAG,IAAInF,OAAO,EAAE;cAExB;cAEA,IAAKjC,KAAK,EAAGoH,OAAO,CAAC9C,WAAW,GAAG,IAAI,CAAC,CAAC;YAE1C;;YAEA8C,OAAO,CAAChE,MAAM,GAAGA,MAAM;YAEvBgE,OAAO,CAAChX,IAAI,GAAG6Q,IAAI,CAAC7Q,IAAI;YAExB,IAAK6Q,IAAI,CAAC/hB,IAAI,KAAK7B,SAAS,EAAG+pB,OAAO,CAACloB,IAAI,GAAG+hB,IAAI,CAAC/hB,IAAI;YAEvD,IAAK+hB,IAAI,CAACsB,OAAO,KAAKllB,SAAS,EAAG+pB,OAAO,CAAC7E,OAAO,GAAGgvI,aAAa,CAAEtwI,IAAI,CAACsB,OAAO,EAAEivI,eAAe,CAAE;YAClG,IAAKvwI,IAAI,CAACqC,OAAO,KAAKjmB,SAAS,EAAG+pB,OAAO,CAAC9D,OAAO,GAAGrC,IAAI,CAACqC,OAAO;YAEhE,IAAKrC,IAAI,CAAC5I,MAAM,KAAKhb,SAAS,EAAG+pB,OAAO,CAAC/O,MAAM,CAACD,SAAS,CAAE6I,IAAI,CAAC5I,MAAM,CAAE;YACxE,IAAK4I,IAAI,CAACuC,MAAM,KAAKnmB,SAAS,EAAG+pB,OAAO,CAAC5D,MAAM,CAACpL,SAAS,CAAE6I,IAAI,CAACuC,MAAM,CAAE;YACxE,IAAKvC,IAAI,CAACrI,MAAM,KAAKvb,SAAS,EAAG+pB,OAAO,CAACxO,MAAM,CAACR,SAAS,CAAE6I,IAAI,CAACrI,MAAM,CAAE;YACxE,IAAKqI,IAAI,CAAClE,QAAQ,KAAK1f,SAAS,EAAG+pB,OAAO,CAACrK,QAAQ,GAAGkE,IAAI,CAAClE,QAAQ;YAEnE,IAAKkE,IAAI,CAACpnB,IAAI,KAAKwD,SAAS,EAAG;cAE9B+pB,OAAO,CAAC3E,KAAK,GAAG8uI,aAAa,CAAEtwI,IAAI,CAACpnB,IAAI,CAAE,CAAC,CAAE,EAAE43J,gBAAgB,CAAE;cACjErqI,OAAO,CAAC1E,KAAK,GAAG6uI,aAAa,CAAEtwI,IAAI,CAACpnB,IAAI,CAAE,CAAC,CAAE,EAAE43J,gBAAgB,CAAE;YAElE;YAEA,IAAKxwI,IAAI,CAAC4B,MAAM,KAAKxlB,SAAS,EAAG+pB,OAAO,CAACvE,MAAM,GAAG5B,IAAI,CAAC4B,MAAM;YAC7D,IAAK5B,IAAI,CAACsC,cAAc,KAAKlmB,SAAS,EAAG+pB,OAAO,CAAC7D,cAAc,GAAGtC,IAAI,CAACsC,cAAc;YACrF,IAAKtC,IAAI,CAACrmB,IAAI,KAAKyC,SAAS,EAAG+pB,OAAO,CAACxsB,IAAI,GAAGqmB,IAAI,CAACrmB,IAAI;YACvD,IAAKqmB,IAAI,CAAC+B,QAAQ,KAAK3lB,SAAS,EAAG+pB,OAAO,CAACpE,QAAQ,GAAG/B,IAAI,CAAC+B,QAAQ;YAEnE,IAAK/B,IAAI,CAAC2B,SAAS,KAAKvlB,SAAS,EAAG+pB,OAAO,CAACxE,SAAS,GAAG2uI,aAAa,CAAEtwI,IAAI,CAAC2B,SAAS,EAAE8uI,cAAc,CAAE;YACvG,IAAKzwI,IAAI,CAAC0B,SAAS,KAAKtlB,SAAS,EAAG+pB,OAAO,CAACzE,SAAS,GAAG4uI,aAAa,CAAEtwI,IAAI,CAAC0B,SAAS,EAAE+uI,cAAc,CAAE;YACvG,IAAKzwI,IAAI,CAAC6B,UAAU,KAAKzlB,SAAS,EAAG+pB,OAAO,CAACtE,UAAU,GAAG7B,IAAI,CAAC6B,UAAU;YAEzE,IAAK7B,IAAI,CAAC2C,KAAK,KAAKvmB,SAAS,EAAG+pB,OAAO,CAACxD,KAAK,GAAG3C,IAAI,CAAC2C,KAAK;YAE1D,IAAK3C,IAAI,CAACyC,eAAe,KAAKrmB,SAAS,EAAG+pB,OAAO,CAAC1D,eAAe,GAAGzC,IAAI,CAACyC,eAAe;YACxF,IAAKzC,IAAI,CAAC0C,gBAAgB,KAAKtmB,SAAS,EAAG+pB,OAAO,CAACzD,gBAAgB,GAAG1C,IAAI,CAAC0C,gBAAgB;YAC3F,IAAK1C,IAAI,CAAC4C,eAAe,KAAKxmB,SAAS,EAAG+pB,OAAO,CAACvD,eAAe,GAAG5C,IAAI,CAAC4C,eAAe;YAExF,IAAK5C,IAAI,CAAC6C,QAAQ,KAAKzmB,SAAS,EAAG+pB,OAAO,CAACtD,QAAQ,GAAG7C,IAAI,CAAC6C,QAAQ;YAEnES,QAAQ,CAAEtD,IAAI,CAAC7Q,IAAI,CAAE,GAAGgX,OAAO;UAEhC;QAED;QAEA,OAAO7C,QAAQ;MAEhB;IAAC;MAAA1rB,GAAA;MAAAE,KAAA,EAED,SAAA02J,YAAaxuI,IAAI,EAAEgkB,UAAU,EAAEC,SAAS,EAAE3gB,QAAQ,EAAE6d,UAAU,EAAG;QAEhE,IAAIxiC,MAAM;QAEV,SAAS+xJ,WAAWA,CAAEzyJ,IAAI,EAAG;UAE5B,IAAK+lC,UAAU,CAAE/lC,IAAI,CAAE,KAAK7B,SAAS,EAAG;YAEvCiF,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAErD,IAAI,CAAE;UAE/D;UAEA,OAAO+lC,UAAU,CAAE/lC,IAAI,CAAE;QAE1B;QAEA,SAAS0yJ,WAAWA,CAAE1yJ,IAAI,EAAG;UAE5B,IAAKA,IAAI,KAAK7B,SAAS,EAAG,OAAOA,SAAS;UAE1C,IAAKskB,KAAK,CAACC,OAAO,CAAE1iB,IAAI,CAAE,EAAG;YAE5B,IAAMoQ,KAAK,GAAG,EAAE;YAEhB,KAAM,IAAI1Q,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGrQ,IAAI,CAACP,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;cAE/C,IAAMwR,IAAI,GAAGlR,IAAI,CAAEN,CAAC,CAAE;cAEtB,IAAKsmC,SAAS,CAAE90B,IAAI,CAAE,KAAK/S,SAAS,EAAG;gBAEtCiF,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAE6N,IAAI,CAAE;cAE/D;cAEAd,KAAK,CAAClR,IAAI,CAAE8mC,SAAS,CAAE90B,IAAI,CAAE,CAAE;YAEhC;YAEA,OAAOd,KAAK;UAEb;UAEA,IAAK41B,SAAS,CAAEhmC,IAAI,CAAE,KAAK7B,SAAS,EAAG;YAEtCiF,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAErD,IAAI,CAAE;UAE/D;UAEA,OAAOgmC,SAAS,CAAEhmC,IAAI,CAAE;QAEzB;QAEA,SAAS4tJ,UAAUA,CAAE18I,IAAI,EAAG;UAE3B,IAAKmU,QAAQ,CAAEnU,IAAI,CAAE,KAAK/S,SAAS,EAAG;YAErCiF,OAAO,CAACC,IAAI,CAAE,uCAAuC,EAAE6N,IAAI,CAAE;UAE9D;UAEA,OAAOmU,QAAQ,CAAEnU,IAAI,CAAE;QAExB;QAEA,IAAIkjB,QAAQ,EAAEmT,QAAQ;QAEtB,QAASxlB,IAAI,CAACrmB,IAAI;UAEjB,KAAK,OAAO;YAEXgF,MAAM,GAAG,IAAI+mH,KAAK,EAAE;YAEpB,IAAK1lG,IAAI,CAAC4kB,UAAU,KAAKxoC,SAAS,EAAG;cAEpC,IAAKgF,MAAM,CAACwvJ,SAAS,CAAE5wI,IAAI,CAAC4kB,UAAU,CAAE,EAAG;gBAE1CjmC,MAAM,CAACimC,UAAU,GAAG,IAAI0L,KAAK,CAAEtwB,IAAI,CAAC4kB,UAAU,CAAE;cAEjD,CAAC,MAAM;gBAENjmC,MAAM,CAACimC,UAAU,GAAGinH,UAAU,CAAE7rI,IAAI,CAAC4kB,UAAU,CAAE;cAElD;YAED;YAEA,IAAK5kB,IAAI,CAAC8kB,WAAW,KAAK1oC,SAAS,EAAG;cAErCuC,MAAM,CAACmmC,WAAW,GAAG+mH,UAAU,CAAE7rI,IAAI,CAAC8kB,WAAW,CAAE;YAEpD;YAEA,IAAK9kB,IAAI,CAAC+vB,GAAG,KAAK3zC,SAAS,EAAG;cAE7B,IAAK4jB,IAAI,CAAC+vB,GAAG,CAACp2C,IAAI,KAAK,KAAK,EAAG;gBAE9BgF,MAAM,CAACoxC,GAAG,GAAG,IAAI01E,GAAG,CAAEzlG,IAAI,CAAC+vB,GAAG,CAACvyB,KAAK,EAAEwC,IAAI,CAAC+vB,GAAG,CAACvS,IAAI,EAAExd,IAAI,CAAC+vB,GAAG,CAACtS,GAAG,CAAE;cAEpE,CAAC,MAAM,IAAKzd,IAAI,CAAC+vB,GAAG,CAACp2C,IAAI,KAAK,SAAS,EAAG;gBAEzCgF,MAAM,CAACoxC,GAAG,GAAG,IAAIy1E,OAAO,CAAExlG,IAAI,CAAC+vB,GAAG,CAACvyB,KAAK,EAAEwC,IAAI,CAAC+vB,GAAG,CAACgnE,OAAO,CAAE;cAE7D;YAED;YAEA,IAAK/2F,IAAI,CAAC47C,oBAAoB,KAAKx/D,SAAS,EAAGuC,MAAM,CAACi9D,oBAAoB,GAAG57C,IAAI,CAAC47C,oBAAoB;YACtG,IAAK57C,IAAI,CAAC07C,mBAAmB,KAAKt/D,SAAS,EAAGuC,MAAM,CAAC+8D,mBAAmB,GAAG17C,IAAI,CAAC07C,mBAAmB;YAEnG;UAED,KAAK,mBAAmB;YAEvB/8D,MAAM,GAAG,IAAI8jD,iBAAiB,CAAEziC,IAAI,CAAC4iC,GAAG,EAAE5iC,IAAI,CAAC6iC,MAAM,EAAE7iC,IAAI,CAACwd,IAAI,EAAExd,IAAI,CAACyd,GAAG,CAAE;YAE5E,IAAKzd,IAAI,CAACijC,KAAK,KAAK7mD,SAAS,EAAGuC,MAAM,CAACskD,KAAK,GAAGjjC,IAAI,CAACijC,KAAK;YACzD,IAAKjjC,IAAI,CAACgjC,IAAI,KAAK5mD,SAAS,EAAGuC,MAAM,CAACqkD,IAAI,GAAGhjC,IAAI,CAACgjC,IAAI;YACtD,IAAKhjC,IAAI,CAACmjC,SAAS,KAAK/mD,SAAS,EAAGuC,MAAM,CAACwkD,SAAS,GAAGnjC,IAAI,CAACmjC,SAAS;YACrE,IAAKnjC,IAAI,CAACojC,UAAU,KAAKhnD,SAAS,EAAGuC,MAAM,CAACykD,UAAU,GAAGpjC,IAAI,CAACojC,UAAU;YACxE,IAAKpjC,IAAI,CAACkjC,IAAI,KAAK9mD,SAAS,EAAGuC,MAAM,CAACukD,IAAI,GAAG5rD,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEzG,IAAI,CAACkjC,IAAI,CAAE;YAE3E;UAED,KAAK,oBAAoB;YAExBvkD,MAAM,GAAG,IAAIkpE,kBAAkB,CAAE7nD,IAAI,CAACod,IAAI,EAAEpd,IAAI,CAACqd,KAAK,EAAErd,IAAI,CAACsd,GAAG,EAAEtd,IAAI,CAACud,MAAM,EAAEvd,IAAI,CAACwd,IAAI,EAAExd,IAAI,CAACyd,GAAG,CAAE;YAEpG,IAAKzd,IAAI,CAACgjC,IAAI,KAAK5mD,SAAS,EAAGuC,MAAM,CAACqkD,IAAI,GAAGhjC,IAAI,CAACgjC,IAAI;YACtD,IAAKhjC,IAAI,CAACkjC,IAAI,KAAK9mD,SAAS,EAAGuC,MAAM,CAACukD,IAAI,GAAG5rD,MAAM,CAACmvB,MAAM,CAAE,CAAC,CAAC,EAAEzG,IAAI,CAACkjC,IAAI,CAAE;YAE3E;UAED,KAAK,cAAc;YAElBvkD,MAAM,GAAG,IAAIyrJ,YAAY,CAAEpqI,IAAI,CAACxC,KAAK,EAAEwC,IAAI,CAACitE,SAAS,CAAE;YAEvD;UAED,KAAK,kBAAkB;YAEtBtuF,MAAM,GAAG,IAAIqrJ,gBAAgB,CAAEhqI,IAAI,CAACxC,KAAK,EAAEwC,IAAI,CAACitE,SAAS,CAAE;YAE3D;UAED,KAAK,YAAY;YAEhBtuF,MAAM,GAAG,IAAI4qJ,UAAU,CAAEvpI,IAAI,CAACxC,KAAK,EAAEwC,IAAI,CAACitE,SAAS,EAAEjtE,IAAI,CAACgiB,QAAQ,EAAEhiB,IAAI,CAAC+5C,KAAK,CAAE;YAEhF;UAED,KAAK,eAAe;YAEnBp7D,MAAM,GAAG,IAAI6rJ,aAAa,CAAExqI,IAAI,CAACxC,KAAK,EAAEwC,IAAI,CAACitE,SAAS,EAAEjtE,IAAI,CAACZ,KAAK,EAAEY,IAAI,CAACX,MAAM,CAAE;YAEjF;UAED,KAAK,WAAW;YAEf1gB,MAAM,GAAG,IAAI+pJ,SAAS,CAAE1oI,IAAI,CAACxC,KAAK,EAAEwC,IAAI,CAACitE,SAAS,EAAEjtE,IAAI,CAACgiB,QAAQ,EAAEhiB,IAAI,CAAC9J,KAAK,EAAE8J,IAAI,CAAC4tE,QAAQ,EAAE5tE,IAAI,CAAC+5C,KAAK,CAAE;YAE1G;UAED,KAAK,iBAAiB;YAErBp7D,MAAM,GAAG,IAAI6oJ,eAAe,CAAExnI,IAAI,CAACxC,KAAK,EAAEwC,IAAI,CAAC46C,WAAW,EAAE56C,IAAI,CAACitE,SAAS,CAAE;YAE5E;UAED,KAAK,YAAY;YAEhBtuF,MAAM,GAAG,IAAI0sJ,UAAU,EAAE,CAACnrG,QAAQ,CAAElgC,IAAI,CAAE;YAE1C;UAED,KAAK,aAAa;YAEjBqS,QAAQ,GAAGq+H,WAAW,CAAE1wI,IAAI,CAACqS,QAAQ,CAAE;YACtCmT,QAAQ,GAAGmrH,WAAW,CAAE3wI,IAAI,CAACwlB,QAAQ,CAAE;YAExC7mC,MAAM,GAAG,IAAIqqH,WAAW,CAAE32F,QAAQ,EAAEmT,QAAQ,CAAE;YAE9C,IAAKxlB,IAAI,CAACqlB,QAAQ,KAAKjpC,SAAS,EAAGuC,MAAM,CAAC0mC,QAAQ,GAAGrlB,IAAI,CAACqlB,QAAQ;YAClE,IAAKrlB,IAAI,CAACslB,UAAU,KAAKlpC,SAAS,EAAGuC,MAAM,CAAC2mC,UAAU,CAACnuB,SAAS,CAAE6I,IAAI,CAACslB,UAAU,CAAE;YACnF,IAAKtlB,IAAI,CAACulB,QAAQ,KAAKnpC,SAAS,EAAGuC,MAAM,CAAC4mC,QAAQ,GAAGvlB,IAAI,CAACulB,QAAQ;YAElE;UAED,KAAK,MAAM;YAEVlT,QAAQ,GAAGq+H,WAAW,CAAE1wI,IAAI,CAACqS,QAAQ,CAAE;YACvCmT,QAAQ,GAAGmrH,WAAW,CAAE3wI,IAAI,CAACwlB,QAAQ,CAAE;YAEvC7mC,MAAM,GAAG,IAAIw+C,IAAI,CAAE9qB,QAAQ,EAAEmT,QAAQ,CAAE;YAEvC;UAED,KAAK,eAAe;YAEnBnT,QAAQ,GAAGq+H,WAAW,CAAE1wI,IAAI,CAACqS,QAAQ,CAAE;YACvCmT,QAAQ,GAAGmrH,WAAW,CAAE3wI,IAAI,CAACwlB,QAAQ,CAAE;YACvC,IAAMtd,KAAK,GAAGlI,IAAI,CAACkI,KAAK;YACxB,IAAMoc,cAAc,GAAGtkB,IAAI,CAACskB,cAAc;YAC1C,IAAMC,aAAa,GAAGvkB,IAAI,CAACukB,aAAa;YAExC5lC,MAAM,GAAG,IAAI+sH,aAAa,CAAEr5F,QAAQ,EAAEmT,QAAQ,EAAEtd,KAAK,CAAE;YACvDvpB,MAAM,CAAC2lC,cAAc,GAAG,IAAIymF,wBAAwB,CAAE,IAAI33G,YAAY,CAAEkxB,cAAc,CAACj2B,KAAK,CAAE,EAAE,EAAE,CAAE;YACpG,IAAKk2B,aAAa,KAAKnoC,SAAS,EAAGuC,MAAM,CAAC4lC,aAAa,GAAG,IAAIwmF,wBAAwB,CAAE,IAAI33G,YAAY,CAAEmxB,aAAa,CAACl2B,KAAK,CAAE,EAAEk2B,aAAa,CAACwP,QAAQ,CAAE;YAEzJ;UAED,KAAK,KAAK;YAETp1C,MAAM,GAAG,IAAIspH,GAAG,EAAE;YAElB;UAED,KAAK,MAAM;YAEVtpH,MAAM,GAAG,IAAImuH,IAAI,CAAE4jC,WAAW,CAAE1wI,IAAI,CAACqS,QAAQ,CAAE,EAAEs+H,WAAW,CAAE3wI,IAAI,CAACwlB,QAAQ,CAAE,CAAE;YAE/E;UAED,KAAK,UAAU;YAEd7mC,MAAM,GAAG,IAAIsvH,QAAQ,CAAEyiC,WAAW,CAAE1wI,IAAI,CAACqS,QAAQ,CAAE,EAAEs+H,WAAW,CAAE3wI,IAAI,CAACwlB,QAAQ,CAAE,CAAE;YAEnF;UAED,KAAK,cAAc;YAElB7mC,MAAM,GAAG,IAAIkvH,YAAY,CAAE6iC,WAAW,CAAE1wI,IAAI,CAACqS,QAAQ,CAAE,EAAEs+H,WAAW,CAAE3wI,IAAI,CAACwlB,QAAQ,CAAE,CAAE;YAEvF;UAED,KAAK,YAAY;UACjB,KAAK,QAAQ;YAEZ7mC,MAAM,GAAG,IAAIiwH,MAAM,CAAE8hC,WAAW,CAAE1wI,IAAI,CAACqS,QAAQ,CAAE,EAAEs+H,WAAW,CAAE3wI,IAAI,CAACwlB,QAAQ,CAAE,CAAE;YAEjF;UAED,KAAK,QAAQ;YAEZ7mC,MAAM,GAAG,IAAI4oH,MAAM,CAAEopC,WAAW,CAAE3wI,IAAI,CAACwlB,QAAQ,CAAE,CAAE;YAEnD;UAED,KAAK,OAAO;YAEX7mC,MAAM,GAAG,IAAIqtG,KAAK,EAAE;YAEpB;UAED,KAAK,MAAM;YAEVrtG,MAAM,GAAG,IAAIkrH,IAAI,EAAE;YAEnB;UAED;YAEClrH,MAAM,GAAG,IAAImhC,QAAQ,EAAE;QAAC;QAI1BnhC,MAAM,CAACwQ,IAAI,GAAG6Q,IAAI,CAAC7Q,IAAI;QAEvB,IAAK6Q,IAAI,CAAC/hB,IAAI,KAAK7B,SAAS,EAAGuC,MAAM,CAACV,IAAI,GAAG+hB,IAAI,CAAC/hB,IAAI;QAEtD,IAAK+hB,IAAI,CAACxD,MAAM,KAAKpgB,SAAS,EAAG;UAEhCuC,MAAM,CAAC6d,MAAM,CAACrF,SAAS,CAAE6I,IAAI,CAACxD,MAAM,CAAE;UAEtC,IAAKwD,IAAI,CAACwC,gBAAgB,KAAKpmB,SAAS,EAAGuC,MAAM,CAAC6jB,gBAAgB,GAAGxC,IAAI,CAACwC,gBAAgB;UAC1F,IAAK7jB,MAAM,CAAC6jB,gBAAgB,EAAG7jB,MAAM,CAAC6d,MAAM,CAACsgB,SAAS,CAAEn+B,MAAM,CAAC4zB,QAAQ,EAAE5zB,MAAM,CAACmqB,UAAU,EAAEnqB,MAAM,CAACsd,KAAK,CAAE;QAE3G,CAAC,MAAM;UAEN,IAAK+D,IAAI,CAACuS,QAAQ,KAAKn2B,SAAS,EAAGuC,MAAM,CAAC4zB,QAAQ,CAACpb,SAAS,CAAE6I,IAAI,CAACuS,QAAQ,CAAE;UAC7E,IAAKvS,IAAI,CAAClE,QAAQ,KAAK1f,SAAS,EAAGuC,MAAM,CAACmd,QAAQ,CAAC3E,SAAS,CAAE6I,IAAI,CAAClE,QAAQ,CAAE;UAC7E,IAAKkE,IAAI,CAAC8I,UAAU,KAAK1sB,SAAS,EAAGuC,MAAM,CAACmqB,UAAU,CAAC3R,SAAS,CAAE6I,IAAI,CAAC8I,UAAU,CAAE;UACnF,IAAK9I,IAAI,CAAC/D,KAAK,KAAK7f,SAAS,EAAGuC,MAAM,CAACsd,KAAK,CAAC9E,SAAS,CAAE6I,IAAI,CAAC/D,KAAK,CAAE;QAErE;QAEA,IAAK+D,IAAI,CAAC4a,EAAE,KAAKx+B,SAAS,EAAGuC,MAAM,CAACi8B,EAAE,CAACzjB,SAAS,CAAE6I,IAAI,CAAC4a,EAAE,CAAE;QAE3D,IAAK5a,IAAI,CAAC+gB,UAAU,KAAK3kC,SAAS,EAAGuC,MAAM,CAACoiC,UAAU,GAAG/gB,IAAI,CAAC+gB,UAAU;QACxE,IAAK/gB,IAAI,CAACghB,aAAa,KAAK5kC,SAAS,EAAGuC,MAAM,CAACqiC,aAAa,GAAGhhB,IAAI,CAACghB,aAAa;QAEjF,IAAKhhB,IAAI,CAACq8C,MAAM,EAAG;UAElB,IAAKr8C,IAAI,CAACq8C,MAAM,CAACmxB,IAAI,KAAKpxF,SAAS,EAAGuC,MAAM,CAAC09D,MAAM,CAACmxB,IAAI,GAAGxtE,IAAI,CAACq8C,MAAM,CAACmxB,IAAI;UAC3E,IAAKxtE,IAAI,CAACq8C,MAAM,CAACoxB,UAAU,KAAKrxF,SAAS,EAAGuC,MAAM,CAAC09D,MAAM,CAACoxB,UAAU,GAAGztE,IAAI,CAACq8C,MAAM,CAACoxB,UAAU;UAC7F,IAAKztE,IAAI,CAACq8C,MAAM,CAAC1sC,MAAM,KAAKvzB,SAAS,EAAGuC,MAAM,CAAC09D,MAAM,CAAC1sC,MAAM,GAAG3P,IAAI,CAACq8C,MAAM,CAAC1sC,MAAM;UACjF,IAAK3P,IAAI,CAACq8C,MAAM,CAACqxB,OAAO,KAAKtxF,SAAS,EAAGuC,MAAM,CAAC09D,MAAM,CAACqxB,OAAO,CAACv2E,SAAS,CAAE6I,IAAI,CAACq8C,MAAM,CAACqxB,OAAO,CAAE;UAC/F,IAAK1tE,IAAI,CAACq8C,MAAM,CAACjuC,MAAM,KAAKhyB,SAAS,EAAGuC,MAAM,CAAC09D,MAAM,CAACjuC,MAAM,GAAG,IAAI,CAACogI,WAAW,CAAExuI,IAAI,CAACq8C,MAAM,CAACjuC,MAAM,CAAE;QAEtG;QAEA,IAAKpO,IAAI,CAAC8gB,OAAO,KAAK1kC,SAAS,EAAGuC,MAAM,CAACmiC,OAAO,GAAG9gB,IAAI,CAAC8gB,OAAO;QAC/D,IAAK9gB,IAAI,CAACihB,aAAa,KAAK7kC,SAAS,EAAGuC,MAAM,CAACsiC,aAAa,GAAGjhB,IAAI,CAACihB,aAAa;QACjF,IAAKjhB,IAAI,CAACkhB,WAAW,KAAK9kC,SAAS,EAAGuC,MAAM,CAACuiC,WAAW,GAAGlhB,IAAI,CAACkhB,WAAW;QAC3E,IAAKlhB,IAAI,CAAC6C,QAAQ,KAAKzmB,SAAS,EAAGuC,MAAM,CAACkkB,QAAQ,GAAG7C,IAAI,CAAC6C,QAAQ;QAClE,IAAK7C,IAAI,CAAC+e,MAAM,KAAK3iC,SAAS,EAAGuC,MAAM,CAACogC,MAAM,CAACN,IAAI,GAAGze,IAAI,CAAC+e,MAAM;QAEjE,IAAK/e,IAAI,CAACwS,QAAQ,KAAKp2B,SAAS,EAAG;UAElC,IAAMo2B,QAAQ,GAAGxS,IAAI,CAACwS,QAAQ;UAE9B,KAAM,IAAI70B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG60B,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,EAAG,EAAG;YAE5CgB,MAAM,CAAC8V,GAAG,CAAE,IAAI,CAAC+5I,WAAW,CAAEh8H,QAAQ,CAAE70B,CAAC,CAAE,EAAEqmC,UAAU,EAAEC,SAAS,EAAE3gB,QAAQ,EAAE6d,UAAU,CAAE,CAAE;UAE7F;QAED;QAEA,IAAKnhB,IAAI,CAACmhB,UAAU,KAAK/kC,SAAS,EAAG;UAEpC,IAAMy0J,gBAAgB,GAAG7wI,IAAI,CAACmhB,UAAU;UAExC,KAAM,IAAIxjC,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGkzJ,gBAAgB,CAACnzJ,MAAM,EAAEC,IAAC,EAAG,EAAG;YAEpD,IAAMwR,IAAI,GAAG0hJ,gBAAgB,CAAElzJ,IAAC,CAAE;YAElCgB,MAAM,CAACwiC,UAAU,CAAChkC,IAAI,CAAEgkC,UAAU,CAAEhyB,IAAI,CAAE,CAAE;UAE7C;QAED;QAEA,IAAK6Q,IAAI,CAACrmB,IAAI,KAAK,KAAK,EAAG;UAE1B,IAAKqmB,IAAI,CAACgxE,UAAU,KAAK50F,SAAS,EAAGuC,MAAM,CAACqyF,UAAU,GAAGhxE,IAAI,CAACgxE,UAAU;UAExE,IAAMqT,MAAM,GAAGrkF,IAAI,CAACqkF,MAAM;UAE1B,KAAM,IAAI/1F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+1F,MAAM,CAAC3mG,MAAM,EAAE4Q,CAAC,EAAG,EAAG;YAE1C,IAAMw1G,KAAK,GAAGzf,MAAM,CAAE/1F,CAAC,CAAE;YACzB,IAAM20B,KAAK,GAAGtkC,MAAM,CAACokC,mBAAmB,CAAE,MAAM,EAAE+gF,KAAK,CAACnlH,MAAM,CAAE;YAEhE,IAAKskC,KAAK,KAAK7mC,SAAS,EAAG;cAE1BuC,MAAM,CAAC2pH,QAAQ,CAAErlF,KAAK,EAAE6gF,KAAK,CAAC9hF,QAAQ,EAAE8hF,KAAK,CAACyE,UAAU,CAAE;YAE3D;UAED;QAED;QAEA,OAAO5pH,MAAM;MAEd;IAAC;MAAA/G,GAAA;MAAAE,KAAA,EAED,SAAA42J,cAAe/vJ,MAAM,EAAEwlC,SAAS,EAAG;QAElC,IAAK7sC,MAAM,CAACmH,IAAI,CAAE0lC,SAAS,CAAE,CAACzmC,MAAM,KAAK,CAAC,EAAG;QAE7CiB,MAAM,CAAC8kC,QAAQ,CAAE,UAAWR,KAAK,EAAG;UAEnC,IAAKA,KAAK,CAACmC,aAAa,KAAK,IAAI,IAAInC,KAAK,CAACsC,QAAQ,KAAKnpC,SAAS,EAAG;YAEnE,IAAMmpC,QAAQ,GAAGpB,SAAS,CAAElB,KAAK,CAACsC,QAAQ,CAAE;YAE5C,IAAKA,QAAQ,KAAKnpC,SAAS,EAAG;cAE7BiF,OAAO,CAACC,IAAI,CAAE,kDAAkD,EAAE2hC,KAAK,CAACsC,QAAQ,CAAE;YAEnF,CAAC,MAAM;cAENtC,KAAK,CAAC61E,IAAI,CAAEvzE,QAAQ,EAAEtC,KAAK,CAACqC,UAAU,CAAE;YAEzC;UAED;QAED,CAAC,CAAE;MAEJ;IAAC;IAAA,OAAAkoH,YAAA;EAAA,EAx+ByBhM,MAAM;EA4+BjC,IAAM+O,eAAe,GAAG;IACvB1qJ,SAAS,EAAEA,SAAS;IACpBC,qBAAqB,EAAEA,qBAAqB;IAC5CC,qBAAqB,EAAEA,qBAAqB;IAC5CC,gCAAgC,EAAEA,gCAAgC;IAClEC,gCAAgC,EAAEA,gCAAgC;IAClEC,uBAAuB,EAAEA;EAC1B,CAAC;EAED,IAAMsqJ,gBAAgB,GAAG;IACxBrqJ,cAAc,EAAEA,cAAc;IAC9BC,mBAAmB,EAAEA,mBAAmB;IACxCC,sBAAsB,EAAEA;EACzB,CAAC;EAED,IAAMoqJ,cAAc,GAAG;IACtBnqJ,aAAa,EAAEA,aAAa;IAC5BC,0BAA0B,EAAEA,0BAA0B;IACtDE,yBAAyB,EAAEA,yBAAyB;IACpDE,YAAY,EAAEA,YAAY;IAC1BC,yBAAyB,EAAEA,yBAAyB;IACpDE,wBAAwB,EAAEA;EAC3B,CAAC;EAAC,IAEIgqJ,iBAAiB,0BAAAC,SAAA;IAAA7vI,SAAA,CAAA4vI,iBAAA,EAAAC,SAAA;IAAA,IAAAC,SAAA,GAAA5vI,YAAA,CAAA0vI,iBAAA;IAEtB,SAAAA,kBAAarP,OAAO,EAAG;MAAA,IAAAwP,QAAA;MAAA/wJ,eAAA,OAAA4wJ,iBAAA;MAEtBG,QAAA,GAAAD,SAAA,CAAAp3J,IAAA,OAAO6nJ,OAAO;MAEdwP,QAAA,CAAKC,mBAAmB,GAAG,IAAI;MAE/B,IAAK,OAAOC,iBAAiB,KAAK,WAAW,EAAG;QAE/C9vJ,OAAO,CAACC,IAAI,CAAE,6DAA6D,CAAE;MAE9E;MAEA,IAAK,OAAOkiJ,KAAK,KAAK,WAAW,EAAG;QAEnCniJ,OAAO,CAACC,IAAI,CAAE,iDAAiD,CAAE;MAElE;MAEA2vJ,QAAA,CAAKrrI,OAAO,GAAG;QAAElD,gBAAgB,EAAE;MAAO,CAAC;MAAC,OAAAuuI,QAAA;IAE7C;IAACvwJ,YAAA,CAAAowJ,iBAAA;MAAAl5J,GAAA;MAAAE,KAAA,EAED,SAAAs5J,WAAYxrI,OAAO,EAAG;QAErB,IAAI,CAACA,OAAO,GAAGA,OAAO;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAhuB,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAExC,IAAK7/H,GAAG,KAAKrkB,SAAS,EAAGqkB,GAAG,GAAG,EAAE;QAEjC,IAAK,IAAI,CAAC83D,IAAI,KAAKn8E,SAAS,EAAGqkB,GAAG,GAAG,IAAI,CAAC83D,IAAI,GAAG93D,GAAG;QAEpDA,GAAG,GAAG,IAAI,CAACghI,OAAO,CAACT,UAAU,CAAEvgI,GAAG,CAAE;QAEpC,IAAMu+B,KAAK,GAAG,IAAI;QAElB,IAAM6M,MAAM,GAAGm0F,KAAK,CAACjsI,GAAG,CAAE0M,GAAG,CAAE;QAE/B,IAAKorC,MAAM,KAAKzvD,SAAS,EAAG;UAE3B4iD,KAAK,CAACyiG,OAAO,CAACZ,SAAS,CAAEpgI,GAAG,CAAE;UAE9BuiI,UAAU,CAAE,YAAY;YAEvB,IAAK5C,MAAM,EAAGA,MAAM,CAAEv0F,MAAM,CAAE;YAE9B7M,KAAK,CAACyiG,OAAO,CAACX,OAAO,CAAErgI,GAAG,CAAE;UAE7B,CAAC,EAAE,CAAC,CAAE;UAEN,OAAOorC,MAAM;QAEd;QAEA,IAAMwlG,YAAY,GAAG,CAAC,CAAC;QACvBA,YAAY,CAAChO,WAAW,GAAK,IAAI,CAAC3B,WAAW,KAAK,WAAW,GAAK,aAAa,GAAG,SAAS;QAC3F2P,YAAY,CAAClO,OAAO,GAAG,IAAI,CAACtB,aAAa;QAEzC2B,KAAK,CAAE/iI,GAAG,EAAE4wI,YAAY,CAAE,CAACl2J,IAAI,CAAE,UAAWgG,GAAG,EAAG;UAEjD,OAAOA,GAAG,CAACyjJ,IAAI,EAAE;QAElB,CAAC,CAAE,CAACzpJ,IAAI,CAAE,UAAWypJ,IAAI,EAAG;UAE3B,OAAOuM,iBAAiB,CAAEvM,IAAI,EAAEttJ,MAAM,CAACmvB,MAAM,CAAEu4B,KAAK,CAACp5B,OAAO,EAAE;YAAE0rI,oBAAoB,EAAE;UAAO,CAAC,CAAE,CAAE;QAEnG,CAAC,CAAE,CAACn2J,IAAI,CAAE,UAAWo2J,WAAW,EAAG;UAElCvR,KAAK,CAACvrI,GAAG,CAAEgM,GAAG,EAAE8wI,WAAW,CAAE;UAE7B,IAAKnR,MAAM,EAAGA,MAAM,CAAEmR,WAAW,CAAE;UAEnCvyG,KAAK,CAACyiG,OAAO,CAACX,OAAO,CAAErgI,GAAG,CAAE;QAE7B,CAAC,CAAE,CAAC3gB,KAAK,CAAE,UAAWuV,CAAC,EAAG;UAEzB,IAAKirI,OAAO,EAAGA,OAAO,CAAEjrI,CAAC,CAAE;UAE3B2pC,KAAK,CAACyiG,OAAO,CAACV,SAAS,CAAEtgI,GAAG,CAAE;UAC9Bu+B,KAAK,CAACyiG,OAAO,CAACX,OAAO,CAAErgI,GAAG,CAAE;QAE7B,CAAC,CAAE;QAEHu+B,KAAK,CAACyiG,OAAO,CAACZ,SAAS,CAAEpgI,GAAG,CAAE;MAE/B;IAAC;IAAA,OAAAqwI,iBAAA;EAAA,EA3F8BtP,MAAM;EA+FtC,IAAIgQ,QAAQ;EAAC,IAEPC,YAAY;IAAA,SAAAA,aAAA;MAAAvxJ,eAAA,OAAAuxJ,YAAA;IAAA;IAAA/wJ,YAAA,CAAA+wJ,YAAA;MAAA75J,GAAA;MAAAE,KAAA,EAEjB,SAAAwnB,WAAA,EAAoB;QAEnB,IAAKkyI,QAAQ,KAAKp1J,SAAS,EAAG;UAE7Bo1J,QAAQ,GAAG,KAAME,MAAM,CAACD,YAAY,IAAIC,MAAM,CAACC,kBAAkB,GAAI;QAEtE;QAEA,OAAOH,QAAQ;MAEhB;IAAC;MAAA55J,GAAA;MAAAE,KAAA,EAED,SAAAqyD,WAAmBryD,KAAK,EAAG;QAE1B05J,QAAQ,GAAG15J,KAAK;MAEjB;IAAC;IAAA,OAAA25J,YAAA;EAAA;EAAA,IAIIG,WAAW,0BAAAC,SAAA;IAAA3wI,SAAA,CAAA0wI,WAAA,EAAAC,SAAA;IAAA,IAAAC,SAAA,GAAA1wI,YAAA,CAAAwwI,WAAA;IAEhB,SAAAA,YAAanQ,OAAO,EAAG;MAAAvhJ,eAAA,OAAA0xJ,WAAA;MAAA,OAAAE,SAAA,CAAAl4J,IAAA,OAEf6nJ,OAAO;IAEf;IAAC/gJ,YAAA,CAAAkxJ,WAAA;MAAAh6J,GAAA;MAAAE,KAAA,EAED,SAAAgqJ,KAAMrhI,GAAG,EAAE2/H,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;QAExC,IAAMthG,KAAK,GAAG,IAAI;QAElB,IAAMoiG,MAAM,GAAG,IAAIwB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;QAC7CL,MAAM,CAACmE,eAAe,CAAE,aAAa,CAAE;QACvCnE,MAAM,CAACc,OAAO,CAAE,IAAI,CAAC3pE,IAAI,CAAE;QAC3B6oE,MAAM,CAACgB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;QAC7CT,MAAM,CAACa,kBAAkB,CAAE,IAAI,CAACN,eAAe,CAAE;QACjDP,MAAM,CAACU,IAAI,CAAErhI,GAAG,EAAE,UAAWzD,MAAM,EAAG;UAErC,IAAI;YAEH;YACA;YACA,IAAM+0I,UAAU,GAAG/0I,MAAM,CAAC/d,KAAK,CAAE,CAAC,CAAE;YAEpC,IAAM5F,OAAO,GAAGo4J,YAAY,CAACnyI,UAAU,EAAE;YACzCjmB,OAAO,CAAC24J,eAAe,CAAED,UAAU,EAAE,UAAWE,WAAW,EAAG;cAE7D7R,MAAM,CAAE6R,WAAW,CAAE;YAEtB,CAAC,CAAE;UAEJ,CAAC,CAAC,OAAQ58I,CAAC,EAAG;YAEb,IAAKirI,OAAO,EAAG;cAEdA,OAAO,CAAEjrI,CAAC,CAAE;YAEb,CAAC,MAAM;cAENhU,OAAO,CAAChG,KAAK,CAAEga,CAAC,CAAE;YAEnB;YAEA2pC,KAAK,CAACyiG,OAAO,CAACV,SAAS,CAAEtgI,GAAG,CAAE;UAE/B;QAED,CAAC,EAAE4/H,UAAU,EAAEC,OAAO,CAAE;MAEzB;IAAC;IAAA,OAAAsR,WAAA;EAAA,EAlDwBpQ,MAAM;EAAA,IAsD1B0Q,oBAAoB,0BAAAC,WAAA;IAAAjxI,SAAA,CAAAgxI,oBAAA,EAAAC,WAAA;IAAA,IAAAC,SAAA,GAAAhxI,YAAA,CAAA8wI,oBAAA;IAEzB,SAAAA,qBAAav3F,QAAQ,EAAEC,WAAW,EAAEqyB,SAAS,GAAG,CAAC,EAAG;MAAA,IAAAolE,QAAA;MAAAnyJ,eAAA,OAAAgyJ,oBAAA;MAEnDG,QAAA,GAAAD,SAAA,CAAAx4J,IAAA,OAAOwC,SAAS,EAAE6wF,SAAS;MAE3BolE,QAAA,CAAKC,sBAAsB,GAAG,IAAI;MAElC,IAAMpgH,MAAM,GAAG,IAAI5B,KAAK,EAAE,CAACp9B,GAAG,CAAEynD,QAAQ,CAAE;MAC1C,IAAMxoB,MAAM,GAAG,IAAI7B,KAAK,EAAE,CAACp9B,GAAG,CAAE0nD,WAAW,CAAE;MAE7C,IAAM23F,GAAG,GAAG,IAAIrlI,OAAO,CAAEglB,MAAM,CAAC12B,CAAC,EAAE02B,MAAM,CAACv3B,CAAC,EAAEu3B,MAAM,CAAC7/B,CAAC,CAAE;MACvD,IAAMmgJ,MAAM,GAAG,IAAItlI,OAAO,CAAEilB,MAAM,CAAC32B,CAAC,EAAE22B,MAAM,CAACx3B,CAAC,EAAEw3B,MAAM,CAAC9/B,CAAC,CAAE;;MAE1D;MACA,IAAMqiH,EAAE,GAAGhmH,IAAI,CAACsH,IAAI,CAAEtH,IAAI,CAACC,EAAE,CAAE;MAC/B,IAAMwa,EAAE,GAAGurG,EAAE,GAAGhmH,IAAI,CAACsH,IAAI,CAAE,IAAI,CAAE;MAEjCq8I,QAAA,CAAKjlE,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAAC94E,IAAI,CAAEg+I,GAAG,CAAE,CAAC99I,GAAG,CAAE+9I,MAAM,CAAE,CAACv9I,cAAc,CAAEy/G,EAAE,CAAE;MACxE29B,QAAA,CAAKjlE,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAAC94E,IAAI,CAAEg+I,GAAG,CAAE,CAAC19I,GAAG,CAAE29I,MAAM,CAAE,CAACv9I,cAAc,CAAEkU,EAAE,CAAE;MAAC,OAAAkpI,QAAA;IAE1E;IAAC,OAAA3xJ,YAAA,CAAAwxJ,oBAAA;EAAA,EArBiC7G,UAAU;EAAA,IAyBvCoH,iBAAiB,0BAAAC,YAAA;IAAAxxI,SAAA,CAAAuxI,iBAAA,EAAAC,YAAA;IAAA,IAAAC,SAAA,GAAAvxI,YAAA,CAAAqxI,iBAAA;IAEtB,SAAAA,kBAAaj1I,KAAK,EAAEyvE,SAAS,GAAG,CAAC,EAAG;MAAA,IAAA2lE,QAAA;MAAA1yJ,eAAA,OAAAuyJ,iBAAA;MAEnCG,QAAA,GAAAD,SAAA,CAAA/4J,IAAA,OAAOwC,SAAS,EAAE6wF,SAAS;MAE3B2lE,QAAA,CAAKC,mBAAmB,GAAG,IAAI;MAE/B,IAAM3gH,MAAM,GAAG,IAAI5B,KAAK,EAAE,CAACp9B,GAAG,CAAEsK,KAAK,CAAE;;MAEvC;MACAo1I,QAAA,CAAKxlE,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAACn6E,GAAG,CAAEg/B,MAAM,CAAC12B,CAAC,EAAE02B,MAAM,CAACv3B,CAAC,EAAEu3B,MAAM,CAAC7/B,CAAC,CAAE,CAAC4C,cAAc,CAAE,CAAC,GAAGvG,IAAI,CAACsH,IAAI,CAAEtH,IAAI,CAACC,EAAE,CAAE,CAAE;MAAC,OAAAikJ,QAAA;IAE1G;IAAC,OAAAlyJ,YAAA,CAAA+xJ,iBAAA;EAAA,EAb8BpH,UAAU;EAiB1C,IAAMyH,SAAS,GAAG,aAAc,IAAIn6H,OAAO,EAAE;EAC7C,IAAMo6H,QAAQ,GAAG,aAAc,IAAIp6H,OAAO,EAAE;EAC5C,IAAMq6H,iBAAiB,GAAG,aAAc,IAAIr6H,OAAO,EAAE;EAAC,IAEhDs6H,YAAY;IAEjB,SAAAA,aAAA,EAAc;MAAA/yJ,eAAA,OAAA+yJ,YAAA;MAEb,IAAI,CAACt5J,IAAI,GAAG,cAAc;MAE1B,IAAI,CAACkpD,MAAM,GAAG,CAAC;MAEf,IAAI,CAACqwG,MAAM,GAAG,KAAK;MAEnB,IAAI,CAACxiD,OAAO,GAAG,IAAIjuD,iBAAiB,EAAE;MACtC,IAAI,CAACiuD,OAAO,CAAC3xE,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;MAC/B,IAAI,CAACgyE,OAAO,CAACluF,gBAAgB,GAAG,KAAK;MAErC,IAAI,CAACmuF,OAAO,GAAG,IAAIluD,iBAAiB,EAAE;MACtC,IAAI,CAACkuD,OAAO,CAAC5xE,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;MAC/B,IAAI,CAACiyE,OAAO,CAACnuF,gBAAgB,GAAG,KAAK;MAErC,IAAI,CAAC2wI,MAAM,GAAG;QACblwG,KAAK,EAAE,IAAI;QACXL,GAAG,EAAE,IAAI;QACTC,MAAM,EAAE,IAAI;QACZrlB,IAAI,EAAE,IAAI;QACVC,GAAG,EAAE,IAAI;QACTulB,IAAI,EAAE,IAAI;QACVkwG,MAAM,EAAE;MACT,CAAC;IAEF;IAACxyJ,YAAA,CAAAuyJ,YAAA;MAAAr7J,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAQmF,MAAM,EAAG;QAEhB,IAAMwX,KAAK,GAAG,IAAI,CAACutH,MAAM;QAEzB,IAAM9vI,WAAW,GAAGuiB,KAAK,CAACqd,KAAK,KAAK70B,MAAM,CAAC60B,KAAK,IAAIrd,KAAK,CAACgd,GAAG,KAAKx0B,MAAM,CAACw0B,GAAG,IAC3Ehd,KAAK,CAACid,MAAM,KAAKz0B,MAAM,CAACy0B,MAAM,GAAG,IAAI,CAACA,MAAM,IAAIjd,KAAK,CAACpI,IAAI,KAAKpP,MAAM,CAACoP,IAAI,IAC1EoI,KAAK,CAACnI,GAAG,KAAKrP,MAAM,CAACqP,GAAG,IAAImI,KAAK,CAACod,IAAI,KAAK50B,MAAM,CAAC40B,IAAI,IAAIpd,KAAK,CAACstH,MAAM,KAAK,IAAI,CAACA,MAAM;QAEvF,IAAK7vI,WAAW,EAAG;UAElBuiB,KAAK,CAACqd,KAAK,GAAG70B,MAAM,CAAC60B,KAAK;UAC1Brd,KAAK,CAACgd,GAAG,GAAGx0B,MAAM,CAACw0B,GAAG;UACtBhd,KAAK,CAACid,MAAM,GAAGz0B,MAAM,CAACy0B,MAAM,GAAG,IAAI,CAACA,MAAM;UAC1Cjd,KAAK,CAACpI,IAAI,GAAGpP,MAAM,CAACoP,IAAI;UACxBoI,KAAK,CAACnI,GAAG,GAAGrP,MAAM,CAACqP,GAAG;UACtBmI,KAAK,CAACod,IAAI,GAAG50B,MAAM,CAAC40B,IAAI;UACxBpd,KAAK,CAACstH,MAAM,GAAG,IAAI,CAACA,MAAM;;UAE1B;UACA;;UAEAF,iBAAiB,CAACz+I,IAAI,CAAE6Z,MAAM,CAACE,gBAAgB,CAAE;UACjD,IAAM8kI,UAAU,GAAGxtH,KAAK,CAACstH,MAAM,GAAG,CAAC;UACnC,IAAMG,kBAAkB,GAAGD,UAAU,GAAGxtH,KAAK,CAACpI,IAAI,GAAGoI,KAAK,CAACqd,KAAK;UAChE,IAAMqwG,IAAI,GAAK1tH,KAAK,CAACpI,IAAI,GAAG9uB,IAAI,CAACk1C,GAAG,CAAEn1C,OAAO,GAAGm3B,KAAK,CAACgd,GAAG,GAAG,GAAG,CAAE,GAAKhd,KAAK,CAACod,IAAI;UAChF,IAAIuwG,IAAI,EAAEC,IAAI;;UAEd;;UAEAT,QAAQ,CAACz9I,QAAQ,CAAE,EAAE,CAAE,GAAG,CAAE89I,UAAU;UACtCN,SAAS,CAACx9I,QAAQ,CAAE,EAAE,CAAE,GAAG89I,UAAU;;UAErC;;UAEAG,IAAI,GAAG,CAAED,IAAI,GAAG1tH,KAAK,CAACid,MAAM,GAAGwwG,kBAAkB;UACjDG,IAAI,GAAGF,IAAI,GAAG1tH,KAAK,CAACid,MAAM,GAAGwwG,kBAAkB;UAE/CL,iBAAiB,CAAC19I,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,GAAGswB,KAAK,CAACpI,IAAI,IAAKg2H,IAAI,GAAGD,IAAI,CAAE;UAClEP,iBAAiB,CAAC19I,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAEk+I,IAAI,GAAGD,IAAI,KAAOC,IAAI,GAAGD,IAAI,CAAE;UAEnE,IAAI,CAAC7iD,OAAO,CAACpiF,gBAAgB,CAAC/Z,IAAI,CAAEy+I,iBAAiB,CAAE;;UAEvD;;UAEAO,IAAI,GAAG,CAAED,IAAI,GAAG1tH,KAAK,CAACid,MAAM,GAAGwwG,kBAAkB;UACjDG,IAAI,GAAGF,IAAI,GAAG1tH,KAAK,CAACid,MAAM,GAAGwwG,kBAAkB;UAE/CL,iBAAiB,CAAC19I,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,GAAGswB,KAAK,CAACpI,IAAI,IAAKg2H,IAAI,GAAGD,IAAI,CAAE;UAClEP,iBAAiB,CAAC19I,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAEk+I,IAAI,GAAGD,IAAI,KAAOC,IAAI,GAAGD,IAAI,CAAE;UAEnE,IAAI,CAAC5iD,OAAO,CAACriF,gBAAgB,CAAC/Z,IAAI,CAAEy+I,iBAAiB,CAAE;QAExD;QAEA,IAAI,CAACtiD,OAAO,CAACjiF,WAAW,CAACla,IAAI,CAAE6Z,MAAM,CAACK,WAAW,CAAE,CAACzZ,QAAQ,CAAE+9I,QAAQ,CAAE;QACxE,IAAI,CAACpiD,OAAO,CAACliF,WAAW,CAACla,IAAI,CAAE6Z,MAAM,CAACK,WAAW,CAAE,CAACzZ,QAAQ,CAAE89I,SAAS,CAAE;MAE1E;IAAC;IAAA,OAAAG,YAAA;EAAA;EAAA,IAIIQ,KAAK;IAEV,SAAAA,MAAaC,SAAS,GAAG,IAAI,EAAG;MAAAxzJ,eAAA,OAAAuzJ,KAAA;MAE/B,IAAI,CAACC,SAAS,GAAGA,SAAS;MAE1B,IAAI,CAACnY,SAAS,GAAG,CAAC;MAClB,IAAI,CAACoY,OAAO,GAAG,CAAC;MAChB,IAAI,CAACC,WAAW,GAAG,CAAC;MAEpB,IAAI,CAACC,OAAO,GAAG,KAAK;IAErB;IAACnzJ,YAAA,CAAA+yJ,KAAA;MAAA77J,GAAA;MAAAE,KAAA,EAED,SAAAqgD,MAAA,EAAQ;QAEP,IAAI,CAACojG,SAAS,GAAGuY,GAAG,EAAE;QAEtB,IAAI,CAACH,OAAO,GAAG,IAAI,CAACpY,SAAS;QAC7B,IAAI,CAACqY,WAAW,GAAG,CAAC;QACpB,IAAI,CAACC,OAAO,GAAG,IAAI;MAEpB;IAAC;MAAAj8J,GAAA;MAAAE,KAAA,EAED,SAAAoH,KAAA,EAAO;QAEN,IAAI,CAAC60J,cAAc,EAAE;QACrB,IAAI,CAACF,OAAO,GAAG,KAAK;QACpB,IAAI,CAACH,SAAS,GAAG,KAAK;MAEvB;IAAC;MAAA97J,GAAA;MAAAE,KAAA,EAED,SAAAi8J,eAAA,EAAiB;QAEhB,IAAI,CAACC,QAAQ,EAAE;QACf,OAAO,IAAI,CAACJ,WAAW;MAExB;IAAC;MAAAh8J,GAAA;MAAAE,KAAA,EAED,SAAAk8J,SAAA,EAAW;QAEV,IAAIv6B,IAAI,GAAG,CAAC;QAEZ,IAAK,IAAI,CAACi6B,SAAS,IAAI,CAAE,IAAI,CAACG,OAAO,EAAG;UAEvC,IAAI,CAAC17G,KAAK,EAAE;UACZ,OAAO,CAAC;QAET;QAEA,IAAK,IAAI,CAAC07G,OAAO,EAAG;UAEnB,IAAMI,OAAO,GAAGH,GAAG,EAAE;UAErBr6B,IAAI,GAAG,CAAEw6B,OAAO,GAAG,IAAI,CAACN,OAAO,IAAK,IAAI;UACxC,IAAI,CAACA,OAAO,GAAGM,OAAO;UAEtB,IAAI,CAACL,WAAW,IAAIn6B,IAAI;QAEzB;QAEA,OAAOA,IAAI;MAEZ;IAAC;IAAA,OAAAg6B,KAAA;EAAA;EAIF,SAASK,GAAGA,CAAA,EAAG;IAEd,OAAO,CAAE,OAAOI,WAAW,KAAK,WAAW,GAAGC,IAAI,GAAGD,WAAW,EAAGJ,GAAG,EAAE,CAAC,CAAC;EAE3E;;EAEA,IAAMM,WAAW,GAAG,aAAc,IAAIlnI,OAAO,EAAE;EAC/C,IAAMmnI,aAAa,GAAG,aAAc,IAAI/rI,UAAU,EAAE;EACpD,IAAMgsI,QAAQ,GAAG,aAAc,IAAIpnI,OAAO,EAAE;EAC5C,IAAMqnI,cAAc,GAAG,aAAc,IAAIrnI,OAAO,EAAE;EAAC,IAE7CsnI,aAAa,0BAAAC,WAAA;IAAAvzI,SAAA,CAAAszI,aAAA,EAAAC,WAAA;IAAA,IAAAC,SAAA,GAAAtzI,YAAA,CAAAozI,aAAA;IAElB,SAAAA,cAAA,EAAc;MAAA,IAAAG,QAAA;MAAAz0J,eAAA,OAAAs0J,aAAA;MAEbG,QAAA,GAAAD,SAAA,CAAA96J,IAAA;MAEA+6J,QAAA,CAAKh7J,IAAI,GAAG,eAAe;MAE3Bg7J,QAAA,CAAKt7J,OAAO,GAAGo4J,YAAY,CAACnyI,UAAU,EAAE;MAExCq1I,QAAA,CAAKC,IAAI,GAAGD,QAAA,CAAKt7J,OAAO,CAACw7J,UAAU,EAAE;MACrCF,QAAA,CAAKC,IAAI,CAACxnD,OAAO,CAAEunD,QAAA,CAAKt7J,OAAO,CAACy7J,WAAW,CAAE;MAE7CH,QAAA,CAAK/4E,MAAM,GAAG,IAAI;MAElB+4E,QAAA,CAAKI,SAAS,GAAG,CAAC;;MAElB;;MAEAJ,QAAA,CAAKK,MAAM,GAAG,IAAIvB,KAAK,EAAE;MAAC,OAAAkB,QAAA;IAE3B;IAACj0J,YAAA,CAAA8zJ,aAAA;MAAA58J,GAAA;MAAAE,KAAA,EAED,SAAAm9J,SAAA,EAAW;QAEV,OAAO,IAAI,CAACL,IAAI;MAEjB;IAAC;MAAAh9J,GAAA;MAAAE,KAAA,EAED,SAAAo9J,aAAA,EAAe;QAEd,IAAK,IAAI,CAACt5E,MAAM,KAAK,IAAI,EAAG;UAE3B,IAAI,CAACg5E,IAAI,CAACjnD,UAAU,CAAE,IAAI,CAAC/xB,MAAM,CAAE;UACnC,IAAI,CAACA,MAAM,CAAC+xB,UAAU,CAAE,IAAI,CAACt0G,OAAO,CAACy7J,WAAW,CAAE;UAClD,IAAI,CAACF,IAAI,CAACxnD,OAAO,CAAE,IAAI,CAAC/zG,OAAO,CAACy7J,WAAW,CAAE;UAC7C,IAAI,CAACl5E,MAAM,GAAG,IAAI;QAEnB;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAhkF,GAAA;MAAAE,KAAA,EAED,SAAAq9J,UAAA,EAAY;QAEX,OAAO,IAAI,CAACv5E,MAAM;MAEnB;IAAC;MAAAhkF,GAAA;MAAAE,KAAA,EAED,SAAAs9J,UAAWt9J,KAAK,EAAG;QAElB,IAAK,IAAI,CAAC8jF,MAAM,KAAK,IAAI,EAAG;UAE3B,IAAI,CAACg5E,IAAI,CAACjnD,UAAU,CAAE,IAAI,CAAC/xB,MAAM,CAAE;UACnC,IAAI,CAACA,MAAM,CAAC+xB,UAAU,CAAE,IAAI,CAACt0G,OAAO,CAACy7J,WAAW,CAAE;QAEnD,CAAC,MAAM;UAEN,IAAI,CAACF,IAAI,CAACjnD,UAAU,CAAE,IAAI,CAACt0G,OAAO,CAACy7J,WAAW,CAAE;QAEjD;QAEA,IAAI,CAACl5E,MAAM,GAAG9jF,KAAK;QACnB,IAAI,CAAC88J,IAAI,CAACxnD,OAAO,CAAE,IAAI,CAACxxB,MAAM,CAAE;QAChC,IAAI,CAACA,MAAM,CAACwxB,OAAO,CAAE,IAAI,CAAC/zG,OAAO,CAACy7J,WAAW,CAAE;QAE/C,OAAO,IAAI;MAEZ;IAAC;MAAAl9J,GAAA;MAAAE,KAAA,EAED,SAAAu9J,gBAAA,EAAkB;QAEjB,OAAO,IAAI,CAACT,IAAI,CAACA,IAAI,CAAC98J,KAAK;MAE5B;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAw9J,gBAAiBx9J,KAAK,EAAG;QAExB,IAAI,CAAC88J,IAAI,CAACA,IAAI,CAACW,eAAe,CAAEz9J,KAAK,EAAE,IAAI,CAACuB,OAAO,CAACm8J,WAAW,EAAE,IAAI,CAAE;QAEvE,OAAO,IAAI;MAEZ;IAAC;MAAA59J,GAAA;MAAAE,KAAA,EAED,SAAA8rC,kBAAmBC,KAAK,EAAG;QAE1BgP,IAAA,CAAAC,eAAA,CAAA0hH,aAAA,CAAAj9J,SAAA,8BAAAqC,IAAA,OAAyBiqC,KAAK;QAE9B,IAAMn2B,QAAQ,GAAG,IAAI,CAACrU,OAAO,CAACqU,QAAQ;QACtC,IAAMktB,EAAE,GAAG,IAAI,CAACA,EAAE;QAElB,IAAI,CAACm6H,SAAS,GAAG,IAAI,CAACC,MAAM,CAAChB,QAAQ,EAAE;QAEvC,IAAI,CAACvlI,WAAW,CAACqO,SAAS,CAAEs3H,WAAW,EAAEC,aAAa,EAAEC,QAAQ,CAAE;QAElEC,cAAc,CAACrhJ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,CAACqa,eAAe,CAAE8mI,aAAa,CAAE;QAEhE,IAAK3mJ,QAAQ,CAAC+nJ,SAAS,EAAG;UAEzB;;UAEA,IAAMja,OAAO,GAAG,IAAI,CAACniJ,OAAO,CAACm8J,WAAW,GAAG,IAAI,CAACT,SAAS;UAEzDrnJ,QAAQ,CAAC+nJ,SAAS,CAACC,uBAAuB,CAAEtB,WAAW,CAACxkJ,CAAC,EAAE4rI,OAAO,CAAE;UACpE9tI,QAAQ,CAACioJ,SAAS,CAACD,uBAAuB,CAAEtB,WAAW,CAAClkJ,CAAC,EAAEsrI,OAAO,CAAE;UACpE9tI,QAAQ,CAACkoJ,SAAS,CAACF,uBAAuB,CAAEtB,WAAW,CAACvwI,CAAC,EAAE23H,OAAO,CAAE;UACpE9tI,QAAQ,CAACmoJ,QAAQ,CAACH,uBAAuB,CAAEnB,cAAc,CAAC3kJ,CAAC,EAAE4rI,OAAO,CAAE;UACtE9tI,QAAQ,CAACooJ,QAAQ,CAACJ,uBAAuB,CAAEnB,cAAc,CAACrkJ,CAAC,EAAEsrI,OAAO,CAAE;UACtE9tI,QAAQ,CAACqoJ,QAAQ,CAACL,uBAAuB,CAAEnB,cAAc,CAAC1wI,CAAC,EAAE23H,OAAO,CAAE;UACtE9tI,QAAQ,CAACsoJ,GAAG,CAACN,uBAAuB,CAAE96H,EAAE,CAAChrB,CAAC,EAAE4rI,OAAO,CAAE;UACrD9tI,QAAQ,CAACuoJ,GAAG,CAACP,uBAAuB,CAAE96H,EAAE,CAAC1qB,CAAC,EAAEsrI,OAAO,CAAE;UACrD9tI,QAAQ,CAACwoJ,GAAG,CAACR,uBAAuB,CAAE96H,EAAE,CAAC/W,CAAC,EAAE23H,OAAO,CAAE;QAEtD,CAAC,MAAM;UAEN9tI,QAAQ,CAACiuB,WAAW,CAAEy4H,WAAW,CAACxkJ,CAAC,EAAEwkJ,WAAW,CAAClkJ,CAAC,EAAEkkJ,WAAW,CAACvwI,CAAC,CAAE;UACnEnW,QAAQ,CAACyoJ,cAAc,CAAE5B,cAAc,CAAC3kJ,CAAC,EAAE2kJ,cAAc,CAACrkJ,CAAC,EAAEqkJ,cAAc,CAAC1wI,CAAC,EAAE+W,EAAE,CAAChrB,CAAC,EAAEgrB,EAAE,CAAC1qB,CAAC,EAAE0qB,EAAE,CAAC/W,CAAC,CAAE;QAElG;MAED;IAAC;IAAA,OAAA2wI,aAAA;EAAA,EAzH0B10H,QAAQ;EAAA,IA6H9Bs2H,KAAK,0BAAAC,WAAA;IAAAn1I,SAAA,CAAAk1I,KAAA,EAAAC,WAAA;IAAA,IAAAC,SAAA,GAAAl1I,YAAA,CAAAg1I,KAAA;IAEV,SAAAA,MAAa1oJ,QAAQ,EAAG;MAAA,IAAA6oJ,QAAA;MAAAr2J,eAAA,OAAAk2J,KAAA;MAEvBG,QAAA,GAAAD,SAAA,CAAA18J,IAAA;MAEA28J,QAAA,CAAK58J,IAAI,GAAG,OAAO;MAEnB48J,QAAA,CAAK7oJ,QAAQ,GAAGA,QAAQ;MACxB6oJ,QAAA,CAAKl9J,OAAO,GAAGqU,QAAQ,CAACrU,OAAO;MAE/Bk9J,QAAA,CAAK3B,IAAI,GAAG2B,QAAA,CAAKl9J,OAAO,CAACw7J,UAAU,EAAE;MACrC0B,QAAA,CAAK3B,IAAI,CAACxnD,OAAO,CAAE1/F,QAAQ,CAACunJ,QAAQ,EAAE,CAAE;MAExCsB,QAAA,CAAKC,QAAQ,GAAG,KAAK;MAErBD,QAAA,CAAKv5I,MAAM,GAAG,IAAI;MAClBu5I,QAAA,CAAKE,MAAM,GAAG,CAAC;MACfF,QAAA,CAAKG,IAAI,GAAG,KAAK;MACjBH,QAAA,CAAKI,SAAS,GAAG,CAAC;MAClBJ,QAAA,CAAKK,OAAO,GAAG,CAAC;MAChBL,QAAA,CAAKn/I,MAAM,GAAG,CAAC;MACfm/I,QAAA,CAAKxY,QAAQ,GAAG3hJ,SAAS;MACzBm6J,QAAA,CAAKM,YAAY,GAAG,CAAC;MACrBN,QAAA,CAAKO,SAAS,GAAG,KAAK;MACtBP,QAAA,CAAKQ,kBAAkB,GAAG,IAAI;MAC9BR,QAAA,CAAKp0I,MAAM,GAAG,IAAI;MAClBo0I,QAAA,CAAKS,UAAU,GAAG,OAAO;MAEzBT,QAAA,CAAKU,UAAU,GAAG,CAAC;MACnBV,QAAA,CAAKW,SAAS,GAAG,CAAC;MAClBX,QAAA,CAAKY,UAAU,GAAG,KAAK;MAEvBZ,QAAA,CAAKa,OAAO,GAAG,EAAE;MAAC,OAAAb,QAAA;IAEnB;IAAC71J,YAAA,CAAA01J,KAAA;MAAAx+J,GAAA;MAAAE,KAAA,EAED,SAAAu/J,UAAA,EAAY;QAEX,OAAO,IAAI,CAACzC,IAAI;MAEjB;IAAC;MAAAh9J,GAAA;MAAAE,KAAA,EAED,SAAAw/J,cAAeC,SAAS,EAAG;QAE1B,IAAI,CAACR,kBAAkB,GAAG,KAAK;QAC/B,IAAI,CAACC,UAAU,GAAG,WAAW;QAC7B,IAAI,CAAC70I,MAAM,GAAGo1I,SAAS;QACvB,IAAI,CAACnqD,OAAO,EAAE;QAEd,OAAO,IAAI;MAEZ;IAAC;MAAAx1G,GAAA;MAAAE,KAAA,EAED,SAAA0/J,sBAAuBC,YAAY,EAAG;QAErC,IAAI,CAACV,kBAAkB,GAAG,KAAK;QAC/B,IAAI,CAACC,UAAU,GAAG,WAAW;QAC7B,IAAI,CAAC70I,MAAM,GAAG,IAAI,CAAC9oB,OAAO,CAACq+J,wBAAwB,CAAED,YAAY,CAAE;QACnE,IAAI,CAACrqD,OAAO,EAAE;QAEd,OAAO,IAAI;MAEZ;IAAC;MAAAx1G,GAAA;MAAAE,KAAA,EAED,SAAA6/J,qBAAsBC,WAAW,EAAG;QAEnC,IAAI,CAACb,kBAAkB,GAAG,KAAK;QAC/B,IAAI,CAACC,UAAU,GAAG,iBAAiB;QACnC,IAAI,CAAC70I,MAAM,GAAG,IAAI,CAAC9oB,OAAO,CAACw+J,uBAAuB,CAAED,WAAW,CAAE;QACjE,IAAI,CAACxqD,OAAO,EAAE;QAEd,OAAO,IAAI;MAEZ;IAAC;MAAAx1G,GAAA;MAAAE,KAAA,EAED,SAAAggK,UAAW7F,WAAW,EAAG;QAExB,IAAI,CAACj1I,MAAM,GAAGi1I,WAAW;QACzB,IAAI,CAAC+E,UAAU,GAAG,QAAQ;QAE1B,IAAK,IAAI,CAACR,QAAQ,EAAG,IAAI,CAACuB,IAAI,EAAE;QAEhC,OAAO,IAAI;MAEZ;IAAC;MAAAngK,GAAA;MAAAE,KAAA,EAED,SAAAigK,KAAMC,KAAK,GAAG,CAAC,EAAG;QAEjB,IAAK,IAAI,CAAClB,SAAS,KAAK,IAAI,EAAG;UAE9Bz1J,OAAO,CAACC,IAAI,CAAE,wCAAwC,CAAE;UACxD;QAED;QAEA,IAAK,IAAI,CAACy1J,kBAAkB,KAAK,KAAK,EAAG;UAExC11J,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;UAClE;QAED;QAEA,IAAI,CAAC21J,UAAU,GAAG,IAAI,CAAC59J,OAAO,CAACm8J,WAAW,GAAGwC,KAAK;QAElD,IAAM71I,MAAM,GAAG,IAAI,CAAC9oB,OAAO,CAAC4+J,kBAAkB,EAAE;QAChD91I,MAAM,CAACnF,MAAM,GAAG,IAAI,CAACA,MAAM;QAC3BmF,MAAM,CAACu0I,IAAI,GAAG,IAAI,CAACA,IAAI;QACvBv0I,MAAM,CAACw0I,SAAS,GAAG,IAAI,CAACA,SAAS;QACjCx0I,MAAM,CAACy0I,OAAO,GAAG,IAAI,CAACA,OAAO;QAC7Bz0I,MAAM,CAAC+1I,OAAO,GAAG,IAAI,CAACC,OAAO,CAACr/C,IAAI,CAAE,IAAI,CAAE;QAC1C32F,MAAM,CAACg2B,KAAK,CAAE,IAAI,CAAC8+G,UAAU,EAAE,IAAI,CAACC,SAAS,GAAG,IAAI,CAAC9/I,MAAM,EAAE,IAAI,CAAC2mI,QAAQ,CAAE;QAE5E,IAAI,CAAC+Y,SAAS,GAAG,IAAI;QAErB,IAAI,CAAC30I,MAAM,GAAGA,MAAM;QAEpB,IAAI,CAACi2I,SAAS,CAAE,IAAI,CAAC3B,MAAM,CAAE;QAC7B,IAAI,CAAC4B,eAAe,CAAE,IAAI,CAACxB,YAAY,CAAE;QAEzC,OAAO,IAAI,CAACzpD,OAAO,EAAE;MAEtB;IAAC;MAAAx1G,GAAA;MAAAE,KAAA,EAED,SAAAwgK,MAAA,EAAQ;QAEP,IAAK,IAAI,CAACvB,kBAAkB,KAAK,KAAK,EAAG;UAExC11J,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;UAClE;QAED;QAEA,IAAK,IAAI,CAACw1J,SAAS,KAAK,IAAI,EAAG;UAE9B;;UAEA,IAAI,CAACI,SAAS,IAAIxoJ,IAAI,CAACa,GAAG,CAAE,IAAI,CAAClW,OAAO,CAACm8J,WAAW,GAAG,IAAI,CAACyB,UAAU,EAAE,CAAC,CAAE,GAAG,IAAI,CAACJ,YAAY;UAE/F,IAAK,IAAI,CAACH,IAAI,KAAK,IAAI,EAAG;YAEzB;;YAEA,IAAI,CAACQ,SAAS,GAAG,IAAI,CAACA,SAAS,IAAK,IAAI,CAACnZ,QAAQ,IAAI,IAAI,CAAC/gI,MAAM,CAAC+gI,QAAQ,CAAE;UAE5E;UAEA,IAAI,CAAC57H,MAAM,CAACjjB,IAAI,EAAE;UAClB,IAAI,CAACijB,MAAM,CAAC+1I,OAAO,GAAG,IAAI;UAE1B,IAAI,CAACpB,SAAS,GAAG,KAAK;QAEvB;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAl/J,GAAA;MAAAE,KAAA,EAED,SAAAoH,KAAA,EAAO;QAEN,IAAK,IAAI,CAAC63J,kBAAkB,KAAK,KAAK,EAAG;UAExC11J,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;UAClE;QAED;QAEA,IAAI,CAAC41J,SAAS,GAAG,CAAC;QAElB,IAAK,IAAI,CAAC/0I,MAAM,KAAK,IAAI,EAAG;UAE3B,IAAI,CAACA,MAAM,CAACjjB,IAAI,EAAE;UAClB,IAAI,CAACijB,MAAM,CAAC+1I,OAAO,GAAG,IAAI;QAE3B;QAEA,IAAI,CAACpB,SAAS,GAAG,KAAK;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAl/J,GAAA;MAAAE,KAAA,EAED,SAAAs1G,QAAA,EAAU;QAET,IAAK,IAAI,CAACgqD,OAAO,CAAC15J,MAAM,GAAG,CAAC,EAAG;UAE9B,IAAI,CAACykB,MAAM,CAACirF,OAAO,CAAE,IAAI,CAACgqD,OAAO,CAAE,CAAC,CAAE,CAAE;UAExC,KAAM,IAAIz5J,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC8oJ,OAAO,CAAC15J,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAEvD,IAAI,CAACy5J,OAAO,CAAEz5J,CAAC,GAAG,CAAC,CAAE,CAACyvG,OAAO,CAAE,IAAI,CAACgqD,OAAO,CAAEz5J,CAAC,CAAE,CAAE;UAEnD;UAEA,IAAI,CAACy5J,OAAO,CAAE,IAAI,CAACA,OAAO,CAAC15J,MAAM,GAAG,CAAC,CAAE,CAAC0vG,OAAO,CAAE,IAAI,CAACiqD,SAAS,EAAE,CAAE;QAEpE,CAAC,MAAM;UAEN,IAAI,CAACl1I,MAAM,CAACirF,OAAO,CAAE,IAAI,CAACiqD,SAAS,EAAE,CAAE;QAExC;QAEA,IAAI,CAACF,UAAU,GAAG,IAAI;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAv/J,GAAA;MAAAE,KAAA,EAED,SAAA61G,WAAA,EAAa;QAEZ,IAAK,IAAI,CAACypD,OAAO,CAAC15J,MAAM,GAAG,CAAC,EAAG;UAE9B,IAAI,CAACykB,MAAM,CAACwrF,UAAU,CAAE,IAAI,CAACypD,OAAO,CAAE,CAAC,CAAE,CAAE;UAE3C,KAAM,IAAIz5J,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG,IAAI,CAAC8oJ,OAAO,CAAC15J,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAEvD,IAAI,CAACy5J,OAAO,CAAEz5J,CAAC,GAAG,CAAC,CAAE,CAACgwG,UAAU,CAAE,IAAI,CAACypD,OAAO,CAAEz5J,CAAC,CAAE,CAAE;UAEtD;UAEA,IAAI,CAACy5J,OAAO,CAAE,IAAI,CAACA,OAAO,CAAC15J,MAAM,GAAG,CAAC,CAAE,CAACiwG,UAAU,CAAE,IAAI,CAAC0pD,SAAS,EAAE,CAAE;QAEvE,CAAC,MAAM;UAEN,IAAI,CAACl1I,MAAM,CAACwrF,UAAU,CAAE,IAAI,CAAC0pD,SAAS,EAAE,CAAE;QAE3C;QAEA,IAAI,CAACF,UAAU,GAAG,KAAK;QAEvB,OAAO,IAAI;MAEZ;IAAC;MAAAv/J,GAAA;MAAAE,KAAA,EAED,SAAAygK,WAAA,EAAa;QAEZ,OAAO,IAAI,CAACnB,OAAO;MAEpB;IAAC;MAAAx/J,GAAA;MAAAE,KAAA,EAED,SAAA0gK,WAAY1gK,KAAK,EAAG;QAEnB,IAAK,CAAEA,KAAK,EAAGA,KAAK,GAAG,EAAE;QAEzB,IAAK,IAAI,CAACq/J,UAAU,KAAK,IAAI,EAAG;UAE/B,IAAI,CAACxpD,UAAU,EAAE;UACjB,IAAI,CAACypD,OAAO,GAAGt/J,KAAK,CAACmH,KAAK,EAAE;UAC5B,IAAI,CAACmuG,OAAO,EAAE;QAEf,CAAC,MAAM;UAEN,IAAI,CAACgqD,OAAO,GAAGt/J,KAAK,CAACmH,KAAK,EAAE;QAE7B;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAArH,GAAA;MAAAE,KAAA,EAED,SAAAsgK,UAAWtgK,KAAK,EAAG;QAElB,IAAI,CAAC2+J,MAAM,GAAG3+J,KAAK;QAEnB,IAAK,IAAI,CAACqqB,MAAM,CAACs0I,MAAM,KAAKr6J,SAAS,EAAG,OAAO,CAAC;;QAEhD,IAAK,IAAI,CAAC06J,SAAS,KAAK,IAAI,EAAG;UAE9B,IAAI,CAAC30I,MAAM,CAACs0I,MAAM,CAAClB,eAAe,CAAE,IAAI,CAACkB,MAAM,EAAE,IAAI,CAACp9J,OAAO,CAACm8J,WAAW,EAAE,IAAI,CAAE;QAElF;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA59J,GAAA;MAAAE,KAAA,EAED,SAAA2gK,UAAA,EAAY;QAEX,OAAO,IAAI,CAAChC,MAAM;MAEnB;IAAC;MAAA7+J,GAAA;MAAAE,KAAA,EAED,SAAAq9J,UAAA,EAAY;QAEX,OAAO,IAAI,CAACoD,UAAU,EAAE,CAAE,CAAC,CAAE;MAE9B;IAAC;MAAA3gK,GAAA;MAAAE,KAAA,EAED,SAAAs9J,UAAWx5E,MAAM,EAAG;QAEnB,OAAO,IAAI,CAAC48E,UAAU,CAAE58E,MAAM,GAAG,CAAEA,MAAM,CAAE,GAAG,EAAE,CAAE;MAEnD;IAAC;MAAAhkF,GAAA;MAAAE,KAAA,EAED,SAAAugK,gBAAiBvgK,KAAK,EAAG;QAExB,IAAK,IAAI,CAACi/J,kBAAkB,KAAK,KAAK,EAAG;UAExC11J,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;UAClE;QAED;QAEA,IAAI,CAACu1J,YAAY,GAAG/+J,KAAK;QAEzB,IAAK,IAAI,CAACg/J,SAAS,KAAK,IAAI,EAAG;UAE9B,IAAI,CAAC30I,MAAM,CAAC00I,YAAY,CAACtB,eAAe,CAAE,IAAI,CAACsB,YAAY,EAAE,IAAI,CAACx9J,OAAO,CAACm8J,WAAW,EAAE,IAAI,CAAE;QAE9F;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA59J,GAAA;MAAAE,KAAA,EAED,SAAA4gK,gBAAA,EAAkB;QAEjB,OAAO,IAAI,CAAC7B,YAAY;MAEzB;IAAC;MAAAj/J,GAAA;MAAAE,KAAA,EAED,SAAAqgK,QAAA,EAAU;QAET,IAAI,CAACrB,SAAS,GAAG,KAAK;MAEvB;IAAC;MAAAl/J,GAAA;MAAAE,KAAA,EAED,SAAA6gK,QAAA,EAAU;QAET,IAAK,IAAI,CAAC5B,kBAAkB,KAAK,KAAK,EAAG;UAExC11J,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;UAClE,OAAO,KAAK;QAEb;QAEA,OAAO,IAAI,CAACo1J,IAAI;MAEjB;IAAC;MAAA9+J,GAAA;MAAAE,KAAA,EAED,SAAA8gK,QAAS9gK,KAAK,EAAG;QAEhB,IAAK,IAAI,CAACi/J,kBAAkB,KAAK,KAAK,EAAG;UAExC11J,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;UAClE;QAED;QAEA,IAAI,CAACo1J,IAAI,GAAG5+J,KAAK;QAEjB,IAAK,IAAI,CAACg/J,SAAS,KAAK,IAAI,EAAG;UAE9B,IAAI,CAAC30I,MAAM,CAACu0I,IAAI,GAAG,IAAI,CAACA,IAAI;QAE7B;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA9+J,GAAA;MAAAE,KAAA,EAED,SAAA+gK,aAAc/gK,KAAK,EAAG;QAErB,IAAI,CAAC6+J,SAAS,GAAG7+J,KAAK;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAghK,WAAYhhK,KAAK,EAAG;QAEnB,IAAI,CAAC8+J,OAAO,GAAG9+J,KAAK;QAEpB,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAihK,UAAA,EAAY;QAEX,OAAO,IAAI,CAACnE,IAAI,CAACA,IAAI,CAAC98J,KAAK;MAE5B;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAkhK,UAAWlhK,KAAK,EAAG;QAElB,IAAI,CAAC88J,IAAI,CAACA,IAAI,CAACW,eAAe,CAAEz9J,KAAK,EAAE,IAAI,CAACuB,OAAO,CAACm8J,WAAW,EAAE,IAAI,CAAE;QAEvE,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAY,KAAA;EAAA,EArYkBt2H,QAAQ;EAyY5B,IAAMm5H,SAAS,GAAG,aAAc,IAAI/rI,OAAO,EAAE;EAC7C,IAAMgsI,WAAW,GAAG,aAAc,IAAI5wI,UAAU,EAAE;EAClD,IAAM6wI,MAAM,GAAG,aAAc,IAAIjsI,OAAO,EAAE;EAC1C,IAAMksI,YAAY,GAAG,aAAc,IAAIlsI,OAAO,EAAE;EAAC,IAE3CmsI,eAAe,0BAAAC,MAAA;IAAAp4I,SAAA,CAAAm4I,eAAA,EAAAC,MAAA;IAAA,IAAAC,SAAA,GAAAn4I,YAAA,CAAAi4I,eAAA;IAEpB,SAAAA,gBAAa3rJ,QAAQ,EAAG;MAAA,IAAA8rJ,QAAA;MAAAt5J,eAAA,OAAAm5J,eAAA;MAEvBG,QAAA,GAAAD,SAAA,CAAA3/J,IAAA,OAAO8T,QAAQ;MAEf8rJ,QAAA,CAAKC,MAAM,GAAGD,QAAA,CAAKngK,OAAO,CAACqgK,YAAY,EAAE;MACzCF,QAAA,CAAKC,MAAM,CAACE,YAAY,GAAG,MAAM;MACjCH,QAAA,CAAKC,MAAM,CAACrsD,OAAO,CAAEosD,QAAA,CAAK5E,IAAI,CAAE;MAAC,OAAA4E,QAAA;IAElC;IAAC94J,YAAA,CAAA24J,eAAA;MAAAzhK,GAAA;MAAAE,KAAA,EAED,SAAA61G,WAAA,EAAa;QAEZ96D,IAAA,CAAAC,eAAA,CAAAumH,eAAA,CAAA9hK,SAAA,uBAAAqC,IAAA;QAEA,IAAI,CAAC6/J,MAAM,CAAC9rD,UAAU,CAAE,IAAI,CAACinD,IAAI,CAAE;MAEpC;IAAC;MAAAh9J,GAAA;MAAAE,KAAA,EAED,SAAAu/J,UAAA,EAAY;QAEX,OAAO,IAAI,CAACoC,MAAM;MAEnB;IAAC;MAAA7hK,GAAA;MAAAE,KAAA,EAED,SAAA8hK,eAAA,EAAiB;QAEhB,OAAO,IAAI,CAACH,MAAM,CAACI,WAAW;MAE/B;IAAC;MAAAjiK,GAAA;MAAAE,KAAA,EAED,SAAAgiK,eAAgBhiK,KAAK,EAAG;QAEvB,IAAI,CAAC2hK,MAAM,CAACI,WAAW,GAAG/hK,KAAK;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAiiK,iBAAA,EAAmB;QAElB,OAAO,IAAI,CAACN,MAAM,CAACO,aAAa;MAEjC;IAAC;MAAApiK,GAAA;MAAAE,KAAA,EAED,SAAAmiK,iBAAkBniK,KAAK,EAAG;QAEzB,IAAI,CAAC2hK,MAAM,CAACO,aAAa,GAAGliK,KAAK;QAEjC,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAoiK,iBAAA,EAAmB;QAElB,OAAO,IAAI,CAACT,MAAM,CAACU,aAAa;MAEjC;IAAC;MAAAviK,GAAA;MAAAE,KAAA,EAED,SAAAsiK,iBAAkBtiK,KAAK,EAAG;QAEzB,IAAI,CAAC2hK,MAAM,CAACU,aAAa,GAAGriK,KAAK;QAEjC,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAAuiK,eAAA,EAAiB;QAEhB,OAAO,IAAI,CAACZ,MAAM,CAACa,WAAW;MAE/B;IAAC;MAAA1iK,GAAA;MAAAE,KAAA,EAED,SAAAyiK,eAAgBziK,KAAK,EAAG;QAEvB,IAAI,CAAC2hK,MAAM,CAACa,WAAW,GAAGxiK,KAAK;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAA0iK,mBAAoBC,cAAc,EAAEC,cAAc,EAAEC,aAAa,EAAG;QAEnE,IAAI,CAAClB,MAAM,CAACgB,cAAc,GAAGA,cAAc;QAC3C,IAAI,CAAChB,MAAM,CAACiB,cAAc,GAAGA,cAAc;QAC3C,IAAI,CAACjB,MAAM,CAACkB,aAAa,GAAGA,aAAa;QAEzC,OAAO,IAAI;MAEZ;IAAC;MAAA/iK,GAAA;MAAAE,KAAA,EAED,SAAA8rC,kBAAmBC,KAAK,EAAG;QAE1BgP,IAAA,CAAAC,eAAA,CAAAumH,eAAA,CAAA9hK,SAAA,8BAAAqC,IAAA,OAAyBiqC,KAAK;QAE9B,IAAK,IAAI,CAACkzH,kBAAkB,KAAK,IAAI,IAAI,IAAI,CAACD,SAAS,KAAK,KAAK,EAAG;QAEpE,IAAI,CAACroI,WAAW,CAACqO,SAAS,CAAEm8H,SAAS,EAAEC,WAAW,EAAEC,MAAM,CAAE;QAE5DC,YAAY,CAAClmJ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAACqa,eAAe,CAAE2rI,WAAW,CAAE;QAE1D,IAAMO,MAAM,GAAG,IAAI,CAACA,MAAM;QAE1B,IAAKA,MAAM,CAAChE,SAAS,EAAG;UAEvB;;UAEA,IAAMja,OAAO,GAAG,IAAI,CAACniJ,OAAO,CAACm8J,WAAW,GAAG,IAAI,CAAC9nJ,QAAQ,CAACqnJ,SAAS;UAElE0E,MAAM,CAAChE,SAAS,CAACC,uBAAuB,CAAEuD,SAAS,CAACrpJ,CAAC,EAAE4rI,OAAO,CAAE;UAChEie,MAAM,CAAC9D,SAAS,CAACD,uBAAuB,CAAEuD,SAAS,CAAC/oJ,CAAC,EAAEsrI,OAAO,CAAE;UAChEie,MAAM,CAAC7D,SAAS,CAACF,uBAAuB,CAAEuD,SAAS,CAACp1I,CAAC,EAAE23H,OAAO,CAAE;UAChEie,MAAM,CAACmB,YAAY,CAAClF,uBAAuB,CAAE0D,YAAY,CAACxpJ,CAAC,EAAE4rI,OAAO,CAAE;UACtEie,MAAM,CAACoB,YAAY,CAACnF,uBAAuB,CAAE0D,YAAY,CAAClpJ,CAAC,EAAEsrI,OAAO,CAAE;UACtEie,MAAM,CAACqB,YAAY,CAACpF,uBAAuB,CAAE0D,YAAY,CAACv1I,CAAC,EAAE23H,OAAO,CAAE;QAEvE,CAAC,MAAM;UAENie,MAAM,CAAC99H,WAAW,CAAEs9H,SAAS,CAACrpJ,CAAC,EAAEqpJ,SAAS,CAAC/oJ,CAAC,EAAE+oJ,SAAS,CAACp1I,CAAC,CAAE;UAC3D41I,MAAM,CAACtD,cAAc,CAAEiD,YAAY,CAACxpJ,CAAC,EAAEwpJ,YAAY,CAAClpJ,CAAC,EAAEkpJ,YAAY,CAACv1I,CAAC,CAAE;QAExE;MAED;IAAC;IAAA,OAAAw1I,eAAA;EAAA,EA5H4BjD,KAAK;EAAA,IAgI7B2E,aAAa;IAElB,SAAAA,cAAaC,KAAK,EAAEC,OAAO,GAAG,IAAI,EAAG;MAAA/6J,eAAA,OAAA66J,aAAA;MAEpC,IAAI,CAACG,QAAQ,GAAGF,KAAK,CAAC3hK,OAAO,CAAC8hK,cAAc,EAAE;MAC9C,IAAI,CAACD,QAAQ,CAACD,OAAO,GAAGA,OAAO;MAE/B,IAAI,CAACj7I,IAAI,GAAG,IAAI1M,UAAU,CAAE,IAAI,CAAC4nJ,QAAQ,CAACE,iBAAiB,CAAE;MAE7DJ,KAAK,CAAC3D,SAAS,EAAE,CAACjqD,OAAO,CAAE,IAAI,CAAC8tD,QAAQ,CAAE;IAE3C;IAACx6J,YAAA,CAAAq6J,aAAA;MAAAnjK,GAAA;MAAAE,KAAA,EAGD,SAAAujK,iBAAA,EAAmB;QAElB,IAAI,CAACH,QAAQ,CAACI,oBAAoB,CAAE,IAAI,CAACt7I,IAAI,CAAE;QAE/C,OAAO,IAAI,CAACA,IAAI;MAEjB;IAAC;MAAApoB,GAAA;MAAAE,KAAA,EAED,SAAAyjK,oBAAA,EAAsB;QAErB,IAAIzjK,KAAK,GAAG,CAAC;QACb,IAAMkoB,IAAI,GAAG,IAAI,CAACq7I,gBAAgB,EAAE;QAEpC,KAAM,IAAI19J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqiB,IAAI,CAACtiB,MAAM,EAAEC,CAAC,EAAG,EAAG;UAExC7F,KAAK,IAAIkoB,IAAI,CAAEriB,CAAC,CAAE;QAEnB;QAEA,OAAO7F,KAAK,GAAGkoB,IAAI,CAACtiB,MAAM;MAE3B;IAAC;IAAA,OAAAq9J,aAAA;EAAA;EAAA,IAIIS,aAAa;IAElB,SAAAA,cAAaC,OAAO,EAAE1b,QAAQ,EAAE3K,SAAS,EAAG;MAAAl1I,eAAA,OAAAs7J,aAAA;MAE3C,IAAI,CAACC,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACrmB,SAAS,GAAGA,SAAS;MAE1B,IAAIsmB,WAAW,EACdC,mBAAmB,EACnBC,WAAW;;MAEZ;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA,QAAS7b,QAAQ;QAEhB,KAAK,YAAY;UAChB2b,WAAW,GAAG,IAAI,CAACG,MAAM;UACzBF,mBAAmB,GAAG,IAAI,CAACG,cAAc;UACzCF,WAAW,GAAG,IAAI,CAACG,8BAA8B;UAEjD,IAAI,CAAC/+I,MAAM,GAAG,IAAIF,YAAY,CAAEs4H,SAAS,GAAG,CAAC,CAAE;UAC/C,IAAI,CAAC4mB,UAAU,GAAG,CAAC;UACnB;QAED,KAAK,QAAQ;QACb,KAAK,MAAM;UACVN,WAAW,GAAG,IAAI,CAACO,OAAO;;UAE1B;UACA;UACAN,mBAAmB,GAAG,IAAI,CAACM,OAAO;UAElCL,WAAW,GAAG,IAAI,CAACM,yBAAyB;UAE5C,IAAI,CAACl/I,MAAM,GAAG,IAAI0D,KAAK,CAAE00H,SAAS,GAAG,CAAC,CAAE;UACxC;QAED;UACCsmB,WAAW,GAAG,IAAI,CAACS,KAAK;UACxBR,mBAAmB,GAAG,IAAI,CAACS,aAAa;UACxCR,WAAW,GAAG,IAAI,CAACS,2BAA2B;UAE9C,IAAI,CAACr/I,MAAM,GAAG,IAAIF,YAAY,CAAEs4H,SAAS,GAAG,CAAC,CAAE;MAAC;MAIlD,IAAI,CAACknB,gBAAgB,GAAGZ,WAAW;MACnC,IAAI,CAACa,wBAAwB,GAAGZ,mBAAmB;MACnD,IAAI,CAACa,YAAY,GAAGZ,WAAW;MAC/B,IAAI,CAACa,UAAU,GAAG,CAAC;MACnB,IAAI,CAACC,SAAS,GAAG,CAAC;MAElB,IAAI,CAACC,gBAAgB,GAAG,CAAC;MACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;MAEjC,IAAI,CAACC,QAAQ,GAAG,CAAC;MACjB,IAAI,CAACC,cAAc,GAAG,CAAC;IAExB;;IAEA;IAAAp8J,YAAA,CAAA86J,aAAA;MAAA5jK,GAAA;MAAAE,KAAA,EACA,SAAAilK,WAAYC,SAAS,EAAE9vF,MAAM,EAAG;QAE/B;QACA;;QAEA,IAAMlwD,MAAM,GAAG,IAAI,CAACA,MAAM;UACzB4+B,MAAM,GAAG,IAAI,CAACw5F,SAAS;UACvBh+H,MAAM,GAAG4lJ,SAAS,GAAGphH,MAAM,GAAGA,MAAM;QAErC,IAAIqhH,aAAa,GAAG,IAAI,CAACN,gBAAgB;QAEzC,IAAKM,aAAa,KAAK,CAAC,EAAG;UAE1B;;UAEA,KAAM,IAAIt/J,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKi+C,MAAM,EAAE,EAAGj+C,CAAC,EAAG;YAErCqf,MAAM,CAAE5F,MAAM,GAAGzZ,CAAC,CAAE,GAAGqf,MAAM,CAAErf,CAAC,CAAE;UAEnC;UAEAs/J,aAAa,GAAG/vF,MAAM;QAEvB,CAAC,MAAM;UAEN;;UAEA+vF,aAAa,IAAI/vF,MAAM;UACvB,IAAMgwF,GAAG,GAAGhwF,MAAM,GAAG+vF,aAAa;UAClC,IAAI,CAACX,gBAAgB,CAAEt/I,MAAM,EAAE5F,MAAM,EAAE,CAAC,EAAE8lJ,GAAG,EAAEthH,MAAM,CAAE;QAExD;QAEA,IAAI,CAAC+gH,gBAAgB,GAAGM,aAAa;MAEtC;;MAEA;IAAA;MAAArlK,GAAA;MAAAE,KAAA,EACA,SAAAqlK,mBAAoBjwF,MAAM,EAAG;QAE5B,IAAMlwD,MAAM,GAAG,IAAI,CAACA,MAAM;UACzB4+B,MAAM,GAAG,IAAI,CAACw5F,SAAS;UACvBh+H,MAAM,GAAGwkC,MAAM,GAAG,IAAI,CAAC8gH,SAAS;QAEjC,IAAK,IAAI,CAACE,wBAAwB,KAAK,CAAC,EAAG;UAE1C;;UAEA,IAAI,CAACJ,YAAY,EAAE;QAEpB;;QAEA;;QAEA,IAAI,CAACD,wBAAwB,CAAEv/I,MAAM,EAAE5F,MAAM,EAAE,CAAC,EAAE81D,MAAM,EAAEtxB,MAAM,CAAE;QAClE,IAAI,CAACghH,wBAAwB,IAAI1vF,MAAM;MAExC;;MAEA;IAAA;MAAAt1E,GAAA;MAAAE,KAAA,EACA,SAAAukG,MAAO2gE,SAAS,EAAG;QAElB,IAAMphH,MAAM,GAAG,IAAI,CAACw5F,SAAS;UAC5Bp4H,MAAM,GAAG,IAAI,CAACA,MAAM;UACpB5F,MAAM,GAAG4lJ,SAAS,GAAGphH,MAAM,GAAGA,MAAM;UAEpCsxB,MAAM,GAAG,IAAI,CAACyvF,gBAAgB;UAC9BS,cAAc,GAAG,IAAI,CAACR,wBAAwB;UAE9CnB,OAAO,GAAG,IAAI,CAACA,OAAO;QAEvB,IAAI,CAACkB,gBAAgB,GAAG,CAAC;QACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;QAEjC,IAAK1vF,MAAM,GAAG,CAAC,EAAG;UAEjB;;UAEA,IAAMmwF,mBAAmB,GAAGzhH,MAAM,GAAG,IAAI,CAAC6gH,UAAU;UAEpD,IAAI,CAACH,gBAAgB,CACpBt/I,MAAM,EAAE5F,MAAM,EAAEimJ,mBAAmB,EAAE,CAAC,GAAGnwF,MAAM,EAAEtxB,MAAM,CAAE;QAE3D;QAEA,IAAKwhH,cAAc,GAAG,CAAC,EAAG;UAEzB;;UAEA,IAAI,CAACb,wBAAwB,CAAEv/I,MAAM,EAAE5F,MAAM,EAAE,IAAI,CAACslJ,SAAS,GAAG9gH,MAAM,EAAE,CAAC,EAAEA,MAAM,CAAE;QAEpF;QAEA,KAAM,IAAIj+C,CAAC,GAAGi+C,MAAM,EAAEvmC,CAAC,GAAGumC,MAAM,GAAGA,MAAM,EAAEj+C,CAAC,KAAK0X,CAAC,EAAE,EAAG1X,CAAC,EAAG;UAE1D,IAAKqf,MAAM,CAAErf,CAAC,CAAE,KAAKqf,MAAM,CAAErf,CAAC,GAAGi+C,MAAM,CAAE,EAAG;YAE3C;;YAEA6/G,OAAO,CAAC/pF,QAAQ,CAAE10D,MAAM,EAAE5F,MAAM,CAAE;YAClC;UAED;QAED;MAED;;MAEA;IAAA;MAAAxf,GAAA;MAAAE,KAAA,EACA,SAAAwlK,kBAAA,EAAoB;QAEnB,IAAM7B,OAAO,GAAG,IAAI,CAACA,OAAO;QAE5B,IAAMz+I,MAAM,GAAG,IAAI,CAACA,MAAM;UACzB4+B,MAAM,GAAG,IAAI,CAACw5F,SAAS;UAEvBioB,mBAAmB,GAAGzhH,MAAM,GAAG,IAAI,CAAC6gH,UAAU;QAE/ChB,OAAO,CAAC8B,QAAQ,CAAEvgJ,MAAM,EAAEqgJ,mBAAmB,CAAE;;QAE/C;QACA,KAAM,IAAI1/J,CAAC,GAAGi+C,MAAM,EAAEvmC,CAAC,GAAGgoJ,mBAAmB,EAAE1/J,CAAC,KAAK0X,CAAC,EAAE,EAAG1X,CAAC,EAAG;UAE9Dqf,MAAM,CAAErf,CAAC,CAAE,GAAGqf,MAAM,CAAEqgJ,mBAAmB,GAAK1/J,CAAC,GAAGi+C,MAAQ,CAAE;QAE7D;;QAEA;QACA,IAAI,CAAC4gH,YAAY,EAAE;QAEnB,IAAI,CAACG,gBAAgB,GAAG,CAAC;QACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;MAElC;;MAEA;IAAA;MAAAhlK,GAAA;MAAAE,KAAA,EACA,SAAA0lK,qBAAA,EAAuB;QAEtB,IAAMH,mBAAmB,GAAG,IAAI,CAACjoB,SAAS,GAAG,CAAC;QAC9C,IAAI,CAACqmB,OAAO,CAAC/pF,QAAQ,CAAE,IAAI,CAAC10D,MAAM,EAAEqgJ,mBAAmB,CAAE;MAE1D;IAAC;MAAAzlK,GAAA;MAAAE,KAAA,EAED,SAAAukK,4BAAA,EAA8B;QAE7B,IAAM1lB,UAAU,GAAG,IAAI,CAAC+lB,SAAS,GAAG,IAAI,CAACtnB,SAAS;QAClD,IAAMwB,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAACvB,SAAS;QAE5C,KAAM,IAAIz3I,CAAC,GAAGg5I,UAAU,EAAEh5I,CAAC,GAAGi5I,QAAQ,EAAEj5I,CAAC,EAAG,EAAG;UAE9C,IAAI,CAACqf,MAAM,CAAErf,CAAC,CAAE,GAAG,CAAC;QAErB;MAED;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAikK,+BAAA,EAAiC;QAEhC,IAAI,CAACM,2BAA2B,EAAE;QAClC,IAAI,CAACr/I,MAAM,CAAE,IAAI,CAAC0/I,SAAS,GAAG,IAAI,CAACtnB,SAAS,GAAG,CAAC,CAAE,GAAG,CAAC;MAEvD;IAAC;MAAAx9I,GAAA;MAAAE,KAAA,EAED,SAAAokK,0BAAA,EAA4B;QAE3B,IAAMvlB,UAAU,GAAG,IAAI,CAAC8lB,UAAU,GAAG,IAAI,CAACrnB,SAAS;QACnD,IAAMqoB,WAAW,GAAG,IAAI,CAACf,SAAS,GAAG,IAAI,CAACtnB,SAAS;QAEnD,KAAM,IAAIz3I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACy3I,SAAS,EAAEz3I,CAAC,EAAG,EAAG;UAE3C,IAAI,CAACqf,MAAM,CAAEygJ,WAAW,GAAG9/J,CAAC,CAAE,GAAG,IAAI,CAACqf,MAAM,CAAE25H,UAAU,GAAGh5I,CAAC,CAAE;QAE/D;MAED;;MAGA;IAAA;MAAA/F,GAAA;MAAAE,KAAA,EAEA,SAAAmkK,QAASj/I,MAAM,EAAEgP,SAAS,EAAEwoH,SAAS,EAAEpkI,CAAC,EAAEwrC,MAAM,EAAG;QAElD,IAAKxrC,CAAC,IAAI,GAAG,EAAG;UAEf,KAAM,IAAIzS,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKi+C,MAAM,EAAE,EAAGj+C,CAAC,EAAG;YAErCqf,MAAM,CAAEgP,SAAS,GAAGruB,CAAC,CAAE,GAAGqf,MAAM,CAAEw3H,SAAS,GAAG72I,CAAC,CAAE;UAElD;QAED;MAED;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAA+jK,OAAQ7+I,MAAM,EAAEgP,SAAS,EAAEwoH,SAAS,EAAEpkI,CAAC,EAAG;QAEzCkY,UAAU,CAACwD,SAAS,CAAE9O,MAAM,EAAEgP,SAAS,EAAEhP,MAAM,EAAEgP,SAAS,EAAEhP,MAAM,EAAEw3H,SAAS,EAAEpkI,CAAC,CAAE;MAEnF;IAAC;MAAAxY,GAAA;MAAAE,KAAA,EAED,SAAAgkK,eAAgB9+I,MAAM,EAAEgP,SAAS,EAAEwoH,SAAS,EAAEpkI,CAAC,EAAEwrC,MAAM,EAAG;QAEzD,IAAM8hH,UAAU,GAAG,IAAI,CAAC1B,UAAU,GAAGpgH,MAAM;;QAE3C;QACAtzB,UAAU,CAAC2E,uBAAuB,CAAEjQ,MAAM,EAAE0gJ,UAAU,EAAE1gJ,MAAM,EAAEgP,SAAS,EAAEhP,MAAM,EAAEw3H,SAAS,CAAE;;QAE9F;QACAlsH,UAAU,CAACwD,SAAS,CAAE9O,MAAM,EAAEgP,SAAS,EAAEhP,MAAM,EAAEgP,SAAS,EAAEhP,MAAM,EAAE0gJ,UAAU,EAAEttJ,CAAC,CAAE;MAEpF;IAAC;MAAAxY,GAAA;MAAAE,KAAA,EAED,SAAAqkK,MAAOn/I,MAAM,EAAEgP,SAAS,EAAEwoH,SAAS,EAAEpkI,CAAC,EAAEwrC,MAAM,EAAG;QAEhD,IAAMvqC,CAAC,GAAG,CAAC,GAAGjB,CAAC;QAEf,KAAM,IAAIzS,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKi+C,MAAM,EAAE,EAAGj+C,CAAC,EAAG;UAErC,IAAM42B,CAAC,GAAGvI,SAAS,GAAGruB,CAAC;UAEvBqf,MAAM,CAAEuX,CAAC,CAAE,GAAGvX,MAAM,CAAEuX,CAAC,CAAE,GAAGljB,CAAC,GAAG2L,MAAM,CAAEw3H,SAAS,GAAG72I,CAAC,CAAE,GAAGyS,CAAC;QAE5D;MAED;IAAC;MAAAxY,GAAA;MAAAE,KAAA,EAED,SAAAskK,cAAep/I,MAAM,EAAEgP,SAAS,EAAEwoH,SAAS,EAAEpkI,CAAC,EAAEwrC,MAAM,EAAG;QAExD,KAAM,IAAIj+C,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKi+C,MAAM,EAAE,EAAGj+C,CAAC,EAAG;UAErC,IAAM42B,CAAC,GAAGvI,SAAS,GAAGruB,CAAC;UAEvBqf,MAAM,CAAEuX,CAAC,CAAE,GAAGvX,MAAM,CAAEuX,CAAC,CAAE,GAAGvX,MAAM,CAAEw3H,SAAS,GAAG72I,CAAC,CAAE,GAAGyS,CAAC;QAExD;MAED;IAAC;IAAA,OAAAorJ,aAAA;EAAA,KAIF;EACA,IAAMmC,kBAAkB,GAAG,eAAe;EAC1C,IAAMC,WAAW,GAAG,IAAIC,MAAM,CAAE,GAAG,GAAGF,kBAAkB,GAAG,GAAG,EAAE,GAAG,CAAE;;EAErE;EACA;EACA;EACA,IAAMG,SAAS,GAAG,IAAI,GAAGH,kBAAkB,GAAG,GAAG;EACjD,IAAMI,cAAc,GAAG,IAAI,GAAGJ,kBAAkB,CAAChhF,OAAO,CAAE,KAAK,EAAE,EAAE,CAAE,GAAG,GAAG;;EAE3E;EACA;EACA,IAAMqhF,YAAY,GAAG,aAAc,kBAAiB,CAAC77I,MAAM,CAACw6D,OAAO,CAAE,IAAI,EAAEmhF,SAAS,CAAE;;EAEtF;EACA,IAAMG,OAAO,GAAG,aAAc,WAAU,CAAC97I,MAAM,CAACw6D,OAAO,CAAE,MAAM,EAAEohF,cAAc,CAAE;;EAEjF;EACA;EACA,IAAMG,SAAS,GAAG,aAAc,4BAA2B,CAAC/7I,MAAM,CAACw6D,OAAO,CAAE,IAAI,EAAEmhF,SAAS,CAAE;;EAE7F;EACA;EACA,IAAMK,WAAW,GAAG,aAAc,uBAAsB,CAACh8I,MAAM,CAACw6D,OAAO,CAAE,IAAI,EAAEmhF,SAAS,CAAE;EAE1F,IAAMM,QAAQ,GAAG,IAAIP,MAAM,CAAE,EAAE,GAC5B,GAAG,GACHG,YAAY,GACZC,OAAO,GACPC,SAAS,GACTC,WAAW,GACX,GAAG,CACL;EAED,IAAME,qBAAqB,GAAG,CAAE,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,CAAE;EAAC,IAEpEC,SAAS;IAEd,SAAAA,UAAaC,WAAW,EAAEhmF,IAAI,EAAEimF,kBAAkB,EAAG;MAAAt+J,eAAA,OAAAo+J,SAAA;MAEpD,IAAMG,UAAU,GAAGD,kBAAkB,IAAIE,eAAe,CAACC,cAAc,CAAEpmF,IAAI,CAAE;MAE/E,IAAI,CAACqmF,YAAY,GAAGL,WAAW;MAC/B,IAAI,CAACM,SAAS,GAAGN,WAAW,CAACO,UAAU,CAAEvmF,IAAI,EAAEkmF,UAAU,CAAE;IAE5D;IAAC/9J,YAAA,CAAA49J,SAAA;MAAA1mK,GAAA;MAAAE,KAAA,EAED,SAAAylK,SAAUlvJ,KAAK,EAAE+I,MAAM,EAAG;QAEzB,IAAI,CAAC0hG,IAAI,EAAE,CAAC,CAAC;;QAEb,IAAMimD,eAAe,GAAG,IAAI,CAACH,YAAY,CAACI,eAAe;UACxDvD,OAAO,GAAG,IAAI,CAACoD,SAAS,CAAEE,eAAe,CAAE;;QAE5C;QACA,IAAKtD,OAAO,KAAKr/J,SAAS,EAAGq/J,OAAO,CAAC8B,QAAQ,CAAElvJ,KAAK,EAAE+I,MAAM,CAAE;MAE/D;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAA45E,SAAUrjE,KAAK,EAAE+I,MAAM,EAAG;QAEzB,IAAM6nJ,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAE/B,KAAM,IAAIlhK,CAAC,GAAG,IAAI,CAACihK,YAAY,CAACI,eAAe,EAAEvvJ,CAAC,GAAGwvJ,QAAQ,CAACvhK,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAErFshK,QAAQ,CAAEthK,CAAC,CAAE,CAAC+zE,QAAQ,CAAErjE,KAAK,EAAE+I,MAAM,CAAE;QAExC;MAED;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAghH,KAAA,EAAO;QAEN,IAAMmmD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAE/B,KAAM,IAAIlhK,CAAC,GAAG,IAAI,CAACihK,YAAY,CAACI,eAAe,EAAEvvJ,CAAC,GAAGwvJ,QAAQ,CAACvhK,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAErFshK,QAAQ,CAAEthK,CAAC,CAAE,CAACm7G,IAAI,EAAE;QAErB;MAED;IAAC;MAAAlhH,GAAA;MAAAE,KAAA,EAED,SAAAonK,OAAA,EAAS;QAER,IAAMD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAE/B,KAAM,IAAIlhK,CAAC,GAAG,IAAI,CAACihK,YAAY,CAACI,eAAe,EAAEvvJ,CAAC,GAAGwvJ,QAAQ,CAACvhK,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAErFshK,QAAQ,CAAEthK,CAAC,CAAE,CAACuhK,MAAM,EAAE;QAEvB;MAED;IAAC;IAAA,OAAAZ,SAAA;EAAA,KAIF;EACA;EACA;EACA;EACA;EAAA,IACMI,eAAe;IAEpB,SAAAA,gBAAaS,QAAQ,EAAE5mF,IAAI,EAAEkmF,UAAU,EAAG;MAAAv+J,eAAA,OAAAw+J,eAAA;MAEzC,IAAI,CAACnmF,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACkmF,UAAU,GAAGA,UAAU,IAAIC,eAAe,CAACC,cAAc,CAAEpmF,IAAI,CAAE;MAEtE,IAAI,CAAC6mF,IAAI,GAAGV,eAAe,CAACW,QAAQ,CAAEF,QAAQ,EAAE,IAAI,CAACV,UAAU,CAACa,QAAQ,CAAE;MAE1E,IAAI,CAACH,QAAQ,GAAGA,QAAQ;;MAExB;MACA,IAAI,CAAC5B,QAAQ,GAAG,IAAI,CAACgC,iBAAiB;MACtC,IAAI,CAAC7tF,QAAQ,GAAG,IAAI,CAAC8tF,iBAAiB;IAEvC;IAAC9+J,YAAA,CAAAg+J,eAAA;MAAA9mK,GAAA;MAAAE,KAAA;MA0ID;MACA,SAAA2nK,sBAAA,EAAwB,CAAC;IAAC;MAAA7nK,GAAA;MAAAE,KAAA,EAC1B,SAAA4nK,sBAAA,EAAwB,CAAC;;MAEzB;IAAA;MAAA9nK,GAAA;MAAAE,KAAA,EAEA,SAAA6nK,iBAAkB3iJ,MAAM,EAAE5F,MAAM,EAAG;QAElC4F,MAAM,CAAE5F,MAAM,CAAE,GAAG,IAAI,CAACwoJ,YAAY,CAAE,IAAI,CAACvgB,YAAY,CAAE;MAE1D;IAAC;MAAAznJ,GAAA;MAAAE,KAAA,EAED,SAAA+nK,gBAAiB7iJ,MAAM,EAAE5F,MAAM,EAAG;QAEjC,IAAM+K,MAAM,GAAG,IAAI,CAAC29I,gBAAgB;QAEpC,KAAM,IAAIniK,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG0S,MAAM,CAACzkB,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEnDqf,MAAM,CAAE5F,MAAM,EAAG,CAAE,GAAG+K,MAAM,CAAExkB,CAAC,CAAE;QAElC;MAED;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAioK,uBAAwB/iJ,MAAM,EAAE5F,MAAM,EAAG;QAExC4F,MAAM,CAAE5F,MAAM,CAAE,GAAG,IAAI,CAAC0oJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE;MAE/D;IAAC;MAAApoK,GAAA;MAAAE,KAAA,EAED,SAAAmoK,kBAAmBjjJ,MAAM,EAAE5F,MAAM,EAAG;QAEnC,IAAI,CAAC0oJ,gBAAgB,CAACzoJ,OAAO,CAAE2F,MAAM,EAAE5F,MAAM,CAAE;MAEhD;;MAEA;IAAA;MAAAxf,GAAA;MAAAE,KAAA,EAEA,SAAAooK,iBAAkBljJ,MAAM,EAAE5F,MAAM,EAAG;QAElC,IAAI,CAACwoJ,YAAY,CAAE,IAAI,CAACvgB,YAAY,CAAE,GAAGriI,MAAM,CAAE5F,MAAM,CAAE;MAE1D;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAqoK,gCAAiCnjJ,MAAM,EAAE5F,MAAM,EAAG;QAEjD,IAAI,CAACwoJ,YAAY,CAAE,IAAI,CAACvgB,YAAY,CAAE,GAAGriI,MAAM,CAAE5F,MAAM,CAAE;QACzD,IAAI,CAACwoJ,YAAY,CAACv8I,WAAW,GAAG,IAAI;MAErC;IAAC;MAAAzrB,GAAA;MAAAE,KAAA,EAED,SAAAsoK,2CAA4CpjJ,MAAM,EAAE5F,MAAM,EAAG;QAE5D,IAAI,CAACwoJ,YAAY,CAAE,IAAI,CAACvgB,YAAY,CAAE,GAAGriI,MAAM,CAAE5F,MAAM,CAAE;QACzD,IAAI,CAACwoJ,YAAY,CAACj/H,sBAAsB,GAAG,IAAI;MAEhD;;MAEA;IAAA;MAAA/oC,GAAA;MAAAE,KAAA,EAEA,SAAAuoK,gBAAiBrjJ,MAAM,EAAE5F,MAAM,EAAG;QAEjC,IAAMkpJ,IAAI,GAAG,IAAI,CAACR,gBAAgB;QAElC,KAAM,IAAIniK,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG6wJ,IAAI,CAAC5iK,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEjD2iK,IAAI,CAAE3iK,CAAC,CAAE,GAAGqf,MAAM,CAAE5F,MAAM,EAAG,CAAE;QAEhC;MAED;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAyoK,+BAAgCvjJ,MAAM,EAAE5F,MAAM,EAAG;QAEhD,IAAMkpJ,IAAI,GAAG,IAAI,CAACR,gBAAgB;QAElC,KAAM,IAAIniK,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG6wJ,IAAI,CAAC5iK,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEjD2iK,IAAI,CAAE3iK,CAAC,CAAE,GAAGqf,MAAM,CAAE5F,MAAM,EAAG,CAAE;QAEhC;QAEA,IAAI,CAACwoJ,YAAY,CAACv8I,WAAW,GAAG,IAAI;MAErC;IAAC;MAAAzrB,GAAA;MAAAE,KAAA,EAED,SAAA0oK,0CAA2CxjJ,MAAM,EAAE5F,MAAM,EAAG;QAE3D,IAAMkpJ,IAAI,GAAG,IAAI,CAACR,gBAAgB;QAElC,KAAM,IAAIniK,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG6wJ,IAAI,CAAC5iK,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEjD2iK,IAAI,CAAE3iK,CAAC,CAAE,GAAGqf,MAAM,CAAE5F,MAAM,EAAG,CAAE;QAEhC;QAEA,IAAI,CAACwoJ,YAAY,CAACj/H,sBAAsB,GAAG,IAAI;MAEhD;;MAEA;IAAA;MAAA/oC,GAAA;MAAAE,KAAA,EAEA,SAAA2oK,uBAAwBzjJ,MAAM,EAAE5F,MAAM,EAAG;QAExC,IAAI,CAAC0oJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAGhjJ,MAAM,CAAE5F,MAAM,CAAE;MAE/D;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAA4oK,sCAAuC1jJ,MAAM,EAAE5F,MAAM,EAAG;QAEvD,IAAI,CAAC0oJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAGhjJ,MAAM,CAAE5F,MAAM,CAAE;QAC9D,IAAI,CAACwoJ,YAAY,CAACv8I,WAAW,GAAG,IAAI;MAErC;IAAC;MAAAzrB,GAAA;MAAAE,KAAA,EAED,SAAA6oK,iDAAkD3jJ,MAAM,EAAE5F,MAAM,EAAG;QAElE,IAAI,CAAC0oJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAGhjJ,MAAM,CAAE5F,MAAM,CAAE;QAC9D,IAAI,CAACwoJ,YAAY,CAACj/H,sBAAsB,GAAG,IAAI;MAEhD;;MAEA;IAAA;MAAA/oC,GAAA;MAAAE,KAAA,EAEA,SAAA8oK,oBAAqB5jJ,MAAM,EAAE5F,MAAM,EAAG;QAErC,IAAI,CAAC0oJ,gBAAgB,CAAC3oJ,SAAS,CAAE6F,MAAM,EAAE5F,MAAM,CAAE;MAElD;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAA+oK,mCAAoC7jJ,MAAM,EAAE5F,MAAM,EAAG;QAEpD,IAAI,CAAC0oJ,gBAAgB,CAAC3oJ,SAAS,CAAE6F,MAAM,EAAE5F,MAAM,CAAE;QACjD,IAAI,CAACwoJ,YAAY,CAACv8I,WAAW,GAAG,IAAI;MAErC;IAAC;MAAAzrB,GAAA;MAAAE,KAAA,EAED,SAAAgpK,8CAA+C9jJ,MAAM,EAAE5F,MAAM,EAAG;QAE/D,IAAI,CAAC0oJ,gBAAgB,CAAC3oJ,SAAS,CAAE6F,MAAM,EAAE5F,MAAM,CAAE;QACjD,IAAI,CAACwoJ,YAAY,CAACj/H,sBAAsB,GAAG,IAAI;MAEhD;IAAC;MAAA/oC,GAAA;MAAAE,KAAA,EAED,SAAAynK,kBAAmBwB,WAAW,EAAE3pJ,MAAM,EAAG;QAExC,IAAI,CAAC0hG,IAAI,EAAE;QACX,IAAI,CAACykD,QAAQ,CAAEwD,WAAW,EAAE3pJ,MAAM,CAAE;MAErC;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAA0nK,kBAAmBwB,WAAW,EAAE5pJ,MAAM,EAAG;QAExC,IAAI,CAAC0hG,IAAI,EAAE;QACX,IAAI,CAACpnC,QAAQ,CAAEsvF,WAAW,EAAE5pJ,MAAM,CAAE;MAErC;;MAEA;IAAA;MAAAxf,GAAA;MAAAE,KAAA,EACA,SAAAghH,KAAA,EAAO;QAEN,IAAI8mD,YAAY,GAAG,IAAI,CAACR,IAAI;QAC5B,IAAMX,UAAU,GAAG,IAAI,CAACA,UAAU;QAElC,IAAMwC,UAAU,GAAGxC,UAAU,CAACwC,UAAU;QACxC,IAAM5hB,YAAY,GAAGof,UAAU,CAACpf,YAAY;QAC5C,IAAI2gB,aAAa,GAAGvB,UAAU,CAACuB,aAAa;QAE5C,IAAK,CAAEJ,YAAY,EAAG;UAErBA,YAAY,GAAGlB,eAAe,CAACW,QAAQ,CAAE,IAAI,CAACF,QAAQ,EAAEV,UAAU,CAACa,QAAQ,CAAE;UAE7E,IAAI,CAACF,IAAI,GAAGQ,YAAY;QAEzB;;QAEA;QACA,IAAI,CAACrC,QAAQ,GAAG,IAAI,CAACkC,qBAAqB;QAC1C,IAAI,CAAC/tF,QAAQ,GAAG,IAAI,CAACguF,qBAAqB;;QAE1C;QACA,IAAK,CAAEE,YAAY,EAAG;UAErBv+J,OAAO,CAAChG,KAAK,CAAE,0DAA0D,GAAG,IAAI,CAACk9E,IAAI,GAAG,wBAAwB,CAAE;UAClH;QAED;QAEA,IAAK0oF,UAAU,EAAG;UAEjB,IAAIC,WAAW,GAAGzC,UAAU,CAACyC,WAAW;;UAExC;UACA,QAASD,UAAU;YAElB,KAAK,WAAW;cAEf,IAAK,CAAErB,YAAY,CAACp6H,QAAQ,EAAG;gBAE9BnkC,OAAO,CAAChG,KAAK,CAAE,mFAAmF,EAAE,IAAI,CAAE;gBAC1G;cAED;cAEA,IAAK,CAAEukK,YAAY,CAACp6H,QAAQ,CAACvB,SAAS,EAAG;gBAExC5iC,OAAO,CAAChG,KAAK,CAAE,6GAA6G,EAAE,IAAI,CAAE;gBACpI;cAED;cAEAukK,YAAY,GAAGA,YAAY,CAACp6H,QAAQ,CAACvB,SAAS;cAE9C;YAED,KAAK,OAAO;cAEX,IAAK,CAAE27H,YAAY,CAACr6H,QAAQ,EAAG;gBAE9BlkC,OAAO,CAAChG,KAAK,CAAE,gFAAgF,EAAE,IAAI,CAAE;gBACvG;cAED;;cAEA;cACA;;cAEAukK,YAAY,GAAGA,YAAY,CAACr6H,QAAQ,CAACmkF,KAAK;;cAE1C;cACA,KAAM,IAAI/rH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiiK,YAAY,CAACliK,MAAM,EAAEC,CAAC,EAAG,EAAG;gBAEhD,IAAKiiK,YAAY,CAAEjiK,CAAC,CAAE,CAACM,IAAI,KAAKijK,WAAW,EAAG;kBAE7CA,WAAW,GAAGvjK,CAAC;kBACf;gBAED;cAED;cAEA;YAED,KAAK,KAAK;cAET,IAAK,KAAK,IAAIiiK,YAAY,EAAG;gBAE5BA,YAAY,GAAGA,YAAY,CAACxyH,GAAG;gBAC/B;cAED;cAEA,IAAK,CAAEwyH,YAAY,CAACp6H,QAAQ,EAAG;gBAE9BnkC,OAAO,CAAChG,KAAK,CAAE,mFAAmF,EAAE,IAAI,CAAE;gBAC1G;cAED;cAEA,IAAK,CAAEukK,YAAY,CAACp6H,QAAQ,CAAC4H,GAAG,EAAG;gBAElC/rC,OAAO,CAAChG,KAAK,CAAE,2FAA2F,EAAE,IAAI,CAAE;gBAClH;cAED;cAEAukK,YAAY,GAAGA,YAAY,CAACp6H,QAAQ,CAAC4H,GAAG;cACxC;YAED;cAEC,IAAKwyH,YAAY,CAAEqB,UAAU,CAAE,KAAK7kK,SAAS,EAAG;gBAE/CiF,OAAO,CAAChG,KAAK,CAAE,sEAAsE,EAAE,IAAI,CAAE;gBAC7F;cAED;cAEAukK,YAAY,GAAGA,YAAY,CAAEqB,UAAU,CAAE;UAAC;UAK5C,IAAKC,WAAW,KAAK9kK,SAAS,EAAG;YAEhC,IAAKwjK,YAAY,CAAEsB,WAAW,CAAE,KAAK9kK,SAAS,EAAG;cAEhDiF,OAAO,CAAChG,KAAK,CAAE,uFAAuF,EAAE,IAAI,EAAEukK,YAAY,CAAE;cAC5H;YAED;YAEAA,YAAY,GAAGA,YAAY,CAAEsB,WAAW,CAAE;UAE3C;QAED;;QAEA;QACA,IAAMC,YAAY,GAAGvB,YAAY,CAAEvgB,YAAY,CAAE;QAEjD,IAAK8hB,YAAY,KAAK/kK,SAAS,EAAG;UAEjC,IAAMkjK,QAAQ,GAAGb,UAAU,CAACa,QAAQ;UAEpCj+J,OAAO,CAAChG,KAAK,CAAE,8DAA8D,GAAGikK,QAAQ,GACvF,GAAG,GAAGjgB,YAAY,GAAG,wBAAwB,EAAEugB,YAAY,CAAE;UAC9D;QAED;;QAEA;QACA,IAAIwB,UAAU,GAAG,IAAI,CAACC,UAAU,CAACC,IAAI;QAErC,IAAI,CAAC1B,YAAY,GAAGA,YAAY;QAEhC,IAAKA,YAAY,CAACv8I,WAAW,KAAKjnB,SAAS,EAAG;UAAE;;UAE/CglK,UAAU,GAAG,IAAI,CAACC,UAAU,CAACE,WAAW;QAEzC,CAAC,MAAM,IAAK3B,YAAY,CAACj/H,sBAAsB,KAAKvkC,SAAS,EAAG;UAAE;;UAEjEglK,UAAU,GAAG,IAAI,CAACC,UAAU,CAACG,sBAAsB;QAEpD;;QAEA;QACA,IAAIC,WAAW,GAAG,IAAI,CAACC,WAAW,CAACC,MAAM;QAEzC,IAAK3B,aAAa,KAAK5jK,SAAS,EAAG;UAElC;;UAEA,IAAKijJ,YAAY,KAAK,uBAAuB,EAAG;YAE/C;;YAEA;YACA,IAAK,CAAEugB,YAAY,CAACvtI,QAAQ,EAAG;cAE9BhxB,OAAO,CAAChG,KAAK,CAAE,qGAAqG,EAAE,IAAI,CAAE;cAC5H;YAED;YAEA,IAAK,CAAEukK,YAAY,CAACvtI,QAAQ,CAACylB,eAAe,EAAG;cAE9Cz2C,OAAO,CAAChG,KAAK,CAAE,qHAAqH,EAAE,IAAI,CAAE;cAC5I;YAED;YAEA,IAAKukK,YAAY,CAACniH,qBAAqB,CAAEuiH,aAAa,CAAE,KAAK5jK,SAAS,EAAG;cAExE4jK,aAAa,GAAGJ,YAAY,CAACniH,qBAAqB,CAAEuiH,aAAa,CAAE;YAEpE;UAED;UAEAyB,WAAW,GAAG,IAAI,CAACC,WAAW,CAACE,YAAY;UAE3C,IAAI,CAAC9B,gBAAgB,GAAGqB,YAAY;UACpC,IAAI,CAACnB,aAAa,GAAGA,aAAa;QAEnC,CAAC,MAAM,IAAKmB,YAAY,CAAChqJ,SAAS,KAAK/a,SAAS,IAAI+kK,YAAY,CAAC9pJ,OAAO,KAAKjb,SAAS,EAAG;UAExF;;UAEAqlK,WAAW,GAAG,IAAI,CAACC,WAAW,CAACG,cAAc;UAE7C,IAAI,CAAC/B,gBAAgB,GAAGqB,YAAY;QAErC,CAAC,MAAM,IAAKzgJ,KAAK,CAACC,OAAO,CAAEwgJ,YAAY,CAAE,EAAG;UAE3CM,WAAW,GAAG,IAAI,CAACC,WAAW,CAACI,WAAW;UAE1C,IAAI,CAAChC,gBAAgB,GAAGqB,YAAY;QAErC,CAAC,MAAM;UAEN,IAAI,CAAC9hB,YAAY,GAAGA,YAAY;QAEjC;;QAEA;QACA,IAAI,CAACke,QAAQ,GAAG,IAAI,CAACwE,mBAAmB,CAAEN,WAAW,CAAE;QACvD,IAAI,CAAC/vF,QAAQ,GAAG,IAAI,CAACswF,gCAAgC,CAAEP,WAAW,CAAE,CAAEL,UAAU,CAAE;MAEnF;IAAC;MAAAxpK,GAAA;MAAAE,KAAA,EAED,SAAAonK,OAAA,EAAS;QAER,IAAI,CAACE,IAAI,GAAG,IAAI;;QAEhB;QACA;QACA,IAAI,CAAC7B,QAAQ,GAAG,IAAI,CAACgC,iBAAiB;QACtC,IAAI,CAAC7tF,QAAQ,GAAG,IAAI,CAAC8tF,iBAAiB;MAEvC;IAAC;MAAA5nK,GAAA;MAAAE,KAAA,EAvhBD,SAAAsB,OAAe6oK,IAAI,EAAE1pF,IAAI,EAAEkmF,UAAU,EAAG;QAEvC,IAAK,EAAIwD,IAAI,IAAIA,IAAI,CAACC,sBAAsB,CAAE,EAAG;UAEhD,OAAO,IAAIxD,eAAe,CAAEuD,IAAI,EAAE1pF,IAAI,EAAEkmF,UAAU,CAAE;QAErD,CAAC,MAAM;UAEN,OAAO,IAAIC,eAAe,CAACJ,SAAS,CAAE2D,IAAI,EAAE1pF,IAAI,EAAEkmF,UAAU,CAAE;QAE/D;MAED;;MAEA;AACF;AACA;AACA;AACA;AACA;AACA;IANE;MAAA7mK,GAAA;MAAAE,KAAA,EAOA,SAAAqqK,iBAAyBlkK,IAAI,EAAG;QAE/B,OAAOA,IAAI,CAAC0+E,OAAO,CAAE,KAAK,EAAE,GAAG,CAAE,CAACA,OAAO,CAAEihF,WAAW,EAAE,EAAE,CAAE;MAE7D;IAAC;MAAAhmK,GAAA;MAAAE,KAAA,EAED,SAAA6mK,eAAuBxf,SAAS,EAAG;QAElC,IAAMijB,OAAO,GAAGhE,QAAQ,CAACntH,IAAI,CAAEkuG,SAAS,CAAE;QAE1C,IAAKijB,OAAO,KAAK,IAAI,EAAG;UAEvB,MAAM,IAAI3mK,KAAK,CAAE,2CAA2C,GAAG0jJ,SAAS,CAAE;QAE3E;QAEA,IAAMkjB,OAAO,GAAG;UACf;UACA/C,QAAQ,EAAE8C,OAAO,CAAE,CAAC,CAAE;UACtBnB,UAAU,EAAEmB,OAAO,CAAE,CAAC,CAAE;UACxBlB,WAAW,EAAEkB,OAAO,CAAE,CAAC,CAAE;UACzB/iB,YAAY,EAAE+iB,OAAO,CAAE,CAAC,CAAE;UAAE;UAC5BpC,aAAa,EAAEoC,OAAO,CAAE,CAAC;QAC1B,CAAC;QAED,IAAME,OAAO,GAAGD,OAAO,CAAC/C,QAAQ,IAAI+C,OAAO,CAAC/C,QAAQ,CAAC/S,WAAW,CAAE,GAAG,CAAE;QAEvE,IAAK+V,OAAO,KAAKlmK,SAAS,IAAIkmK,OAAO,KAAK,CAAE,CAAC,EAAG;UAE/C,IAAMrB,UAAU,GAAGoB,OAAO,CAAC/C,QAAQ,CAACiD,SAAS,CAAED,OAAO,GAAG,CAAC,CAAE;;UAE5D;UACA;UACA;UACA;UACA,IAAKjE,qBAAqB,CAACxwJ,OAAO,CAAEozJ,UAAU,CAAE,KAAK,CAAE,CAAC,EAAG;YAE1DoB,OAAO,CAAC/C,QAAQ,GAAG+C,OAAO,CAAC/C,QAAQ,CAACiD,SAAS,CAAE,CAAC,EAAED,OAAO,CAAE;YAC3DD,OAAO,CAACpB,UAAU,GAAGA,UAAU;UAEhC;QAED;QAEA,IAAKoB,OAAO,CAAChjB,YAAY,KAAK,IAAI,IAAIgjB,OAAO,CAAChjB,YAAY,CAAC3hJ,MAAM,KAAK,CAAC,EAAG;UAEzE,MAAM,IAAIjC,KAAK,CAAE,8DAA8D,GAAG0jJ,SAAS,CAAE;QAE9F;QAEA,OAAOkjB,OAAO;MAEf;IAAC;MAAAzqK,GAAA;MAAAE,KAAA,EAED,SAAAunK,SAAiB4C,IAAI,EAAE3C,QAAQ,EAAG;QAEjC,IAAKA,QAAQ,KAAKljK,SAAS,IAAIkjK,QAAQ,KAAK,EAAE,IAAIA,QAAQ,KAAK,GAAG,IAAIA,QAAQ,KAAK,CAAE,CAAC,IAAIA,QAAQ,KAAK2C,IAAI,CAAChkK,IAAI,IAAIqhK,QAAQ,KAAK2C,IAAI,CAAC9yJ,IAAI,EAAG;UAE5I,OAAO8yJ,IAAI;QAEZ;;QAEA;QACA,IAAKA,IAAI,CAAC18H,QAAQ,EAAG;UAEpB,IAAMolF,IAAI,GAAGs3C,IAAI,CAAC18H,QAAQ,CAACqlF,aAAa,CAAE00C,QAAQ,CAAE;UAEpD,IAAK30C,IAAI,KAAKvuH,SAAS,EAAG;YAEzB,OAAOuuH,IAAI;UAEZ;QAED;;QAEA;QACA,IAAKs3C,IAAI,CAACzvI,QAAQ,EAAG;UAEpB,IAAMgwI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAchwI,QAAQ,EAAG;YAE/C,KAAM,IAAI70B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG60B,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,EAAG,EAAG;cAE5C,IAAM8kK,SAAS,GAAGjwI,QAAQ,CAAE70B,CAAC,CAAE;cAE/B,IAAK8kK,SAAS,CAACxkK,IAAI,KAAKqhK,QAAQ,IAAImD,SAAS,CAACtzJ,IAAI,KAAKmwJ,QAAQ,EAAG;gBAEjE,OAAOmD,SAAS;cAEjB;cAEA,IAAMznK,MAAM,GAAGwnK,iBAAiB,CAAEC,SAAS,CAACjwI,QAAQ,CAAE;cAEtD,IAAKx3B,MAAM,EAAG,OAAOA,MAAM;YAE5B;YAEA,OAAO,IAAI;UAEZ,CAAC;UAED,IAAM0nK,WAAW,GAAGF,iBAAiB,CAAEP,IAAI,CAACzvI,QAAQ,CAAE;UAEtD,IAAKkwI,WAAW,EAAG;YAElB,OAAOA,WAAW;UAEnB;QAED;QAEA,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAhE,eAAA;EAAA;EAsZFA,eAAe,CAACJ,SAAS,GAAGA,SAAS;EAErCI,eAAe,CAACnnK,SAAS,CAACmqK,WAAW,GAAG;IACvCC,MAAM,EAAE,CAAC;IACTG,WAAW,EAAE,CAAC;IACdF,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE;EACjB,CAAC;EAEDnD,eAAe,CAACnnK,SAAS,CAAC8pK,UAAU,GAAG;IACtCC,IAAI,EAAE,CAAC;IACPC,WAAW,EAAE,CAAC;IACdC,sBAAsB,EAAE;EACzB,CAAC;EAED9C,eAAe,CAACnnK,SAAS,CAACwqK,mBAAmB,GAAG,CAE/CrD,eAAe,CAACnnK,SAAS,CAACooK,gBAAgB,EAC1CjB,eAAe,CAACnnK,SAAS,CAACsoK,eAAe,EACzCnB,eAAe,CAACnnK,SAAS,CAACwoK,sBAAsB,EAChDrB,eAAe,CAACnnK,SAAS,CAAC0oK,iBAAiB,CAE3C;EAEDvB,eAAe,CAACnnK,SAAS,CAACyqK,gCAAgC,GAAG,CAE5D;EACC;EACAtD,eAAe,CAACnnK,SAAS,CAAC2oK,gBAAgB,EAC1CxB,eAAe,CAACnnK,SAAS,CAAC4oK,+BAA+B,EACzDzB,eAAe,CAACnnK,SAAS,CAAC6oK,0CAA0C,CAEpE,EAAE;EAEF;;EAEA1B,eAAe,CAACnnK,SAAS,CAAC8oK,eAAe,EACzC3B,eAAe,CAACnnK,SAAS,CAACgpK,8BAA8B,EACxD7B,eAAe,CAACnnK,SAAS,CAACipK,yCAAyC,CAEnE,EAAE;EAEF;EACA9B,eAAe,CAACnnK,SAAS,CAACkpK,sBAAsB,EAChD/B,eAAe,CAACnnK,SAAS,CAACmpK,qCAAqC,EAC/DhC,eAAe,CAACnnK,SAAS,CAACopK,gDAAgD,CAE1E,EAAE;EAEF;EACAjC,eAAe,CAACnnK,SAAS,CAACqpK,mBAAmB,EAC7ClC,eAAe,CAACnnK,SAAS,CAACspK,kCAAkC,EAC5DnC,eAAe,CAACnnK,SAAS,CAACupK,6CAA6C,CAEvE,CAED;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EA3BC,IA6BM6B,oBAAoB;IAEzB,SAAAA,qBAAA,EAAc;MAAAziK,eAAA,OAAAyiK,oBAAA;MAEb,IAAI,CAACT,sBAAsB,GAAG,IAAI;MAElC,IAAI,CAAC/yJ,IAAI,GAAGN,YAAY,EAAE;;MAE1B;MACA,IAAI,CAACghF,QAAQ,GAAGnvE,KAAK,CAACnpB,SAAS,CAAC0H,KAAK,CAACrF,IAAI,CAAE4oC,SAAS,CAAE;MAEvD,IAAI,CAACw8H,eAAe,GAAG,CAAC,CAAC,CAAC;MAC1B;;MAEA,IAAM3lH,OAAO,GAAG,CAAC,CAAC;MAClB,IAAI,CAACupH,cAAc,GAAGvpH,OAAO,CAAC,CAAC;;MAE/B,KAAM,IAAI17C,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG+yB,SAAS,CAAC9kC,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;QAEtD07C,OAAO,CAAE7W,SAAS,CAAE7kC,CAAC,CAAE,CAACwR,IAAI,CAAE,GAAGxR,CAAC;MAEnC;MAEA,IAAI,CAACklK,MAAM,GAAG,EAAE,CAAC,CAAC;MAClB,IAAI,CAACC,YAAY,GAAG,EAAE,CAAC,CAAC;MACxB,IAAI,CAACjE,SAAS,GAAG,EAAE,CAAC,CAAC;MACrB,IAAI,CAACkE,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC;;MAElC,IAAM/jH,KAAK,GAAG,IAAI;MAElB,IAAI,CAACgkH,KAAK,GAAG;QAEZplG,OAAO,EAAE;UACR,IAAImmF,KAAKA,CAAA,EAAG;YAEX,OAAO/kG,KAAK,CAAC6wC,QAAQ,CAACnyF,MAAM;UAE7B,CAAC;UACD,IAAIulK,KAAKA,CAAA,EAAG;YAEX,OAAO,IAAI,CAAClf,KAAK,GAAG/kG,KAAK,CAACggH,eAAe;UAE1C;QACD,CAAC;QACD,IAAIkE,iBAAiBA,CAAA,EAAG;UAEvB,OAAOlkH,KAAK,CAAC6/G,SAAS,CAACnhK,MAAM;QAE9B;MAED,CAAC;IAEF;IAACgD,YAAA,CAAAiiK,oBAAA;MAAA/qK,GAAA;MAAAE,KAAA,EAED,SAAA2c,IAAA,EAAM;QAEL,IAAMmpD,OAAO,GAAG,IAAI,CAACiyB,QAAQ;UAC5BszE,aAAa,GAAG,IAAI,CAACP,cAAc;UACnCQ,KAAK,GAAG,IAAI,CAACP,MAAM;UACnBQ,WAAW,GAAG,IAAI,CAACP,YAAY;UAC/B7D,QAAQ,GAAG,IAAI,CAACJ,SAAS;UACzByE,SAAS,GAAGrE,QAAQ,CAACvhK,MAAM;QAE5B,IAAI6lK,WAAW,GAAGnnK,SAAS;UAC1BonK,QAAQ,GAAG5lG,OAAO,CAAClgE,MAAM;UACzB+lK,cAAc,GAAG,IAAI,CAACzE,eAAe;QAEtC,KAAM,IAAIrhK,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG+yB,SAAS,CAAC9kC,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEtD,IAAMgB,MAAM,GAAG6jC,SAAS,CAAE7kC,CAAC,CAAE;YAC5BwR,IAAI,GAAGxQ,MAAM,CAACwQ,IAAI;UACnB,IAAIlB,KAAK,GAAGk1J,aAAa,CAAEh0J,IAAI,CAAE;UAEjC,IAAKlB,KAAK,KAAK7R,SAAS,EAAG;YAE1B;;YAEA6R,KAAK,GAAGu1J,QAAQ,EAAG;YACnBL,aAAa,CAAEh0J,IAAI,CAAE,GAAGlB,KAAK;YAC7B2vD,OAAO,CAACzgE,IAAI,CAAEwB,MAAM,CAAE;;YAEtB;;YAEA,KAAM,IAAI41B,CAAC,GAAG,CAAC,EAAE7kB,CAAC,GAAG4zJ,SAAS,EAAE/uI,CAAC,KAAK7kB,CAAC,EAAE,EAAG6kB,CAAC,EAAG;cAE/C0qI,QAAQ,CAAE1qI,CAAC,CAAE,CAACp3B,IAAI,CAAE,IAAIuhK,eAAe,CAAE//J,MAAM,EAAEykK,KAAK,CAAE7uI,CAAC,CAAE,EAAE8uI,WAAW,CAAE9uI,CAAC,CAAE,CAAE,CAAE;YAElF;UAED,CAAC,MAAM,IAAKtmB,KAAK,GAAGw1J,cAAc,EAAG;YAEpCF,WAAW,GAAG3lG,OAAO,CAAE3vD,KAAK,CAAE;;YAE9B;;YAEA,IAAMy1J,gBAAgB,GAAG,EAAGD,cAAc;cACzCE,gBAAgB,GAAG/lG,OAAO,CAAE8lG,gBAAgB,CAAE;YAE/CP,aAAa,CAAEQ,gBAAgB,CAACx0J,IAAI,CAAE,GAAGlB,KAAK;YAC9C2vD,OAAO,CAAE3vD,KAAK,CAAE,GAAG01J,gBAAgB;YAEnCR,aAAa,CAAEh0J,IAAI,CAAE,GAAGu0J,gBAAgB;YACxC9lG,OAAO,CAAE8lG,gBAAgB,CAAE,GAAG/kK,MAAM;;YAEpC;;YAEA,KAAM,IAAI41B,IAAC,GAAG,CAAC,EAAE7kB,GAAC,GAAG4zJ,SAAS,EAAE/uI,IAAC,KAAK7kB,GAAC,EAAE,EAAG6kB,IAAC,EAAG;cAE/C,IAAMqvI,eAAe,GAAG3E,QAAQ,CAAE1qI,IAAC,CAAE;gBACpCsvI,UAAU,GAAGD,eAAe,CAAEF,gBAAgB,CAAE;cAEjD,IAAIjI,OAAO,GAAGmI,eAAe,CAAE31J,KAAK,CAAE;cAEtC21J,eAAe,CAAE31J,KAAK,CAAE,GAAG41J,UAAU;cAErC,IAAKpI,OAAO,KAAKr/J,SAAS,EAAG;gBAE5B;gBACA;gBACA;;gBAEAq/J,OAAO,GAAG,IAAIiD,eAAe,CAAE//J,MAAM,EAAEykK,KAAK,CAAE7uI,IAAC,CAAE,EAAE8uI,WAAW,CAAE9uI,IAAC,CAAE,CAAE;cAEtE;cAEAqvI,eAAe,CAAEF,gBAAgB,CAAE,GAAGjI,OAAO;YAE9C;UAED,CAAC,MAAM,IAAK79F,OAAO,CAAE3vD,KAAK,CAAE,KAAKs1J,WAAW,EAAG;YAE9CliK,OAAO,CAAChG,KAAK,CAAE,mEAAmE,GACjF,mFAAmF,CAAE;UAEvF,CAAC,CAAC;QAEH,CAAC,CAAC;;QAEF,IAAI,CAAC2jK,eAAe,GAAGyE,cAAc;MAEtC;IAAC;MAAA7rK,GAAA;MAAAE,KAAA,EAED,SAAA2qC,OAAA,EAAS;QAER,IAAMm7B,OAAO,GAAG,IAAI,CAACiyB,QAAQ;UAC5BszE,aAAa,GAAG,IAAI,CAACP,cAAc;UACnC3D,QAAQ,GAAG,IAAI,CAACJ,SAAS;UACzByE,SAAS,GAAGrE,QAAQ,CAACvhK,MAAM;QAE5B,IAAI+lK,cAAc,GAAG,IAAI,CAACzE,eAAe;QAEzC,KAAM,IAAIrhK,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG+yB,SAAS,CAAC9kC,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEtD,IAAMgB,MAAM,GAAG6jC,SAAS,CAAE7kC,CAAC,CAAE;YAC5BwR,IAAI,GAAGxQ,MAAM,CAACwQ,IAAI;YAClBlB,KAAK,GAAGk1J,aAAa,CAAEh0J,IAAI,CAAE;UAE9B,IAAKlB,KAAK,KAAK7R,SAAS,IAAI6R,KAAK,IAAIw1J,cAAc,EAAG;YAErD;;YAEA,IAAMK,eAAe,GAAGL,cAAc,EAAG;cACxCM,iBAAiB,GAAGnmG,OAAO,CAAEkmG,eAAe,CAAE;YAE/CX,aAAa,CAAEY,iBAAiB,CAAC50J,IAAI,CAAE,GAAGlB,KAAK;YAC/C2vD,OAAO,CAAE3vD,KAAK,CAAE,GAAG81J,iBAAiB;YAEpCZ,aAAa,CAAEh0J,IAAI,CAAE,GAAG20J,eAAe;YACvClmG,OAAO,CAAEkmG,eAAe,CAAE,GAAGnlK,MAAM;;YAEnC;;YAEA,KAAM,IAAI41B,CAAC,GAAG,CAAC,EAAE7kB,CAAC,GAAG4zJ,SAAS,EAAE/uI,CAAC,KAAK7kB,CAAC,EAAE,EAAG6kB,CAAC,EAAG;cAE/C,IAAMqvI,eAAe,GAAG3E,QAAQ,CAAE1qI,CAAC,CAAE;gBACpCyvI,WAAW,GAAGJ,eAAe,CAAEE,eAAe,CAAE;gBAChDrI,OAAO,GAAGmI,eAAe,CAAE31J,KAAK,CAAE;cAEnC21J,eAAe,CAAE31J,KAAK,CAAE,GAAG+1J,WAAW;cACtCJ,eAAe,CAAEE,eAAe,CAAE,GAAGrI,OAAO;YAE7C;UAED;QAED,CAAC,CAAC;;QAEF,IAAI,CAACuD,eAAe,GAAGyE,cAAc;MAEtC;;MAEA;IAAA;MAAA7rK,GAAA;MAAAE,KAAA,EACA,SAAAmsK,QAAA,EAAU;QAET,IAAMrmG,OAAO,GAAG,IAAI,CAACiyB,QAAQ;UAC5BszE,aAAa,GAAG,IAAI,CAACP,cAAc;UACnC3D,QAAQ,GAAG,IAAI,CAACJ,SAAS;UACzByE,SAAS,GAAGrE,QAAQ,CAACvhK,MAAM;QAE5B,IAAI+lK,cAAc,GAAG,IAAI,CAACzE,eAAe;UACxCwE,QAAQ,GAAG5lG,OAAO,CAAClgE,MAAM;QAE1B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAG+yB,SAAS,CAAC9kC,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEtD,IAAMgB,MAAM,GAAG6jC,SAAS,CAAE7kC,CAAC,CAAE;YAC5BwR,IAAI,GAAGxQ,MAAM,CAACwQ,IAAI;YAClBlB,KAAK,GAAGk1J,aAAa,CAAEh0J,IAAI,CAAE;UAE9B,IAAKlB,KAAK,KAAK7R,SAAS,EAAG;YAE1B,OAAO+mK,aAAa,CAAEh0J,IAAI,CAAE;YAE5B,IAAKlB,KAAK,GAAGw1J,cAAc,EAAG;cAE7B;;cAEA,IAAMC,gBAAgB,GAAG,EAAGD,cAAc;gBACzCE,gBAAgB,GAAG/lG,OAAO,CAAE8lG,gBAAgB,CAAE;gBAC9CjrF,SAAS,GAAG,EAAG+qF,QAAQ;gBACvBU,UAAU,GAAGtmG,OAAO,CAAE6a,SAAS,CAAE;;cAElC;cACA0qF,aAAa,CAAEQ,gBAAgB,CAACx0J,IAAI,CAAE,GAAGlB,KAAK;cAC9C2vD,OAAO,CAAE3vD,KAAK,CAAE,GAAG01J,gBAAgB;;cAEnC;cACAR,aAAa,CAAEe,UAAU,CAAC/0J,IAAI,CAAE,GAAGu0J,gBAAgB;cACnD9lG,OAAO,CAAE8lG,gBAAgB,CAAE,GAAGQ,UAAU;cACxCtmG,OAAO,CAAC/+D,GAAG,EAAE;;cAEb;;cAEA,KAAM,IAAI01B,CAAC,GAAG,CAAC,EAAE7kB,CAAC,GAAG4zJ,SAAS,EAAE/uI,CAAC,KAAK7kB,CAAC,EAAE,EAAG6kB,CAAC,EAAG;gBAE/C,IAAMqvI,eAAe,GAAG3E,QAAQ,CAAE1qI,CAAC,CAAE;kBACpCsvI,UAAU,GAAGD,eAAe,CAAEF,gBAAgB,CAAE;kBAChD7xC,IAAI,GAAG+xC,eAAe,CAAEnrF,SAAS,CAAE;gBAEpCmrF,eAAe,CAAE31J,KAAK,CAAE,GAAG41J,UAAU;gBACrCD,eAAe,CAAEF,gBAAgB,CAAE,GAAG7xC,IAAI;gBAC1C+xC,eAAe,CAAC/kK,GAAG,EAAE;cAEtB;YAED,CAAC,MAAM;cAEN;;cAEA,IAAM45E,UAAS,GAAG,EAAG+qF,QAAQ;gBAC5BU,WAAU,GAAGtmG,OAAO,CAAE6a,UAAS,CAAE;cAElC,IAAKA,UAAS,GAAG,CAAC,EAAG;gBAEpB0qF,aAAa,CAAEe,WAAU,CAAC/0J,IAAI,CAAE,GAAGlB,KAAK;cAEzC;cAEA2vD,OAAO,CAAE3vD,KAAK,CAAE,GAAGi2J,WAAU;cAC7BtmG,OAAO,CAAC/+D,GAAG,EAAE;;cAEb;;cAEA,KAAM,IAAI01B,IAAC,GAAG,CAAC,EAAE7kB,GAAC,GAAG4zJ,SAAS,EAAE/uI,IAAC,KAAK7kB,GAAC,EAAE,EAAG6kB,IAAC,EAAG;gBAE/C,IAAMqvI,gBAAe,GAAG3E,QAAQ,CAAE1qI,IAAC,CAAE;gBAErCqvI,gBAAe,CAAE31J,KAAK,CAAE,GAAG21J,gBAAe,CAAEnrF,UAAS,CAAE;gBACvDmrF,gBAAe,CAAC/kK,GAAG,EAAE;cAEtB;YAED,CAAC,CAAC;UAEH,CAAC,CAAC;QAEH,CAAC,CAAC;;QAEF,IAAI,CAACmgK,eAAe,GAAGyE,cAAc;MAEtC;;MAEA;IAAA;MAAA7rK,GAAA;MAAAE,KAAA,EAEA,SAAAgnK,WAAYvmF,IAAI,EAAEkmF,UAAU,EAAG;QAE9B;QACA;;QAEA,IAAM0F,aAAa,GAAG,IAAI,CAACpB,sBAAsB;QACjD,IAAI90J,KAAK,GAAGk2J,aAAa,CAAE5rF,IAAI,CAAE;QACjC,IAAM0mF,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAE/B,IAAK5wJ,KAAK,KAAK7R,SAAS,EAAG,OAAO6iK,QAAQ,CAAEhxJ,KAAK,CAAE;QAEnD,IAAMm1J,KAAK,GAAG,IAAI,CAACP,MAAM;UACxBQ,WAAW,GAAG,IAAI,CAACP,YAAY;UAC/BllG,OAAO,GAAG,IAAI,CAACiyB,QAAQ;UACvB2zE,QAAQ,GAAG5lG,OAAO,CAAClgE,MAAM;UACzB+lK,cAAc,GAAG,IAAI,CAACzE,eAAe;UACrC4E,eAAe,GAAG,IAAIljJ,KAAK,CAAE8iJ,QAAQ,CAAE;QAExCv1J,KAAK,GAAGgxJ,QAAQ,CAACvhK,MAAM;QAEvBymK,aAAa,CAAE5rF,IAAI,CAAE,GAAGtqE,KAAK;QAE7Bm1J,KAAK,CAACjmK,IAAI,CAAEo7E,IAAI,CAAE;QAClB8qF,WAAW,CAAClmK,IAAI,CAAEshK,UAAU,CAAE;QAC9BQ,QAAQ,CAAC9hK,IAAI,CAAEymK,eAAe,CAAE;QAEhC,KAAM,IAAIjmK,CAAC,GAAG8lK,cAAc,EAAEh0J,CAAC,GAAGmuD,OAAO,CAAClgE,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAEjE,IAAMgB,MAAM,GAAGi/D,OAAO,CAAEjgE,CAAC,CAAE;UAC3BimK,eAAe,CAAEjmK,CAAC,CAAE,GAAG,IAAI+gK,eAAe,CAAE//J,MAAM,EAAE45E,IAAI,EAAEkmF,UAAU,CAAE;QAEvE;QAEA,OAAOmF,eAAe;MAEvB;IAAC;MAAAhsK,GAAA;MAAAE,KAAA,EAED,SAAAssK,aAAc7rF,IAAI,EAAG;QAEpB;QACA;;QAEA,IAAM4rF,aAAa,GAAG,IAAI,CAACpB,sBAAsB;UAChD90J,KAAK,GAAGk2J,aAAa,CAAE5rF,IAAI,CAAE;QAE9B,IAAKtqE,KAAK,KAAK7R,SAAS,EAAG;UAE1B,IAAMgnK,KAAK,GAAG,IAAI,CAACP,MAAM;YACxBQ,WAAW,GAAG,IAAI,CAACP,YAAY;YAC/B7D,QAAQ,GAAG,IAAI,CAACJ,SAAS;YACzBwF,iBAAiB,GAAGpF,QAAQ,CAACvhK,MAAM,GAAG,CAAC;YACvC4mK,YAAY,GAAGrF,QAAQ,CAAEoF,iBAAiB,CAAE;YAC5CE,gBAAgB,GAAGhsF,IAAI,CAAE8rF,iBAAiB,CAAE;UAE7CF,aAAa,CAAEI,gBAAgB,CAAE,GAAGt2J,KAAK;UAEzCgxJ,QAAQ,CAAEhxJ,KAAK,CAAE,GAAGq2J,YAAY;UAChCrF,QAAQ,CAACpgK,GAAG,EAAE;UAEdwkK,WAAW,CAAEp1J,KAAK,CAAE,GAAGo1J,WAAW,CAAEgB,iBAAiB,CAAE;UACvDhB,WAAW,CAACxkK,GAAG,EAAE;UAEjBukK,KAAK,CAAEn1J,KAAK,CAAE,GAAGm1J,KAAK,CAAEiB,iBAAiB,CAAE;UAC3CjB,KAAK,CAACvkK,GAAG,EAAE;QAEZ;MAED;IAAC;IAAA,OAAA8jK,oBAAA;EAAA;EAAA,IAII6B,eAAe;IAEpB,SAAAA,gBAAaC,KAAK,EAAExvB,IAAI,EAAEyvB,SAAS,GAAG,IAAI,EAAErtB,SAAS,GAAGpC,IAAI,CAACoC,SAAS,EAAG;MAAAn3I,eAAA,OAAAskK,eAAA;MAExE,IAAI,CAACG,MAAM,GAAGF,KAAK;MACnB,IAAI,CAACG,KAAK,GAAG3vB,IAAI;MACjB,IAAI,CAAC4vB,UAAU,GAAGH,SAAS;MAC3B,IAAI,CAACrtB,SAAS,GAAGA,SAAS;MAE1B,IAAMnC,MAAM,GAAGD,IAAI,CAACC,MAAM;QACzB4vB,OAAO,GAAG5vB,MAAM,CAACx3I,MAAM;QACvBqnK,YAAY,GAAG,IAAIrkJ,KAAK,CAAEokJ,OAAO,CAAE;MAEpC,IAAME,mBAAmB,GAAG;QAC3B9rB,WAAW,EAAExuI,mBAAmB;QAChCyuI,SAAS,EAAEzuI;MACZ,CAAC;MAED,KAAM,IAAI/M,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKmnK,OAAO,EAAE,EAAGnnK,CAAC,EAAG;QAEtC,IAAMk5I,WAAW,GAAG3B,MAAM,CAAEv3I,CAAC,CAAE,CAAC24I,iBAAiB,CAAE,IAAI,CAAE;QACzDyuB,YAAY,CAAEpnK,CAAC,CAAE,GAAGk5I,WAAW;QAC/BA,WAAW,CAACe,QAAQ,GAAGotB,mBAAmB;MAE3C;MAEA,IAAI,CAACC,oBAAoB,GAAGD,mBAAmB;MAE/C,IAAI,CAACE,aAAa,GAAGH,YAAY,CAAC,CAAC;;MAEnC;MACA,IAAI,CAACI,iBAAiB,GAAG,IAAIzkJ,KAAK,CAAEokJ,OAAO,CAAE;MAE7C,IAAI,CAACM,WAAW,GAAG,IAAI,CAAC,CAAC;MACzB,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAAC,CAAC;;MAE/B,IAAI,CAACC,qBAAqB,GAAG,IAAI;MACjC,IAAI,CAACC,kBAAkB,GAAG,IAAI;MAE9B,IAAI,CAAC7O,IAAI,GAAGrsJ,UAAU;MACtB,IAAI,CAACm7J,UAAU,GAAG,CAAE,CAAC;;MAErB;MACA;MACA,IAAI,CAACC,UAAU,GAAG,IAAI;;MAEtB;MACA;MACA,IAAI,CAAC37G,IAAI,GAAG,CAAC;MAEb,IAAI,CAACwxF,SAAS,GAAG,CAAC;MAClB,IAAI,CAACoqB,mBAAmB,GAAG,CAAC;MAE5B,IAAI,CAACx4F,MAAM,GAAG,CAAC;MACf,IAAI,CAACy4F,gBAAgB,GAAG,CAAC;MAEzB,IAAI,CAACC,WAAW,GAAGn1I,QAAQ,CAAC,CAAC;;MAE7B,IAAI,CAACo1I,MAAM,GAAG,KAAK,CAAC,CAAC;MACrB,IAAI,CAAC7nJ,OAAO,GAAG,IAAI,CAAC,CAAC;;MAErB,IAAI,CAAC8nJ,iBAAiB,GAAG,KAAK,CAAC;;MAE/B,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAAC;MAC7B,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC;IAE5B;;IAEA;IAAAtlK,YAAA,CAAA8jK,eAAA;MAAA5sK,GAAA;MAAAE,KAAA,EAEA,SAAAigK,KAAA,EAAO;QAEN,IAAI,CAAC4M,MAAM,CAACsB,eAAe,CAAE,IAAI,CAAE;QAEnC,OAAO,IAAI;MAEZ;IAAC;MAAAruK,GAAA;MAAAE,KAAA,EAED,SAAAoH,KAAA,EAAO;QAEN,IAAI,CAACylK,MAAM,CAACuB,iBAAiB,CAAE,IAAI,CAAE;QAErC,OAAO,IAAI,CAAC5oK,KAAK,EAAE;MAEpB;IAAC;MAAA1F,GAAA;MAAAE,KAAA,EAED,SAAAwF,MAAA,EAAQ;QAEP,IAAI,CAACuoK,MAAM,GAAG,KAAK;QACnB,IAAI,CAAC7nJ,OAAO,GAAG,IAAI;QAEnB,IAAI,CAAC8rC,IAAI,GAAG,CAAC,CAAC,CAAC;QACf,IAAI,CAAC07G,UAAU,GAAG,CAAE,CAAC,CAAC;QACtB,IAAI,CAACC,UAAU,GAAG,IAAI,CAAC;;QAEvB,OAAO,IAAI,CAACU,UAAU,EAAE,CAACC,WAAW,EAAE;MAEvC;IAAC;MAAAxuK,GAAA;MAAAE,KAAA,EAED,SAAAuuK,UAAA,EAAY;QAEX,OAAO,IAAI,CAACroJ,OAAO,IAAI,CAAE,IAAI,CAAC6nJ,MAAM,IAAI,IAAI,CAACvqB,SAAS,KAAK,CAAC,IAC3D,IAAI,CAACmqB,UAAU,KAAK,IAAI,IAAI,IAAI,CAACd,MAAM,CAAC2B,eAAe,CAAE,IAAI,CAAE;MAEjE;;MAEA;IAAA;MAAA1uK,GAAA;MAAAE,KAAA,EACA,SAAAyuK,YAAA,EAAc;QAEb,OAAO,IAAI,CAAC5B,MAAM,CAAC2B,eAAe,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA1uK,GAAA;MAAAE,KAAA,EAED,SAAA0uK,QAAS18G,IAAI,EAAG;QAEf,IAAI,CAAC27G,UAAU,GAAG37G,IAAI;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAlyD,GAAA;MAAAE,KAAA,EAED,SAAA8gK,QAASr1F,IAAI,EAAEqiG,WAAW,EAAG;QAE5B,IAAI,CAAClP,IAAI,GAAGnzF,IAAI;QAChB,IAAI,CAACqiG,WAAW,GAAGA,WAAW;QAE9B,OAAO,IAAI;MAEZ;;MAEA;;MAEA;MACA;MACA;IAAA;MAAAhuK,GAAA;MAAAE,KAAA,EACA,SAAA2uK,mBAAoBv5F,MAAM,EAAG;QAE5B,IAAI,CAACA,MAAM,GAAGA,MAAM;;QAEpB;QACA,IAAI,CAACy4F,gBAAgB,GAAG,IAAI,CAAC3nJ,OAAO,GAAGkvD,MAAM,GAAG,CAAC;QAEjD,OAAO,IAAI,CAACi5F,UAAU,EAAE;MAEzB;;MAEA;IAAA;MAAAvuK,GAAA;MAAAE,KAAA,EACA,SAAA4uK,mBAAA,EAAqB;QAEpB,OAAO,IAAI,CAACf,gBAAgB;MAE7B;IAAC;MAAA/tK,GAAA;MAAAE,KAAA,EAED,SAAA6uK,OAAQ5oB,QAAQ,EAAG;QAElB,OAAO,IAAI,CAAC6oB,eAAe,CAAE7oB,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAE;MAE9C;IAAC;MAAAnmJ,GAAA;MAAAE,KAAA,EAED,SAAA+uK,QAAS9oB,QAAQ,EAAG;QAEnB,OAAO,IAAI,CAAC6oB,eAAe,CAAE7oB,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAE;MAE9C;IAAC;MAAAnmJ,GAAA;MAAAE,KAAA,EAED,SAAAgvK,cAAeC,aAAa,EAAEhpB,QAAQ,EAAEipB,IAAI,EAAG;QAE9CD,aAAa,CAACF,OAAO,CAAE9oB,QAAQ,CAAE;QACjC,IAAI,CAAC4oB,MAAM,CAAE5oB,QAAQ,CAAE;QAEvB,IAAKipB,IAAI,EAAG;UAEX,IAAMC,cAAc,GAAG,IAAI,CAACrC,KAAK,CAAC7mB,QAAQ;YACzCmpB,eAAe,GAAGH,aAAa,CAACnC,KAAK,CAAC7mB,QAAQ;YAE9CopB,aAAa,GAAGD,eAAe,GAAGD,cAAc;YAChDG,aAAa,GAAGH,cAAc,GAAGC,eAAe;UAEjDH,aAAa,CAACC,IAAI,CAAE,GAAG,EAAEG,aAAa,EAAEppB,QAAQ,CAAE;UAClD,IAAI,CAACipB,IAAI,CAAEI,aAAa,EAAE,GAAG,EAAErpB,QAAQ,CAAE;QAE1C;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAAnmJ,GAAA;MAAAE,KAAA,EAED,SAAAuvK,YAAaC,YAAY,EAAEvpB,QAAQ,EAAEipB,IAAI,EAAG;QAE3C,OAAOM,YAAY,CAACR,aAAa,CAAE,IAAI,EAAE/oB,QAAQ,EAAEipB,IAAI,CAAE;MAE1D;IAAC;MAAApvK,GAAA;MAAAE,KAAA,EAED,SAAAquK,WAAA,EAAa;QAEZ,IAAMoB,iBAAiB,GAAG,IAAI,CAAChC,kBAAkB;QAEjD,IAAKgC,iBAAiB,KAAK,IAAI,EAAG;UAEjC,IAAI,CAAChC,kBAAkB,GAAG,IAAI;UAC9B,IAAI,CAACZ,MAAM,CAAC6C,2BAA2B,CAAED,iBAAiB,CAAE;QAE7D;QAEA,OAAO,IAAI;MAEZ;;MAEA;;MAEA;MACA;MACA;IAAA;MAAA3vK,GAAA;MAAAE,KAAA,EACA,SAAA2vK,sBAAuBnsB,SAAS,EAAG;QAElC,IAAI,CAACA,SAAS,GAAGA,SAAS;QAC1B,IAAI,CAACoqB,mBAAmB,GAAG,IAAI,CAACG,MAAM,GAAG,CAAC,GAAGvqB,SAAS;QAEtD,OAAO,IAAI,CAAC8qB,WAAW,EAAE;MAE1B;;MAEA;IAAA;MAAAxuK,GAAA;MAAAE,KAAA,EACA,SAAA4vK,sBAAA,EAAwB;QAEvB,OAAO,IAAI,CAAChC,mBAAmB;MAEhC;IAAC;MAAA9tK,GAAA;MAAAE,KAAA,EAED,SAAA6vK,YAAa5pB,QAAQ,EAAG;QAEvB,IAAI,CAACzC,SAAS,GAAG,IAAI,CAACspB,KAAK,CAAC7mB,QAAQ,GAAGA,QAAQ;QAE/C,OAAO,IAAI,CAACqoB,WAAW,EAAE;MAE1B;IAAC;MAAAxuK,GAAA;MAAAE,KAAA,EAED,SAAA8vK,SAAUC,MAAM,EAAG;QAElB,IAAI,CAAC/9G,IAAI,GAAG+9G,MAAM,CAAC/9G,IAAI;QACvB,IAAI,CAACwxF,SAAS,GAAGusB,MAAM,CAACvsB,SAAS;QAEjC,OAAO,IAAI,CAAC8qB,WAAW,EAAE;MAE1B;IAAC;MAAAxuK,GAAA;MAAAE,KAAA,EAED,SAAAgwK,KAAM/pB,QAAQ,EAAG;QAEhB,OAAO,IAAI,CAACipB,IAAI,CAAE,IAAI,CAACtB,mBAAmB,EAAE,CAAC,EAAE3nB,QAAQ,CAAE;MAE1D;IAAC;MAAAnmJ,GAAA;MAAAE,KAAA,EAED,SAAAkvK,KAAMe,cAAc,EAAEC,YAAY,EAAEjqB,QAAQ,EAAG;QAE9C,IAAM0mB,KAAK,GAAG,IAAI,CAACE,MAAM;UACxB7Q,GAAG,GAAG2Q,KAAK,CAAC36G,IAAI;UAChBwxF,SAAS,GAAG,IAAI,CAACA,SAAS;QAE3B,IAAIzE,WAAW,GAAG,IAAI,CAACyuB,qBAAqB;QAE5C,IAAKzuB,WAAW,KAAK,IAAI,EAAG;UAE3BA,WAAW,GAAG4tB,KAAK,CAACwD,uBAAuB,EAAE;UAC7C,IAAI,CAAC3C,qBAAqB,GAAGzuB,WAAW;QAEzC;QAEA,IAAMzC,KAAK,GAAGyC,WAAW,CAACW,kBAAkB;UAC3Cp9I,MAAM,GAAGy8I,WAAW,CAACY,YAAY;QAElCrD,KAAK,CAAE,CAAC,CAAE,GAAG0f,GAAG;QAChB1f,KAAK,CAAE,CAAC,CAAE,GAAG0f,GAAG,GAAG/V,QAAQ;QAE3B3jJ,MAAM,CAAE,CAAC,CAAE,GAAG2tK,cAAc,GAAGzsB,SAAS;QACxClhJ,MAAM,CAAE,CAAC,CAAE,GAAG4tK,YAAY,GAAG1sB,SAAS;QAEtC,OAAO,IAAI;MAEZ;IAAC;MAAA1jJ,GAAA;MAAAE,KAAA,EAED,SAAAsuK,YAAA,EAAc;QAEb,IAAM8B,oBAAoB,GAAG,IAAI,CAAC5C,qBAAqB;QAEvD,IAAK4C,oBAAoB,KAAK,IAAI,EAAG;UAEpC,IAAI,CAAC5C,qBAAqB,GAAG,IAAI;UACjC,IAAI,CAACX,MAAM,CAAC6C,2BAA2B,CAAEU,oBAAoB,CAAE;QAEhE;QAEA,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAAtwK,GAAA;MAAAE,KAAA,EAEA,SAAAqwK,SAAA,EAAW;QAEV,OAAO,IAAI,CAACxD,MAAM;MAEnB;IAAC;MAAA/sK,GAAA;MAAAE,KAAA,EAED,SAAAswK,QAAA,EAAU;QAET,OAAO,IAAI,CAACxD,KAAK;MAElB;IAAC;MAAAhtK,GAAA;MAAAE,KAAA,EAED,SAAAuwK,QAAA,EAAU;QAET,OAAO,IAAI,CAACxD,UAAU,IAAI,IAAI,CAACF,MAAM,CAAC2D,KAAK;MAE5C;;MAEA;IAAA;MAAA1wK,GAAA;MAAAE,KAAA,EAEA,SAAAywK,QAASz+G,IAAI,EAAE0+G,SAAS,EAAEC,aAAa,EAAEzL,SAAS,EAAG;QAEpD;;QAEA,IAAK,CAAE,IAAI,CAACh/I,OAAO,EAAG;UAErB;;UAEA,IAAI,CAAC0qJ,aAAa,CAAE5+G,IAAI,CAAE;UAC1B;QAED;QAEA,IAAMyxF,SAAS,GAAG,IAAI,CAACkqB,UAAU;QAEjC,IAAKlqB,SAAS,KAAK,IAAI,EAAG;UAEzB;;UAEA,IAAMotB,WAAW,GAAG,CAAE7+G,IAAI,GAAGyxF,SAAS,IAAKktB,aAAa;UACxD,IAAKE,WAAW,GAAG,CAAC,IAAIF,aAAa,KAAK,CAAC,EAAG;YAE7CD,SAAS,GAAG,CAAC;UAEd,CAAC,MAAM;YAGN,IAAI,CAAC/C,UAAU,GAAG,IAAI,CAAC,CAAC;YACxB+C,SAAS,GAAGC,aAAa,GAAGE,WAAW;UAExC;QAED;;QAEA;;QAEAH,SAAS,IAAI,IAAI,CAACI,gBAAgB,CAAE9+G,IAAI,CAAE;QAC1C,IAAM++G,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAEN,SAAS,CAAE;;QAE9C;QACA;;QAEA,IAAMt7F,MAAM,GAAG,IAAI,CAACw7F,aAAa,CAAE5+G,IAAI,CAAE;QAEzC,IAAKojB,MAAM,GAAG,CAAC,EAAG;UAEjB,IAAM63F,YAAY,GAAG,IAAI,CAACG,aAAa;UACvC,IAAM6D,cAAc,GAAG,IAAI,CAAC5D,iBAAiB;UAE7C,QAAS,IAAI,CAAC9tB,SAAS;YAEtB,KAAKvsI,0BAA0B;cAE9B,KAAM,IAAIypB,CAAC,GAAG,CAAC,EAAE7kB,CAAC,GAAGq1J,YAAY,CAACrnK,MAAM,EAAE62B,CAAC,KAAK7kB,CAAC,EAAE,EAAG6kB,CAAC,EAAG;gBAEzDwwI,YAAY,CAAExwI,CAAC,CAAE,CAACuiH,QAAQ,CAAE+xB,QAAQ,CAAE;gBACtCE,cAAc,CAAEx0I,CAAC,CAAE,CAAC4oI,kBAAkB,CAAEjwF,MAAM,CAAE;cAEjD;cAEA;YAED,KAAKriE,wBAAwB;YAC7B;cAEC,KAAM,IAAI0pB,IAAC,GAAG,CAAC,EAAE7kB,GAAC,GAAGq1J,YAAY,CAACrnK,MAAM,EAAE62B,IAAC,KAAK7kB,GAAC,EAAE,EAAG6kB,IAAC,EAAG;gBAEzDwwI,YAAY,CAAExwI,IAAC,CAAE,CAACuiH,QAAQ,CAAE+xB,QAAQ,CAAE;gBACtCE,cAAc,CAAEx0I,IAAC,CAAE,CAACwoI,UAAU,CAAEC,SAAS,EAAE9vF,MAAM,CAAE;cAEpD;UAAC;QAIJ;MAED;IAAC;MAAAt1E,GAAA;MAAAE,KAAA,EAED,SAAA4wK,cAAe5+G,IAAI,EAAG;QAErB,IAAIojB,MAAM,GAAG,CAAC;QAEd,IAAK,IAAI,CAAClvD,OAAO,EAAG;UAEnBkvD,MAAM,GAAG,IAAI,CAACA,MAAM;UACpB,IAAM2pE,WAAW,GAAG,IAAI,CAAC0uB,kBAAkB;UAE3C,IAAK1uB,WAAW,KAAK,IAAI,EAAG;YAE3B,IAAMmyB,gBAAgB,GAAGnyB,WAAW,CAACC,QAAQ,CAAEhtF,IAAI,CAAE,CAAE,CAAC,CAAE;YAE1DojB,MAAM,IAAI87F,gBAAgB;YAE1B,IAAKl/G,IAAI,GAAG+sF,WAAW,CAACW,kBAAkB,CAAE,CAAC,CAAE,EAAG;cAEjD,IAAI,CAAC2uB,UAAU,EAAE;cAEjB,IAAK6C,gBAAgB,KAAK,CAAC,EAAG;gBAE7B;gBACA,IAAI,CAAChrJ,OAAO,GAAG,KAAK;cAErB;YAED;UAED;QAED;QAEA,IAAI,CAAC2nJ,gBAAgB,GAAGz4F,MAAM;QAC9B,OAAOA,MAAM;MAEd;IAAC;MAAAt1E,GAAA;MAAAE,KAAA,EAED,SAAA8wK,iBAAkB9+G,IAAI,EAAG;QAExB,IAAIwxF,SAAS,GAAG,CAAC;QAEjB,IAAK,CAAE,IAAI,CAACuqB,MAAM,EAAG;UAEpBvqB,SAAS,GAAG,IAAI,CAACA,SAAS;UAE1B,IAAMzE,WAAW,GAAG,IAAI,CAACyuB,qBAAqB;UAE9C,IAAKzuB,WAAW,KAAK,IAAI,EAAG;YAE3B,IAAMmyB,gBAAgB,GAAGnyB,WAAW,CAACC,QAAQ,CAAEhtF,IAAI,CAAE,CAAE,CAAC,CAAE;YAE1DwxF,SAAS,IAAI0tB,gBAAgB;YAE7B,IAAKl/G,IAAI,GAAG+sF,WAAW,CAACW,kBAAkB,CAAE,CAAC,CAAE,EAAG;cAEjD,IAAI,CAAC4uB,WAAW,EAAE;cAElB,IAAK9qB,SAAS,KAAK,CAAC,EAAG;gBAEtB;gBACA,IAAI,CAACuqB,MAAM,GAAG,IAAI;cAEnB,CAAC,MAAM;gBAEN;gBACA,IAAI,CAACvqB,SAAS,GAAGA,SAAS;cAE3B;YAED;UAED;QAED;QAEA,IAAI,CAACoqB,mBAAmB,GAAGpqB,SAAS;QACpC,OAAOA,SAAS;MAEjB;IAAC;MAAA1jJ,GAAA;MAAAE,KAAA,EAED,SAAAgxK,YAAaN,SAAS,EAAG;QAExB,IAAMzqB,QAAQ,GAAG,IAAI,CAAC6mB,KAAK,CAAC7mB,QAAQ;QACpC,IAAM2Y,IAAI,GAAG,IAAI,CAACA,IAAI;QAEtB,IAAI5sG,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG0+G,SAAS;QAChC,IAAIS,SAAS,GAAG,IAAI,CAACzD,UAAU;QAE/B,IAAM0D,QAAQ,GAAKxS,IAAI,KAAKpsJ,YAAc;QAE1C,IAAKk+J,SAAS,KAAK,CAAC,EAAG;UAEtB,IAAKS,SAAS,KAAK,CAAE,CAAC,EAAG,OAAOn/G,IAAI;UAEpC,OAASo/G,QAAQ,IAAI,CAAED,SAAS,GAAG,CAAC,MAAO,CAAC,GAAKlrB,QAAQ,GAAGj0F,IAAI,GAAGA,IAAI;QAExE;QAEA,IAAK4sG,IAAI,KAAKtsJ,QAAQ,EAAG;UAExB,IAAK6+J,SAAS,KAAK,CAAE,CAAC,EAAG;YAExB;;YAEA,IAAI,CAACzD,UAAU,GAAG,CAAC;YACnB,IAAI,CAAC2D,WAAW,CAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAE;UAEtC;UAEAC,WAAW,EAAE;YAEZ,IAAKt/G,IAAI,IAAIi0F,QAAQ,EAAG;cAEvBj0F,IAAI,GAAGi0F,QAAQ;YAEhB,CAAC,MAAM,IAAKj0F,IAAI,GAAG,CAAC,EAAG;cAEtBA,IAAI,GAAG,CAAC;YAET,CAAC,MAAM;cAEN,IAAI,CAACA,IAAI,GAAGA,IAAI;cAEhB,MAAMs/G,WAAW;YAElB;YAEA,IAAK,IAAI,CAACtD,iBAAiB,EAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAAC,KAC5C,IAAI,CAAC7nJ,OAAO,GAAG,KAAK;YAEzB,IAAI,CAAC8rC,IAAI,GAAGA,IAAI;YAEhB,IAAI,CAAC66G,MAAM,CAACx2J,aAAa,CAAE;cAC1BxU,IAAI,EAAE,UAAU;cAAEkuK,MAAM,EAAE,IAAI;cAC9B9xI,SAAS,EAAEyyI,SAAS,GAAG,CAAC,GAAG,CAAE,CAAC,GAAG;YAClC,CAAC,CAAE;UAEJ;QAED,CAAC,MAAM;UAAE;;UAER,IAAKS,SAAS,KAAK,CAAE,CAAC,EAAG;YAExB;;YAEA,IAAKT,SAAS,IAAI,CAAC,EAAG;cAErBS,SAAS,GAAG,CAAC;cAEb,IAAI,CAACE,WAAW,CAAE,IAAI,EAAE,IAAI,CAACvD,WAAW,KAAK,CAAC,EAAEsD,QAAQ,CAAE;YAE3D,CAAC,MAAM;cAEN;cACA;cACA;;cAEA,IAAI,CAACC,WAAW,CAAE,IAAI,CAACvD,WAAW,KAAK,CAAC,EAAE,IAAI,EAAEsD,QAAQ,CAAE;YAE3D;UAED;UAEA,IAAKp/G,IAAI,IAAIi0F,QAAQ,IAAIj0F,IAAI,GAAG,CAAC,EAAG;YAEnC;;YAEA,IAAMu/G,SAAS,GAAG36J,IAAI,CAACsC,KAAK,CAAE84C,IAAI,GAAGi0F,QAAQ,CAAE,CAAC,CAAC;YACjDj0F,IAAI,IAAIi0F,QAAQ,GAAGsrB,SAAS;YAE5BJ,SAAS,IAAIv6J,IAAI,CAACgC,GAAG,CAAE24J,SAAS,CAAE;YAElC,IAAMC,OAAO,GAAG,IAAI,CAAC1D,WAAW,GAAGqD,SAAS;YAE5C,IAAKK,OAAO,IAAI,CAAC,EAAG;cAEnB;;cAEA,IAAK,IAAI,CAACxD,iBAAiB,EAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAAC,KAC5C,IAAI,CAAC7nJ,OAAO,GAAG,KAAK;cAEzB8rC,IAAI,GAAG0+G,SAAS,GAAG,CAAC,GAAGzqB,QAAQ,GAAG,CAAC;cAEnC,IAAI,CAACj0F,IAAI,GAAGA,IAAI;cAEhB,IAAI,CAAC66G,MAAM,CAACx2J,aAAa,CAAE;gBAC1BxU,IAAI,EAAE,UAAU;gBAAEkuK,MAAM,EAAE,IAAI;gBAC9B9xI,SAAS,EAAEyyI,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE;cAClC,CAAC,CAAE;YAEJ,CAAC,MAAM;cAEN;;cAEA,IAAKc,OAAO,KAAK,CAAC,EAAG;gBAEpB;;gBAEA,IAAMC,OAAO,GAAGf,SAAS,GAAG,CAAC;gBAC7B,IAAI,CAACW,WAAW,CAAEI,OAAO,EAAE,CAAEA,OAAO,EAAEL,QAAQ,CAAE;cAEjD,CAAC,MAAM;gBAEN,IAAI,CAACC,WAAW,CAAE,KAAK,EAAE,KAAK,EAAED,QAAQ,CAAE;cAE3C;cAEA,IAAI,CAAC1D,UAAU,GAAGyD,SAAS;cAE3B,IAAI,CAACn/G,IAAI,GAAGA,IAAI;cAEhB,IAAI,CAAC66G,MAAM,CAACx2J,aAAa,CAAE;gBAC1BxU,IAAI,EAAE,MAAM;gBAAEkuK,MAAM,EAAE,IAAI;gBAAEwB,SAAS,EAAEA;cACxC,CAAC,CAAE;YAEJ;UAED,CAAC,MAAM;YAEN,IAAI,CAACv/G,IAAI,GAAGA,IAAI;UAEjB;UAEA,IAAKo/G,QAAQ,IAAI,CAAED,SAAS,GAAG,CAAC,MAAO,CAAC,EAAG;YAE1C;;YAEA,OAAOlrB,QAAQ,GAAGj0F,IAAI;UAEvB;QAED;QAEA,OAAOA,IAAI;MAEZ;IAAC;MAAAlyD,GAAA;MAAAE,KAAA,EAED,SAAAqxK,YAAaI,OAAO,EAAEC,KAAK,EAAEN,QAAQ,EAAG;QAEvC,IAAMtxB,QAAQ,GAAG,IAAI,CAACqtB,oBAAoB;QAE1C,IAAKiE,QAAQ,EAAG;UAEftxB,QAAQ,CAACsB,WAAW,GAAGvuI,eAAe;UACtCitI,QAAQ,CAACuB,SAAS,GAAGxuI,eAAe;QAErC,CAAC,MAAM;UAEN;;UAEA,IAAK4+J,OAAO,EAAG;YAEd3xB,QAAQ,CAACsB,WAAW,GAAG,IAAI,CAAC6sB,gBAAgB,GAAGp7J,eAAe,GAAGD,mBAAmB;UAErF,CAAC,MAAM;YAENktI,QAAQ,CAACsB,WAAW,GAAGtuI,gBAAgB;UAExC;UAEA,IAAK4+J,KAAK,EAAG;YAEZ5xB,QAAQ,CAACuB,SAAS,GAAG,IAAI,CAAC6sB,cAAc,GAAGr7J,eAAe,GAAGD,mBAAmB;UAEjF,CAAC,MAAM;YAENktI,QAAQ,CAACuB,SAAS,GAAKvuI,gBAAgB;UAExC;QAED;MAED;IAAC;MAAAhT,GAAA;MAAAE,KAAA,EAED,SAAA8uK,gBAAiB7oB,QAAQ,EAAE0rB,SAAS,EAAEC,UAAU,EAAG;QAElD,IAAMjF,KAAK,GAAG,IAAI,CAACE,MAAM;UAAE7Q,GAAG,GAAG2Q,KAAK,CAAC36G,IAAI;QAC3C,IAAI+sF,WAAW,GAAG,IAAI,CAAC0uB,kBAAkB;QAEzC,IAAK1uB,WAAW,KAAK,IAAI,EAAG;UAE3BA,WAAW,GAAG4tB,KAAK,CAACwD,uBAAuB,EAAE;UAC7C,IAAI,CAAC1C,kBAAkB,GAAG1uB,WAAW;QAEtC;QAEA,IAAMzC,KAAK,GAAGyC,WAAW,CAACW,kBAAkB;UAC3Cp9I,MAAM,GAAGy8I,WAAW,CAACY,YAAY;QAElCrD,KAAK,CAAE,CAAC,CAAE,GAAG0f,GAAG;QAChB15J,MAAM,CAAE,CAAC,CAAE,GAAGqvK,SAAS;QACvBr1B,KAAK,CAAE,CAAC,CAAE,GAAG0f,GAAG,GAAG/V,QAAQ;QAC3B3jJ,MAAM,CAAE,CAAC,CAAE,GAAGsvK,UAAU;QAExB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAlF,eAAA;EAAA;EAIF,IAAMmF,gCAAgC,GAAG,IAAIv2J,YAAY,CAAE,CAAC,CAAE;EAAC,IAGzDw2J,cAAc,0BAAAC,iBAAA;IAAA3oJ,SAAA,CAAA0oJ,cAAA,EAAAC,iBAAA;IAAA,IAAAC,SAAA,GAAA1oJ,YAAA,CAAAwoJ,cAAA;IAEnB,SAAAA,eAAa3H,IAAI,EAAG;MAAA,IAAA8H,QAAA;MAAA7pK,eAAA,OAAA0pK,cAAA;MAEnBG,QAAA,GAAAD,SAAA,CAAAlwK,IAAA;MAEAmwK,QAAA,CAAKzB,KAAK,GAAGrG,IAAI;MACjB8H,QAAA,CAAKC,kBAAkB,EAAE;MACzBD,QAAA,CAAKE,UAAU,GAAG,CAAC;MACnBF,QAAA,CAAKjgH,IAAI,GAAG,CAAC;MACbigH,QAAA,CAAKzuB,SAAS,GAAG,GAAG;MAAC,OAAAyuB,QAAA;IAEtB;IAACrpK,YAAA,CAAAkpK,cAAA;MAAAhyK,GAAA;MAAAE,KAAA,EAED,SAAAoyK,YAAarC,MAAM,EAAEsC,eAAe,EAAG;QAEtC,IAAMlI,IAAI,GAAG4F,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK;UAC3CpzB,MAAM,GAAG2yB,MAAM,CAACjD,KAAK,CAAC1vB,MAAM;UAC5B4vB,OAAO,GAAG5vB,MAAM,CAACx3I,MAAM;UACvBuhK,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;UACnCJ,YAAY,GAAG8C,MAAM,CAAC3C,aAAa;UACnCkF,QAAQ,GAAGnI,IAAI,CAAC9yJ,IAAI;UACpBk7J,cAAc,GAAG,IAAI,CAACC,sBAAsB;QAE7C,IAAIC,cAAc,GAAGF,cAAc,CAAED,QAAQ,CAAE;QAE/C,IAAKG,cAAc,KAAKnuK,SAAS,EAAG;UAEnCmuK,cAAc,GAAG,CAAC,CAAC;UACnBF,cAAc,CAAED,QAAQ,CAAE,GAAGG,cAAc;QAE5C;QAEA,KAAM,IAAI5sK,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKmnK,OAAO,EAAE,EAAGnnK,CAAC,EAAG;UAEtC,IAAMw3I,KAAK,GAAGD,MAAM,CAAEv3I,CAAC,CAAE;YACxBwhJ,SAAS,GAAGhK,KAAK,CAACl3I,IAAI;UAEvB,IAAIw9J,OAAO,GAAG8O,cAAc,CAAEprB,SAAS,CAAE;UAEzC,IAAKsc,OAAO,KAAKr/J,SAAS,EAAG;YAE5B,EAAGq/J,OAAO,CAACqB,cAAc;YACzBmC,QAAQ,CAAEthK,CAAC,CAAE,GAAG89J,OAAO;UAExB,CAAC,MAAM;YAENA,OAAO,GAAGwD,QAAQ,CAAEthK,CAAC,CAAE;YAEvB,IAAK89J,OAAO,KAAKr/J,SAAS,EAAG;cAE5B;;cAEA,IAAKq/J,OAAO,CAAC2J,WAAW,KAAK,IAAI,EAAG;gBAEnC,EAAG3J,OAAO,CAACqB,cAAc;gBACzB,IAAI,CAAC0N,mBAAmB,CAAE/O,OAAO,EAAE2O,QAAQ,EAAEjrB,SAAS,CAAE;cAEzD;cAEA;YAED;YAEA,IAAM5mE,IAAI,GAAG4xF,eAAe,IAAIA,eAAe,CAC9ChF,iBAAiB,CAAExnK,CAAC,CAAE,CAAC89J,OAAO,CAACgD,UAAU;YAE1ChD,OAAO,GAAG,IAAID,aAAa,CAC1BkD,eAAe,CAACtlK,MAAM,CAAE6oK,IAAI,EAAE9iB,SAAS,EAAE5mE,IAAI,CAAE,EAC/C48D,KAAK,CAACc,aAAa,EAAEd,KAAK,CAACE,YAAY,EAAE,CAAE;YAE5C,EAAGomB,OAAO,CAACqB,cAAc;YACzB,IAAI,CAAC0N,mBAAmB,CAAE/O,OAAO,EAAE2O,QAAQ,EAAEjrB,SAAS,CAAE;YAExD8f,QAAQ,CAAEthK,CAAC,CAAE,GAAG89J,OAAO;UAExB;UAEAsJ,YAAY,CAAEpnK,CAAC,CAAE,CAACo5I,YAAY,GAAG0kB,OAAO,CAACz+I,MAAM;QAEhD;MAED;IAAC;MAAAplB,GAAA;MAAAE,KAAA,EAED,SAAAmuK,gBAAiB4B,MAAM,EAAG;QAEzB,IAAK,CAAE,IAAI,CAACvB,eAAe,CAAEuB,MAAM,CAAE,EAAG;UAEvC,IAAKA,MAAM,CAACzC,WAAW,KAAK,IAAI,EAAG;YAElC;YACA;;YAEA,IAAMgF,QAAQ,GAAG,CAAEvC,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK,EAAGn5J,IAAI;cACxDs7J,QAAQ,GAAG5C,MAAM,CAACjD,KAAK,CAACz1J,IAAI;cAC5Bu7J,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;YAEjD,IAAI,CAACP,WAAW,CAAErC,MAAM,EACvB6C,cAAc,IAAIA,cAAc,CAACE,YAAY,CAAE,CAAC,CAAE,CAAE;YAErD,IAAI,CAACC,kBAAkB,CAAEhD,MAAM,EAAE4C,QAAQ,EAAEL,QAAQ,CAAE;UAEtD;UAEA,IAAMnL,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;;UAEzC;UACA,KAAM,IAAIxnK,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGwvJ,QAAQ,CAACvhK,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;YAErD,IAAM89J,OAAO,GAAGwD,QAAQ,CAAEthK,CAAC,CAAE;YAE7B,IAAK89J,OAAO,CAACoB,QAAQ,EAAG,KAAK,CAAC,EAAG;cAEhC,IAAI,CAACiO,YAAY,CAAErP,OAAO,CAAE;cAC5BA,OAAO,CAAC6B,iBAAiB,EAAE;YAE5B;UAED;UAEA,IAAI,CAACyN,WAAW,CAAElD,MAAM,CAAE;QAE3B;MAED;IAAC;MAAAjwK,GAAA;MAAAE,KAAA,EAED,SAAAouK,kBAAmB2B,MAAM,EAAG;QAE3B,IAAK,IAAI,CAACvB,eAAe,CAAEuB,MAAM,CAAE,EAAG;UAErC,IAAM5I,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;;UAEzC;UACA,KAAM,IAAIxnK,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGwvJ,QAAQ,CAACvhK,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;YAErD,IAAM89J,OAAO,GAAGwD,QAAQ,CAAEthK,CAAC,CAAE;YAE7B,IAAK,EAAG89J,OAAO,CAACoB,QAAQ,KAAK,CAAC,EAAG;cAEhCpB,OAAO,CAAC+B,oBAAoB,EAAE;cAC9B,IAAI,CAACwN,gBAAgB,CAAEvP,OAAO,CAAE;YAEjC;UAED;UAEA,IAAI,CAACwP,eAAe,CAAEpD,MAAM,CAAE;QAE/B;MAED;;MAEA;IAAA;MAAAjwK,GAAA;MAAAE,KAAA,EAEA,SAAAkyK,mBAAA,EAAqB;QAEpB,IAAI,CAACkB,QAAQ,GAAG,EAAE,CAAC,CAAC;QACpB,IAAI,CAACC,eAAe,GAAG,CAAC;QAExB,IAAI,CAACR,cAAc,GAAG,CAAC,CAAC;QACxB;QACA;QACA;QACA;QACA;;QAGA,IAAI,CAAC9L,SAAS,GAAG,EAAE,CAAC,CAAC;QACrB,IAAI,CAACuM,gBAAgB,GAAG,CAAC;QAEzB,IAAI,CAACd,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC;;QAGlC,IAAI,CAACe,oBAAoB,GAAG,EAAE,CAAC,CAAC;QAChC,IAAI,CAACC,2BAA2B,GAAG,CAAC;QAEpC,IAAMtsH,KAAK,GAAG,IAAI;QAElB,IAAI,CAACgkH,KAAK,GAAG;UAEZuI,OAAO,EAAE;YACR,IAAIxnB,KAAKA,CAAA,EAAG;cAEX,OAAO/kG,KAAK,CAACksH,QAAQ,CAACxtK,MAAM;YAE7B,CAAC;YACD,IAAIulK,KAAKA,CAAA,EAAG;cAEX,OAAOjkH,KAAK,CAACmsH,eAAe;YAE7B;UACD,CAAC;UACDlM,QAAQ,EAAE;YACT,IAAIlb,KAAKA,CAAA,EAAG;cAEX,OAAO/kG,KAAK,CAAC6/G,SAAS,CAACnhK,MAAM;YAE9B,CAAC;YACD,IAAIulK,KAAKA,CAAA,EAAG;cAEX,OAAOjkH,KAAK,CAACosH,gBAAgB;YAE9B;UACD,CAAC;UACDI,mBAAmB,EAAE;YACpB,IAAIznB,KAAKA,CAAA,EAAG;cAEX,OAAO/kG,KAAK,CAACqsH,oBAAoB,CAAC3tK,MAAM;YAEzC,CAAC;YACD,IAAIulK,KAAKA,CAAA,EAAG;cAEX,OAAOjkH,KAAK,CAACssH,2BAA2B;YAEzC;UACD;QAED,CAAC;MAEF;;MAEA;IAAA;MAAA1zK,GAAA;MAAAE,KAAA,EAEA,SAAAwuK,gBAAiBuB,MAAM,EAAG;QAEzB,IAAM55J,KAAK,GAAG45J,MAAM,CAACzC,WAAW;QAChC,OAAOn3J,KAAK,KAAK,IAAI,IAAIA,KAAK,GAAG,IAAI,CAACk9J,eAAe;MAEtD;IAAC;MAAAvzK,GAAA;MAAAE,KAAA,EAED,SAAA+yK,mBAAoBhD,MAAM,EAAE4C,QAAQ,EAAEL,QAAQ,EAAG;QAEhD,IAAMmB,OAAO,GAAG,IAAI,CAACL,QAAQ;UAC5BO,aAAa,GAAG,IAAI,CAACd,cAAc;QAEpC,IAAID,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;QAE9C,IAAKC,cAAc,KAAKtuK,SAAS,EAAG;UAEnCsuK,cAAc,GAAG;YAEhBE,YAAY,EAAE,CAAE/C,MAAM,CAAE;YACxB6D,YAAY,EAAE,CAAC;UAEhB,CAAC;UAED7D,MAAM,CAACxC,iBAAiB,GAAG,CAAC;UAE5BoG,aAAa,CAAEhB,QAAQ,CAAE,GAAGC,cAAc;QAE3C,CAAC,MAAM;UAEN,IAAME,YAAY,GAAGF,cAAc,CAACE,YAAY;UAEhD/C,MAAM,CAACxC,iBAAiB,GAAGuF,YAAY,CAACltK,MAAM;UAC9CktK,YAAY,CAACztK,IAAI,CAAE0qK,MAAM,CAAE;QAE5B;QAEAA,MAAM,CAACzC,WAAW,GAAGmG,OAAO,CAAC7tK,MAAM;QACnC6tK,OAAO,CAACpuK,IAAI,CAAE0qK,MAAM,CAAE;QAEtB6C,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE,GAAGvC,MAAM;MAEjD;IAAC;MAAAjwK,GAAA;MAAAE,KAAA,EAED,SAAA6zK,sBAAuB9D,MAAM,EAAG;QAE/B,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;UAC5BU,kBAAkB,GAAGL,OAAO,CAAEA,OAAO,CAAC7tK,MAAM,GAAG,CAAC,CAAE;UAClDmuK,UAAU,GAAGhE,MAAM,CAACzC,WAAW;QAEhCwG,kBAAkB,CAACxG,WAAW,GAAGyG,UAAU;QAC3CN,OAAO,CAAEM,UAAU,CAAE,GAAGD,kBAAkB;QAC1CL,OAAO,CAAC1sK,GAAG,EAAE;QAEbgpK,MAAM,CAACzC,WAAW,GAAG,IAAI;QAGzB,IAAMqF,QAAQ,GAAG5C,MAAM,CAACjD,KAAK,CAACz1J,IAAI;UACjCs8J,aAAa,GAAG,IAAI,CAACd,cAAc;UACnCD,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;UAC1CqB,mBAAmB,GAAGpB,cAAc,CAACE,YAAY;UAEjDmB,eAAe,GACdD,mBAAmB,CAAEA,mBAAmB,CAACpuK,MAAM,GAAG,CAAC,CAAE;UAEtDsuK,gBAAgB,GAAGnE,MAAM,CAACxC,iBAAiB;QAE5C0G,eAAe,CAAC1G,iBAAiB,GAAG2G,gBAAgB;QACpDF,mBAAmB,CAAEE,gBAAgB,CAAE,GAAGD,eAAe;QACzDD,mBAAmB,CAACjtK,GAAG,EAAE;QAEzBgpK,MAAM,CAACxC,iBAAiB,GAAG,IAAI;QAG/B,IAAMqG,YAAY,GAAGhB,cAAc,CAACgB,YAAY;UAC/CtB,QAAQ,GAAG,CAAEvC,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK,EAAGn5J,IAAI;QAEpD,OAAOu8J,YAAY,CAAEtB,QAAQ,CAAE;QAE/B,IAAK0B,mBAAmB,CAACpuK,MAAM,KAAK,CAAC,EAAG;UAEvC,OAAO+tK,aAAa,CAAEhB,QAAQ,CAAE;QAEjC;QAEA,IAAI,CAACwB,gCAAgC,CAAEpE,MAAM,CAAE;MAEhD;IAAC;MAAAjwK,GAAA;MAAAE,KAAA,EAED,SAAAm0K,iCAAkCpE,MAAM,EAAG;QAE1C,IAAM5I,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;QAEzC,KAAM,IAAIxnK,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGwvJ,QAAQ,CAACvhK,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;UAErD,IAAM89J,OAAO,GAAGwD,QAAQ,CAAEthK,CAAC,CAAE;UAE7B,IAAK,EAAG89J,OAAO,CAACqB,cAAc,KAAK,CAAC,EAAG;YAEtC,IAAI,CAACoP,sBAAsB,CAAEzQ,OAAO,CAAE;UAEvC;QAED;MAED;IAAC;MAAA7jK,GAAA;MAAAE,KAAA,EAED,SAAAizK,YAAalD,MAAM,EAAG;QAErB;QACA;QACA;QACA;QACA;;QAEA,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;UAC5BiB,SAAS,GAAGtE,MAAM,CAACzC,WAAW;UAE9BgH,eAAe,GAAG,IAAI,CAACjB,eAAe,EAAG;UAEzCkB,mBAAmB,GAAGd,OAAO,CAAEa,eAAe,CAAE;QAEjDvE,MAAM,CAACzC,WAAW,GAAGgH,eAAe;QACpCb,OAAO,CAAEa,eAAe,CAAE,GAAGvE,MAAM;QAEnCwE,mBAAmB,CAACjH,WAAW,GAAG+G,SAAS;QAC3CZ,OAAO,CAAEY,SAAS,CAAE,GAAGE,mBAAmB;MAE3C;IAAC;MAAAz0K,GAAA;MAAAE,KAAA,EAED,SAAAmzK,gBAAiBpD,MAAM,EAAG;QAEzB;QACA;QACA;QACA;QACA;;QAEA,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;UAC5BiB,SAAS,GAAGtE,MAAM,CAACzC,WAAW;UAE9BkH,kBAAkB,GAAG,EAAG,IAAI,CAACnB,eAAe;UAE5CoB,gBAAgB,GAAGhB,OAAO,CAAEe,kBAAkB,CAAE;QAEjDzE,MAAM,CAACzC,WAAW,GAAGkH,kBAAkB;QACvCf,OAAO,CAAEe,kBAAkB,CAAE,GAAGzE,MAAM;QAEtC0E,gBAAgB,CAACnH,WAAW,GAAG+G,SAAS;QACxCZ,OAAO,CAAEY,SAAS,CAAE,GAAGI,gBAAgB;MAExC;;MAEA;IAAA;MAAA30K,GAAA;MAAAE,KAAA,EAEA,SAAA0yK,oBAAqB/O,OAAO,EAAE2O,QAAQ,EAAEjrB,SAAS,EAAG;QAEnD,IAAMkrB,cAAc,GAAG,IAAI,CAACC,sBAAsB;UACjDrL,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAE1B,IAAI2N,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;QAE9C,IAAKoC,aAAa,KAAKpwK,SAAS,EAAG;UAElCowK,aAAa,GAAG,CAAC,CAAC;UAClBnC,cAAc,CAAED,QAAQ,CAAE,GAAGoC,aAAa;QAE3C;QAEAA,aAAa,CAAErtB,SAAS,CAAE,GAAGsc,OAAO;QAEpCA,OAAO,CAAC2J,WAAW,GAAGnG,QAAQ,CAACvhK,MAAM;QACrCuhK,QAAQ,CAAC9hK,IAAI,CAAEs+J,OAAO,CAAE;MAEzB;IAAC;MAAA7jK,GAAA;MAAAE,KAAA,EAED,SAAAo0K,uBAAwBzQ,OAAO,EAAG;QAEjC,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;UAC9B4N,WAAW,GAAGhR,OAAO,CAACA,OAAO;UAC7B2O,QAAQ,GAAGqC,WAAW,CAACtN,QAAQ,CAAChwJ,IAAI;UACpCgwI,SAAS,GAAGstB,WAAW,CAACl0F,IAAI;UAC5B8xF,cAAc,GAAG,IAAI,CAACC,sBAAsB;UAC5CkC,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;UAE1CsC,mBAAmB,GAAGzN,QAAQ,CAAEA,QAAQ,CAACvhK,MAAM,GAAG,CAAC,CAAE;UACrDmuK,UAAU,GAAGpQ,OAAO,CAAC2J,WAAW;QAEjCsH,mBAAmB,CAACtH,WAAW,GAAGyG,UAAU;QAC5C5M,QAAQ,CAAE4M,UAAU,CAAE,GAAGa,mBAAmB;QAC5CzN,QAAQ,CAACpgK,GAAG,EAAE;QAEd,OAAO2tK,aAAa,CAAErtB,SAAS,CAAE;QAEjC,IAAK7nJ,MAAM,CAACmH,IAAI,CAAE+tK,aAAa,CAAE,CAAC9uK,MAAM,KAAK,CAAC,EAAG;UAEhD,OAAO2sK,cAAc,CAAED,QAAQ,CAAE;QAElC;MAED;IAAC;MAAAxyK,GAAA;MAAAE,KAAA,EAED,SAAAgzK,aAAcrP,OAAO,EAAG;QAEvB,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;UAC9BsN,SAAS,GAAG1Q,OAAO,CAAC2J,WAAW;UAE/BgH,eAAe,GAAG,IAAI,CAAChB,gBAAgB,EAAG;UAE1CuB,oBAAoB,GAAG1N,QAAQ,CAAEmN,eAAe,CAAE;QAEnD3Q,OAAO,CAAC2J,WAAW,GAAGgH,eAAe;QACrCnN,QAAQ,CAAEmN,eAAe,CAAE,GAAG3Q,OAAO;QAErCkR,oBAAoB,CAACvH,WAAW,GAAG+G,SAAS;QAC5ClN,QAAQ,CAAEkN,SAAS,CAAE,GAAGQ,oBAAoB;MAE7C;IAAC;MAAA/0K,GAAA;MAAAE,KAAA,EAED,SAAAkzK,iBAAkBvP,OAAO,EAAG;QAE3B,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;UAC9BsN,SAAS,GAAG1Q,OAAO,CAAC2J,WAAW;UAE/BkH,kBAAkB,GAAG,EAAG,IAAI,CAAClB,gBAAgB;UAE7CwB,iBAAiB,GAAG3N,QAAQ,CAAEqN,kBAAkB,CAAE;QAEnD7Q,OAAO,CAAC2J,WAAW,GAAGkH,kBAAkB;QACxCrN,QAAQ,CAAEqN,kBAAkB,CAAE,GAAG7Q,OAAO;QAExCmR,iBAAiB,CAACxH,WAAW,GAAG+G,SAAS;QACzClN,QAAQ,CAAEkN,SAAS,CAAE,GAAGS,iBAAiB;MAE1C;;MAGA;IAAA;MAAAh1K,GAAA;MAAAE,KAAA,EAEA,SAAAmwK,wBAAA,EAA0B;QAEzB,IAAMlD,YAAY,GAAG,IAAI,CAACsG,oBAAoB;UAC7Ce,eAAe,GAAG,IAAI,CAACd,2BAA2B,EAAG;QAEtD,IAAIz0B,WAAW,GAAGkuB,YAAY,CAAEqH,eAAe,CAAE;QAEjD,IAAKv1B,WAAW,KAAKz6I,SAAS,EAAG;UAEhCy6I,WAAW,GAAG,IAAIoD,iBAAiB,CAClC,IAAI7mI,YAAY,CAAE,CAAC,CAAE,EAAE,IAAIA,YAAY,CAAE,CAAC,CAAE,EAC5C,CAAC,EAAEu2J,gCAAgC,CAAE;UAEtC9yB,WAAW,CAACg2B,YAAY,GAAGT,eAAe;UAC1CrH,YAAY,CAAEqH,eAAe,CAAE,GAAGv1B,WAAW;QAE9C;QAEA,OAAOA,WAAW;MAEnB;IAAC;MAAAj/I,GAAA;MAAAE,KAAA,EAED,SAAA0vK,4BAA6B3wB,WAAW,EAAG;QAE1C,IAAMkuB,YAAY,GAAG,IAAI,CAACsG,oBAAoB;UAC7Cc,SAAS,GAAGt1B,WAAW,CAACg2B,YAAY;UAEpCP,kBAAkB,GAAG,EAAG,IAAI,CAAChB,2BAA2B;UAExDwB,qBAAqB,GAAG/H,YAAY,CAAEuH,kBAAkB,CAAE;QAE3Dz1B,WAAW,CAACg2B,YAAY,GAAGP,kBAAkB;QAC7CvH,YAAY,CAAEuH,kBAAkB,CAAE,GAAGz1B,WAAW;QAEhDi2B,qBAAqB,CAACD,YAAY,GAAGV,SAAS;QAC9CpH,YAAY,CAAEoH,SAAS,CAAE,GAAGW,qBAAqB;MAElD;;MAEA;MACA;MACA;IAAA;MAAAl1K,GAAA;MAAAE,KAAA,EACA,SAAAi1K,WAAY93B,IAAI,EAAE+3B,YAAY,EAAE31B,SAAS,EAAG;QAE3C,IAAM4qB,IAAI,GAAG+K,YAAY,IAAI,IAAI,CAAC1E,KAAK;UACtC8B,QAAQ,GAAGnI,IAAI,CAAC9yJ,IAAI;QAErB,IAAI89J,UAAU,GAAG,OAAOh4B,IAAI,KAAK,QAAQ,GAAG6I,aAAa,CAACU,UAAU,CAAEyjB,IAAI,EAAEhtB,IAAI,CAAE,GAAGA,IAAI;QAEzF,IAAMw1B,QAAQ,GAAGwC,UAAU,KAAK,IAAI,GAAGA,UAAU,CAAC99J,IAAI,GAAG8lI,IAAI;QAE7D,IAAMy1B,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;QACtD,IAAIN,eAAe,GAAG,IAAI;QAE1B,IAAK9yB,SAAS,KAAKj7I,SAAS,EAAG;UAE9B,IAAK6wK,UAAU,KAAK,IAAI,EAAG;YAE1B51B,SAAS,GAAG41B,UAAU,CAAC51B,SAAS;UAEjC,CAAC,MAAM;YAENA,SAAS,GAAGxsI,wBAAwB;UAErC;QAED;QAEA,IAAK6/J,cAAc,KAAKtuK,SAAS,EAAG;UAEnC,IAAM8wK,cAAc,GAAGxC,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE;UAE9D,IAAK8C,cAAc,KAAK9wK,SAAS,IAAI8wK,cAAc,CAAC71B,SAAS,KAAKA,SAAS,EAAG;YAE7E,OAAO61B,cAAc;UAEtB;;UAEA;UACA;UACA/C,eAAe,GAAGO,cAAc,CAACE,YAAY,CAAE,CAAC,CAAE;;UAElD;UACA,IAAKqC,UAAU,KAAK,IAAI,EACvBA,UAAU,GAAG9C,eAAe,CAACvF,KAAK;QAEpC;;QAEA;QACA,IAAKqI,UAAU,KAAK,IAAI,EAAG,OAAO,IAAI;;QAEtC;QACA,IAAME,SAAS,GAAG,IAAI3I,eAAe,CAAE,IAAI,EAAEyI,UAAU,EAAED,YAAY,EAAE31B,SAAS,CAAE;QAElF,IAAI,CAAC6yB,WAAW,CAAEiD,SAAS,EAAEhD,eAAe,CAAE;;QAE9C;QACA,IAAI,CAACU,kBAAkB,CAAEsC,SAAS,EAAE1C,QAAQ,EAAEL,QAAQ,CAAE;QAExD,OAAO+C,SAAS;MAEjB;;MAEA;IAAA;MAAAv1K,GAAA;MAAAE,KAAA,EACA,SAAAo1K,eAAgBj4B,IAAI,EAAE+3B,YAAY,EAAG;QAEpC,IAAM/K,IAAI,GAAG+K,YAAY,IAAI,IAAI,CAAC1E,KAAK;UACtC8B,QAAQ,GAAGnI,IAAI,CAAC9yJ,IAAI;UAEpB89J,UAAU,GAAG,OAAOh4B,IAAI,KAAK,QAAQ,GACpC6I,aAAa,CAACU,UAAU,CAAEyjB,IAAI,EAAEhtB,IAAI,CAAE,GAAGA,IAAI;UAE9Cw1B,QAAQ,GAAGwC,UAAU,GAAGA,UAAU,CAAC99J,IAAI,GAAG8lI,IAAI;UAE9Cy1B,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;QAEjD,IAAKC,cAAc,KAAKtuK,SAAS,EAAG;UAEnC,OAAOsuK,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE,IAAI,IAAI;QAEvD;QAEA,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAAxyK,GAAA;MAAAE,KAAA,EACA,SAAAs1K,cAAA,EAAgB;QAEf,IAAM7B,OAAO,GAAG,IAAI,CAACL,QAAQ;UAC5BmC,QAAQ,GAAG,IAAI,CAAClC,eAAe;QAEhC,KAAM,IAAIxtK,CAAC,GAAG0vK,QAAQ,GAAG,CAAC,EAAE1vK,CAAC,IAAI,CAAC,EAAE,EAAGA,CAAC,EAAG;UAE1C4tK,OAAO,CAAE5tK,CAAC,CAAE,CAACuB,IAAI,EAAE;QAEpB;QAEA,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAAtH,GAAA;MAAAE,KAAA,EACA,SAAAmxB,OAAQu/I,SAAS,EAAG;QAEnBA,SAAS,IAAI,IAAI,CAACltB,SAAS;QAE3B,IAAMiwB,OAAO,GAAG,IAAI,CAACL,QAAQ;UAC5BmC,QAAQ,GAAG,IAAI,CAAClC,eAAe;UAE/BrhH,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI0+G,SAAS;UAC7BC,aAAa,GAAG/5J,IAAI,CAAC6pB,IAAI,CAAEiwI,SAAS,CAAE;UAEtCxL,SAAS,GAAG,IAAI,CAACiN,UAAU,IAAI,CAAC;;QAEjC;;QAEA,KAAM,IAAItsK,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK0vK,QAAQ,EAAE,EAAG1vK,CAAC,EAAG;UAEvC,IAAMkqK,MAAM,GAAG0D,OAAO,CAAE5tK,CAAC,CAAE;UAE3BkqK,MAAM,CAACU,OAAO,CAAEz+G,IAAI,EAAE0+G,SAAS,EAAEC,aAAa,EAAEzL,SAAS,CAAE;QAE5D;;QAEA;;QAEA,IAAMiC,QAAQ,GAAG,IAAI,CAACJ,SAAS;UAC9ByE,SAAS,GAAG,IAAI,CAAC8H,gBAAgB;QAElC,KAAM,IAAIztK,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAK2lK,SAAS,EAAE,EAAG3lK,IAAC,EAAG;UAExCshK,QAAQ,CAAEthK,IAAC,CAAE,CAAC0+F,KAAK,CAAE2gE,SAAS,CAAE;QAEjC;QAEA,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAAplK,GAAA;MAAAE,KAAA,EACA,SAAAw1K,QAASC,aAAa,EAAG;QAExB,IAAI,CAACzjH,IAAI,GAAG,CAAC,CAAC,CAAC;QACf,KAAM,IAAInsD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACutK,QAAQ,CAACxtK,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEjD,IAAI,CAACutK,QAAQ,CAAEvtK,CAAC,CAAE,CAACmsD,IAAI,GAAG,CAAC,CAAC,CAAC;QAE9B;;QAEA,OAAO,IAAI,CAAC7gC,MAAM,CAAEskJ,aAAa,CAAE,CAAC,CAAC;MAEtC;;MAEA;IAAA;MAAA31K,GAAA;MAAAE,KAAA,EACA,SAAAuwK,QAAA,EAAU;QAET,OAAO,IAAI,CAACC,KAAK;MAElB;;MAEA;IAAA;MAAA1wK,GAAA;MAAAE,KAAA,EACA,SAAA01K,YAAav4B,IAAI,EAAG;QAEnB,IAAMs2B,OAAO,GAAG,IAAI,CAACL,QAAQ;UAC5BT,QAAQ,GAAGx1B,IAAI,CAAC9lI,IAAI;UACpBs8J,aAAa,GAAG,IAAI,CAACd,cAAc;UACnCD,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;QAE3C,IAAKC,cAAc,KAAKtuK,SAAS,EAAG;UAEnC;UACA;UACA;;UAEA,IAAMqxK,eAAe,GAAG/C,cAAc,CAACE,YAAY;UAEnD,KAAM,IAAIjtK,CAAC,GAAG,CAAC,EAAE8R,CAAC,GAAGg+J,eAAe,CAAC/vK,MAAM,EAAEC,CAAC,KAAK8R,CAAC,EAAE,EAAG9R,CAAC,EAAG;YAE5D,IAAMkqK,MAAM,GAAG4F,eAAe,CAAE9vK,CAAC,CAAE;YAEnC,IAAI,CAACuoK,iBAAiB,CAAE2B,MAAM,CAAE;YAEhC,IAAMgE,UAAU,GAAGhE,MAAM,CAACzC,WAAW;cACpCwG,kBAAkB,GAAGL,OAAO,CAAEA,OAAO,CAAC7tK,MAAM,GAAG,CAAC,CAAE;YAEnDmqK,MAAM,CAACzC,WAAW,GAAG,IAAI;YACzByC,MAAM,CAACxC,iBAAiB,GAAG,IAAI;YAE/BuG,kBAAkB,CAACxG,WAAW,GAAGyG,UAAU;YAC3CN,OAAO,CAAEM,UAAU,CAAE,GAAGD,kBAAkB;YAC1CL,OAAO,CAAC1sK,GAAG,EAAE;YAEb,IAAI,CAACotK,gCAAgC,CAAEpE,MAAM,CAAE;UAEhD;UAEA,OAAO4D,aAAa,CAAEhB,QAAQ,CAAE;QAEjC;MAED;;MAEA;IAAA;MAAA7yK,GAAA;MAAAE,KAAA,EACA,SAAA41K,YAAazL,IAAI,EAAG;QAEnB,IAAMmI,QAAQ,GAAGnI,IAAI,CAAC9yJ,IAAI;UACzBs8J,aAAa,GAAG,IAAI,CAACd,cAAc;QAEpC,KAAM,IAAMF,QAAQ,IAAIgB,aAAa,EAAG;UAEvC,IAAMC,YAAY,GAAGD,aAAa,CAAEhB,QAAQ,CAAE,CAACiB,YAAY;YAC1D7D,MAAM,GAAG6D,YAAY,CAAEtB,QAAQ,CAAE;UAElC,IAAKvC,MAAM,KAAKzrK,SAAS,EAAG;YAE3B,IAAI,CAAC8pK,iBAAiB,CAAE2B,MAAM,CAAE;YAChC,IAAI,CAAC8D,qBAAqB,CAAE9D,MAAM,CAAE;UAErC;QAED;QAEA,IAAMwC,cAAc,GAAG,IAAI,CAACC,sBAAsB;UACjDkC,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;QAE3C,IAAKoC,aAAa,KAAKpwK,SAAS,EAAG;UAElC,KAAM,IAAM+iJ,SAAS,IAAIqtB,aAAa,EAAG;YAExC,IAAM/Q,OAAO,GAAG+Q,aAAa,CAAErtB,SAAS,CAAE;YAC1Csc,OAAO,CAAC+B,oBAAoB,EAAE;YAC9B,IAAI,CAAC0O,sBAAsB,CAAEzQ,OAAO,CAAE;UAEvC;QAED;MAED;;MAEA;IAAA;MAAA7jK,GAAA;MAAAE,KAAA,EACA,SAAA61K,cAAe14B,IAAI,EAAE+3B,YAAY,EAAG;QAEnC,IAAMnF,MAAM,GAAG,IAAI,CAACqF,cAAc,CAAEj4B,IAAI,EAAE+3B,YAAY,CAAE;QAExD,IAAKnF,MAAM,KAAK,IAAI,EAAG;UAEtB,IAAI,CAAC3B,iBAAiB,CAAE2B,MAAM,CAAE;UAChC,IAAI,CAAC8D,qBAAqB,CAAE9D,MAAM,CAAE;QAErC;MAED;IAAC;IAAA,OAAA+B,cAAA;EAAA,EAjvB2Bp8J,eAAe;EAAA,IAqvBtCogK,OAAO;IAEZ,SAAAA,QAAa91K,KAAK,EAAG;MAAAoI,eAAA,OAAA0tK,OAAA;MAEpB,IAAI,CAAC91K,KAAK,GAAGA,KAAK;IAEnB;IAAC4I,YAAA,CAAAktK,OAAA;MAAAh2K,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAIs5J,OAAO,CAAE,IAAI,CAAC91K,KAAK,CAACwc,KAAK,KAAKlY,SAAS,GAAG,IAAI,CAACtE,KAAK,GAAG,IAAI,CAACA,KAAK,CAACwc,KAAK,EAAE,CAAE;MAEvF;IAAC;IAAA,OAAAs5J,OAAA;EAAA;EAIF,IAAI9qI,EAAE,GAAG,CAAC;EAAC,IAEL+qI,aAAa,0BAAAC,iBAAA;IAAA5sJ,SAAA,CAAA2sJ,aAAA,EAAAC,iBAAA;IAAA,IAAAC,SAAA,GAAA3sJ,YAAA,CAAAysJ,aAAA;IAElB,SAAAA,cAAA,EAAc;MAAA,IAAAG,QAAA;MAAA9tK,eAAA,OAAA2tK,aAAA;MAEbG,QAAA,GAAAD,SAAA,CAAAn0K,IAAA;MAEAo0K,QAAA,CAAKC,eAAe,GAAG,IAAI;MAE3B32K,MAAM,CAACI,cAAc,CAAAwqB,sBAAA,CAAA8rJ,QAAA,GAAQ,IAAI,EAAE;QAAEl2K,KAAK,EAAEgrC,EAAE;MAAI,CAAC,CAAE;MAErDkrI,QAAA,CAAK/vK,IAAI,GAAG,EAAE;MAEd+vK,QAAA,CAAK95H,KAAK,GAAGtnC,eAAe;MAC5BohK,QAAA,CAAK1tH,QAAQ,GAAG,EAAE;MAAC,OAAA0tH,QAAA;IAEpB;IAACttK,YAAA,CAAAmtK,aAAA;MAAAj2K,GAAA;MAAAE,KAAA,EAED,SAAA2c,IAAK2tC,OAAO,EAAG;QAEd,IAAI,CAAC9B,QAAQ,CAACnjD,IAAI,CAAEilD,OAAO,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAAxqD,GAAA;MAAAE,KAAA,EAED,SAAA2qC,OAAQ2f,OAAO,EAAG;QAEjB,IAAMn0C,KAAK,GAAG,IAAI,CAACqyC,QAAQ,CAACzyC,OAAO,CAAEu0C,OAAO,CAAE;QAE9C,IAAKn0C,KAAK,KAAK,CAAE,CAAC,EAAG,IAAI,CAACqyC,QAAQ,CAACpyC,MAAM,CAAED,KAAK,EAAE,CAAC,CAAE;QAErD,OAAO,IAAI;MAEZ;IAAC;MAAArW,GAAA;MAAAE,KAAA,EAED,SAAAo2K,QAASjwK,IAAI,EAAG;QAEf,IAAI,CAACA,IAAI,GAAGA,IAAI;QAEhB,OAAO,IAAI;MAEZ;IAAC;MAAArG,GAAA;MAAAE,KAAA,EAED,SAAAu8C,SAAUv8C,KAAK,EAAG;QAEjB,IAAI,CAACo8C,KAAK,GAAGp8C,KAAK;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAAF,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAACrV,aAAa,CAAE;UAAExU,IAAI,EAAE;QAAU,CAAC,CAAE;QAEzC,OAAO,IAAI;MAEZ;IAAC;MAAA/B,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd,IAAI,CAAClkB,IAAI,GAAGkkB,MAAM,CAAClkB,IAAI;QACvB,IAAI,CAACi2C,KAAK,GAAG/xB,MAAM,CAAC+xB,KAAK;QAEzB,IAAMi6H,cAAc,GAAGhsJ,MAAM,CAACm+B,QAAQ;QAEtC,IAAI,CAACA,QAAQ,CAAC5iD,MAAM,GAAG,CAAC;QAExB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG6/J,cAAc,CAACzwK,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEzD,IAAI,CAAC2iD,QAAQ,CAACnjD,IAAI,CAAEgxK,cAAc,CAAExwK,CAAC,CAAE,CAAC2W,KAAK,EAAE,CAAE;QAElD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA1c,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;IAAA,OAAAs5J,aAAA;EAAA,EAlF0BrgK,eAAe;EAAA,IAsFrC4gK,0BAA0B,0BAAAC,kBAAA;IAAAntJ,SAAA,CAAAktJ,0BAAA,EAAAC,kBAAA;IAAA,IAAAC,SAAA,GAAAltJ,YAAA,CAAAgtJ,0BAAA;IAE/B,SAAAA,2BAAa//J,KAAK,EAAEutC,MAAM,EAAEomB,gBAAgB,GAAG,CAAC,EAAG;MAAA,IAAAusG,QAAA;MAAAruK,eAAA,OAAAkuK,0BAAA;MAElDG,QAAA,GAAAD,SAAA,CAAA10K,IAAA,OAAOyU,KAAK,EAAEutC,MAAM;MAEpB2yH,QAAA,CAAK/rG,4BAA4B,GAAG,IAAI;MAExC+rG,QAAA,CAAKvsG,gBAAgB,GAAGA,gBAAgB;MAAC,OAAAusG,QAAA;IAE1C;IAAC7tK,YAAA,CAAA0tK,0BAAA;MAAAx2K,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAs7H,0BAAA,CAAA72K,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM;QAElB,IAAI,CAAC6/C,gBAAgB,GAAG7/C,MAAM,CAAC6/C,gBAAgB;QAE/C,OAAO,IAAI;MAEZ;IAAC;MAAApqE,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAO0L,IAAI,EAAG;QAEb,IAAMkmG,EAAE,GAAArzE,IAAA,CAAAC,eAAA,CAAAs7H,0BAAA,CAAA72K,SAAA,kBAAAqC,IAAA,OAAgBomB,IAAI,CAAE;QAE9BkmG,EAAE,CAAClkD,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;QAE3C,OAAOkkD,EAAE;MAEV;IAAC;MAAAtuH,GAAA;MAAAE,KAAA,EAED,SAAAsoB,OAAQJ,IAAI,EAAG;QAEd,IAAM6qG,IAAI,GAAAh4E,IAAA,CAAAC,eAAA,CAAAs7H,0BAAA,CAAA72K,SAAA,mBAAAqC,IAAA,OAAiBomB,IAAI,CAAE;QAEjC6qG,IAAI,CAACroD,4BAA4B,GAAG,IAAI;QACxCqoD,IAAI,CAAC7oD,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;QAE7C,OAAO6oD,IAAI;MAEZ;IAAC;IAAA,OAAAujD,0BAAA;EAAA,EAzCuCtoD,iBAAiB;EAAA,IA6CpD0oD,iBAAiB;IAEtB,SAAAA,kBAAaxxJ,MAAM,EAAErjB,IAAI,EAAEo6C,QAAQ,EAAE+X,WAAW,EAAE5jC,KAAK,EAAG;MAAAhoB,eAAA,OAAAsuK,iBAAA;MAEzD,IAAI,CAACv1H,mBAAmB,GAAG,IAAI;MAE/B,IAAI,CAACh7C,IAAI,GAAG,EAAE;MAEd,IAAI,CAAC+e,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACrjB,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACo6C,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAAC+X,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAAC5jC,KAAK,GAAGA,KAAK;MAElB,IAAI,CAAC/H,OAAO,GAAG,CAAC;IAEjB;IAACzf,YAAA,CAAA8tK,iBAAA;MAAA52K,GAAA;MAAAsb,GAAA,EAED,SAAAA,IAAiBpb,KAAK,EAAG;QAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAACqoB,OAAO,EAAG;MAEtC;IAAC;MAAAvoB,GAAA;MAAAE,KAAA,EAED,SAAAggK,UAAW96I,MAAM,EAAG;QAEnB,IAAI,CAACA,MAAM,GAAGA,MAAM;QAEpB,OAAO,IAAI;MAEZ;IAAC;MAAAplB,GAAA;MAAAE,KAAA,EAED,SAAA22K,QAAS90K,IAAI,EAAEmyD,WAAW,EAAG;QAE5B,IAAI,CAACnyD,IAAI,GAAGA,IAAI;QAChB,IAAI,CAACmyD,WAAW,GAAGA,WAAW;QAE9B,OAAO,IAAI;MAEZ;IAAC;MAAAl0D,GAAA;MAAAE,KAAA,EAED,SAAA42K,YAAa36H,QAAQ,EAAG;QAEvB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAAn8C,GAAA;MAAAE,KAAA,EAED,SAAA62K,SAAUzmJ,KAAK,EAAG;QAEjB,IAAI,CAACA,KAAK,GAAGA,KAAK;QAElB,OAAO,IAAI;MAEZ;IAAC;IAAA,OAAAsmJ,iBAAA;EAAA;EAAA,IAIII,SAAS;IAEd,SAAAA,UAAa94I,MAAM,EAAEC,SAAS,EAAEyH,IAAI,GAAG,CAAC,EAAEC,GAAG,GAAGhN,QAAQ,EAAG;MAAAvwB,eAAA,OAAA0uK,SAAA;MAE1D,IAAI,CAAC54I,GAAG,GAAG,IAAIH,GAAG,CAAEC,MAAM,EAAEC,SAAS,CAAE;MACvC;;MAEA,IAAI,CAACyH,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;MACd,IAAI,CAACrP,MAAM,GAAG,IAAI;MAClB,IAAI,CAAC2Q,MAAM,GAAG,IAAIP,MAAM,EAAE;MAE1B,IAAI,CAACusC,MAAM,GAAG;QACb5tB,IAAI,EAAE,CAAC,CAAC;QACR2vE,IAAI,EAAE;UAAEje,SAAS,EAAE;QAAE,CAAC;QACtBoZ,GAAG,EAAE,CAAC,CAAC;QACP2G,MAAM,EAAE;UAAE/f,SAAS,EAAE;QAAE,CAAC;QACxB0Y,MAAM,EAAE,CAAC;MACV,CAAC;IAEF;IAAC7mH,YAAA,CAAAkuK,SAAA;MAAAh3K,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAK4iB,MAAM,EAAEC,SAAS,EAAG;QAExB;;QAEA,IAAI,CAACC,GAAG,CAAC9iB,GAAG,CAAE4iB,MAAM,EAAEC,SAAS,CAAE;MAElC;IAAC;MAAAn+B,GAAA;MAAAE,KAAA,EAED,SAAA+2K,cAAeC,MAAM,EAAE1gJ,MAAM,EAAG;QAE/B,IAAKA,MAAM,CAAC20B,mBAAmB,EAAG;UAEjC,IAAI,CAAC/sB,GAAG,CAACF,MAAM,CAAC9F,qBAAqB,CAAE5B,MAAM,CAACK,WAAW,CAAE;UAC3D,IAAI,CAACuH,GAAG,CAACD,SAAS,CAAC7iB,GAAG,CAAE47J,MAAM,CAACl/J,CAAC,EAAEk/J,MAAM,CAAC5+J,CAAC,EAAE,GAAG,CAAE,CAACqe,SAAS,CAAEH,MAAM,CAAE,CAACvZ,GAAG,CAAE,IAAI,CAACmhB,GAAG,CAACF,MAAM,CAAE,CAACriB,SAAS,EAAE;UACxG,IAAI,CAAC2a,MAAM,GAAGA,MAAM;QAErB,CAAC,MAAM,IAAKA,MAAM,CAAC65C,oBAAoB,EAAG;UAEzC,IAAI,CAACjyC,GAAG,CAACF,MAAM,CAAC5iB,GAAG,CAAE47J,MAAM,CAACl/J,CAAC,EAAEk/J,MAAM,CAAC5+J,CAAC,EAAE,CAAEke,MAAM,CAACoP,IAAI,GAAGpP,MAAM,CAACqP,GAAG,KAAOrP,MAAM,CAACoP,IAAI,GAAGpP,MAAM,CAACqP,GAAG,CAAE,CAAE,CAAClP,SAAS,CAAEH,MAAM,CAAE,CAAC,CAAC;UAC5H,IAAI,CAAC4H,GAAG,CAACD,SAAS,CAAC7iB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,CAACwb,kBAAkB,CAAEN,MAAM,CAACK,WAAW,CAAE;UAC5E,IAAI,CAACL,MAAM,GAAGA,MAAM;QAErB,CAAC,MAAM;UAEN/sB,OAAO,CAAChG,KAAK,CAAE,4CAA4C,GAAG+yB,MAAM,CAACz0B,IAAI,CAAE;QAE5E;MAED;IAAC;MAAA/B,GAAA;MAAAE,KAAA,EAED,SAAAi3K,gBAAiBpwK,MAAM,EAAEknC,SAAS,GAAG,IAAI,EAAEoY,UAAU,GAAG,EAAE,EAAG;QAE5D8wH,gBAAe,CAAEpwK,MAAM,EAAE,IAAI,EAAEs/C,UAAU,EAAEpY,SAAS,CAAE;QAEtDoY,UAAU,CAAC2zB,IAAI,CAAEo9F,OAAO,CAAE;QAE1B,OAAO/wH,UAAU;MAElB;IAAC;MAAArmD,GAAA;MAAAE,KAAA,EAED,SAAAm3K,iBAAkBrxG,OAAO,EAAE/3B,SAAS,GAAG,IAAI,EAAEoY,UAAU,GAAG,EAAE,EAAG;QAE9D,KAAM,IAAItgD,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGsvD,OAAO,CAAClgE,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAElDoxK,gBAAe,CAAEnxG,OAAO,CAAEjgE,CAAC,CAAE,EAAE,IAAI,EAAEsgD,UAAU,EAAEpY,SAAS,CAAE;QAE7D;QAEAoY,UAAU,CAAC2zB,IAAI,CAAEo9F,OAAO,CAAE;QAE1B,OAAO/wH,UAAU;MAElB;IAAC;IAAA,OAAA2wH,SAAA;EAAA;EAIF,SAASI,OAAOA,CAAE58J,CAAC,EAAEC,CAAC,EAAG;IAExB,OAAOD,CAAC,CAAC4vB,QAAQ,GAAG3vB,CAAC,CAAC2vB,QAAQ;EAE/B;EAEA,SAAS+sI,gBAAeA,CAAEpwK,MAAM,EAAEq/C,SAAS,EAAEC,UAAU,EAAEpY,SAAS,EAAG;IAEpE,IAAKlnC,MAAM,CAACogC,MAAM,CAAC/f,IAAI,CAAEg/B,SAAS,CAACjf,MAAM,CAAE,EAAG;MAE7CpgC,MAAM,CAAC6kC,OAAO,CAAEwa,SAAS,EAAEC,UAAU,CAAE;IAExC;IAEA,IAAKpY,SAAS,KAAK,IAAI,EAAG;MAEzB,IAAMrT,QAAQ,GAAG7zB,MAAM,CAAC6zB,QAAQ;MAEhC,KAAM,IAAI70B,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGkkB,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;QAEnDoxK,gBAAe,CAAEv8I,QAAQ,CAAE70B,CAAC,CAAE,EAAEqgD,SAAS,EAAEC,UAAU,EAAE,IAAI,CAAE;MAE9D;IAED;EAED;;EAEA;AACD;AACA;AACA;AACA;AACA;EALC,IAOMixH,SAAS;IAEd,SAAAA,UAAav/I,MAAM,GAAG,CAAC,EAAEC,GAAG,GAAG,CAAC,EAAEtZ,KAAK,GAAG,CAAC,EAAG;MAAApW,eAAA,OAAAgvK,SAAA;MAE7C,IAAI,CAACv/I,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,GAAG,GAAGA,GAAG,CAAC,CAAC;MAChB,IAAI,CAACtZ,KAAK,GAAGA,KAAK,CAAC,CAAC;;MAEpB,OAAO,IAAI;IAEZ;IAAC5V,YAAA,CAAAwuK,SAAA;MAAAt3K,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKyc,MAAM,EAAEC,GAAG,EAAEtZ,KAAK,EAAG;QAEzB,IAAI,CAACqZ,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACC,GAAG,GAAGA,GAAG;QACd,IAAI,CAACtZ,KAAK,GAAGA,KAAK;QAElB,OAAO,IAAI;MAEZ;IAAC;MAAA1e,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM46J,KAAK,EAAG;QAEb,IAAI,CAACx/I,MAAM,GAAGw/I,KAAK,CAACx/I,MAAM;QAC1B,IAAI,CAACC,GAAG,GAAGu/I,KAAK,CAACv/I,GAAG;QACpB,IAAI,CAACtZ,KAAK,GAAG64J,KAAK,CAAC74J,KAAK;QAExB,OAAO,IAAI;MAEZ;;MAEA;IAAA;MAAA1e,GAAA;MAAAE,KAAA,EACA,SAAAs3K,SAAA,EAAW;QAEV,IAAMC,GAAG,GAAG,QAAQ;QACpB,IAAI,CAACz/I,GAAG,GAAGlhB,IAAI,CAACa,GAAG,CAAE8/J,GAAG,EAAE3gK,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACC,EAAE,GAAG0gK,GAAG,EAAE,IAAI,CAACz/I,GAAG,CAAE,CAAE;QAE/D,OAAO,IAAI;MAEZ;IAAC;MAAAh4B,GAAA;MAAAE,KAAA,EAED,SAAAsmC,eAAgB5pB,CAAC,EAAG;QAEnB,OAAO,IAAI,CAAC86J,sBAAsB,CAAE96J,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,EAAEsE,CAAC,CAACqP,CAAC,CAAE;MAEpD;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAw3K,uBAAwB1/J,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAEjC,IAAI,CAAC8L,MAAM,GAAGjhB,IAAI,CAACsH,IAAI,CAAEpG,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,GAAG2T,CAAC,GAAGA,CAAC,CAAE;QAEhD,IAAK,IAAI,CAAC8L,MAAM,KAAK,CAAC,EAAG;UAExB,IAAI,CAACrZ,KAAK,GAAG,CAAC;UACd,IAAI,CAACsZ,GAAG,GAAG,CAAC;QAEb,CAAC,MAAM;UAEN,IAAI,CAACtZ,KAAK,GAAG5H,IAAI,CAACyH,KAAK,CAAEvG,CAAC,EAAEiU,CAAC,CAAE;UAC/B,IAAI,CAAC+L,GAAG,GAAGlhB,IAAI,CAAC6H,IAAI,CAAElH,KAAK,CAAEa,CAAC,GAAG,IAAI,CAACyf,MAAM,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;QAEzD;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/3B,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;IAAA,OAAA26J,SAAA;EAAA;EAIF;AACD;AACA;EAFC,IAIMK,WAAW;IAEhB,SAAAA,YAAa5/I,MAAM,GAAG,CAAC,EAAErZ,KAAK,GAAG,CAAC,EAAEpG,CAAC,GAAG,CAAC,EAAG;MAAAhQ,eAAA,OAAAqvK,WAAA;MAE3C,IAAI,CAAC5/I,MAAM,GAAGA,MAAM,CAAC,CAAC;MACtB,IAAI,CAACrZ,KAAK,GAAGA,KAAK,CAAC,CAAC;MACpB,IAAI,CAACpG,CAAC,GAAGA,CAAC,CAAC,CAAC;;MAEZ,OAAO,IAAI;IAEZ;IAACxP,YAAA,CAAA6uK,WAAA;MAAA33K,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKyc,MAAM,EAAErZ,KAAK,EAAEpG,CAAC,EAAG;QAEvB,IAAI,CAACyf,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACrZ,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACpG,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM46J,KAAK,EAAG;QAEb,IAAI,CAACx/I,MAAM,GAAGw/I,KAAK,CAACx/I,MAAM;QAC1B,IAAI,CAACrZ,KAAK,GAAG64J,KAAK,CAAC74J,KAAK;QACxB,IAAI,CAACpG,CAAC,GAAGi/J,KAAK,CAACj/J,CAAC;QAEhB,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAsmC,eAAgB5pB,CAAC,EAAG;QAEnB,OAAO,IAAI,CAAC86J,sBAAsB,CAAE96J,CAAC,CAAC5E,CAAC,EAAE4E,CAAC,CAACtE,CAAC,EAAEsE,CAAC,CAACqP,CAAC,CAAE;MAEpD;IAAC;MAAAjsB,GAAA;MAAAE,KAAA,EAED,SAAAw3K,uBAAwB1/J,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;QAEjC,IAAI,CAAC8L,MAAM,GAAGjhB,IAAI,CAACsH,IAAI,CAAEpG,CAAC,GAAGA,CAAC,GAAGiU,CAAC,GAAGA,CAAC,CAAE;QACxC,IAAI,CAACvN,KAAK,GAAG5H,IAAI,CAACyH,KAAK,CAAEvG,CAAC,EAAEiU,CAAC,CAAE;QAC/B,IAAI,CAAC3T,CAAC,GAAGA,CAAC;QAEV,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;IAAA,OAAAg7J,WAAA;EAAA;EAIF,IAAMC,SAAS,GAAG,aAAc,IAAI57J,OAAO,EAAE;EAAC,IAExC67J,IAAI;IAET,SAAAA,KAAangK,GAAG,GAAG,IAAIsE,OAAO,CAAE,CAAE6c,QAAQ,EAAE,CAAEA,QAAQ,CAAE,EAAElhB,GAAG,GAAG,IAAIqE,OAAO,CAAE,CAAE6c,QAAQ,EAAE,CAAEA,QAAQ,CAAE,EAAG;MAAAvwB,eAAA,OAAAuvK,IAAA;MAEvG,IAAI,CAACC,MAAM,GAAG,IAAI;MAElB,IAAI,CAACpgK,GAAG,GAAGA,GAAG;MACd,IAAI,CAACC,GAAG,GAAGA,GAAG;IAEf;IAAC7O,YAAA,CAAA+uK,IAAA;MAAA73K,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAK5D,GAAG,EAAEC,GAAG,EAAG;QAEf,IAAI,CAACD,GAAG,CAACiF,IAAI,CAAEjF,GAAG,CAAE;QACpB,IAAI,CAACC,GAAG,CAACgF,IAAI,CAAEhF,GAAG,CAAE;QAEpB,OAAO,IAAI;MAEZ;IAAC;MAAA3X,GAAA;MAAAE,KAAA,EAED,SAAAk5B,cAAeC,MAAM,EAAG;QAEvB,IAAI,CAACL,SAAS,EAAE;QAEhB,KAAM,IAAIjzB,CAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAG4I,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG0qB,EAAE,EAAE1qB,CAAC,EAAG,EAAG;UAEnD,IAAI,CAACkzB,aAAa,CAAEI,MAAM,CAAEtzB,CAAC,CAAE,CAAE;QAElC;QAEA,OAAO,IAAI;MAEZ;IAAC;MAAA/F,GAAA;MAAAE,KAAA,EAED,SAAAo5B,qBAAsBvZ,MAAM,EAAEwZ,IAAI,EAAG;QAEpC,IAAMC,QAAQ,GAAGo+I,SAAS,CAACj7J,IAAI,CAAE4c,IAAI,CAAE,CAAClc,cAAc,CAAE,GAAG,CAAE;QAC7D,IAAI,CAAC3F,GAAG,CAACiF,IAAI,CAAEoD,MAAM,CAAE,CAAC9C,GAAG,CAAEuc,QAAQ,CAAE;QACvC,IAAI,CAAC7hB,GAAG,CAACgF,IAAI,CAAEoD,MAAM,CAAE,CAAClD,GAAG,CAAE2c,QAAQ,CAAE;QAEvC,OAAO,IAAI;MAEZ;IAAC;MAAAx5B,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;MAAA3c,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAMid,GAAG,EAAG;QAEX,IAAI,CAACliB,GAAG,CAACiF,IAAI,CAAEid,GAAG,CAACliB,GAAG,CAAE;QACxB,IAAI,CAACC,GAAG,CAACgF,IAAI,CAAEid,GAAG,CAACjiB,GAAG,CAAE;QAExB,OAAO,IAAI;MAEZ;IAAC;MAAA3X,GAAA;MAAAE,KAAA,EAED,SAAA84B,UAAA,EAAY;QAEX,IAAI,CAACthB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACN,GAAG,CAACY,CAAC,GAAG,CAAEugB,QAAQ;QACpC,IAAI,CAAClhB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,CAAEugB,QAAQ;QAEpC,OAAO,IAAI;MAEZ;IAAC;MAAA74B,GAAA;MAAAE,KAAA,EAED,SAAA25B,QAAA,EAAU;QAET;;QAEA,OAAS,IAAI,CAACliB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAQ,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAG;MAElE;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA45B,UAAWpxB,MAAM,EAAG;QAEnB,OAAO,IAAI,CAACmxB,OAAO,EAAE,GAAGnxB,MAAM,CAAC4S,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,GAAG5S,MAAM,CAACqU,UAAU,CAAE,IAAI,CAACrF,GAAG,EAAE,IAAI,CAACC,GAAG,CAAE,CAAC0F,cAAc,CAAE,GAAG,CAAE;MAE3G;IAAC;MAAArd,GAAA;MAAAE,KAAA,EAED,SAAA65B,QAASrxB,MAAM,EAAG;QAEjB,OAAO,IAAI,CAACmxB,OAAO,EAAE,GAAGnxB,MAAM,CAAC4S,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,GAAG5S,MAAM,CAACyU,UAAU,CAAE,IAAI,CAACxF,GAAG,EAAE,IAAI,CAACD,GAAG,CAAE;MAErF;IAAC;MAAA1X,GAAA;MAAAE,KAAA,EAED,SAAA+4B,cAAee,KAAK,EAAG;QAEtB,IAAI,CAACtiB,GAAG,CAACA,GAAG,CAAEsiB,KAAK,CAAE;QACrB,IAAI,CAACriB,GAAG,CAACA,GAAG,CAAEqiB,KAAK,CAAE;QAErB,OAAO,IAAI;MAEZ;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAA+5B,eAAgBC,MAAM,EAAG;QAExB,IAAI,CAACxiB,GAAG,CAACuF,GAAG,CAAEid,MAAM,CAAE;QACtB,IAAI,CAACviB,GAAG,CAACkF,GAAG,CAAEqd,MAAM,CAAE;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAl6B,GAAA;MAAAE,KAAA,EAED,SAAAi6B,eAAgB9d,MAAM,EAAG;QAExB,IAAI,CAAC3E,GAAG,CAACoF,SAAS,CAAE,CAAET,MAAM,CAAE;QAC9B,IAAI,CAAC1E,GAAG,CAACmF,SAAS,CAAET,MAAM,CAAE;QAE5B,OAAO,IAAI;MAEZ;IAAC;MAAArc,GAAA;MAAAE,KAAA,EAED,SAAA26B,cAAeb,KAAK,EAAG;QAEtB,OAAOA,KAAK,CAAChiB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAIgiB,KAAK,CAAChiB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAClDgiB,KAAK,CAAC1hB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAI0hB,KAAK,CAAC1hB,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,KAAK,GAAG,IAAI;MAE7D;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA46B,YAAalB,GAAG,EAAG;QAElB,OAAO,IAAI,CAACliB,GAAG,CAACM,CAAC,IAAI4hB,GAAG,CAACliB,GAAG,CAACM,CAAC,IAAI4hB,GAAG,CAACjiB,GAAG,CAACK,CAAC,IAAI,IAAI,CAACL,GAAG,CAACK,CAAC,IACxD,IAAI,CAACN,GAAG,CAACY,CAAC,IAAIshB,GAAG,CAACliB,GAAG,CAACY,CAAC,IAAIshB,GAAG,CAACjiB,GAAG,CAACW,CAAC,IAAI,IAAI,CAACX,GAAG,CAACW,CAAC;MAEpD;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA66B,aAAcf,KAAK,EAAEtxB,MAAM,EAAG;QAE7B;QACA;;QAEA,OAAOA,MAAM,CAAC4S,GAAG,CAChB,CAAE0e,KAAK,CAAChiB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,KAAO,IAAI,CAACL,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,CAAE,EACtD,CAAEgiB,KAAK,CAAC1hB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,KAAO,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,CAAE,CACtD;MAEF;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAA86B,cAAepB,GAAG,EAAG;QAEpB;;QAEA,OAAOA,GAAG,CAACjiB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAI4hB,GAAG,CAACliB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IACtD4hB,GAAG,CAACjiB,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAIshB,GAAG,CAACliB,GAAG,CAACY,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,KAAK,GAAG,IAAI;MAEjE;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAi7B,WAAYnB,KAAK,EAAEtxB,MAAM,EAAG;QAE3B,OAAOA,MAAM,CAACiU,IAAI,CAAEqd,KAAK,CAAE,CAACviB,KAAK,CAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAG,CAAE;MAExD;IAAC;MAAA3X,GAAA;MAAAE,KAAA,EAED,SAAAk8B,gBAAiBpC,KAAK,EAAG;QAExB,OAAO,IAAI,CAACmB,UAAU,CAAEnB,KAAK,EAAE49I,SAAS,CAAE,CAACh5J,UAAU,CAAEob,KAAK,CAAE;MAE/D;IAAC;MAAAh6B,GAAA;MAAAE,KAAA,EAED,SAAAo8B,UAAW1C,GAAG,EAAG;QAEhB,IAAI,CAACliB,GAAG,CAACC,GAAG,CAAEiiB,GAAG,CAACliB,GAAG,CAAE;QACvB,IAAI,CAACC,GAAG,CAACD,GAAG,CAAEkiB,GAAG,CAACjiB,GAAG,CAAE;QAEvB,IAAK,IAAI,CAACkiB,OAAO,EAAE,EAAG,IAAI,CAACb,SAAS,EAAE;QAEtC,OAAO,IAAI;MAEZ;IAAC;MAAAh5B,GAAA;MAAAE,KAAA,EAED,SAAAs6B,MAAOZ,GAAG,EAAG;QAEZ,IAAI,CAACliB,GAAG,CAACA,GAAG,CAAEkiB,GAAG,CAACliB,GAAG,CAAE;QACvB,IAAI,CAACC,GAAG,CAACA,GAAG,CAAEiiB,GAAG,CAACjiB,GAAG,CAAE;QAEvB,OAAO,IAAI;MAEZ;IAAC;MAAA3X,GAAA;MAAAE,KAAA,EAED,SAAAwkB,UAAWlF,MAAM,EAAG;QAEnB,IAAI,CAAC9H,GAAG,CAACmF,GAAG,CAAE2C,MAAM,CAAE;QACtB,IAAI,CAAC7H,GAAG,CAACkF,GAAG,CAAE2C,MAAM,CAAE;QAEtB,OAAO,IAAI;MAEZ;IAAC;MAAAxf,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQsa,GAAG,EAAG;QAEb,OAAOA,GAAG,CAACliB,GAAG,CAAC4H,MAAM,CAAE,IAAI,CAAC5H,GAAG,CAAE,IAAIkiB,GAAG,CAACjiB,GAAG,CAAC2H,MAAM,CAAE,IAAI,CAAC3H,GAAG,CAAE;MAEhE;IAAC;IAAA,OAAAkgK,IAAA;EAAA;EAIF,IAAME,OAAO,GAAG,aAAc,IAAIziJ,OAAO,EAAE;EAC3C,IAAM0iJ,SAAS,GAAG,aAAc,IAAI1iJ,OAAO,EAAE;EAAC,IAExC2iJ,KAAK;IAEV,SAAAA,MAAa13H,KAAK,GAAG,IAAIjrB,OAAO,EAAE,EAAEkxB,GAAG,GAAG,IAAIlxB,OAAO,EAAE,EAAG;MAAAhtB,eAAA,OAAA2vK,KAAA;MAEzD,IAAI,CAAC13H,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACiG,GAAG,GAAGA,GAAG;IAEf;IAAC19C,YAAA,CAAAmvK,KAAA;MAAAj4K,GAAA;MAAAE,KAAA,EAED,SAAAob,IAAKilC,KAAK,EAAEiG,GAAG,EAAG;QAEjB,IAAI,CAACjG,KAAK,CAAC5jC,IAAI,CAAE4jC,KAAK,CAAE;QACxB,IAAI,CAACiG,GAAG,CAAC7pC,IAAI,CAAE6pC,GAAG,CAAE;QAEpB,OAAO,IAAI;MAEZ;IAAC;MAAAxmD,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM+yC,IAAI,EAAG;QAEZ,IAAI,CAACnP,KAAK,CAAC5jC,IAAI,CAAE+yC,IAAI,CAACnP,KAAK,CAAE;QAC7B,IAAI,CAACiG,GAAG,CAAC7pC,IAAI,CAAE+yC,IAAI,CAAClJ,GAAG,CAAE;QAEzB,OAAO,IAAI;MAEZ;IAAC;MAAAxmD,GAAA;MAAAE,KAAA,EAED,SAAA45B,UAAWpxB,MAAM,EAAG;QAEnB,OAAOA,MAAM,CAACqU,UAAU,CAAE,IAAI,CAACwjC,KAAK,EAAE,IAAI,CAACiG,GAAG,CAAE,CAACnpC,cAAc,CAAE,GAAG,CAAE;MAEvE;IAAC;MAAArd,GAAA;MAAAE,KAAA,EAED,SAAAu9B,MAAO/0B,MAAM,EAAG;QAEf,OAAOA,MAAM,CAACyU,UAAU,CAAE,IAAI,CAACqpC,GAAG,EAAE,IAAI,CAACjG,KAAK,CAAE;MAEjD;IAAC;MAAAvgD,GAAA;MAAAE,KAAA,EAED,SAAAg4K,WAAA,EAAa;QAEZ,OAAO,IAAI,CAAC33H,KAAK,CAAC1hC,iBAAiB,CAAE,IAAI,CAAC2nC,GAAG,CAAE;MAEhD;IAAC;MAAAxmD,GAAA;MAAAE,KAAA,EAED,SAAAkqC,SAAA,EAAW;QAEV,OAAO,IAAI,CAACmW,KAAK,CAAC3hC,UAAU,CAAE,IAAI,CAAC4nC,GAAG,CAAE;MAEzC;IAAC;MAAAxmD,GAAA;MAAAE,KAAA,EAED,SAAAm+B,GAAI7lB,CAAC,EAAE9P,MAAM,EAAG;QAEf,OAAO,IAAI,CAAC+0B,KAAK,CAAE/0B,MAAM,CAAE,CAAC2U,cAAc,CAAE7E,CAAC,CAAE,CAACqE,GAAG,CAAE,IAAI,CAAC0jC,KAAK,CAAE;MAElE;IAAC;MAAAvgD,GAAA;MAAAE,KAAA,EAED,SAAAi4K,6BAA8Bn+I,KAAK,EAAEo+I,WAAW,EAAG;QAElDL,OAAO,CAAC56J,UAAU,CAAE6c,KAAK,EAAE,IAAI,CAACumB,KAAK,CAAE;QACvCy3H,SAAS,CAAC76J,UAAU,CAAE,IAAI,CAACqpC,GAAG,EAAE,IAAI,CAACjG,KAAK,CAAE;QAE5C,IAAM83H,SAAS,GAAGL,SAAS,CAAC/5J,GAAG,CAAE+5J,SAAS,CAAE;QAC5C,IAAMM,eAAe,GAAGN,SAAS,CAAC/5J,GAAG,CAAE85J,OAAO,CAAE;QAEhD,IAAIv/J,CAAC,GAAG8/J,eAAe,GAAGD,SAAS;QAEnC,IAAKD,WAAW,EAAG;UAElB5/J,CAAC,GAAGf,KAAK,CAAEe,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAErB;QAEA,OAAOA,CAAC;MAET;IAAC;MAAAxY,GAAA;MAAAE,KAAA,EAED,SAAAs+B,oBAAqBxE,KAAK,EAAEo+I,WAAW,EAAE1vK,MAAM,EAAG;QAEjD,IAAM8P,CAAC,GAAG,IAAI,CAAC2/J,4BAA4B,CAAEn+I,KAAK,EAAEo+I,WAAW,CAAE;QAEjE,OAAO,IAAI,CAAC36I,KAAK,CAAE/0B,MAAM,CAAE,CAAC2U,cAAc,CAAE7E,CAAC,CAAE,CAACqE,GAAG,CAAE,IAAI,CAAC0jC,KAAK,CAAE;MAElE;IAAC;MAAAvgD,GAAA;MAAAE,KAAA,EAED,SAAAosB,aAAc1H,MAAM,EAAG;QAEtB,IAAI,CAAC27B,KAAK,CAACj0B,YAAY,CAAE1H,MAAM,CAAE;QACjC,IAAI,CAAC4hC,GAAG,CAACl6B,YAAY,CAAE1H,MAAM,CAAE;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAA5kB,GAAA;MAAAE,KAAA,EAED,SAAAof,OAAQowC,IAAI,EAAG;QAEd,OAAOA,IAAI,CAACnP,KAAK,CAACjhC,MAAM,CAAE,IAAI,CAACihC,KAAK,CAAE,IAAImP,IAAI,CAAClJ,GAAG,CAAClnC,MAAM,CAAE,IAAI,CAACknC,GAAG,CAAE;MAEtE;IAAC;MAAAxmD,GAAA;MAAAE,KAAA,EAED,SAAAwc,MAAA,EAAQ;QAEP,OAAO,IAAI,IAAI,CAACtW,WAAW,EAAE,CAACuW,IAAI,CAAE,IAAI,CAAE;MAE3C;IAAC;IAAA,OAAAs7J,KAAA;EAAA;EAIF,IAAMM,SAAS,GAAG,aAAc,IAAIjjJ,OAAO,EAAE;EAAC,IAExCkjJ,eAAe,0BAAAC,WAAA;IAAAnvJ,SAAA,CAAAkvJ,eAAA,EAAAC,WAAA;IAAA,IAAAC,SAAA,GAAAlvJ,YAAA,CAAAgvJ,eAAA;IAEpB,SAAAA,gBAAallF,KAAK,EAAE1tE,KAAK,EAAG;MAAA,IAAA+yJ,QAAA;MAAArwK,eAAA,OAAAkwK,eAAA;MAE3BG,QAAA,GAAAD,SAAA,CAAA12K,IAAA;MAEA22K,QAAA,CAAKrlF,KAAK,GAAGA,KAAK;MAElBqlF,QAAA,CAAK/zJ,MAAM,GAAG0uE,KAAK,CAACz8D,WAAW;MAC/B8hJ,QAAA,CAAK/tJ,gBAAgB,GAAG,KAAK;MAE7B+tJ,QAAA,CAAK/yJ,KAAK,GAAGA,KAAK;MAElB+yJ,QAAA,CAAK52K,IAAI,GAAG,iBAAiB;MAE7B,IAAM04B,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MAErC,IAAM6B,SAAS,GAAG,CACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CACnB;MAED,KAAM,IAAI37C,CAAC,GAAG,CAAC,EAAE42B,CAAC,GAAG,CAAC,EAAEjmB,CAAC,GAAG,EAAE,EAAE3Q,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAE42B,CAAC,EAAG,EAAG;QAEnD,IAAME,EAAE,GAAK92B,CAAC,GAAG2Q,CAAC,GAAKI,IAAI,CAACC,EAAE,GAAG,CAAC;QAClC,IAAM+lB,EAAE,GAAKH,CAAC,GAAGjmB,CAAC,GAAKI,IAAI,CAACC,EAAE,GAAG,CAAC;QAElC2qC,SAAS,CAACn8C,IAAI,CACbuR,IAAI,CAAC8D,GAAG,CAAEiiB,EAAE,CAAE,EAAE/lB,IAAI,CAAC+D,GAAG,CAAEgiB,EAAE,CAAE,EAAE,CAAC,EACjC/lB,IAAI,CAAC8D,GAAG,CAAEkiB,EAAE,CAAE,EAAEhmB,IAAI,CAAC+D,GAAG,CAAEiiB,EAAE,CAAE,EAAE,CAAC,CACjC;MAEF;MAEArC,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAC,CAAE,CAAE;MAE/E,IAAM9T,QAAQ,GAAG,IAAI0gD,iBAAiB,CAAE;QAAEn2C,GAAG,EAAE,KAAK;QAAE3E,UAAU,EAAE;MAAM,CAAC,CAAE;MAE3EmlI,QAAA,CAAKC,IAAI,GAAG,IAAI3iD,YAAY,CAAEx7F,QAAQ,EAAEmT,QAAQ,CAAE;MAClD+qI,QAAA,CAAK97J,GAAG,CAAE87J,QAAA,CAAKC,IAAI,CAAE;MAErBD,QAAA,CAAKtnJ,MAAM,EAAE;MAAC,OAAAsnJ,QAAA;IAEf;IAAC7vK,YAAA,CAAA0vK,eAAA;MAAAx4K,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAACgtJ,IAAI,CAACn+I,QAAQ,CAAC7O,OAAO,EAAE;QAC5B,IAAI,CAACgtJ,IAAI,CAAChrI,QAAQ,CAAChiB,OAAO,EAAE;MAE7B;IAAC;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAA,EAAS;QAER,IAAI,CAACiiE,KAAK,CAACl5D,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAC3C,IAAI,CAACk5D,KAAK,CAAC5qF,MAAM,CAAC0xB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAElD,IAAMy+I,UAAU,GAAG,IAAI,CAACvlF,KAAK,CAAClpD,QAAQ,GAAG,IAAI,CAACkpD,KAAK,CAAClpD,QAAQ,GAAG,IAAI;QACnE,IAAM0uI,SAAS,GAAGD,UAAU,GAAG/hK,IAAI,CAACk1C,GAAG,CAAE,IAAI,CAACsnC,KAAK,CAACh1E,KAAK,CAAE;QAE3D,IAAI,CAACs6J,IAAI,CAACv0J,KAAK,CAAC/I,GAAG,CAAEw9J,SAAS,EAAEA,SAAS,EAAED,UAAU,CAAE;QAEvDN,SAAS,CAACngJ,qBAAqB,CAAE,IAAI,CAACk7D,KAAK,CAAC5qF,MAAM,CAACmuB,WAAW,CAAE;QAEhE,IAAI,CAAC+hJ,IAAI,CAACt6I,MAAM,CAAEi6I,SAAS,CAAE;QAE7B,IAAK,IAAI,CAAC3yJ,KAAK,KAAKphB,SAAS,EAAG;UAE/B,IAAI,CAACo0K,IAAI,CAAChrI,QAAQ,CAAChoB,KAAK,CAACtK,GAAG,CAAE,IAAI,CAACsK,KAAK,CAAE;QAE3C,CAAC,MAAM;UAEN,IAAI,CAACgzJ,IAAI,CAAChrI,QAAQ,CAAChoB,KAAK,CAACjJ,IAAI,CAAE,IAAI,CAAC22E,KAAK,CAAC1tE,KAAK,CAAE;QAElD;MAED;IAAC;IAAA,OAAA4yJ,eAAA;EAAA,EA/E4BtwI,QAAQ;EAmFtC,IAAM6wI,SAAS,GAAG,aAAc,IAAIzjJ,OAAO,EAAE;EAC7C,IAAM0jJ,WAAW,GAAG,aAAc,IAAIj4I,OAAO,EAAE;EAC/C,IAAMk4I,eAAe,GAAG,aAAc,IAAIl4I,OAAO,EAAE;EAAC,IAG9Cm4I,cAAc,0BAAAC,aAAA;IAAA7vJ,SAAA,CAAA4vJ,cAAA,EAAAC,aAAA;IAAA,IAAAC,SAAA,GAAA5vJ,YAAA,CAAA0vJ,cAAA;IAEnB,SAAAA,eAAanyK,MAAM,EAAG;MAAA,IAAAsyK,QAAA;MAAA/wK,eAAA,OAAA4wK,cAAA;MAErB,IAAMpnD,KAAK,GAAGwnD,WAAW,CAAEvyK,MAAM,CAAE;MAEnC,IAAM0zB,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MAErC,IAAMwH,QAAQ,GAAG,EAAE;MACnB,IAAMkyH,MAAM,GAAG,EAAE;MAEjB,IAAMj/H,MAAM,GAAG,IAAI5B,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACnC,IAAM6B,MAAM,GAAG,IAAI7B,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEnC,KAAM,IAAI3yC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+rH,KAAK,CAAChsH,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEzC,IAAMgtH,IAAI,GAAGjB,KAAK,CAAE/rH,CAAC,CAAE;QAEvB,IAAKgtH,IAAI,CAACxqF,MAAM,IAAIwqF,IAAI,CAACxqF,MAAM,CAAC8pF,MAAM,EAAG;UAExChrE,QAAQ,CAAC9hD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UACxB8hD,QAAQ,CAAC9hD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UACxBg0K,MAAM,CAACh0K,IAAI,CAAE+0C,MAAM,CAAC12B,CAAC,EAAE02B,MAAM,CAACv3B,CAAC,EAAEu3B,MAAM,CAAC7/B,CAAC,CAAE;UAC3C8+J,MAAM,CAACh0K,IAAI,CAAEg1C,MAAM,CAAC32B,CAAC,EAAE22B,MAAM,CAACx3B,CAAC,EAAEw3B,MAAM,CAAC9/B,CAAC,CAAE;QAE5C;MAED;MAEAggB,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC9E5sB,QAAQ,CAACkmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAEu6H,MAAM,EAAE,CAAC,CAAE,CAAE;MAEzE,IAAM3rI,QAAQ,GAAG,IAAI0gD,iBAAiB,CAAE;QAAE/8C,YAAY,EAAE,IAAI;QAAEU,SAAS,EAAE,KAAK;QAAEC,UAAU,EAAE,KAAK;QAAEsB,UAAU,EAAE,KAAK;QAAE/B,WAAW,EAAE;MAAK,CAAC,CAAE;MAE3I4nI,QAAA,GAAAD,SAAA,CAAAp3K,IAAA,OAAOy4B,QAAQ,EAAEmT,QAAQ;MAEzByrI,QAAA,CAAKG,gBAAgB,GAAG,IAAI;MAE5BH,QAAA,CAAKt3K,IAAI,GAAG,gBAAgB;MAE5Bs3K,QAAA,CAAKhP,IAAI,GAAGtjK,MAAM;MAClBsyK,QAAA,CAAKvnD,KAAK,GAAGA,KAAK;MAElBunD,QAAA,CAAKz0J,MAAM,GAAG7d,MAAM,CAAC8vB,WAAW;MAChCwiJ,QAAA,CAAKzuJ,gBAAgB,GAAG,KAAK;MAAC,OAAAyuJ,QAAA;IAE/B;IAACvwK,YAAA,CAAAowK,cAAA;MAAAl5K,GAAA;MAAAE,KAAA,EAED,SAAA8rC,kBAAmBC,KAAK,EAAG;QAE1B,IAAM6lF,KAAK,GAAG,IAAI,CAACA,KAAK;QAExB,IAAMr3F,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAME,QAAQ,GAAGF,QAAQ,CAACimB,YAAY,CAAE,UAAU,CAAE;QAEpDu4H,eAAe,CAACt8J,IAAI,CAAE,IAAI,CAAC0tJ,IAAI,CAACxzI,WAAW,CAAE,CAAC5T,MAAM,EAAE;QAEtD,KAAM,IAAIld,CAAC,GAAG,CAAC,EAAE42B,CAAC,GAAG,CAAC,EAAE52B,CAAC,GAAG+rH,KAAK,CAAChsH,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEhD,IAAMgtH,IAAI,GAAGjB,KAAK,CAAE/rH,CAAC,CAAE;UAEvB,IAAKgtH,IAAI,CAACxqF,MAAM,IAAIwqF,IAAI,CAACxqF,MAAM,CAAC8pF,MAAM,EAAG;YAExC2mD,WAAW,CAAC13J,gBAAgB,CAAE23J,eAAe,EAAElmD,IAAI,CAACl8F,WAAW,CAAE;YACjEkiJ,SAAS,CAAC3gJ,qBAAqB,CAAE4gJ,WAAW,CAAE;YAC9Cr+I,QAAQ,CAACoiB,MAAM,CAAEpgB,CAAC,EAAEo8I,SAAS,CAAC/gK,CAAC,EAAE+gK,SAAS,CAACzgK,CAAC,EAAEygK,SAAS,CAAC9sJ,CAAC,CAAE;YAE3D+sJ,WAAW,CAAC13J,gBAAgB,CAAE23J,eAAe,EAAElmD,IAAI,CAACxqF,MAAM,CAAC1R,WAAW,CAAE;YACxEkiJ,SAAS,CAAC3gJ,qBAAqB,CAAE4gJ,WAAW,CAAE;YAC9Cr+I,QAAQ,CAACoiB,MAAM,CAAEpgB,CAAC,GAAG,CAAC,EAAEo8I,SAAS,CAAC/gK,CAAC,EAAE+gK,SAAS,CAACzgK,CAAC,EAAEygK,SAAS,CAAC9sJ,CAAC,CAAE;YAE/D0Q,CAAC,IAAI,CAAC;UAEP;QAED;QAEAlC,QAAQ,CAACimB,YAAY,CAAE,UAAU,CAAE,CAACj1B,WAAW,GAAG,IAAI;QAEtDwvB,IAAA,CAAAC,eAAA,CAAAg+H,cAAA,CAAAv5K,SAAA,8BAAAqC,IAAA,OAAyBiqC,KAAK;MAE/B;IAAC;MAAAjsC,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC6O,QAAQ,CAAC7O,OAAO,EAAE;QACvB,IAAI,CAACgiB,QAAQ,CAAChiB,OAAO,EAAE;MAExB;IAAC;IAAA,OAAAstJ,cAAA;EAAA,EAxF2BjjD,YAAY;EA6FzC,SAASqjD,WAAWA,CAAEvyK,MAAM,EAAG;IAE9B,IAAM0yK,QAAQ,GAAG,EAAE;IAEnB,IAAK1yK,MAAM,CAACsrH,MAAM,KAAK,IAAI,EAAG;MAE7BonD,QAAQ,CAACl0K,IAAI,CAAEwB,MAAM,CAAE;IAExB;IAEA,KAAM,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgB,MAAM,CAAC6zB,QAAQ,CAAC90B,MAAM,EAAEC,CAAC,EAAG,EAAG;MAEnD0zK,QAAQ,CAACl0K,IAAI,CAACk/F,KAAK,CAAEg1E,QAAQ,EAAEH,WAAW,CAAEvyK,MAAM,CAAC6zB,QAAQ,CAAE70B,CAAC,CAAE,CAAE,CAAE;IAErE;IAEA,OAAO0zK,QAAQ;EAEhB;EAAC,IAEKC,gBAAgB,0BAAAC,MAAA;IAAArwJ,SAAA,CAAAowJ,gBAAA,EAAAC,MAAA;IAAA,IAAAC,SAAA,GAAApwJ,YAAA,CAAAkwJ,gBAAA;IAErB,SAAAA,iBAAapmF,KAAK,EAAEumF,UAAU,EAAEj0J,KAAK,EAAG;MAAA,IAAAk0J,QAAA;MAAAxxK,eAAA,OAAAoxK,gBAAA;MAEvC,IAAMj/I,QAAQ,GAAG,IAAIg8G,cAAc,CAAEojC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAE;MACvD,IAAMjsI,QAAQ,GAAG,IAAIgN,iBAAiB,CAAE;QAAE9C,SAAS,EAAE,IAAI;QAAEK,GAAG,EAAE,KAAK;QAAE3E,UAAU,EAAE;MAAM,CAAC,CAAE;MAE5FsmI,QAAA,GAAAF,SAAA,CAAA53K,IAAA,OAAOy4B,QAAQ,EAAEmT,QAAQ;MAEzBksI,QAAA,CAAKxmF,KAAK,GAAGA,KAAK;MAElBwmF,QAAA,CAAKl0J,KAAK,GAAGA,KAAK;MAElBk0J,QAAA,CAAK/3K,IAAI,GAAG,kBAAkB;MAE9B+3K,QAAA,CAAKl1J,MAAM,GAAGk1J,QAAA,CAAKxmF,KAAK,CAACz8D,WAAW;MACpCijJ,QAAA,CAAKlvJ,gBAAgB,GAAG,KAAK;MAE7BkvJ,QAAA,CAAKzoJ,MAAM,EAAE;;MAGb;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAbG,OAAAyoJ,QAAA;IAuBD;IAAChxK,YAAA,CAAA4wK,gBAAA;MAAA15K,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC6O,QAAQ,CAAC7O,OAAO,EAAE;QACvB,IAAI,CAACgiB,QAAQ,CAAChiB,OAAO,EAAE;MAExB;IAAC;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAA,EAAS;QAER,IAAI,CAACiiE,KAAK,CAACl5D,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAE3C,IAAK,IAAI,CAACxU,KAAK,KAAKphB,SAAS,EAAG;UAE/B,IAAI,CAACopC,QAAQ,CAAChoB,KAAK,CAACtK,GAAG,CAAE,IAAI,CAACsK,KAAK,CAAE;QAEtC,CAAC,MAAM;UAEN,IAAI,CAACgoB,QAAQ,CAAChoB,KAAK,CAACjJ,IAAI,CAAE,IAAI,CAAC22E,KAAK,CAAC1tE,KAAK,CAAE;QAE7C;;QAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAOE;IAAC;IAAA,OAAA8zJ,gBAAA;EAAA,EAlF6Bn0H,IAAI;EAsFnC,IAAMw0H,SAAS,GAAG,aAAc,IAAIzkJ,OAAO,EAAE;EAC7C,IAAM0kJ,OAAO,GAAG,aAAc,IAAIthI,KAAK,EAAE;EACzC,IAAMuhI,OAAO,GAAG,aAAc,IAAIvhI,KAAK,EAAE;EAAC,IAEpCwhI,qBAAqB,0BAAAC,WAAA;IAAA7wJ,SAAA,CAAA4wJ,qBAAA,EAAAC,WAAA;IAAA,IAAAC,SAAA,GAAA5wJ,YAAA,CAAA0wJ,qBAAA;IAE1B,SAAAA,sBAAa5mF,KAAK,EAAE/5D,IAAI,EAAE3T,KAAK,EAAG;MAAA,IAAAy0J,QAAA;MAAA/xK,eAAA,OAAA4xK,qBAAA;MAEjCG,QAAA,GAAAD,SAAA,CAAAp4K,IAAA;MAEAq4K,QAAA,CAAK/mF,KAAK,GAAGA,KAAK;MAElB+mF,QAAA,CAAKz1J,MAAM,GAAG0uE,KAAK,CAACz8D,WAAW;MAC/BwjJ,QAAA,CAAKzvJ,gBAAgB,GAAG,KAAK;MAE7ByvJ,QAAA,CAAKz0J,KAAK,GAAGA,KAAK;MAElBy0J,QAAA,CAAKt4K,IAAI,GAAG,uBAAuB;MAEnC,IAAM04B,QAAQ,GAAG,IAAI06G,kBAAkB,CAAE57G,IAAI,CAAE;MAC/CkB,QAAQ,CAACwP,OAAO,CAAEnzB,IAAI,CAACC,EAAE,GAAG,GAAG,CAAE;MAEjCsjK,QAAA,CAAKzsI,QAAQ,GAAG,IAAIgN,iBAAiB,CAAE;QAAE9C,SAAS,EAAE,IAAI;QAAEK,GAAG,EAAE,KAAK;QAAE3E,UAAU,EAAE;MAAM,CAAC,CAAE;MAC3F,IAAK6mI,QAAA,CAAKz0J,KAAK,KAAKphB,SAAS,EAAG61K,QAAA,CAAKzsI,QAAQ,CAAC2D,YAAY,GAAG,IAAI;MAEjE,IAAM5W,QAAQ,GAAGF,QAAQ,CAACimB,YAAY,CAAE,UAAU,CAAE;MACpD,IAAM64H,MAAM,GAAG,IAAI/9J,YAAY,CAAEmf,QAAQ,CAACrK,KAAK,GAAG,CAAC,CAAE;MAErDmK,QAAQ,CAACkmB,YAAY,CAAE,OAAO,EAAE,IAAIzE,eAAe,CAAEq9H,MAAM,EAAE,CAAC,CAAE,CAAE;MAElEc,QAAA,CAAKx9J,GAAG,CAAE,IAAI0oC,IAAI,CAAE9qB,QAAQ,EAAE4/I,QAAA,CAAKzsI,QAAQ,CAAE,CAAE;MAE/CysI,QAAA,CAAKhpJ,MAAM,EAAE;MAAC,OAAAgpJ,QAAA;IAEf;IAACvxK,YAAA,CAAAoxK,qBAAA;MAAAl6K,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAACgP,QAAQ,CAAE,CAAC,CAAE,CAACH,QAAQ,CAAC7O,OAAO,EAAE;QACrC,IAAI,CAACgP,QAAQ,CAAE,CAAC,CAAE,CAACgT,QAAQ,CAAChiB,OAAO,EAAE;MAEtC;IAAC;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAA,EAAS;QAER,IAAMu9B,IAAI,GAAG,IAAI,CAACh0B,QAAQ,CAAE,CAAC,CAAE;QAE/B,IAAK,IAAI,CAAChV,KAAK,KAAKphB,SAAS,EAAG;UAE/B,IAAI,CAACopC,QAAQ,CAAChoB,KAAK,CAACtK,GAAG,CAAE,IAAI,CAACsK,KAAK,CAAE;QAEtC,CAAC,MAAM;UAEN,IAAM2zJ,MAAM,GAAG3qH,IAAI,CAACn0B,QAAQ,CAACimB,YAAY,CAAE,OAAO,CAAE;UAEpDs5H,OAAO,CAACr9J,IAAI,CAAE,IAAI,CAAC22E,KAAK,CAAC1tE,KAAK,CAAE;UAChCq0J,OAAO,CAACt9J,IAAI,CAAE,IAAI,CAAC22E,KAAK,CAACtwB,WAAW,CAAE;UAEtC,KAAM,IAAIj9D,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG6iK,MAAM,CAACjpJ,KAAK,EAAEvqB,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAEhD,IAAM6f,KAAK,GAAK7f,CAAC,GAAK2Q,CAAC,GAAG,CAAG,GAAKsjK,OAAO,GAAGC,OAAO;YAEnDV,MAAM,CAACx8H,MAAM,CAAEh3C,CAAC,EAAE6f,KAAK,CAAChC,CAAC,EAAEgC,KAAK,CAAC7C,CAAC,EAAE6C,KAAK,CAACnL,CAAC,CAAE;UAE9C;UAEA8+J,MAAM,CAAC9tJ,WAAW,GAAG,IAAI;QAE1B;QAEA,IAAI,CAAC6nE,KAAK,CAACl5D,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAE3Cw0B,IAAI,CAACtwB,MAAM,CAAEy7I,SAAS,CAAC3hJ,qBAAqB,CAAE,IAAI,CAACk7D,KAAK,CAACz8D,WAAW,CAAE,CAAC7Y,MAAM,EAAE,CAAE;MAElF;IAAC;IAAA,OAAAk8J,qBAAA;EAAA,EAtEkChyI,QAAQ;EAAA,IA0EtCoyI,UAAU,0BAAAC,cAAA;IAAAjxJ,SAAA,CAAAgxJ,UAAA,EAAAC,cAAA;IAAA,IAAAC,SAAA,GAAAhxJ,YAAA,CAAA8wJ,UAAA;IAEf,SAAAA,WAAa/gJ,IAAI,GAAG,EAAE,EAAEmgG,SAAS,GAAG,EAAE,EAAEp/E,MAAM,GAAG,QAAQ,EAAEC,MAAM,GAAG,QAAQ,EAAG;MAAA,IAAAkgI,QAAA;MAAAnyK,eAAA,OAAAgyK,UAAA;MAE9EhgI,MAAM,GAAG,IAAI5B,KAAK,CAAE4B,MAAM,CAAE;MAC5BC,MAAM,GAAG,IAAI7B,KAAK,CAAE6B,MAAM,CAAE;MAE5B,IAAMx6B,MAAM,GAAG25G,SAAS,GAAG,CAAC;MAC5B,IAAMrnG,IAAI,GAAGkH,IAAI,GAAGmgG,SAAS;MAC7B,IAAMlgG,QAAQ,GAAGD,IAAI,GAAG,CAAC;MAEzB,IAAM8tB,QAAQ,GAAG,EAAE;QAAEkyH,MAAM,GAAG,EAAE;MAEhC,KAAM,IAAIxzK,CAAC,GAAG,CAAC,EAAE42B,CAAC,GAAG,CAAC,EAAEy+D,CAAC,GAAG,CAAE5hE,QAAQ,EAAEzzB,CAAC,IAAI2zH,SAAS,EAAE3zH,CAAC,EAAG,EAAEq1F,CAAC,IAAI/oE,IAAI,EAAG;QAEzEg1B,QAAQ,CAAC9hD,IAAI,CAAE,CAAEi0B,QAAQ,EAAE,CAAC,EAAE4hE,CAAC,EAAE5hE,QAAQ,EAAE,CAAC,EAAE4hE,CAAC,CAAE;QACjD/zC,QAAQ,CAAC9hD,IAAI,CAAE61F,CAAC,EAAE,CAAC,EAAE,CAAE5hE,QAAQ,EAAE4hE,CAAC,EAAE,CAAC,EAAE5hE,QAAQ,CAAE;QAEjD,IAAM5T,KAAK,GAAG7f,CAAC,KAAKga,MAAM,GAAGu6B,MAAM,GAAGC,MAAM;QAE5C30B,KAAK,CAACnG,OAAO,CAAE85J,MAAM,EAAE58I,CAAC,CAAE;QAAEA,CAAC,IAAI,CAAC;QAClC/W,KAAK,CAACnG,OAAO,CAAE85J,MAAM,EAAE58I,CAAC,CAAE;QAAEA,CAAC,IAAI,CAAC;QAClC/W,KAAK,CAACnG,OAAO,CAAE85J,MAAM,EAAE58I,CAAC,CAAE;QAAEA,CAAC,IAAI,CAAC;QAClC/W,KAAK,CAACnG,OAAO,CAAE85J,MAAM,EAAE58I,CAAC,CAAE;QAAEA,CAAC,IAAI,CAAC;MAEnC;MAEA,IAAMlC,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MACrCplB,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC9E5sB,QAAQ,CAACkmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAEu6H,MAAM,EAAE,CAAC,CAAE,CAAE;MAEzE,IAAM3rI,QAAQ,GAAG,IAAI0gD,iBAAiB,CAAE;QAAE/8C,YAAY,EAAE,IAAI;QAAEiC,UAAU,EAAE;MAAM,CAAC,CAAE;MAEnFinI,QAAA,GAAAD,SAAA,CAAAx4K,IAAA,OAAOy4B,QAAQ,EAAEmT,QAAQ;MAEzB6sI,QAAA,CAAK14K,IAAI,GAAG,YAAY;MAAC,OAAA04K,QAAA;IAE1B;IAAC3xK,YAAA,CAAAwxK,UAAA;MAAAt6K,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC6O,QAAQ,CAAC7O,OAAO,EAAE;QACvB,IAAI,CAACgiB,QAAQ,CAAChiB,OAAO,EAAE;MAExB;IAAC;IAAA,OAAA0uJ,UAAA;EAAA,EA5CuBrkD,YAAY;EAAA,IAgD/BykD,eAAe,0BAAAC,cAAA;IAAArxJ,SAAA,CAAAoxJ,eAAA,EAAAC,cAAA;IAAA,IAAAC,SAAA,GAAApxJ,YAAA,CAAAkxJ,eAAA;IAEpB,SAAAA,gBAAa3iJ,MAAM,GAAG,EAAE,EAAE8iJ,OAAO,GAAG,EAAE,EAAEC,KAAK,GAAG,CAAC,EAAEphD,SAAS,GAAG,EAAE,EAAEp/E,MAAM,GAAG,QAAQ,EAAEC,MAAM,GAAG,QAAQ,EAAG;MAAA,IAAAwgI,QAAA;MAAAzyK,eAAA,OAAAoyK,eAAA;MAEzGpgI,MAAM,GAAG,IAAI5B,KAAK,CAAE4B,MAAM,CAAE;MAC5BC,MAAM,GAAG,IAAI7B,KAAK,CAAE6B,MAAM,CAAE;MAE5B,IAAM8M,QAAQ,GAAG,EAAE;MACnB,IAAMkyH,MAAM,GAAG,EAAE;;MAEjB;;MAEA,IAAKsB,OAAO,GAAG,CAAC,EAAG;QAElB,KAAM,IAAI90K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG80K,OAAO,EAAE90K,CAAC,EAAG,EAAG;UAEpC,IAAM6W,CAAC,GAAK7W,CAAC,GAAG80K,OAAO,IAAO/jK,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;UAE3C,IAAMiB,CAAC,GAAGlB,IAAI,CAAC+D,GAAG,CAAE+B,CAAC,CAAE,GAAGmb,MAAM;UAChC,IAAM9L,CAAC,GAAGnV,IAAI,CAAC8D,GAAG,CAAEgC,CAAC,CAAE,GAAGmb,MAAM;UAEhCsvB,QAAQ,CAAC9hD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UACxB8hD,QAAQ,CAAC9hD,IAAI,CAAEyS,CAAC,EAAE,CAAC,EAAEiU,CAAC,CAAE;UAExB,IAAMrG,KAAK,GAAK7f,CAAC,GAAG,CAAC,GAAKu0C,MAAM,GAAGC,MAAM;UAEzCg/H,MAAM,CAACh0K,IAAI,CAAEqgB,KAAK,CAAChC,CAAC,EAAEgC,KAAK,CAAC7C,CAAC,EAAE6C,KAAK,CAACnL,CAAC,CAAE;UACxC8+J,MAAM,CAACh0K,IAAI,CAAEqgB,KAAK,CAAChC,CAAC,EAAEgC,KAAK,CAAC7C,CAAC,EAAE6C,KAAK,CAACnL,CAAC,CAAE;QAEzC;MAED;;MAEA;;MAEA,KAAM,IAAI1U,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+0K,KAAK,EAAE/0K,IAAC,EAAG,EAAG;QAElC,IAAM6f,OAAK,GAAK7f,IAAC,GAAG,CAAC,GAAKu0C,MAAM,GAAGC,MAAM;QAEzC,IAAM32B,CAAC,GAAGmU,MAAM,GAAKA,MAAM,GAAG+iJ,KAAK,GAAG/0K,IAAG;QAEzC,KAAM,IAAI42B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+8F,SAAS,EAAE/8F,CAAC,EAAG,EAAG;UAEtC;;UAEA,IAAI/f,EAAC,GAAK+f,CAAC,GAAG+8F,SAAS,IAAO5iH,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;UAE3C,IAAIiB,IAAC,GAAGlB,IAAI,CAAC+D,GAAG,CAAE+B,EAAC,CAAE,GAAGgH,CAAC;UACzB,IAAIqI,GAAC,GAAGnV,IAAI,CAAC8D,GAAG,CAAEgC,EAAC,CAAE,GAAGgH,CAAC;UAEzByjC,QAAQ,CAAC9hD,IAAI,CAAEyS,IAAC,EAAE,CAAC,EAAEiU,GAAC,CAAE;UACxBstJ,MAAM,CAACh0K,IAAI,CAAEqgB,OAAK,CAAChC,CAAC,EAAEgC,OAAK,CAAC7C,CAAC,EAAE6C,OAAK,CAACnL,CAAC,CAAE;;UAExC;;UAEAmC,EAAC,GAAK,CAAE+f,CAAC,GAAG,CAAC,IAAK+8F,SAAS,IAAO5iH,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;UAE/CiB,IAAC,GAAGlB,IAAI,CAAC+D,GAAG,CAAE+B,EAAC,CAAE,GAAGgH,CAAC;UACrBqI,GAAC,GAAGnV,IAAI,CAAC8D,GAAG,CAAEgC,EAAC,CAAE,GAAGgH,CAAC;UAErByjC,QAAQ,CAAC9hD,IAAI,CAAEyS,IAAC,EAAE,CAAC,EAAEiU,GAAC,CAAE;UACxBstJ,MAAM,CAACh0K,IAAI,CAAEqgB,OAAK,CAAChC,CAAC,EAAEgC,OAAK,CAAC7C,CAAC,EAAE6C,OAAK,CAACnL,CAAC,CAAE;QAEzC;MAED;MAEA,IAAMggB,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MACrCplB,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC9E5sB,QAAQ,CAACkmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAEu6H,MAAM,EAAE,CAAC,CAAE,CAAE;MAEzE,IAAM3rI,QAAQ,GAAG,IAAI0gD,iBAAiB,CAAE;QAAE/8C,YAAY,EAAE,IAAI;QAAEiC,UAAU,EAAE;MAAM,CAAC,CAAE;MAEnFunI,QAAA,GAAAH,SAAA,CAAA54K,IAAA,OAAOy4B,QAAQ,EAAEmT,QAAQ;MAEzBmtI,QAAA,CAAKh5K,IAAI,GAAG,iBAAiB;MAAC,OAAAg5K,QAAA;IAE/B;IAACjyK,YAAA,CAAA4xK,eAAA;MAAA16K,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC6O,QAAQ,CAAC7O,OAAO,EAAE;QACvB,IAAI,CAACgiB,QAAQ,CAAChiB,OAAO,EAAE;MAExB;IAAC;IAAA,OAAA8uJ,eAAA;EAAA,EApF4BzkD,YAAY;EAwF1C,IAAM+kD,GAAG,GAAG,aAAc,IAAI1lJ,OAAO,EAAE;EACvC,IAAM2lJ,GAAG,GAAG,aAAc,IAAI3lJ,OAAO,EAAE;EACvC,IAAM4lJ,GAAG,GAAG,aAAc,IAAI5lJ,OAAO,EAAE;EAAC,IAElC6lJ,sBAAsB,0BAAAC,WAAA;IAAA9xJ,SAAA,CAAA6xJ,sBAAA,EAAAC,WAAA;IAAA,IAAAC,SAAA,GAAA7xJ,YAAA,CAAA2xJ,sBAAA;IAE3B,SAAAA,uBAAa7nF,KAAK,EAAE/5D,IAAI,EAAE3T,KAAK,EAAG;MAAA,IAAA01J,QAAA;MAAAhzK,eAAA,OAAA6yK,sBAAA;MAEjCG,QAAA,GAAAD,SAAA,CAAAr5K,IAAA;MAEAs5K,QAAA,CAAKhoF,KAAK,GAAGA,KAAK;MAElBgoF,QAAA,CAAK12J,MAAM,GAAG0uE,KAAK,CAACz8D,WAAW;MAC/BykJ,QAAA,CAAK1wJ,gBAAgB,GAAG,KAAK;MAE7B0wJ,QAAA,CAAK11J,KAAK,GAAGA,KAAK;MAElB01J,QAAA,CAAKv5K,IAAI,GAAG,wBAAwB;MAEpC,IAAKw3B,IAAI,KAAK/0B,SAAS,EAAG+0B,IAAI,GAAG,CAAC;MAElC,IAAIkB,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MACnCplB,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAC9D,CAAEzlB,IAAI,EAAEA,IAAI,EAAE,CAAC,EACfA,IAAI,EAAEA,IAAI,EAAE,CAAC,EACbA,IAAI,EAAE,CAAEA,IAAI,EAAE,CAAC,EACf,CAAEA,IAAI,EAAE,CAAEA,IAAI,EAAE,CAAC,EACjB,CAAEA,IAAI,EAAEA,IAAI,EAAE,CAAC,CACf,EAAE,CAAC,CAAE,CAAE;MAER,IAAMqU,QAAQ,GAAG,IAAI0gD,iBAAiB,CAAE;QAAEn2C,GAAG,EAAE,KAAK;QAAE3E,UAAU,EAAE;MAAM,CAAC,CAAE;MAE3E8nI,QAAA,CAAKC,UAAU,GAAG,IAAIrmD,IAAI,CAAEz6F,QAAQ,EAAEmT,QAAQ,CAAE;MAChD0tI,QAAA,CAAKz+J,GAAG,CAAEy+J,QAAA,CAAKC,UAAU,CAAE;MAE3B9gJ,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MAC/BplB,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAE;MAE1Fs8H,QAAA,CAAKE,UAAU,GAAG,IAAItmD,IAAI,CAAEz6F,QAAQ,EAAEmT,QAAQ,CAAE;MAChD0tI,QAAA,CAAKz+J,GAAG,CAAEy+J,QAAA,CAAKE,UAAU,CAAE;MAE3BF,QAAA,CAAKjqJ,MAAM,EAAE;MAAC,OAAAiqJ,QAAA;IAEf;IAACxyK,YAAA,CAAAqyK,sBAAA;MAAAn7K,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC2vJ,UAAU,CAAC9gJ,QAAQ,CAAC7O,OAAO,EAAE;QAClC,IAAI,CAAC2vJ,UAAU,CAAC3tI,QAAQ,CAAChiB,OAAO,EAAE;QAClC,IAAI,CAAC4vJ,UAAU,CAAC/gJ,QAAQ,CAAC7O,OAAO,EAAE;QAClC,IAAI,CAAC4vJ,UAAU,CAAC5tI,QAAQ,CAAChiB,OAAO,EAAE;MAEnC;IAAC;MAAA5rB,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAA,EAAS;QAER,IAAI,CAACiiE,KAAK,CAACl5D,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAC3C,IAAI,CAACk5D,KAAK,CAAC5qF,MAAM,CAAC0xB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAElD4gJ,GAAG,CAAC5iJ,qBAAqB,CAAE,IAAI,CAACk7D,KAAK,CAACz8D,WAAW,CAAE;QACnDokJ,GAAG,CAAC7iJ,qBAAqB,CAAE,IAAI,CAACk7D,KAAK,CAAC5qF,MAAM,CAACmuB,WAAW,CAAE;QAC1DqkJ,GAAG,CAAC/9J,UAAU,CAAE89J,GAAG,EAAED,GAAG,CAAE;QAE1B,IAAI,CAACO,UAAU,CAACj9I,MAAM,CAAE28I,GAAG,CAAE;QAE7B,IAAK,IAAI,CAACr1J,KAAK,KAAKphB,SAAS,EAAG;UAE/B,IAAI,CAAC+2K,UAAU,CAAC3tI,QAAQ,CAAChoB,KAAK,CAACtK,GAAG,CAAE,IAAI,CAACsK,KAAK,CAAE;UAChD,IAAI,CAAC41J,UAAU,CAAC5tI,QAAQ,CAAChoB,KAAK,CAACtK,GAAG,CAAE,IAAI,CAACsK,KAAK,CAAE;QAEjD,CAAC,MAAM;UAEN,IAAI,CAAC21J,UAAU,CAAC3tI,QAAQ,CAAChoB,KAAK,CAACjJ,IAAI,CAAE,IAAI,CAAC22E,KAAK,CAAC1tE,KAAK,CAAE;UACvD,IAAI,CAAC41J,UAAU,CAAC5tI,QAAQ,CAAChoB,KAAK,CAACjJ,IAAI,CAAE,IAAI,CAAC22E,KAAK,CAAC1tE,KAAK,CAAE;QAExD;QAEA,IAAI,CAAC41J,UAAU,CAACl9I,MAAM,CAAE28I,GAAG,CAAE;QAC7B,IAAI,CAACO,UAAU,CAACn3J,KAAK,CAAC4H,CAAC,GAAGivJ,GAAG,CAACp1K,MAAM,EAAE;MAEvC;IAAC;IAAA,OAAAq1K,sBAAA;EAAA,EA5EmCjzI,QAAQ;EAgF7C,IAAMuzI,OAAO,GAAG,aAAc,IAAInmJ,OAAO,EAAE;EAC3C,IAAMomJ,OAAO,GAAG,aAAc,IAAIjxH,MAAM,EAAE;;EAE1C;AACD;AACA;AACA;AACA;AACA;EALC,IAOMkxH,YAAY,0BAAAC,cAAA;IAAAtyJ,SAAA,CAAAqyJ,YAAA,EAAAC,cAAA;IAAA,IAAAC,SAAA,GAAAryJ,YAAA,CAAAmyJ,YAAA;IAEjB,SAAAA,aAAanlJ,MAAM,EAAG;MAAA,IAAAslJ,QAAA;MAAAxzK,eAAA,OAAAqzK,YAAA;MAErB,IAAMlhJ,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MACrC,IAAMjS,QAAQ,GAAG,IAAI0gD,iBAAiB,CAAE;QAAE1oE,KAAK,EAAE,QAAQ;QAAE2rB,YAAY,EAAE,IAAI;QAAEiC,UAAU,EAAE;MAAM,CAAC,CAAE;MAEpG,IAAM6T,QAAQ,GAAG,EAAE;MACnB,IAAMkyH,MAAM,GAAG,EAAE;MAEjB,IAAMwC,QAAQ,GAAG,CAAC,CAAC;;MAEnB;;MAEAC,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;;MAErB;;MAEAA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;;MAErB;;MAEAA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;;MAErB;;MAEAA,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;MACpBA,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;MACpBA,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;MACpBA,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;;MAEpB;;MAEAA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;MACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;;MAErB;;MAEAA,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;MACnBA,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;;MAEnB;;MAEAA,OAAO,CAAE,KAAK,EAAE,KAAK,CAAE;MACvBA,OAAO,CAAE,KAAK,EAAE,KAAK,CAAE;MAEvBA,OAAO,CAAE,KAAK,EAAE,KAAK,CAAE;MACvBA,OAAO,CAAE,KAAK,EAAE,KAAK,CAAE;MAEvB,SAASA,OAAOA,CAAExhK,CAAC,EAAEC,CAAC,EAAG;QAExBwhK,QAAQ,CAAEzhK,CAAC,CAAE;QACbyhK,QAAQ,CAAExhK,CAAC,CAAE;MAEd;MAEA,SAASwhK,QAAQA,CAAE/wI,EAAE,EAAG;QAEvBmc,QAAQ,CAAC9hD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACxBg0K,MAAM,CAACh0K,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEtB,IAAKw2K,QAAQ,CAAE7wI,EAAE,CAAE,KAAK1mC,SAAS,EAAG;UAEnCu3K,QAAQ,CAAE7wI,EAAE,CAAE,GAAG,EAAE;QAEpB;QAEA6wI,QAAQ,CAAE7wI,EAAE,CAAE,CAAC3lC,IAAI,CAAI8hD,QAAQ,CAACvhD,MAAM,GAAG,CAAC,GAAK,CAAC,CAAE;MAEnD;MAEA20B,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC9E5sB,QAAQ,CAACkmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAEu6H,MAAM,EAAE,CAAC,CAAE,CAAE;MAEzEuC,QAAA,GAAAD,SAAA,CAAA75K,IAAA,OAAOy4B,QAAQ,EAAEmT,QAAQ;MAEzBkuI,QAAA,CAAK/5K,IAAI,GAAG,cAAc;MAE1B+5K,QAAA,CAAKtlJ,MAAM,GAAGA,MAAM;MACpB,IAAKslJ,QAAA,CAAKtlJ,MAAM,CAACi1B,sBAAsB,EAAGqwH,QAAA,CAAKtlJ,MAAM,CAACi1B,sBAAsB,EAAE;MAE9EqwH,QAAA,CAAKl3J,MAAM,GAAG4R,MAAM,CAACK,WAAW;MAChCilJ,QAAA,CAAKlxJ,gBAAgB,GAAG,KAAK;MAE7BkxJ,QAAA,CAAKC,QAAQ,GAAGA,QAAQ;MAExBD,QAAA,CAAKzqJ,MAAM,EAAE;;MAEb;;MAEA,IAAM6qJ,YAAY,GAAG,IAAIxjI,KAAK,CAAE,QAAQ,CAAE;MAC1C,IAAMyjI,SAAS,GAAG,IAAIzjI,KAAK,CAAE,QAAQ,CAAE;MACvC,IAAM0jI,OAAO,GAAG,IAAI1jI,KAAK,CAAE,QAAQ,CAAE;MACrC,IAAM2jI,WAAW,GAAG,IAAI3jI,KAAK,CAAE,QAAQ,CAAE;MACzC,IAAM4jI,UAAU,GAAG,IAAI5jI,KAAK,CAAE,QAAQ,CAAE;MAExCojI,QAAA,CAAKS,SAAS,CAAEL,YAAY,EAAEC,SAAS,EAAEC,OAAO,EAAEC,WAAW,EAAEC,UAAU,CAAE;MAAC,OAAAR,QAAA;IAE7E;IAAChzK,YAAA,CAAA6yK,YAAA;MAAA37K,GAAA;MAAAE,KAAA,EAED,SAAAq8K,UAAWhsH,OAAO,EAAEqoH,IAAI,EAAE51I,EAAE,EAAEt6B,MAAM,EAAEwV,KAAK,EAAG;QAE7C,IAAMuc,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,IAAM+hJ,cAAc,GAAG/hJ,QAAQ,CAACimB,YAAY,CAAE,OAAO,CAAE;;QAEvD;;QAEA87H,cAAc,CAACz/H,MAAM,CAAE,CAAC,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,CAAC,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;QAC1H+hK,cAAc,CAACz/H,MAAM,CAAE,CAAC,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,CAAC,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;QAC1H+hK,cAAc,CAACz/H,MAAM,CAAE,CAAC,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,CAAC,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;QAC1H+hK,cAAc,CAACz/H,MAAM,CAAE,CAAC,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,CAAC,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;;QAE1H;;QAEA+hK,cAAc,CAACz/H,MAAM,CAAE,CAAC,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,CAAC,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;QAC1H+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;QAC5H+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;QAC5H+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;;QAE5H;;QAEA+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;QAC5H+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;QAC5H+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;QAC5H+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEwT,OAAO,CAAC3sC,CAAC,EAAE2sC,OAAO,CAACxtC,CAAC,EAAEwtC,OAAO,CAAC91C,CAAC,CAAE,CAAC,CAAC;;QAE5H;;QAEA+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE67H,IAAI,CAACh1J,CAAC,EAAEg1J,IAAI,CAAC71J,CAAC,EAAE61J,IAAI,CAACn+J,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE67H,IAAI,CAACh1J,CAAC,EAAEg1J,IAAI,CAAC71J,CAAC,EAAE61J,IAAI,CAACn+J,CAAC,CAAE,CAAC,CAAC;QAC1G+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE67H,IAAI,CAACh1J,CAAC,EAAEg1J,IAAI,CAAC71J,CAAC,EAAE61J,IAAI,CAACn+J,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE67H,IAAI,CAACh1J,CAAC,EAAEg1J,IAAI,CAAC71J,CAAC,EAAE61J,IAAI,CAACn+J,CAAC,CAAE,CAAC,CAAC;QAC1G+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE67H,IAAI,CAACh1J,CAAC,EAAEg1J,IAAI,CAAC71J,CAAC,EAAE61J,IAAI,CAACn+J,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE67H,IAAI,CAACh1J,CAAC,EAAEg1J,IAAI,CAAC71J,CAAC,EAAE61J,IAAI,CAACn+J,CAAC,CAAE,CAAC,CAAC;QAC1G+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE67H,IAAI,CAACh1J,CAAC,EAAEg1J,IAAI,CAAC71J,CAAC,EAAE61J,IAAI,CAACn+J,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE67H,IAAI,CAACh1J,CAAC,EAAEg1J,IAAI,CAAC71J,CAAC,EAAE61J,IAAI,CAACn+J,CAAC,CAAE,CAAC,CAAC;;QAE1G;;QAEA+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE/Z,EAAE,CAACpf,CAAC,EAAEof,EAAE,CAACjgB,CAAC,EAAEigB,EAAE,CAACvoB,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE/Z,EAAE,CAACpf,CAAC,EAAEof,EAAE,CAACjgB,CAAC,EAAEigB,EAAE,CAACvoB,CAAC,CAAE,CAAC,CAAC;QAC9F+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE/Z,EAAE,CAACpf,CAAC,EAAEof,EAAE,CAACjgB,CAAC,EAAEigB,EAAE,CAACvoB,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE/Z,EAAE,CAACpf,CAAC,EAAEof,EAAE,CAACjgB,CAAC,EAAEigB,EAAE,CAACvoB,CAAC,CAAE,CAAC,CAAC;QAC9F+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE/Z,EAAE,CAACpf,CAAC,EAAEof,EAAE,CAACjgB,CAAC,EAAEigB,EAAE,CAACvoB,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE/Z,EAAE,CAACpf,CAAC,EAAEof,EAAE,CAACjgB,CAAC,EAAEigB,EAAE,CAACvoB,CAAC,CAAE,CAAC,CAAC;;QAE9F;;QAEA+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEr0C,MAAM,CAACkb,CAAC,EAAElb,MAAM,CAACqa,CAAC,EAAEra,MAAM,CAAC+R,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAEr0C,MAAM,CAACkb,CAAC,EAAElb,MAAM,CAACqa,CAAC,EAAEra,MAAM,CAAC+R,CAAC,CAAE,CAAC,CAAC;QACtH+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE7+B,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAACzD,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE7+B,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAACzD,CAAC,CAAE,CAAC,CAAC;;QAEhH;;QAEA+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE7+B,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAACzD,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE7+B,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAACzD,CAAC,CAAE,CAAC,CAAC;QAChH+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE7+B,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAACzD,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE7+B,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAACzD,CAAC,CAAE,CAAC,CAAC;;QAEhH+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE7+B,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAACzD,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE7+B,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAACzD,CAAC,CAAE,CAAC,CAAC;QAChH+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE7+B,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAACzD,CAAC,CAAE;QAAE+hK,cAAc,CAACz/H,MAAM,CAAE,EAAE,EAAE7+B,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAACzD,CAAC,CAAE,CAAC,CAAC;;QAEhH+hK,cAAc,CAAC/wJ,WAAW,GAAG,IAAI;MAElC;IAAC;MAAAzrB,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAA,EAAS;QAER,IAAMoJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAMshJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,IAAM7vJ,CAAC,GAAG,CAAC;UAAElJ,CAAC,GAAG,CAAC;;QAElB;QACA;;QAEA04J,OAAO,CAAC9kJ,uBAAuB,CAACja,IAAI,CAAE,IAAI,CAAC6Z,MAAM,CAACI,uBAAuB,CAAE;;QAE3E;;QAEA6lJ,QAAQ,CAAE,GAAG,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE;QACvDe,QAAQ,CAAE,GAAG,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;;QAErD;;QAEAe,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAExvJ,CAAC,EAAE,CAAElJ,CAAC,EAAE,CAAE,CAAC,CAAE;QAC5Dy5J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAExvJ,CAAC,EAAE,CAAElJ,CAAC,EAAE,CAAE,CAAC,CAAE;QAC1Dy5J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAExvJ,CAAC,EAAElJ,CAAC,EAAE,CAAE,CAAC,CAAE;QAC1Dy5J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAExvJ,CAAC,EAAElJ,CAAC,EAAE,CAAE,CAAC,CAAE;;QAExD;;QAEAy5J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAExvJ,CAAC,EAAE,CAAElJ,CAAC,EAAE,CAAC,CAAE;QAC1Dy5J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAExvJ,CAAC,EAAE,CAAElJ,CAAC,EAAE,CAAC,CAAE;QACxDy5J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAExvJ,CAAC,EAAElJ,CAAC,EAAE,CAAC,CAAE;QACxDy5J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAExvJ,CAAC,EAAElJ,CAAC,EAAE,CAAC,CAAE;;QAEtD;;QAEAy5J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAExvJ,CAAC,GAAG,GAAG,EAAElJ,CAAC,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE;QACpEy5J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAExvJ,CAAC,GAAG,GAAG,EAAElJ,CAAC,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE;QACtEy5J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAC,EAAE14J,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC,CAAE;;QAE5D;;QAEAy5J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAExvJ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACzDuwJ,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAExvJ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACvDuwJ,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAC,EAAE,CAAE14J,CAAC,EAAE,CAAC,CAAE;QACzDy5J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAC,EAAE14J,CAAC,EAAE,CAAC,CAAE;QAEvDy5J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAExvJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE;QAC3DuwJ,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAExvJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE;QACzDuwJ,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAC,EAAE,CAAE14J,CAAC,EAAE,CAAE,CAAC,CAAE;QAC3Dy5J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEthJ,QAAQ,EAAEihJ,OAAO,EAAE,CAAC,EAAE14J,CAAC,EAAE,CAAE,CAAC,CAAE;QAEzDyX,QAAQ,CAACimB,YAAY,CAAE,UAAU,CAAE,CAACj1B,WAAW,GAAG,IAAI;MAEvD;IAAC;MAAAzrB,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC6O,QAAQ,CAAC7O,OAAO,EAAE;QACvB,IAAI,CAACgiB,QAAQ,CAAChiB,OAAO,EAAE;MAExB;IAAC;IAAA,OAAA+vJ,YAAA;EAAA,EAjOyB1lD,YAAY;EAsOvC,SAASwmD,QAAQA,CAAEziJ,KAAK,EAAE+hJ,QAAQ,EAAEthJ,QAAQ,EAAEjE,MAAM,EAAExe,CAAC,EAAEM,CAAC,EAAE2T,CAAC,EAAG;IAE/DwvJ,OAAO,CAACngK,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE2T,CAAC,CAAE,CAAC0K,SAAS,CAAEH,MAAM,CAAE;IAE1C,IAAM6C,MAAM,GAAG0iJ,QAAQ,CAAE/hJ,KAAK,CAAE;IAEhC,IAAKX,MAAM,KAAK70B,SAAS,EAAG;MAE3B,IAAMm2B,QAAQ,GAAGF,QAAQ,CAACimB,YAAY,CAAE,UAAU,CAAE;MAEpD,KAAM,IAAI36C,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAG2iB,MAAM,CAACvzB,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;QAEjD40B,QAAQ,CAACoiB,MAAM,CAAE1jB,MAAM,CAAEtzB,CAAC,CAAE,EAAE01K,OAAO,CAACzjK,CAAC,EAAEyjK,OAAO,CAACnjK,CAAC,EAAEmjK,OAAO,CAACxvJ,CAAC,CAAE;MAEhE;IAED;EAED;EAEA,IAAMywJ,IAAI,GAAG,aAAc,IAAI9jJ,IAAI,EAAE;EAAC,IAEhC+jJ,SAAS,0BAAAC,cAAA;IAAAtzJ,SAAA,CAAAqzJ,SAAA,EAAAC,cAAA;IAAA,IAAAC,SAAA,GAAArzJ,YAAA,CAAAmzJ,SAAA;IAEd,SAAAA,UAAa51K,MAAM,EAAE6e,KAAK,GAAG,QAAQ,EAAG;MAAA,IAAAk3J,QAAA;MAAAx0K,eAAA,OAAAq0K,SAAA;MAEvC,IAAMl7H,OAAO,GAAG,IAAIhmC,WAAW,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;MAC7G,IAAMimC,SAAS,GAAG,IAAIlmC,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE;MAE3C,IAAMif,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MACrCplB,QAAQ,CAACgmB,QAAQ,CAAE,IAAIvE,eAAe,CAAEuF,OAAO,EAAE,CAAC,CAAE,CAAE;MACtDhnB,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAIzE,eAAe,CAAEwF,SAAS,EAAE,CAAC,CAAE,CAAE;MAExEo7H,QAAA,GAAAD,SAAA,CAAA76K,IAAA,OAAOy4B,QAAQ,EAAE,IAAI6zD,iBAAiB,CAAE;QAAE1oE,KAAK,EAAEA,KAAK;QAAE4tB,UAAU,EAAE;MAAM,CAAC,CAAE;MAE7EspI,QAAA,CAAK/1K,MAAM,GAAGA,MAAM;MACpB+1K,QAAA,CAAK/6K,IAAI,GAAG,WAAW;MAEvB+6K,QAAA,CAAKlyJ,gBAAgB,GAAG,KAAK;MAE7BkyJ,QAAA,CAAKzrJ,MAAM,EAAE;MAAC,OAAAyrJ,QAAA;IAEf;IAACh0K,YAAA,CAAA6zK,SAAA;MAAA38K,GAAA;MAAAE,KAAA,EAED,SAAAmxB,OAAQtqB,MAAM,EAAG;QAEhB,IAAKA,MAAM,KAAKvC,SAAS,EAAG;UAE3BiF,OAAO,CAACC,IAAI,CAAE,qDAAqD,CAAE;QAEtE;QAEA,IAAK,IAAI,CAAC3C,MAAM,KAAKvC,SAAS,EAAG;UAEhCk4K,IAAI,CAACjjJ,aAAa,CAAE,IAAI,CAAC1yB,MAAM,CAAE;QAElC;QAEA,IAAK21K,IAAI,CAAC7iJ,OAAO,EAAE,EAAG;QAEtB,IAAMniB,GAAG,GAAGglK,IAAI,CAAChlK,GAAG;QACpB,IAAMC,GAAG,GAAG+kK,IAAI,CAAC/kK,GAAG;;QAEpB;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;QAGG,IAAMgjB,QAAQ,GAAG,IAAI,CAACF,QAAQ,CAACC,UAAU,CAACC,QAAQ;QAClD,IAAMlkB,KAAK,GAAGkkB,QAAQ,CAAClkB,KAAK;QAE5BA,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACK,CAAC;QAAEvB,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACW,CAAC;QAAE7B,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACsU,CAAC;QAC1DxV,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACM,CAAC;QAAEvB,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACW,CAAC;QAAE7B,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACsU,CAAC;QAC1DxV,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACM,CAAC;QAAEvB,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACY,CAAC;QAAE7B,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACsU,CAAC;QAC1DxV,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACK,CAAC;QAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACY,CAAC;QAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACsU,CAAC;QAC5DxV,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACK,CAAC;QAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACW,CAAC;QAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACuU,CAAC;QAC7DxV,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACM,CAAC;QAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACW,CAAC;QAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACuU,CAAC;QAC7DxV,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACM,CAAC;QAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACY,CAAC;QAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACuU,CAAC;QAC7DxV,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACK,CAAC;QAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACY,CAAC;QAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACuU,CAAC;QAE7D0O,QAAQ,CAAClP,WAAW,GAAG,IAAI;QAE3B,IAAI,CAACgP,QAAQ,CAAC0mB,qBAAqB,EAAE;MAEtC;IAAC;MAAAnhD,GAAA;MAAAE,KAAA,EAED,SAAAu5B,cAAe1yB,MAAM,EAAG;QAEvB,IAAI,CAACA,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACsqB,MAAM,EAAE;QAEb,OAAO,IAAI;MAEZ;IAAC;MAAArxB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAE0jB,SAAS,EAAG;QAEzBgN,IAAA,CAAAC,eAAA,CAAAyhI,SAAA,CAAAh9K,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE0jB,SAAS;QAE7B,IAAI,CAAClnC,MAAM,GAAGwjB,MAAM,CAACxjB,MAAM;QAE3B,OAAO,IAAI;MAEZ;IAAC;MAAA/G,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC6O,QAAQ,CAAC7O,OAAO,EAAE;QACvB,IAAI,CAACgiB,QAAQ,CAAChiB,OAAO,EAAE;MAExB;IAAC;IAAA,OAAA+wJ,SAAA;EAAA,EAnGsB1mD,YAAY;EAAA,IAuG9B8mD,UAAU,0BAAAC,cAAA;IAAA1zJ,SAAA,CAAAyzJ,UAAA,EAAAC,cAAA;IAAA,IAAAC,SAAA,GAAAzzJ,YAAA,CAAAuzJ,UAAA;IAEf,SAAAA,WAAanjJ,GAAG,EAAEhU,KAAK,GAAG,QAAQ,EAAG;MAAA,IAAAs3J,QAAA;MAAA50K,eAAA,OAAAy0K,UAAA;MAEpC,IAAMt7H,OAAO,GAAG,IAAIhmC,WAAW,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;MAE7G,IAAMimC,SAAS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MAEpH,IAAMjnB,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MAErCplB,QAAQ,CAACgmB,QAAQ,CAAE,IAAIvE,eAAe,CAAEuF,OAAO,EAAE,CAAC,CAAE,CAAE;MAEtDhnB,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAC,CAAE,CAAE;MAE/Ew7H,QAAA,GAAAD,SAAA,CAAAj7K,IAAA,OAAOy4B,QAAQ,EAAE,IAAI6zD,iBAAiB,CAAE;QAAE1oE,KAAK,EAAEA,KAAK;QAAE4tB,UAAU,EAAE;MAAM,CAAC,CAAE;MAE7E0pI,QAAA,CAAKtjJ,GAAG,GAAGA,GAAG;MAEdsjJ,QAAA,CAAKn7K,IAAI,GAAG,YAAY;MAExBm7K,QAAA,CAAKziJ,QAAQ,CAAC0mB,qBAAqB,EAAE;MAAC,OAAA+7H,QAAA;IAEvC;IAACp0K,YAAA,CAAAi0K,UAAA;MAAA/8K,GAAA;MAAAE,KAAA,EAED,SAAA8rC,kBAAmBC,KAAK,EAAG;QAE1B,IAAMrS,GAAG,GAAG,IAAI,CAACA,GAAG;QAEpB,IAAKA,GAAG,CAACC,OAAO,EAAE,EAAG;QAErBD,GAAG,CAACE,SAAS,CAAE,IAAI,CAACa,QAAQ,CAAE;QAE9Bf,GAAG,CAACG,OAAO,CAAE,IAAI,CAAC1V,KAAK,CAAE;QAEzB,IAAI,CAACA,KAAK,CAAChH,cAAc,CAAE,GAAG,CAAE;QAEhC49B,IAAA,CAAAC,eAAA,CAAA6hI,UAAA,CAAAp9K,SAAA,8BAAAqC,IAAA,OAAyBiqC,KAAK;MAE/B;IAAC;MAAAjsC,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC6O,QAAQ,CAAC7O,OAAO,EAAE;QACvB,IAAI,CAACgiB,QAAQ,CAAChiB,OAAO,EAAE;MAExB;IAAC;IAAA,OAAAmxJ,UAAA;EAAA,EA7CuB9mD,YAAY;EAAA,IAiD/BknD,WAAW,0BAAAC,MAAA;IAAA9zJ,SAAA,CAAA6zJ,WAAA,EAAAC,MAAA;IAAA,IAAAC,SAAA,GAAA7zJ,YAAA,CAAA2zJ,WAAA;IAEhB,SAAAA,YAAa9hJ,KAAK,EAAE9B,IAAI,GAAG,CAAC,EAAEwf,GAAG,GAAG,QAAQ,EAAG;MAAA,IAAAukI,QAAA;MAAAh1K,eAAA,OAAA60K,WAAA;MAE9C,IAAMv3J,KAAK,GAAGmzB,GAAG;MAEjB,IAAM2I,SAAS,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAE5G,IAAMjnB,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MACrCplB,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAC,CAAE,CAAE;MAC/EjnB,QAAQ,CAAC0mB,qBAAqB,EAAE;MAEhCm8H,QAAA,GAAAD,SAAA,CAAAr7K,IAAA,OAAOy4B,QAAQ,EAAE,IAAI6zD,iBAAiB,CAAE;QAAE1oE,KAAK,EAAEA,KAAK;QAAE4tB,UAAU,EAAE;MAAM,CAAC,CAAE;MAE7E8pI,QAAA,CAAKv7K,IAAI,GAAG,aAAa;MAEzBu7K,QAAA,CAAKjiJ,KAAK,GAAGA,KAAK;MAElBiiJ,QAAA,CAAK/jJ,IAAI,GAAGA,IAAI;MAEhB,IAAMgkJ,UAAU,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;MAEvF,IAAMt5H,SAAS,GAAG,IAAIpE,cAAc,EAAE;MACtCoE,SAAS,CAACtD,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEu+H,UAAU,EAAE,CAAC,CAAE,CAAE;MACjFt5H,SAAS,CAAC9C,qBAAqB,EAAE;MAEjCm8H,QAAA,CAAKzgK,GAAG,CAAE,IAAI0oC,IAAI,CAAEtB,SAAS,EAAE,IAAIrJ,iBAAiB,CAAE;QAAEh1B,KAAK,EAAEA,KAAK;QAAE4rB,OAAO,EAAE,GAAG;QAAEC,WAAW,EAAE,IAAI;QAAES,UAAU,EAAE,KAAK;QAAEsB,UAAU,EAAE;MAAM,CAAC,CAAE,CAAE,CAAE;MAAC,OAAA8pI,QAAA;IAErJ;IAACx0K,YAAA,CAAAq0K,WAAA;MAAAn9K,GAAA;MAAAE,KAAA,EAED,SAAA8rC,kBAAmBC,KAAK,EAAG;QAE1B,IAAI,CAACtR,QAAQ,CAACrf,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAE5B,IAAI,CAAC+I,KAAK,CAAC/I,GAAG,CAAE,GAAG,GAAG,IAAI,CAACie,IAAI,EAAE,GAAG,GAAG,IAAI,CAACA,IAAI,EAAE,CAAC,CAAE;QAErD,IAAI,CAAC+E,MAAM,CAAE,IAAI,CAACjD,KAAK,CAAC1D,MAAM,CAAE;QAEhC,IAAI,CAAC4S,UAAU,CAAE,CAAE,IAAI,CAAClP,KAAK,CAACC,QAAQ,CAAE;QAExC2f,IAAA,CAAAC,eAAA,CAAAiiI,WAAA,CAAAx9K,SAAA,8BAAAqC,IAAA,OAAyBiqC,KAAK;MAE/B;IAAC;MAAAjsC,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC6O,QAAQ,CAAC7O,OAAO,EAAE;QACvB,IAAI,CAACgiB,QAAQ,CAAChiB,OAAO,EAAE;QACvB,IAAI,CAACgP,QAAQ,CAAE,CAAC,CAAE,CAACH,QAAQ,CAAC7O,OAAO,EAAE;QACrC,IAAI,CAACgP,QAAQ,CAAE,CAAC,CAAE,CAACgT,QAAQ,CAAChiB,OAAO,EAAE;MAEtC;IAAC;IAAA,OAAAuxJ,WAAA;EAAA,EAnDwBjoD,IAAI;EAuD9B,IAAMsoD,KAAK,GAAG,aAAc,IAAIloJ,OAAO,EAAE;EACzC,IAAImoJ,aAAa,EAAEC,aAAa;EAAC,IAE3BC,WAAW,0BAAAC,WAAA;IAAAt0J,SAAA,CAAAq0J,WAAA,EAAAC,WAAA;IAAA,IAAAC,SAAA,GAAAr0J,YAAA,CAAAm0J,WAAA;IAEhB;;IAEA,SAAAA,YAAa1oJ,GAAG,GAAG,IAAIK,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE4I,MAAM,GAAG,IAAI5I,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAExvB,MAAM,GAAG,CAAC,EAAE8f,KAAK,GAAG,QAAQ,EAAEk4J,UAAU,GAAGh4K,MAAM,GAAG,GAAG,EAAEi4K,SAAS,GAAGD,UAAU,GAAG,GAAG,EAAG;MAAA,IAAAE,QAAA;MAAA11K,eAAA,OAAAq1K,WAAA;MAEnKK,QAAA,GAAAH,SAAA,CAAA77K,IAAA;MAEAg8K,QAAA,CAAKj8K,IAAI,GAAG,aAAa;MAEzB,IAAK07K,aAAa,KAAKj5K,SAAS,EAAG;QAElCi5K,aAAa,GAAG,IAAI59H,cAAc,EAAE;QACpC49H,aAAa,CAAC98H,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAE;QAE/F0+H,aAAa,GAAG,IAAIz4C,gBAAgB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACvDy4C,aAAa,CAACh5J,SAAS,CAAE,CAAC,EAAE,CAAE,GAAG,EAAE,CAAC,CAAE;MAEvC;MAEAs5J,QAAA,CAAKrjJ,QAAQ,CAAChe,IAAI,CAAEuhB,MAAM,CAAE;MAE5B8/I,QAAA,CAAKtuH,IAAI,GAAG,IAAIwlE,IAAI,CAAEuoD,aAAa,EAAE,IAAInvF,iBAAiB,CAAE;QAAE1oE,KAAK,EAAEA,KAAK;QAAE4tB,UAAU,EAAE;MAAM,CAAC,CAAE,CAAE;MACnGwqI,QAAA,CAAKtuH,IAAI,CAAC9kC,gBAAgB,GAAG,KAAK;MAClCozJ,QAAA,CAAKnhK,GAAG,CAAEmhK,QAAA,CAAKtuH,IAAI,CAAE;MAErBsuH,QAAA,CAAKpF,IAAI,GAAG,IAAIrzH,IAAI,CAAEm4H,aAAa,EAAE,IAAI9iI,iBAAiB,CAAE;QAAEh1B,KAAK,EAAEA,KAAK;QAAE4tB,UAAU,EAAE;MAAM,CAAC,CAAE,CAAE;MACnGwqI,QAAA,CAAKpF,IAAI,CAAChuJ,gBAAgB,GAAG,KAAK;MAClCozJ,QAAA,CAAKnhK,GAAG,CAAEmhK,QAAA,CAAKpF,IAAI,CAAE;MAErBoF,QAAA,CAAKC,YAAY,CAAEhpJ,GAAG,CAAE;MACxB+oJ,QAAA,CAAK/+J,SAAS,CAAEnZ,MAAM,EAAEg4K,UAAU,EAAEC,SAAS,CAAE;MAAC,OAAAC,QAAA;IAEjD;IAACl1K,YAAA,CAAA60K,WAAA;MAAA39K,GAAA;MAAAE,KAAA,EAED,SAAA+9K,aAAchpJ,GAAG,EAAG;QAEnB;;QAEA,IAAKA,GAAG,CAAC3c,CAAC,GAAG,OAAO,EAAG;UAEtB,IAAI,CAAC4Y,UAAU,CAAC5V,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAElC,CAAC,MAAM,IAAK2Z,GAAG,CAAC3c,CAAC,GAAG,CAAE,OAAO,EAAG;UAE/B,IAAI,CAAC4Y,UAAU,CAAC5V,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAElC,CAAC,MAAM;UAENkiK,KAAK,CAACliK,GAAG,CAAE2Z,GAAG,CAAChJ,CAAC,EAAE,CAAC,EAAE,CAAEgJ,GAAG,CAACjd,CAAC,CAAE,CAAC6D,SAAS,EAAE;UAE1C,IAAM/B,OAAO,GAAGhD,IAAI,CAAC6H,IAAI,CAAEsW,GAAG,CAAC3c,CAAC,CAAE;UAElC,IAAI,CAAC4Y,UAAU,CAACS,gBAAgB,CAAE6rJ,KAAK,EAAE1jK,OAAO,CAAE;QAEnD;MAED;IAAC;MAAA9Z,GAAA;MAAAE,KAAA,EAED,SAAA+e,UAAWnZ,MAAM,EAAEg4K,UAAU,GAAGh4K,MAAM,GAAG,GAAG,EAAEi4K,SAAS,GAAGD,UAAU,GAAG,GAAG,EAAG;QAE5E,IAAI,CAACpuH,IAAI,CAACrrC,KAAK,CAAC/I,GAAG,CAAE,CAAC,EAAExE,IAAI,CAACa,GAAG,CAAE,MAAM,EAAE7R,MAAM,GAAGg4K,UAAU,CAAE,EAAE,CAAC,CAAE,CAAC,CAAC;QACtE,IAAI,CAACpuH,IAAI,CAACrkC,YAAY,EAAE;QAExB,IAAI,CAACutJ,IAAI,CAACv0J,KAAK,CAAC/I,GAAG,CAAEyiK,SAAS,EAAED,UAAU,EAAEC,SAAS,CAAE;QACvD,IAAI,CAACnF,IAAI,CAACj+I,QAAQ,CAACriB,CAAC,GAAGxS,MAAM;QAC7B,IAAI,CAAC8yK,IAAI,CAACvtJ,YAAY,EAAE;MAEzB;IAAC;MAAArrB,GAAA;MAAAE,KAAA,EAED,SAAAg+K,SAAUt4J,KAAK,EAAG;QAEjB,IAAI,CAAC8pC,IAAI,CAAC9hB,QAAQ,CAAChoB,KAAK,CAACtK,GAAG,CAAEsK,KAAK,CAAE;QACrC,IAAI,CAACgzJ,IAAI,CAAChrI,QAAQ,CAAChoB,KAAK,CAACtK,GAAG,CAAEsK,KAAK,CAAE;MAEtC;IAAC;MAAA5lB,GAAA;MAAAE,KAAA,EAED,SAAAyc,KAAM4N,MAAM,EAAG;QAEd0wB,IAAA,CAAAC,eAAA,CAAAyiI,WAAA,CAAAh+K,SAAA,iBAAAqC,IAAA,OAAYuoB,MAAM,EAAE,KAAK;QAEzB,IAAI,CAACmlC,IAAI,CAAC/yC,IAAI,CAAE4N,MAAM,CAACmlC,IAAI,CAAE;QAC7B,IAAI,CAACkpH,IAAI,CAACj8J,IAAI,CAAE4N,MAAM,CAACquJ,IAAI,CAAE;QAE7B,OAAO,IAAI;MAEZ;IAAC;MAAA54K,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC8jC,IAAI,CAACj1B,QAAQ,CAAC7O,OAAO,EAAE;QAC5B,IAAI,CAAC8jC,IAAI,CAAC9hB,QAAQ,CAAChiB,OAAO,EAAE;QAC5B,IAAI,CAACgtJ,IAAI,CAACn+I,QAAQ,CAAC7O,OAAO,EAAE;QAC5B,IAAI,CAACgtJ,IAAI,CAAChrI,QAAQ,CAAChiB,OAAO,EAAE;MAE7B;IAAC;IAAA,OAAA+xJ,WAAA;EAAA,EA/FwBz1I,QAAQ;EAAA,IAmG5Bi2I,UAAU,0BAAAC,cAAA;IAAA90J,SAAA,CAAA60J,UAAA,EAAAC,cAAA;IAAA,IAAAC,SAAA,GAAA70J,YAAA,CAAA20J,UAAA;IAEf,SAAAA,WAAa5kJ,IAAI,GAAG,CAAC,EAAG;MAAA,IAAA+kJ,QAAA;MAAAh2K,eAAA,OAAA61K,UAAA;MAEvB,IAAM92H,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE9tB,IAAI,EAAE,CAAC,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,IAAI,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,IAAI,CACnB;MAED,IAAMggJ,MAAM,GAAG,CACd,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAClB;MAED,IAAM9+I,QAAQ,GAAG,IAAIolB,cAAc,EAAE;MACrCplB,QAAQ,CAACkmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAC,CAAE,CAAE;MAC9E5sB,QAAQ,CAACkmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAEu6H,MAAM,EAAE,CAAC,CAAE,CAAE;MAEzE,IAAM3rI,QAAQ,GAAG,IAAI0gD,iBAAiB,CAAE;QAAE/8C,YAAY,EAAE,IAAI;QAAEiC,UAAU,EAAE;MAAM,CAAC,CAAE;MAEnF8qI,QAAA,GAAAD,SAAA,CAAAr8K,IAAA,OAAOy4B,QAAQ,EAAEmT,QAAQ;MAEzB0wI,QAAA,CAAKv8K,IAAI,GAAG,YAAY;MAAC,OAAAu8K,QAAA;IAE1B;IAACx1K,YAAA,CAAAq1K,UAAA;MAAAn+K,GAAA;MAAAE,KAAA,EAED,SAAAq8K,UAAWgC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAG;QAE/C,IAAM74J,KAAK,GAAG,IAAI8yB,KAAK,EAAE;QACzB,IAAMjiC,KAAK,GAAG,IAAI,CAACgkB,QAAQ,CAACC,UAAU,CAAC9U,KAAK,CAACnP,KAAK;QAElDmP,KAAK,CAACtK,GAAG,CAAEijK,UAAU,CAAE;QACvB34J,KAAK,CAACnG,OAAO,CAAEhJ,KAAK,EAAE,CAAC,CAAE;QACzBmP,KAAK,CAACnG,OAAO,CAAEhJ,KAAK,EAAE,CAAC,CAAE;QAEzBmP,KAAK,CAACtK,GAAG,CAAEkjK,UAAU,CAAE;QACvB54J,KAAK,CAACnG,OAAO,CAAEhJ,KAAK,EAAE,CAAC,CAAE;QACzBmP,KAAK,CAACnG,OAAO,CAAEhJ,KAAK,EAAE,CAAC,CAAE;QAEzBmP,KAAK,CAACtK,GAAG,CAAEmjK,UAAU,CAAE;QACvB74J,KAAK,CAACnG,OAAO,CAAEhJ,KAAK,EAAE,EAAE,CAAE;QAC1BmP,KAAK,CAACnG,OAAO,CAAEhJ,KAAK,EAAE,EAAE,CAAE;QAE1B,IAAI,CAACgkB,QAAQ,CAACC,UAAU,CAAC9U,KAAK,CAAC6F,WAAW,GAAG,IAAI;QAEjD,OAAO,IAAI;MAEZ;IAAC;MAAAzrB,GAAA;MAAAE,KAAA,EAED,SAAA0rB,QAAA,EAAU;QAET,IAAI,CAAC6O,QAAQ,CAAC7O,OAAO,EAAE;QACvB,IAAI,CAACgiB,QAAQ,CAAChiB,OAAO,EAAE;MAExB;IAAC;IAAA,OAAAuyJ,UAAA;EAAA,EAxDuBloD,YAAY;EAAA,IA4D/ByoD,SAAS;IAEd,SAAAA,UAAA,EAAc;MAAAp2K,eAAA,OAAAo2K,SAAA;MAEb,IAAI,CAAC38K,IAAI,GAAG,WAAW;MAEvB,IAAI,CAAC6jB,KAAK,GAAG,IAAI8yB,KAAK,EAAE;MAExB,IAAI,CAACimI,QAAQ,GAAG,EAAE;MAClB,IAAI,CAACC,WAAW,GAAG,IAAI;IAExB;IAAC91K,YAAA,CAAA41K,SAAA;MAAA1+K,GAAA;MAAAE,KAAA,EAED,SAAAqiI,OAAQvqH,CAAC,EAAEM,CAAC,EAAG;QAEd,IAAI,CAACsmK,WAAW,GAAG,IAAI18C,IAAI,EAAE;QAC7B,IAAI,CAACy8C,QAAQ,CAACp5K,IAAI,CAAE,IAAI,CAACq5K,WAAW,CAAE;QACtC,IAAI,CAACA,WAAW,CAACr8C,MAAM,CAAEvqH,CAAC,EAAEM,CAAC,CAAE;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAsiI,OAAQxqH,CAAC,EAAEM,CAAC,EAAG;QAEd,IAAI,CAACsmK,WAAW,CAACp8C,MAAM,CAAExqH,CAAC,EAAEM,CAAC,CAAE;QAE/B,OAAO,IAAI;MAEZ;IAAC;MAAAtY,GAAA;MAAAE,KAAA,EAED,SAAAuiI,iBAAkBC,IAAI,EAAEC,IAAI,EAAEjH,EAAE,EAAEC,EAAE,EAAG;QAEtC,IAAI,CAACijD,WAAW,CAACn8C,gBAAgB,CAAEC,IAAI,EAAEC,IAAI,EAAEjH,EAAE,EAAEC,EAAE,CAAE;QAEvD,OAAO,IAAI;MAEZ;IAAC;MAAA37H,GAAA;MAAAE,KAAA,EAED,SAAA0iI,cAAeC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEtH,EAAE,EAAEC,EAAE,EAAG;QAEnD,IAAI,CAACijD,WAAW,CAACh8C,aAAa,CAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEtH,EAAE,EAAEC,EAAE,CAAE;QAEpE,OAAO,IAAI;MAEZ;IAAC;MAAA37H,GAAA;MAAAE,KAAA,EAED,SAAA+iI,WAAYhB,GAAG,EAAG;QAEjB,IAAI,CAAC28C,WAAW,CAAC37C,UAAU,CAAEhB,GAAG,CAAE;QAElC,OAAO,IAAI;MAEZ;IAAC;MAAAjiI,GAAA;MAAAE,KAAA,EAED,SAAA2+K,SAAUC,KAAK,EAAG;QAEjB,SAASC,eAAeA,CAAEC,UAAU,EAAG;UAEtC,IAAM1yI,MAAM,GAAG,EAAE;UAEjB,KAAM,IAAIvmC,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGsoK,UAAU,CAACl5K,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;YAErD,IAAMk5K,QAAO,GAAGD,UAAU,CAAEj5K,CAAC,CAAE;YAE/B,IAAMm5K,SAAQ,GAAG,IAAIz1C,KAAK,EAAE;YAC5By1C,SAAQ,CAAC79C,MAAM,GAAG49C,QAAO,CAAC59C,MAAM;YAEhC/0F,MAAM,CAAC/mC,IAAI,CAAE25K,SAAQ,CAAE;UAExB;UAEA,OAAO5yI,MAAM;QAEd;QAEA,SAAS6yI,oBAAoBA,CAAEhuC,IAAI,EAAEiuC,SAAS,EAAG;UAEhD,IAAMC,OAAO,GAAGD,SAAS,CAACt5K,MAAM;;UAEhC;UACA;UACA;UACA;UACA,IAAIyoI,MAAM,GAAG,KAAK;UAClB,KAAM,IAAIxoG,CAAC,GAAGs5I,OAAO,GAAG,CAAC,EAAE9kK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8kK,OAAO,EAAEt5I,CAAC,GAAGxrB,CAAC,EAAG,EAAG;YAEzD,IAAI+kK,SAAS,GAAGF,SAAS,CAAEr5I,CAAC,CAAE;YAC9B,IAAIw5I,UAAU,GAAGH,SAAS,CAAE7kK,CAAC,CAAE;YAE/B,IAAIilK,MAAM,GAAGD,UAAU,CAACvnK,CAAC,GAAGsnK,SAAS,CAACtnK,CAAC;YACvC,IAAIynK,MAAM,GAAGF,UAAU,CAACjnK,CAAC,GAAGgnK,SAAS,CAAChnK,CAAC;YAEvC,IAAKxB,IAAI,CAACgC,GAAG,CAAE2mK,MAAM,CAAE,GAAGj2K,MAAM,CAAC2oB,OAAO,EAAG;cAE1C;cACA,IAAKstJ,MAAM,GAAG,CAAC,EAAG;gBAEjBH,SAAS,GAAGF,SAAS,CAAE7kK,CAAC,CAAE;gBAAEilK,MAAM,GAAG,CAAEA,MAAM;gBAC7CD,UAAU,GAAGH,SAAS,CAAEr5I,CAAC,CAAE;gBAAE05I,MAAM,GAAG,CAAEA,MAAM;cAE/C;cAEA,IAAOtuC,IAAI,CAAC74H,CAAC,GAAGgnK,SAAS,CAAChnK,CAAC,IAAQ64H,IAAI,CAAC74H,CAAC,GAAGinK,UAAU,CAACjnK,CAAG,EAAK;cAE/D,IAAK64H,IAAI,CAAC74H,CAAC,KAAKgnK,SAAS,CAAChnK,CAAC,EAAG;gBAE7B,IAAK64H,IAAI,CAACn5H,CAAC,KAAKsnK,SAAS,CAACtnK,CAAC,EAAI,OAAO,IAAI,CAAC,CAAE;gBAC7C;cAED,CAAC,MAAM;gBAEN,IAAM0nK,QAAQ,GAAGD,MAAM,IAAKtuC,IAAI,CAACn5H,CAAC,GAAGsnK,SAAS,CAACtnK,CAAC,CAAE,GAAGwnK,MAAM,IAAKruC,IAAI,CAAC74H,CAAC,GAAGgnK,SAAS,CAAChnK,CAAC,CAAE;gBACtF,IAAKonK,QAAQ,KAAK,CAAC,EAAM,OAAO,IAAI,CAAC,CAAE;gBACvC,IAAKA,QAAQ,GAAG,CAAC,EAAO;gBACxBnxC,MAAM,GAAG,CAAEA,MAAM,CAAC,CAAE;cAErB;YAED,CAAC,MAAM;cAEN;cACA,IAAK4C,IAAI,CAAC74H,CAAC,KAAKgnK,SAAS,CAAChnK,CAAC,EAAK,SAAS,CAAG;cAC5C;cACA,IAASinK,UAAU,CAACvnK,CAAC,IAAIm5H,IAAI,CAACn5H,CAAC,IAAQm5H,IAAI,CAACn5H,CAAC,IAAIsnK,SAAS,CAACtnK,CAAG,IACxDsnK,SAAS,CAACtnK,CAAC,IAAIm5H,IAAI,CAACn5H,CAAC,IAAQm5H,IAAI,CAACn5H,CAAC,IAAIunK,UAAU,CAACvnK,CAAK,EAAI,OAAO,IAAI,CAAC,CAAC;cAC9E;YAED;UAED;;UAEA,OAAOu2H,MAAM;QAEd;QAEA,IAAMM,WAAW,GAAGF,UAAU,CAACE,WAAW;QAE1C,IAAM8vC,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC9B,IAAKA,QAAQ,CAAC74K,MAAM,KAAK,CAAC,EAAG,OAAO,EAAE;QAEtC,IAAI65K,KAAK,EAAEV,OAAO,EAAEC,QAAQ;QAC5B,IAAM5yI,MAAM,GAAG,EAAE;QAEjB,IAAKqyI,QAAQ,CAAC74K,MAAM,KAAK,CAAC,EAAG;UAE5Bm5K,OAAO,GAAGN,QAAQ,CAAE,CAAC,CAAE;UACvBO,QAAQ,GAAG,IAAIz1C,KAAK,EAAE;UACtBy1C,QAAQ,CAAC79C,MAAM,GAAG49C,OAAO,CAAC59C,MAAM;UAChC/0F,MAAM,CAAC/mC,IAAI,CAAE25K,QAAQ,CAAE;UACvB,OAAO5yI,MAAM;QAEd;QAEA,IAAIszI,UAAU,GAAG,CAAE/wC,WAAW,CAAE8vC,QAAQ,CAAE,CAAC,CAAE,CAACllD,SAAS,EAAE,CAAE;QAC3DmmD,UAAU,GAAGd,KAAK,GAAG,CAAEc,UAAU,GAAGA,UAAU;;QAE9C;;QAEA,IAAMC,gBAAgB,GAAG,EAAE;QAC3B,IAAMC,SAAS,GAAG,EAAE;QACpB,IAAIC,aAAa,GAAG,EAAE;QACtB,IAAIC,OAAO,GAAG,CAAC;QACf,IAAIC,SAAS;QAEbH,SAAS,CAAEE,OAAO,CAAE,GAAGx7K,SAAS;QAChCu7K,aAAa,CAAEC,OAAO,CAAE,GAAG,EAAE;QAE7B,KAAM,IAAIj6K,CAAC,GAAG,CAAC,EAAE2Q,CAAC,GAAGioK,QAAQ,CAAC74K,MAAM,EAAEC,CAAC,GAAG2Q,CAAC,EAAE3Q,CAAC,EAAG,EAAG;UAEnDk5K,OAAO,GAAGN,QAAQ,CAAE54K,CAAC,CAAE;UACvBk6K,SAAS,GAAGhB,OAAO,CAACxlD,SAAS,EAAE;UAC/BkmD,KAAK,GAAG9wC,WAAW,CAAEoxC,SAAS,CAAE;UAChCN,KAAK,GAAGb,KAAK,GAAG,CAAEa,KAAK,GAAGA,KAAK;UAE/B,IAAKA,KAAK,EAAG;YAEZ,IAAO,CAAEC,UAAU,IAAQE,SAAS,CAAEE,OAAO,CAAI,EAAGA,OAAO,EAAG;YAE9DF,SAAS,CAAEE,OAAO,CAAE,GAAG;cAAEvmK,CAAC,EAAE,IAAIgwH,KAAK,EAAE;cAAE1jG,CAAC,EAAEk6I;YAAU,CAAC;YACvDH,SAAS,CAAEE,OAAO,CAAE,CAACvmK,CAAC,CAAC4nH,MAAM,GAAG49C,OAAO,CAAC59C,MAAM;YAE9C,IAAKu+C,UAAU,EAAGI,OAAO,EAAG;YAC5BD,aAAa,CAAEC,OAAO,CAAE,GAAG,EAAE;;YAE7B;UAED,CAAC,MAAM;YAEND,aAAa,CAAEC,OAAO,CAAE,CAACz6K,IAAI,CAAE;cAAEyd,CAAC,EAAEi8J,OAAO;cAAEl5I,CAAC,EAAEk6I,SAAS,CAAE,CAAC;YAAG,CAAC,CAAE;;YAElE;UAED;QAED;;QAEA;QACA,IAAK,CAAEH,SAAS,CAAE,CAAC,CAAE,EAAG,OAAOf,eAAe,CAAEJ,QAAQ,CAAE;QAG1D,IAAKmB,SAAS,CAACh6K,MAAM,GAAG,CAAC,EAAG;UAE3B,IAAIo6K,SAAS,GAAG,KAAK;UACrB,IAAIC,QAAQ,GAAG,CAAC;UAEhB,KAAM,IAAIC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAGP,SAAS,CAACh6K,MAAM,EAAEs6K,IAAI,GAAGC,IAAI,EAAED,IAAI,EAAG,EAAG;YAEnEP,gBAAgB,CAAEO,IAAI,CAAE,GAAG,EAAE;UAE9B;UAEA,KAAM,IAAIA,KAAI,GAAG,CAAC,EAAEC,KAAI,GAAGP,SAAS,CAACh6K,MAAM,EAAEs6K,KAAI,GAAGC,KAAI,EAAED,KAAI,EAAG,EAAG;YAEnE,IAAME,GAAG,GAAGP,aAAa,CAAEK,KAAI,CAAE;YAEjC,KAAM,IAAIG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGD,GAAG,CAACx6K,MAAM,EAAEy6K,IAAI,EAAG,EAAG;cAEhD,IAAMC,EAAE,GAAGF,GAAG,CAAEC,IAAI,CAAE;cACtB,IAAIE,eAAe,GAAG,IAAI;cAE1B,KAAM,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGZ,SAAS,CAACh6K,MAAM,EAAE46K,KAAK,EAAG,EAAG;gBAEzD,IAAKvB,oBAAoB,CAAEqB,EAAE,CAACz6I,CAAC,EAAE+5I,SAAS,CAAEY,KAAK,CAAE,CAAC36I,CAAC,CAAE,EAAG;kBAEzD,IAAKq6I,KAAI,KAAKM,KAAK,EAAGP,QAAQ,EAAG;kBAEjC,IAAKM,eAAe,EAAG;oBAEtBA,eAAe,GAAG,KAAK;oBACvBZ,gBAAgB,CAAEa,KAAK,CAAE,CAACn7K,IAAI,CAAEi7K,EAAE,CAAE;kBAErC,CAAC,MAAM;oBAENN,SAAS,GAAG,IAAI;kBAEjB;gBAED;cAED;cAEA,IAAKO,eAAe,EAAG;gBAEtBZ,gBAAgB,CAAEO,KAAI,CAAE,CAAC76K,IAAI,CAAEi7K,EAAE,CAAE;cAEpC;YAED;UAED;UAEA,IAAKL,QAAQ,GAAG,CAAC,IAAID,SAAS,KAAK,KAAK,EAAG;YAE1CH,aAAa,GAAGF,gBAAgB;UAEjC;QAED;QAEA,IAAIc,QAAQ;QAEZ,KAAM,IAAI56K,IAAC,GAAG,CAAC,EAAE0qB,EAAE,GAAGqvJ,SAAS,CAACh6K,MAAM,EAAEC,IAAC,GAAG0qB,EAAE,EAAE1qB,IAAC,EAAG,EAAG;UAEtDm5K,QAAQ,GAAGY,SAAS,CAAE/5K,IAAC,CAAE,CAAC0T,CAAC;UAC3B6yB,MAAM,CAAC/mC,IAAI,CAAE25K,QAAQ,CAAE;UACvByB,QAAQ,GAAGZ,aAAa,CAAEh6K,IAAC,CAAE;UAE7B,KAAM,IAAI42B,CAAC,GAAG,CAAC,EAAE4kB,EAAE,GAAGo/H,QAAQ,CAAC76K,MAAM,EAAE62B,CAAC,GAAG4kB,EAAE,EAAE5kB,CAAC,EAAG,EAAG;YAErDuiJ,QAAQ,CAACr1C,KAAK,CAACtkI,IAAI,CAAEo7K,QAAQ,CAAEhkJ,CAAC,CAAE,CAAC3Z,CAAC,CAAE;UAEvC;QAED;;QAEA;;QAEA,OAAOspB,MAAM;MAEd;IAAC;IAAA,OAAAoyI,SAAA;EAAA;EAAA,IAIIkC,iBAAiB,0BAAAC,YAAA;IAAAv3J,SAAA,CAAAs3J,iBAAA,EAAAC,YAAA;IAAA,IAAAC,SAAA,GAAAt3J,YAAA,CAAAo3J,iBAAA;IAAuB;;IAE7C,SAAAA,kBAAap5J,KAAK,EAAEC,MAAM,EAAE0G,KAAK,EAAE64B,aAAa,EAAEC,cAAc,EAAEC,aAAa,EAAG;MAAA5+C,eAAA,OAAAs4K,iBAAA;MAEjFn3K,OAAO,CAACC,IAAI,CAAE,gEAAgE,CAAE;MAAC,OAAAo3K,SAAA,CAAA9+K,IAAA,OAC1EwlB,KAAK,EAAEC,MAAM,EAAE0G,KAAK,EAAE64B,aAAa,EAAEC,cAAc,EAAEC,aAAa;IAG1E;IAAC,OAAAp+C,YAAA,CAAA83K,iBAAA;EAAA,EAR8B/5H,WAAW;EAAA,IAYrCk6H,qBAAqB,0BAAAC,gBAAA;IAAA13J,SAAA,CAAAy3J,qBAAA,EAAAC,gBAAA;IAAA,IAAAC,SAAA,GAAAz3J,YAAA,CAAAu3J,qBAAA;IAA2B;;IAErD,SAAAA,sBAAahpJ,MAAM,EAAEjyB,MAAM,EAAEy+H,WAAW,EAAEC,cAAc,EAAG;MAAAl8H,eAAA,OAAAy4K,qBAAA;MAE1Dt3K,OAAO,CAACC,IAAI,CAAE,wEAAwE,CAAE;MAAC,OAAAu3K,SAAA,CAAAj/K,IAAA,OAClF+1B,MAAM,EAAEjyB,MAAM,EAAEy+H,WAAW,EAAEC,cAAc;IAEnD;IAAC,OAAA17H,YAAA,CAAAi4K,qBAAA;EAAA,EAPkC38C,eAAe;EAAA,IAW7C88C,oBAAoB,0BAAAC,eAAA;IAAA73J,SAAA,CAAA43J,oBAAA,EAAAC,eAAA;IAAA,IAAAC,SAAA,GAAA53J,YAAA,CAAA03J,oBAAA;IAA0B;;IAEnD,SAAAA,qBAAanpJ,MAAM,EAAEijG,QAAQ,EAAE6J,UAAU,EAAEC,WAAW,EAAG;MAAAx8H,eAAA,OAAA44K,oBAAA;MAExDz3K,OAAO,CAACC,IAAI,CAAE,sEAAsE,CAAE;MAAC,OAAA03K,SAAA,CAAAp/K,IAAA,OAChF+1B,MAAM,EAAEijG,QAAQ,EAAE6J,UAAU,EAAEC,WAAW;IAEjD;IAAC,OAAAh8H,YAAA,CAAAo4K,oBAAA;EAAA,EAPiCx8C,cAAc;EAAA,IAW3C28C,kBAAkB,0BAAAC,aAAA;IAAAh4J,SAAA,CAAA+3J,kBAAA,EAAAC,aAAA;IAAA,IAAAC,SAAA,GAAA/3J,YAAA,CAAA63J,kBAAA;IAAwB;;IAE/C,SAAAA,mBAAatpJ,MAAM,EAAEtQ,MAAM,EAAE+8G,cAAc,EAAEv9E,cAAc,EAAEq+E,SAAS,EAAET,UAAU,EAAEC,WAAW,EAAG;MAAAx8H,eAAA,OAAA+4K,kBAAA;MAEjG53K,OAAO,CAACC,IAAI,CAAE,kEAAkE,CAAE;MAAC,OAAA63K,SAAA,CAAAv/K,IAAA,OAC5E+1B,MAAM,EAAEtQ,MAAM,EAAE+8G,cAAc,EAAEv9E,cAAc,EAAEq+E,SAAS,EAAET,UAAU,EAAEC,WAAW;IAE1F;IAAC,OAAAh8H,YAAA,CAAAu4K,kBAAA;EAAA,EAP+Bp7C,YAAY;EAAA,IAWvCu7C,sBAAsB,0BAAAC,kBAAA;IAAAn4J,SAAA,CAAAk4J,sBAAA,EAAAC,kBAAA;IAAA,IAAAC,SAAA,GAAAl4J,YAAA,CAAAg4J,sBAAA;IAA4B;;IAEvD,SAAAA,uBAAap8C,SAAS,EAAEC,YAAY,EAAE59G,MAAM,EAAE+8G,cAAc,EAAEv9E,cAAc,EAAEq+E,SAAS,EAAET,UAAU,EAAEC,WAAW,EAAG;MAAAx8H,eAAA,OAAAk5K,sBAAA;MAElH/3K,OAAO,CAACC,IAAI,CAAE,0EAA0E,CAAE;MAAC,OAAAg4K,SAAA,CAAA1/K,IAAA,OACpFojI,SAAS,EAAEC,YAAY,EAAE59G,MAAM,EAAE+8G,cAAc,EAAEv9E,cAAc,EAAEq+E,SAAS,EAAET,UAAU,EAAEC,WAAW;IAE3G;IAAC,OAAAh8H,YAAA,CAAA04K,sBAAA;EAAA,EAPmCv8C,gBAAgB;EAAA,IAW/C08C,0BAA0B,0BAAAC,qBAAA;IAAAt4J,SAAA,CAAAq4J,0BAAA,EAAAC,qBAAA;IAAA,IAAAC,SAAA,GAAAr4J,YAAA,CAAAm4J,0BAAA;IAAgC;;IAE/D,SAAAA,2BAAa5pJ,MAAM,EAAEy1F,MAAM,EAAG;MAAAllH,eAAA,OAAAq5K,0BAAA;MAE7Bl4K,OAAO,CAACC,IAAI,CAAE,kFAAkF,CAAE;MAAC,OAAAm4K,SAAA,CAAA7/K,IAAA,OAC5F+1B,MAAM,EAAEy1F,MAAM;IAEtB;IAAC,OAAA1kH,YAAA,CAAA64K,0BAAA;EAAA,EAPuC95C,oBAAoB;EAAA,IAWvDi6C,qBAAqB,0BAAAC,gBAAA;IAAAz4J,SAAA,CAAAw4J,qBAAA,EAAAC,gBAAA;IAAA,IAAAC,SAAA,GAAAx4J,YAAA,CAAAs4J,qBAAA;IAA2B;;IAErD,SAAAA,sBAAax1I,MAAM,EAAEte,OAAO,EAAG;MAAA1lB,eAAA,OAAAw5K,qBAAA;MAE9Br4K,OAAO,CAACC,IAAI,CAAE,wEAAwE,CAAE;MAAC,OAAAs4K,SAAA,CAAAhgL,IAAA,OAClFsqC,MAAM,EAAEte,OAAO;IAEvB;IAAC,OAAAllB,YAAA,CAAAg5K,qBAAA;EAAA,EAPkC3yC,eAAe;EAAA,IAW7C8yC,yBAAyB,0BAAAC,oBAAA;IAAA54J,SAAA,CAAA24J,yBAAA,EAAAC,oBAAA;IAAA,IAAAC,SAAA,GAAA34J,YAAA,CAAAy4J,yBAAA;IAA+B;;IAE7D,SAAAA,0BAAalqJ,MAAM,EAAEy1F,MAAM,EAAG;MAAAllH,eAAA,OAAA25K,yBAAA;MAE7Bx4K,OAAO,CAACC,IAAI,CAAE,gFAAgF,CAAE;MAAC,OAAAy4K,SAAA,CAAAngL,IAAA,OAC1F+1B,MAAM,EAAEy1F,MAAM;IAEtB;IAAC,OAAA1kH,YAAA,CAAAm5K,yBAAA;EAAA,EAPsCltC,mBAAmB;EAAA,IAWrDqtC,mBAAmB,0BAAAC,eAAA;IAAA/4J,SAAA,CAAA84J,mBAAA,EAAAC,eAAA;IAAA,IAAAC,SAAA,GAAA94J,YAAA,CAAA44J,mBAAA;IAAyB;;IAEjD,SAAAA,oBAAa/oJ,MAAM,EAAE2hG,QAAQ,EAAE4I,QAAQ,EAAEC,SAAS,EAAG;MAAAv7H,eAAA,OAAA85K,mBAAA;MAEpD34K,OAAO,CAACC,IAAI,CAAE,oEAAoE,CAAE;MAAC,OAAA44K,SAAA,CAAAtgL,IAAA,OAC9Eq3B,MAAM,EAAE2hG,QAAQ,EAAE4I,QAAQ,EAAEC,SAAS;IAE7C;IAAC,OAAA/6H,YAAA,CAAAs5K,mBAAA;EAAA,EAPgC3+C,aAAa;EAAA,IAWzC8+C,wBAAwB,0BAAAC,mBAAA;IAAAl5J,SAAA,CAAAi5J,wBAAA,EAAAC,mBAAA;IAAA,IAAAC,SAAA,GAAAj5J,YAAA,CAAA+4J,wBAAA;IAA8B;;IAE3D,SAAAA,yBAAaxqJ,MAAM,EAAEy1F,MAAM,EAAG;MAAAllH,eAAA,OAAAi6K,wBAAA;MAE7B94K,OAAO,CAACC,IAAI,CAAE,8EAA8E,CAAE;MAAC,OAAA+4K,SAAA,CAAAzgL,IAAA,OACxF+1B,MAAM,EAAEy1F,MAAM;IAEtB;IAAC,OAAA1kH,YAAA,CAAAy5K,wBAAA;EAAA,EAPqCptC,kBAAkB;EAAA,IAWnDutC,mBAAmB,0BAAAC,cAAA;IAAAr5J,SAAA,CAAAo5J,mBAAA,EAAAC,cAAA;IAAA,IAAAC,SAAA,GAAAp5J,YAAA,CAAAk5J,mBAAA;IAAyB;;IAEjD,SAAAA,oBAAal7J,KAAK,EAAEC,MAAM,EAAEu/B,aAAa,EAAEC,cAAc,EAAG;MAAA3+C,eAAA,OAAAo6K,mBAAA;MAE3Dj5K,OAAO,CAACC,IAAI,CAAE,oEAAoE,CAAE;MAAC,OAAAk5K,SAAA,CAAA5gL,IAAA,OAC9EwlB,KAAK,EAAEC,MAAM,EAAEu/B,aAAa,EAAEC,cAAc;IAEpD;IAAC,OAAAn+C,YAAA,CAAA45K,mBAAA;EAAA,EAPgCvuH,aAAa;EAAA,IAWzC0uH,wBAAwB,0BAAAC,oBAAA;IAAAx5J,SAAA,CAAAu5J,wBAAA,EAAAC,oBAAA;IAAA,IAAAC,SAAA,GAAAv5J,YAAA,CAAAq5J,wBAAA;IAA8B;;IAE3D,SAAAA,yBAAax7H,QAAQ,EAAE5F,OAAO,EAAE1pB,MAAM,EAAEy1F,MAAM,EAAG;MAAAllH,eAAA,OAAAu6K,wBAAA;MAEhDp5K,OAAO,CAACC,IAAI,CAAE,8EAA8E,CAAE;MAAC,OAAAq5K,SAAA,CAAA/gL,IAAA,OACxFqlD,QAAQ,EAAE5F,OAAO,EAAE1pB,MAAM,EAAEy1F,MAAM;IAEzC;IAAC,OAAA1kH,YAAA,CAAA+5K,wBAAA;EAAA,EAPqCx8C,kBAAkB;EAAA,IAWnD28C,kBAAkB,0BAAAC,aAAA;IAAA35J,SAAA,CAAA05J,kBAAA,EAAAC,aAAA;IAAA,IAAAC,SAAA,GAAA15J,YAAA,CAAAw5J,kBAAA;IAAwB;;IAE/C,SAAAA,mBAAattC,WAAW,EAAEC,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEhR,UAAU,EAAEC,WAAW,EAAG;MAAAx8H,eAAA,OAAA06K,kBAAA;MAE5Fv5K,OAAO,CAACC,IAAI,CAAE,kEAAkE,CAAE;MAAC,OAAAw5K,SAAA,CAAAlhL,IAAA,OAC5E0zI,WAAW,EAAEC,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEhR,UAAU,EAAEC,WAAW;IAErF;IAAC,OAAAh8H,YAAA,CAAAk6K,kBAAA;EAAA,EAP+BztC,YAAY;EAAA,IAWvC4tC,mBAAmB,0BAAAC,cAAA;IAAA95J,SAAA,CAAA65J,mBAAA,EAAAC,cAAA;IAAA,IAAAC,SAAA,GAAA75J,YAAA,CAAA25J,mBAAA;IAAyB;;IAEjD,SAAAA,oBAAa72I,MAAM,EAAEqjG,aAAa,EAAG;MAAArnI,eAAA,OAAA66K,mBAAA;MAEpC15K,OAAO,CAACC,IAAI,CAAE,oEAAoE,CAAE;MAAC,OAAA25K,SAAA,CAAArhL,IAAA,OAC9EsqC,MAAM,EAAEqjG,aAAa;IAE7B;IAAC,OAAA7mI,YAAA,CAAAq6K,mBAAA;EAAA,EAPgCltC,aAAa;EAAA,IAWzCqtC,oBAAoB,0BAAAC,eAAA;IAAAj6J,SAAA,CAAAg6J,oBAAA,EAAAC,eAAA;IAAA,IAAAC,SAAA,GAAAh6J,YAAA,CAAA85J,oBAAA;IAA0B;;IAEnD,SAAAA,qBAAavrJ,MAAM,EAAEivB,aAAa,EAAEC,cAAc,EAAE28E,QAAQ,EAAEC,SAAS,EAAEgB,UAAU,EAAEC,WAAW,EAAG;MAAAx8H,eAAA,OAAAg7K,oBAAA;MAElG75K,OAAO,CAACC,IAAI,CAAE,sEAAsE,CAAE;MAAC,OAAA85K,SAAA,CAAAxhL,IAAA,OAChF+1B,MAAM,EAAEivB,aAAa,EAAEC,cAAc,EAAE28E,QAAQ,EAAEC,SAAS,EAAEgB,UAAU,EAAEC,WAAW;IAE3F;IAAC,OAAAh8H,YAAA,CAAAw6K,oBAAA;EAAA,EAPiC7sC,cAAc;EAAA,IAW3CgtC,yBAAyB,0BAAAC,oBAAA;IAAAp6J,SAAA,CAAAm6J,yBAAA,EAAAC,oBAAA;IAAA,IAAAC,SAAA,GAAAn6J,YAAA,CAAAi6J,yBAAA;IAA+B;;IAE7D,SAAAA,0BAAa1rJ,MAAM,EAAEy1F,MAAM,EAAG;MAAAllH,eAAA,OAAAm7K,yBAAA;MAE7Bh6K,OAAO,CAACC,IAAI,CAAE,gFAAgF,CAAE;MAAC,OAAAi6K,SAAA,CAAA3hL,IAAA,OAC1F+1B,MAAM,EAAEy1F,MAAM;IAEtB;IAAC,OAAA1kH,YAAA,CAAA26K,yBAAA;EAAA,EAPsCxsC,mBAAmB;EAAA,IAWrD2sC,mBAAmB,0BAAAC,cAAA;IAAAv6J,SAAA,CAAAs6J,mBAAA,EAAAC,cAAA;IAAA,IAAAC,SAAA,GAAAt6J,YAAA,CAAAo6J,mBAAA;IAAyB;;IAEjD,SAAAA,oBAAa7rJ,MAAM,EAAEy/G,IAAI,EAAEhT,cAAc,EAAEiT,eAAe,EAAEtU,GAAG,EAAG;MAAA76H,eAAA,OAAAs7K,mBAAA;MAEjEn6K,OAAO,CAACC,IAAI,CAAE,oEAAoE,CAAE;MAAC,OAAAo6K,SAAA,CAAA9hL,IAAA,OAC9E+1B,MAAM,EAAEy/G,IAAI,EAAEhT,cAAc,EAAEiT,eAAe,EAAEtU,GAAG;IAE1D;IAAC,OAAAr6H,YAAA,CAAA86K,mBAAA;EAAA,EAPgCvsC,aAAa;EAAA,IAWzC0sC,uBAAuB,0BAAAC,kBAAA;IAAA16J,SAAA,CAAAy6J,uBAAA,EAAAC,kBAAA;IAAA,IAAAC,SAAA,GAAAz6J,YAAA,CAAAu6J,uBAAA;IAA6B;;IAEzD,SAAAA,wBAAahsJ,MAAM,EAAEy/G,IAAI,EAAEC,eAAe,EAAEjT,cAAc,EAAEz+F,CAAC,EAAExrB,CAAC,EAAG;MAAAjS,eAAA,OAAAy7K,uBAAA;MAElEt6K,OAAO,CAACC,IAAI,CAAE,4EAA4E,CAAE;MAAC,OAAAu6K,SAAA,CAAAjiL,IAAA,OACtF+1B,MAAM,EAAEy/G,IAAI,EAAEC,eAAe,EAAEjT,cAAc,EAAEz+F,CAAC,EAAExrB,CAAC;IAE3D;IAAC,OAAAzR,YAAA,CAAAi7K,uBAAA;EAAA,EAPoCpsC,iBAAiB;EAAA,IAWjDusC,kBAAkB,0BAAAC,aAAA;IAAA76J,SAAA,CAAA46J,kBAAA,EAAAC,aAAA;IAAA,IAAAC,SAAA,GAAA56J,YAAA,CAAA06J,kBAAA;IAAwB;;IAE/C,SAAAA,mBAAavjG,IAAI,EAAE82D,eAAe,EAAE1/G,MAAM,EAAEysG,cAAc,EAAEvJ,MAAM,EAAG;MAAA3yH,eAAA,OAAA47K,kBAAA;MAEpEz6K,OAAO,CAACC,IAAI,CAAE,kEAAkE,CAAE;MAAC,OAAA06K,SAAA,CAAApiL,IAAA,OAC5E2+E,IAAI,EAAE82D,eAAe,EAAE1/G,MAAM,EAAEysG,cAAc,EAAEvJ,MAAM;IAE7D;IAAC,OAAAnyH,YAAA,CAAAo7K,kBAAA;EAAA,EAP+BzrC,YAAY;EAW7C,IAAK,OAAOnrB,kBAAkB,KAAK,WAAW,EAAG;IAEhDA,kBAAkB,CAAC/2G,aAAa,CAAE,IAAIg3G,WAAW,CAAE,UAAU,EAAE;MAAEC,MAAM,EAAE;QACxE62D,QAAQ,EAAEl6K;MACX;IAAE,CAAC,CAAE,CAAE;EAER;EAEA,IAAK,OAAO2vJ,MAAM,KAAK,WAAW,EAAG;IAEpC,IAAKA,MAAM,CAACwqB,SAAS,EAAG;MAEvB76K,OAAO,CAACC,IAAI,CAAE,yDAAyD,CAAE;IAE1E,CAAC,MAAM;MAENowJ,MAAM,CAACwqB,SAAS,GAAGn6K,QAAQ;IAE5B;EAED;EAEA3K,OAAO,CAACuO,qBAAqB,GAAGA,qBAAqB;EACrDvO,OAAO,CAACwM,WAAW,GAAGA,WAAW;EACjCxM,OAAO,CAACkO,YAAY,GAAGA,YAAY;EACnClO,OAAO,CAAC0T,0BAA0B,GAAGA,0BAA0B;EAC/D1T,OAAO,CAACoM,gBAAgB,GAAGA,gBAAgB;EAC3CpM,OAAO,CAACuQ,WAAW,GAAGA,WAAW;EACjCvQ,OAAO,CAACyN,WAAW,GAAGA,WAAW;EACjCzN,OAAO,CAACuV,iBAAiB,GAAGA,iBAAiB;EAC7CvV,OAAO,CAACgzJ,YAAY,GAAGA,YAAY;EACnChzJ,OAAO,CAACq7J,iBAAiB,GAAGA,iBAAiB;EAC7Cr7J,OAAO,CAACotK,eAAe,GAAGA,eAAe;EACzCptK,OAAO,CAAC0mJ,aAAa,GAAGA,aAAa;EACrC1mJ,OAAO,CAACquJ,eAAe,GAAGA,eAAe;EACzCruJ,OAAO,CAACwyK,cAAc,GAAGA,cAAc;EACvCxyK,OAAO,CAACurK,oBAAoB,GAAGA,oBAAoB;EACnDvrK,OAAO,CAACkgJ,cAAc,GAAGA,cAAc;EACvClgJ,OAAO,CAAC+8H,QAAQ,GAAGA,QAAQ;EAC3B/8H,OAAO,CAACs0G,WAAW,GAAGA,WAAW;EACjCt0G,OAAO,CAACm+K,WAAW,GAAGA,WAAW;EACjCn+K,OAAO,CAACg/J,KAAK,GAAGA,KAAK;EACrBh/J,OAAO,CAAC2jK,aAAa,GAAGA,aAAa;EACrC3jK,OAAO,CAACq6J,YAAY,GAAGA,YAAY;EACnCr6J,OAAO,CAACo9J,aAAa,GAAGA,aAAa;EACrCp9J,OAAO,CAACw6J,WAAW,GAAGA,WAAW;EACjCx6J,OAAO,CAAC2+K,UAAU,GAAGA,UAAU;EAC/B3+K,OAAO,CAAC+L,QAAQ,GAAGA,QAAQ;EAC3B/L,OAAO,CAACgU,iBAAiB,GAAGA,iBAAiB;EAC7ChU,OAAO,CAAC0L,cAAc,GAAGA,cAAc;EACvC1L,OAAO,CAACyyH,IAAI,GAAGA,IAAI;EACnBzyH,OAAO,CAACqlJ,oBAAoB,GAAGA,oBAAoB;EACnDrlJ,OAAO,CAACq4K,IAAI,GAAGA,IAAI;EACnBr4K,OAAO,CAACo5B,IAAI,GAAGA,IAAI;EACnBp5B,OAAO,CAACu9K,UAAU,GAAGA,UAAU;EAC/Bv9K,OAAO,CAACohL,iBAAiB,GAAGA,iBAAiB;EAC7CphL,OAAO,CAACqnD,WAAW,GAAGA,WAAW;EACjCrnD,OAAO,CAACm9K,SAAS,GAAGA,SAAS;EAC7Bn9K,OAAO,CAAC08C,eAAe,GAAGA,eAAe;EACzC18C,OAAO,CAACqgD,cAAc,GAAGA,cAAc;EACvCrgD,OAAO,CAACw1J,oBAAoB,GAAGA,oBAAoB;EACnDx1J,OAAO,CAAC6P,QAAQ,GAAGA,QAAQ;EAC3B7P,OAAO,CAAC4oJ,KAAK,GAAGA,KAAK;EACrB5oJ,OAAO,CAACirD,MAAM,GAAGA,MAAM;EACvBjrD,OAAO,CAACm8K,YAAY,GAAGA,YAAY;EACnCn8K,OAAO,CAACs5H,aAAa,GAAGA,aAAa;EACrCt5H,OAAO,CAACuhL,qBAAqB,GAAGA,qBAAqB;EACrDvhL,OAAO,CAAC4kI,eAAe,GAAGA,eAAe;EACzC5kI,OAAO,CAACm+H,gBAAgB,GAAGA,gBAAgB;EAC3Cn+H,OAAO,CAACsO,iBAAiB,GAAGA,iBAAiB;EAC7CtO,OAAO,CAAC0hL,oBAAoB,GAAGA,oBAAoB;EACnD1hL,OAAO,CAACklI,cAAc,GAAGA,cAAc;EACvCllI,OAAO,CAACgP,mBAAmB,GAAGA,mBAAmB;EACjDhP,OAAO,CAACq8J,KAAK,GAAGA,KAAK;EACrBr8J,OAAO,CAACk5C,KAAK,GAAGA,KAAK;EACrBl5C,OAAO,CAACwlJ,kBAAkB,GAAGA,kBAAkB;EAC/CxlJ,OAAO,CAAC2mB,eAAe,GAAGA,eAAe;EACzC3mB,OAAO,CAACk5H,sBAAsB,GAAGA,sBAAsB;EACvDl5H,OAAO,CAAC84H,iBAAiB,GAAGA,iBAAiB;EAC7C94H,OAAO,CAACwuJ,uBAAuB,GAAGA,uBAAuB;EACzDxuJ,OAAO,CAAC6hL,kBAAkB,GAAGA,kBAAkB;EAC/C7hL,OAAO,CAACymI,YAAY,GAAGA,YAAY;EACnCzmI,OAAO,CAACktD,UAAU,GAAGA,UAAU;EAC/BltD,OAAO,CAAC0O,qBAAqB,GAAGA,qBAAqB;EACrD1O,OAAO,CAAC2O,qBAAqB,GAAGA,qBAAqB;EACrD3O,OAAO,CAACuuD,WAAW,GAAGA,WAAW;EACjCvuD,OAAO,CAACqvJ,iBAAiB,GAAGA,iBAAiB;EAC7CrvJ,OAAO,CAAC8O,uBAAuB,GAAGA,uBAAuB;EACzD9O,OAAO,CAACo/H,gBAAgB,GAAGA,gBAAgB;EAC3Cp/H,OAAO,CAACy/H,iBAAiB,GAAGA,iBAAiB;EAC7Cz/H,OAAO,CAACshJ,gBAAgB,GAAGA,gBAAgB;EAC3CthJ,OAAO,CAACuL,YAAY,GAAGA,YAAY;EACnCvL,OAAO,CAACwL,aAAa,GAAGA,aAAa;EACrCxL,OAAO,CAACyL,iBAAiB,GAAGA,iBAAiB;EAC7CzL,OAAO,CAACsL,YAAY,GAAGA,YAAY;EACnCtL,OAAO,CAAC25H,KAAK,GAAGA,KAAK;EACrB35H,OAAO,CAACyhI,SAAS,GAAGA,SAAS;EAC7BzhI,OAAO,CAACuM,cAAc,GAAGA,cAAc;EACvCvM,OAAO,CAACwO,iBAAiB,GAAGA,iBAAiB;EAC7CxO,OAAO,CAACgiL,sBAAsB,GAAGA,sBAAsB;EACvDhiL,OAAO,CAACylI,gBAAgB,GAAGA,gBAAgB;EAC3CzlI,OAAO,CAACm4K,WAAW,GAAGA,WAAW;EACjCn4K,OAAO,CAACiwB,aAAa,GAAGA,aAAa;EACrCjwB,OAAO,CAACsvB,gBAAgB,GAAGA,gBAAgB;EAC3CtvB,OAAO,CAAC8yH,WAAW,GAAGA,WAAW;EACjC9yH,OAAO,CAACyvJ,iBAAiB,GAAGA,iBAAiB;EAC7CzvJ,OAAO,CAACu8C,SAAS,GAAGA,SAAS;EAC7Bv8C,OAAO,CAAC4U,kBAAkB,GAAGA,kBAAkB;EAC/C5U,OAAO,CAAC8U,sBAAsB,GAAGA,sBAAsB;EACvD9U,OAAO,CAACmqJ,qBAAqB,GAAGA,qBAAqB;EACrDnqJ,OAAO,CAAC2Q,WAAW,GAAGA,WAAW;EACjC3Q,OAAO,CAAC4Q,kBAAkB,GAAGA,kBAAkB;EAC/C5Q,OAAO,CAAC+3G,YAAY,GAAGA,YAAY;EACnC/3G,OAAO,CAAC4yJ,gBAAgB,GAAGA,gBAAgB;EAC3C5yJ,OAAO,CAAC27K,sBAAsB,GAAGA,sBAAsB;EACvD37K,OAAO,CAACojJ,mBAAmB,GAAGA,mBAAmB;EACjDpjJ,OAAO,CAACuU,mBAAmB,GAAGA,mBAAmB;EACjDvU,OAAO,CAACmiL,0BAA0B,GAAGA,0BAA0B;EAC/DniL,OAAO,CAACqoI,oBAAoB,GAAGA,oBAAoB;EACnDroI,OAAO,CAACgM,UAAU,GAAGA,UAAU;EAC/BhM,OAAO,CAACmN,cAAc,GAAGA,cAAc;EACvCnN,OAAO,CAACqN,cAAc,GAAGA,cAAc;EACvCrN,OAAO,CAAC+V,gBAAgB,GAAGA,gBAAgB;EAC3C/V,OAAO,CAACyV,gBAAgB,GAAGA,gBAAgB;EAC3CzV,OAAO,CAAC4V,gBAAgB,GAAGA,gBAAgB;EAC3C5V,OAAO,CAAC6oI,aAAa,GAAGA,aAAa;EACrC7oI,OAAO,CAAC+7H,YAAY,GAAGA,YAAY;EACnC/7H,OAAO,CAAC4N,UAAU,GAAGA,UAAU;EAC/B5N,OAAO,CAACkV,gBAAgB,GAAGA,gBAAgB;EAC3ClV,OAAO,CAAC4O,gCAAgC,GAAGA,gCAAgC;EAC3E5O,OAAO,CAAC6O,gCAAgC,GAAGA,gCAAgC;EAC3E7O,OAAO,CAAC0mC,KAAK,GAAGA,KAAK;EACrB1mC,OAAO,CAACoW,eAAe,GAAGA,eAAe;EACzCpW,OAAO,CAACsiL,qBAAqB,GAAGA,qBAAqB;EACrDtiL,OAAO,CAAC2vI,eAAe,GAAGA,eAAe;EACzC3vI,OAAO,CAACwrJ,UAAU,GAAGA,UAAU;EAC/BxrJ,OAAO,CAACm/C,sBAAsB,GAAGA,sBAAsB;EACvDn/C,OAAO,CAACw/C,sBAAsB,GAAGA,sBAAsB;EACvDx/C,OAAO,CAAC2/C,sBAAsB,GAAGA,sBAAsB;EACvD3/C,OAAO,CAACkQ,SAAS,GAAGA,SAAS;EAC7BlQ,OAAO,CAACquH,GAAG,GAAGA,GAAG;EACjBruH,OAAO,CAACouH,OAAO,GAAGA,OAAO;EACzBpuH,OAAO,CAAC04H,kBAAkB,GAAGA,kBAAkB;EAC/C14H,OAAO,CAAC8L,SAAS,GAAGA,SAAS;EAC7B9L,OAAO,CAAC2wD,OAAO,GAAGA,OAAO;EACzB3wD,OAAO,CAACo3K,iBAAiB,GAAGA,iBAAiB;EAC7Cp3K,OAAO,CAACiW,KAAK,GAAGA,KAAK;EACrBjW,OAAO,CAACkW,KAAK,GAAGA,KAAK;EACrBlW,OAAO,CAAC8N,YAAY,GAAGA,YAAY;EACnC9N,OAAO,CAAC6N,iBAAiB,GAAGA,iBAAiB;EAC7C7N,OAAO,CAACsV,uBAAuB,GAAGA,uBAAuB;EACzDtV,OAAO,CAACoV,kBAAkB,GAAGA,kBAAkB;EAC/CpV,OAAO,CAAC86K,UAAU,GAAGA,UAAU;EAC/B96K,OAAO,CAAC40G,KAAK,GAAGA,KAAK;EACrB50G,OAAO,CAACmQ,aAAa,GAAGA,aAAa;EACrCnQ,OAAO,CAACowJ,eAAe,GAAGA,eAAe;EACzCpwJ,OAAO,CAAC06K,qBAAqB,GAAGA,qBAAqB;EACrD16K,OAAO,CAAC86J,oBAAoB,GAAGA,oBAAoB;EACnD96J,OAAO,CAACyiL,yBAAyB,GAAGA,yBAAyB;EAC7DziL,OAAO,CAACu1I,mBAAmB,GAAGA,mBAAmB;EACjDv1I,OAAO,CAAC05J,iBAAiB,GAAGA,iBAAiB;EAC7C15J,OAAO,CAAC+uJ,WAAW,GAAGA,WAAW;EACjC/uJ,OAAO,CAACynB,UAAU,GAAGA,UAAU;EAC/BznB,OAAO,CAAC2U,kBAAkB,GAAGA,kBAAkB;EAC/C3U,OAAO,CAAC6U,sBAAsB,GAAGA,sBAAsB;EACvD7U,OAAO,CAAC2zH,wBAAwB,GAAGA,wBAAwB;EAC3D3zH,OAAO,CAACo1J,uBAAuB,GAAGA,uBAAuB;EACzDp1J,OAAO,CAACg3K,0BAA0B,GAAGA,0BAA0B;EAC/Dh3K,OAAO,CAACs0H,aAAa,GAAGA,aAAa;EACrCt0H,OAAO,CAACu+C,oBAAoB,GAAGA,oBAAoB;EACnDv+C,OAAO,CAAC6+C,oBAAoB,GAAGA,oBAAoB;EACnD7+C,OAAO,CAAC89C,mBAAmB,GAAGA,mBAAmB;EACjD99C,OAAO,CAACgQ,OAAO,GAAGA,OAAO;EACzBhQ,OAAO,CAAC0uH,iBAAiB,GAAGA,iBAAiB;EAC7C1uH,OAAO,CAACgvH,0BAA0B,GAAGA,0BAA0B;EAC/DhvH,OAAO,CAACmgJ,WAAW,GAAGA,WAAW;EACjCngJ,OAAO,CAACmT,mBAAmB,GAAGA,mBAAmB;EACjDnT,OAAO,CAACoT,iBAAiB,GAAGA,iBAAiB;EAC7CpT,OAAO,CAACqT,iBAAiB,GAAGA,iBAAiB;EAC7CrT,OAAO,CAAC+U,eAAe,GAAGA,eAAe;EACzC/U,OAAO,CAACyU,aAAa,GAAGA,aAAa;EACrCzU,OAAO,CAACujJ,aAAa,GAAGA,aAAa;EACrCvjJ,OAAO,CAAC6wH,GAAG,GAAGA,GAAG;EACjB7wH,OAAO,CAAC4iL,mBAAmB,GAAGA,mBAAmB;EACjD5iL,OAAO,CAACikI,aAAa,GAAGA,aAAa;EACrCjkI,OAAO,CAAConC,MAAM,GAAGA,MAAM;EACvBpnC,OAAO,CAAC0N,SAAS,GAAGA,SAAS;EAC7B1N,OAAO,CAAC2N,cAAc,GAAGA,cAAc;EACvC3N,OAAO,CAACmV,oBAAoB,GAAGA,oBAAoB;EACnDnV,OAAO,CAACiV,eAAe,GAAGA,eAAe;EACzCjV,OAAO,CAACgwJ,KAAK,GAAGA,KAAK;EACrBhwJ,OAAO,CAACi0J,UAAU,GAAGA,UAAU;EAC/Bj0J,OAAO,CAAC01H,IAAI,GAAGA,IAAI;EACnB11H,OAAO,CAACy4K,KAAK,GAAGA,KAAK;EACrBz4K,OAAO,CAAC8uF,iBAAiB,GAAGA,iBAAiB;EAC7C9uF,OAAO,CAAC8/H,SAAS,GAAGA,SAAS;EAC7B9/H,OAAO,CAACmgI,UAAU,GAAGA,UAAU;EAC/BngI,OAAO,CAAC+uF,kBAAkB,GAAGA,kBAAkB;EAC/C/uF,OAAO,CAAC62H,QAAQ,GAAGA,QAAQ;EAC3B72H,OAAO,CAACy2H,YAAY,GAAGA,YAAY;EACnCz2H,OAAO,CAAC8T,cAAc,GAAGA,cAAc;EACvC9T,OAAO,CAACuP,YAAY,GAAGA,YAAY;EACnCvP,OAAO,CAAC6iJ,iBAAiB,GAAGA,iBAAiB;EAC7C7iJ,OAAO,CAAC2P,wBAAwB,GAAGA,wBAAwB;EAC3D3P,OAAO,CAACyP,yBAAyB,GAAGA,yBAAyB;EAC7DzP,OAAO,CAAC0P,wBAAwB,GAAGA,wBAAwB;EAC3D1P,OAAO,CAACwP,yBAAyB,GAAGA,yBAAyB;EAC7DxP,OAAO,CAACsU,oBAAoB,GAAGA,oBAAoB;EACnDtU,OAAO,CAACoO,iBAAiB,GAAGA,iBAAiB;EAC7CpO,OAAO,CAACoqJ,MAAM,GAAGA,MAAM;EACvBpqJ,OAAO,CAAC60J,WAAW,GAAGA,WAAW;EACjC70J,OAAO,CAAC+oJ,cAAc,GAAGA,cAAc;EACvC/oJ,OAAO,CAACgT,QAAQ,GAAGA,QAAQ;EAC3BhT,OAAO,CAACkT,YAAY,GAAGA,YAAY;EACnClT,OAAO,CAACiT,UAAU,GAAGA,UAAU;EAC/BjT,OAAO,CAAC0Q,oBAAoB,GAAGA,oBAAoB;EACnD1Q,OAAO,CAACyQ,eAAe,GAAGA,eAAe;EACzCzQ,OAAO,CAAC4K,KAAK,GAAGA,KAAK;EACrB5K,OAAO,CAACwxC,QAAQ,GAAGA,QAAQ;EAC3BxxC,OAAO,CAACq0J,cAAc,GAAGA,cAAc;EACvCr0J,OAAO,CAACuc,SAAS,GAAGA,SAAS;EAC7Bvc,OAAO,CAAC0gB,OAAO,GAAGA,OAAO;EACzB1gB,OAAO,CAACuhC,OAAO,GAAGA,OAAO;EACzBvhC,OAAO,CAAC4M,WAAW,GAAGA,WAAW;EACjC5M,OAAO,CAAC+lD,IAAI,GAAGA,IAAI;EACnB/lD,OAAO,CAACo7C,iBAAiB,GAAGA,iBAAiB;EAC7Cp7C,OAAO,CAACquF,iBAAiB,GAAGA,iBAAiB;EAC7CruF,OAAO,CAACsuF,oBAAoB,GAAGA,oBAAoB;EACnDtuF,OAAO,CAACwuF,mBAAmB,GAAGA,mBAAmB;EACjDxuF,OAAO,CAAC6uF,kBAAkB,GAAGA,kBAAkB;EAC/C7uF,OAAO,CAACuuF,kBAAkB,GAAGA,kBAAkB;EAC/CvuF,OAAO,CAACyuF,iBAAiB,GAAGA,iBAAiB;EAC7CzuF,OAAO,CAAC4uF,oBAAoB,GAAGA,oBAAoB;EACnD5uF,OAAO,CAAC2uF,oBAAoB,GAAGA,oBAAoB;EACnD3uF,OAAO,CAAC0uF,gBAAgB,GAAGA,gBAAgB;EAC3C1uF,OAAO,CAAC2M,WAAW,GAAGA,WAAW;EACjC3M,OAAO,CAACiP,sBAAsB,GAAGA,sBAAsB;EACvDjP,OAAO,CAACiO,YAAY,GAAGA,YAAY;EACnCjO,OAAO,CAACsM,gBAAgB,GAAGA,gBAAgB;EAC3CtM,OAAO,CAACgO,iBAAiB,GAAGA,iBAAiB;EAC7ChO,OAAO,CAACkP,aAAa,GAAGA,aAAa;EACrClP,OAAO,CAACsP,yBAAyB,GAAGA,yBAAyB;EAC7DtP,OAAO,CAACoP,0BAA0B,GAAGA,0BAA0B;EAC/DpP,OAAO,CAACqP,yBAAyB,GAAGA,yBAAyB;EAC7DrP,OAAO,CAACmP,0BAA0B,GAAGA,0BAA0B;EAC/DnP,OAAO,CAACwN,UAAU,GAAGA,UAAU;EAC/BxN,OAAO,CAACgV,gBAAgB,GAAGA,gBAAgB;EAC3ChV,OAAO,CAACkM,UAAU,GAAGA,UAAU;EAC/BlM,OAAO,CAACoU,YAAY,GAAGA,YAAY;EACnCpU,OAAO,CAACmO,aAAa,GAAGA,aAAa;EACrCnO,OAAO,CAACyT,wBAAwB,GAAGA,wBAAwB;EAC3DzT,OAAO,CAACmM,cAAc,GAAGA,cAAc;EACvCnM,OAAO,CAAC+N,aAAa,GAAGA,aAAa;EACrC/N,OAAO,CAACqV,mBAAmB,GAAGA,mBAAmB;EACjDrV,OAAO,CAAC2lJ,mBAAmB,GAAGA,mBAAmB;EACjD3lJ,OAAO,CAAC0oC,QAAQ,GAAGA,QAAQ;EAC3B1oC,OAAO,CAACo2J,YAAY,GAAGA,YAAY;EACnCp2J,OAAO,CAACmU,oBAAoB,GAAGA,oBAAoB;EACnDnU,OAAO,CAAC+iL,wBAAwB,GAAGA,wBAAwB;EAC3D/iL,OAAO,CAAC21I,kBAAkB,GAAGA,kBAAkB;EAC/C31I,OAAO,CAAC8M,SAAS,GAAGA,SAAS;EAC7B9M,OAAO,CAACoN,sBAAsB,GAAGA,sBAAsB;EACvDpN,OAAO,CAACsN,sBAAsB,GAAGA,sBAAsB;EACvDtN,OAAO,CAACkN,sBAAsB,GAAGA,sBAAsB;EACvDlN,OAAO,CAACgN,sBAAsB,GAAGA,sBAAsB;EACvDhN,OAAO,CAACywE,kBAAkB,GAAGA,kBAAkB;EAC/CzwE,OAAO,CAAC2L,YAAY,GAAGA,YAAY;EACnC3L,OAAO,CAAC4L,gBAAgB,GAAGA,gBAAgB;EAC3C5L,OAAO,CAACwxE,cAAc,GAAGA,cAAc;EACvCxxE,OAAO,CAAC0iI,IAAI,GAAGA,IAAI;EACnB1iI,OAAO,CAACqrD,iBAAiB,GAAGA,iBAAiB;EAC7CrrD,OAAO,CAAC0vD,KAAK,GAAGA,KAAK;EACrB1vD,OAAO,CAACkjL,mBAAmB,GAAGA,mBAAmB;EACjDljL,OAAO,CAAC20D,aAAa,GAAGA,aAAa;EACrC30D,OAAO,CAAC29K,WAAW,GAAGA,WAAW;EACjC39K,OAAO,CAACmyJ,UAAU,GAAGA,UAAU;EAC/BnyJ,OAAO,CAACk6K,gBAAgB,GAAGA,gBAAgB;EAC3Cl6K,OAAO,CAACw3H,MAAM,GAAGA,MAAM;EACvBx3H,OAAO,CAACgvF,cAAc,GAAGA,cAAc;EACvChvF,OAAO,CAACk7K,eAAe,GAAGA,eAAe;EACzCl7K,OAAO,CAACqjL,wBAAwB,GAAGA,wBAAwB;EAC3DrjL,OAAO,CAAC6mI,kBAAkB,GAAGA,kBAAkB;EAC/C7mI,OAAO,CAACiiK,eAAe,GAAGA,eAAe;EACzCjiK,OAAO,CAACsnK,eAAe,GAAGA,eAAe;EACzCtnK,OAAO,CAACokK,aAAa,GAAGA,aAAa;EACrCpkK,OAAO,CAACwgI,oBAAoB,GAAGA,oBAAoB;EACnDxgI,OAAO,CAAC6gI,qBAAqB,GAAGA,qBAAqB;EACrD7gI,OAAO,CAACkxB,UAAU,GAAGA,UAAU;EAC/BlxB,OAAO,CAACimJ,uBAAuB,GAAGA,uBAAuB;EACzDjmJ,OAAO,CAAC8lJ,2BAA2B,GAAGA,2BAA2B;EACjE9lJ,OAAO,CAAC8S,sBAAsB,GAAGA,sBAAsB;EACvD9S,OAAO,CAAC4S,gBAAgB,GAAGA,gBAAgB;EAC3C5S,OAAO,CAAC2K,QAAQ,GAAGA,QAAQ;EAC3B3K,OAAO,CAACiU,gBAAgB,GAAGA,gBAAgB;EAC3CjU,OAAO,CAACwQ,UAAU,GAAGA,UAAU;EAC/BxQ,OAAO,CAACiR,iBAAiB,GAAGA,iBAAiB;EAC7CjR,OAAO,CAACwS,sBAAsB,GAAGA,sBAAsB;EACvDxS,OAAO,CAACqS,qBAAqB,GAAGA,qBAAqB;EACrDrS,OAAO,CAACsS,qBAAqB,GAAGA,qBAAqB;EACrDtS,OAAO,CAACuS,qBAAqB,GAAGA,qBAAqB;EACrDvS,OAAO,CAACyS,sBAAsB,GAAGA,sBAAsB;EACvDzS,OAAO,CAAC0S,sBAAsB,GAAGA,sBAAsB;EACvD1S,OAAO,CAAC6R,oBAAoB,GAAGA,oBAAoB;EACnD7R,OAAO,CAAC8R,oBAAoB,GAAGA,oBAAoB;EACnD9R,OAAO,CAAC+R,oBAAoB,GAAGA,oBAAoB;EACnD/R,OAAO,CAACgS,oBAAoB,GAAGA,oBAAoB;EACnDhS,OAAO,CAACiS,oBAAoB,GAAGA,oBAAoB;EACnDjS,OAAO,CAACkS,oBAAoB,GAAGA,oBAAoB;EACnDlS,OAAO,CAACmS,oBAAoB,GAAGA,oBAAoB;EACnDnS,OAAO,CAACoS,oBAAoB,GAAGA,oBAAoB;EACnDpS,OAAO,CAAC2S,gBAAgB,GAAGA,gBAAgB;EAC3C3S,OAAO,CAAC4R,oBAAoB,GAAGA,oBAAoB;EACnD5R,OAAO,CAACyR,wBAAwB,GAAGA,wBAAwB;EAC3DzR,OAAO,CAACwR,wBAAwB,GAAGA,wBAAwB;EAC3DxR,OAAO,CAACmR,qBAAqB,GAAGA,qBAAqB;EACrDnR,OAAO,CAACoR,qBAAqB,GAAGA,qBAAqB;EACrDpR,OAAO,CAACqR,qBAAqB,GAAGA,qBAAqB;EACrDrR,OAAO,CAAC0R,eAAe,GAAGA,eAAe;EACzC1R,OAAO,CAAC2R,eAAe,GAAGA,eAAe;EACzC3R,OAAO,CAACuR,uBAAuB,GAAGA,uBAAuB;EACzDvR,OAAO,CAACsR,uBAAuB,GAAGA,uBAAuB;EACzDtR,OAAO,CAACkR,oBAAoB,GAAGA,oBAAoB;EACnDlR,OAAO,CAAC+Q,QAAQ,GAAGA,QAAQ;EAC3B/Q,OAAO,CAACgR,eAAe,GAAGA,eAAe;EACzChR,OAAO,CAACw6I,iBAAiB,GAAGA,iBAAiB;EAC7Cx6I,OAAO,CAACy+B,GAAG,GAAGA,GAAG;EACjBz+B,OAAO,CAACw3K,SAAS,GAAGA,SAAS;EAC7Bx3K,OAAO,CAACozJ,aAAa,GAAGA,aAAa;EACrCpzJ,OAAO,CAAC6Q,SAAS,GAAGA,SAAS;EAC7B7Q,OAAO,CAAC8Q,gBAAgB,GAAGA,gBAAgB;EAC3C9Q,OAAO,CAACqO,mBAAmB,GAAGA,mBAAmB;EACjDrO,OAAO,CAAC+O,cAAc,GAAGA,cAAc;EACvC/O,OAAO,CAAC0U,gBAAgB,GAAGA,gBAAgB;EAC3C1U,OAAO,CAAC0M,uBAAuB,GAAGA,uBAAuB;EACzD1M,OAAO,CAACwjL,kBAAkB,GAAGA,kBAAkB;EAC/CxjL,OAAO,CAAC+1I,YAAY,GAAGA,YAAY;EACnC/1I,OAAO,CAAC+S,6BAA6B,GAAGA,6BAA6B;EACrE/S,OAAO,CAAC6S,uBAAuB,GAAGA,uBAAuB;EACzD7S,OAAO,CAACqU,cAAc,GAAGA,cAAc;EACvCrU,OAAO,CAACsuH,KAAK,GAAGA,KAAK;EACrBtuH,OAAO,CAAC49D,WAAW,GAAGA,WAAW;EACjC59D,OAAO,CAAC6jE,SAAS,GAAGA,SAAS;EAC7B7jE,OAAO,CAAC4pD,cAAc,GAAGA,cAAc;EACvC5pD,OAAO,CAACivF,cAAc,GAAGA,cAAc;EACvCjvF,OAAO,CAACiqI,KAAK,GAAGA,KAAK;EACrBjqI,OAAO,CAAC2jL,mBAAmB,GAAGA,mBAAmB;EACjD3jL,OAAO,CAACy2I,aAAa,GAAGA,aAAa;EACrCz2I,OAAO,CAACk/K,SAAS,GAAGA,SAAS;EAC7Bl/K,OAAO,CAACmvI,UAAU,GAAGA,UAAU;EAC/BnvI,OAAO,CAAC8P,SAAS,GAAGA,SAAS;EAC7B9P,OAAO,CAACozH,QAAQ,GAAGA,QAAQ;EAC3BpzH,OAAO,CAAC05K,cAAc,GAAGA,cAAc;EACvC15K,OAAO,CAAC4xH,WAAW,GAAGA,WAAW;EACjC5xH,OAAO,CAAC6oB,MAAM,GAAGA,MAAM;EACvB7oB,OAAO,CAAC09B,MAAM,GAAGA,MAAM;EACvB19B,OAAO,CAAC8jL,oBAAoB,GAAGA,oBAAoB;EACnD9jL,OAAO,CAACi3I,cAAc,GAAGA,cAAc;EACvCj3I,OAAO,CAAC83K,SAAS,GAAGA,SAAS;EAC7B93K,OAAO,CAACwzJ,mBAAmB,GAAGA,mBAAmB;EACjDxzJ,OAAO,CAACkhI,WAAW,GAAGA,WAAW;EACjClhI,OAAO,CAACsxJ,SAAS,GAAGA,SAAS;EAC7BtxJ,OAAO,CAACg5K,eAAe,GAAGA,eAAe;EACzCh5K,OAAO,CAACmwH,MAAM,GAAGA,MAAM;EACvBnwH,OAAO,CAACkvF,cAAc,GAAGA,cAAc;EACvClvF,OAAO,CAACiN,cAAc,GAAGA,cAAc;EACvCjN,OAAO,CAACuN,sBAAsB,GAAGA,sBAAsB;EACvDvN,OAAO,CAAC+M,cAAc,GAAGA,cAAc;EACvC/M,OAAO,CAAC8V,eAAe,GAAGA,eAAe;EACzC9V,OAAO,CAACwV,eAAe,GAAGA,eAAe;EACzCxV,OAAO,CAAC2V,eAAe,GAAGA,eAAe;EACzC3V,OAAO,CAAC67J,YAAY,GAAGA,YAAY;EACnC77J,OAAO,CAACgW,eAAe,GAAGA,eAAe;EACzChW,OAAO,CAAC0V,eAAe,GAAGA,eAAe;EACzC1V,OAAO,CAAC6V,eAAe,GAAGA,eAAe;EACzC7V,OAAO,CAAComJ,mBAAmB,GAAGA,mBAAmB;EACjDpmJ,OAAO,CAACyM,gBAAgB,GAAGA,gBAAgB;EAC3CzM,OAAO,CAACqM,mBAAmB,GAAGA,mBAAmB;EACjDrM,OAAO,CAACmL,KAAK,GAAGA,KAAK;EACrBnL,OAAO,CAACkU,qBAAqB,GAAGA,qBAAqB;EACrDlU,OAAO,CAACikL,yBAAyB,GAAGA,yBAAyB;EAC7DjkL,OAAO,CAACy3I,mBAAmB,GAAGA,mBAAmB;EACjDz3I,OAAO,CAAC4pB,OAAO,GAAGA,OAAO;EACzB5pB,OAAO,CAAC6vJ,aAAa,GAAGA,aAAa;EACrC7vJ,OAAO,CAACokL,mBAAmB,GAAGA,mBAAmB;EACjDpkL,OAAO,CAAC63I,aAAa,GAAGA,aAAa;EACrC73I,OAAO,CAACukL,uBAAuB,GAAGA,uBAAuB;EACzDvkL,OAAO,CAACm4I,iBAAiB,GAAGA,iBAAiB;EAC7Cn4I,OAAO,CAACqvC,QAAQ,GAAGA,QAAQ;EAC3BrvC,OAAO,CAAC6T,mBAAmB,GAAGA,mBAAmB;EACjD7T,OAAO,CAAC4T,qBAAqB,GAAGA,qBAAqB;EACrD5T,OAAO,CAAC2T,iBAAiB,GAAGA,iBAAiB;EAC7C3T,OAAO,CAAC0kL,kBAAkB,GAAGA,kBAAkB;EAC/C1kL,OAAO,CAACi5I,YAAY,GAAGA,YAAY;EACnCj5I,OAAO,CAACiM,iBAAiB,GAAGA,iBAAiB;EAC7CjM,OAAO,CAACyO,SAAS,GAAGA,SAAS;EAC7BzO,OAAO,CAAC0+C,qBAAqB,GAAGA,qBAAqB;EACrD1+C,OAAO,CAACg/C,qBAAqB,GAAGA,qBAAqB;EACrDh/C,OAAO,CAACi+C,oBAAoB,GAAGA,oBAAoB;EACnDj+C,OAAO,CAACo+C,2BAA2B,GAAGA,2BAA2B;EACjEp+C,OAAO,CAACw2K,OAAO,GAAGA,OAAO;EACzBx2K,OAAO,CAACy2K,aAAa,GAAGA,aAAa;EACrCz2K,OAAO,CAAC+/D,WAAW,GAAGA,WAAW;EACjC//D,OAAO,CAACypD,aAAa,GAAGA,aAAa;EACrCzpD,OAAO,CAAC4P,gBAAgB,GAAGA,gBAAgB;EAC3C5P,OAAO,CAACsQ,kBAAkB,GAAGA,kBAAkB;EAC/CtQ,OAAO,CAACiQ,eAAe,GAAGA,eAAe;EACzCjQ,OAAO,CAACoQ,qBAAqB,GAAGA,qBAAqB;EACrDpQ,OAAO,CAACqQ,qBAAqB,GAAGA,qBAAqB;EACrDrQ,OAAO,CAAC+P,iBAAiB,GAAGA,iBAAiB;EAC7C/P,OAAO,CAAC6L,YAAY,GAAGA,YAAY;EACnC7L,OAAO,CAACwc,OAAO,GAAGA,OAAO;EACzBxc,OAAO,CAAC81B,OAAO,GAAGA,OAAO;EACzB91B,OAAO,CAACusB,OAAO,GAAGA,OAAO;EACzBvsB,OAAO,CAACumJ,mBAAmB,GAAGA,mBAAmB;EACjDvmJ,OAAO,CAACg4H,YAAY,GAAGA,YAAY;EACnCh4H,OAAO,CAACiuH,cAAc,GAAGA,cAAc;EACvCjuH,OAAO,CAACswB,mBAAmB,GAAGA,mBAAmB;EACjDtwB,OAAO,CAAC4vB,sBAAsB,GAAGA,sBAAsB;EACvD5vB,OAAO,CAAC4uD,qBAAqB,GAAGA,qBAAqB;EACrD5uD,OAAO,CAAC2wB,0BAA0B,GAAGA,0BAA0B;EAC/D3wB,OAAO,CAACquB,iBAAiB,GAAGA,iBAAiB;EAC7CruB,OAAO,CAACqjH,aAAa,GAAGA,aAAa;EACrCrjH,OAAO,CAACwwG,UAAU,GAAGA,UAAU;EAC/BxwG,OAAO,CAAC05I,iBAAiB,GAAGA,iBAAiB;EAC7C15I,OAAO,CAACwT,gBAAgB,GAAGA,gBAAgB;EAC3CxT,OAAO,CAACsT,mBAAmB,GAAGA,mBAAmB;EACjDtT,OAAO,CAAC6M,UAAU,GAAGA,UAAU;EAC/B7M,OAAO,CAACuT,eAAe,GAAGA,eAAe;EACzCvT,OAAO,CAACwU,aAAa,GAAGA,aAAa;EACrCxU,OAAO,CAACmW,YAAY,GAAGA,YAAY;EACnCnW,OAAO,CAAC+T,YAAY,GAAGA,YAAY;AAEpC,CAAC,CAAE","file":"three.30987990.js","sourceRoot":"..\\src","sourcesContent":["console.warn( 'Scripts \"build/three.js\" and \"build/three.min.js\" are deprecated with r150+, and will be removed with r160. Please use ES Modules or alternatives: https://threejs.org/docs/index.html#manual/en/introduction/Installation' );\n/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\n})(this, (function (exports) { 'use strict';\n\n\tconst REVISION = '151';\n\tconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\n\tconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\n\tconst CullFaceNone = 0;\n\tconst CullFaceBack = 1;\n\tconst CullFaceFront = 2;\n\tconst CullFaceFrontBack = 3;\n\tconst BasicShadowMap = 0;\n\tconst PCFShadowMap = 1;\n\tconst PCFSoftShadowMap = 2;\n\tconst VSMShadowMap = 3;\n\tconst FrontSide = 0;\n\tconst BackSide = 1;\n\tconst DoubleSide = 2;\n\tconst TwoPassDoubleSide = 2; // r149\n\tconst NoBlending = 0;\n\tconst NormalBlending = 1;\n\tconst AdditiveBlending = 2;\n\tconst SubtractiveBlending = 3;\n\tconst MultiplyBlending = 4;\n\tconst CustomBlending = 5;\n\tconst AddEquation = 100;\n\tconst SubtractEquation = 101;\n\tconst ReverseSubtractEquation = 102;\n\tconst MinEquation = 103;\n\tconst MaxEquation = 104;\n\tconst ZeroFactor = 200;\n\tconst OneFactor = 201;\n\tconst SrcColorFactor = 202;\n\tconst OneMinusSrcColorFactor = 203;\n\tconst SrcAlphaFactor = 204;\n\tconst OneMinusSrcAlphaFactor = 205;\n\tconst DstAlphaFactor = 206;\n\tconst OneMinusDstAlphaFactor = 207;\n\tconst DstColorFactor = 208;\n\tconst OneMinusDstColorFactor = 209;\n\tconst SrcAlphaSaturateFactor = 210;\n\tconst NeverDepth = 0;\n\tconst AlwaysDepth = 1;\n\tconst LessDepth = 2;\n\tconst LessEqualDepth = 3;\n\tconst EqualDepth = 4;\n\tconst GreaterEqualDepth = 5;\n\tconst GreaterDepth = 6;\n\tconst NotEqualDepth = 7;\n\tconst MultiplyOperation = 0;\n\tconst MixOperation = 1;\n\tconst AddOperation = 2;\n\tconst NoToneMapping = 0;\n\tconst LinearToneMapping = 1;\n\tconst ReinhardToneMapping = 2;\n\tconst CineonToneMapping = 3;\n\tconst ACESFilmicToneMapping = 4;\n\tconst CustomToneMapping = 5;\n\n\tconst UVMapping = 300;\n\tconst CubeReflectionMapping = 301;\n\tconst CubeRefractionMapping = 302;\n\tconst EquirectangularReflectionMapping = 303;\n\tconst EquirectangularRefractionMapping = 304;\n\tconst CubeUVReflectionMapping = 306;\n\tconst RepeatWrapping = 1000;\n\tconst ClampToEdgeWrapping = 1001;\n\tconst MirroredRepeatWrapping = 1002;\n\tconst NearestFilter = 1003;\n\tconst NearestMipmapNearestFilter = 1004;\n\tconst NearestMipMapNearestFilter = 1004;\n\tconst NearestMipmapLinearFilter = 1005;\n\tconst NearestMipMapLinearFilter = 1005;\n\tconst LinearFilter = 1006;\n\tconst LinearMipmapNearestFilter = 1007;\n\tconst LinearMipMapNearestFilter = 1007;\n\tconst LinearMipmapLinearFilter = 1008;\n\tconst LinearMipMapLinearFilter = 1008;\n\tconst UnsignedByteType = 1009;\n\tconst ByteType = 1010;\n\tconst ShortType = 1011;\n\tconst UnsignedShortType = 1012;\n\tconst IntType = 1013;\n\tconst UnsignedIntType = 1014;\n\tconst FloatType = 1015;\n\tconst HalfFloatType = 1016;\n\tconst UnsignedShort4444Type = 1017;\n\tconst UnsignedShort5551Type = 1018;\n\tconst UnsignedInt248Type = 1020;\n\tconst AlphaFormat = 1021;\n\tconst RGBAFormat = 1023;\n\tconst LuminanceFormat = 1024;\n\tconst LuminanceAlphaFormat = 1025;\n\tconst DepthFormat = 1026;\n\tconst DepthStencilFormat = 1027;\n\tconst RedFormat = 1028;\n\tconst RedIntegerFormat = 1029;\n\tconst RGFormat = 1030;\n\tconst RGIntegerFormat = 1031;\n\tconst RGBAIntegerFormat = 1033;\n\n\tconst RGB_S3TC_DXT1_Format = 33776;\n\tconst RGBA_S3TC_DXT1_Format = 33777;\n\tconst RGBA_S3TC_DXT3_Format = 33778;\n\tconst RGBA_S3TC_DXT5_Format = 33779;\n\tconst RGB_PVRTC_4BPPV1_Format = 35840;\n\tconst RGB_PVRTC_2BPPV1_Format = 35841;\n\tconst RGBA_PVRTC_4BPPV1_Format = 35842;\n\tconst RGBA_PVRTC_2BPPV1_Format = 35843;\n\tconst RGB_ETC1_Format = 36196;\n\tconst RGB_ETC2_Format = 37492;\n\tconst RGBA_ETC2_EAC_Format = 37496;\n\tconst RGBA_ASTC_4x4_Format = 37808;\n\tconst RGBA_ASTC_5x4_Format = 37809;\n\tconst RGBA_ASTC_5x5_Format = 37810;\n\tconst RGBA_ASTC_6x5_Format = 37811;\n\tconst RGBA_ASTC_6x6_Format = 37812;\n\tconst RGBA_ASTC_8x5_Format = 37813;\n\tconst RGBA_ASTC_8x6_Format = 37814;\n\tconst RGBA_ASTC_8x8_Format = 37815;\n\tconst RGBA_ASTC_10x5_Format = 37816;\n\tconst RGBA_ASTC_10x6_Format = 37817;\n\tconst RGBA_ASTC_10x8_Format = 37818;\n\tconst RGBA_ASTC_10x10_Format = 37819;\n\tconst RGBA_ASTC_12x10_Format = 37820;\n\tconst RGBA_ASTC_12x12_Format = 37821;\n\tconst RGBA_BPTC_Format = 36492;\n\tconst RED_RGTC1_Format = 36283;\n\tconst SIGNED_RED_RGTC1_Format = 36284;\n\tconst RED_GREEN_RGTC2_Format = 36285;\n\tconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\n\tconst LoopOnce = 2200;\n\tconst LoopRepeat = 2201;\n\tconst LoopPingPong = 2202;\n\tconst InterpolateDiscrete = 2300;\n\tconst InterpolateLinear = 2301;\n\tconst InterpolateSmooth = 2302;\n\tconst ZeroCurvatureEnding = 2400;\n\tconst ZeroSlopeEnding = 2401;\n\tconst WrapAroundEnding = 2402;\n\tconst NormalAnimationBlendMode = 2500;\n\tconst AdditiveAnimationBlendMode = 2501;\n\tconst TrianglesDrawMode = 0;\n\tconst TriangleStripDrawMode = 1;\n\tconst TriangleFanDrawMode = 2;\n\tconst LinearEncoding = 3000;\n\tconst sRGBEncoding = 3001;\n\tconst BasicDepthPacking = 3200;\n\tconst RGBADepthPacking = 3201;\n\tconst TangentSpaceNormalMap = 0;\n\tconst ObjectSpaceNormalMap = 1;\n\n\t// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\n\tconst NoColorSpace = '';\n\tconst SRGBColorSpace = 'srgb';\n\tconst LinearSRGBColorSpace = 'srgb-linear';\n\tconst DisplayP3ColorSpace = 'display-p3';\n\n\tconst ZeroStencilOp = 0;\n\tconst KeepStencilOp = 7680;\n\tconst ReplaceStencilOp = 7681;\n\tconst IncrementStencilOp = 7682;\n\tconst DecrementStencilOp = 7683;\n\tconst IncrementWrapStencilOp = 34055;\n\tconst DecrementWrapStencilOp = 34056;\n\tconst InvertStencilOp = 5386;\n\n\tconst NeverStencilFunc = 512;\n\tconst LessStencilFunc = 513;\n\tconst EqualStencilFunc = 514;\n\tconst LessEqualStencilFunc = 515;\n\tconst GreaterStencilFunc = 516;\n\tconst NotEqualStencilFunc = 517;\n\tconst GreaterEqualStencilFunc = 518;\n\tconst AlwaysStencilFunc = 519;\n\n\tconst StaticDrawUsage = 35044;\n\tconst DynamicDrawUsage = 35048;\n\tconst StreamDrawUsage = 35040;\n\tconst StaticReadUsage = 35045;\n\tconst DynamicReadUsage = 35049;\n\tconst StreamReadUsage = 35041;\n\tconst StaticCopyUsage = 35046;\n\tconst DynamicCopyUsage = 35050;\n\tconst StreamCopyUsage = 35042;\n\n\tconst GLSL1 = '100';\n\tconst GLSL3 = '300 es';\n\n\tconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tclass EventDispatcher {\n\n\t\taddEventListener( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tconst listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t}\n\n\t\thasEventListener( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tconst listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t}\n\n\t\tremoveEventListener( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdispatchEvent( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t\tevent.target = null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\n\tlet _seed = 1234567;\n\n\n\tconst DEG2RAD = Math.PI / 180;\n\tconst RAD2DEG = 180 / Math.PI;\n\n\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\tfunction generateUUID() {\n\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\t\treturn uuid.toLowerCase();\n\n\t}\n\n\tfunction clamp( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t}\n\n\t// compute euclidean modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\tfunction euclideanModulo( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t}\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\tfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t}\n\n\t// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\tfunction inverseLerp( x, y, value ) {\n\n\t\tif ( x !== y ) {\n\n\t\t\treturn ( value - x ) / ( y - x );\n\n\t\t} else {\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\tfunction lerp( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t}\n\n\t// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\tfunction damp( x, y, lambda, dt ) {\n\n\t\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n\t}\n\n\t// https://www.desmos.com/calculator/vcsjnyz7x4\n\tfunction pingpong( x, length = 1 ) {\n\n\t\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n\t}\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\tfunction smoothstep( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t}\n\n\tfunction smootherstep( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t}\n\n\t// Random integer from <low, high> interval\n\tfunction randInt( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t}\n\n\t// Random float from <low, high> interval\n\tfunction randFloat( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t}\n\n\t// Random float from <-range/2, range/2> interval\n\tfunction randFloatSpread( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t}\n\n\t// Deterministic pseudo-random float in the interval [ 0, 1 ]\n\tfunction seededRandom( s ) {\n\n\t\tif ( s !== undefined ) _seed = s;\n\n\t\t// Mulberry32 generator\n\n\t\tlet t = _seed += 0x6D2B79F5;\n\n\t\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\t\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\t\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n\t}\n\n\tfunction degToRad( degrees ) {\n\n\t\treturn degrees * DEG2RAD;\n\n\t}\n\n\tfunction radToDeg( radians ) {\n\n\t\treturn radians * RAD2DEG;\n\n\t}\n\n\tfunction isPowerOfTwo( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t}\n\n\tfunction ceilPowerOfTwo( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n\tfunction floorPowerOfTwo( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n\tfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c2 = cos( b / 2 );\n\t\tconst s2 = sin( b / 2 );\n\n\t\tconst c13 = cos( ( a + c ) / 2 );\n\t\tconst s13 = sin( ( a + c ) / 2 );\n\n\t\tconst c1_3 = cos( ( a - c ) / 2 );\n\t\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\t\tconst c3_1 = cos( ( c - a ) / 2 );\n\t\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYX':\n\t\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t}\n\n\tfunction denormalize( value, array ) {\n\n\t\tswitch ( array.constructor ) {\n\n\t\t\tcase Float32Array:\n\n\t\t\t\treturn value;\n\n\t\t\tcase Uint16Array:\n\n\t\t\t\treturn value / 65535.0;\n\n\t\t\tcase Uint8Array:\n\n\t\t\t\treturn value / 255.0;\n\n\t\t\tcase Int16Array:\n\n\t\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\t\tcase Int8Array:\n\n\t\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t\t}\n\n\t}\n\n\tfunction normalize( value, array ) {\n\n\t\tswitch ( array.constructor ) {\n\n\t\t\tcase Float32Array:\n\n\t\t\t\treturn value;\n\n\t\t\tcase Uint16Array:\n\n\t\t\t\treturn Math.round( value * 65535.0 );\n\n\t\t\tcase Uint8Array:\n\n\t\t\t\treturn Math.round( value * 255.0 );\n\n\t\t\tcase Int16Array:\n\n\t\t\t\treturn Math.round( value * 32767.0 );\n\n\t\t\tcase Int8Array:\n\n\t\t\t\treturn Math.round( value * 127.0 );\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t\t}\n\n\t}\n\n\tconst MathUtils = {\n\t\tDEG2RAD: DEG2RAD,\n\t\tRAD2DEG: RAD2DEG,\n\t\tgenerateUUID: generateUUID,\n\t\tclamp: clamp,\n\t\teuclideanModulo: euclideanModulo,\n\t\tmapLinear: mapLinear,\n\t\tinverseLerp: inverseLerp,\n\t\tlerp: lerp,\n\t\tdamp: damp,\n\t\tpingpong: pingpong,\n\t\tsmoothstep: smoothstep,\n\t\tsmootherstep: smootherstep,\n\t\trandInt: randInt,\n\t\trandFloat: randFloat,\n\t\trandFloatSpread: randFloatSpread,\n\t\tseededRandom: seededRandom,\n\t\tdegToRad: degToRad,\n\t\tradToDeg: radToDeg,\n\t\tisPowerOfTwo: isPowerOfTwo,\n\t\tceilPowerOfTwo: ceilPowerOfTwo,\n\t\tfloorPowerOfTwo: floorPowerOfTwo,\n\t\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\t\tnormalize: normalize,\n\t\tdenormalize: denormalize\n\t};\n\n\tclass Vector2 {\n\n\t\tconstructor( x = 0, y = 0 ) {\n\n\t\t\tVector2.prototype.isVector2 = true;\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t}\n\n\t\tget width() {\n\n\t\t\treturn this.x;\n\n\t\t}\n\n\t\tset width( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t\tget height() {\n\n\t\t\treturn this.y;\n\n\t\t}\n\n\t\tset height( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t\tset( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetScalar( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetX( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetY( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetComponent( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetComponent( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t}\n\n\t\tcopy( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tadd( v ) {\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddScalar( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddVectors( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddScaledVector( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsub( v ) {\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsubScalar( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsubVectors( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiply( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiplyScalar( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdivide( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdivideScalar( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t}\n\n\t\tapplyMatrix3( m ) {\n\n\t\t\tconst x = this.x, y = this.y;\n\t\t\tconst e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmin( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmax( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclamp( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclampScalar( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclampLength( min, max ) {\n\n\t\t\tconst length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t}\n\n\t\tfloor() {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tceil() {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tround() {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\troundToZero() {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tnegate() {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdot( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t}\n\n\t\tcross( v ) {\n\n\t\t\treturn this.x * v.y - this.y * v.x;\n\n\t\t}\n\n\t\tlengthSq() {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t}\n\n\t\tlength() {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t}\n\n\t\tmanhattanLength() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t}\n\n\t\tnormalize() {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t}\n\n\t\tangle() {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\t\treturn angle;\n\n\t\t}\n\n\t\tangleTo( v ) {\n\n\t\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t\t}\n\n\t\tdistanceTo( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t}\n\n\t\tdistanceToSquared( v ) {\n\n\t\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t}\n\n\t\tmanhattanDistanceTo( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t}\n\n\t\tsetLength( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t}\n\n\t\tlerp( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tlerpVectors( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t}\n\n\t\tfromArray( array, offset = 0 ) {\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoArray( array = [], offset = 0 ) {\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfromBufferAttribute( attribute, index ) {\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trotateAround( center, angle ) {\n\n\t\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tconst x = this.x - center.x;\n\t\t\tconst y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trandom() {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t*[ Symbol.iterator ]() {\n\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\n\t\t}\n\n\t}\n\n\tclass Matrix3 {\n\n\t\tconstructor() {\n\n\t\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\t\tthis.elements = [\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t];\n\n\t\t}\n\n\t\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tidentity() {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( m ) {\n\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromMatrix4( m ) {\n\n\t\t\tconst me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiply( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t}\n\n\t\tpremultiply( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t}\n\n\t\tmultiplyMatrices( a, b ) {\n\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\n\t\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiplyScalar( s ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdeterminant() {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t}\n\n\t\tinvert() {\n\n\t\t\tconst te = this.elements,\n\n\t\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\t\tconst detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttranspose() {\n\n\t\t\tlet tmp;\n\t\t\tconst m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetNormalMatrix( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t\t}\n\n\t\ttransposeIntoArray( r ) {\n\n\t\t\tconst m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\t\tconst c = Math.cos( rotation );\n\t\t\tconst s = Math.sin( rotation );\n\n\t\t\tthis.set(\n\t\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t\t0, 0, 1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t//\n\n\t\tscale( sx, sy ) {\n\n\t\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trotate( theta ) {\n\n\t\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttranslate( tx, ty ) {\n\n\t\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// for 2D Transforms\n\n\t\tmakeTranslation( x, y ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeRotation( theta ) {\n\n\t\t\t// counterclockwise\n\n\t\t\tconst c = Math.cos( theta );\n\t\t\tconst s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0,\n\t\t\t\ts, c, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeScale( x, y ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0,\n\t\t\t\t0, y, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t//\n\n\t\tequals( matrix ) {\n\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfromArray( array, offset = 0 ) {\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoArray( array = [], offset = 0 ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t}\n\n\t}\n\n\tconst _m3 = /*@__PURE__*/ new Matrix3();\n\n\tfunction arrayNeedsUint32( array ) {\n\n\t\t// assumes larger values usually on last\n\n\t\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\tUint8ClampedArray: Uint8ClampedArray,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\tfunction getTypedArray( type, buffer ) {\n\n\t\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n\t}\n\n\tfunction createElementNS( name ) {\n\n\t\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n\t}\n\n\tfunction SRGBToLinear( c ) {\n\n\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t}\n\n\tfunction LinearToSRGB( c ) {\n\n\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t}\n\n\t/**\n\t * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n\t * or clipping. Based on W3C specifications for sRGB and Display P3,\n\t * and ICC specifications for the D50 connection space. Values in/out\n\t * are _linear_ sRGB and _linear_ Display P3.\n\t *\n\t * Note that both sRGB and Display P3 use the sRGB transfer functions.\n\t *\n\t * Reference:\n\t * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n\t */\n\n\tconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().fromArray( [\n\t\t0.8224621, 0.0331941, 0.0170827,\n\t\t0.1775380, 0.9668058, 0.0723974,\n\t\t- 0.0000001, 0.0000001, 0.9105199\n\t] );\n\n\tconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().fromArray( [\n\t\t1.2249401, - 0.0420569, - 0.0196376,\n\t\t- 0.2249404, 1.0420571, - 0.0786361,\n\t\t0.0000001, 0.0000000, 1.0982735\n\t] );\n\n\tfunction DisplayP3ToLinearSRGB( color ) {\n\n\t\t// Display P3 uses the sRGB transfer functions\n\t\treturn color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB );\n\n\t}\n\n\tfunction LinearSRGBToDisplayP3( color ) {\n\n\t\t// Display P3 uses the sRGB transfer functions\n\t\treturn color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB();\n\n\t}\n\n\t// Conversions from <source> to Linear-sRGB reference space.\n\tconst TO_LINEAR = {\n\t\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t\t[ SRGBColorSpace ]: ( color ) => color.convertSRGBToLinear(),\n\t\t[ DisplayP3ColorSpace ]: DisplayP3ToLinearSRGB,\n\t};\n\n\t// Conversions to <target> from Linear-sRGB reference space.\n\tconst FROM_LINEAR = {\n\t\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t\t[ SRGBColorSpace ]: ( color ) => color.convertLinearToSRGB(),\n\t\t[ DisplayP3ColorSpace ]: LinearSRGBToDisplayP3,\n\t};\n\n\tconst ColorManagement = {\n\n\t\tenabled: false,\n\n\t\tget legacyMode() {\n\n\t\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\t\treturn ! this.enabled;\n\n\t\t},\n\n\t\tset legacyMode( legacyMode ) {\n\n\t\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\t\tthis.enabled = ! legacyMode;\n\n\t\t},\n\n\t\tget workingColorSpace() {\n\n\t\t\treturn LinearSRGBColorSpace;\n\n\t\t},\n\n\t\tset workingColorSpace( colorSpace ) {\n\n\t\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t\t},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tconst sourceToLinear = TO_LINEAR[ sourceColorSpace ];\n\t\t\tconst targetFromLinear = FROM_LINEAR[ targetColorSpace ];\n\n\t\t\tif ( sourceToLinear === undefined || targetFromLinear === undefined ) {\n\n\t\t\t\tthrow new Error( `Unsupported color space conversion, \"${ sourceColorSpace }\" to \"${ targetColorSpace }\".` );\n\n\t\t\t}\n\n\t\t\treturn targetFromLinear( sourceToLinear( color ) );\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t};\n\n\tlet _canvas;\n\n\tclass ImageUtils {\n\n\t\tstatic getDataURL( image ) {\n\n\t\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\t\treturn image.src;\n\n\t\t\t}\n\n\t\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\t\treturn image.src;\n\n\t\t\t}\n\n\t\t\tlet canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstatic sRGBToLinear( image ) {\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\t\tconst data = imageData.data;\n\n\t\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t\t}\n\n\t\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else if ( image.data ) {\n\n\t\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// assuming float\n\n\t\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tclass Source {\n\n\t\tconstructor( data = null ) {\n\n\t\t\tthis.isSource = true;\n\n\t\t\tthis.uuid = generateUUID();\n\n\t\t\tthis.data = data;\n\n\t\t\tthis.version = 0;\n\n\t\t}\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.images[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tconst output = {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\turl: ''\n\t\t\t};\n\n\t\t\tconst data = this.data;\n\n\t\t\tif ( data !== null ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t\t// cube texture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// texture\n\n\t\t\t\t\turl = serializeImage( data );\n\n\t\t\t\t}\n\n\t\t\t\toutput.url = url;\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject ) {\n\n\t\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t}\n\n\t}\n\n\tfunction serializeImage( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t// default images\n\n\t\t\treturn ImageUtils.getDataURL( image );\n\n\t\t} else {\n\n\t\t\tif ( image.data ) {\n\n\t\t\t\t// images of DataTexture\n\n\t\t\t\treturn {\n\t\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height,\n\t\t\t\t\ttype: image.data.constructor.name\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\t\treturn {};\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tlet textureId = 0;\n\n\tclass Texture extends EventDispatcher {\n\n\t\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, encoding = LinearEncoding ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isTexture = true;\n\n\t\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\t\tthis.uuid = generateUUID();\n\n\t\t\tthis.name = '';\n\n\t\t\tthis.source = new Source( image );\n\t\t\tthis.mipmaps = [];\n\n\t\t\tthis.mapping = mapping;\n\t\t\tthis.channel = 0;\n\n\t\t\tthis.wrapS = wrapS;\n\t\t\tthis.wrapT = wrapT;\n\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\n\t\t\tthis.anisotropy = anisotropy;\n\n\t\t\tthis.format = format;\n\t\t\tthis.internalFormat = null;\n\t\t\tthis.type = type;\n\n\t\t\tthis.offset = new Vector2( 0, 0 );\n\t\t\tthis.repeat = new Vector2( 1, 1 );\n\t\t\tthis.center = new Vector2( 0, 0 );\n\t\t\tthis.rotation = 0;\n\n\t\t\tthis.matrixAutoUpdate = true;\n\t\t\tthis.matrix = new Matrix3();\n\n\t\t\tthis.generateMipmaps = true;\n\t\t\tthis.premultiplyAlpha = false;\n\t\t\tthis.flipY = true;\n\t\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t\t//\n\t\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\t\tthis.encoding = encoding;\n\n\t\t\tthis.userData = {};\n\n\t\t\tthis.version = 0;\n\t\t\tthis.onUpdate = null;\n\n\t\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t\t}\n\n\t\tget image() {\n\n\t\t\treturn this.source.data;\n\n\t\t}\n\n\t\tset image( value = null ) {\n\n\t\t\tthis.source.data = value;\n\n\t\t}\n\n\t\tupdateMatrix() {\n\n\t\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.source = source.source;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\t\t\tthis.channel = source.channel;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\t\t\tthis.center.copy( source.center );\n\t\t\tthis.rotation = source.rotation;\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy( source.matrix );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tconst output = {\n\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\t\tmapping: this.mapping,\n\t\t\t\tchannel: this.channel,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\t\trotation: this.rotation,\n\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tformat: this.format,\n\t\t\t\tinternalFormat: this.internalFormat,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY,\n\n\t\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t\t};\n\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\t\tif ( ! isRootObject ) {\n\n\t\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t\ttransformUv( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\t\tuv.applyMatrix3( this.matrix );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t\treturn uv;\n\n\t\t}\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) {\n\n\t\t\t\tthis.version ++;\n\t\t\t\tthis.source.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = null;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\tTexture.DEFAULT_ANISOTROPY = 1;\n\n\tclass Vector4 {\n\n\t\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\t\tVector4.prototype.isVector4 = true;\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t}\n\n\t\tget width() {\n\n\t\t\treturn this.z;\n\n\t\t}\n\n\t\tset width( value ) {\n\n\t\t\tthis.z = value;\n\n\t\t}\n\n\t\tget height() {\n\n\t\t\treturn this.w;\n\n\t\t}\n\n\t\tset height( value ) {\n\n\t\t\tthis.w = value;\n\n\t\t}\n\n\t\tset( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetScalar( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetX( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetY( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetZ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetW( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetComponent( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetComponent( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t}\n\n\t\tcopy( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tadd( v ) {\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddScalar( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddVectors( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddScaledVector( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsub( v ) {\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsubScalar( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsubVectors( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiply( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\tthis.w *= v.w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiplyScalar( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyMatrix4( m ) {\n\n\t\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tconst e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdivideScalar( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t}\n\n\t\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tlet angle, x, y, z; // variables for result\n\t\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmin( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmax( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclamp( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclampScalar( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclampLength( min, max ) {\n\n\t\t\tconst length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t}\n\n\t\tfloor() {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tceil() {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tround() {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\troundToZero() {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tnegate() {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdot( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t}\n\n\t\tlengthSq() {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t}\n\n\t\tlength() {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t}\n\n\t\tmanhattanLength() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t}\n\n\t\tnormalize() {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t}\n\n\t\tsetLength( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t}\n\n\t\tlerp( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tlerpVectors( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t}\n\n\t\tfromArray( array, offset = 0 ) {\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoArray( array = [], offset = 0 ) {\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfromBufferAttribute( attribute, index ) {\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trandom() {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t*[ Symbol.iterator ]() {\n\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t\tyield this.z;\n\t\t\tyield this.w;\n\n\t\t}\n\n\t}\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tclass WebGLRenderTarget extends EventDispatcher {\n\n\t\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isWebGLRenderTarget = true;\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = 1;\n\n\t\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\t\tthis.scissorTest = false;\n\n\t\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t\tthis.texture.flipY = false;\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t\t}\n\n\t\tsetSize( width, height, depth = 1 ) {\n\n\t\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\t\t\t\tthis.texture.image.depth = depth;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t\t// ensure image object is not shared, see #20328\n\n\t\t\tconst image = Object.assign( {}, source.texture.image );\n\t\t\tthis.texture.source = new Source( image );\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\t\tthis.samples = source.samples;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t}\n\n\tclass DataArrayTexture extends Texture {\n\n\t\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t\tsuper( null );\n\n\t\t\tthis.isDataArrayTexture = true;\n\n\t\t\tthis.image = { data, width, height, depth };\n\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\n\t\t}\n\n\t}\n\n\tclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\t\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\t\tsuper( width, height );\n\n\t\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tclass Data3DTexture extends Texture {\n\n\t\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t\t// Users can still set in DataTexture3D directly.\n\t\t\t//\n\t\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t\t// \ttexture.anisotropy = 16;\n\t\t\t//\n\t\t\t// See #14839\n\n\t\t\tsuper( null );\n\n\t\t\tthis.isData3DTexture = true;\n\n\t\t\tthis.image = { data, width, height, depth };\n\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\n\t\t}\n\n\t}\n\n\tclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\t\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\t\tsuper( width, height );\n\n\t\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\t\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\t\tsuper( width, height, options );\n\n\t\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\t\tconst texture = this.texture;\n\n\t\t\tthis.texture = [];\n\n\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetSize( width, height, depth = 1 ) {\n\n\t\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\n\t\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t\t}\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tthis.dispose();\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\n\t\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\t\tthis.texture.length = 0;\n\n\t\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass Quaternion {\n\n\t\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\t\tthis.isQuaternion = true;\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t}\n\n\t\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( t === 0 ) {\n\n\t\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( t === 1 ) {\n\n\t\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tlet s = 1 - t;\n\t\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tconst tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\t\tconst x0 = src0[ srcOffset0 ];\n\t\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\t\tconst x1 = src1[ srcOffset1 ];\n\t\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\t\treturn dst;\n\n\t\t}\n\n\t\tget x() {\n\n\t\t\treturn this._x;\n\n\t\t}\n\n\t\tset x( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t\tget y() {\n\n\t\t\treturn this._y;\n\n\t\t}\n\n\t\tset y( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t\tget z() {\n\n\t\t\treturn this._z;\n\n\t\t}\n\n\t\tset z( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t\tget w() {\n\n\t\t\treturn this._w;\n\n\t\t}\n\n\t\tset w( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t\tset( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t}\n\n\t\tcopy( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromEuler( euler, update ) {\n\n\t\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tconst cos = Math.cos;\n\t\t\tconst sin = Math.sin;\n\n\t\t\tconst c1 = cos( x / 2 );\n\t\t\tconst c2 = cos( y / 2 );\n\t\t\tconst c3 = cos( z / 2 );\n\n\t\t\tconst s1 = sin( x / 2 );\n\t\t\tconst s2 = sin( y / 2 );\n\t\t\tconst s3 = sin( z / 2 );\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromAxisAngle( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromRotationMatrix( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tconst te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tangleTo( q ) {\n\n\t\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t\t}\n\n\t\trotateTowards( q, step ) {\n\n\t\t\tconst angle = this.angleTo( q );\n\n\t\t\tif ( angle === 0 ) return this;\n\n\t\t\tconst t = Math.min( 1, step / angle );\n\n\t\t\tthis.slerp( q, t );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tidentity() {\n\n\t\t\treturn this.set( 0, 0, 0, 1 );\n\n\t\t}\n\n\t\tinvert() {\n\n\t\t\t// quaternion is assumed to have unit length\n\n\t\t\treturn this.conjugate();\n\n\t\t}\n\n\t\tconjugate() {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdot( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t}\n\n\t\tlengthSq() {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t}\n\n\t\tlength() {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t}\n\n\t\tnormalize() {\n\n\t\t\tlet l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiply( q ) {\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t}\n\n\t\tpremultiply( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t}\n\n\t\tmultiplyQuaternions( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tslerp( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\t\tconst s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\t\tthis.normalize();\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tslerpQuaternions( qa, qb, t ) {\n\n\t\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t\t}\n\n\t\trandom() {\n\n\t\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t\t// Note, this source uses w, x, y, z ordering,\n\t\t\t// so we swap the order below.\n\n\t\t\tconst u1 = Math.random();\n\t\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\t\treturn this.set(\n\t\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t\t);\n\n\t\t}\n\n\t\tequals( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t}\n\n\t\tfromArray( array, offset = 0 ) {\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoArray( array = [], offset = 0 ) {\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfromBufferAttribute( attribute, index ) {\n\n\t\t\tthis._x = attribute.getX( index );\n\t\t\tthis._y = attribute.getY( index );\n\t\t\tthis._z = attribute.getZ( index );\n\t\t\tthis._w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\treturn this.toArray();\n\n\t\t}\n\n\t\t_onChange( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t\t*[ Symbol.iterator ]() {\n\n\t\t\tyield this._x;\n\t\t\tyield this._y;\n\t\t\tyield this._z;\n\t\t\tyield this._w;\n\n\t\t}\n\n\t}\n\n\tclass Vector3 {\n\n\t\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\t\tVector3.prototype.isVector3 = true;\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t}\n\n\t\tset( x, y, z ) {\n\n\t\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetScalar( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetX( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetY( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetZ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetComponent( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetComponent( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t}\n\n\t\tcopy( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tadd( v ) {\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddScalar( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddVectors( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddScaledVector( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsub( v ) {\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsubScalar( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsubVectors( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiply( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiplyScalar( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiplyVectors( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyEuler( euler ) {\n\n\t\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t\t}\n\n\t\tapplyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t\t}\n\n\t\tapplyMatrix3( m ) {\n\n\t\t\tconst x = this.x, y = this.y, z = this.z;\n\t\t\tconst e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyNormalMatrix( m ) {\n\n\t\t\treturn this.applyMatrix3( m ).normalize();\n\n\t\t}\n\n\t\tapplyMatrix4( m ) {\n\n\t\t\tconst x = this.x, y = this.y, z = this.z;\n\t\t\tconst e = m.elements;\n\n\t\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyQuaternion( q ) {\n\n\t\t\tconst x = this.x, y = this.y, z = this.z;\n\t\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tconst ix = qw * x + qy * z - qz * y;\n\t\t\tconst iy = qw * y + qz * x - qx * z;\n\t\t\tconst iz = qw * z + qx * y - qy * x;\n\t\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tproject( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t\t}\n\n\t\tunproject( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t\t}\n\n\t\ttransformDirection( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tconst x = this.x, y = this.y, z = this.z;\n\t\t\tconst e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tdivide( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdivideScalar( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t}\n\n\t\tmin( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmax( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclamp( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclampScalar( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclampLength( min, max ) {\n\n\t\t\tconst length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t}\n\n\t\tfloor() {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tceil() {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tround() {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\troundToZero() {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tnegate() {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdot( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t}\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq() {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t}\n\n\t\tlength() {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t}\n\n\t\tmanhattanLength() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t}\n\n\t\tnormalize() {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t}\n\n\t\tsetLength( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t}\n\n\t\tlerp( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tlerpVectors( v1, v2, alpha ) {\n\n\t\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcross( v ) {\n\n\t\t\treturn this.crossVectors( this, v );\n\n\t\t}\n\n\t\tcrossVectors( a, b ) {\n\n\t\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tprojectOnVector( v ) {\n\n\t\t\tconst denominator = v.lengthSq();\n\n\t\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t\t}\n\n\t\tprojectOnPlane( planeNormal ) {\n\n\t\t\t_vector$b.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( _vector$b );\n\n\t\t}\n\n\t\treflect( normal ) {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\treturn this.sub( _vector$b.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t}\n\n\t\tangleTo( v ) {\n\n\t\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t\t}\n\n\t\tdistanceTo( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t}\n\n\t\tdistanceToSquared( v ) {\n\n\t\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t}\n\n\t\tmanhattanDistanceTo( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t}\n\n\t\tsetFromSpherical( s ) {\n\n\t\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t\t}\n\n\t\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\t\tthis.y = Math.cos( phi ) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromCylindrical( c ) {\n\n\t\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t\t}\n\n\t\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\t\tthis.x = radius * Math.sin( theta );\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromMatrixPosition( m ) {\n\n\t\t\tconst e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromMatrixScale( m ) {\n\n\t\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromMatrixColumn( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t}\n\n\t\tsetFromMatrix3Column( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t\t}\n\n\t\tsetFromEuler( e ) {\n\n\t\t\tthis.x = e._x;\n\t\t\tthis.y = e._y;\n\t\t\tthis.z = e._z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromColor( c ) {\n\n\t\t\tthis.x = c.r;\n\t\t\tthis.y = c.g;\n\t\t\tthis.z = c.b;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t}\n\n\t\tfromArray( array, offset = 0 ) {\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoArray( array = [], offset = 0 ) {\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfromBufferAttribute( attribute, index ) {\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trandom() {\n\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trandomDirection() {\n\n\t\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\t\tconst t = Math.random() * Math.PI * 2;\n\t\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\t\tthis.x = f * Math.cos( t );\n\t\t\tthis.y = f * Math.sin( t );\n\t\t\tthis.z = u;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t*[ Symbol.iterator ]() {\n\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t\tyield this.z;\n\n\t\t}\n\n\t}\n\n\tconst _vector$b = /*@__PURE__*/ new Vector3();\n\tconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\n\tclass Box3 {\n\n\t\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\t\tthis.isBox3 = true;\n\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\n\t\t}\n\n\t\tset( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromArray( array ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\t\tthis.expandByPoint( _vector$a.fromArray( array, i ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromBufferAttribute( attribute ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( _vector$a.fromBufferAttribute( attribute, i ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromPoints( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromCenterAndSize( center, size ) {\n\n\t\t\tconst halfSize = _vector$a.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromObject( object, precise = false ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object, precise );\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t\tcopy( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeEmpty() {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tisEmpty() {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t}\n\n\t\tgetCenter( target ) {\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t}\n\n\t\tgetSize( target ) {\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t}\n\n\t\texpandByPoint( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\texpandByVector( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\texpandByScalar( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\texpandByObject( object, precise = false ) {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( object.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t} else {\n\n\t\t\t\tconst geometry = object.geometry;\n\n\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\tif ( precise && geometry.attributes !== undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t_vector$a.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\t\t\tthis.expandByPoint( _vector$a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\t\tthis.union( _box$3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcontainsPoint( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t}\n\n\t\tcontainsBox( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t}\n\n\t\tgetParameter( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t}\n\n\t\tintersectsBox( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t}\n\n\t\tintersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, _vector$a );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn _vector$a.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t}\n\n\t\tintersectsPlane( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tlet min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t\t}\n\n\t\tintersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( _center );\n\t\t\t_extents.subVectors( this.max, _center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tlet axes = [\n\t\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t\t}\n\n\t\tclampPoint( point, target ) {\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t}\n\n\t\tdistanceToPoint( point ) {\n\n\t\t\treturn this.clampPoint( point, _vector$a ).distanceTo( point );\n\n\t\t}\n\n\t\tgetBoundingSphere( target ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\ttarget.makeEmpty();\n\n\t\t\t} else {\n\n\t\t\t\tthis.getCenter( target.center );\n\n\t\t\t\ttarget.radius = this.getSize( _vector$a ).length() * 0.5;\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tintersect( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tunion( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( _points );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttranslate( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t}\n\n\tconst _points = [\n\t\t/*@__PURE__*/ new Vector3(),\n\t\t/*@__PURE__*/ new Vector3(),\n\t\t/*@__PURE__*/ new Vector3(),\n\t\t/*@__PURE__*/ new Vector3(),\n\t\t/*@__PURE__*/ new Vector3(),\n\t\t/*@__PURE__*/ new Vector3(),\n\t\t/*@__PURE__*/ new Vector3(),\n\t\t/*@__PURE__*/ new Vector3()\n\t];\n\n\tconst _vector$a = /*@__PURE__*/ new Vector3();\n\n\tconst _box$3 = /*@__PURE__*/ new Box3();\n\n\t// triangle centered vertices\n\n\tconst _v0$2 = /*@__PURE__*/ new Vector3();\n\tconst _v1$7 = /*@__PURE__*/ new Vector3();\n\tconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n\t// triangle edge vectors\n\n\tconst _f0 = /*@__PURE__*/ new Vector3();\n\tconst _f1 = /*@__PURE__*/ new Vector3();\n\tconst _f2 = /*@__PURE__*/ new Vector3();\n\n\tconst _center = /*@__PURE__*/ new Vector3();\n\tconst _extents = /*@__PURE__*/ new Vector3();\n\tconst _triangleNormal = /*@__PURE__*/ new Vector3();\n\tconst _testAxis = /*@__PURE__*/ new Vector3();\n\n\tfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\t\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t_testAxis.fromArray( axes, i );\n\t\t\t// project the aabb onto the separating axis\n\t\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\t\tconst p0 = v0.dot( _testAxis );\n\t\t\tconst p1 = v1.dot( _testAxis );\n\t\t\tconst p2 = v2.dot( _testAxis );\n\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is separating and we can exit\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tconst _box$2 = /*@__PURE__*/ new Box3();\n\tconst _v1$6 = /*@__PURE__*/ new Vector3();\n\tconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n\tclass Sphere {\n\n\t\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\t\tthis.center = center;\n\t\t\tthis.radius = radius;\n\n\t\t}\n\n\t\tset( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromPoints( points, optionalCenter ) {\n\n\t\t\tconst center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tisEmpty() {\n\n\t\t\treturn ( this.radius < 0 );\n\n\t\t}\n\n\t\tmakeEmpty() {\n\n\t\t\tthis.center.set( 0, 0, 0 );\n\t\t\tthis.radius = - 1;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcontainsPoint( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t}\n\n\t\tdistanceToPoint( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t}\n\n\t\tintersectsSphere( sphere ) {\n\n\t\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t}\n\n\t\tintersectsBox( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t}\n\n\t\tintersectsPlane( plane ) {\n\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t\t}\n\n\t\tclampPoint( point, target ) {\n\n\t\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\ttarget.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\ttarget.sub( this.center ).normalize();\n\t\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tgetBoundingBox( target ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\n\t\t\t}\n\n\t\t\ttarget.set( this.center, this.center );\n\t\t\ttarget.expandByScalar( this.radius );\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tapplyMatrix4( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttranslate( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\texpandByPoint( point ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\tthis.center.copy( point );\n\n\t\t\t\tthis.radius = 0;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\t_v1$6.subVectors( point, this.center );\n\n\t\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\t// calculate the minimal sphere\n\n\t\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\t\tthis.radius += delta;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tunion( sphere ) {\n\n\t\t\tif ( sphere.isEmpty() ) {\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\tthis.copy( sphere );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t\t} else {\n\n\t\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t}\n\n\tconst _vector$9 = /*@__PURE__*/ new Vector3();\n\tconst _segCenter = /*@__PURE__*/ new Vector3();\n\tconst _segDir = /*@__PURE__*/ new Vector3();\n\tconst _diff = /*@__PURE__*/ new Vector3();\n\n\tconst _edge1 = /*@__PURE__*/ new Vector3();\n\tconst _edge2 = /*@__PURE__*/ new Vector3();\n\tconst _normal$1 = /*@__PURE__*/ new Vector3();\n\n\tclass Ray {\n\n\t\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\t\tthis.origin = origin;\n\t\t\tthis.direction = direction;\n\n\t\t}\n\n\t\tset( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tat( t, target ) {\n\n\t\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t\t}\n\n\t\tlookAt( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trecast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, _vector$9 ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclosestPointToPoint( point, target ) {\n\n\t\t\ttarget.subVectors( point, this.origin );\n\n\t\t\tconst directionDistance = target.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn target.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\t}\n\n\t\tdistanceToPoint( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t}\n\n\t\tdistanceSqToPoint( point ) {\n\n\t\t\tconst directionDistance = _vector$9.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\t_vector$9.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\t\treturn _vector$9.distanceToSquared( point );\n\n\t\t}\n\n\t\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tconst a01 = - this.direction.dot( _segDir );\n\t\t\tconst b0 = _diff.dot( this.direction );\n\t\t\tconst b1 = - _diff.dot( _segDir );\n\t\t\tconst c = _diff.lengthSq();\n\t\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\t\tlet s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t}\n\n\t\tintersectSphere( sphere, target ) {\n\n\t\t\t_vector$9.subVectors( sphere.center, this.origin );\n\t\t\tconst tca = _vector$9.dot( this.direction );\n\t\t\tconst d2 = _vector$9.dot( _vector$9 ) - tca * tca;\n\t\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tconst t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tconst t1 = tca + thc;\n\n\t\t\t// test to see if t1 is behind the ray - if so, return null\n\t\t\tif ( t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t}\n\n\t\tintersectsSphere( sphere ) {\n\n\t\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t}\n\n\t\tdistanceToPlane( plane ) {\n\n\t\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\n\t\t}\n\n\t\tintersectPlane( plane, target ) {\n\n\t\t\tconst t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, target );\n\n\t\t}\n\n\t\tintersectsPlane( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tintersectBox( box, target ) {\n\n\t\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tconst invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tconst origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t\t}\n\n\t\tintersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, _vector$9 ) !== null;\n\n\t\t}\n\n\t\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\n\t\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t_edge1.subVectors( b, a );\n\t\t\t_edge2.subVectors( c, a );\n\t\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\t\tlet sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t_diff.subVectors( this.origin, a );\n\t\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t}\n\n\t\tapplyMatrix4( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t}\n\n\tclass Matrix4 {\n\n\t\tconstructor() {\n\n\t\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\t\tthis.elements = [\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t];\n\n\t\t}\n\n\t\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tidentity() {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t}\n\n\t\tcopy( m ) {\n\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopyPosition( m ) {\n\n\t\t\tconst te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromMatrix3( m ) {\n\n\t\t\tconst me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\textractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\n\t\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeRotationFromEuler( euler ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// bottom row\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// last column\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( _zero, q, _one );\n\n\t\t}\n\n\t\tlookAt( eye, target, up ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\t_z.subVectors( eye, target );\n\n\t\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t_z.z = 1;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t_z.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_z.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\t\t\t\t_x.crossVectors( up, _z );\n\n\t\t\t}\n\n\t\t\t_x.normalize();\n\t\t\t_y.crossVectors( _z, _x );\n\n\t\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiply( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t}\n\n\t\tpremultiply( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t}\n\n\t\tmultiplyMatrices( a, b ) {\n\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\n\t\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiplyScalar( s ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdeterminant() {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t}\n\n\t\ttranspose() {\n\n\t\t\tconst te = this.elements;\n\t\t\tlet tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetPosition( x, y, z ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tte[ 12 ] = x.x;\n\t\t\t\tte[ 13 ] = x.y;\n\t\t\t\tte[ 14 ] = x.z;\n\n\t\t\t} else {\n\n\t\t\t\tte[ 12 ] = x;\n\t\t\t\tte[ 13 ] = y;\n\t\t\t\tte[ 14 ] = z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tinvert() {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tconst te = this.elements,\n\n\t\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\t\tconst detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tscale( v ) {\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetMaxScaleOnAxis() {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t}\n\n\t\tmakeTranslation( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeRotationX( theta ) {\n\n\t\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s, c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeRotationY( theta ) {\n\n\t\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeRotationZ( theta ) {\n\n\t\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts, c, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeRotationAxis( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tconst c = Math.cos( angle );\n\t\t\tconst s = Math.sin( angle );\n\t\t\tconst t = 1 - c;\n\t\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\t\tconst tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeScale( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, yx, zx, 0,\n\t\t\t\txy, 1, zy, 0,\n\t\t\t\txz, yz, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcompose( position, quaternion, scale ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = position.x;\n\t\t\tte[ 13 ] = position.y;\n\t\t\tte[ 14 ] = position.z;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdecompose( position, quaternion, scale ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tconst det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\t_m1$2.copy( this );\n\n\t\t\tconst invSX = 1 / sx;\n\t\t\tconst invSY = 1 / sy;\n\t\t\tconst invSZ = 1 / sz;\n\n\t\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = 2 * near / ( right - left );\n\t\t\tconst y = 2 * near / ( top - bottom );\n\n\t\t\tconst a = ( right + left ) / ( right - left );\n\t\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\t\tconst c = - ( far + near ) / ( far - near );\n\t\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\t\tconst te = this.elements;\n\t\t\tconst w = 1.0 / ( right - left );\n\t\t\tconst h = 1.0 / ( top - bottom );\n\t\t\tconst p = 1.0 / ( far - near );\n\n\t\t\tconst x = ( right + left ) * w;\n\t\t\tconst y = ( top + bottom ) * h;\n\t\t\tconst z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( matrix ) {\n\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfromArray( array, offset = 0 ) {\n\n\t\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoArray( array = [], offset = 0 ) {\n\n\t\t\tconst te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t}\n\n\tconst _v1$5 = /*@__PURE__*/ new Vector3();\n\tconst _m1$2 = /*@__PURE__*/ new Matrix4();\n\tconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\n\tconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\n\tconst _x = /*@__PURE__*/ new Vector3();\n\tconst _y = /*@__PURE__*/ new Vector3();\n\tconst _z = /*@__PURE__*/ new Vector3();\n\n\tconst _matrix = /*@__PURE__*/ new Matrix4();\n\tconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\n\tclass Euler {\n\n\t\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\t\tthis.isEuler = true;\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\n\t\t}\n\n\t\tget x() {\n\n\t\t\treturn this._x;\n\n\t\t}\n\n\t\tset x( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t\tget y() {\n\n\t\t\treturn this._y;\n\n\t\t}\n\n\t\tset y( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t\tget z() {\n\n\t\t\treturn this._z;\n\n\t\t}\n\n\t\tset z( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t\tget order() {\n\n\t\t\treturn this._order;\n\n\t\t}\n\n\t\tset order( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t\tset( x, y, z, order = this._order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t}\n\n\t\tcopy( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tconst te = m.elements;\n\t\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tswitch ( order ) {\n\n\t\t\t\tcase 'XYZ':\n\n\t\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\n\t\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\n\t\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\n\t\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\n\t\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\n\t\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update === true ) this._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromQuaternion( q, order, update ) {\n\n\t\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t\t}\n\n\t\tsetFromVector3( v, order = this._order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t\t}\n\n\t\treorder( newOrder ) {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\t_quaternion$3.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t\t}\n\n\t\tequals( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t}\n\n\t\tfromArray( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoArray( array = [], offset = 0 ) {\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\t_onChange( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t\t*[ Symbol.iterator ]() {\n\n\t\t\tyield this._x;\n\t\t\tyield this._y;\n\t\t\tyield this._z;\n\t\t\tyield this._order;\n\n\t\t}\n\n\t}\n\n\tEuler.DEFAULT_ORDER = 'XYZ';\n\n\tclass Layers {\n\n\t\tconstructor() {\n\n\t\t\tthis.mask = 1 | 0;\n\n\t\t}\n\n\t\tset( channel ) {\n\n\t\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t\t}\n\n\t\tenable( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t}\n\n\t\tenableAll() {\n\n\t\t\tthis.mask = 0xffffffff | 0;\n\n\t\t}\n\n\t\ttoggle( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t}\n\n\t\tdisable( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t}\n\n\t\tdisableAll() {\n\n\t\t\tthis.mask = 0;\n\n\t\t}\n\n\t\ttest( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t\tisEnabled( channel ) {\n\n\t\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t\t}\n\n\t}\n\n\tlet _object3DId = 0;\n\n\tconst _v1$4 = /*@__PURE__*/ new Vector3();\n\tconst _q1 = /*@__PURE__*/ new Quaternion();\n\tconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\tconst _target = /*@__PURE__*/ new Vector3();\n\n\tconst _position$3 = /*@__PURE__*/ new Vector3();\n\tconst _scale$2 = /*@__PURE__*/ new Vector3();\n\tconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\n\tconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\n\tconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\n\tconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\n\tconst _addedEvent = { type: 'added' };\n\tconst _removedEvent = { type: 'removed' };\n\n\tclass Object3D extends EventDispatcher {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.isObject3D = true;\n\n\t\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\t\tthis.uuid = generateUUID();\n\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Object3D';\n\n\t\t\tthis.parent = null;\n\t\t\tthis.children = [];\n\n\t\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\t\tconst position = new Vector3();\n\t\t\tconst rotation = new Euler();\n\t\t\tconst quaternion = new Quaternion();\n\t\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\t\tfunction onRotationChange() {\n\n\t\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t\t}\n\n\t\t\tfunction onQuaternionChange() {\n\n\t\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t\t}\n\n\t\t\trotation._onChange( onRotationChange );\n\t\t\tquaternion._onChange( onQuaternionChange );\n\n\t\t\tObject.defineProperties( this, {\n\t\t\t\tposition: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: position\n\t\t\t\t},\n\t\t\t\trotation: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: rotation\n\t\t\t\t},\n\t\t\t\tquaternion: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: quaternion\n\t\t\t\t},\n\t\t\t\tscale: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: scale\n\t\t\t\t},\n\t\t\t\tmodelViewMatrix: {\n\t\t\t\t\tvalue: new Matrix4()\n\t\t\t\t},\n\t\t\t\tnormalMatrix: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.matrixWorld = new Matrix4();\n\n\t\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.visible = true;\n\n\t\t\tthis.castShadow = false;\n\t\t\tthis.receiveShadow = false;\n\n\t\t\tthis.frustumCulled = true;\n\t\t\tthis.renderOrder = 0;\n\n\t\t\tthis.animations = [];\n\n\t\t\tthis.userData = {};\n\n\t\t}\n\n\t\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\t\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\t\tapplyMatrix4( matrix ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tthis.matrix.premultiply( matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t}\n\n\t\tapplyQuaternion( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t}\n\n\t\tsetRotationFromEuler( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t}\n\n\t\tsetRotationFromMatrix( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t}\n\n\t\tsetRotationFromQuaternion( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t}\n\n\t\trotateOnAxis( axis, angle ) {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trotateOnWorldAxis( axis, angle ) {\n\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t\t}\n\n\t\trotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t\t}\n\n\t\trotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t\t}\n\n\t\ttranslateOnAxis( axis, distance ) {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttranslateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t\t}\n\n\t\ttranslateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t\t}\n\n\t\ttranslateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t\t}\n\n\t\tlocalToWorld( vector ) {\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t}\n\n\t\tworldToLocal( vector ) {\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t\t}\n\n\t\tlookAt( x, y, z ) {\n\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\t_target.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\t_target.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tconst parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t\t}\n\n\t\t}\n\n\t\tadd( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object && object.isObject3D ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push( object );\n\n\t\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tremove( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tconst index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tremoveFromParent() {\n\n\t\t\tconst parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tparent.remove( this );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclear() {\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tconst object = this.children[ i ];\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t}\n\n\t\t\tthis.children.length = 0;\n\n\t\t\treturn this;\n\n\n\t\t}\n\n\t\tattach( object ) {\n\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t\t}\n\n\t\t\tobject.applyMatrix4( _m1$1 );\n\n\t\t\tthis.add( object );\n\n\t\t\tobject.updateWorldMatrix( false, true );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetObjectById( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t}\n\n\t\tgetObjectByName( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t}\n\n\t\tgetObjectByProperty( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = this.children[ i ];\n\t\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\tgetObjectsByProperty( name, value ) {\n\n\t\t\tlet result = [];\n\n\t\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tgetWorldPosition( target ) {\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t\t}\n\n\t\tgetWorldQuaternion( target ) {\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tgetWorldScale( target ) {\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tgetWorldDirection( target ) {\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tconst e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t\t}\n\n\t\traycast( /* raycaster, intersects */ ) {}\n\n\t\ttraverse( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttraverseVisible( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttraverseAncestors( callback ) {\n\n\t\t\tconst parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateMatrix() {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t}\n\n\t\tupdateMatrixWorld( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\t\tconst parent = this.parent;\n\n\t\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t\t}\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tif ( updateChildren === true ) {\n\n\t\t\t\tconst children = this.children;\n\n\t\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst child = children[ i ];\n\n\t\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tconst output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {},\n\t\t\t\t\tskeletons: {},\n\t\t\t\t\tanimations: {},\n\t\t\t\t\tnodes: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tconst object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\t\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\t\t\tobject.up = this.up.toArray();\n\n\t\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t\t// object specific properties\n\n\t\t\tif ( this.isInstancedMesh ) {\n\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.isScene ) {\n\n\t\t\t\tif ( this.background ) {\n\n\t\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\t\tobject.bindMode = this.bindMode;\n\t\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tconst uuids = [];\n\n\t\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.animations.length > 0 ) {\n\n\t\t\t\tobject.animations = [];\n\n\t\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\t\tconst images = extractFromCache( meta.images );\n\t\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tconst values = [];\n\t\t\t\tfor ( const key in cache ) {\n\n\t\t\t\t\tconst data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t}\n\n\t\tclone( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t}\n\n\t\tcopy( source, recursive = true ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.rotation.order = source.rotation.order;\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tconst child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\n\tObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\n\tObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\n\tconst _v0$1 = /*@__PURE__*/ new Vector3();\n\tconst _v1$3 = /*@__PURE__*/ new Vector3();\n\tconst _v2$2 = /*@__PURE__*/ new Vector3();\n\tconst _v3$1 = /*@__PURE__*/ new Vector3();\n\n\tconst _vab = /*@__PURE__*/ new Vector3();\n\tconst _vac = /*@__PURE__*/ new Vector3();\n\tconst _vbc = /*@__PURE__*/ new Vector3();\n\tconst _vap = /*@__PURE__*/ new Vector3();\n\tconst _vbp = /*@__PURE__*/ new Vector3();\n\tconst _vcp = /*@__PURE__*/ new Vector3();\n\n\tlet warnedGetUV = false;\n\n\tclass Triangle {\n\n\t\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.c = c;\n\n\t\t}\n\n\t\tstatic getNormal( a, b, c, target ) {\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\t_v0$1.subVectors( a, b );\n\t\t\ttarget.cross( _v0$1 );\n\n\t\t\tconst targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t\t_v0$1.subVectors( c, a );\n\t\t\t_v1$3.subVectors( b, a );\n\t\t\t_v2$2.subVectors( point, a );\n\n\t\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tconst invDenom = 1 / denom;\n\t\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t}\n\n\t\tstatic containsPoint( point, a, b, c ) {\n\n\t\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t\t}\n\n\t\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\t\tif ( warnedGetUV === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\t\twarnedGetUV = true;\n\n\t\t\t}\n\n\t\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t\t}\n\n\t\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\t\ttarget.setScalar( 0 );\n\t\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t\t_v0$1.subVectors( c, b );\n\t\t\t_v1$3.subVectors( a, b );\n\n\t\t\t// strictly front facing\n\t\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t\t}\n\n\t\tset( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t\tcopy( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetArea() {\n\n\t\t\t_v0$1.subVectors( this.c, this.b );\n\t\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t\t}\n\n\t\tgetMidpoint( target ) {\n\n\t\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t}\n\n\t\tgetNormal( target ) {\n\n\t\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t\t}\n\n\t\tgetPlane( target ) {\n\n\t\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t}\n\n\t\tgetBarycoord( point, target ) {\n\n\t\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t\t}\n\n\t\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\t\tif ( warnedGetUV === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\t\twarnedGetUV = true;\n\n\t\t\t}\n\n\t\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t\t}\n\n\t\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t\t}\n\n\t\tcontainsPoint( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t}\n\n\t\tisFrontFacing( direction ) {\n\n\t\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t\t}\n\n\t\tintersectsBox( box ) {\n\n\t\t\treturn box.intersectsTriangle( this );\n\n\t\t}\n\n\t\tclosestPointToPoint( p, target ) {\n\n\t\t\tconst a = this.a, b = this.b, c = this.c;\n\t\t\tlet v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors( b, a );\n\t\t\t_vac.subVectors( c, a );\n\t\t\t_vap.subVectors( p, a );\n\t\t\tconst d1 = _vab.dot( _vap );\n\t\t\tconst d2 = _vac.dot( _vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\t_vbp.subVectors( p, b );\n\t\t\tconst d3 = _vab.dot( _vbp );\n\t\t\tconst d4 = _vac.dot( _vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tconst vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t\t}\n\n\t\t\t_vcp.subVectors( p, c );\n\t\t\tconst d5 = _vab.dot( _vcp );\n\t\t\tconst d6 = _vac.dot( _vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tconst vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t\t}\n\n\t\t\tconst va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\t_vbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tconst denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tequals( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t}\n\n\tlet materialId = 0;\n\n\tclass Material extends EventDispatcher {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMaterial = true;\n\n\t\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\t\tthis.uuid = generateUUID();\n\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Material';\n\n\t\t\tthis.blending = NormalBlending;\n\t\t\tthis.side = FrontSide;\n\t\t\tthis.vertexColors = false;\n\n\t\t\tthis.opacity = 1;\n\t\t\tthis.transparent = false;\n\n\t\t\tthis.blendSrc = SrcAlphaFactor;\n\t\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\t\tthis.blendEquation = AddEquation;\n\t\t\tthis.blendSrcAlpha = null;\n\t\t\tthis.blendDstAlpha = null;\n\t\t\tthis.blendEquationAlpha = null;\n\n\t\t\tthis.depthFunc = LessEqualDepth;\n\t\t\tthis.depthTest = true;\n\t\t\tthis.depthWrite = true;\n\n\t\t\tthis.stencilWriteMask = 0xff;\n\t\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\t\tthis.stencilRef = 0;\n\t\t\tthis.stencilFuncMask = 0xff;\n\t\t\tthis.stencilFail = KeepStencilOp;\n\t\t\tthis.stencilZFail = KeepStencilOp;\n\t\t\tthis.stencilZPass = KeepStencilOp;\n\t\t\tthis.stencilWrite = false;\n\n\t\t\tthis.clippingPlanes = null;\n\t\t\tthis.clipIntersection = false;\n\t\t\tthis.clipShadows = false;\n\n\t\t\tthis.shadowSide = null;\n\n\t\t\tthis.colorWrite = true;\n\n\t\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\t\tthis.polygonOffset = false;\n\t\t\tthis.polygonOffsetFactor = 0;\n\t\t\tthis.polygonOffsetUnits = 0;\n\n\t\t\tthis.dithering = false;\n\n\t\t\tthis.alphaToCoverage = false;\n\t\t\tthis.premultipliedAlpha = false;\n\t\t\tthis.forceSinglePass = false;\n\n\t\t\tthis.visible = true;\n\n\t\t\tthis.toneMapped = true;\n\n\t\t\tthis.userData = {};\n\n\t\t\tthis.version = 0;\n\n\t\t\tthis._alphaTest = 0;\n\n\t\t}\n\n\t\tget alphaTest() {\n\n\t\t\treturn this._alphaTest;\n\n\t\t}\n\n\t\tset alphaTest( value ) {\n\n\t\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\t\tthis.version ++;\n\n\t\t\t}\n\n\t\t\tthis._alphaTest = value;\n\n\t\t}\n\n\t\tonBuild( /* shaderobject, renderer */ ) {}\n\n\t\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\t\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\t\tcustomProgramCacheKey() {\n\n\t\t\treturn this.onBeforeCompile.toString();\n\n\t\t}\n\n\t\tsetValues( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( const key in values ) {\n\n\t\t\t\tconst newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t\t}\n\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\t\t\tdata.colorWrite = this.colorWrite;\n\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t\t// rotation (SpriteMaterial)\n\t\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = this.forceSinglePass;\n\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\t\tif ( this.visible === false ) data.visible = false;\n\n\t\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\t\tif ( this.fog === false ) data.fog = false;\n\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor ( const key in cache ) {\n\n\t\t\t\t\tconst data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\t\tconst srcPlanes = source.clippingPlanes;\n\t\t\tlet dstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tconst n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\n\t\t\tthis.shadowSide = source.shadowSide;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.toneMapped = source.toneMapped;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t}\n\n\tconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tconst _hslA = { h: 0, s: 0, l: 0 };\n\tconst _hslB = { h: 0, s: 0, l: 0 };\n\n\tfunction hue2rgb( p, q, t ) {\n\n\t\tif ( t < 0 ) t += 1;\n\t\tif ( t > 1 ) t -= 1;\n\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\tif ( t < 1 / 2 ) return q;\n\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\treturn p;\n\n\t}\n\n\tclass Color {\n\n\t\tconstructor( r, g, b ) {\n\n\t\t\tthis.isColor = true;\n\n\t\t\tthis.r = 1;\n\t\t\tthis.g = 1;\n\t\t\tthis.b = 1;\n\n\t\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t\t// r is THREE.Color, hex or string\n\t\t\t\treturn this.set( r );\n\n\t\t\t}\n\n\t\t\treturn this.setRGB( r, g, b );\n\n\t\t}\n\n\t\tset( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetScalar( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = euclideanModulo( h, 1 );\n\t\t\ts = clamp( s, 0, 1 );\n\t\t\tl = clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tlet m;\n\n\t\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tlet color;\n\t\t\t\tconst name = m[ 1 ];\n\t\t\t\tconst components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\n\t\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tconst hex = m[ 1 ];\n\t\t\t\tconst size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t);\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t\t}\n\n\t\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t\t// color keywords\n\t\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t}\n\n\t\tcopy( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconvertSRGBToLinear() {\n\n\t\t\tthis.copySRGBToLinear( this );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconvertLinearToSRGB() {\n\n\t\t\tthis.copyLinearToSRGB( this );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\t\treturn clamp( _color.r * 255, 0, 255 ) << 16 ^ clamp( _color.g * 255, 0, 255 ) << 8 ^ clamp( _color.b * 255, 0, 255 ) << 0;\n\n\t\t}\n\n\t\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t\t}\n\n\t\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\t\tconst max = Math.max( r, g, b );\n\t\t\tconst min = Math.min( r, g, b );\n\n\t\t\tlet hue, saturation;\n\t\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tconst delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\t\ttarget.r = _color.r;\n\t\t\ttarget.g = _color.g;\n\t\t\ttarget.b = _color.b;\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t\t}\n\n\t\t\treturn `rgb(${( r * 255 ) | 0},${( g * 255 ) | 0},${( b * 255 ) | 0})`;\n\n\t\t}\n\n\t\toffsetHSL( h, s, l ) {\n\n\t\t\tthis.getHSL( _hslA );\n\n\t\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tadd( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddColors( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddScalar( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsub( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiply( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmultiplyScalar( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tlerp( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tlerpColors( color1, color2, alpha ) {\n\n\t\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tlerpHSL( color, alpha ) {\n\n\t\t\tthis.getHSL( _hslA );\n\t\t\tcolor.getHSL( _hslB );\n\n\t\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromVector3( v ) {\n\n\t\t\tthis.r = v.x;\n\t\t\tthis.g = v.y;\n\t\t\tthis.b = v.z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyMatrix3( m ) {\n\n\t\t\tconst r = this.r, g = this.g, b = this.b;\n\t\t\tconst e = m.elements;\n\n\t\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t}\n\n\t\tfromArray( array, offset = 0 ) {\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoArray( array = [], offset = 0 ) {\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfromBufferAttribute( attribute, index ) {\n\n\t\t\tthis.r = attribute.getX( index );\n\t\t\tthis.g = attribute.getY( index );\n\t\t\tthis.b = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t\t*[ Symbol.iterator ]() {\n\n\t\t\tyield this.r;\n\t\t\tyield this.g;\n\t\t\tyield this.b;\n\n\t\t}\n\n\t}\n\n\tconst _color = /*@__PURE__*/ new Color();\n\n\tColor.NAMES = _colorKeywords;\n\n\tclass MeshBasicMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMeshBasicMaterial = true;\n\n\t\t\tthis.type = 'MeshBasicMaterial';\n\n\t\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\n\t\t\tthis.specularMap = null;\n\n\t\t\tthis.alphaMap = null;\n\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\n\t\t\tthis.fog = true;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.map = source.map;\n\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\t\tthis.specularMap = source.specularMap;\n\n\t\t\tthis.alphaMap = source.alphaMap;\n\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\t// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\n\tconst _tables = /*@__PURE__*/ _generateTables();\n\n\tfunction _generateTables() {\n\n\t\t// float32 to float16 helpers\n\n\t\tconst buffer = new ArrayBuffer( 4 );\n\t\tconst floatView = new Float32Array( buffer );\n\t\tconst uint32View = new Uint32Array( buffer );\n\n\t\tconst baseTable = new Uint32Array( 512 );\n\t\tconst shiftTable = new Uint32Array( 512 );\n\n\t\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\t\tconst e = i - 127;\n\n\t\t\t// very small number (0, -0)\n\n\t\t\tif ( e < - 27 ) {\n\n\t\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\t\tshiftTable[ i ] = 24;\n\t\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t\t// small number (denorm)\n\n\t\t\t} else if ( e < - 14 ) {\n\n\t\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t\t// normal number\n\n\t\t\t} else if ( e <= 15 ) {\n\n\t\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\t\tshiftTable[ i ] = 13;\n\t\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t\t// large number (Infinity, -Infinity)\n\n\t\t\t} else if ( e < 128 ) {\n\n\t\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\t\tshiftTable[ i ] = 24;\n\t\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t\t} else {\n\n\t\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\t\tshiftTable[ i ] = 13;\n\t\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// float16 to float32 helpers\n\n\t\tconst mantissaTable = new Uint32Array( 2048 );\n\t\tconst exponentTable = new Uint32Array( 64 );\n\t\tconst offsetTable = new Uint32Array( 64 );\n\n\t\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\t\tlet m = i << 13; // zero pad mantissa bits\n\t\t\tlet e = 0; // zero exponent\n\n\t\t\t// normalized\n\t\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\t\tm <<= 1;\n\t\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t\t}\n\n\t\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\t\te += 0x38800000; // adjust bias\n\n\t\t\tmantissaTable[ i ] = m | e;\n\n\t\t}\n\n\t\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t\t}\n\n\t\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\t\texponentTable[ i ] = i << 23;\n\n\t\t}\n\n\t\texponentTable[ 31 ] = 0x47800000;\n\t\texponentTable[ 32 ] = 0x80000000;\n\n\t\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t\t}\n\n\t\texponentTable[ 63 ] = 0xc7800000;\n\n\t\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\t\tif ( i !== 32 ) {\n\n\t\t\t\toffsetTable[ i ] = 1024;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tfloatView: floatView,\n\t\t\tuint32View: uint32View,\n\t\t\tbaseTable: baseTable,\n\t\t\tshiftTable: shiftTable,\n\t\t\tmantissaTable: mantissaTable,\n\t\t\texponentTable: exponentTable,\n\t\t\toffsetTable: offsetTable\n\t\t};\n\n\t}\n\n\t// float32 to float16\n\n\tfunction toHalfFloat( val ) {\n\n\t\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\t\tval = clamp( val, - 65504, 65504 );\n\n\t\t_tables.floatView[ 0 ] = val;\n\t\tconst f = _tables.uint32View[ 0 ];\n\t\tconst e = ( f >> 23 ) & 0x1ff;\n\t\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n\t}\n\n\t// float16 to float32\n\n\tfunction fromHalfFloat( val ) {\n\n\t\tconst m = val >> 10;\n\t\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\t\treturn _tables.floatView[ 0 ];\n\n\t}\n\n\tconst DataUtils = {\n\t\ttoHalfFloat: toHalfFloat,\n\t\tfromHalfFloat: fromHalfFloat,\n\t};\n\n\tconst _vector$8 = /*@__PURE__*/ new Vector3();\n\tconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\n\tclass BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized = false ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.isBufferAttribute = true;\n\n\t\t\tthis.name = '';\n\n\t\t\tthis.array = array;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\t\tthis.normalized = normalized;\n\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\t\tthis.version = 0;\n\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t\tsetUsage( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.usage = source.usage;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopyAt( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopyArray( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyMatrix3( m ) {\n\n\t\t\tif ( this.itemSize === 2 ) {\n\n\t\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\t\t\t\t\t_vector$8.applyMatrix3( m );\n\n\t\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyMatrix4( m ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t\t_vector$8.applyMatrix4( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyNormalMatrix( m ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t\t_vector$8.applyNormalMatrix( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttransformDirection( m ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t\t_vector$8.transformDirection( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tset( value, offset = 0 ) {\n\n\t\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetX( index ) {\n\n\t\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\t\treturn x;\n\n\t\t}\n\n\t\tsetX( index, x ) {\n\n\t\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetY( index ) {\n\n\t\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\t\treturn y;\n\n\t\t}\n\n\t\tsetY( index, y ) {\n\n\t\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetZ( index ) {\n\n\t\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\t\treturn z;\n\n\t\t}\n\n\t\tsetZ( index, z ) {\n\n\t\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetW( index ) {\n\n\t\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\t\treturn w;\n\n\t\t}\n\n\t\tsetW( index, w ) {\n\n\t\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetXY( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tif ( this.normalized ) {\n\n\t\t\t\tx = normalize( x, this.array );\n\t\t\t\ty = normalize( y, this.array );\n\n\t\t\t}\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetXYZ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tif ( this.normalized ) {\n\n\t\t\t\tx = normalize( x, this.array );\n\t\t\t\ty = normalize( y, this.array );\n\t\t\t\tz = normalize( z, this.array );\n\n\t\t\t}\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetXYZW( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tif ( this.normalized ) {\n\n\t\t\t\tx = normalize( x, this.array );\n\t\t\t\ty = normalize( y, this.array );\n\t\t\t\tz = normalize( z, this.array );\n\t\t\t\tw = normalize( w, this.array );\n\n\t\t\t}\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tonUpload( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.from( this.array ),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\t\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tcopyColorsArray() { // @deprecated, r144\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: copyColorsArray() was removed in r144.' );\n\n\t\t}\n\n\t\tcopyVector2sArray() { // @deprecated, r144\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: copyVector2sArray() was removed in r144.' );\n\n\t\t}\n\n\t\tcopyVector3sArray() { // @deprecated, r144\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: copyVector3sArray() was removed in r144.' );\n\n\t\t}\n\n\t\tcopyVector4sArray() { // @deprecated, r144\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: copyVector4sArray() was removed in r144.' );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tclass Int8BufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized ) {\n\n\t\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t\t}\n\n\t}\n\n\tclass Uint8BufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized ) {\n\n\t\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t\t}\n\n\t}\n\n\tclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized ) {\n\n\t\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t\t}\n\n\t}\n\n\tclass Int16BufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized ) {\n\n\t\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t\t}\n\n\t}\n\n\tclass Uint16BufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized ) {\n\n\t\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\t}\n\n\t}\n\n\tclass Int32BufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized ) {\n\n\t\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t\t}\n\n\t}\n\n\tclass Uint32BufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized ) {\n\n\t\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t\t}\n\n\t}\n\n\tclass Float16BufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized ) {\n\n\t\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\t\tthis.isFloat16BufferAttribute = true;\n\n\t\t}\n\n\t\tgetX( index ) {\n\n\t\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\t\treturn x;\n\n\t\t}\n\n\t\tsetX( index, x ) {\n\n\t\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetY( index ) {\n\n\t\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\t\treturn y;\n\n\t\t}\n\n\t\tsetY( index, y ) {\n\n\t\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetZ( index ) {\n\n\t\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\t\treturn z;\n\n\t\t}\n\n\t\tsetZ( index, z ) {\n\n\t\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetW( index ) {\n\n\t\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\t\treturn w;\n\n\t\t}\n\n\t\tsetW( index, w ) {\n\n\t\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetXY( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tif ( this.normalized ) {\n\n\t\t\t\tx = normalize( x, this.array );\n\t\t\t\ty = normalize( y, this.array );\n\n\t\t\t}\n\n\t\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetXYZ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tif ( this.normalized ) {\n\n\t\t\t\tx = normalize( x, this.array );\n\t\t\t\ty = normalize( y, this.array );\n\t\t\t\tz = normalize( z, this.array );\n\n\t\t\t}\n\n\t\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetXYZW( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tif ( this.normalized ) {\n\n\t\t\t\tx = normalize( x, this.array );\n\t\t\t\ty = normalize( y, this.array );\n\t\t\t\tz = normalize( z, this.array );\n\t\t\t\tw = normalize( w, this.array );\n\n\t\t\t}\n\n\t\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\n\tclass Float32BufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized ) {\n\n\t\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t\t}\n\n\t}\n\n\tclass Float64BufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized ) {\n\n\t\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t\t}\n\n\t}\n\n\tlet _id$1 = 0;\n\n\tconst _m1 = /*@__PURE__*/ new Matrix4();\n\tconst _obj = /*@__PURE__*/ new Object3D();\n\tconst _offset = /*@__PURE__*/ new Vector3();\n\tconst _box$1 = /*@__PURE__*/ new Box3();\n\tconst _boxMorphTargets = /*@__PURE__*/ new Box3();\n\tconst _vector$7 = /*@__PURE__*/ new Vector3();\n\n\tclass BufferGeometry extends EventDispatcher {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.isBufferGeometry = true;\n\n\t\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\t\tthis.uuid = generateUUID();\n\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'BufferGeometry';\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.morphTargetsRelative = false;\n\n\t\t\tthis.groups = [];\n\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\t\tthis.userData = {};\n\n\t\t}\n\n\t\tgetIndex() {\n\n\t\t\treturn this.index;\n\n\t\t}\n\n\t\tsetIndex( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetAttribute( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t}\n\n\t\tsetAttribute( name, attribute ) {\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdeleteAttribute( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\thasAttribute( name ) {\n\n\t\t\treturn this.attributes[ name ] !== undefined;\n\n\t\t}\n\n\t\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\n\t\t\t} );\n\n\t\t}\n\n\t\tclearGroups() {\n\n\t\t\tthis.groups = [];\n\n\t\t}\n\n\t\tsetDrawRange( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t}\n\n\t\tapplyMatrix4( matrix ) {\n\n\t\t\tconst position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tconst normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tconst tangent = this.attributes.tangent;\n\n\t\t\tif ( tangent !== undefined ) {\n\n\t\t\t\ttangent.transformDirection( matrix );\n\n\t\t\t\ttangent.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyQuaternion( q ) {\n\n\t\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\t\tthis.applyMatrix4( _m1 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trotateX( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix4( _m1 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trotateY( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix4( _m1 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\trotateZ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix4( _m1 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttranslate( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tscale( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix4( _m1 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tlookAt( vector ) {\n\n\t\t\t_obj.lookAt( vector );\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcenter() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromPoints( points ) {\n\n\t\t\tconst position = [];\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcomputeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\t\tthis.boundingBox.set(\n\t\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t\t);\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcomputeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_vector$7.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t\t_vector$7.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_box$1.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tlet maxRadiusSq = 0;\n\n\t\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\t_vector$7.fromBufferAttribute( position, i );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t_vector$7.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t\t_vector$7.add( _offset );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tcomputeTangents() {\n\n\t\t\tconst index = this.index;\n\t\t\tconst attributes = this.attributes;\n\n\t\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t\t// (per vertex tangents)\n\n\t\t\tif ( index === null ||\n\t\t\t\t attributes.position === undefined ||\n\t\t\t\t attributes.normal === undefined ||\n\t\t\t\t attributes.uv === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst indices = index.array;\n\t\t\tconst positions = attributes.position.array;\n\t\t\tconst normals = attributes.normal.array;\n\t\t\tconst uvs = attributes.uv.array;\n\n\t\t\tconst nVertices = positions.length / 3;\n\n\t\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t\t}\n\n\t\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\t\tconst tan1 = [], tan2 = [];\n\n\t\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\t\ttan1[ i ] = new Vector3();\n\t\t\t\ttan2[ i ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tconst vA = new Vector3(),\n\t\t\t\tvB = new Vector3(),\n\t\t\t\tvC = new Vector3(),\n\n\t\t\t\tuvA = new Vector2(),\n\t\t\t\tuvB = new Vector2(),\n\t\t\t\tuvC = new Vector2(),\n\n\t\t\t\tsdir = new Vector3(),\n\t\t\t\ttdir = new Vector3();\n\n\t\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\t\tvB.sub( vA );\n\t\t\t\tvC.sub( vA );\n\n\t\t\t\tuvB.sub( uvA );\n\t\t\t\tuvC.sub( uvA );\n\n\t\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\t\ttan1[ a ].add( sdir );\n\t\t\t\ttan1[ b ].add( sdir );\n\t\t\t\ttan1[ c ].add( sdir );\n\n\t\t\t\ttan2[ a ].add( tdir );\n\t\t\t\ttan2[ b ].add( tdir );\n\t\t\t\ttan2[ c ].add( tdir );\n\n\t\t\t}\n\n\t\t\tlet groups = this.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ {\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tcount: indices.length\n\t\t\t\t} ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\thandleTriangle(\n\t\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\t\tfunction handleVertex( v ) {\n\n\t\t\t\tn.fromArray( normals, v * 3 );\n\t\t\t\tn2.copy( n );\n\n\t\t\t\tconst t = tan1[ v ];\n\n\t\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\t\ttmp.copy( t );\n\t\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t\t// Calculate handedness\n\n\t\t\t\ttmp2.crossVectors( n2, t );\n\t\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tcomputeVertexNormals() {\n\n\t\t\tconst index = this.index;\n\t\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\t\tnA.add( cb );\n\t\t\t\t\t\tnB.add( cb );\n\t\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tmerge() { // @deprecated, r144\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tnormalizeNormals() {\n\n\t\t\tconst normals = this.attributes.normal;\n\n\t\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$7.fromBufferAttribute( normals, i );\n\n\t\t\t\t_vector$7.normalize();\n\n\t\t\t\tnormals.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttoNonIndexed() {\n\n\t\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\t\tconst array = attribute.array;\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst normalized = attribute.normalized;\n\n\t\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tlet index = 0, index2 = 0;\n\n\t\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tconst geometry2 = new BufferGeometry();\n\n\t\t\tconst indices = this.index.array;\n\t\t\tconst attributes = this.attributes;\n\n\t\t\t// attributes\n\n\t\t\tfor ( const name in attributes ) {\n\n\t\t\t\tconst attribute = attributes[ name ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tconst morphAttributes = this.morphAttributes;\n\n\t\t\tfor ( const name in morphAttributes ) {\n\n\t\t\t\tconst morphArray = [];\n\t\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t// groups\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tconst group = groups[ i ];\n\t\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tconst parameters = this.parameters;\n\n\t\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tconst index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\tconst attribute = attributes[ key ];\n\n\t\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = {};\n\t\t\tlet hasMorphAttributes = false;\n\n\t\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\t\thasMorphAttributes = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphAttributes ) {\n\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t}\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tconst boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// used for storing cloned, shared data\n\n\t\t\tconst data = {};\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tconst index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tconst attributes = source.attributes;\n\n\t\t\tfor ( const name in attributes ) {\n\n\t\t\t\tconst attribute = attributes[ name ];\n\t\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tconst morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( const name in morphAttributes ) {\n\n\t\t\t\tconst array = [];\n\t\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t\t// groups\n\n\t\t\tconst groups = source.groups;\n\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tconst group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tconst boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tconst boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\t// user data\n\n\t\t\tthis.userData = source.userData;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t}\n\n\tconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\n\tconst _ray$2 = /*@__PURE__*/ new Ray();\n\tconst _sphere$4 = /*@__PURE__*/ new Sphere();\n\tconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\n\tconst _vA$1 = /*@__PURE__*/ new Vector3();\n\tconst _vB$1 = /*@__PURE__*/ new Vector3();\n\tconst _vC$1 = /*@__PURE__*/ new Vector3();\n\n\tconst _tempA = /*@__PURE__*/ new Vector3();\n\tconst _morphA = /*@__PURE__*/ new Vector3();\n\n\tconst _uvA$1 = /*@__PURE__*/ new Vector2();\n\tconst _uvB$1 = /*@__PURE__*/ new Vector2();\n\tconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\n\tconst _normalA = /*@__PURE__*/ new Vector3();\n\tconst _normalB = /*@__PURE__*/ new Vector3();\n\tconst _normalC = /*@__PURE__*/ new Vector3();\n\n\tconst _intersectionPoint = /*@__PURE__*/ new Vector3();\n\tconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\n\tclass Mesh extends Object3D {\n\n\t\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMesh = true;\n\n\t\t\tthis.type = 'Mesh';\n\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\n\t\t\tthis.updateMorphTargets();\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t\t}\n\n\t\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tupdateMorphTargets() {\n\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgetVertexPosition( index, target ) {\n\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\t\ttarget.fromBufferAttribute( position, index );\n\n\t\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttarget.add( _morphA );\n\n\t\t\t}\n\n\t\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\t\tthis.applyBoneTransform( index, target );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\traycast( raycaster, intersects ) {\n\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst material = this.material;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere );\n\t\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\t\t_ray$2.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\t\tif ( _sphere$4.containsPoint( _ray$2.origin ) === false ) {\n\n\t\t\t\tif ( _ray$2.intersectSphere( _sphere$4, _sphereHitAt ) === null ) return;\n\n\t\t\t\tif ( _ray$2.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tlet intersection;\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst normal = geometry.attributes.normal;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, _ray$2, uv, uv2, normal, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, _ray$2, uv, uv2, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, _ray$2, uv, uv2, normal, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, _ray$2, uv, uv2, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\tlet intersect;\n\n\t\tif ( material.side === BackSide ) {\n\n\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t} else {\n\n\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t\t}\n\n\t\tif ( intersect === null ) return null;\n\n\t\t_intersectionPointWorld.copy( point );\n\t\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\n\t}\n\n\tfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv2, normal, a, b, c ) {\n\n\t\tobject.getVertexPosition( a, _vA$1 );\n\t\tobject.getVertexPosition( b, _vB$1 );\n\t\tobject.getVertexPosition( c, _vC$1 );\n\n\t\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\t\tif ( intersection ) {\n\n\t\t\tif ( uv ) {\n\n\t\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t\t}\n\n\t\t\tif ( uv2 ) {\n\n\t\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\t\tintersection.uv2 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t\t}\n\n\t\t\tif ( normal ) {\n\n\t\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst face = {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tnormal: new Vector3(),\n\t\t\t\tmaterialIndex: 0\n\t\t\t};\n\n\t\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\t\tintersection.face = face;\n\n\t\t}\n\n\t\treturn intersection;\n\n\t}\n\n\tclass BoxGeometry extends BufferGeometry {\n\n\t\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'BoxGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\n\t\t\tconst scope = this;\n\n\t\t\t// segments\n\n\t\t\twidthSegments = Math.floor( widthSegments );\n\t\t\theightSegments = Math.floor( heightSegments );\n\t\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t\t// buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\t// helper variables\n\n\t\t\tlet numberOfVertices = 0;\n\t\t\tlet groupStart = 0;\n\n\t\t\t// build each side of the box geometry\n\n\t\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\t\tconst segmentWidth = width / gridX;\n\t\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\t\tconst widthHalf = width / 2;\n\t\t\t\tconst heightHalf = height / 2;\n\t\t\t\tconst depthHalf = depth / 2;\n\n\t\t\t\tconst gridX1 = gridX + 1;\n\t\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\t\tlet vertexCounter = 0;\n\t\t\t\tlet groupCount = 0;\n\n\t\t\t\tconst vector = new Vector3();\n\n\t\t\t\t// generate vertices, normals and uvs\n\n\t\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t\t// uvs\n\n\t\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t\t// counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// indices\n\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t\t// faces\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t\t// increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t\t// calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\n\t\t\t\t// update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tfunction cloneUniforms( src ) {\n\n\t\tconst dst = {};\n\n\t\tfor ( const u in src ) {\n\n\t\t\tdst[ u ] = {};\n\n\t\t\tfor ( const p in src[ u ] ) {\n\n\t\t\t\tconst property = src[ u ][ p ];\n\n\t\t\t\tif ( property && ( property.isColor ||\n\t\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn dst;\n\n\t}\n\n\tfunction mergeUniforms( uniforms ) {\n\n\t\tconst merged = {};\n\n\t\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\t\tfor ( const p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t}\n\n\tfunction cloneUniformsGroups( src ) {\n\n\t\tconst dst = [];\n\n\t\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\t\tdst.push( src[ u ].clone() );\n\n\t\t}\n\n\t\treturn dst;\n\n\t}\n\n\tfunction getUnlitUniformColorSpace( renderer ) {\n\n\t\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\t\treturn renderer.outputEncoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t\t}\n\n\t\treturn LinearSRGBColorSpace;\n\n\t}\n\n\t// Legacy\n\n\tconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\tclass ShaderMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isShaderMaterial = true;\n\n\t\t\tthis.type = 'ShaderMaterial';\n\n\t\t\tthis.defines = {};\n\t\t\tthis.uniforms = {};\n\t\t\tthis.uniformsGroups = [];\n\n\t\t\tthis.vertexShader = default_vertex;\n\t\t\tthis.fragmentShader = default_fragment;\n\n\t\t\tthis.linewidth = 1;\n\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\n\t\t\tthis.fog = false; // set to use scene fog\n\t\t\tthis.lights = false; // set to use scene lights\n\t\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\t\tthis.forceSinglePass = true;\n\n\t\t\tthis.extensions = {\n\t\t\t\tderivatives: false, // set to use derivatives\n\t\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t\t};\n\n\t\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\t\tthis.defaultAttributeValues = {\n\t\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t\t'uv': [ 0, 0 ],\n\t\t\t\t'uv2': [ 0, 0 ]\n\t\t\t};\n\n\t\t\tthis.index0AttributeName = undefined;\n\t\t\tthis.uniformsNeedUpdate = false;\n\n\t\t\tthis.glslVersion = null;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tthis.setValues( parameters );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.fragmentShader = source.fragmentShader;\n\t\t\tthis.vertexShader = source.vertexShader;\n\n\t\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\t\t\tthis.clipping = source.clipping;\n\n\t\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\t\tthis.glslVersion = source.glslVersion;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst data = super.toJSON( meta );\n\n\t\t\tdata.glslVersion = this.glslVersion;\n\t\t\tdata.uniforms = {};\n\n\t\t\tfor ( const name in this.uniforms ) {\n\n\t\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\t\tconst value = uniform.value;\n\n\t\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\t\ttype: 't',\n\t\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t\t};\n\n\t\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\t\ttype: 'c',\n\t\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t\t};\n\n\t\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\t\ttype: 'v2',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\n\t\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\t\ttype: 'v3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\n\t\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\t\ttype: 'v4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\n\t\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\t\ttype: 'm3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\n\t\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\t\ttype: 'm4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t};\n\n\t\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\t\tdata.vertexShader = this.vertexShader;\n\t\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\t\tconst extensions = {};\n\n\t\t\tfor ( const key in this.extensions ) {\n\n\t\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t\t}\n\n\t\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t}\n\n\tclass Camera extends Object3D {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.isCamera = true;\n\n\t\t\tthis.type = 'Camera';\n\n\t\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\t\tthis.projectionMatrix = new Matrix4();\n\t\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetWorldDirection( target ) {\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tconst e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t\t}\n\n\t\tupdateMatrixWorld( force ) {\n\n\t\t\tsuper.updateMatrixWorld( force );\n\n\t\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t\t}\n\n\t\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t}\n\n\tclass PerspectiveCamera extends Camera {\n\n\t\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isPerspectiveCamera = true;\n\n\t\t\tthis.type = 'PerspectiveCamera';\n\n\t\t\tthis.fov = fov;\n\t\t\tthis.zoom = 1;\n\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.focus = 10;\n\n\t\t\tthis.aspect = aspect;\n\t\t\tthis.view = null;\n\n\t\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength( focalLength ) {\n\n\t\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t}\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength() {\n\n\t\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t}\n\n\t\tgetEffectiveFOV() {\n\n\t\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t}\n\n\t\tgetFilmWidth() {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t}\n\n\t\tgetFilmHeight() {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t}\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   const w = 1920;\n\t\t *   const h = 1080;\n\t\t *   const fullWidth = w * 3;\n\t\t *   const fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t}\n\n\t\tclearViewOffset() {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\n\t\t\tconst near = this.near;\n\t\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\t\tlet height = 2 * top;\n\t\t\tlet width = this.aspect * height;\n\t\t\tlet left = - 0.5 * width;\n\t\t\tconst view = this.view;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tconst skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst data = super.toJSON( meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t}\n\n\tconst fov = - 90; // negative fov is not an error\n\tconst aspect = 1;\n\n\tclass CubeCamera extends Object3D {\n\n\t\tconstructor( near, far, renderTarget ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'CubeCamera';\n\n\t\t\tthis.renderTarget = renderTarget;\n\n\t\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraPX.layers = this.layers;\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\t\t\tthis.add( cameraPX );\n\n\t\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraNX.layers = this.layers;\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\t\t\tthis.add( cameraNX );\n\n\t\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraPY.layers = this.layers;\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\t\t\tthis.add( cameraPY );\n\n\t\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraNY.layers = this.layers;\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\t\t\tthis.add( cameraNY );\n\n\t\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraPZ.layers = this.layers;\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\t\t\tthis.add( cameraPZ );\n\n\t\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraNZ.layers = this.layers;\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\t\t\tthis.add( cameraNZ );\n\n\t\t}\n\n\t\tupdate( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tconst renderTarget = this.renderTarget;\n\n\t\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tconst currentToneMapping = renderer.toneMapping;\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.xr.enabled = false;\n\n\t\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\t\trenderer.render( scene, cameraPX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\t\trenderer.render( scene, cameraNX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\t\trenderer.render( scene, cameraPY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\t\trenderer.render( scene, cameraNY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\t\trenderer.render( scene, cameraPZ );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\t\trenderer.render( scene, cameraNZ );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\trenderer.toneMapping = currentToneMapping;\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclass CubeTexture extends Texture {\n\n\t\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\t\timages = images !== undefined ? images : [];\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\t\tthis.isCubeTexture = true;\n\n\t\t\tthis.flipY = false;\n\n\t\t}\n\n\t\tget images() {\n\n\t\t\treturn this.image;\n\n\t\t}\n\n\t\tset images( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t}\n\n\tclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\t\tconstructor( size = 1, options = {} ) {\n\n\t\t\tsuper( size, size, options );\n\n\t\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\t\tconst image = { width: size, height: size, depth: 1 };\n\t\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\t}\n\n\t\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\t\tthis.texture.type = texture.type;\n\t\t\tthis.texture.encoding = texture.encoding;\n\n\t\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\t\tthis.texture.minFilter = texture.minFilter;\n\t\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\t\tconst shader = {\n\n\t\t\t\tuniforms: {\n\t\t\t\t\ttEquirect: { value: null },\n\t\t\t\t},\n\n\t\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t\t};\n\n\t\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\t\tconst material = new ShaderMaterial( {\n\n\t\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tblending: NoBlending\n\n\t\t\t} );\n\n\t\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\t\tconst mesh = new Mesh( geometry, material );\n\n\t\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t\t// Avoid blurred poles\n\t\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\t\tcamera.update( renderer, mesh );\n\n\t\t\ttexture.minFilter = currentMinFilter;\n\n\t\t\tmesh.geometry.dispose();\n\t\t\tmesh.material.dispose();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclear( renderer, color, depth, stencil ) {\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t}\n\n\t}\n\n\tconst _vector1 = /*@__PURE__*/ new Vector3();\n\tconst _vector2 = /*@__PURE__*/ new Vector3();\n\tconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\n\tclass Plane {\n\n\t\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t\tthis.isPlane = true;\n\n\t\t\t// normal is assumed to be normalized\n\n\t\t\tthis.normal = normal;\n\t\t\tthis.constant = constant;\n\n\t\t}\n\n\t\tset( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetComponents( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tnormalize() {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tnegate() {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdistanceToPoint( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t}\n\n\t\tdistanceToSphere( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t}\n\n\t\tprojectPoint( point, target ) {\n\n\t\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t\t}\n\n\t\tintersectLine( line, target ) {\n\n\t\t\tconst direction = line.delta( _vector1 );\n\n\t\t\tconst denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t\t}\n\n\t\tintersectsLine( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tconst startSign = this.distanceToPoint( line.start );\n\t\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t}\n\n\t\tintersectsBox( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t}\n\n\t\tintersectsSphere( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t}\n\n\t\tcoplanarPoint( target ) {\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t}\n\n\t\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttranslate( offset ) {\n\n\t\t\tthis.constant -= offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t}\n\n\tconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\tconst _vector$6 = /*@__PURE__*/ new Vector3();\n\n\tclass Frustum {\n\n\t\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t\t}\n\n\t\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tconst planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( frustum ) {\n\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromProjectionMatrix( m ) {\n\n\t\t\tconst planes = this.planes;\n\t\t\tconst me = m.elements;\n\t\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tintersectsObject( object ) {\n\n\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tconst geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t\t}\n\n\t\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t\t}\n\n\t\tintersectsSprite( sprite ) {\n\n\t\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t\t}\n\n\t\tintersectsSphere( sphere ) {\n\n\t\t\tconst planes = this.planes;\n\t\t\tconst center = sphere.center;\n\t\t\tconst negRadius = - sphere.radius;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tintersectsBox( box ) {\n\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tconst plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tcontainsPoint( point ) {\n\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t}\n\n\tfunction WebGLAnimation() {\n\n\t\tlet context = null;\n\t\tlet isAnimating = false;\n\t\tlet animationLoop = null;\n\t\tlet requestId = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tanimationLoop( time, frame );\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tstart: function () {\n\n\t\t\t\tif ( isAnimating === true ) return;\n\t\t\t\tif ( animationLoop === null ) return;\n\n\t\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\t\tisAnimating = true;\n\n\t\t\t},\n\n\t\t\tstop: function () {\n\n\t\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\t\tisAnimating = false;\n\n\t\t\t},\n\n\t\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\t\tanimationLoop = callback;\n\n\t\t\t},\n\n\t\t\tsetContext: function ( value ) {\n\n\t\t\t\tcontext = value;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction WebGLAttributes( gl, capabilities ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tconst buffers = new WeakMap();\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst usage = attribute.usage;\n\n\t\t\tconst buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tlet type;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = gl.FLOAT;\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t\t}\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = gl.SHORT;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = gl.INT;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = gl.BYTE;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t\t}\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\treturn buffers.get( attribute );\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\tconst data = buffers.get( attribute );\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tbuffers.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\t\tversion: attribute.version\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\tconst data = buffers.get( attribute );\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\tclass PlaneGeometry extends BufferGeometry {\n\n\t\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'PlaneGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments\n\t\t\t};\n\n\t\t\tconst width_half = width / 2;\n\t\t\tconst height_half = height / 2;\n\n\t\t\tconst gridX = Math.floor( widthSegments );\n\t\t\tconst gridY = Math.floor( heightSegments );\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tconst segment_width = width / gridX;\n\t\t\tconst segment_height = height / gridY;\n\n\t\t\t//\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t\t}\n\n\t}\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\n\tvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\n\tvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP_TANGENTSPACE\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\n\tvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\n\tvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\n\tvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\n\tvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\n\tvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n#endif\";\n\n\tvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\t\\n\\t\\tvec2 lodFudge = pow( 1.95, lod ) / fullSize;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec2 fullSize = vec2( textureSize( sampler, 0 ) );\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\n\tvar uv_pars_fragment = \"#ifdef USE_UV\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_UV2\\n\\tattribute vec2 uv2;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\n\tconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\n\tconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\n\tconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tconst ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\talphatest_pars_fragment: alphatest_pars_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tiridescence_fragment: iridescence_fragment,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_fragment: lights_lambert_fragment,\n\t\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphcolor_vertex: morphcolor_vertex,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormal_pars_fragment: normal_pars_fragment,\n\t\tnormal_pars_vertex: normal_pars_vertex,\n\t\tnormal_vertex: normal_vertex,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\tiridescence_pars_fragment: iridescence_pars_fragment,\n\t\toutput_fragment: output_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\ttransmission_fragment: transmission_fragment,\n\t\ttransmission_pars_fragment: transmission_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tbackground_vert: vertex$h,\n\t\tbackground_frag: fragment$h,\n\t\tbackgroundCube_vert: vertex$g,\n\t\tbackgroundCube_frag: fragment$g,\n\t\tcube_vert: vertex$f,\n\t\tcube_frag: fragment$f,\n\t\tdepth_vert: vertex$e,\n\t\tdepth_frag: fragment$e,\n\t\tdistanceRGBA_vert: vertex$d,\n\t\tdistanceRGBA_frag: fragment$d,\n\t\tequirect_vert: vertex$c,\n\t\tequirect_frag: fragment$c,\n\t\tlinedashed_vert: vertex$b,\n\t\tlinedashed_frag: fragment$b,\n\t\tmeshbasic_vert: vertex$a,\n\t\tmeshbasic_frag: fragment$a,\n\t\tmeshlambert_vert: vertex$9,\n\t\tmeshlambert_frag: fragment$9,\n\t\tmeshmatcap_vert: vertex$8,\n\t\tmeshmatcap_frag: fragment$8,\n\t\tmeshnormal_vert: vertex$7,\n\t\tmeshnormal_frag: fragment$7,\n\t\tmeshphong_vert: vertex$6,\n\t\tmeshphong_frag: fragment$6,\n\t\tmeshphysical_vert: vertex$5,\n\t\tmeshphysical_frag: fragment$5,\n\t\tmeshtoon_vert: vertex$4,\n\t\tmeshtoon_frag: fragment$4,\n\t\tpoints_vert: vertex$3,\n\t\tpoints_frag: fragment$3,\n\t\tshadow_vert: vertex$2,\n\t\tshadow_frag: fragment$2,\n\t\tsprite_vert: vertex$1,\n\t\tsprite_frag: fragment$1\n\t};\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tconst UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\t\talphaMap: { value: null },\n\t\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\t\talphaTest: { value: 0 }\n\n\t\t},\n\n\t\tspecularmap: {\n\n\t\t\tspecularMap: { value: null },\n\t\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t\t},\n\n\t\tenvmap: {\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\t\tior: { value: 1.5 }, // physical\n\t\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 },\n\t\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 },\n\t\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null },\n\t\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null },\n\t\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null },\n\t\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tlightProbe: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {}\n\t\t\t} },\n\n\t\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {}\n\t\t\t} },\n\n\t\t\tspotLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotLightMap: { value: [] },\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotLightMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {}\n\t\t\t} },\n\n\t\t\tpointLightShadows: { value: [], properties: {\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowNormalBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {},\n\t\t\t\tshadowCameraNear: {},\n\t\t\t\tshadowCameraFar: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} },\n\n\t\t\tltc_1: { value: null },\n\t\t\tltc_2: { value: null }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\talphaMap: { value: null },\n\t\t\talphaTest: { value: 0 },\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\t\trotation: { value: 0.0 },\n\t\t\tmap: { value: null },\n\t\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\talphaMap: { value: null },\n\t\t\talphaTest: { value: 0 }\n\n\t\t}\n\n\t};\n\n\tconst ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 1.0 },\n\t\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\ttoon: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t\t},\n\n\t\tmatcap: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tmatcap: { value: null }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.sprite,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t\t},\n\n\t\tbackground: {\n\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\tt2D: { value: null },\n\t\t\t\tbackgroundIntensity: { value: 1 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\n\t\t},\n\n\t\tbackgroundCube: {\n\n\t\t\tuniforms: {\n\t\t\t\tenvMap: { value: null },\n\t\t\t\tflipEnvMap: { value: - 1 },\n\t\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\t\tbackgroundIntensity: { value: 1 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t\t},\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t},\n\n\t\tshadow: {\n\n\t\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t},\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\tclearcoat: { value: 0 },\n\t\t\t\tclearcoatMap: { value: null },\n\t\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\tclearcoatNormalMap: { value: null },\n\t\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\tiridescence: { value: 0 },\n\t\t\t\tiridescenceMap: { value: null },\n\t\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\tsheen: { value: 0 },\n\t\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tsheenColorMap: { value: null },\n\t\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\tsheenRoughness: { value: 1 },\n\t\t\t\tsheenRoughnessMap: { value: null },\n\t\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\ttransmission: { value: 0 },\n\t\t\t\ttransmissionMap: { value: null },\n\t\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\t\tthickness: { value: 0 },\n\t\t\t\tthicknessMap: { value: null },\n\t\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\tattenuationDistance: { value: 0 },\n\t\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\t\tspecularColorMap: { value: null },\n\t\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\t\tspecularIntensity: { value: 1 },\n\t\t\t\tspecularIntensityMap: { value: null },\n\t\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\tconst _rgb = { r: 0, b: 0, g: 0 };\n\n\tfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\t\tconst clearColor = new Color( 0x000000 );\n\t\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\t\tlet planeMesh;\n\t\tlet boxMesh;\n\n\t\tlet currentBackground = null;\n\t\tlet currentBackgroundVersion = 0;\n\t\tlet currentTonemapping = null;\n\n\t\tfunction render( renderList, scene ) {\n\n\t\t\tlet forceClear = false;\n\t\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\t\tif ( background && background.isTexture ) {\n\n\t\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t\t}\n\n\t\t\t// Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\t\t\tconst xr = renderer.xr;\n\t\t\tconst session = xr.getSession && xr.getSession();\n\n\t\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\t\tbackground = null;\n\n\t\t\t}\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t\t};\n\n\t\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\t\tboxMesh.material.toneMapped = ( background.encoding === sRGBEncoding ) ? false : true;\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\t\tplaneMesh.material.toneMapped = ( background.encoding === sRGBEncoding ) ? false : true;\n\n\t\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tbackground.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\tfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\t\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\t\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\t\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\t\tconst bindingStates = {};\n\n\t\tconst defaultState = createBindingState( null );\n\t\tlet currentState = defaultState;\n\t\tlet forceUpdate = false;\n\n\t\tfunction setup( object, material, program, geometry, index ) {\n\n\t\t\tlet updateBuffers = false;\n\n\t\t\tif ( vaoAvailable ) {\n\n\t\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\t\tif ( currentState !== state ) {\n\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t\t} else {\n\n\t\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\t\tupdateBuffers = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\t\tforceUpdate = false;\n\n\t\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\n\t\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\t\treturn extension.createVertexArrayOES();\n\n\t\t}\n\n\t\tfunction bindVertexArrayObject( vao ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\t\treturn extension.bindVertexArrayOES( vao );\n\n\t\t}\n\n\t\tfunction deleteVertexArrayObject( vao ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t\t}\n\n\t\tfunction getBindingState( geometry, program, material ) {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\t\tif ( programMap === undefined ) {\n\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t\t}\n\n\t\t\tlet stateMap = programMap[ program.id ];\n\n\t\t\tif ( stateMap === undefined ) {\n\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t\t}\n\n\t\t\tlet state = stateMap[ wireframe ];\n\n\t\t\tif ( state === undefined ) {\n\n\t\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\t\tstateMap[ wireframe ] = state;\n\n\t\t\t}\n\n\t\t\treturn state;\n\n\t\t}\n\n\t\tfunction createBindingState( vao ) {\n\n\t\t\tconst newAttributes = [];\n\t\t\tconst enabledAttributes = [];\n\t\t\tconst attributeDivisors = [];\n\n\t\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\t\t\t\tenabledAttributes[ i ] = 0;\n\t\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {},\n\t\t\t\tindex: null\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\t\tconst cachedAttributes = currentState.attributes;\n\t\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t\tlet attributesNum = 0;\n\n\t\t\tconst programAttributes = program.getAttributes();\n\n\t\t\tfor ( const name in programAttributes ) {\n\n\t\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\t\tattributesNum ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\t\tif ( currentState.index !== index ) return true;\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction saveCache( object, geometry, program, index ) {\n\n\t\t\tconst cache = {};\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tconst programAttributes = program.getAttributes();\n\n\t\t\tfor ( const name in programAttributes ) {\n\n\t\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst data = {};\n\t\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcache[ name ] = data;\n\n\t\t\t\t\tattributesNum ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\t\t\tcurrentState.attributesNum = attributesNum;\n\n\t\t\tcurrentState.index = index;\n\n\t\t}\n\n\t\tfunction initAttributes() {\n\n\t\t\tconst newAttributes = currentState.newAttributes;\n\n\t\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\t\tif ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT ) ) {\n\n\t\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t\t} else {\n\n\t\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t\t}\n\n\t\t\tinitAttributes();\n\n\t\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t\tconst programAttributes = program.getAttributes();\n\n\t\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( const name in programAttributes ) {\n\n\t\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\treset();\n\n\t\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometry.id ];\n\n\t\t}\n\n\t\tfunction releaseStatesOfProgram( program ) {\n\n\t\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ program.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\tresetDefaultState();\n\t\t\tforceUpdate = true;\n\n\t\t\tif ( currentState === defaultState ) return;\n\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\t// for backward-compatibility\n\n\t\tfunction resetDefaultState() {\n\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t\t};\n\n\t}\n\n\tfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tlet mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfo.update( count, mode, 1 );\n\n\t\t}\n\n\t\tfunction renderInstances( start, count, primcount ) {\n\n\t\t\tif ( primcount === 0 ) return;\n\n\t\t\tlet extension, methodName;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\t\tinfo.update( count, mode, primcount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tlet maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\t\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tconst maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\t\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\t\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tconst vertexTextures = maxVertexTextures > 0;\n\t\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\t\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\t\treturn {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tdrawBuffers: drawBuffers,\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\t\tmaxSamples: maxSamples\n\n\t\t};\n\n\t}\n\n\tfunction WebGLClipping( properties ) {\n\n\t\tconst scope = this;\n\n\t\tlet globalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false;\n\n\t\tconst plane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\t\tconst enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function () {\n\n\t\t\trenderingShadows = false;\n\n\t\t};\n\n\t\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t\t};\n\n\t\tthis.setState = function ( material, camera, useCache ) {\n\n\t\t\tconst planes = material.clippingPlanes,\n\t\t\t\tclipIntersection = material.clipIntersection,\n\t\t\t\tclipShadows = material.clipShadows;\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\t\tlet dstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\tfunction WebGLCubeMaps( renderer ) {\n\n\t\tlet cubemaps = new WeakMap();\n\n\t\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tfunction get( texture ) {\n\n\t\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\t\tconst mapping = texture.mapping;\n\n\t\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tconst texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tconst cubemap = cubemaps.get( texture );\n\n\t\t\tif ( cubemap !== undefined ) {\n\n\t\t\t\tcubemaps.delete( texture );\n\t\t\t\tcubemap.dispose();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tcubemaps = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\tclass OrthographicCamera extends Camera {\n\n\t\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isOrthographicCamera = true;\n\n\t\t\tthis.type = 'OrthographicCamera';\n\n\t\t\tthis.zoom = 1;\n\t\t\tthis.view = null;\n\n\t\t\tthis.left = left;\n\t\t\tthis.right = right;\n\t\t\tthis.top = top;\n\t\t\tthis.bottom = bottom;\n\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t}\n\n\t\tclearViewOffset() {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\n\t\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tconst cx = ( this.right + this.left ) / 2;\n\t\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tlet left = cx - dx;\n\t\t\tlet right = cx + dx;\n\t\t\tlet top = cy + dy;\n\t\t\tlet bottom = cy - dy;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst data = super.toJSON( meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t}\n\n\tconst LOD_MIN = 4;\n\n\t// The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\tconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n\t// The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\tconst MAX_SAMPLES = 20;\n\n\tconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\n\tconst _clearColor = /*@__PURE__*/ new Color();\n\tlet _oldTarget = null;\n\n\t// Golden Ratio\n\tconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tconst INV_PHI = 1 / PHI;\n\n\t// Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\tconst _axisDirections = [\n\t\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n\t/**\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t *\n\t * Paper: Fast, Accurate Image-Based Lighting\n\t * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n\t*/\n\n\tclass PMREMGenerator {\n\n\t\tconstructor( renderer ) {\n\n\t\t\tthis._renderer = renderer;\n\t\t\tthis._pingPongRenderTarget = null;\n\n\t\t\tthis._lodMax = 0;\n\t\t\tthis._cubeSize = 0;\n\t\t\tthis._lodPlanes = [];\n\t\t\tthis._sizeLods = [];\n\t\t\tthis._sigmas = [];\n\n\t\t\tthis._blurMaterial = null;\n\t\t\tthis._cubemapMaterial = null;\n\t\t\tthis._equirectMaterial = null;\n\n\t\t\tthis._compileMaterial( this._blurMaterial );\n\n\t\t}\n\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\t\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tthis._setSize( 256 );\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\t\tif ( sigma > 0 ) {\n\n\t\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t\t}\n\n\t\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t}\n\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\t\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t\t}\n\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * or HDR. The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\t\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t\t}\n\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\t\tcompileCubemapShader() {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\t\tcompileEquirectangularShader() {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\t\tdispose() {\n\n\t\t\tthis._dispose();\n\n\t\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t\t}\n\n\t\t// private interface\n\n\t\t_setSize( cubeSize ) {\n\n\t\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t\t}\n\n\t\t_dispose() {\n\n\t\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t\t}\n\n\t\t}\n\n\t\t_cleanup( outputTarget ) {\n\n\t\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\t\toutputTarget.scissorTest = false;\n\t\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t\t}\n\n\t\t_fromTexture( texture, renderTarget ) {\n\n\t\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t\t} else { // Equirectangular\n\n\t\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t\t}\n\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t}\n\n\t\t_allocateTargets() {\n\n\t\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\t\tconst height = 4 * this._cubeSize;\n\n\t\t\tconst params = {\n\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\tminFilter: LinearFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: HalfFloatType,\n\t\t\t\tformat: RGBAFormat,\n\t\t\t\tencoding: LinearEncoding,\n\t\t\t\tdepthBuffer: false\n\t\t\t};\n\n\t\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\t\tthis._dispose();\n\n\t\t\t\t}\n\n\t\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\t\tconst { _lodMax } = this;\n\t\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t\t}\n\n\t\t\treturn cubeUVRenderTarget;\n\n\t\t}\n\n\t\t_compileMaterial( material ) {\n\n\t\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t\t}\n\n\t\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\t\tconst fov = 90;\n\t\t\tconst aspect = 1;\n\t\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\t\tconst renderer = this._renderer;\n\n\t\t\tconst originalAutoClear = renderer.autoClear;\n\t\t\tconst toneMapping = renderer.toneMapping;\n\t\t\trenderer.getClearColor( _clearColor );\n\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\t\tname: 'PMREM.Background',\n\t\t\t\tside: BackSide,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tdepthTest: false,\n\t\t\t} );\n\n\t\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\t\tlet useSolidColor = false;\n\t\t\tconst background = scene.background;\n\n\t\t\tif ( background ) {\n\n\t\t\t\tif ( background.isColor ) {\n\n\t\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\t\tscene.background = null;\n\t\t\t\t\tuseSolidColor = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tconst col = i % 3;\n\n\t\t\t\tif ( col === 0 ) {\n\n\t\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tconst size = this._cubeSize;\n\n\t\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\t\tif ( useSolidColor ) {\n\n\t\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t\t}\n\n\t\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t\t}\n\n\t\t\tbackgroundBox.geometry.dispose();\n\t\t\tbackgroundBox.material.dispose();\n\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.autoClear = originalAutoClear;\n\t\t\tscene.background = background;\n\n\t\t}\n\n\t\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\t\tconst renderer = this._renderer;\n\n\t\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\t\tif ( isCubeTexture ) {\n\n\t\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t\t}\n\n\t\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\t\tconst uniforms = material.uniforms;\n\n\t\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\t\trenderer.render( mesh, _flatCamera );\n\n\t\t}\n\n\t\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\n\t\t}\n\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\t\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(\n\t\t\t\tcubeUVRenderTarget,\n\t\t\t\tpingPongRenderTarget,\n\t\t\t\tlodIn,\n\t\t\t\tlodOut,\n\t\t\t\tsigma,\n\t\t\t\t'latitudinal',\n\t\t\t\tpoleAxis );\n\n\t\t\tthis._halfBlur(\n\t\t\t\tpingPongRenderTarget,\n\t\t\t\tcubeUVRenderTarget,\n\t\t\t\tlodOut,\n\t\t\t\tlodOut,\n\t\t\t\tsigma,\n\t\t\t\t'longitudinal',\n\t\t\t\tpoleAxis );\n\n\t\t}\n\n\t\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst blurMaterial = this._blurMaterial;\n\n\t\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t\t}\n\n\t\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t\t}\n\n\t\t\tconst weights = [];\n\t\t\tlet sum = 0;\n\n\t\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\t\tconst x = i / sigmaPixels;\n\t\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\t\tweights.push( weight );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tsum += weight;\n\n\t\t\t\t} else if ( i < samples ) {\n\n\t\t\t\t\tsum += 2 * weight;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t\t}\n\n\t\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\t\tblurUniforms[ 'samples' ].value = samples;\n\t\t\tblurUniforms[ 'weights' ].value = weights;\n\t\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\t\tif ( poleAxis ) {\n\n\t\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t\t}\n\n\t\t\tconst { _lodMax } = this;\n\t\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\t\trenderer.setRenderTarget( targetOut );\n\t\t\trenderer.render( blurMesh, _flatCamera );\n\n\t\t}\n\n\t}\n\n\n\n\tfunction _createPlanes( lodMax ) {\n\n\t\tconst lodPlanes = [];\n\t\tconst sizeLods = [];\n\t\tconst sigmas = [];\n\n\t\tlet lod = lodMax;\n\n\t\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\t\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\t\tconst sizeLod = Math.pow( 2, lod );\n\t\t\tsizeLods.push( sizeLod );\n\t\t\tlet sigma = 1.0 / sizeLod;\n\n\t\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t\t} else if ( i === 0 ) {\n\n\t\t\t\tsigma = 0;\n\n\t\t\t}\n\n\t\t\tsigmas.push( sigma );\n\n\t\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\t\tconst min = - texelSize;\n\t\t\tconst max = 1 + texelSize;\n\t\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\t\tconst cubeFaces = 6;\n\t\t\tconst vertices = 6;\n\t\t\tconst positionSize = 3;\n\t\t\tconst uvSize = 2;\n\t\t\tconst faceIndexSize = 1;\n\n\t\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\t\tconst coordinates = [\n\t\t\t\t\tx, y, 0,\n\t\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\t\tx, y, 0,\n\t\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\t\tx, y + 1, 0\n\t\t\t\t];\n\t\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t\t}\n\n\t\t\tconst planes = new BufferGeometry();\n\t\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t\tlodPlanes.push( planes );\n\n\t\t\tif ( lod > LOD_MIN ) {\n\n\t\t\t\tlod --;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { lodPlanes, sizeLods, sigmas };\n\n\t}\n\n\tfunction _createRenderTarget( width, height, params ) {\n\n\t\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\tfunction _setViewport( target, x, y, width, height ) {\n\n\t\ttarget.viewport.set( x, y, width, height );\n\t\ttarget.scissor.set( x, y, width, height );\n\n\t}\n\n\tfunction _getBlurShader( lodMax, width, height ) {\n\n\t\tconst weights = new Float32Array( MAX_SAMPLES );\n\t\tconst poleAxis = new Vector3( 0, 1, 0 );\n\t\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\t\tname: 'SphericalGaussianBlur',\n\n\t\t\tdefines: {\n\t\t\t\t'n': MAX_SAMPLES,\n\t\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'samples': { value: 1 },\n\t\t\t\t'weights': { value: weights },\n\t\t\t\t'latitudinal': { value: false },\n\t\t\t\t'dTheta': { value: 0 },\n\t\t\t\t'mipInt': { value: 0 },\n\t\t\t\t'poleAxis': { value: poleAxis }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\tfunction _getEquirectMaterial() {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tname: 'EquirectangularToCubeUV',\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t}\n\n\tfunction _getCubemapMaterial() {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tname: 'CubemapToCubeUV',\n\n\t\t\tuniforms: {\n\t\t\t\t'envMap': { value: null },\n\t\t\t\t'flipEnvMap': { value: - 1 }\n\t\t\t},\n\n\t\t\tvertexShader: _getCommonVertexShader(),\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\n\t\t} );\n\n\t}\n\n\tfunction _getCommonVertexShader() {\n\n\t\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n\t}\n\n\tfunction WebGLCubeUVMaps( renderer ) {\n\n\t\tlet cubeUVmaps = new WeakMap();\n\n\t\tlet pmremGenerator = null;\n\n\t\tfunction get( texture ) {\n\n\t\t\tif ( texture && texture.isTexture ) {\n\n\t\t\t\tconst mapping = texture.mapping;\n\n\t\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tfunction isCubeTextureComplete( image ) {\n\n\t\t\tlet count = 0;\n\t\t\tconst length = 6;\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t\t}\n\n\t\t\treturn count === length;\n\n\n\t\t}\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tconst texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\t\tcubeUVmaps.delete( texture );\n\t\t\t\tcubemapUV.dispose();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tcubeUVmaps = new WeakMap();\n\n\t\t\tif ( pmremGenerator !== null ) {\n\n\t\t\t\tpmremGenerator.dispose();\n\t\t\t\tpmremGenerator = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tconst extensions = {};\n\n\t\tfunction getExtension( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tlet extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\thas: function ( name ) {\n\n\t\t\t\treturn getExtension( name ) !== null;\n\n\t\t\t},\n\n\t\t\tinit: function ( capabilities ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t\t}\n\n\t\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t\t},\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tconst extension = getExtension( name );\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\t\tconst geometries = {};\n\t\tconst wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tconst geometry = event.target;\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tattributes.remove( geometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\twireframeAttributes.delete( geometry );\n\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tgeometries[ geometry.id ] = true;\n\n\t\t\tinfo.memory.geometries ++;\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( const name in morphAttributes ) {\n\n\t\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateWireframeAttribute( geometry ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst geometryIndex = geometry.index;\n\t\t\tconst geometryPosition = geometry.attributes.position;\n\t\t\tlet version = 0;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tconst array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst array = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tconst a = i + 0;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\t\tattribute.version = version;\n\n\t\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t\t//\n\n\t\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t\t//\n\n\t\t\twireframeAttributes.set( geometry, attribute );\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( currentAttribute ) {\n\n\t\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get( geometry );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tlet mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tlet type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfo.update( count, mode, 1 );\n\n\t\t}\n\n\t\tfunction renderInstances( start, count, primcount ) {\n\n\t\t\tif ( primcount === 0 ) return;\n\n\t\t\tlet extension, methodName;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\t\tinfo.update( count, mode, primcount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\tfunction WebGLInfo( gl ) {\n\n\t\tconst memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\n\t\tconst render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update( count, mode, instanceCount ) {\n\n\t\t\trender.calls ++;\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase gl.TRIANGLES:\n\t\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINES:\n\t\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_STRIP:\n\t\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_LOOP:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.POINTS:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\trender.frame ++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\n\t}\n\n\tfunction numericalSort( a, b ) {\n\n\t\treturn a[ 0 ] - b[ 0 ];\n\n\t}\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n\t}\n\n\tfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\t\tconst influencesList = {};\n\t\tconst morphInfluences = new Float32Array( 8 );\n\t\tconst morphTextures = new WeakMap();\n\t\tconst morph = new Vector4();\n\n\t\tconst workInfluences = [];\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t\t}\n\n\t\tfunction update( object, geometry, program ) {\n\n\t\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\t\tlet height = 1;\n\n\t\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\t\ttexture.type = FloatType;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t// fill buffer\n\n\t\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tentry = {\n\t\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\t\ttexture: texture,\n\t\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t\t};\n\n\t\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t\t} else {\n\n\t\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t\t// initialise list\n\n\t\t\t\t\tinfluences = [];\n\n\t\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t\t}\n\n\t\t\t\t// Collect influences\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\tfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\t\tlet updateMap = new WeakMap();\n\n\t\tfunction update( object ) {\n\n\t\t\tconst frame = info.render.frame;\n\n\t\t\tconst geometry = object.geometry;\n\t\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t\t}\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tupdateMap = new WeakMap();\n\n\t\t}\n\n\t\tfunction onInstancedMeshDispose( event ) {\n\n\t\t\tconst instancedMesh = event.target;\n\n\t\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tconst emptyTexture = /*@__PURE__*/ new Texture();\n\tconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\n\tconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\n\tconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tconst arrayCacheF32 = [];\n\tconst arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tconst mat4array = new Float32Array( 16 );\n\tconst mat3array = new Float32Array( 9 );\n\tconst mat2array = new Float32Array( 4 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tconst firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tconst n = nBlocks * blockSize;\n\t\tlet r = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\tfunction arraysEqual( a, b ) {\n\n\t\tif ( a.length !== b.length ) return false;\n\n\t\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction copyArray( a, b ) {\n\n\t\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\t\ta[ i ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( textures, n ) {\n\n\t\tlet r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValueV1f( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) return;\n\n\t\tgl.uniform1f( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValueV2f( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform2fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV3f( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\n\t\t\t}\n\n\t\t} else if ( v.r !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\t\tcache[ 0 ] = v.r;\n\t\t\t\tcache[ 1 ] = v.g;\n\t\t\t\tcache[ 2 ] = v.b;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV4f( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\t\t\t\tcache[ 3 ] = v.w;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform4fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\t// Single matrix (from flat array or THREE.MatrixN)\n\n\tfunction setValueM2( gl, v ) {\n\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\t\tmat2array.set( elements );\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM3( gl, v ) {\n\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\t\tmat3array.set( elements );\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM4( gl, v ) {\n\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\t\tmat4array.set( elements );\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\t// Single integer / boolean\n\n\tfunction setValueV1i( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) return;\n\n\t\tgl.uniform1i( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Single integer / boolean vector (from flat array or THREE.VectorN)\n\n\tfunction setValueV2i( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform2iv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV3i( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform3iv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV4i( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\t\t\t\tcache[ 3 ] = v.w;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform4iv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\t// Single unsigned integer\n\n\tfunction setValueV1ui( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) return;\n\n\t\tgl.uniform1ui( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Single unsigned integer vector (from flat array or THREE.VectorN)\n\n\tfunction setValueV2ui( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform2uiv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV3ui( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform3uiv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV4ui( gl, v ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\t\t\t\tcache[ 3 ] = v.w;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform4uiv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, textures ) {\n\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT3D1( gl, v, textures ) {\n\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, textures ) {\n\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\tfunction setValueT2DArray1( gl, v, textures ) {\n\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n\t}\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\n\t\t}\n\n\t}\n\n\n\t// Array of scalars\n\n\tfunction setValueV1fArray( gl, v ) {\n\n\t\tgl.uniform1fv( this.addr, v );\n\n\t}\n\n\t// Array of vectors (from flat array or array of THREE.VectorN)\n\n\tfunction setValueV2fArray( gl, v ) {\n\n\t\tconst data = flatten( v, this.size, 2 );\n\n\t\tgl.uniform2fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV3fArray( gl, v ) {\n\n\t\tconst data = flatten( v, this.size, 3 );\n\n\t\tgl.uniform3fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV4fArray( gl, v ) {\n\n\t\tconst data = flatten( v, this.size, 4 );\n\n\t\tgl.uniform4fv( this.addr, data );\n\n\t}\n\n\t// Array of matrices (from flat array or array of THREE.MatrixN)\n\n\tfunction setValueM2Array( gl, v ) {\n\n\t\tconst data = flatten( v, this.size, 4 );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM3Array( gl, v ) {\n\n\t\tconst data = flatten( v, this.size, 9 );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM4Array( gl, v ) {\n\n\t\tconst data = flatten( v, this.size, 16 );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\t}\n\n\t// Array of integer / boolean\n\n\tfunction setValueV1iArray( gl, v ) {\n\n\t\tgl.uniform1iv( this.addr, v );\n\n\t}\n\n\t// Array of integer / boolean vectors (from flat array)\n\n\tfunction setValueV2iArray( gl, v ) {\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV3iArray( gl, v ) {\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV4iArray( gl, v ) {\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t}\n\n\t// Array of unsigned integer\n\n\tfunction setValueV1uiArray( gl, v ) {\n\n\t\tgl.uniform1uiv( this.addr, v );\n\n\t}\n\n\t// Array of unsigned integer vectors (from flat array)\n\n\tfunction setValueV2uiArray( gl, v ) {\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t}\n\n\tfunction setValueV3uiArray( gl, v ) {\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t}\n\n\tfunction setValueV4uiArray( gl, v ) {\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t}\n\n\n\t// Array of textures (2D / 3D / Cube / 2DArray)\n\n\tfunction setValueT1Array( gl, v, textures ) {\n\n\t\tconst cache = this.cache;\n\n\t\tconst n = v.length;\n\n\t\tconst units = allocTexUnits( textures, n );\n\n\t\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\t\tgl.uniform1iv( this.addr, units );\n\n\t\t\tcopyArray( cache, units );\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT3DArray( gl, v, textures ) {\n\n\t\tconst cache = this.cache;\n\n\t\tconst n = v.length;\n\n\t\tconst units = allocTexUnits( textures, n );\n\n\t\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\t\tgl.uniform1iv( this.addr, units );\n\n\t\t\tcopyArray( cache, units );\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6Array( gl, v, textures ) {\n\n\t\tconst cache = this.cache;\n\n\t\tconst n = v.length;\n\n\t\tconst units = allocTexUnits( textures, n );\n\n\t\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\t\tgl.uniform1iv( this.addr, units );\n\n\t\t\tcopyArray( cache, units );\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\t\tconst cache = this.cache;\n\n\t\tconst n = v.length;\n\n\t\tconst units = allocTexUnits( textures, n );\n\n\t\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\t\tgl.uniform1iv( this.addr, units );\n\n\t\t\tcopyArray( cache, units );\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3DArray;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArrayArray;\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tclass SingleUniform {\n\n\t\tconstructor( id, activeInfo, addr ) {\n\n\t\t\tthis.id = id;\n\t\t\tthis.addr = addr;\n\t\t\tthis.cache = [];\n\t\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t\t// this.path = activeInfo.name; // DEBUG\n\n\t\t}\n\n\t}\n\n\tclass PureArrayUniform {\n\n\t\tconstructor( id, activeInfo, addr ) {\n\n\t\t\tthis.id = id;\n\t\t\tthis.addr = addr;\n\t\t\tthis.cache = [];\n\t\t\tthis.size = activeInfo.size;\n\t\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t\t// this.path = activeInfo.name; // DEBUG\n\n\t\t}\n\n\t}\n\n\tclass StructuredUniform {\n\n\t\tconstructor( id ) {\n\n\t\t\tthis.id = id;\n\n\t\t\tthis.seq = [];\n\t\t\tthis.map = {};\n\n\t\t}\n\n\t\tsetValue( gl, value, textures ) {\n\n\t\t\tconst seq = this.seq;\n\n\t\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tconst u = seq[ i ];\n\t\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tconst path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile ( true ) {\n\n\t\t\tconst match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\t\tlet id = match[ 1 ];\n\t\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tconst map = container.map;\n\t\t\t\tlet next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tclass WebGLUniforms {\n\n\t\tconstructor( gl, program ) {\n\n\t\t\tthis.seq = [];\n\t\t\tthis.map = {};\n\n\t\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\t\tparseUniform( info, addr, this );\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetValue( gl, name, value, textures ) {\n\n\t\t\tconst u = this.map[ name ];\n\n\t\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t\t}\n\n\t\tsetOptional( gl, object, name ) {\n\n\t\t\tconst v = object[ name ];\n\n\t\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t\t}\n\n\t\tstatic upload( gl, seq, values, textures ) {\n\n\t\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tconst u = seq[ i ],\n\t\t\t\t\tv = values[ u.id ];\n\n\t\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstatic seqWithValue( seq, values ) {\n\n\t\t\tconst r = [];\n\n\t\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tconst u = seq[ i ];\n\t\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t\t}\n\n\t\t\treturn r;\n\n\t\t}\n\n\t}\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tconst shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\treturn shader;\n\n\t}\n\n\tlet programIdCount = 0;\n\n\tfunction handleSource( string, errorLine ) {\n\n\t\tconst lines = string.split( '\\n' );\n\t\tconst lines2 = [];\n\n\t\tconst from = Math.max( errorLine - 6, 0 );\n\t\tconst to = Math.min( errorLine + 6, lines.length );\n\n\t\tfor ( let i = from; i < to; i ++ ) {\n\n\t\t\tconst line = i + 1;\n\t\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t\t}\n\n\t\treturn lines2.join( '\\n' );\n\n\t}\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB', '( value )' ];\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\n\t\t}\n\n\t}\n\n\tfunction getShaderErrors( gl, shader, type ) {\n\n\t\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\t\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\t\tif ( status && errors === '' ) return '';\n\n\t\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\t\tif ( errorMatches ) {\n\n\t\t\t// --enable-privileged-webgl-extension\n\t\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t\t} else {\n\n\t\t\treturn errors;\n\n\t\t}\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tconst components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tlet toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\t\ttoneMappingName = 'Linear';\n\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n\t}\n\n\tfunction generateExtensions( parameters ) {\n\n\t\tconst chunks = [\n\t\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tconst chunks = [];\n\n\t\tfor ( const name in defines ) {\n\n\t\t\tconst value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program ) {\n\n\t\tconst attributes = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\t\tconst info = gl.getActiveAttrib( program, i );\n\t\t\tconst name = info.name;\n\n\t\t\tlet locationSize = 1;\n\t\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[ name ] = {\n\t\t\t\ttype: info.type,\n\t\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\t\tlocationSize: locationSize\n\t\t\t};\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n\t}\n\n\tfunction replaceClippingPlaneNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n\t}\n\n\t// Resolve Includes\n\n\tconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes( string ) {\n\n\t\treturn string.replace( includePattern, includeReplacer );\n\n\t}\n\n\tfunction includeReplacer( match, include ) {\n\n\t\tconst string = ShaderChunk[ include ];\n\n\t\tif ( string === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn resolveIncludes( string );\n\n\t}\n\n\t// Unroll Loops\n\n\tconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops( string ) {\n\n\t\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n\t}\n\n\tfunction loopReplacer( match, start, end, snippet ) {\n\n\t\tlet string = '';\n\n\t\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tstring += snippet\n\t\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t\t}\n\n\t\treturn string;\n\n\t}\n\n\t//\n\n\tfunction generatePrecision( parameters ) {\n\n\t\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\t\tif ( parameters.precision === 'highp' ) {\n\n\t\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t\t}\n\n\t\treturn precisionstring;\n\n\t}\n\n\tfunction generateShadowMapTypeDefine( parameters ) {\n\n\t\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\n\t}\n\n\tfunction generateEnvMapTypeDefine( parameters ) {\n\n\t\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\n\t}\n\n\tfunction generateEnvMapModeDefine( parameters ) {\n\n\t\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapModeDefine;\n\n\t}\n\n\tfunction generateEnvMapBlendingDefine( parameters ) {\n\n\t\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\n\t}\n\n\tfunction generateCubeUVSize( parameters ) {\n\n\t\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\t\tif ( imageHeight === null ) return null;\n\n\t\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\t\tconst texelHeight = 1.0 / imageHeight;\n\n\t\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\t\treturn { texelWidth, texelHeight, maxMip };\n\n\t}\n\n\tfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t\t// TODO Send this event to Three.js DevTools\n\t\t// console.log( 'WebGLProgram', cacheKey );\n\n\t\tconst gl = renderer.getContext();\n\n\t\tconst defines = parameters.defines;\n\n\t\tlet vertexShader = parameters.vertexShader;\n\t\tlet fragmentShader = parameters.fragmentShader;\n\n\t\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\t\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\t\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\t\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\t\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\t\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\t\tconst customDefines = generateDefines( defines );\n\n\t\tconst program = gl.createProgram();\n\n\t\tlet prefixVertex, prefixFragment;\n\t\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\t\tif ( parameters.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\t\tprefixVertex += '\\n';\n\n\t\t\t}\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\t\tprefixFragment += '\\n';\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t\t//\n\n\t\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t\t//\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\t\tparameters.vertexUvs2 ? '#define USE_UV2' : '',\n\n\t\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t\t'\tattribute vec4 color;',\n\n\t\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\t\tparameters.vertexUvs2 ? '#define USE_UV2' : '',\n\n\t\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = resolveIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\t\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\t\tfragmentShader = resolveIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\t\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\t\tvertexShader = unrollLoops( vertexShader );\n\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\t\tversionString = '#version 300 es\\n';\n\n\t\t\tprefixVertex = [\n\t\t\t\t'precision mediump sampler2DArray;',\n\t\t\t\t'#define attribute in',\n\t\t\t\t'#define varying out',\n\t\t\t\t'#define texture2D texture'\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\t\tprefixFragment = [\n\t\t\t\t'#define varying in',\n\t\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t\t'#define texture2D texture',\n\t\t\t\t'#define textureCube texture',\n\t\t\t\t'#define texture2DProj textureProj',\n\t\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t}\n\n\t\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\t\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tthis.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tlet cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tlet cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function () {\n\n\t\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t//\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount ++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\tlet _id = 0;\n\n\tclass WebGLShaderCache {\n\n\t\tconstructor() {\n\n\t\t\tthis.shaderCache = new Map();\n\t\t\tthis.materialCache = new Map();\n\n\t\t}\n\n\t\tupdate( material ) {\n\n\t\t\tconst vertexShader = material.vertexShader;\n\t\t\tconst fragmentShader = material.fragmentShader;\n\n\t\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t\t}\n\n\t\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tremove( material ) {\n\n\t\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\t\tshaderStage.usedTimes --;\n\n\t\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t\t}\n\n\t\t\tthis.materialCache.delete( material );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetVertexShaderID( material ) {\n\n\t\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t\t}\n\n\t\tgetFragmentShaderID( material ) {\n\n\t\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.shaderCache.clear();\n\t\t\tthis.materialCache.clear();\n\n\t\t}\n\n\t\t_getShaderCacheForMaterial( material ) {\n\n\t\t\tconst cache = this.materialCache;\n\t\t\tlet set = cache.get( material );\n\n\t\t\tif ( set === undefined ) {\n\n\t\t\t\tset = new Set();\n\t\t\t\tcache.set( material, set );\n\n\t\t\t}\n\n\t\t\treturn set;\n\n\t\t}\n\n\t\t_getShaderStage( code ) {\n\n\t\t\tconst cache = this.shaderCache;\n\t\t\tlet stage = cache.get( code );\n\n\t\t\tif ( stage === undefined ) {\n\n\t\t\t\tstage = new WebGLShaderStage( code );\n\t\t\t\tcache.set( code, stage );\n\n\t\t\t}\n\n\t\t\treturn stage;\n\n\t\t}\n\n\t}\n\n\tclass WebGLShaderStage {\n\n\t\tconstructor( code ) {\n\n\t\t\tthis.id = _id ++;\n\n\t\t\tthis.code = code;\n\t\t\tthis.usedTimes = 0;\n\n\t\t}\n\n\t}\n\n\tfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\t\tconst _programLayers = new Layers();\n\t\tconst _customShaders = new WebGLShaderCache();\n\t\tconst programs = [];\n\n\t\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\t\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\t\tlet precision = capabilities.precision;\n\n\t\tconst shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\n\t\tfunction getChannel( value ) {\n\n\t\t\tif ( value === 1 ) return 'uv2';\n\n\t\t\treturn 'uv';\n\n\t\t}\n\n\t\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst geometry = object.geometry;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet morphTextureStride = 0;\n\n\t\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t\t//\n\n\t\t\tlet vertexShader, fragmentShader;\n\t\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\t\tif ( shaderID ) {\n\n\t\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\t\tvertexShader = shader.vertexShader;\n\t\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t\t} else {\n\n\t\t\t\tvertexShader = material.vertexShader;\n\t\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t\t_customShaders.update( material );\n\n\t\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\n\t\t\tconst HAS_MAP = !! material.map;\n\t\t\tconst HAS_MATCAP = !! material.matcap;\n\t\t\tconst HAS_ENVMAP = !! envMap;\n\t\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\n\t\t\tconst parameters = {\n\n\t\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: material.type,\n\n\t\t\t\tvertexShader: vertexShader,\n\t\t\t\tfragmentShader: fragmentShader,\n\t\t\t\tdefines: material.defines,\n\n\t\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\t\tglslVersion: material.glslVersion,\n\n\t\t\t\tprecision: precision,\n\n\t\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\n\t\t\t\tmap: HAS_MAP,\n\t\t\t\tmatcap: HAS_MATCAP,\n\t\t\t\tenvMap: HAS_ENVMAP,\n\t\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\t\taoMap: HAS_AOMAP,\n\t\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\t\tsheen: HAS_SHEEN,\n\t\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\t\talphaTest: HAS_ALPHATEST,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\t//\n\n\t\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t\t//\n\n\t\t\t\tvertexTangents: HAS_NORMALMAP && !! geometry.attributes.tangent,\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\t\tvertexUvs2: HAS_ATTRIBUTE_UV2,\n\n\t\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog === true,\n\t\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.flatShading === true,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tuseLegacyLights: renderer.useLegacyLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t}\n\n\t\tfunction getProgramCacheKey( parameters ) {\n\n\t\t\tconst array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t\t}\n\n\t\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t\t}\n\n\t\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\t\treturn array.join();\n\n\t\t}\n\n\t\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\t\tarray.push( parameters.precision );\n\t\t\tarray.push( parameters.outputEncoding );\n\t\t\tarray.push( parameters.envMapMode );\n\t\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\t\tarray.push( parameters.mapUv );\n\t\t\tarray.push( parameters.alphaMapUv );\n\t\t\tarray.push( parameters.lightMapUv );\n\t\t\tarray.push( parameters.aoMapUv );\n\t\t\tarray.push( parameters.bumpMapUv );\n\t\t\tarray.push( parameters.normalMapUv );\n\t\t\tarray.push( parameters.displacementMapUv );\n\t\t\tarray.push( parameters.emissiveMapUv );\n\t\t\tarray.push( parameters.metalnessMapUv );\n\t\t\tarray.push( parameters.roughnessMapUv );\n\t\t\tarray.push( parameters.clearcoatMapUv );\n\t\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\t\tarray.push( parameters.iridescenceMapUv );\n\t\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\t\tarray.push( parameters.sheenColorMapUv );\n\t\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\t\tarray.push( parameters.specularMapUv );\n\t\t\tarray.push( parameters.specularColorMapUv );\n\t\t\tarray.push( parameters.specularIntensityMapUv );\n\t\t\tarray.push( parameters.transmissionMapUv );\n\t\t\tarray.push( parameters.thicknessMapUv );\n\t\t\tarray.push( parameters.combine );\n\t\t\tarray.push( parameters.fogExp2 );\n\t\t\tarray.push( parameters.sizeAttenuation );\n\t\t\tarray.push( parameters.morphTargetsCount );\n\t\t\tarray.push( parameters.morphAttributeCount );\n\t\t\tarray.push( parameters.numDirLights );\n\t\t\tarray.push( parameters.numPointLights );\n\t\t\tarray.push( parameters.numSpotLights );\n\t\t\tarray.push( parameters.numSpotLightMaps );\n\t\t\tarray.push( parameters.numHemiLights );\n\t\t\tarray.push( parameters.numRectAreaLights );\n\t\t\tarray.push( parameters.numDirLightShadows );\n\t\t\tarray.push( parameters.numPointLightShadows );\n\t\t\tarray.push( parameters.numSpotLightShadows );\n\t\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\t\tarray.push( parameters.shadowMapType );\n\t\t\tarray.push( parameters.toneMapping );\n\t\t\tarray.push( parameters.numClippingPlanes );\n\t\t\tarray.push( parameters.numClipIntersection );\n\t\t\tarray.push( parameters.depthPacking );\n\n\t\t}\n\n\t\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t\t_programLayers.disableAll();\n\n\t\t\tif ( parameters.isWebGL2 )\n\t\t\t\t_programLayers.enable( 0 );\n\t\t\tif ( parameters.supportsVertexTextures )\n\t\t\t\t_programLayers.enable( 1 );\n\t\t\tif ( parameters.instancing )\n\t\t\t\t_programLayers.enable( 2 );\n\t\t\tif ( parameters.instancingColor )\n\t\t\t\t_programLayers.enable( 3 );\n\t\t\tif ( parameters.matcap )\n\t\t\t\t_programLayers.enable( 4 );\n\t\t\tif ( parameters.envMap )\n\t\t\t\t_programLayers.enable( 5 );\n\t\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t\t_programLayers.enable( 6 );\n\t\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t\t_programLayers.enable( 7 );\n\t\t\tif ( parameters.clearcoat )\n\t\t\t\t_programLayers.enable( 8 );\n\t\t\tif ( parameters.iridescence )\n\t\t\t\t_programLayers.enable( 9 );\n\t\t\tif ( parameters.alphaTest )\n\t\t\t\t_programLayers.enable( 10 );\n\t\t\tif ( parameters.vertexColors )\n\t\t\t\t_programLayers.enable( 11 );\n\t\t\tif ( parameters.vertexAlphas )\n\t\t\t\t_programLayers.enable( 12 );\n\t\t\tif ( parameters.vertexUvs2 )\n\t\t\t\t_programLayers.enable( 13 );\n\t\t\tif ( parameters.vertexTangents )\n\t\t\t\t_programLayers.enable( 14 );\n\n\t\t\tarray.push( _programLayers.mask );\n\t\t\t_programLayers.disableAll();\n\n\t\t\tif ( parameters.fog )\n\t\t\t\t_programLayers.enable( 0 );\n\t\t\tif ( parameters.useFog )\n\t\t\t\t_programLayers.enable( 1 );\n\t\t\tif ( parameters.flatShading )\n\t\t\t\t_programLayers.enable( 2 );\n\t\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t\t_programLayers.enable( 3 );\n\t\t\tif ( parameters.skinning )\n\t\t\t\t_programLayers.enable( 4 );\n\t\t\tif ( parameters.morphTargets )\n\t\t\t\t_programLayers.enable( 5 );\n\t\t\tif ( parameters.morphNormals )\n\t\t\t\t_programLayers.enable( 6 );\n\t\t\tif ( parameters.morphColors )\n\t\t\t\t_programLayers.enable( 7 );\n\t\t\tif ( parameters.premultipliedAlpha )\n\t\t\t\t_programLayers.enable( 8 );\n\t\t\tif ( parameters.shadowMapEnabled )\n\t\t\t\t_programLayers.enable( 9 );\n\t\t\tif ( parameters.useLegacyLights )\n\t\t\t\t_programLayers.enable( 10 );\n\t\t\tif ( parameters.doubleSided )\n\t\t\t\t_programLayers.enable( 11 );\n\t\t\tif ( parameters.flipSided )\n\t\t\t\t_programLayers.enable( 12 );\n\t\t\tif ( parameters.useDepthPacking )\n\t\t\t\t_programLayers.enable( 13 );\n\t\t\tif ( parameters.dithering )\n\t\t\t\t_programLayers.enable( 14 );\n\t\t\tif ( parameters.transmission )\n\t\t\t\t_programLayers.enable( 15 );\n\t\t\tif ( parameters.sheen )\n\t\t\t\t_programLayers.enable( 16 );\n\t\t\tif ( parameters.decodeVideoTexture )\n\t\t\t\t_programLayers.enable( 17 );\n\t\t\tif ( parameters.opaque )\n\t\t\t\t_programLayers.enable( 18 );\n\t\t\tif ( parameters.pointsUvs )\n\t\t\t\t_programLayers.enable( 19 );\n\n\t\t\tarray.push( _programLayers.mask );\n\n\t\t}\n\n\t\tfunction getUniforms( material ) {\n\n\t\t\tconst shaderID = shaderIDs[ material.type ];\n\t\t\tlet uniforms;\n\n\t\t\tif ( shaderID ) {\n\n\t\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\t} else {\n\n\t\t\t\tuniforms = material.uniforms;\n\n\t\t\t}\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\t\tlet program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction releaseProgram( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tconst i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction releaseShaderCache( material ) {\n\n\t\t\t_customShaders.remove( material );\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\t_customShaders.dispose();\n\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tgetUniforms: getUniforms,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\treleaseShaderCache: releaseShaderCache,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\tfunction WebGLProperties() {\n\n\t\tlet properties = new WeakMap();\n\n\t\tfunction get( object ) {\n\n\t\t\tlet map = properties.get( object );\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set( object, map );\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tproperties.delete( object );\n\n\t\t}\n\n\t\tfunction update( object, key, value ) {\n\n\t\t\tproperties.get( object )[ key ] = value;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tproperties = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\n\tfunction WebGLRenderList() {\n\n\t\tconst renderItems = [];\n\t\tlet renderItemsIndex = 0;\n\n\t\tconst opaque = [];\n\t\tconst transmissive = [];\n\t\tconst transparent = [];\n\n\t\tfunction init() {\n\n\t\t\trenderItemsIndex = 0;\n\n\t\t\topaque.length = 0;\n\t\t\ttransmissive.length = 0;\n\t\t\ttransparent.length = 0;\n\n\t\t}\n\n\t\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\t\tif ( renderItem === undefined ) {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t}\n\n\t\t\trenderItemsIndex ++;\n\n\t\t\treturn renderItem;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\t\ttransmissive.push( renderItem );\n\n\t\t\t} else if ( material.transparent === true ) {\n\n\t\t\t\ttransparent.push( renderItem );\n\n\t\t\t} else {\n\n\t\t\t\topaque.push( renderItem );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\t\ttransmissive.unshift( renderItem );\n\n\t\t\t} else if ( material.transparent === true ) {\n\n\t\t\t\ttransparent.unshift( renderItem );\n\n\t\t\t} else {\n\n\t\t\t\topaque.unshift( renderItem );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t\t}\n\n\t\tfunction finish() {\n\n\t\t\t// Clear references from inactive renderItems in the list\n\n\t\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.group = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\topaque: opaque,\n\t\t\ttransmissive: transmissive,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tlet lists = new WeakMap();\n\n\t\tfunction get( scene, renderCallDepth ) {\n\n\t\t\tconst listArray = lists.get( scene );\n\t\t\tlet list;\n\n\t\t\tif ( listArray === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.set( scene, [ list ] );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\t\tlistArray.push( list );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\tfunction UniformsCache() {\n\n\t\tconst lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction ShadowUniformsCache() {\n\n\t\tconst lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n\n\tlet nextVersion = 0;\n\n\tfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\t\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n\t}\n\n\tfunction WebGLLights( extensions, capabilities ) {\n\n\t\tconst cache = new UniformsCache();\n\n\t\tconst shadowCache = ShadowUniformsCache();\n\n\t\tconst state = {\n\n\t\t\tversion: 0,\n\n\t\t\thash: {\n\t\t\t\tdirectionalLength: - 1,\n\t\t\t\tpointLength: - 1,\n\t\t\t\tspotLength: - 1,\n\t\t\t\trectAreaLength: - 1,\n\t\t\t\themiLength: - 1,\n\n\t\t\t\tnumDirectionalShadows: - 1,\n\t\t\t\tnumPointShadows: - 1,\n\t\t\t\tnumSpotShadows: - 1,\n\t\t\t\tnumSpotMaps: - 1\n\t\t\t},\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotLightMap: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotLightMatrix: [],\n\t\t\trectArea: [],\n\t\t\trectAreaLTC1: null,\n\t\t\trectAreaLTC2: null,\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: [],\n\t\t\tnumSpotLightShadowsWithMaps: 0\n\n\t\t};\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\t\tconst vector3 = new Vector3();\n\t\tconst matrix4 = new Matrix4();\n\t\tconst matrix42 = new Matrix4();\n\n\t\tfunction setup( lights, useLegacyLights ) {\n\n\t\t\tlet r = 0, g = 0, b = 0;\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\n\t\t\tlet numDirectionalShadows = 0;\n\t\t\tlet numPointShadows = 0;\n\t\t\tlet numSpotShadows = 0;\n\t\t\tlet numSpotMaps = 0;\n\t\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tconst light = lights[ i ];\n\n\t\t\t\tconst color = light.color;\n\t\t\t\tconst intensity = light.intensity;\n\t\t\t\tconst distance = light.distance;\n\n\t\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// WebGL 1\n\n\t\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.ambient[ 0 ] = r;\n\t\t\tstate.ambient[ 1 ] = g;\n\t\t\tstate.ambient[ 2 ] = b;\n\n\t\t\tconst hash = state.hash;\n\n\t\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\t\thash.pointLength !== pointLength ||\n\t\t\t\thash.spotLength !== spotLength ||\n\t\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\t\thash.hemiLength !== hemiLength ||\n\t\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\t\tstate.version = nextVersion ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setupView( lights, camera ) {\n\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\n\t\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tconst light = lights[ i ];\n\n\t\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tsetupView: setupView,\n\t\t\tstate: state\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderState( extensions, capabilities ) {\n\n\t\tconst lights = new WebGLLights( extensions, capabilities );\n\n\t\tconst lightsArray = [];\n\t\tconst shadowsArray = [];\n\n\t\tfunction init() {\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t}\n\n\t\tfunction pushLight( light ) {\n\n\t\t\tlightsArray.push( light );\n\n\t\t}\n\n\t\tfunction pushShadow( shadowLight ) {\n\n\t\t\tshadowsArray.push( shadowLight );\n\n\t\t}\n\n\t\tfunction setupLights( useLegacyLights ) {\n\n\t\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t\t}\n\n\t\tfunction setupLightsView( camera ) {\n\n\t\t\tlights.setupView( lightsArray, camera );\n\n\t\t}\n\n\t\tconst state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\n\t\t\tlights: lights\n\t\t};\n\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\t\t\tsetupLightsView: setupLightsView,\n\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderStates( extensions, capabilities ) {\n\n\t\tlet renderStates = new WeakMap();\n\n\t\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\t\tconst renderStateArray = renderStates.get( scene );\n\t\t\tlet renderState;\n\n\t\t\tif ( renderStateArray === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn renderState;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\trenderStates = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\tclass MeshDepthMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMeshDepthMaterial = true;\n\n\t\t\tthis.type = 'MeshDepthMaterial';\n\n\t\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.alphaMap = null;\n\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.depthPacking = source.depthPacking;\n\n\t\t\tthis.map = source.map;\n\n\t\t\tthis.alphaMap = source.alphaMap;\n\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass MeshDistanceMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMeshDistanceMaterial = true;\n\n\t\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.alphaMap = null;\n\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.map = source.map;\n\n\t\t\tthis.alphaMap = source.alphaMap;\n\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n\tconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\t\tlet _frustum = new Frustum();\n\n\t\tconst _shadowMapSize = new Vector2(),\n\t\t\t_viewportSize = new Vector2(),\n\n\t\t\t_viewport = new Vector4(),\n\n\t\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t\t_materialCache = {},\n\n\t\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\t\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\t\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\t\tdefines: {\n\t\t\t\tVSM_SAMPLES: 8\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: { value: null },\n\t\t\t\tresolution: { value: new Vector2() },\n\t\t\t\tradius: { value: 4.0 }\n\t\t\t},\n\n\t\t\tvertexShader: vertex,\n\t\t\tfragmentShader: fragment\n\n\t\t} );\n\n\t\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\t\tconst fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute(\n\t\t\t'position',\n\t\t\tnew BufferAttribute(\n\t\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t\t3\n\t\t\t)\n\t\t);\n\n\t\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\t\tconst scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function ( lights, scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( lights.length === 0 ) return;\n\n\t\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tconst _state = _renderer.state;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.setBlending( NoBlending );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\t\tconst light = lights[ i ];\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t\t_viewport.set(\n\t\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t\t);\n\n\t\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t\t}\n\n\t\t\t\t// do blur pass for VSM\n\n\t\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t\t};\n\n\t\tfunction VSMPass( shadow, camera ) {\n\n\t\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( shadow.mapPass === null ) {\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t\t}\n\n\t\t\t// vertical pass\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t\t// horizontal pass\n\n\t\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t\t}\n\n\t\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\t\tlet result = null;\n\n\t\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\t\tif ( customMaterial !== undefined ) {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t} else {\n\n\t\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t\t// appropriate state\n\n\t\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif ( type === VSMShadowMap ) {\n\n\t\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t\t} else {\n\n\t\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t\t}\n\n\t\t\tresult.alphaMap = material.alphaMap;\n\t\t\tresult.alphaTest = material.alphaTest;\n\t\t\tresult.map = material.map;\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\t\tresult.displacementMap = material.displacementMap;\n\t\t\tresult.displacementScale = material.displacementScale;\n\t\t\tresult.displacementBias = material.displacementBias;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\t\tmaterialProperties.light = light;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction WebGLState( gl, extensions, capabilities ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tlet locked = false;\n\n\t\t\tconst color = new Vector4();\n\t\t\tlet currentColorMask = null;\n\t\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tlet locked = false;\n\n\t\t\tlet currentDepthMask = null;\n\t\t\tlet currentDepthFunc = null;\n\t\t\tlet currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tlet locked = false;\n\n\t\t\tlet currentStencilMask = null;\n\t\t\tlet currentStencilFunc = null;\n\t\t\tlet currentStencilRef = null;\n\t\t\tlet currentStencilFuncMask = null;\n\t\t\tlet currentStencilFail = null;\n\t\t\tlet currentStencilZFail = null;\n\t\t\tlet currentStencilZPass = null;\n\t\t\tlet currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tconst colorBuffer = new ColorBuffer();\n\t\tconst depthBuffer = new DepthBuffer();\n\t\tconst stencilBuffer = new StencilBuffer();\n\n\t\tconst uboBindings = new WeakMap();\n\t\tconst uboProgramMap = new WeakMap();\n\n\t\tlet enabledCapabilities = {};\n\n\t\tlet currentBoundFramebuffers = {};\n\t\tlet currentDrawbuffers = new WeakMap();\n\t\tlet defaultDrawbuffers = [];\n\n\t\tlet currentProgram = null;\n\n\t\tlet currentBlendingEnabled = false;\n\t\tlet currentBlending = null;\n\t\tlet currentBlendEquation = null;\n\t\tlet currentBlendSrc = null;\n\t\tlet currentBlendDst = null;\n\t\tlet currentBlendEquationAlpha = null;\n\t\tlet currentBlendSrcAlpha = null;\n\t\tlet currentBlendDstAlpha = null;\n\t\tlet currentPremultipledAlpha = false;\n\n\t\tlet currentFlipSided = null;\n\t\tlet currentCullFace = null;\n\n\t\tlet currentLineWidth = null;\n\n\t\tlet currentPolygonOffsetFactor = null;\n\t\tlet currentPolygonOffsetUnits = null;\n\n\t\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\t\tlet lineWidthAvailable = false;\n\t\tlet version = 0;\n\t\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\t\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t\t}\n\n\t\tlet currentTextureSlot = null;\n\t\tlet currentBoundTextures = {};\n\n\t\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\t\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\t\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\t\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tconst texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tconst emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t// init\n\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\tdepthBuffer.setClear( 1 );\n\t\tstencilBuffer.setClear( 0 );\n\n\t\tenable( gl.DEPTH_TEST );\n\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\tsetFlipSided( false );\n\t\tsetCullFace( CullFaceBack );\n\t\tenable( gl.CULL_FACE );\n\n\t\tsetBlending( NoBlending );\n\n\t\t//\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\t\tdrawBuffers = [];\n\t\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t\t} else {\n\n\t\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction useProgram( program ) {\n\n\t\t\tif ( currentProgram !== program ) {\n\n\t\t\t\tgl.useProgram( program );\n\n\t\t\t\tcurrentProgram = program;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tconst equationToGL = {\n\t\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t\t};\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t\t} else {\n\n\t\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst factorToGL = {\n\t\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t\t[ OneFactor ]: gl.ONE,\n\t\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t\t};\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending === NoBlending ) {\n\n\t\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\t\tdisable( gl.BLEND );\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\t\tenable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = true;\n\n\t\t\t}\n\n\t\t\tif ( blending !== CustomBlending ) {\n\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// custom blending\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = false;\n\n\t\t}\n\n\t\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( gl.CULL_FACE )\n\t\t\t\t: enable( gl.CULL_FACE );\n\n\t\t\tlet flipSided = ( material.side === BackSide );\n\t\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\t\tsetFlipSided( flipSided );\n\n\t\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t\t? setBlending( NoBlending )\n\t\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tconst stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest( stencilWrite );\n\t\t\tif ( stencilWrite ) {\n\n\t\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t\t}\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t\tmaterial.alphaToCoverage === true\n\t\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) {\n\n\t\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t\t}\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction unbindTexture() {\n\n\t\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texSubImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texSubImage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexSubImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexSubImage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texStorage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texStorage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\t\tlet mapping = uboProgramMap.get( program );\n\n\t\t\tif ( mapping === undefined ) {\n\n\t\t\t\tmapping = new WeakMap();\n\n\t\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t\t}\n\n\t\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\t\tif ( blockIndex === undefined ) {\n\n\t\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\t\tconst mapping = uboProgramMap.get( program );\n\t\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t\t// bind shader specific block index to global block point\n\t\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\t// reset state\n\n\t\t\tgl.disable( gl.BLEND );\n\t\t\tgl.disable( gl.CULL_FACE );\n\t\t\tgl.disable( gl.DEPTH_TEST );\n\t\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\t\tgl.disable( gl.SCISSOR_TEST );\n\t\t\tgl.disable( gl.STENCIL_TEST );\n\t\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\t\tgl.colorMask( true, true, true, true );\n\t\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\t\tgl.depthMask( true );\n\t\t\tgl.depthFunc( gl.LESS );\n\t\t\tgl.clearDepth( 1 );\n\n\t\t\tgl.stencilMask( 0xffffffff );\n\t\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\t\tgl.clearStencil( 0 );\n\n\t\t\tgl.cullFace( gl.BACK );\n\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\tgl.polygonOffset( 0, 0 );\n\n\t\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\t\tif ( isWebGL2 === true ) {\n\n\t\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t\tgl.useProgram( null );\n\n\t\t\tgl.lineWidth( 1 );\n\n\t\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t\t// reset internals\n\n\t\t\tenabledCapabilities = {};\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentBoundFramebuffers = {};\n\t\t\tcurrentDrawbuffers = new WeakMap();\n\t\t\tdefaultDrawbuffers = [];\n\n\t\t\tcurrentProgram = null;\n\n\t\t\tcurrentBlendingEnabled = false;\n\t\t\tcurrentBlending = null;\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\t\t\tcurrentPremultipledAlpha = false;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcurrentLineWidth = null;\n\n\t\t\tcurrentPolygonOffsetFactor = null;\n\t\t\tcurrentPolygonOffsetUnits = null;\n\n\t\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\n\t\t\tbindFramebuffer: bindFramebuffer,\n\t\t\tdrawBuffers: drawBuffers,\n\n\t\t\tuseProgram: useProgram,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\n\t\t\tupdateUBOMapping: updateUBOMapping,\n\t\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\t\ttexStorage2D: texStorage2D,\n\t\t\ttexStorage3D: texStorage3D,\n\t\t\ttexSubImage2D: texSubImage2D,\n\t\t\ttexSubImage3D: texSubImage3D,\n\t\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst maxTextures = capabilities.maxTextures;\n\t\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\t\tconst maxTextureSize = capabilities.maxTextureSize;\n\t\tconst maxSamples = capabilities.maxSamples;\n\t\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\t\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\t\tconst _videoTextures = new WeakMap();\n\t\tlet _canvas;\n\n\t\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\t\tlet useOffscreenCanvas = false;\n\n\t\ttry {\n\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t\t} catch ( err ) {\n\n\t\t\t// Ignore any errors\n\n\t\t}\n\n\t\tfunction createCanvas( width, height ) {\n\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\t\treturn useOffscreenCanvas ?\n\t\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t\t}\n\n\t\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\t\tlet scale = 1;\n\n\t\t\t// handle case if texture exceeds max size\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t}\n\n\t\t\t// only perform resize if necessary\n\n\t\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t\t// only perform resize for certain image types\n\n\t\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\n\t\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\t\treturn canvas;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo$1( image ) {\n\n\t\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( isWebGL2 ) return false;\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\tfunction generateMipmap( target ) {\n\n\t\t\t_gl.generateMipmap( target );\n\n\t\t}\n\n\t\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, forceLinearEncoding = false ) {\n\n\t\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\t\tif ( internalFormatName !== null ) {\n\n\t\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t\t}\n\n\t\t\tlet internalFormat = glFormat;\n\n\t\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t\t}\n\n\t\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t\t}\n\n\t\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( encoding === sRGBEncoding && forceLinearEncoding === false ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t\t}\n\n\t\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\n\t\t}\n\n\t\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t// user-defined mipmaps\n\n\t\t\t\treturn texture.mipmaps.length;\n\n\t\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\t\treturn image.mipmaps.length;\n\n\t\t\t} else {\n\n\t\t\t\t// texture without mipmaps (only base level)\n\n\t\t\t\treturn 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tconst texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t\t_videoTextures.delete( texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tconst renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tconst textureProperties = properties.get( texture );\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\t\tconst source = texture.source;\n\t\t\tconst webglTextures = _sources.get( source );\n\n\t\t\tif ( webglTextures ) {\n\n\t\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\t\twebglTexture.usedTimes --;\n\n\t\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t\t_sources.delete( source );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deleteTexture( texture ) {\n\n\t\t\tconst textureProperties = properties.get( texture );\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tconst source = texture.source;\n\t\t\tconst webglTextures = _sources.get( source );\n\t\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst textureProperties = properties.get( texture );\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tproperties.remove( texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tlet textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\n\t\t\ttextureUnits = 0;\n\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\n\t\t\tconst textureUnit = textureUnits;\n\n\t\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tfunction getTextureCacheKey( texture ) {\n\n\t\t\tconst array = [];\n\n\t\t\tarray.push( texture.wrapS );\n\t\t\tarray.push( texture.wrapT );\n\t\t\tarray.push( texture.wrapR || 0 );\n\t\t\tarray.push( texture.magFilter );\n\t\t\tarray.push( texture.minFilter );\n\t\t\tarray.push( texture.anisotropy );\n\t\t\tarray.push( texture.internalFormat );\n\t\t\tarray.push( texture.format );\n\t\t\tarray.push( texture.type );\n\t\t\tarray.push( texture.generateMipmaps );\n\t\t\tarray.push( texture.premultiplyAlpha );\n\t\t\tarray.push( texture.flipY );\n\t\t\tarray.push( texture.unpackAlignment );\n\t\t\tarray.push( texture.encoding );\n\n\t\t\treturn array.join();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tconst textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tconst image = texture.image;\n\n\t\t\t\tif ( image === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\t}\n\n\t\tfunction setTexture2DArray( texture, slot ) {\n\n\t\t\tconst textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\t}\n\n\t\tfunction setTexture3D( texture, slot ) {\n\n\t\t\tconst textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tconst textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\t}\n\n\t\tconst wrappingToGL = {\n\t\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t\t};\n\n\t\tconst filterToGL = {\n\t\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t\t};\n\n\t\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\t\tif ( supportsMips ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initTexture( textureProperties, texture ) {\n\n\t\t\tlet forceUpload = false;\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t}\n\n\t\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\t\tconst source = texture.source;\n\t\t\tlet webglTextures = _sources.get( source );\n\n\t\t\tif ( webglTextures === undefined ) {\n\n\t\t\t\twebglTextures = {};\n\t\t\t\t_sources.set( source, webglTextures );\n\n\t\t\t}\n\n\t\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t\t// create new entry\n\n\t\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\t\tusedTimes: 0\n\t\t\t\t\t};\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t\t// even if the image contents are identical\n\n\t\t\t\t\tforceUpload = true;\n\n\t\t\t\t}\n\n\t\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t\t}\n\n\t\t\treturn forceUpload;\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\t\tconst source = texture.source;\n\n\t\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\t\tconst sourceProperties = properties.get( source );\n\n\t\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\t\tlet mipmap;\n\t\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t\t}\n\n\t\t\t\tsourceProperties.__version = source.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t}\n\n\t\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\t\tif ( texture.image.length !== 6 ) return;\n\n\t\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\t\tconst source = texture.source;\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\t\tconst sourceProperties = properties.get( source );\n\n\t\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tconst cubeImage = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\t\tlet mipmaps;\n\n\t\t\t\tif ( isCompressed ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t}\n\n\t\t\t\tsourceProperties.__version = source.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// rebind framebuffer with external textures\n\t\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( colorTexture !== undefined ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t}\n\n\t\t\tif ( depthTexture !== undefined ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst textureProperties = properties.get( texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t}\n\n\t\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D );\n\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t} else {\n\n\t\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t\tgenerateMipmap( target );\n\t\t\t\t\tstate.unbindTexture();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst invalidationArray = [];\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t\t}\n\n\t\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t\t}\n\n\t\tfunction updateVideoTexture( texture ) {\n\n\t\t\tconst frame = info.render.frame;\n\n\t\t\t// Check the last frame we updated the VideoTexture\n\n\t\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t\t_videoTextures.set( texture, frame );\n\t\t\t\ttexture.update();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction verifyColorSpace( texture, image ) {\n\n\t\t\tconst encoding = texture.encoding;\n\t\t\tconst format = texture.format;\n\t\t\tconst type = texture.type;\n\n\t\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t\t// sRGB\n\n\t\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\t//\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.rebindTextures = rebindTextures;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\t\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\t\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\t\tthis.useMultisampledRTT = useMultisampledRTT;\n\n\t}\n\n\tfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert( p, encoding = null ) {\n\n\t\t\tlet extension;\n\n\t\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\t\tif ( p === ByteType ) return gl.BYTE;\n\t\t\tif ( p === ShortType ) return gl.SHORT;\n\t\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\t\tif ( p === IntType ) return gl.INT;\n\t\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t\t// WebGL 1 sRGB fallback\n\n\t\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// WebGL2 formats.\n\n\t\t\tif ( p === RedFormat ) return gl.RED;\n\t\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\t\tif ( p === RGFormat ) return gl.RG;\n\t\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t\t// S3TC\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// PVRTC\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// ETC1\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// ETC2\n\n\t\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// ASTC\n\n\t\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// BPTC\n\n\t\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// RGTC\n\n\t\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t\t}\n\n\t\treturn { convert: convert };\n\n\t}\n\n\tclass ArrayCamera extends PerspectiveCamera {\n\n\t\tconstructor( array = [] ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isArrayCamera = true;\n\n\t\t\tthis.cameras = array;\n\n\t\t}\n\n\t}\n\n\tclass Group extends Object3D {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.isGroup = true;\n\n\t\t\tthis.type = 'Group';\n\n\t\t}\n\n\t}\n\n\tconst _moveEvent = { type: 'move' };\n\n\tclass WebXRController {\n\n\t\tconstructor() {\n\n\t\t\tthis._targetRay = null;\n\t\t\tthis._grip = null;\n\t\t\tthis._hand = null;\n\n\t\t}\n\n\t\tgetHandSpace() {\n\n\t\t\tif ( this._hand === null ) {\n\n\t\t\t\tthis._hand = new Group();\n\t\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\t\tthis._hand.visible = false;\n\n\t\t\t\tthis._hand.joints = {};\n\t\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t\t}\n\n\t\t\treturn this._hand;\n\n\t\t}\n\n\t\tgetTargetRaySpace() {\n\n\t\t\tif ( this._targetRay === null ) {\n\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\n\t\t}\n\n\t\tgetGripSpace() {\n\n\t\t\tif ( this._grip === null ) {\n\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\t\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this._grip;\n\n\t\t}\n\n\t\tdispatchEvent( event ) {\n\n\t\t\tif ( this._targetRay !== null ) {\n\n\t\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t\t}\n\n\t\t\tif ( this._grip !== null ) {\n\n\t\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t\t}\n\n\t\t\tif ( this._hand !== null ) {\n\n\t\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconnect( inputSource ) {\n\n\t\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\t\tconst hand = this._hand;\n\n\t\t\t\tif ( hand ) {\n\n\t\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdisconnect( inputSource ) {\n\n\t\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\tif ( this._targetRay !== null ) {\n\n\t\t\t\tthis._targetRay.visible = false;\n\n\t\t\t}\n\n\t\t\tif ( this._grip !== null ) {\n\n\t\t\t\tthis._grip.visible = false;\n\n\t\t\t}\n\n\t\t\tif ( this._hand !== null ) {\n\n\t\t\t\tthis._hand.visible = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\t\tlet inputPose = null;\n\t\t\tlet gripPose = null;\n\t\t\tlet handPose = null;\n\n\t\t\tconst targetRay = this._targetRay;\n\t\t\tconst grip = this._grip;\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\t\thandPose = true;\n\n\t\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Custom events\n\n\t\t\t\t\t// Check pinchz\n\t\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t\t}\n\n\t\t\tif ( grip !== null ) {\n\n\t\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t\t}\n\n\t\t\tif ( hand !== null ) {\n\n\t\t\t\thand.visible = ( handPose !== null );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// private method\n\n\t\t_getHandJoint( hand, inputjoint ) {\n\n\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\tconst joint = new Group();\n\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\tjoint.visible = false;\n\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\t\thand.add( joint );\n\n\t\t\t}\n\n\t\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t\t}\n\n\t}\n\n\tclass DepthTexture extends Texture {\n\n\t\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t\t}\n\n\t\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\t\tthis.isDepthTexture = true;\n\n\t\t\tthis.image = { width: width, height: height };\n\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\t\tthis.flipY = false;\n\t\t\tthis.generateMipmaps = false;\n\n\t\t}\n\n\n\t}\n\n\tclass WebXRManager extends EventDispatcher {\n\n\t\tconstructor( renderer, gl ) {\n\n\t\t\tsuper();\n\n\t\t\tconst scope = this;\n\n\t\t\tlet session = null;\n\t\t\tlet framebufferScaleFactor = 1.0;\n\n\t\t\tlet referenceSpace = null;\n\t\t\tlet referenceSpaceType = 'local-floor';\n\t\t\t// Set default foveation to maximum.\n\t\t\tlet foveation = 1.0;\n\t\t\tlet customReferenceSpace = null;\n\n\t\t\tlet pose = null;\n\t\t\tlet glBinding = null;\n\t\t\tlet glProjLayer = null;\n\t\t\tlet glBaseLayer = null;\n\t\t\tlet xrFrame = null;\n\t\t\tconst attributes = gl.getContextAttributes();\n\t\t\tlet initialRenderTarget = null;\n\t\t\tlet newRenderTarget = null;\n\n\t\t\tconst controllers = [];\n\t\t\tconst controllerInputSources = [];\n\n\t\t\tconst planes = new Set();\n\t\t\tconst planesLastChangedTimes = new Map();\n\n\t\t\t//\n\n\t\t\tconst cameraL = new PerspectiveCamera();\n\t\t\tcameraL.layers.enable( 1 );\n\t\t\tcameraL.viewport = new Vector4();\n\n\t\t\tconst cameraR = new PerspectiveCamera();\n\t\t\tcameraR.layers.enable( 2 );\n\t\t\tcameraR.viewport = new Vector4();\n\n\t\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\t\tconst cameraVR = new ArrayCamera();\n\t\t\tcameraVR.layers.enable( 1 );\n\t\t\tcameraVR.layers.enable( 2 );\n\n\t\t\tlet _currentDepthNear = null;\n\t\t\tlet _currentDepthFar = null;\n\n\t\t\t//\n\n\t\t\tthis.cameraAutoUpdate = true;\n\t\t\tthis.enabled = false;\n\n\t\t\tthis.isPresenting = false;\n\n\t\t\tthis.getController = function ( index ) {\n\n\t\t\t\tlet controller = controllers[ index ];\n\n\t\t\t\tif ( controller === undefined ) {\n\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t\t}\n\n\t\t\t\treturn controller.getTargetRaySpace();\n\n\t\t\t};\n\n\t\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\t\tlet controller = controllers[ index ];\n\n\t\t\t\tif ( controller === undefined ) {\n\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t\t}\n\n\t\t\t\treturn controller.getGripSpace();\n\n\t\t\t};\n\n\t\t\tthis.getHand = function ( index ) {\n\n\t\t\t\tlet controller = controllers[ index ];\n\n\t\t\t\tif ( controller === undefined ) {\n\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t\t}\n\n\t\t\t\treturn controller.getHandSpace();\n\n\t\t\t};\n\n\t\t\t//\n\n\t\t\tfunction onSessionEvent( event ) {\n\n\t\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onSessionEnd() {\n\n\t\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t\t_currentDepthNear = null;\n\t\t\t\t_currentDepthFar = null;\n\n\t\t\t\t// restore framebuffer/rendering state\n\n\t\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\t\tglBaseLayer = null;\n\t\t\t\tglProjLayer = null;\n\t\t\t\tglBinding = null;\n\t\t\t\tsession = null;\n\t\t\t\tnewRenderTarget = null;\n\n\t\t\t\t//\n\n\t\t\t\tanimation.stop();\n\n\t\t\t\tscope.isPresenting = false;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t\t}\n\n\t\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\t\tframebufferScaleFactor = value;\n\n\t\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\t\treferenceSpaceType = value;\n\n\t\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tthis.getReferenceSpace = function () {\n\n\t\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t\t};\n\n\t\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\t\tcustomReferenceSpace = space;\n\n\t\t\t};\n\n\t\t\tthis.getBaseLayer = function () {\n\n\t\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t\t};\n\n\t\t\tthis.getBinding = function () {\n\n\t\t\t\treturn glBinding;\n\n\t\t\t};\n\n\t\t\tthis.getFrame = function () {\n\n\t\t\t\treturn xrFrame;\n\n\t\t\t};\n\n\t\t\tthis.getSession = function () {\n\n\t\t\t\treturn session;\n\n\t\t\t};\n\n\t\t\tthis.setSession = async function ( value ) {\n\n\t\t\t\tsession = value;\n\n\t\t\t\tif ( session !== null ) {\n\n\t\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\t\tlet depthType = null;\n\t\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\t\tanimation.setContext( session );\n\t\t\t\t\tanimation.start();\n\n\t\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t\t// Notify disconnected\n\n\t\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Notify connected\n\n\t\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\t\tif ( controller ) {\n\n\t\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst cameraLPos = new Vector3();\n\t\t\tconst cameraRPos = new Vector3();\n\n\t\t\t/**\n\t\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t\t * the cameras' projection and world matrices have already been set.\n\t\t\t * And that near and far planes are identical for both cameras.\n\t\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t\t */\n\t\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t\t// Use the left camera for these values.\n\t\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\t\tconst left = near * leftFov;\n\t\t\t\tconst right = near * rightFov;\n\n\t\t\t\t// Calculate the new camera's position offset from the\n\t\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t\t// TODO: Better way to apply this offset?\n\t\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\tcamera.translateX( xOffset );\n\t\t\t\tcamera.translateZ( zOffset );\n\t\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t\t}\n\n\t\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\t\tif ( parent === null ) {\n\n\t\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\t\tif ( session === null ) return;\n\n\t\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t\t} );\n\n\t\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t\t}\n\n\t\t\t\tconst parent = camera.parent;\n\t\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t\t}\n\n\t\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\t// update user camera and its children\n\n\t\t\t\tupdateUserCamera( camera, cameraVR, parent );\n\n\t\t\t};\n\n\t\t\tfunction updateUserCamera( camera, cameraVR, parent ) {\n\n\t\t\t\tif ( parent === null ) {\n\n\t\t\t\t\tcamera.matrix.copy( cameraVR.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\t\tcamera.matrix.invert();\n\t\t\t\t\tcamera.matrix.multiply( cameraVR.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\t\tconst children = camera.children;\n\n\t\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t\t}\n\n\t\t\t\tcamera.projectionMatrix.copy( cameraVR.projectionMatrix );\n\t\t\t\tcamera.projectionMatrixInverse.copy( cameraVR.projectionMatrixInverse );\n\n\t\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\t\tcamera.zoom = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.getCamera = function () {\n\n\t\t\t\treturn cameraVR;\n\n\t\t\t};\n\n\t\t\tthis.getFoveation = function () {\n\n\t\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn foveation;\n\n\t\t\t};\n\n\t\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t\t// 0 = no foveation = full resolution\n\t\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\t\tfoveation = value;\n\n\t\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t\t}\n\n\t\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tthis.getPlanes = function () {\n\n\t\t\t\treturn planes;\n\n\t\t\t};\n\n\t\t\t// Animation Loop\n\n\t\t\tlet onAnimationFrameCallback = null;\n\n\t\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\t\txrFrame = frame;\n\n\t\t\t\tif ( pose !== null ) {\n\n\t\t\t\t\tconst views = pose.views;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\t\t\t\t\t\t\tcameraVR.matrix.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame.detectedPlanes } );\n\n\t\t\t\t\tlet planesToRemove = null;\n\n\t\t\t\t\tfor ( const plane of planes ) {\n\n\t\t\t\t\t\tif ( ! frame.detectedPlanes.has( plane ) ) {\n\n\t\t\t\t\t\t\tif ( planesToRemove === null ) {\n\n\t\t\t\t\t\t\t\tplanesToRemove = [];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tplanesToRemove.push( plane );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( planesToRemove !== null ) {\n\n\t\t\t\t\t\tfor ( const plane of planesToRemove ) {\n\n\t\t\t\t\t\t\tplanes.delete( plane );\n\t\t\t\t\t\t\tplanesLastChangedTimes.delete( plane );\n\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeremoved', data: plane } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( const plane of frame.detectedPlanes ) {\n\n\t\t\t\t\t\tif ( ! planes.has( plane ) ) {\n\n\t\t\t\t\t\t\tplanes.add( plane );\n\t\t\t\t\t\t\tplanesLastChangedTimes.set( plane, frame.lastChangedTime );\n\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeadded', data: plane } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst lastKnownTime = planesLastChangedTimes.get( plane );\n\n\t\t\t\t\t\t\tif ( plane.lastChangedTime > lastKnownTime ) {\n\n\t\t\t\t\t\t\t\tplanesLastChangedTimes.set( plane, plane.lastChangedTime );\n\t\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'planechanged', data: plane } );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\txrFrame = null;\n\n\t\t\t}\n\n\t\t\tconst animation = new WebGLAnimation();\n\n\t\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\t\tonAnimationFrameCallback = callback;\n\n\t\t\t};\n\n\t\t\tthis.dispose = function () {};\n\n\t\t}\n\n\t}\n\n\tfunction WebGLMaterials( renderer, properties ) {\n\n\t\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniform.value.copy( map.matrix );\n\n\t\t}\n\n\t\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tuniforms.color.value.copy( material.color );\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif ( material.color ) {\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t\t}\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.specularMap ) {\n\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t\t}\n\n\t\t\tconst envMap = properties.get( material ).envMap;\n\n\t\t\tif ( envMap ) {\n\n\t\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.ior.value = material.ior;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t\t// artist-friendly light intensity scaling factor\n\t\t\t\tconst scaleFactor = ( renderer.useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tconst envMap = properties.get( material ).envMap;\n\n\t\t\tif ( envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\t\tif ( material.sheen > 0 ) {\n\n\t\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.iridescence > 0 ) {\n\n\t\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.transmission > 0 ) {\n\n\t\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t\t}\n\n\t\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\t\tif ( material.specularColorMap ) {\n\n\t\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.specularIntensityMap ) {\n\n\t\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\t\tif ( material.matcap ) {\n\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\t\tconst light = properties.get( material ).light;\n\n\t\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\n\t}\n\n\tfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\t\tlet buffers = {};\n\t\tlet updateList = {};\n\t\tlet allocatedBindingPoints = [];\n\n\t\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\t\tfunction bind( uniformsGroup, program ) {\n\n\t\t\tconst webglProgram = program.program;\n\t\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t\t}\n\n\t\tfunction update( uniformsGroup, program ) {\n\n\t\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\t\tif ( buffer === undefined ) {\n\n\t\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t\t}\n\n\t\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\t\tconst webglProgram = program.program;\n\t\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t\t// update UBO once per frame\n\n\t\t\tconst frame = info.render.frame;\n\n\t\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createBuffer( uniformsGroup ) {\n\n\t\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\t\tconst buffer = gl.createBuffer();\n\t\t\tconst size = uniformsGroup.__size;\n\t\t\tconst usage = uniformsGroup.usage;\n\n\t\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\t\treturn buffer;\n\n\t\t}\n\n\t\tfunction allocateBindingPointIndex() {\n\n\t\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\t\treturn i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tfunction updateBufferData( uniformsGroup ) {\n\n\t\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\t\tconst uniforms = uniformsGroup.uniforms;\n\t\t\tconst cache = uniformsGroup.__cache;\n\n\t\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t\t// partly update the buffer if necessary\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t\t}\n\n\t\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t\t// cache entry does not exist so far\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\t\tconst tempValues = [];\n\n\t\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\t// compare current value with cached entry\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t\t// determine total buffer size according to the STD140 layout\n\t\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\t\tlet offset = 0; // global buffer offset in bytes\n\t\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t\tconst infos = {\n\t\t\t\t\tboundary: 0, // bytes\n\t\t\t\t\tstorage: 0 // bytes\n\t\t\t\t};\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst value = values[ j ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t\t}\n\n\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t//\n\n\t\t\t\tif ( i > 0 ) {\n\n\t\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t\t// check for chunk overflow\n\n\t\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset += infos.storage;\n\n\t\t\t}\n\n\t\t\t// ensure correct final padding\n\n\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t\t//\n\n\t\t\tuniformsGroup.__size = offset;\n\t\t\tuniformsGroup.__cache = {};\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tfunction getUniformSize( value ) {\n\n\t\t\tconst info = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\t// determine sizes according to STD140\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t// float/int\n\n\t\t\t\tinfo.boundary = 4;\n\t\t\t\tinfo.storage = 4;\n\n\t\t\t} else if ( value.isVector2 ) {\n\n\t\t\t\t// vec2\n\n\t\t\t\tinfo.boundary = 8;\n\t\t\t\tinfo.storage = 8;\n\n\t\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t\t// vec3\n\n\t\t\t\tinfo.boundary = 16;\n\t\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t\t} else if ( value.isVector4 ) {\n\n\t\t\t\t// vec4\n\n\t\t\t\tinfo.boundary = 16;\n\t\t\t\tinfo.storage = 16;\n\n\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\t\tinfo.boundary = 48;\n\t\t\t\tinfo.storage = 48;\n\n\t\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t\t// mat4\n\n\t\t\t\tinfo.boundary = 64;\n\t\t\t\tinfo.storage = 64;\n\n\t\t\t} else if ( value.isTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t\t}\n\n\t\t\treturn info;\n\n\t\t}\n\n\t\tfunction onUniformsGroupsDispose( event ) {\n\n\t\t\tconst uniformsGroup = event.target;\n\n\t\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\t\tdelete buffers[ uniformsGroup.id ];\n\t\t\tdelete updateList[ uniformsGroup.id ];\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tfor ( const id in buffers ) {\n\n\t\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t\t}\n\n\t\t\tallocatedBindingPoints = [];\n\t\t\tbuffers = {};\n\t\t\tupdateList = {};\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbind: bind,\n\t\t\tupdate: update,\n\n\t\t\tdispose: dispose\n\n\t\t};\n\n\t}\n\n\tfunction createCanvasElement() {\n\n\t\tconst canvas = createElementNS( 'canvas' );\n\t\tcanvas.style.display = 'block';\n\t\treturn canvas;\n\n\t}\n\n\tclass WebGLRenderer {\n\n\t\tconstructor( parameters = {} ) {\n\n\t\t\tconst {\n\t\t\t\tcanvas = createCanvasElement(),\n\t\t\t\tcontext = null,\n\t\t\t\tdepth = true,\n\t\t\t\tstencil = true,\n\t\t\t\talpha = false,\n\t\t\t\tantialias = false,\n\t\t\t\tpremultipliedAlpha = true,\n\t\t\t\tpreserveDrawingBuffer = false,\n\t\t\t\tpowerPreference = 'default',\n\t\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t\t} = parameters;\n\n\t\t\tthis.isWebGLRenderer = true;\n\n\t\t\tlet _alpha;\n\n\t\t\tif ( context !== null ) {\n\n\t\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t\t} else {\n\n\t\t\t\t_alpha = alpha;\n\n\t\t\t}\n\n\t\t\tlet currentRenderList = null;\n\t\t\tlet currentRenderState = null;\n\n\t\t\t// render() can be called from within a callback triggered by another render.\n\t\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\t\tconst renderListStack = [];\n\t\t\tconst renderStateStack = [];\n\n\t\t\t// public properties\n\n\t\t\tthis.domElement = canvas;\n\n\t\t\t// Debug configuration container\n\t\t\tthis.debug = {\n\n\t\t\t\t/**\n\t\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t\t * @type {boolean}\n\t\t\t\t */\n\t\t\t\tcheckShaderErrors: true,\n\t\t\t\t/**\n\t\t\t\t * Callback for custom error reporting.\n\t\t\t\t * @type {?Function}\n\t\t\t\t */\n\t\t\t\tonShaderError: null\n\t\t\t};\n\n\t\t\t// clearing\n\n\t\t\tthis.autoClear = true;\n\t\t\tthis.autoClearColor = true;\n\t\t\tthis.autoClearDepth = true;\n\t\t\tthis.autoClearStencil = true;\n\n\t\t\t// scene graph\n\n\t\t\tthis.sortObjects = true;\n\n\t\t\t// user-defined clipping\n\n\t\t\tthis.clippingPlanes = [];\n\t\t\tthis.localClippingEnabled = false;\n\n\t\t\t// physically based shading\n\n\t\t\tthis.outputEncoding = LinearEncoding;\n\n\t\t\t// physical lights\n\n\t\t\tthis.useLegacyLights = true;\n\n\t\t\t// tone mapping\n\n\t\t\tthis.toneMapping = NoToneMapping;\n\t\t\tthis.toneMappingExposure = 1.0;\n\n\t\t\t// internal properties\n\n\t\t\tconst _this = this;\n\n\t\t\tlet _isContextLost = false;\n\n\t\t\t// internal state cache\n\n\t\t\tlet _currentActiveCubeFace = 0;\n\t\t\tlet _currentActiveMipmapLevel = 0;\n\t\t\tlet _currentRenderTarget = null;\n\t\t\tlet _currentMaterialId = - 1;\n\n\t\t\tlet _currentCamera = null;\n\n\t\t\tconst _currentViewport = new Vector4();\n\t\t\tconst _currentScissor = new Vector4();\n\t\t\tlet _currentScissorTest = null;\n\n\t\t\t//\n\n\t\t\tlet _width = canvas.width;\n\t\t\tlet _height = canvas.height;\n\n\t\t\tlet _pixelRatio = 1;\n\t\t\tlet _opaqueSort = null;\n\t\t\tlet _transparentSort = null;\n\n\t\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\t\tlet _scissorTest = false;\n\n\t\t\t// frustum\n\n\t\t\tconst _frustum = new Frustum();\n\n\t\t\t// clipping\n\n\t\t\tlet _clippingEnabled = false;\n\t\t\tlet _localClippingEnabled = false;\n\n\t\t\t// transmission\n\n\t\t\tlet _transmissionRenderTarget = null;\n\n\t\t\t// camera matrices cache\n\n\t\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\t\tconst _vector3 = new Vector3();\n\n\t\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\t\tfunction getTargetPixelRatio() {\n\n\t\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t\t}\n\n\t\t\t// initialize\n\n\t\t\tlet _gl = context;\n\n\t\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tconst contextAttributes = {\n\t\t\t\t\talpha: true,\n\t\t\t\t\tdepth,\n\t\t\t\t\tstencil,\n\t\t\t\t\tantialias,\n\t\t\t\t\tpremultipliedAlpha,\n\t\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\t\tpowerPreference,\n\t\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t\t};\n\n\t\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\t\tthrow error;\n\n\t\t\t}\n\n\t\t\tlet extensions, capabilities, state, info;\n\t\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\t\tfunction initGLContext() {\n\n\t\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\t\textensions.init( capabilities );\n\n\t\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\t\tproperties = new WebGLProperties();\n\t\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\t\tclipping = new WebGLClipping( properties );\n\t\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\t\trenderLists = new WebGLRenderLists();\n\t\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t\t_this.capabilities = capabilities;\n\t\t\t\t_this.extensions = extensions;\n\t\t\t\t_this.properties = properties;\n\t\t\t\t_this.renderLists = renderLists;\n\t\t\t\t_this.shadowMap = shadowMap;\n\t\t\t\t_this.state = state;\n\t\t\t\t_this.info = info;\n\n\t\t\t}\n\n\t\t\tinitGLContext();\n\n\t\t\t// xr\n\n\t\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\t\tthis.xr = xr;\n\n\t\t\t// API\n\n\t\t\tthis.getContext = function () {\n\n\t\t\t\treturn _gl;\n\n\t\t\t};\n\n\t\t\tthis.getContextAttributes = function () {\n\n\t\t\t\treturn _gl.getContextAttributes();\n\n\t\t\t};\n\n\t\t\tthis.forceContextLoss = function () {\n\n\t\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\t\tif ( extension ) extension.loseContext();\n\n\t\t\t};\n\n\t\t\tthis.forceContextRestore = function () {\n\n\t\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t\t};\n\n\t\t\tthis.getPixelRatio = function () {\n\n\t\t\t\treturn _pixelRatio;\n\n\t\t\t};\n\n\t\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\t\tif ( value === undefined ) return;\n\n\t\t\t\t_pixelRatio = value;\n\n\t\t\t\tthis.setSize( _width, _height, false );\n\n\t\t\t};\n\n\t\t\tthis.getSize = function ( target ) {\n\n\t\t\t\treturn target.set( _width, _height );\n\n\t\t\t};\n\n\t\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t_width = width;\n\t\t\t\t_height = height;\n\n\t\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t\t}\n\n\t\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t\t};\n\n\t\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t\t};\n\n\t\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t\t_width = width;\n\t\t\t\t_height = height;\n\n\t\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t\t};\n\n\t\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\t\treturn target.copy( _currentViewport );\n\n\t\t\t};\n\n\t\t\tthis.getViewport = function ( target ) {\n\n\t\t\t\treturn target.copy( _viewport );\n\n\t\t\t};\n\n\t\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t\t};\n\n\t\t\tthis.getScissor = function ( target ) {\n\n\t\t\t\treturn target.copy( _scissor );\n\n\t\t\t};\n\n\t\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t\t};\n\n\t\t\tthis.getScissorTest = function () {\n\n\t\t\t\treturn _scissorTest;\n\n\t\t\t};\n\n\t\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t\t};\n\n\t\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t\t_opaqueSort = method;\n\n\t\t\t};\n\n\t\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t\t_transparentSort = method;\n\n\t\t\t};\n\n\t\t\t// Clearing\n\n\t\t\tthis.getClearColor = function ( target ) {\n\n\t\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t\t};\n\n\t\t\tthis.setClearColor = function () {\n\n\t\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t\t};\n\n\t\t\tthis.getClearAlpha = function () {\n\n\t\t\t\treturn background.getClearAlpha();\n\n\t\t\t};\n\n\t\t\tthis.setClearAlpha = function () {\n\n\t\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t\t};\n\n\t\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\t\tlet bits = 0;\n\n\t\t\t\tif ( color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\tif ( stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t_gl.clear( bits );\n\n\t\t\t};\n\n\t\t\tthis.clearColor = function () {\n\n\t\t\t\tthis.clear( true, false, false );\n\n\t\t\t};\n\n\t\t\tthis.clearDepth = function () {\n\n\t\t\t\tthis.clear( false, true, false );\n\n\t\t\t};\n\n\t\t\tthis.clearStencil = function () {\n\n\t\t\t\tthis.clear( false, false, true );\n\n\t\t\t};\n\n\t\t\t//\n\n\t\t\tthis.dispose = function () {\n\n\t\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\t\trenderLists.dispose();\n\t\t\t\trenderStates.dispose();\n\t\t\t\tproperties.dispose();\n\t\t\t\tcubemaps.dispose();\n\t\t\t\tcubeuvmaps.dispose();\n\t\t\t\tobjects.dispose();\n\t\t\t\tbindingStates.dispose();\n\t\t\t\tuniformsGroups.dispose();\n\t\t\t\tprogramCache.dispose();\n\n\t\t\t\txr.dispose();\n\n\t\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t\t}\n\n\t\t\t\tanimation.stop();\n\n\t\t\t};\n\n\t\t\t// Events\n\n\t\t\tfunction onContextLost( event ) {\n\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t\t_isContextLost = true;\n\n\t\t\t}\n\n\t\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t\t_isContextLost = false;\n\n\t\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\t\tinitGLContext();\n\n\t\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\t\tshadowMap.type = shadowMapType;\n\n\t\t\t}\n\n\t\t\tfunction onContextCreationError( event ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t\t}\n\n\t\t\tfunction onMaterialDispose( event ) {\n\n\t\t\t\tconst material = event.target;\n\n\t\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tdeallocateMaterial( material );\n\n\t\t\t}\n\n\t\t\t// Buffer deallocation\n\n\t\t\tfunction deallocateMaterial( material ) {\n\n\t\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\t\tproperties.remove( material );\n\n\t\t\t}\n\n\n\t\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Buffer rendering\n\n\t\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t\t//\n\n\t\t\t\tlet index = geometry.index;\n\t\t\t\tlet rangeFactor = 1;\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\t\trangeFactor = 2;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst drawRange = geometry.drawRange;\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\t\tif ( group !== null ) {\n\n\t\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t\t}\n\n\t\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t\t//\n\n\t\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\t\tlet attribute;\n\t\t\t\tlet renderer = bufferRenderer;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( object.isMesh ) {\n\n\t\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\t// Compile\n\n\t\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\t\tfunction prepare( material, scene, object ) {\n\n\t\t\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderState = renderStates.get( scene );\n\t\t\t\tcurrentRenderState.init();\n\n\t\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material ) {\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\trenderStateStack.pop();\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t};\n\n\t\t\t// Animation Loop\n\n\t\t\tlet onAnimationFrameCallback = null;\n\n\t\t\tfunction onAnimationFrame( time ) {\n\n\t\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t\t}\n\n\t\t\tfunction onXRSessionStart() {\n\n\t\t\t\tanimation.stop();\n\n\t\t\t}\n\n\t\t\tfunction onXRSessionEnd() {\n\n\t\t\t\tanimation.start();\n\n\t\t\t}\n\n\t\t\tconst animation = new WebGLAnimation();\n\t\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\t\tonAnimationFrameCallback = callback;\n\t\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t\t};\n\n\t\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\t// Rendering\n\n\t\t\tthis.render = function ( scene, camera ) {\n\n\t\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t\t// update scene graph\n\n\t\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t\t}\n\n\t\t\t\t//\n\t\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\t\tcurrentRenderState.init();\n\n\t\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\t\tcurrentRenderList.init();\n\n\t\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\t\tcurrentRenderList.finish();\n\n\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t\t//\n\n\t\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t\t//\n\n\t\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t\t// render scene\n\n\t\t\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t\t// _gl.finish();\n\n\t\t\t\tbindingStates.resetDefaultState();\n\t\t\t\t_currentMaterialId = - 1;\n\t\t\t\t_currentCamera = null;\n\n\t\t\t\trenderStateStack.pop();\n\n\t\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentRenderState = null;\n\n\t\t\t\t}\n\n\t\t\t\trenderListStack.pop();\n\n\t\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentRenderList = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\t\tif ( object.visible === false ) return;\n\n\t\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\t\tif ( visible ) {\n\n\t\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst children = object.children;\n\n\t\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\t\tstate.buffers.depth.setTest( true );\n\t\t\t\tstate.buffers.depth.setMask( true );\n\t\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\t\tstate.setPolygonOffset( false );\n\n\t\t\t}\n\n\t\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1024, 1024, {\n\t\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\t\tsamples: ( isWebGL2 && antialias === true ) ? 4 : 0\n\t\t\t\t\t} );\n\n\t\t\t\t\t// debug\n\n\t\t\t\t\t/*\n\t\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\t\tscene.add( mesh );\n\t\t\t\t\t*/\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t\t\t_this.clear();\n\n\t\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t\t}\n\n\t\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\t}\n\n\t\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t\t// new material\n\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t\tprograms = new Map();\n\t\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t\t}\n\n\t\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\t\treturn program;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t\t}\n\n\t\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t\t}\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t// store the light setup it was created for\n\n\t\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t\t}\n\n\t\t\t\tconst progUniforms = program.getUniforms();\n\t\t\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\t\tmaterialProperties.currentProgram = program;\n\t\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t\t}\n\n\t\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\t\ttextures.resetTextureUnits();\n\n\t\t\t\tconst fog = scene.fog;\n\t\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\t\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\t\tconst useCache =\n\t\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tlet needsProgramChange = false;\n\n\t\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t\tlet refreshProgram = false;\n\t\t\t\tlet refreshMaterial = false;\n\t\t\t\tlet refreshLights = false;\n\n\t\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\t\trefreshProgram = true;\n\t\t\t\t\trefreshMaterial = true;\n\t\t\t\t\trefreshLights = true;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\t\trefreshMaterial = true;\n\n\t\t\t\t}\n\n\t\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// load material specific uniforms\n\t\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t\t}\n\n\t\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t\t}\n\n\t\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t\t// values\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t\t}\n\n\t\t\t\t// common matrices\n\n\t\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t\t// UBOs\n\n\t\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t\t}\n\n\t\t\tfunction materialNeedsLights( material ) {\n\n\t\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t\t}\n\n\t\t\tthis.getActiveCubeFace = function () {\n\n\t\t\t\treturn _currentActiveCubeFace;\n\n\t\t\t};\n\n\t\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t\t};\n\n\t\t\tthis.getRenderTarget = function () {\n\n\t\t\t\treturn _currentRenderTarget;\n\n\t\t\t};\n\n\t\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t\t};\n\n\t\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\t\tlet useDefaultFramebuffer = true;\n\t\t\t\tlet framebuffer = null;\n\t\t\t\tlet isCube = false;\n\t\t\t\tlet isRenderTarget3D = false;\n\n\t\t\t\tif ( renderTarget ) {\n\n\t\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\t\t\tisCube = true;\n\n\t\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t\t}\n\n\t\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t\tstate.viewport( _currentViewport );\n\t\t\t\tstate.scissor( _currentScissor );\n\t\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t\t}\n\n\t\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t\t};\n\n\t\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( framebuffer ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} finally {\n\n\t\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t};\n\n\t\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\t\tconst width = srcTexture.image.width;\n\t\t\t\tconst height = srcTexture.image.height;\n\t\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Generate mipmaps only when copying level 0\n\t\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t};\n\n\t\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\t\tlet glTarget;\n\n\t\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t\t// Generate mipmaps only when copying level 0\n\t\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t};\n\n\t\t\tthis.initTexture = function ( texture ) {\n\n\t\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t};\n\n\t\t\tthis.resetState = function () {\n\n\t\t\t\t_currentActiveCubeFace = 0;\n\t\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t\t_currentRenderTarget = null;\n\n\t\t\t\tstate.reset();\n\t\t\t\tbindingStates.reset();\n\n\t\t\t};\n\n\t\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\t\treturn ! this.useLegacyLights;\n\n\t\t}\n\n\t\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\t\tthis.useLegacyLights = ! value;\n\n\t\t}\n\n\t}\n\n\tclass WebGL1Renderer extends WebGLRenderer {}\n\n\tWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\n\tclass FogExp2 {\n\n\t\tconstructor( color, density = 0.00025 ) {\n\n\t\t\tthis.isFogExp2 = true;\n\n\t\t\tthis.name = '';\n\n\t\t\tthis.color = new Color( color );\n\t\t\tthis.density = density;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new FogExp2( this.color, this.density );\n\n\t\t}\n\n\t\ttoJSON( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\tclass Fog {\n\n\t\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\t\tthis.isFog = true;\n\n\t\t\tthis.name = '';\n\n\t\t\tthis.color = new Color( color );\n\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new Fog( this.color, this.near, this.far );\n\n\t\t}\n\n\t\ttoJSON( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\tclass Scene extends Object3D {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.isScene = true;\n\n\t\t\tthis.type = 'Scene';\n\n\t\t\tthis.background = null;\n\t\t\tthis.environment = null;\n\t\t\tthis.fog = null;\n\n\t\t\tthis.backgroundBlurriness = 0;\n\t\t\tthis.backgroundIntensity = 1;\n\n\t\t\tthis.overrideMaterial = null;\n\n\t\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst data = super.toJSON( meta );\n\n\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tget autoUpdate() { // @deprecated, r144\n\n\t\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\t\treturn this.matrixWorldAutoUpdate;\n\n\t\t}\n\n\t\tset autoUpdate( value ) { // @deprecated, r144\n\n\t\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\t\tthis.matrixWorldAutoUpdate = value;\n\n\t\t}\n\n\t}\n\n\tclass InterleavedBuffer {\n\n\t\tconstructor( array, stride ) {\n\n\t\t\tthis.isInterleavedBuffer = true;\n\n\t\t\tthis.array = array;\n\t\t\tthis.stride = stride;\n\t\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\t\tthis.version = 0;\n\n\t\t\tthis.uuid = generateUUID();\n\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t\tsetUsage( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopyAt( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tset( value, offset = 0 ) {\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone( data ) {\n\n\t\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\t\tdata.arrayBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t\t}\n\n\t\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t\t}\n\n\t\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\t\tconst ib = new this.constructor( array, this.stride );\n\t\t\tib.setUsage( this.usage );\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tonUpload( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON( data ) {\n\n\t\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\t\tdata.arrayBuffers = {};\n\n\t\t\t}\n\n\t\t\t// generate UUID for array buffer if necessary\n\n\t\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t\t}\n\n\t\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\tconst _vector$5 = /*@__PURE__*/ new Vector3();\n\n\tclass InterleavedBufferAttribute {\n\n\t\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\t\tthis.name = '';\n\n\t\t\tthis.data = interleavedBuffer;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.offset = offset;\n\n\t\t\tthis.normalized = normalized;\n\n\t\t}\n\n\t\tget count() {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t\tget array() {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tthis.data.needsUpdate = value;\n\n\t\t}\n\n\t\tapplyMatrix4( m ) {\n\n\t\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t\t_vector$5.applyMatrix4( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tapplyNormalMatrix( m ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t\t_vector$5.applyNormalMatrix( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttransformDirection( m ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t\t_vector$5.transformDirection( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetX( index, x ) {\n\n\t\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetY( index, y ) {\n\n\t\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetZ( index, z ) {\n\n\t\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetW( index, w ) {\n\n\t\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetX( index ) {\n\n\t\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\t\treturn x;\n\n\t\t}\n\n\t\tgetY( index ) {\n\n\t\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\t\treturn y;\n\n\t\t}\n\n\t\tgetZ( index ) {\n\n\t\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\t\treturn z;\n\n\t\t}\n\n\t\tgetW( index ) {\n\n\t\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\t\treturn w;\n\n\t\t}\n\n\t\tsetXY( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tif ( this.normalized ) {\n\n\t\t\t\tx = normalize( x, this.array );\n\t\t\t\ty = normalize( y, this.array );\n\n\t\t\t}\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetXYZ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tif ( this.normalized ) {\n\n\t\t\t\tx = normalize( x, this.array );\n\t\t\t\ty = normalize( y, this.array );\n\t\t\t\tz = normalize( z, this.array );\n\n\t\t\t}\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetXYZW( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tif ( this.normalized ) {\n\n\t\t\t\tx = normalize( x, this.array );\n\t\t\t\ty = normalize( y, this.array );\n\t\t\t\tz = normalize( z, this.array );\n\t\t\t\tw = normalize( w, this.array );\n\n\t\t\t}\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone( data ) {\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttoJSON( data ) {\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\t// save as true interleaved attribute\n\n\t\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tclass SpriteMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isSpriteMaterial = true;\n\n\t\t\tthis.type = 'SpriteMaterial';\n\n\t\t\tthis.color = new Color( 0xffffff );\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.alphaMap = null;\n\n\t\t\tthis.rotation = 0;\n\n\t\t\tthis.sizeAttenuation = true;\n\n\t\t\tthis.transparent = true;\n\n\t\t\tthis.fog = true;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.map = source.map;\n\n\t\t\tthis.alphaMap = source.alphaMap;\n\n\t\t\tthis.rotation = source.rotation;\n\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tlet _geometry;\n\n\tconst _intersectPoint = /*@__PURE__*/ new Vector3();\n\tconst _worldScale = /*@__PURE__*/ new Vector3();\n\tconst _mvPosition = /*@__PURE__*/ new Vector3();\n\n\tconst _alignedPosition = /*@__PURE__*/ new Vector2();\n\tconst _rotatedPosition = /*@__PURE__*/ new Vector2();\n\tconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\n\tconst _vA = /*@__PURE__*/ new Vector3();\n\tconst _vB = /*@__PURE__*/ new Vector3();\n\tconst _vC = /*@__PURE__*/ new Vector3();\n\n\tconst _uvA = /*@__PURE__*/ new Vector2();\n\tconst _uvB = /*@__PURE__*/ new Vector2();\n\tconst _uvC = /*@__PURE__*/ new Vector2();\n\n\tclass Sprite extends Object3D {\n\n\t\tconstructor( material ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isSprite = true;\n\n\t\t\tthis.type = 'Sprite';\n\n\t\t\tif ( _geometry === undefined ) {\n\n\t\t\t\t_geometry = new BufferGeometry();\n\n\t\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t\t] );\n\n\t\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t\t}\n\n\t\t\tthis.geometry = _geometry;\n\t\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t\t}\n\n\t\traycast( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t\t}\n\n\t\t\tconst rotation = this.material.rotation;\n\t\t\tlet sin, cos;\n\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tconst center = this.center;\n\n\t\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t\t_uvA.set( 0, 0 );\n\t\t\t_uvB.set( 1, 0 );\n\t\t\t_uvC.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t\t_uvB.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\t\tthis.material = source.material;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t// to check if rotation is not zero\n\t\tif ( sin !== undefined ) {\n\n\t\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t\t} else {\n\n\t\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t\t}\n\n\n\t\tvertexPosition.copy( mvPosition );\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y;\n\n\t\t// transform to world space\n\t\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n\t}\n\n\tconst _v1$2 = /*@__PURE__*/ new Vector3();\n\tconst _v2$1 = /*@__PURE__*/ new Vector3();\n\n\tclass LOD extends Object3D {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis._currentLevel = 0;\n\n\t\t\tthis.type = 'LOD';\n\n\t\t\tObject.defineProperties( this, {\n\t\t\t\tlevels: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: []\n\t\t\t\t},\n\t\t\t\tisLOD: {\n\t\t\t\t\tvalue: true,\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.autoUpdate = true;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source, false );\n\n\t\t\tconst levels = source.levels;\n\n\t\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tconst level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tconst levels = this.levels;\n\n\t\t\tlet l;\n\n\t\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetCurrentLevel() {\n\n\t\t\treturn this._currentLevel;\n\n\t\t}\n\n\n\n\t\tgetObjectForDistance( distance ) {\n\n\t\t\tconst levels = this.levels;\n\n\t\t\tif ( levels.length > 0 ) {\n\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn levels[ i - 1 ].object;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\traycast( raycaster, intersects ) {\n\n\t\t\tconst levels = this.levels;\n\n\t\t\tif ( levels.length > 0 ) {\n\n\t\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate( camera ) {\n\n\t\t\tconst levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst data = super.toJSON( meta );\n\n\t\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tconst levels = this.levels;\n\n\t\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tconst level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance,\n\t\t\t\t\thysteresis: level.hysteresis\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t}\n\n\tconst _basePosition = /*@__PURE__*/ new Vector3();\n\n\tconst _skinIndex = /*@__PURE__*/ new Vector4();\n\tconst _skinWeight = /*@__PURE__*/ new Vector4();\n\n\tconst _vector3 = /*@__PURE__*/ new Vector3();\n\tconst _matrix4 = /*@__PURE__*/ new Matrix4();\n\tconst _vertex = /*@__PURE__*/ new Vector3();\n\n\tclass SkinnedMesh extends Mesh {\n\n\t\tconstructor( geometry, material ) {\n\n\t\t\tsuper( geometry, material );\n\n\t\t\tthis.isSkinnedMesh = true;\n\n\t\t\tthis.type = 'SkinnedMesh';\n\n\t\t\tthis.bindMode = 'attached';\n\t\t\tthis.bindMatrix = new Matrix4();\n\t\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t}\n\n\t\tcomputeBoundingBox() {\n\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcomputeBoundingSphere() {\n\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.makeEmpty();\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\t\tthis.skeleton = source.skeleton;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tbind( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t\t}\n\n\t\tpose() {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t}\n\n\t\tnormalizeSkinWeights() {\n\n\t\t\tconst vector = new Vector4();\n\n\t\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateMatrixWorld( force ) {\n\n\t\t\tsuper.updateMatrixWorld( force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t}\n\n\t\tapplyBoneTransform( index, vector ) {\n\n\t\t\tconst skeleton = this.skeleton;\n\t\t\tconst geometry = this.geometry;\n\n\t\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\t\tvector.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t\t}\n\n\t\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\t\treturn this.applyBoneTransform( index, vector );\n\n\t\t}\n\n\n\t}\n\n\tclass Bone extends Object3D {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.isBone = true;\n\n\t\t\tthis.type = 'Bone';\n\n\t\t}\n\n\t}\n\n\tclass DataTexture extends Texture {\n\n\t\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\t\tthis.isDataTexture = true;\n\n\t\t\tthis.image = { data: data, width: width, height: height };\n\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\n\t\t}\n\n\t}\n\n\tconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\n\tconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\n\tclass Skeleton {\n\n\t\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\t\tthis.uuid = generateUUID();\n\n\t\t\tthis.bones = bones.slice( 0 );\n\t\t\tthis.boneInverses = boneInverses;\n\t\t\tthis.boneMatrices = null;\n\n\t\t\tthis.boneTexture = null;\n\t\t\tthis.boneTextureSize = 0;\n\n\t\t\tthis.frame = - 1;\n\n\t\t\tthis.init();\n\n\t\t}\n\n\t\tinit() {\n\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\n\t\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t\t// calculate inverse bone matrices if necessary\n\n\t\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\t\tthis.calculateInverses();\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case\n\n\t\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tcalculateInverses() {\n\n\t\t\tthis.boneInverses.length = 0;\n\n\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tconst inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\tpose() {\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tconst bone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tconst bone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate() {\n\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tconst boneMatrices = this.boneMatrices;\n\t\t\tconst boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== null ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t}\n\n\t\tcomputeBoneTexture() {\n\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\tsize = ceilPowerOfTwo( size );\n\t\t\tsize = Math.max( size, 4 );\n\n\t\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\tthis.boneMatrices = boneMatrices;\n\t\t\tthis.boneTexture = boneTexture;\n\t\t\tthis.boneTextureSize = size;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetBoneByName( name ) {\n\n\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tconst bone = this.bones[ i ];\n\n\t\t\t\tif ( bone.name === name ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\tdispose( ) {\n\n\t\t\tif ( this.boneTexture !== null ) {\n\n\t\t\t\tthis.boneTexture.dispose();\n\n\t\t\t\tthis.boneTexture = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfromJSON( json, bones ) {\n\n\t\t\tthis.uuid = json.uuid;\n\n\t\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\t\tconst uuid = json.bones[ i ];\n\t\t\t\tlet bone = bones[ uuid ];\n\n\t\t\t\tif ( bone === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t}\n\n\t\t\t\tthis.bones.push( bone );\n\t\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.init();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Skeleton',\n\t\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t\t},\n\t\t\t\tbones: [],\n\t\t\t\tboneInverses: []\n\t\t\t};\n\n\t\t\tdata.uuid = this.uuid;\n\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\n\t\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\t\tconst bone = bones[ i ];\n\t\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t}\n\n\tclass InstancedBufferAttribute extends BufferAttribute {\n\n\t\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\t\tsuper( array, itemSize, normalized );\n\n\t\t\tthis.isInstancedBufferAttribute = true;\n\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\tdata.isInstancedBufferAttribute = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t}\n\n\tconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\n\tconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\n\tconst _instanceIntersects = [];\n\n\tconst _box3 = /*@__PURE__*/ new Box3();\n\tconst _identity = /*@__PURE__*/ new Matrix4();\n\tconst _mesh = /*@__PURE__*/ new Mesh();\n\tconst _sphere$2 = /*@__PURE__*/ new Sphere();\n\n\tclass InstancedMesh extends Mesh {\n\n\t\tconstructor( geometry, material, count ) {\n\n\t\t\tsuper( geometry, material );\n\n\t\t\tthis.isInstancedMesh = true;\n\n\t\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\t\tthis.instanceColor = null;\n\n\t\t\tthis.count = count;\n\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcomputeBoundingBox() {\n\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst count = this.count;\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcomputeBoundingSphere() {\n\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst count = this.count;\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.makeEmpty();\n\n\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\t\tthis.boundingSphere.union( _sphere$2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\t\tthis.count = source.count;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetColorAt( index, color ) {\n\n\t\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t\t}\n\n\t\tgetMatrixAt( index, matrix ) {\n\n\t\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t\t}\n\n\t\traycast( raycaster, intersects ) {\n\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst raycastTimes = this.count;\n\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\n\t\t\tif ( _mesh.material === undefined ) return;\n\n\t\t\t// test with bounding sphere first\n\n\t\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t\t_sphere$2.copy( this.boundingSphere );\n\t\t\t_sphere$2.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t\t// now test each instance\n\n\t\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t\t// calculate the world matrix for each instance\n\n\t\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t\t// the mesh represents this single instance\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t\t// process the result of raycast\n\n\t\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetColorAt( index, color ) {\n\n\t\t\tif ( this.instanceColor === null ) {\n\n\t\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t\t}\n\n\t\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t\t}\n\n\t\tsetMatrixAt( index, matrix ) {\n\n\t\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t\t}\n\n\t\tupdateMorphTargets() {\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t}\n\n\tclass LineBasicMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isLineBasicMaterial = true;\n\n\t\t\tthis.type = 'LineBasicMaterial';\n\n\t\t\tthis.color = new Color( 0xffffff );\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.linecap = 'round';\n\t\t\tthis.linejoin = 'round';\n\n\t\t\tthis.fog = true;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.map = source.map;\n\n\t\t\tthis.linewidth = source.linewidth;\n\t\t\tthis.linecap = source.linecap;\n\t\t\tthis.linejoin = source.linejoin;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tconst _start$1 = /*@__PURE__*/ new Vector3();\n\tconst _end$1 = /*@__PURE__*/ new Vector3();\n\tconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\n\tconst _ray$1 = /*@__PURE__*/ new Ray();\n\tconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\n\tclass Line extends Object3D {\n\n\t\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isLine = true;\n\n\t\t\tthis.type = 'Line';\n\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\n\t\t\tthis.updateMorphTargets();\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcomputeLineDistances() {\n\n\t\t\tconst geometry = this.geometry;\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\traycast( raycaster, intersects ) {\n\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Line.threshold;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t\t_sphere$1.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tconst vStart = new Vector3();\n\t\t\tconst vEnd = new Vector3();\n\t\t\tconst interSegment = new Vector3();\n\t\t\tconst interRay = new Vector3();\n\t\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateMorphTargets() {\n\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst _start = /*@__PURE__*/ new Vector3();\n\tconst _end = /*@__PURE__*/ new Vector3();\n\n\tclass LineSegments extends Line {\n\n\t\tconstructor( geometry, material ) {\n\n\t\t\tsuper( geometry, material );\n\n\t\t\tthis.isLineSegments = true;\n\n\t\t\tthis.type = 'LineSegments';\n\n\t\t}\n\n\t\tcomputeLineDistances() {\n\n\t\t\tconst geometry = this.geometry;\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass LineLoop extends Line {\n\n\t\tconstructor( geometry, material ) {\n\n\t\t\tsuper( geometry, material );\n\n\t\t\tthis.isLineLoop = true;\n\n\t\t\tthis.type = 'LineLoop';\n\n\t\t}\n\n\t}\n\n\tclass PointsMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isPointsMaterial = true;\n\n\t\t\tthis.type = 'PointsMaterial';\n\n\t\t\tthis.color = new Color( 0xffffff );\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.alphaMap = null;\n\n\t\t\tthis.size = 1;\n\t\t\tthis.sizeAttenuation = true;\n\n\t\t\tthis.fog = true;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.map = source.map;\n\n\t\t\tthis.alphaMap = source.alphaMap;\n\n\t\t\tthis.size = source.size;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\n\tconst _ray = /*@__PURE__*/ new Ray();\n\tconst _sphere = /*@__PURE__*/ new Sphere();\n\tconst _position$2 = /*@__PURE__*/ new Vector3();\n\n\tclass Points extends Object3D {\n\n\t\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isPoints = true;\n\n\t\t\tthis.type = 'Points';\n\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\n\t\t\tthis.updateMorphTargets();\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\traycast( raycaster, intersects ) {\n\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Points.threshold;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere );\n\t\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t\t_sphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateMorphTargets() {\n\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\t\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\tconst intersectPoint = new Vector3();\n\n\t\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tclass VideoTexture extends Texture {\n\n\t\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\t\tthis.isVideoTexture = true;\n\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\t\tthis.generateMipmaps = false;\n\n\t\t\tconst scope = this;\n\n\t\t\tfunction updateVideo() {\n\n\t\t\t\tscope.needsUpdate = true;\n\t\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t\t}\n\n\t\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t\t}\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor( this.image ).copy( this );\n\n\t\t}\n\n\t\tupdate() {\n\n\t\t\tconst video = this.image;\n\t\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tclass FramebufferTexture extends Texture {\n\n\t\tconstructor( width, height, format ) {\n\n\t\t\tsuper( { width, height } );\n\n\t\t\tthis.isFramebufferTexture = true;\n\n\t\t\tthis.format = format;\n\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\n\t\t\tthis.generateMipmaps = false;\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclass CompressedTexture extends Texture {\n\n\t\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\t\tthis.isCompressedTexture = true;\n\n\t\t\tthis.image = { width: width, height: height };\n\t\t\tthis.mipmaps = mipmaps;\n\n\t\t\t// no flipping for cube textures\n\t\t\t// (also flipping doesn't work for compressed textures )\n\n\t\t\tthis.flipY = false;\n\n\t\t\t// can't generate mipmaps for compressed textures\n\t\t\t// mips must be embedded in DDS files\n\n\t\t\tthis.generateMipmaps = false;\n\n\t\t}\n\n\t}\n\n\tclass CompressedArrayTexture extends CompressedTexture {\n\n\t\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\t\tsuper( mipmaps, width, height, format, type );\n\n\t\t\tthis.isCompressedArrayTexture = true;\n\t\t\tthis.image.depth = depth;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\t}\n\n\t}\n\n\tclass CanvasTexture extends Texture {\n\n\t\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\t\tthis.isCanvasTexture = true;\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Extensible curve object.\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\tclass Curve {\n\n\t\tconstructor() {\n\n\t\t\tthis.type = 'Curve';\n\n\t\t\tthis.arcLengthDivisions = 200;\n\n\t\t}\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt( u, optionalTarget ) {\n\n\t\t\tconst t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t, optionalTarget );\n\n\t\t}\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints( divisions = 5 ) {\n\n\t\t\tconst points = [];\n\n\t\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t}\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints( divisions = 5 ) {\n\n\t\t\tconst points = [];\n\n\t\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t}\n\n\t\t// Get total curve arc length\n\n\t\tgetLength() {\n\n\t\t\tconst lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t}\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tconst cache = [];\n\t\t\tlet current, last = this.getPoint( 0 );\n\t\t\tlet sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t}\n\n\t\tupdateArcLengths() {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t}\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping( u, distance ) {\n\n\t\t\tconst arcLengths = this.getLengths();\n\n\t\t\tlet i = 0;\n\t\t\tconst il = arcLengths.length;\n\n\t\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tlet low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tconst lengthBefore = arcLengths[ i ];\n\t\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t}\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent( t, optionalTarget ) {\n\n\t\t\tconst delta = 0.0001;\n\t\t\tlet t1 = t - delta;\n\t\t\tlet t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tconst pt1 = this.getPoint( t1 );\n\t\t\tconst pt2 = this.getPoint( t2 );\n\n\t\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\t\treturn tangent;\n\n\t\t}\n\n\t\tgetTangentAt( u, optionalTarget ) {\n\n\t\t\tconst t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t, optionalTarget );\n\n\t\t}\n\n\t\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tconst normal = new Vector3();\n\n\t\t\tconst tangents = [];\n\t\t\tconst normals = [];\n\t\t\tconst binormals = [];\n\n\t\t\tconst vec = new Vector3();\n\t\t\tconst mat = new Matrix4();\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tconst u = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tlet min = Number.MAX_VALUE;\n\t\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass EllipseCurve extends Curve {\n\n\t\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isEllipseCurve = true;\n\n\t\t\tthis.type = 'EllipseCurve';\n\n\t\t\tthis.aX = aX;\n\t\t\tthis.aY = aY;\n\n\t\t\tthis.xRadius = xRadius;\n\t\t\tthis.yRadius = yRadius;\n\n\t\t\tthis.aStartAngle = aStartAngle;\n\t\t\tthis.aEndAngle = aEndAngle;\n\n\t\t\tthis.aClockwise = aClockwise;\n\n\t\t\tthis.aRotation = aRotation;\n\n\t\t}\n\n\t\tgetPoint( t, optionalTarget ) {\n\n\t\t\tconst point = optionalTarget || new Vector2();\n\n\t\t\tconst twoPi = Math.PI * 2;\n\t\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\t\tif ( samePoints ) {\n\n\t\t\t\t\tdeltaAngle = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\t\tconst tx = x - this.aX;\n\t\t\t\tconst ty = y - this.aY;\n\n\t\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t\t}\n\n\t\t\treturn point.set( x, y );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.aX = source.aX;\n\t\t\tthis.aY = source.aY;\n\n\t\t\tthis.xRadius = source.xRadius;\n\t\t\tthis.yRadius = source.yRadius;\n\n\t\t\tthis.aStartAngle = source.aStartAngle;\n\t\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\t\tthis.aClockwise = source.aClockwise;\n\n\t\t\tthis.aRotation = source.aRotation;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.aX = this.aX;\n\t\t\tdata.aY = this.aY;\n\n\t\t\tdata.xRadius = this.xRadius;\n\t\t\tdata.yRadius = this.yRadius;\n\n\t\t\tdata.aStartAngle = this.aStartAngle;\n\t\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\t\tdata.aClockwise = this.aClockwise;\n\n\t\t\tdata.aRotation = this.aRotation;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.aX = json.aX;\n\t\t\tthis.aY = json.aY;\n\n\t\t\tthis.xRadius = json.xRadius;\n\t\t\tthis.yRadius = json.yRadius;\n\n\t\t\tthis.aStartAngle = json.aStartAngle;\n\t\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\t\tthis.aClockwise = json.aClockwise;\n\n\t\t\tthis.aRotation = json.aRotation;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass ArcCurve extends EllipseCurve {\n\n\t\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t\tthis.isArcCurve = true;\n\n\t\t\tthis.type = 'ArcCurve';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tconst t2 = t * t;\n\t\t\t\tconst t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst tmp = /*@__PURE__*/ new Vector3();\n\tconst px = /*@__PURE__*/ new CubicPoly();\n\tconst py = /*@__PURE__*/ new CubicPoly();\n\tconst pz = /*@__PURE__*/ new CubicPoly();\n\n\tclass CatmullRomCurve3 extends Curve {\n\n\t\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isCatmullRomCurve3 = true;\n\n\t\t\tthis.type = 'CatmullRomCurve3';\n\n\t\t\tthis.points = points;\n\t\t\tthis.closed = closed;\n\t\t\tthis.curveType = curveType;\n\t\t\tthis.tension = tension;\n\n\t\t}\n\n\t\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\t\tconst point = optionalTarget;\n\n\t\t\tconst points = this.points;\n\t\t\tconst l = points.length;\n\n\t\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\t\tlet intPoint = Math.floor( p );\n\t\t\tlet weight = p - intPoint;\n\n\t\t\tif ( this.closed ) {\n\n\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\t\tintPoint = l - 2;\n\t\t\t\tweight = 1;\n\n\t\t\t}\n\n\t\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t\t} else {\n\n\t\t\t\t// extrapolate first point\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\t\tp0 = tmp;\n\n\t\t\t}\n\n\t\t\tconst p1 = points[ intPoint % l ];\n\t\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t\t} else {\n\n\t\t\t\t// extrapolate last point\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\t\tp3 = tmp;\n\n\t\t\t}\n\n\t\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t\t// safety check for repeated points\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t\t}\n\n\t\t\tpoint.set(\n\t\t\t\tpx.calc( weight ),\n\t\t\t\tpy.calc( weight ),\n\t\t\t\tpz.calc( weight )\n\t\t\t);\n\n\t\t\treturn point;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.points = [];\n\n\t\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = source.points[ i ];\n\n\t\t\t\tthis.points.push( point.clone() );\n\n\t\t\t}\n\n\t\t\tthis.closed = source.closed;\n\t\t\tthis.curveType = source.curveType;\n\t\t\tthis.tension = source.tension;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.points = [];\n\n\t\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = this.points[ i ];\n\t\t\t\tdata.points.push( point.toArray() );\n\n\t\t\t}\n\n\t\t\tdata.closed = this.closed;\n\t\t\tdata.curveType = this.curveType;\n\t\t\tdata.tension = this.tension;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.points = [];\n\n\t\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = json.points[ i ];\n\t\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t\t}\n\n\t\t\tthis.closed = json.closed;\n\t\t\tthis.curveType = json.curveType;\n\t\t\tthis.tension = json.tension;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Bezier Curves formulas obtained from\n\t * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tconst v0 = ( p2 - p0 ) * 0.5;\n\t\tconst v1 = ( p3 - p1 ) * 0.5;\n\t\tconst t2 = t * t;\n\t\tconst t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tconst k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tconst k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tconst k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\tclass CubicBezierCurve extends Curve {\n\n\t\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isCubicBezierCurve = true;\n\n\t\t\tthis.type = 'CubicBezierCurve';\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\n\t\t}\n\n\t\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\t\tconst point = optionalTarget;\n\n\t\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\t\tpoint.set(\n\t\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t\t);\n\n\t\t\treturn point;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.v0.copy( source.v0 );\n\t\t\tthis.v1.copy( source.v1 );\n\t\t\tthis.v2.copy( source.v2 );\n\t\t\tthis.v3.copy( source.v3 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.v0.fromArray( json.v0 );\n\t\t\tthis.v1.fromArray( json.v1 );\n\t\t\tthis.v2.fromArray( json.v2 );\n\t\t\tthis.v3.fromArray( json.v3 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass CubicBezierCurve3 extends Curve {\n\n\t\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isCubicBezierCurve3 = true;\n\n\t\t\tthis.type = 'CubicBezierCurve3';\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\n\t\t}\n\n\t\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\t\tconst point = optionalTarget;\n\n\t\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\t\tpoint.set(\n\t\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t\t);\n\n\t\t\treturn point;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.v0.copy( source.v0 );\n\t\t\tthis.v1.copy( source.v1 );\n\t\t\tthis.v2.copy( source.v2 );\n\t\t\tthis.v3.copy( source.v3 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.v0.fromArray( json.v0 );\n\t\t\tthis.v1.fromArray( json.v1 );\n\t\t\tthis.v2.fromArray( json.v2 );\n\t\t\tthis.v3.fromArray( json.v3 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass LineCurve extends Curve {\n\n\t\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isLineCurve = true;\n\n\t\t\tthis.type = 'LineCurve';\n\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t}\n\n\t\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif ( t === 1 ) {\n\n\t\t\t\tpoint.copy( this.v2 );\n\n\t\t\t} else {\n\n\t\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t\t}\n\n\t\t\treturn point;\n\n\t\t}\n\n\t\t// Line curve is linear, so we can overwrite default getPointAt\n\t\tgetPointAt( u, optionalTarget ) {\n\n\t\t\treturn this.getPoint( u, optionalTarget );\n\n\t\t}\n\n\t\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t\t}\n\n\t\tgetTangentAt( u, optionalTarget ) {\n\n\t\t\treturn this.getTangent( u, optionalTarget );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.v1.copy( source.v1 );\n\t\t\tthis.v2.copy( source.v2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.v1.fromArray( json.v1 );\n\t\t\tthis.v2.fromArray( json.v2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass LineCurve3 extends Curve {\n\n\t\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isLineCurve3 = true;\n\n\t\t\tthis.type = 'LineCurve3';\n\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t}\n\t\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif ( t === 1 ) {\n\n\t\t\t\tpoint.copy( this.v2 );\n\n\t\t\t} else {\n\n\t\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t\t}\n\n\t\t\treturn point;\n\n\t\t}\n\t\t// Line curve is linear, so we can overwrite default getPointAt\n\t\tgetPointAt( u, optionalTarget ) {\n\n\t\t\treturn this.getPoint( u, optionalTarget );\n\n\t\t}\n\n\t\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t\t}\n\n\t\tgetTangentAt( u, optionalTarget ) {\n\n\t\t\treturn this.getTangent( u, optionalTarget );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.v1.copy( source.v1 );\n\t\t\tthis.v2.copy( source.v2 );\n\n\t\t\treturn this;\n\n\t\t}\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.v1.fromArray( json.v1 );\n\t\t\tthis.v2.fromArray( json.v2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass QuadraticBezierCurve extends Curve {\n\n\t\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isQuadraticBezierCurve = true;\n\n\t\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t}\n\n\t\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\t\tconst point = optionalTarget;\n\n\t\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\t\tpoint.set(\n\t\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t\t);\n\n\t\t\treturn point;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.v0.copy( source.v0 );\n\t\t\tthis.v1.copy( source.v1 );\n\t\t\tthis.v2.copy( source.v2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.v0.fromArray( json.v0 );\n\t\t\tthis.v1.fromArray( json.v1 );\n\t\t\tthis.v2.fromArray( json.v2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass QuadraticBezierCurve3 extends Curve {\n\n\t\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t}\n\n\t\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\t\tconst point = optionalTarget;\n\n\t\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\t\tpoint.set(\n\t\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t\t);\n\n\t\t\treturn point;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.v0.copy( source.v0 );\n\t\t\tthis.v1.copy( source.v1 );\n\t\t\tthis.v2.copy( source.v2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.v0.fromArray( json.v0 );\n\t\t\tthis.v1.fromArray( json.v1 );\n\t\t\tthis.v2.fromArray( json.v2 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass SplineCurve extends Curve {\n\n\t\tconstructor( points = [] ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isSplineCurve = true;\n\n\t\t\tthis.type = 'SplineCurve';\n\n\t\t\tthis.points = points;\n\n\t\t}\n\n\t\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\t\tconst point = optionalTarget;\n\n\t\t\tconst points = this.points;\n\t\t\tconst p = ( points.length - 1 ) * t;\n\n\t\t\tconst intPoint = Math.floor( p );\n\t\t\tconst weight = p - intPoint;\n\n\t\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\t\tconst p1 = points[ intPoint ];\n\t\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\t\tpoint.set(\n\t\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t\t);\n\n\t\t\treturn point;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.points = [];\n\n\t\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = source.points[ i ];\n\n\t\t\t\tthis.points.push( point.clone() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.points = [];\n\n\t\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = this.points[ i ];\n\t\t\t\tdata.points.push( point.toArray() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.points = [];\n\n\t\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = json.points[ i ];\n\t\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tclass CurvePath extends Curve {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'CurvePath';\n\n\t\t\tthis.curves = [];\n\t\t\tthis.autoClose = false; // Automatically closes the path\n\n\t\t}\n\n\t\tadd( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t}\n\n\t\tclosePath() {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint( t, optionalTarget ) {\n\n\t\t\tconst d = t * this.getLength();\n\t\t\tconst curveLengths = this.getCurveLengths();\n\t\t\tlet i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t}\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength() {\n\n\t\t\tconst lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t}\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths() {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t}\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths() {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tconst lengths = [];\n\t\t\tlet sums = 0;\n\n\t\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t}\n\n\t\tgetSpacedPoints( divisions = 40 ) {\n\n\t\t\tconst points = [];\n\n\t\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t}\n\n\t\tgetPoints( divisions = 12 ) {\n\n\t\t\tconst points = [];\n\t\t\tlet last;\n\n\t\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tconst curve = curves[ i ];\n\t\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t\t: divisions;\n\n\t\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\t\tconst curve = source.curves[ i ];\n\n\t\t\t\tthis.curves.push( curve.clone() );\n\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tconst curve = this.curves[ i ];\n\t\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\t\tconst curve = json.curves[ i ];\n\t\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass Path extends CurvePath {\n\n\t\tconstructor( points ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'Path';\n\n\t\t\tthis.currentPoint = new Vector2();\n\n\t\t\tif ( points ) {\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetFromPoints( points ) {\n\n\t\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmoveTo( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tlineTo( x, y ) {\n\n\t\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\t\tconst curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tconst curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tconst curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tconst lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass LatheGeometry extends BufferGeometry {\n\n\t\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'LatheGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tpoints: points,\n\t\t\t\tsegments: segments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength\n\t\t\t};\n\n\t\t\tsegments = Math.floor( segments );\n\n\t\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t\t// buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst uvs = [];\n\t\t\tconst initNormals = [];\n\t\t\tconst normals = [];\n\n\t\t\t// helper variables\n\n\t\t\tconst inverseSegments = 1.0 / segments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst curNormal = new Vector3();\n\t\t\tconst prevNormal = new Vector3();\n\t\t\tlet dx = 0;\n\t\t\tlet dy = 0;\n\n\t\t\t// pre-compute normals for initial \"meridian\"\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tswitch ( j ) {\n\n\t\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices, uvs and normals\n\n\t\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\t\tconst sin = Math.sin( phi );\n\t\t\t\tconst cos = Math.cos( phi );\n\n\t\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuv.x = i / segments;\n\t\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\t\tconst a = base;\n\t\t\t\t\tconst b = base + points.length;\n\t\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\t\tconst d = base + 1;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( c, d, b );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t\t}\n\n\t}\n\n\tclass CapsuleGeometry extends LatheGeometry {\n\n\t\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\t\tconst path = new Path();\n\t\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\t\tthis.type = 'CapsuleGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: length,\n\t\t\t\tcapSegments: capSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t};\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t\t}\n\n\t}\n\n\tclass CircleGeometry extends BufferGeometry {\n\n\t\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'CircleGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tsegments: segments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\n\t\t\tsegments = Math.max( 3, segments );\n\n\t\t\t// buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\t// helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2();\n\n\t\t\t// center point\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t\t}\n\n\t}\n\n\tclass CylinderGeometry extends BufferGeometry {\n\n\t\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'CylinderGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradiusTop: radiusTop,\n\t\t\t\tradiusBottom: radiusBottom,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\n\t\t\tconst scope = this;\n\n\t\t\tradialSegments = Math.floor( radialSegments );\n\t\t\theightSegments = Math.floor( heightSegments );\n\n\t\t\t// buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\t// helper variables\n\n\t\t\tlet index = 0;\n\t\t\tconst indexArray = [];\n\t\t\tconst halfHeight = height / 2;\n\t\t\tlet groupStart = 0;\n\n\t\t\t// generate geometry\n\n\t\t\tgenerateTorso();\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t\tfunction generateTorso() {\n\n\t\t\t\tconst normal = new Vector3();\n\t\t\t\tconst vertex = new Vector3();\n\n\t\t\t\tlet groupCount = 0;\n\n\t\t\t\t// this will be used to calculate the normal\n\t\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t\t// generate vertices, normals and uvs\n\n\t\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\t\tconst indexRow = [];\n\n\t\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t\t// vertex\n\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t\t// normal\n\n\t\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t\t// uv\n\n\t\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t\t}\n\n\t\t\t\t// generate indices\n\n\t\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t\t// faces\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t\t// update group counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t\t// calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\n\t\t\t}\n\n\t\t\tfunction generateCap( top ) {\n\n\t\t\t\t// save the index of the first center vertex\n\t\t\t\tconst centerIndexStart = index;\n\n\t\t\t\tconst uv = new Vector2();\n\t\t\t\tconst vertex = new Vector3();\n\n\t\t\t\tlet groupCount = 0;\n\n\t\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t\t// increase index\n\n\t\t\t\t\tindex ++;\n\n\t\t\t\t}\n\n\t\t\t\t// save the index of the last center vertex\n\t\t\t\tconst centerIndexEnd = index;\n\n\t\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t\t// increase index\n\n\t\t\t\t\tindex ++;\n\n\t\t\t\t}\n\n\t\t\t\t// generate indices\n\n\t\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t\t// face top\n\n\t\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// face bottom\n\n\t\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t}\n\n\t\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t\t// calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t\t}\n\n\t}\n\n\tclass ConeGeometry extends CylinderGeometry {\n\n\t\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\t\tthis.type = 'ConeGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t\t}\n\n\t}\n\n\tclass PolyhedronGeometry extends BufferGeometry {\n\n\t\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'PolyhedronGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tvertices: vertices,\n\t\t\t\tindices: indices,\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\n\t\t\t// default buffer data\n\n\t\t\tconst vertexBuffer = [];\n\t\t\tconst uvBuffer = [];\n\n\t\t\t// the subdivision creates the vertex buffer data\n\n\t\t\tsubdivide( detail );\n\n\t\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\t\tapplyRadius( radius );\n\n\t\t\t// finally, create the uv data\n\n\t\t\tgenerateUVs();\n\n\t\t\t// build non-indexed geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\t\tif ( detail === 0 ) {\n\n\t\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t\t} else {\n\n\t\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t\t}\n\n\t\t\t// helper functions\n\n\t\t\tfunction subdivide( detail ) {\n\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3();\n\n\t\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t// get the vertices of the face\n\n\t\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t\t// perform subdivision\n\n\t\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\t\tconst cols = detail + 1;\n\n\t\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\t\tconst v = [];\n\n\t\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\t\tv[ i ] = [];\n\n\t\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\t\tconst rows = cols - i;\n\n\t\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// construct all of the faces\n\n\t\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction applyRadius( radius ) {\n\n\t\t\t\tconst vertex = new Vector3();\n\n\t\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\n\t\t\t\tconst vertex = new Vector3();\n\n\t\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t\t}\n\n\t\t\t\tcorrectUVs();\n\n\t\t\t\tcorrectSeam();\n\n\t\t\t}\n\n\t\t\tfunction correctSeam() {\n\n\t\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t\t// uv data of a single face\n\n\t\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction pushVertex( vertex ) {\n\n\t\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\t\tconst stride = index * 3;\n\n\t\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t\t}\n\n\t\t\tfunction correctUVs() {\n\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3();\n\n\t\t\t\tconst centroid = new Vector3();\n\n\t\t\t\tconst uvA = new Vector2();\n\t\t\t\tconst uvB = new Vector2();\n\t\t\t\tconst uvC = new Vector2();\n\n\t\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\t\tfunction azimuth( vector ) {\n\n\t\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t\t}\n\n\n\t\t\t// Angle above the XZ plane.\n\n\t\t\tfunction inclination( vector ) {\n\n\t\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t\t}\n\n\t}\n\n\tclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\t\tconstructor( radius = 1, detail = 0 ) {\n\n\t\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\t\tconst r = 1 / t;\n\n\t\t\tconst vertices = [\n\n\t\t\t\t// (±1, ±1, ±1)\n\t\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t\t- t, 0, r, t, 0, r\n\t\t\t];\n\n\t\t\tconst indices = [\n\t\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t\t];\n\n\t\t\tsuper( vertices, indices, radius, detail );\n\n\t\t\tthis.type = 'DodecahedronGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t\t}\n\n\t}\n\n\tconst _v0 = /*@__PURE__*/ new Vector3();\n\tconst _v1$1 = /*@__PURE__*/ new Vector3();\n\tconst _normal = /*@__PURE__*/ new Vector3();\n\tconst _triangle = /*@__PURE__*/ new Triangle();\n\n\tclass EdgesGeometry extends BufferGeometry {\n\n\t\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'EdgesGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tgeometry: geometry,\n\t\t\t\tthresholdAngle: thresholdAngle\n\t\t\t};\n\n\t\t\tif ( geometry !== null ) {\n\n\t\t\t\tconst precisionPoints = 4;\n\t\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\t\tconst hashes = new Array( 3 );\n\n\t\t\t\tconst edgeData = {};\n\t\t\t\tconst vertices = [];\n\t\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t\t// skip degenerate triangles\n\t\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// iterate over every edge\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass Shape extends Path {\n\n\t\tconstructor( points ) {\n\n\t\t\tsuper( points );\n\n\t\t\tthis.uuid = generateUUID();\n\n\t\t\tthis.type = 'Shape';\n\n\t\t\tthis.holes = [];\n\n\t\t}\n\n\t\tgetPointsHoles( divisions ) {\n\n\t\t\tconst holesPts = [];\n\n\t\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t}\n\n\t\t// get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractPoints( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\t\tconst hole = source.holes[ i ];\n\n\t\t\t\tthis.holes.push( hole.clone() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tconst hole = this.holes[ i ];\n\t\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tsuper.fromJSON( json );\n\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\t\tconst hole = json.holes[ i ];\n\t\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Port from https://github.com/mapbox/earcut (v2.2.4)\n\t */\n\n\tconst Earcut = {\n\n\t\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\t\tconst triangles = [];\n\n\t\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\t\tif ( data.length > 80 * dim ) {\n\n\t\t\t\tminX = maxX = data[ 0 ];\n\t\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\t\tx = data[ i ];\n\t\t\t\t\ty = data[ i + 1 ];\n\t\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t\t}\n\n\t\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t\t}\n\n\t\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\t\treturn triangles;\n\n\t\t}\n\n\t};\n\n\t// create a circular doubly linked list from polygon points in the specified winding order\n\tfunction linkedList( data, start, end, dim, clockwise ) {\n\n\t\tlet i, last;\n\n\t\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t\t} else {\n\n\t\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t\t}\n\n\t\tif ( last && equals( last, last.next ) ) {\n\n\t\t\tremoveNode( last );\n\t\t\tlast = last.next;\n\n\t\t}\n\n\t\treturn last;\n\n\t}\n\n\t// eliminate colinear or duplicate points\n\tfunction filterPoints( start, end ) {\n\n\t\tif ( ! start ) return start;\n\t\tif ( ! end ) end = start;\n\n\t\tlet p = start,\n\t\t\tagain;\n\t\tdo {\n\n\t\t\tagain = false;\n\n\t\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\t\tremoveNode( p );\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif ( p === p.next ) break;\n\t\t\t\tagain = true;\n\n\t\t\t} else {\n\n\t\t\t\tp = p.next;\n\n\t\t\t}\n\n\t\t} while ( again || p !== end );\n\n\t\treturn end;\n\n\t}\n\n\t// main ear slicing loop which triangulates a polygon (given as a linked list)\n\tfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\t\tif ( ! ear ) return;\n\n\t\t// interlink polygon nodes in z-order\n\t\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\t\tlet stop = ear,\n\t\t\tprev, next;\n\n\t\t// iterate through ears, slicing them one by one\n\t\twhile ( ear.prev !== ear.next ) {\n\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\t\tremoveNode( ear );\n\n\t\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tear = next;\n\n\t\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\t\tif ( ear === stop ) {\n\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif ( ! pass ) {\n\n\t\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// check whether a polygon node forms a valid ear with adjacent nodes\n\tfunction isEar( ear ) {\n\n\t\tconst a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t\t// now make sure we don't have other points inside the potential ear\n\t\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t\t// triangle bbox; min & max are calculated like this for speed\n\t\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t\tlet p = c.next;\n\t\twhile ( p !== a ) {\n\n\t\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\t\tp = p.next;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\t\tconst a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t\t// triangle bbox; min & max are calculated like this for speed\n\t\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t\t// z-order range for the current triangle bbox;\n\t\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\t\tlet p = ear.prevZ,\n\t\t\tn = ear.nextZ;\n\n\t\t// look for points inside the triangle in both directions\n\t\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\t\tp = p.prevZ;\n\n\t\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\t// look for remaining points in decreasing z-order\n\t\twhile ( p && p.z >= minZ ) {\n\n\t\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\t\tp = p.prevZ;\n\n\t\t}\n\n\t\t// look for remaining points in increasing z-order\n\t\twhile ( n && n.z <= maxZ ) {\n\n\t\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t// go through all polygon nodes and cure small local self-intersections\n\tfunction cureLocalIntersections( start, triangles, dim ) {\n\n\t\tlet p = start;\n\t\tdo {\n\n\t\t\tconst a = p.prev,\n\t\t\t\tb = p.next.next;\n\n\t\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t\t// remove two nodes involved\n\t\t\t\tremoveNode( p );\n\t\t\t\tremoveNode( p.next );\n\n\t\t\t\tp = start = b;\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn filterPoints( p );\n\n\t}\n\n\t// try splitting polygon into two and triangulate them independently\n\tfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tlet a = start;\n\t\tdo {\n\n\t\t\tlet b = a.next.next;\n\t\t\twhile ( b !== a.prev ) {\n\n\t\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t\t// filter colinear points around the cuts\n\t\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t\t// run earcut on each half\n\t\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\n\t\t\t}\n\n\t\t\ta = a.next;\n\n\t\t} while ( a !== start );\n\n\t}\n\n\t// link every hole into the outer loop, producing a single-ring polygon without holes\n\tfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\t\tconst queue = [];\n\t\tlet i, len, start, end, list;\n\n\t\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\t\tstart = holeIndices[ i ] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\t\tlist = linkedList( data, start, end, dim, false );\n\t\t\tif ( list === list.next ) list.steiner = true;\n\t\t\tqueue.push( getLeftmost( list ) );\n\n\t\t}\n\n\t\tqueue.sort( compareX );\n\n\t\t// process holes from left to right\n\t\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t\t}\n\n\t\treturn outerNode;\n\n\t}\n\n\tfunction compareX( a, b ) {\n\n\t\treturn a.x - b.x;\n\n\t}\n\n\t// find a bridge between vertices that connects hole with an outer ring and link it\n\tfunction eliminateHole( hole, outerNode ) {\n\n\t\tconst bridge = findHoleBridge( hole, outerNode );\n\t\tif ( ! bridge ) {\n\n\t\t\treturn outerNode;\n\n\t\t}\n\n\t\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\t\treturn filterPoints( bridge, bridge.next );\n\n\t}\n\n\t// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\tfunction findHoleBridge( hole, outerNode ) {\n\n\t\tlet p = outerNode,\n\t\t\tqx = - Infinity,\n\t\t\tm;\n\n\t\tconst hx = hole.x, hy = hole.y;\n\n\t\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\t\tdo {\n\n\t\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\t\tqx = x;\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== outerNode );\n\n\t\tif ( ! m ) return null;\n\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tconst stop = m,\n\t\t\tmx = m.x,\n\t\t\tmy = m.y;\n\t\tlet tanMin = Infinity, tan;\n\n\t\tp = m;\n\n\t\tdo {\n\n\t\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== stop );\n\n\t\treturn m;\n\n\t}\n\n\t// whether sector in vertex m contains sector in vertex p in the same coordinates\n\tfunction sectorContainsSector( m, p ) {\n\n\t\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n\t}\n\n\t// interlink polygon nodes in z-order\n\tfunction indexCurve( start, minX, minY, invSize ) {\n\n\t\tlet p = start;\n\t\tdo {\n\n\t\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\n\t\tsortLinked( p );\n\n\t}\n\n\t// Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\tfunction sortLinked( list ) {\n\n\t\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\t\tinSize = 1;\n\n\t\tdo {\n\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile ( p ) {\n\n\t\t\t\tnumMerges ++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\t\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\t\tpSize ++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif ( ! q ) break;\n\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize --;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize --;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\t\telse list = e;\n\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\n\t\t} while ( numMerges > 1 );\n\n\t\treturn list;\n\n\t}\n\n\t// z-order of a point given coords and inverse of the longer side of data bbox\n\tfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = ( x - minX ) * invSize | 0;\n\t\ty = ( y - minY ) * invSize | 0;\n\n\t\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\t\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\t\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\t\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\t\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\t\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\t\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\t\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\t\treturn x | ( y << 1 );\n\n\t}\n\n\t// find the leftmost node of a polygon ring\n\tfunction getLeftmost( start ) {\n\n\t\tlet p = start,\n\t\t\tleftmost = start;\n\t\tdo {\n\n\t\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn leftmost;\n\n\t}\n\n\t// check if a point lies within a convex triangle\n\tfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\t\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n\t           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n\t           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n\t}\n\n\t// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\tfunction isValidDiagonal( a, b ) {\n\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n\t}\n\n\t// signed area of a triangle\n\tfunction area( p, q, r ) {\n\n\t\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n\t}\n\n\t// check if two points are equal\n\tfunction equals( p1, p2 ) {\n\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\n\t}\n\n\t// check if two segments intersect\n\tfunction intersects( p1, q1, p2, q2 ) {\n\n\t\tconst o1 = sign( area( p1, q1, p2 ) );\n\t\tconst o2 = sign( area( p1, q1, q2 ) );\n\t\tconst o3 = sign( area( p2, q2, p1 ) );\n\t\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\t\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\t\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\t\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\t\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\t\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\n\t}\n\n\t// for collinear points p, q, r, check if point q lies on segment pr\n\tfunction onSegment( p, q, r ) {\n\n\t\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n\t}\n\n\tfunction sign( num ) {\n\n\t\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n\t}\n\n\t// check if a polygon diagonal intersects any polygon segments\n\tfunction intersectsPolygon( a, b ) {\n\n\t\tlet p = a;\n\t\tdo {\n\n\t\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn false;\n\n\t}\n\n\t// check if a polygon diagonal is locally inside the polygon\n\tfunction locallyInside( a, b ) {\n\n\t\treturn area( a.prev, a, a.next ) < 0 ?\n\t\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n\t}\n\n\t// check if the middle point of a polygon diagonal is inside the polygon\n\tfunction middleInside( a, b ) {\n\n\t\tlet p = a,\n\t\t\tinside = false;\n\t\tconst px = ( a.x + b.x ) / 2,\n\t\t\tpy = ( a.y + b.y ) / 2;\n\t\tdo {\n\n\t\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\t\tinside = ! inside;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn inside;\n\n\t}\n\n\t// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\tfunction splitPolygon( a, b ) {\n\n\t\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\t\tan = a.next,\n\t\t\tbp = b.prev;\n\n\t\ta.next = b;\n\t\tb.prev = a;\n\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\n\t\treturn b2;\n\n\t}\n\n\t// create a node and optionally link it with previous one (in a circular doubly linked list)\n\tfunction insertNode( i, x, y, last ) {\n\n\t\tconst p = new Node( i, x, y );\n\n\t\tif ( ! last ) {\n\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\n\t\t} else {\n\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\n\t\t}\n\n\t\treturn p;\n\n\t}\n\n\tfunction removeNode( p ) {\n\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\n\t\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\t\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n\t}\n\n\tfunction Node( i, x, y ) {\n\n\t\t// vertex index in coordinates array\n\t\tthis.i = i;\n\n\t\t// vertex coordinates\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\t// previous and next vertex nodes in a polygon ring\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\n\t\t// z-order curve value\n\t\tthis.z = 0;\n\n\t\t// previous and next nodes in z-order\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null;\n\n\t\t// indicates whether this is a steiner point\n\t\tthis.steiner = false;\n\n\t}\n\n\tfunction signedArea( data, start, end, dim ) {\n\n\t\tlet sum = 0;\n\t\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\t\tj = i;\n\n\t\t}\n\n\t\treturn sum;\n\n\t}\n\n\tclass ShapeUtils {\n\n\t\t// calculate area of the contour polygon\n\n\t\tstatic area( contour ) {\n\n\t\t\tconst n = contour.length;\n\t\t\tlet a = 0.0;\n\n\t\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t}\n\n\t\tstatic isClockWise( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t}\n\n\t\tstatic triangulateShape( contour, holes ) {\n\n\t\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\t\tconst holeIndices = []; // array of hole indices\n\t\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\taddContour( vertices, contour );\n\n\t\t\t//\n\n\t\t\tlet holeIndex = contour.length;\n\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\t\tholeIndices.push( holeIndex );\n\t\t\t\tholeIndex += holes[ i ].length;\n\t\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t\t}\n\n\t\t\treturn faces;\n\n\t\t}\n\n\t}\n\n\tfunction removeDupEndPts( points ) {\n\n\t\tconst l = points.length;\n\n\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.pop();\n\n\t\t}\n\n\t}\n\n\tfunction addContour( vertices, contour ) {\n\n\t\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\t\tvertices.push( contour[ i ].x );\n\t\t\tvertices.push( contour[ i ].y );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  depth: <float>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float>, // how far from shape outline does bevel start\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\tclass ExtrudeGeometry extends BufferGeometry {\n\n\t\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'ExtrudeGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\toptions: options\n\t\t\t};\n\n\t\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\t\tconst scope = this;\n\n\t\t\tconst verticesArray = [];\n\t\t\tconst uvArray = [];\n\n\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = shapes[ i ];\n\t\t\t\taddShape( shape );\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\t\tthis.computeVertexNormals();\n\n\t\t\t// functions\n\n\t\t\tfunction addShape( shape ) {\n\n\t\t\t\tconst placeholder = [];\n\n\t\t\t\t// options\n\n\t\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t\t//\n\n\t\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\t\tif ( extrudePath ) {\n\n\t\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\t\textrudeByPath = true;\n\t\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\t\tbinormal = new Vector3();\n\t\t\t\t\tnormal = new Vector3();\n\t\t\t\t\tposition2 = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\t\tbevelSegments = 0;\n\t\t\t\t\tbevelThickness = 0;\n\t\t\t\t\tbevelSize = 0;\n\t\t\t\t\tbevelOffset = 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Variables initialization\n\n\t\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\t\tlet vertices = shapePoints.shape;\n\t\t\t\tconst holes = shapePoints.holes;\n\n\t\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\t\tif ( reverse ) {\n\n\t\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t\t/* Vertices */\n\n\t\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t\t}\n\n\n\t\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t\t}\n\n\t\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t\t// Find directions for point movement\n\n\n\t\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t\t//\n\t\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t\t// check for collinear edges\n\t\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not collinear\n\n\t\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t\t}\n\n\n\t\t\t\tconst contourMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tconst holesMovements = [];\n\t\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\toneHoleMovements = [];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t\t}\n\n\n\t\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t\t// contract shape\n\n\t\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// expand holes\n\n\t\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t\t// Back facing vertices\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Add stepped vertices...\n\t\t\t\t// Including front facing vertices\n\n\t\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\t// Add bevel segments planes\n\n\t\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t\t// contract shape\n\n\t\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// expand holes\n\n\t\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t/* Faces */\n\n\t\t\t\t// Top and bottom faces\n\n\t\t\t\tbuildLidFaces();\n\n\t\t\t\t// Sides faces\n\n\t\t\t\tbuildSideFaces();\n\n\n\t\t\t\t/////  Internal functions\n\n\t\t\t\tfunction buildLidFaces() {\n\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t\t// Top faces\n\n\t\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Top faces\n\n\t\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\t\tfunction buildSideFaces() {\n\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\t\tlet layeroffset = 0;\n\t\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t\t//, true\n\t\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t\t}\n\n\t\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\t\tlet i = contour.length;\n\n\t\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\t\tconst j = i;\n\t\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\t\tplaceholder.push( x );\n\t\t\t\t\tplaceholder.push( y );\n\t\t\t\t\tplaceholder.push( z );\n\n\t\t\t\t}\n\n\n\t\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\t\taddVertex( a );\n\t\t\t\t\taddVertex( b );\n\t\t\t\t\taddVertex( c );\n\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\t\taddVertex( a );\n\t\t\t\t\taddVertex( b );\n\t\t\t\t\taddVertex( d );\n\n\t\t\t\t\taddVertex( b );\n\t\t\t\t\taddVertex( c );\n\t\t\t\t\taddVertex( d );\n\n\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\tfunction addVertex( index ) {\n\n\t\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t\t}\n\n\n\t\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\tconst options = this.parameters.options;\n\n\t\t\treturn toJSON$1( shapes, options, data );\n\n\t\t}\n\n\t\tstatic fromJSON( data, shapes ) {\n\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t}\n\n\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t}\n\n\t\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t\t}\n\n\t}\n\n\tconst WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tconst a_x = vertices[ indexA * 3 ];\n\t\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tconst b_x = vertices[ indexB * 3 ];\n\t\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tconst c_x = vertices[ indexC * 3 ];\n\t\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tconst a_x = vertices[ indexA * 3 ];\n\t\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tconst b_x = vertices[ indexB * 3 ];\n\t\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tconst c_x = vertices[ indexC * 3 ];\n\t\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tconst d_x = vertices[ indexD * 3 ];\n\t\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction toJSON$1( shapes, options, data ) {\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\tdata.options = Object.assign( {}, options );\n\n\t\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\t\tconstructor( radius = 1, detail = 0 ) {\n\n\t\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\t\tconst vertices = [\n\t\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t\t];\n\n\t\t\tconst indices = [\n\t\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t\t];\n\n\t\t\tsuper( vertices, indices, radius, detail );\n\n\t\t\tthis.type = 'IcosahedronGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t\t}\n\n\t}\n\n\tclass OctahedronGeometry extends PolyhedronGeometry {\n\n\t\tconstructor( radius = 1, detail = 0 ) {\n\n\t\t\tconst vertices = [\n\t\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t\t];\n\n\t\t\tconst indices = [\n\t\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t\t1, 3, 4,\t1, 4, 2\n\t\t\t];\n\n\t\t\tsuper( vertices, indices, radius, detail );\n\n\t\t\tthis.type = 'OctahedronGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t\t}\n\n\t}\n\n\tclass RingGeometry extends BufferGeometry {\n\n\t\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'RingGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tthetaSegments: thetaSegments,\n\t\t\t\tphiSegments: phiSegments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\n\t\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t\t// buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\t// some helper variables\n\n\t\t\tlet radius = innerRadius;\n\t\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t\t// increase the radius for next row of vertices\n\n\t\t\t\tradius += radiusStep;\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\t\tconst a = segment;\n\t\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t\t}\n\n\t}\n\n\tclass ShapeGeometry extends BufferGeometry {\n\n\t\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'ShapeGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\tcurveSegments: curveSegments\n\t\t\t};\n\n\t\t\t// buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\t// helper variables\n\n\t\t\tlet groupStart = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\t// allow single and array values for \"shapes\" parameter\n\n\t\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\t\taddShape( shapes );\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\t\tgroupStart += groupCount;\n\t\t\t\t\tgroupCount = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t\t// helper functions\n\n\t\t\tfunction addShape( shape ) {\n\n\t\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\t\tlet shapeVertices = points.shape;\n\t\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t\t// check direction of vertices\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t\t}\n\n\t\t\t\t// vertices, normals, uvs\n\n\t\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t\t}\n\n\t\t\t\t// indices\n\n\t\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\t\tindices.push( a, b, c );\n\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tconst shapes = this.parameters.shapes;\n\n\t\t\treturn toJSON( shapes, data );\n\n\t\t}\n\n\t\tstatic fromJSON( data, shapes ) {\n\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t}\n\n\t\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t\t}\n\n\t}\n\n\tfunction toJSON( shapes, data ) {\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclass SphereGeometry extends BufferGeometry {\n\n\t\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'SphereGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\n\t\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\t\tlet index = 0;\n\t\t\tconst grid = [];\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\n\t\t\t// buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\t\tconst verticesRow = [];\n\n\t\t\t\tconst v = iy / heightSegments;\n\n\t\t\t\t// special case for the poles\n\n\t\t\t\tlet uOffset = 0;\n\n\t\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\tgrid.push( verticesRow );\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t\t}\n\n\t}\n\n\tclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\t\tconstructor( radius = 1, detail = 0 ) {\n\n\t\t\tconst vertices = [\n\t\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t\t];\n\n\t\t\tconst indices = [\n\t\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t\t];\n\n\t\t\tsuper( vertices, indices, radius, detail );\n\n\t\t\tthis.type = 'TetrahedronGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t\t}\n\n\t}\n\n\tclass TorusGeometry extends BufferGeometry {\n\n\t\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'TorusGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tarc: arc\n\t\t\t};\n\n\t\t\tradialSegments = Math.floor( radialSegments );\n\t\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t\t// buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\t// helper variables\n\n\t\t\tconst center = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t\t// indices\n\n\t\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t\t}\n\n\t}\n\n\tclass TorusKnotGeometry extends BufferGeometry {\n\n\t\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'TorusKnotGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tp: p,\n\t\t\t\tq: q\n\t\t\t};\n\n\t\t\ttubularSegments = Math.floor( tubularSegments );\n\t\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t\t// buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\t// helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\n\t\t\tconst P1 = new Vector3();\n\t\t\tconst P2 = new Vector3();\n\n\t\t\tconst B = new Vector3();\n\t\t\tconst T = new Vector3();\n\t\t\tconst N = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t\t// calculate orthonormal basis\n\n\t\t\t\tT.subVectors( P2, P1 );\n\t\t\t\tN.addVectors( P2, P1 );\n\t\t\t\tB.crossVectors( T, N );\n\t\t\t\tN.crossVectors( B, T );\n\n\t\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\t\tB.normalize();\n\t\t\t\tN.normalize();\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\t// indices\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t\t// this function calculates the current position on the torus curve\n\n\t\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\t\tconst cu = Math.cos( u );\n\t\t\t\tconst su = Math.sin( u );\n\t\t\t\tconst quOverP = q / p * u;\n\t\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t\t}\n\n\t}\n\n\tclass TubeGeometry extends BufferGeometry {\n\n\t\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'TubeGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tpath: path,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradius: radius,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tclosed: closed\n\t\t\t};\n\n\t\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t\t// expose internals\n\n\t\t\tthis.tangents = frames.tangents;\n\t\t\tthis.normals = frames.normals;\n\t\t\tthis.binormals = frames.binormals;\n\n\t\t\t// helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst uv = new Vector2();\n\t\t\tlet P = new Vector3();\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\t\t\tconst indices = [];\n\n\t\t\t// create buffer data\n\n\t\t\tgenerateBufferData();\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t\t// functions\n\n\t\t\tfunction generateBufferData() {\n\n\t\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\t\tgenerateSegment( i );\n\n\t\t\t\t}\n\n\t\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t\t// at the regular position on the given path\n\t\t\t\t//\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t\t// uvs are generated in a separate function.\n\t\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\t\tgenerateUVs();\n\n\t\t\t\t// finally create faces\n\n\t\t\t\tgenerateIndices();\n\n\t\t\t}\n\n\t\t\tfunction generateSegment( i ) {\n\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\t\tconst N = frames.normals[ i ];\n\t\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t\t// generate normals and vertices for the current segment\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction generateIndices() {\n\n\t\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t\t// faces\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\n\t\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.path = this.parameters.path.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tstatic fromJSON( data ) {\n\n\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\treturn new TubeGeometry(\n\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\tdata.tubularSegments,\n\t\t\t\tdata.radius,\n\t\t\t\tdata.radialSegments,\n\t\t\t\tdata.closed\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\tclass WireframeGeometry extends BufferGeometry {\n\n\t\tconstructor( geometry = null ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'WireframeGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\tgeometry: geometry\n\t\t\t};\n\n\t\t\tif ( geometry !== null ) {\n\n\t\t\t\t// buffer\n\n\t\t\t\tconst vertices = [];\n\t\t\t\tconst edges = new Set();\n\n\t\t\t\t// helper variables\n\n\t\t\t\tconst start = new Vector3();\n\t\t\t\tconst end = new Vector3();\n\n\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tconst indices = geometry.index;\n\t\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// build geometry\n\n\t\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tfunction isUniqueEdge( start, end, edges ) {\n\n\t\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\t\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\t\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\t\treturn false;\n\n\t\t} else {\n\n\t\t\tedges.add( hash1 );\n\t\t\tedges.add( hash2 );\n\t\t\treturn true;\n\n\t\t}\n\n\t}\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tBoxGeometry: BoxGeometry,\n\t\tCapsuleGeometry: CapsuleGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tWireframeGeometry: WireframeGeometry\n\t});\n\n\tclass ShadowMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isShadowMaterial = true;\n\n\t\t\tthis.type = 'ShadowMaterial';\n\n\t\t\tthis.color = new Color( 0x000000 );\n\t\t\tthis.transparent = true;\n\n\t\t\tthis.fog = true;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass RawShaderMaterial extends ShaderMaterial {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper( parameters );\n\n\t\t\tthis.isRawShaderMaterial = true;\n\n\t\t\tthis.type = 'RawShaderMaterial';\n\n\t\t}\n\n\t}\n\n\tclass MeshStandardMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMeshStandardMaterial = true;\n\n\t\t\tthis.defines = { 'STANDARD': '' };\n\n\t\t\tthis.type = 'MeshStandardMaterial';\n\n\t\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\t\tthis.roughness = 1.0;\n\t\t\tthis.metalness = 0.0;\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\n\t\t\tthis.emissive = new Color( 0x000000 );\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\n\t\t\tthis.roughnessMap = null;\n\n\t\t\tthis.metalnessMap = null;\n\n\t\t\tthis.alphaMap = null;\n\n\t\t\tthis.envMap = null;\n\t\t\tthis.envMapIntensity = 1.0;\n\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\n\t\t\tthis.flatShading = false;\n\n\t\t\tthis.fog = true;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.defines = { 'STANDARD': '' };\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.roughness = source.roughness;\n\t\t\tthis.metalness = source.metalness;\n\n\t\t\tthis.map = source.map;\n\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\t\tthis.emissive.copy( source.emissive );\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy( source.normalScale );\n\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\n\t\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\t\tthis.alphaMap = source.alphaMap;\n\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\t\tthis.flatShading = source.flatShading;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\t\tthis.defines = {\n\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\n\t\t\t};\n\n\t\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\t\tthis.clearcoatMap = null;\n\t\t\tthis.clearcoatRoughness = 0.0;\n\t\t\tthis.clearcoatRoughnessMap = null;\n\t\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\t\tthis.clearcoatNormalMap = null;\n\n\t\t\tthis.ior = 1.5;\n\n\t\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t\t},\n\t\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.iridescenceMap = null;\n\t\t\tthis.iridescenceIOR = 1.3;\n\t\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\t\tthis.iridescenceThicknessMap = null;\n\n\t\t\tthis.sheenColor = new Color( 0x000000 );\n\t\t\tthis.sheenColorMap = null;\n\t\t\tthis.sheenRoughness = 1.0;\n\t\t\tthis.sheenRoughnessMap = null;\n\n\t\t\tthis.transmissionMap = null;\n\n\t\t\tthis.thickness = 0;\n\t\t\tthis.thicknessMap = null;\n\t\t\tthis.attenuationDistance = Infinity;\n\t\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\t\tthis.specularIntensity = 1.0;\n\t\t\tthis.specularIntensityMap = null;\n\t\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\t\tthis.specularColorMap = null;\n\n\t\t\tthis._sheen = 0.0;\n\t\t\tthis._clearcoat = 0;\n\t\t\tthis._iridescence = 0;\n\t\t\tthis._transmission = 0;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tget sheen() {\n\n\t\t\treturn this._sheen;\n\n\t\t}\n\n\t\tset sheen( value ) {\n\n\t\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\t\tthis.version ++;\n\n\t\t\t}\n\n\t\t\tthis._sheen = value;\n\n\t\t}\n\n\t\tget clearcoat() {\n\n\t\t\treturn this._clearcoat;\n\n\t\t}\n\n\t\tset clearcoat( value ) {\n\n\t\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\t\tthis.version ++;\n\n\t\t\t}\n\n\t\t\tthis._clearcoat = value;\n\n\t\t}\n\n\t\tget iridescence() {\n\n\t\t\treturn this._iridescence;\n\n\t\t}\n\n\t\tset iridescence( value ) {\n\n\t\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\t\tthis.version ++;\n\n\t\t\t}\n\n\t\t\tthis._iridescence = value;\n\n\t\t}\n\n\t\tget transmission() {\n\n\t\t\treturn this._transmission;\n\n\t\t}\n\n\t\tset transmission( value ) {\n\n\t\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\t\tthis.version ++;\n\n\t\t\t}\n\n\t\t\tthis._transmission = value;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.defines = {\n\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\n\t\t\t};\n\n\t\t\tthis.clearcoat = source.clearcoat;\n\t\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\t\tthis.ior = source.ior;\n\n\t\t\tthis.iridescence = source.iridescence;\n\t\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\t\tthis.sheen = source.sheen;\n\t\t\tthis.sheenColor.copy( source.sheenColor );\n\t\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\t\tthis.transmission = source.transmission;\n\t\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\t\tthis.thickness = source.thickness;\n\t\t\tthis.thicknessMap = source.thicknessMap;\n\t\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\t\tthis.specularIntensity = source.specularIntensity;\n\t\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\t\tthis.specularColor.copy( source.specularColor );\n\t\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass MeshPhongMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMeshPhongMaterial = true;\n\n\t\t\tthis.type = 'MeshPhongMaterial';\n\n\t\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\t\tthis.specular = new Color( 0x111111 );\n\t\t\tthis.shininess = 30;\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\n\t\t\tthis.emissive = new Color( 0x000000 );\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\n\t\t\tthis.specularMap = null;\n\n\t\t\tthis.alphaMap = null;\n\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\n\t\t\tthis.flatShading = false;\n\n\t\t\tthis.fog = true;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.specular.copy( source.specular );\n\t\t\tthis.shininess = source.shininess;\n\n\t\t\tthis.map = source.map;\n\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\t\tthis.emissive.copy( source.emissive );\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy( source.normalScale );\n\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\n\t\t\tthis.specularMap = source.specularMap;\n\n\t\t\tthis.alphaMap = source.alphaMap;\n\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\t\tthis.flatShading = source.flatShading;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass MeshToonMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMeshToonMaterial = true;\n\n\t\t\tthis.defines = { 'TOON': '' };\n\n\t\t\tthis.type = 'MeshToonMaterial';\n\n\t\t\tthis.color = new Color( 0xffffff );\n\n\t\t\tthis.map = null;\n\t\t\tthis.gradientMap = null;\n\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\n\t\t\tthis.emissive = new Color( 0x000000 );\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\n\t\t\tthis.alphaMap = null;\n\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\n\t\t\tthis.fog = true;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.map = source.map;\n\t\t\tthis.gradientMap = source.gradientMap;\n\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\t\tthis.emissive.copy( source.emissive );\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy( source.normalScale );\n\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\n\t\t\tthis.alphaMap = source.alphaMap;\n\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass MeshNormalMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMeshNormalMaterial = true;\n\n\t\t\tthis.type = 'MeshNormalMaterial';\n\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\n\t\t\tthis.flatShading = false;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy( source.normalScale );\n\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\t\tthis.flatShading = source.flatShading;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass MeshLambertMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMeshLambertMaterial = true;\n\n\t\t\tthis.type = 'MeshLambertMaterial';\n\n\t\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\n\t\t\tthis.emissive = new Color( 0x000000 );\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\n\t\t\tthis.specularMap = null;\n\n\t\t\tthis.alphaMap = null;\n\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\n\t\t\tthis.flatShading = false;\n\n\t\t\tthis.fog = true;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.map = source.map;\n\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\t\tthis.emissive.copy( source.emissive );\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy( source.normalScale );\n\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\n\t\t\tthis.specularMap = source.specularMap;\n\n\t\t\tthis.alphaMap = source.alphaMap;\n\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\t\tthis.flatShading = source.flatShading;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass MeshMatcapMaterial extends Material {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isMeshMatcapMaterial = true;\n\n\t\t\tthis.defines = { 'MATCAP': '' };\n\n\t\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\t\tthis.matcap = null;\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\n\t\t\tthis.alphaMap = null;\n\n\t\t\tthis.flatShading = false;\n\n\t\t\tthis.fog = true;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.defines = { 'MATCAP': '' };\n\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.matcap = source.matcap;\n\n\t\t\tthis.map = source.map;\n\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy( source.normalScale );\n\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\n\t\t\tthis.alphaMap = source.alphaMap;\n\n\t\t\tthis.flatShading = source.flatShading;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass LineDashedMaterial extends LineBasicMaterial {\n\n\t\tconstructor( parameters ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isLineDashedMaterial = true;\n\n\t\t\tthis.type = 'LineDashedMaterial';\n\n\t\t\tthis.scale = 1;\n\t\t\tthis.dashSize = 3;\n\t\t\tthis.gapSize = 1;\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.scale = source.scale;\n\t\t\tthis.dashSize = source.dashSize;\n\t\t\tthis.gapSize = source.gapSize;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tfunction arraySlice( array, from, to ) {\n\n\t\tif ( isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t}\n\n\t// converts an array to a specific type\n\tfunction convertArray( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t}\n\n\tfunction isTypedArray( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t}\n\n\t// returns an array by which times and values can be sorted\n\tfunction getKeyframeOrder( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t}\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tfunction sortedArray( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// function for parsing AOS keyframe formats\n\tfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n\tfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t}\n\n\tfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n\tconst AnimationUtils = {\n\t\tarraySlice: arraySlice,\n\t\tconvertArray: convertArray,\n\t\tisTypedArray: isTypedArray,\n\t\tgetKeyframeOrder: getKeyframeOrder,\n\t\tsortedArray: sortedArray,\n\t\tflattenJSON: flattenJSON,\n\t\tsubclip: subclip,\n\t\tmakeClipAdditive: makeClipAdditive\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t */\n\n\tclass Interpolant {\n\n\t\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\t\tthis.parameterPositions = parameterPositions;\n\t\t\tthis._cachedIndex = 0;\n\n\t\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\t\tthis.sampleValues = sampleValues;\n\t\t\tthis.valueSize = sampleSize;\n\n\t\t\tthis.settings = null;\n\t\t\tthis.DefaultSettings_ = {};\n\n\t\t}\n\n\t\tevaluate( t ) {\n\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet i1 = this._cachedIndex,\n\t\t\t\tt1 = pp[ i1 ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tlet right;\n\n\t\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t}\n\n\t\tgetSettings_() {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t}\n\n\t\tcopySampleValue_( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\t\tthrow new Error( 'call to abstract method' );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t}\n\n\t\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t */\n\n\tclass CubicInterpolant extends Interpolant {\n\n\t\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\t\tthis._weightPrev = - 0;\n\t\t\tthis._offsetPrev = - 0;\n\t\t\tthis._weightNext = - 0;\n\t\t\tthis._offsetNext = - 0;\n\n\t\t\tthis.DefaultSettings_ = {\n\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t\t};\n\n\t\t}\n\n\t\tintervalChanged_( i1, t0, t1 ) {\n\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet iPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t}\n\n\t\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t}\n\n\tclass LinearInterpolant extends Interpolant {\n\n\t\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\t}\n\n\t\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceding\n\t * the parameter.\n\t */\n\n\tclass DiscreteInterpolant extends Interpolant {\n\n\t\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\t}\n\n\t\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t}\n\n\tclass KeyframeTrack {\n\n\t\tconstructor( name, times, values, interpolation ) {\n\n\t\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\t\tthis.name = name;\n\n\t\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t\t}\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\tstatic toJSON( track ) {\n\n\t\t\tconst trackType = track.constructor;\n\n\t\t\tlet json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t}\n\n\t\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t}\n\n\t\tInterpolantFactoryMethodLinear( result ) {\n\n\t\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t}\n\n\t\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t}\n\n\t\tsetInterpolation( interpolation ) {\n\n\t\t\tlet factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetInterpolation() {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgetValueSize() {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t}\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim( startTime, endTime ) {\n\n\t\t\tconst times = this.times,\n\t\t\t\tnKeys = times.length;\n\n\t\t\tlet from = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t\t++ from;\n\n\t\t\t}\n\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t\t-- to;\n\n\t\t\t}\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) {\n\n\t\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\t\tfrom = to - 1;\n\n\t\t\t\t}\n\n\t\t\t\tconst stride = this.getValueSize();\n\t\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate() {\n\n\t\t\tlet valid = true;\n\n\t\t\tconst valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tconst times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tlet prevTime = null;\n\n\t\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tconst currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t}\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize() {\n\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tconst times = arraySlice( this.times ),\n\t\t\t\tvalues = arraySlice( this.values ),\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tlet writeIndex = 1;\n\n\t\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tlet keep = false;\n\n\t\t\t\tconst time = times[ i ];\n\t\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tkeep = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t} else {\n\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\tconst times = arraySlice( this.times, 0 );\n\t\t\tconst values = arraySlice( this.values, 0 );\n\n\t\t\tconst TypedKeyframeTrack = this.constructor;\n\t\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\t\treturn track;\n\n\t\t}\n\n\t}\n\n\tKeyframeTrack.prototype.TimeBufferType = Float32Array;\n\tKeyframeTrack.prototype.ValueBufferType = Float32Array;\n\tKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n\t/**\n\t * A Track of Boolean keyframe values.\n\t */\n\tclass BooleanKeyframeTrack extends KeyframeTrack {}\n\n\tBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\n\tBooleanKeyframeTrack.prototype.ValueBufferType = Array;\n\tBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track of keyframe values that represent color.\n\t */\n\tclass ColorKeyframeTrack extends KeyframeTrack {}\n\n\tColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n\t/**\n\t * A Track of numeric keyframe values.\n\t */\n\tclass NumberKeyframeTrack extends KeyframeTrack {}\n\n\tNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t */\n\n\tclass QuaternionLinearInterpolant extends Interpolant {\n\n\t\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\t}\n\n\t\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tlet offset = i1 * stride;\n\n\t\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * A Track of quaternion keyframe values.\n\t */\n\tclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\t\tInterpolantFactoryMethodLinear( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t}\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n\t// ValueBufferType is inherited\n\tQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\tQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track that interpolates Strings\n\t */\n\tclass StringKeyframeTrack extends KeyframeTrack {}\n\n\tStringKeyframeTrack.prototype.ValueTypeName = 'string';\n\tStringKeyframeTrack.prototype.ValueBufferType = Array;\n\tStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track of vectored keyframe values.\n\t */\n\tclass VectorKeyframeTrack extends KeyframeTrack {}\n\n\tVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\n\tclass AnimationClip {\n\n\t\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\t\tthis.name = name;\n\t\t\tthis.tracks = tracks;\n\t\t\tthis.duration = duration;\n\t\t\tthis.blendMode = blendMode;\n\n\t\t\tthis.uuid = generateUUID();\n\n\t\t\t// this means it should figure out its duration by scanning the tracks\n\t\t\tif ( this.duration < 0 ) {\n\n\t\t\t\tthis.resetDuration();\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tstatic parse( json ) {\n\n\t\t\tconst tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\t\tclip.uuid = json.uuid;\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t\tstatic toJSON( clip ) {\n\n\t\t\tconst tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tconst json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\n\t\t\t};\n\n\t\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t}\n\n\t\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\t\tconst tracks = [];\n\n\t\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tlet times = [];\n\t\t\t\tlet values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\ti,\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tconst order = getKeyframeOrder( times );\n\t\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\ttimes, values\n\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new this( name, - 1, tracks );\n\n\t\t}\n\n\t\tstatic findByName( objectOrClipArray, name ) {\n\n\t\t\tlet clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tconst o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\t\tconst animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst clips = [];\n\n\t\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t}\n\n\t\t// parse the animation.hierarchy format\n\t\tstatic parseAnimation( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst tracks = [];\n\n\t\t\tconst clipName = animation.name || 'default';\n\t\t\tconst fps = animation.fps || 30;\n\t\t\tconst blendMode = animation.blendMode;\n\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tlet duration = animation.length || - 1;\n\n\t\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\t\tlet k;\n\n\t\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tconst times = [];\n\t\t\t\t\t\tconst values = [];\n\n\t\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t\tresetDuration() {\n\n\t\t\tconst tracks = this.tracks;\n\t\t\tlet duration = 0;\n\n\t\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tconst track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttrim() {\n\n\t\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvalidate() {\n\n\t\t\tlet valid = true;\n\n\t\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t}\n\n\t\toptimize() {\n\n\t\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\tconst tracks = [];\n\n\t\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t\t}\n\n\t\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\treturn this.constructor.toJSON( this );\n\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n\tfunction parseKeyframeTrack( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tconst times = [], values = [];\n\n\t\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t}\n\n\tconst Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\tclass LoadingManager {\n\n\t\tconstructor( onLoad, onProgress, onError ) {\n\n\t\t\tconst scope = this;\n\n\t\t\tlet isLoading = false;\n\t\t\tlet itemsLoaded = 0;\n\t\t\tlet itemsTotal = 0;\n\t\t\tlet urlModifier = undefined;\n\t\t\tconst handlers = [];\n\n\t\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t\t// in the constructor\n\n\t\t\tthis.onStart = undefined;\n\t\t\tthis.onLoad = onLoad;\n\t\t\tthis.onProgress = onProgress;\n\t\t\tthis.onError = onError;\n\n\t\t\tthis.itemStart = function ( url ) {\n\n\t\t\t\titemsTotal ++;\n\n\t\t\t\tif ( isLoading === false ) {\n\n\t\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tisLoading = true;\n\n\t\t\t};\n\n\t\t\tthis.itemEnd = function ( url ) {\n\n\t\t\t\titemsLoaded ++;\n\n\t\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\t\tisLoading = false;\n\n\t\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tthis.itemError = function ( url ) {\n\n\t\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\t\tscope.onError( url );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tthis.resolveURL = function ( url ) {\n\n\t\t\t\tif ( urlModifier ) {\n\n\t\t\t\t\treturn urlModifier( url );\n\n\t\t\t\t}\n\n\t\t\t\treturn url;\n\n\t\t\t};\n\n\t\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\t\turlModifier = transform;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\t\thandlers.push( regex, loader );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t\tthis.getHandler = function ( file ) {\n\n\t\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\t\treturn loader;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\tconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\n\tclass Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t\tthis.crossOrigin = 'anonymous';\n\t\t\tthis.withCredentials = false;\n\t\t\tthis.path = '';\n\t\t\tthis.resourcePath = '';\n\t\t\tthis.requestHeader = {};\n\n\t\t}\n\n\t\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\t\tloadAsync( url, onProgress ) {\n\n\t\t\tconst scope = this;\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tparse( /* data */ ) {}\n\n\t\tsetCrossOrigin( crossOrigin ) {\n\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetWithCredentials( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetPath( path ) {\n\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetResourcePath( resourcePath ) {\n\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetRequestHeader( requestHeader ) {\n\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tconst loading = {};\n\n\tclass HttpError extends Error {\n\n\t\tconstructor( message, response ) {\n\n\t\t\tsuper( message );\n\t\t\tthis.response = response;\n\n\t\t}\n\n\t}\n\n\tclass FileLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tconst cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tthis.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( () => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check if request is duplicate\n\n\t\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Initialise array for duplicate requests\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError,\n\t\t\t} );\n\n\t\t\t// create request\n\t\t\tconst req = new Request( url, {\n\t\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t\t// An abort controller could be added within a future PR\n\t\t\t} );\n\n\t\t\t// record states ( avoid data race )\n\t\t\tconst mimeType = this.mimeType;\n\t\t\tconst responseType = this.responseType;\n\n\t\t\t// start the fetch\n\t\t\tfetch( req )\n\t\t\t\t.then( response => {\n\n\t\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t\t}\n\n\t\t\t\t} )\n\t\t\t\t.then( response => {\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} )\n\t\t\t\t.then( data => {\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, data );\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} )\n\t\t\t\t.catch( err => {\n\n\t\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\t\tthrow err;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t\t} )\n\t\t\t\t.finally( () => {\n\n\t\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t\t} );\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t}\n\n\t\tsetResponseType( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetMimeType( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass AnimationLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tconst scope = this;\n\n\t\t\tconst loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tparse( json ) {\n\n\t\t\tconst animations = [];\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass CompressedTextureLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tconst scope = this;\n\n\t\t\tconst images = [];\n\n\t\t\tconst texture = new CompressedTexture();\n\n\t\t\tconst loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\t\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t}\n\n\tclass ImageLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tconst scope = this;\n\n\t\t\tconst cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tconst image = createElementNS( 'img' );\n\n\t\t\tfunction onImageLoad() {\n\n\t\t\t\tremoveEventListeners();\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\tfunction onImageError( event ) {\n\n\t\t\t\tremoveEventListeners();\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\tfunction removeEventListeners() {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t}\n\n\t\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n\tclass CubeTextureLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t}\n\n\t\tload( urls, onLoad, onProgress, onError ) {\n\n\t\t\tconst texture = new CubeTexture();\n\n\t\t\tconst loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass DataTextureLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tconst scope = this;\n\n\t\t\tconst texture = new DataTexture();\n\n\t\t\tconst loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setWithCredentials( scope.withCredentials );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t}\n\n\tclass TextureLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t}\n\n\tclass Light extends Object3D {\n\n\t\tconstructor( color, intensity = 1 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.isLight = true;\n\n\t\t\tthis.type = 'Light';\n\n\t\t\tthis.color = new Color( color );\n\t\t\tthis.intensity = intensity;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\t// Empty here in base class; some subclasses override.\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst data = super.toJSON( meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t}\n\n\tclass HemisphereLight extends Light {\n\n\t\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\t\tsuper( skyColor, intensity );\n\n\t\t\tthis.isHemisphereLight = true;\n\n\t\t\tthis.type = 'HemisphereLight';\n\n\t\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\t\tthis.updateMatrix();\n\n\t\t\tthis.groundColor = new Color( groundColor );\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\n\tconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\n\tconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\n\tclass LightShadow {\n\n\t\tconstructor( camera ) {\n\n\t\t\tthis.camera = camera;\n\n\t\t\tthis.bias = 0;\n\t\t\tthis.normalBias = 0;\n\t\t\tthis.radius = 1;\n\t\t\tthis.blurSamples = 8;\n\n\t\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\t\tthis.map = null;\n\t\t\tthis.mapPass = null;\n\t\t\tthis.matrix = new Matrix4();\n\n\t\t\tthis.autoUpdate = true;\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tthis._frustum = new Frustum();\n\t\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\t\tthis._viewportCount = 1;\n\n\t\t\tthis._viewports = [\n\n\t\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t\t];\n\n\t\t}\n\n\t\tgetViewportCount() {\n\n\t\t\treturn this._viewportCount;\n\n\t\t}\n\n\t\tgetFrustum() {\n\n\t\t\treturn this._frustum;\n\n\t\t}\n\n\t\tupdateMatrices( light ) {\n\n\t\t\tconst shadowCamera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\n\t\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\t\tshadowMatrix.set(\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t);\n\n\t\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t\t}\n\n\t\tgetViewport( viewportIndex ) {\n\n\t\t\treturn this._viewports[ viewportIndex ];\n\n\t\t}\n\n\t\tgetFrameExtents() {\n\n\t\t\treturn this._frameExtents;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tif ( this.map ) {\n\n\t\t\t\tthis.map.dispose();\n\n\t\t\t}\n\n\t\t\tif ( this.mapPass ) {\n\n\t\t\t\tthis.mapPass.dispose();\n\n\t\t\t}\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst object = {};\n\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t}\n\n\tclass SpotLightShadow extends LightShadow {\n\n\t\tconstructor() {\n\n\t\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\t\tthis.isSpotLightShadow = true;\n\n\t\t\tthis.focus = 1;\n\n\t\t}\n\n\t\tupdateMatrices( light ) {\n\n\t\t\tconst camera = this.camera;\n\n\t\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tsuper.updateMatrices( light );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.focus = source.focus;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass SpotLight extends Light {\n\n\t\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\t\tsuper( color, intensity );\n\n\t\t\tthis.isSpotLight = true;\n\n\t\t\tthis.type = 'SpotLight';\n\n\t\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\t\tthis.updateMatrix();\n\n\t\t\tthis.target = new Object3D();\n\n\t\t\tthis.distance = distance;\n\t\t\tthis.angle = angle;\n\t\t\tthis.penumbra = penumbra;\n\t\t\tthis.decay = decay;\n\n\t\t\tthis.map = null;\n\n\t\t\tthis.shadow = new SpotLightShadow();\n\n\t\t}\n\n\t\tget power() {\n\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t}\n\n\t\tset power( power ) {\n\n\t\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.shadow.dispose();\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\n\tconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\n\tconst _lookTarget = /*@__PURE__*/ new Vector3();\n\n\tclass PointLightShadow extends LightShadow {\n\n\t\tconstructor() {\n\n\t\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\t\tthis.isPointLightShadow = true;\n\n\t\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\t\tthis._viewportCount = 6;\n\n\t\t\tthis._viewports = [\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t\t// negative X\n\t\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t\t// positive Z\n\t\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t\t// negative Z\n\t\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t\t// positive Y\n\t\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t\t// negative Y\n\t\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t\t];\n\n\t\t\tthis._cubeDirections = [\n\t\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t\t];\n\n\t\t\tthis._cubeUps = [\n\t\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t\t];\n\n\t\t}\n\n\t\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\t\tconst camera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif ( far !== camera.far ) {\n\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t\t_lookTarget.copy( camera.position );\n\t\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\t\tcamera.lookAt( _lookTarget );\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t}\n\n\t}\n\n\tclass PointLight extends Light {\n\n\t\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\t\tsuper( color, intensity );\n\n\t\t\tthis.isPointLight = true;\n\n\t\t\tthis.type = 'PointLight';\n\n\t\t\tthis.distance = distance;\n\t\t\tthis.decay = decay;\n\n\t\t\tthis.shadow = new PointLightShadow();\n\n\t\t}\n\n\t\tget power() {\n\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t}\n\n\t\tset power( power ) {\n\n\t\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.shadow.dispose();\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass DirectionalLightShadow extends LightShadow {\n\n\t\tconstructor() {\n\n\t\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\t\tthis.isDirectionalLightShadow = true;\n\n\t\t}\n\n\t}\n\n\tclass DirectionalLight extends Light {\n\n\t\tconstructor( color, intensity ) {\n\n\t\t\tsuper( color, intensity );\n\n\t\t\tthis.isDirectionalLight = true;\n\n\t\t\tthis.type = 'DirectionalLight';\n\n\t\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\t\tthis.updateMatrix();\n\n\t\t\tthis.target = new Object3D();\n\n\t\t\tthis.shadow = new DirectionalLightShadow();\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.shadow.dispose();\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass AmbientLight extends Light {\n\n\t\tconstructor( color, intensity ) {\n\n\t\t\tsuper( color, intensity );\n\n\t\t\tthis.isAmbientLight = true;\n\n\t\t\tthis.type = 'AmbientLight';\n\n\t\t}\n\n\t}\n\n\tclass RectAreaLight extends Light {\n\n\t\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\t\tsuper( color, intensity );\n\n\t\t\tthis.isRectAreaLight = true;\n\n\t\t\tthis.type = 'RectAreaLight';\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t}\n\n\t\tget power() {\n\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t\t}\n\n\t\tset power( power ) {\n\n\t\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst data = super.toJSON( meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Primary reference:\n\t *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *   https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\n\t// 3-band SH defined by 9 coefficients\n\n\tclass SphericalHarmonics3 {\n\n\t\tconstructor() {\n\n\t\t\tthis.isSphericalHarmonics3 = true;\n\n\t\t\tthis.coefficients = [];\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t\t}\n\n\t\t}\n\n\t\tset( coefficients ) {\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tzero() {\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\t\tgetAt( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tconst coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t\t// band 1\n\t\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t\tgetIrradianceAt( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tconst coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t\t// band 1\n\t\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tadd( sh ) {\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\taddScaledSH( sh, s ) {\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tscale( s ) {\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tlerp( sh, alpha ) {\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( sh ) {\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tcopy( sh ) {\n\n\t\t\treturn this.set( sh.coefficients );\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t\tfromArray( array, offset = 0 ) {\n\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoArray( array = [], offset = 0 ) {\n\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\t// evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\t\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\t// band 0\n\t\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t\t// band 1\n\t\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t\t// band 2\n\t\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t\t}\n\n\t}\n\n\tclass LightProbe extends Light {\n\n\t\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\t\tsuper( undefined, intensity );\n\n\t\t\tthis.isLightProbe = true;\n\n\t\t\tthis.sh = sh;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.sh.copy( source.sh );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tfromJSON( json ) {\n\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\t\tthis.sh.fromArray( json.sh );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON( meta ) {\n\n\t\t\tconst data = super.toJSON( meta );\n\n\t\t\tdata.object.sh = this.sh.toArray();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t}\n\n\tclass MaterialLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\t\t\tthis.textures = {};\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tconst scope = this;\n\n\t\t\tconst loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.setRequestHeader( scope.requestHeader );\n\t\t\tloader.setWithCredentials( scope.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tparse( json ) {\n\n\t\t\tconst textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Shader Material\n\n\t\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\t\tif ( json.extensions !== undefined ) {\n\n\t\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tlet normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tsetTextures( value ) {\n\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstatic createMaterialFromType( type ) {\n\n\t\t\tconst materialLib = {\n\t\t\t\tShadowMaterial,\n\t\t\t\tSpriteMaterial,\n\t\t\t\tRawShaderMaterial,\n\t\t\t\tShaderMaterial,\n\t\t\t\tPointsMaterial,\n\t\t\t\tMeshPhysicalMaterial,\n\t\t\t\tMeshStandardMaterial,\n\t\t\t\tMeshPhongMaterial,\n\t\t\t\tMeshToonMaterial,\n\t\t\t\tMeshNormalMaterial,\n\t\t\t\tMeshLambertMaterial,\n\t\t\t\tMeshDepthMaterial,\n\t\t\t\tMeshDistanceMaterial,\n\t\t\t\tMeshBasicMaterial,\n\t\t\t\tMeshMatcapMaterial,\n\t\t\t\tLineDashedMaterial,\n\t\t\t\tLineBasicMaterial,\n\t\t\t\tMaterial\n\t\t\t};\n\n\t\t\treturn new materialLib[ type ]();\n\n\t\t}\n\n\t}\n\n\tclass LoaderUtils {\n\n\t\tstatic decodeText( array ) {\n\n\t\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\t\treturn new TextDecoder().decode( array );\n\n\t\t\t}\n\n\t\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\t\tlet s = '';\n\n\t\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t\t} catch ( e ) { // see #16358\n\n\t\t\t\treturn s;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstatic extractUrlBase( url ) {\n\n\t\t\tconst index = url.lastIndexOf( '/' );\n\n\t\t\tif ( index === - 1 ) return './';\n\n\t\t\treturn url.slice( 0, index + 1 );\n\n\t\t}\n\n\t\tstatic resolveURL( url, path ) {\n\n\t\t\t// Invalid URL\n\t\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t\t// Host Relative URL\n\t\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t\t}\n\n\t\t\t// Absolute URL http://,https://,//\n\t\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t\t// Data URI\n\t\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t\t// Blob URL\n\t\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t\t// Relative URL\n\t\t\treturn path + url;\n\n\t\t}\n\n\t}\n\n\tclass InstancedBufferGeometry extends BufferGeometry {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.isInstancedBufferGeometry = true;\n\n\t\t\tthis.type = 'InstancedBufferGeometry';\n\t\t\tthis.instanceCount = Infinity;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.instanceCount = source.instanceCount;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoJSON() {\n\n\t\t\tconst data = super.toJSON();\n\n\t\t\tdata.instanceCount = this.instanceCount;\n\n\t\t\tdata.isInstancedBufferGeometry = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t}\n\n\tclass BufferGeometryLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tconst scope = this;\n\n\t\t\tconst loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.setRequestHeader( scope.requestHeader );\n\t\t\tloader.setWithCredentials( scope.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tparse( json ) {\n\n\t\t\tconst interleavedBufferMap = {};\n\t\t\tconst arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\t\treturn ib;\n\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\t\treturn ab;\n\n\t\t\t}\n\n\t\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\t\tconst index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst attributes = json.data.attributes;\n\n\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\tconst attribute = attributes[ key ];\n\t\t\t\tlet bufferAttribute;\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\t\tif ( morphAttributes ) {\n\n\t\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\t}\n\n\t\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tconst center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\tif ( json.name ) geometry.name = json.name;\n\t\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t}\n\n\tclass ObjectLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tconst scope = this;\n\n\t\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\t\tconst loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tlet json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tasync loadAsync( url, onProgress ) {\n\n\t\t\tconst scope = this;\n\n\t\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\t\tconst loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\t\tconst json = JSON.parse( text );\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t\t}\n\n\t\t\treturn await scope.parseAsync( json );\n\n\t\t}\n\n\t\tparse( json, onLoad ) {\n\n\t\t\tconst animations = this.parseAnimations( json.animations );\n\t\t\tconst shapes = this.parseShapes( json.shapes );\n\t\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tconst textures = this.parseTextures( json.textures, images );\n\t\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t\t//\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tlet hasImages = false;\n\n\t\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\thasImages = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t}\n\n\t\tasync parseAsync( json ) {\n\n\t\t\tconst animations = this.parseAnimations( json.animations );\n\t\t\tconst shapes = this.parseShapes( json.shapes );\n\t\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\t\tconst textures = this.parseTextures( json.textures, images );\n\t\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t\treturn object;\n\n\t\t}\n\n\t\tparseShapes( json ) {\n\n\t\t\tconst shapes = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tparseSkeletons( json, object ) {\n\n\t\t\tconst skeletons = {};\n\t\t\tconst bones = {};\n\n\t\t\t// generate bone lookup table\n\n\t\t\tobject.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t\t} );\n\n\t\t\t// create skeletons\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn skeletons;\n\n\t\t}\n\n\t\tparseGeometries( json, shapes ) {\n\n\t\t\tconst geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tlet geometry;\n\t\t\t\t\tconst data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t}\n\n\t\tparseMaterials( json, textures ) {\n\n\t\t\tconst cache = {}; // MultiMaterial\n\t\t\tconst materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tconst loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst data = json[ i ];\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t}\n\n\t\tparseAnimations( json ) {\n\n\t\t\tconst animations = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\t\tconst data = json[ i ];\n\n\t\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t}\n\n\t\tparseImages( json, onLoad ) {\n\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\n\t\t\tlet loader;\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfunction deserializeImage( image ) {\n\n\t\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\t\tconst url = image;\n\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\t\treturn loadImage( path );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\t\tloader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst image = json[ i ];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// load single image\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t}\n\n\t\tasync parseImagesAsync( json ) {\n\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\n\t\t\tlet loader;\n\n\t\t\tasync function deserializeImage( image ) {\n\n\t\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\t\tconst url = image;\n\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tloader = new ImageLoader( this.manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst image = json[ i ];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// load single image\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t}\n\n\t\tparseTextures( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tconst textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst source = images[ data.image ];\n\t\t\t\t\tconst image = source.data;\n\n\t\t\t\t\tlet texture;\n\n\t\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.source = source;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t}\n\n\t\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\t\tlet object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getTexture( uuid ) {\n\n\t\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ uuid ];\n\n\t\t\t}\n\n\t\t\tlet geometry, material;\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\n\t\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\n\t\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\t\tconst count = data.count;\n\t\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Bone':\n\n\t\t\t\t\tobject = new Bone();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t}\n\n\t\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif ( data.shadow ) {\n\n\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tconst children = data.children;\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.animations !== undefined ) {\n\n\t\t\t\tconst objectAnimations = data.animations;\n\n\t\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\t\tconst levels = data.levels;\n\n\t\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tconst level = levels[ l ];\n\t\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t}\n\n\t\tbindSkeletons( object, skeletons ) {\n\n\t\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\t\tobject.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tconst TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping\n\t};\n\n\tconst TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tconst TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\tclass ImageBitmapLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t\tthis.isImageBitmapLoader = true;\n\n\t\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t\t}\n\n\t\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t\t}\n\n\t\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t\t}\n\n\t\tsetOptions( options ) {\n\n\t\t\tthis.options = options;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tconst scope = this;\n\n\t\t\tconst cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tconst fetchOptions = {};\n\t\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\t\tfetchOptions.headers = this.requestHeader;\n\n\t\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\t\treturn res.blob();\n\n\t\t\t} ).then( function ( blob ) {\n\n\t\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\t\tCache.add( url, imageBitmap );\n\n\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} ).catch( function ( e ) {\n\n\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t}\n\n\t}\n\n\tlet _context;\n\n\tclass AudioContext {\n\n\t\tstatic getContext() {\n\n\t\t\tif ( _context === undefined ) {\n\n\t\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn _context;\n\n\t\t}\n\n\t\tstatic setContext( value ) {\n\n\t\t\t_context = value;\n\n\t\t}\n\n\t}\n\n\tclass AudioLoader extends Loader {\n\n\t\tconstructor( manager ) {\n\n\t\t\tsuper( manager );\n\n\t\t}\n\n\t\tload( url, onLoad, onProgress, onError ) {\n\n\t\t\tconst scope = this;\n\n\t\t\tconst loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t}\n\n\tclass HemisphereLightProbe extends LightProbe {\n\n\t\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\t\tsuper( undefined, intensity );\n\n\t\t\tthis.isHemisphereLightProbe = true;\n\n\t\t\tconst color1 = new Color().set( skyColor );\n\t\t\tconst color2 = new Color().set( groundColor );\n\n\t\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\t\tconst c0 = Math.sqrt( Math.PI );\n\t\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t\t}\n\n\t}\n\n\tclass AmbientLightProbe extends LightProbe {\n\n\t\tconstructor( color, intensity = 1 ) {\n\n\t\t\tsuper( undefined, intensity );\n\n\t\t\tthis.isAmbientLightProbe = true;\n\n\t\t\tconst color1 = new Color().set( color );\n\n\t\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t\t}\n\n\t}\n\n\tconst _eyeRight = /*@__PURE__*/ new Matrix4();\n\tconst _eyeLeft = /*@__PURE__*/ new Matrix4();\n\tconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\n\tclass StereoCamera {\n\n\t\tconstructor() {\n\n\t\t\tthis.type = 'StereoCamera';\n\n\t\t\tthis.aspect = 1;\n\n\t\t\tthis.eyeSep = 0.064;\n\n\t\t\tthis.cameraL = new PerspectiveCamera();\n\t\t\tthis.cameraL.layers.enable( 1 );\n\t\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\t\tthis.cameraR = new PerspectiveCamera();\n\t\t\tthis.cameraR.layers.enable( 2 );\n\t\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\t\tthis._cache = {\n\t\t\t\tfocus: null,\n\t\t\t\tfov: null,\n\t\t\t\taspect: null,\n\t\t\t\tnear: null,\n\t\t\t\tfar: null,\n\t\t\t\tzoom: null,\n\t\t\t\teyeSep: null\n\t\t\t};\n\n\t\t}\n\n\t\tupdate( camera ) {\n\n\t\t\tconst cache = this._cache;\n\n\t\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\t\tlet xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t\t}\n\n\t}\n\n\tclass Clock {\n\n\t\tconstructor( autoStart = true ) {\n\n\t\t\tthis.autoStart = autoStart;\n\n\t\t\tthis.startTime = 0;\n\t\t\tthis.oldTime = 0;\n\t\t\tthis.elapsedTime = 0;\n\n\t\t\tthis.running = false;\n\n\t\t}\n\n\t\tstart() {\n\n\t\t\tthis.startTime = now();\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t}\n\n\t\tstop() {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t}\n\n\t\tgetElapsedTime() {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t}\n\n\t\tgetDelta() {\n\n\t\t\tlet diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tconst newTime = now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t}\n\n\tfunction now() {\n\n\t\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t}\n\n\tconst _position$1 = /*@__PURE__*/ new Vector3();\n\tconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\n\tconst _scale$1 = /*@__PURE__*/ new Vector3();\n\tconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\n\tclass AudioListener extends Object3D {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'AudioListener';\n\n\t\t\tthis.context = AudioContext.getContext();\n\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect( this.context.destination );\n\n\t\t\tthis.filter = null;\n\n\t\t\tthis.timeDelta = 0;\n\n\t\t\t// private\n\n\t\t\tthis._clock = new Clock();\n\n\t\t}\n\n\t\tgetInput() {\n\n\t\t\treturn this.gain;\n\n\t\t}\n\n\t\tremoveFilter() {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetFilter() {\n\n\t\t\treturn this.filter;\n\n\t\t}\n\n\t\tsetFilter( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetMasterVolume() {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t}\n\n\t\tsetMasterVolume( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tupdateMatrixWorld( force ) {\n\n\t\t\tsuper.updateMatrixWorld( force );\n\n\t\t\tconst listener = this.context.listener;\n\t\t\tconst up = this.up;\n\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tclass Audio extends Object3D {\n\n\t\tconstructor( listener ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'Audio';\n\n\t\t\tthis.listener = listener;\n\t\t\tthis.context = listener.context;\n\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect( listener.getInput() );\n\n\t\t\tthis.autoplay = false;\n\n\t\t\tthis.buffer = null;\n\t\t\tthis.detune = 0;\n\t\t\tthis.loop = false;\n\t\t\tthis.loopStart = 0;\n\t\t\tthis.loopEnd = 0;\n\t\t\tthis.offset = 0;\n\t\t\tthis.duration = undefined;\n\t\t\tthis.playbackRate = 1;\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.hasPlaybackControl = true;\n\t\t\tthis.source = null;\n\t\t\tthis.sourceType = 'empty';\n\n\t\t\tthis._startedAt = 0;\n\t\t\tthis._progress = 0;\n\t\t\tthis._connected = false;\n\n\t\t\tthis.filters = [];\n\n\t\t}\n\n\t\tgetOutput() {\n\n\t\t\treturn this.gain;\n\n\t\t}\n\n\t\tsetNodeSource( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetMediaElementSource( mediaElement ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetMediaStreamSource( mediaStream ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetBuffer( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tplay( delay = 0 ) {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\t\tconst source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\tthis.setDetune( this.detune );\n\t\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\t\treturn this.connect();\n\n\t\t}\n\n\t\tpause() {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\t// update current progress\n\n\t\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\n\t\t\t\tthis.isPlaying = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstop() {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\n\t\t\tif ( this.source !== null ) {\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\n\t\t\t}\n\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconnect() {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\tthis._connected = true;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdisconnect() {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\tthis._connected = false;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetFilters() {\n\n\t\t\treturn this.filters;\n\n\t\t}\n\n\t\tsetFilters( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this._connected === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value.slice();\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value.slice();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetDetune( value ) {\n\n\t\t\tthis.detune = value;\n\n\t\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetDetune() {\n\n\t\t\treturn this.detune;\n\n\t\t}\n\n\t\tgetFilter() {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t}\n\n\t\tsetFilter( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t}\n\n\t\tsetPlaybackRate( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetPlaybackRate() {\n\n\t\t\treturn this.playbackRate;\n\n\t\t}\n\n\t\tonEnded() {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\tgetLoop() {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t}\n\n\t\tsetLoop( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetLoopStart( value ) {\n\n\t\t\tthis.loopStart = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetLoopEnd( value ) {\n\n\t\t\tthis.loopEnd = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetVolume() {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t}\n\n\t\tsetVolume( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tconst _position = /*@__PURE__*/ new Vector3();\n\tconst _quaternion = /*@__PURE__*/ new Quaternion();\n\tconst _scale = /*@__PURE__*/ new Vector3();\n\tconst _orientation = /*@__PURE__*/ new Vector3();\n\n\tclass PositionalAudio extends Audio {\n\n\t\tconstructor( listener ) {\n\n\t\t\tsuper( listener );\n\n\t\t\tthis.panner = this.context.createPanner();\n\t\t\tthis.panner.panningModel = 'HRTF';\n\t\t\tthis.panner.connect( this.gain );\n\n\t\t}\n\n\t\tdisconnect() {\n\n\t\t\tsuper.disconnect();\n\n\t\t\tthis.panner.disconnect( this.gain );\n\n\t\t}\n\n\t\tgetOutput() {\n\n\t\t\treturn this.panner;\n\n\t\t}\n\n\t\tgetRefDistance() {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t}\n\n\t\tsetRefDistance( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetRolloffFactor() {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t}\n\n\t\tsetRolloffFactor( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetDistanceModel() {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t}\n\n\t\tsetDistanceModel( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetMaxDistance() {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t}\n\n\t\tsetMaxDistance( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tupdateMatrixWorld( force ) {\n\n\t\t\tsuper.updateMatrixWorld( force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\t\tconst panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tclass AudioAnalyser {\n\n\t\tconstructor( audio, fftSize = 2048 ) {\n\n\t\t\tthis.analyser = audio.context.createAnalyser();\n\t\t\tthis.analyser.fftSize = fftSize;\n\n\t\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\t\taudio.getOutput().connect( this.analyser );\n\n\t\t}\n\n\n\t\tgetFrequencyData() {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t}\n\n\t\tgetAverageFrequency() {\n\n\t\t\tlet value = 0;\n\t\t\tconst data = this.getFrequencyData();\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t}\n\n\tclass PropertyMixer {\n\n\t\tconstructor( binding, typeName, valueSize ) {\n\n\t\t\tthis.binding = binding;\n\t\t\tthis.valueSize = valueSize;\n\n\t\t\tlet mixFunction,\n\t\t\t\tmixFunctionAdditive,\n\t\t\t\tsetIdentity;\n\n\t\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t\t//\n\t\t\t// interpolators can use .buffer as their .result\n\t\t\t// the data then goes to 'incoming'\n\t\t\t//\n\t\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t\t// the cumulative result and are compared to detect\n\t\t\t// changes\n\t\t\t//\n\t\t\t// 'orig' stores the original state of the property\n\t\t\t//\n\t\t\t// 'add' is used for additive cumulative results\n\t\t\t//\n\t\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t\t// to store intermediate quaternion multiplication results\n\n\t\t\tswitch ( typeName ) {\n\n\t\t\t\tcase 'quaternion':\n\t\t\t\t\tmixFunction = this._slerp;\n\t\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\t\tthis._workIndex = 5;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'bool':\n\t\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmixFunction = this._lerp;\n\t\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t\t}\n\n\t\t\tthis._mixBufferRegion = mixFunction;\n\t\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\t\tthis._setIdentity = setIdentity;\n\t\t\tthis._origIndex = 3;\n\t\t\tthis._addIndex = 4;\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tthis.useCount = 0;\n\t\t\tthis.referenceCount = 0;\n\n\t\t}\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tconst buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride;\n\n\t\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tconst mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t}\n\n\t\t// accumulate data in the 'incoming' region into 'add'\n\t\taccumulateAdditive( weight ) {\n\n\t\t\tconst buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t\t// add = identity\n\n\t\t\t\tthis._setIdentity();\n\n\t\t\t}\n\n\t\t\t// add := add + incoming * weight\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\n\t\t}\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply( accuIndex ) {\n\n\t\t\tconst stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t\t// accuN := accuN + additive accuN\n\n\t\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t\t}\n\n\t\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState() {\n\n\t\t\tconst binding = this.binding;\n\n\t\t\tconst buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\t// Add to identity for additive\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t}\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState() {\n\n\t\t\tconst originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t}\n\n\t\t_setAdditiveIdentityNumeric() {\n\n\t\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\t\tthis.buffer[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t_setAdditiveIdentityQuaternion() {\n\n\t\t\tthis._setAdditiveIdentityNumeric();\n\t\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t\t}\n\n\t\t_setAdditiveIdentityOther() {\n\n\t\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// mix functions\n\n\t\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t}\n\n\t\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tconst workOffset = this._workIndex * stride;\n\n\t\t\t// Store result in intermediate buffer offset\n\t\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t\t// Slerp to the intermediate result\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t\t}\n\n\t\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tconst s = 1 - t;\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tconst j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tconst j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\tconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\tconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\tconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\tconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\tconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n\t// Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\tconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n\t// Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\tconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\n\tconst _trackRe = new RegExp( ''\n\t\t+ '^'\n\t\t+ _directoryRe\n\t\t+ _nodeRe\n\t\t+ _objectRe\n\t\t+ _propertyRe\n\t\t+ '$'\n\t);\n\n\tconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\n\tclass Composite {\n\n\t\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\t\tthis._targetGroup = targetGroup;\n\t\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t\t}\n\n\t\tgetValue( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t}\n\n\t\tsetValue( array, offset ) {\n\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\tbind() {\n\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t}\n\n\t\tunbind() {\n\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Note: This class uses a State pattern on a per-method basis:\n\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t// prototype version of these methods with one that represents\n\t// the bound state. When the property is not found, the methods\n\t// become no-ops.\n\tclass PropertyBinding {\n\n\t\tconstructor( rootNode, path, parsedPath ) {\n\n\t\t\tthis.path = path;\n\t\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\t\tthis.rootNode = rootNode;\n\n\t\t\t// initial state of these methods that calls 'bind'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\n\t\tstatic create( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tstatic sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t\t}\n\n\t\tstatic parseTrackName( trackName ) {\n\n\t\t\tconst matches = _trackRe.exec( trackName );\n\n\t\t\tif ( matches === null ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tconst results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t}\n\n\t\tstatic findNode( root, nodeName ) {\n\n\t\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable() {}\n\t\t_setValue_unavailable() {}\n\n\t\t// Getters\n\n\t\t_getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t\t}\n\n\t\t_getValue_array( buffer, offset ) {\n\n\t\t\tconst source = this.resolvedProperty;\n\n\t\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t_getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t}\n\n\t\t_getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t\t// Direct\n\n\t\t_setValue_direct( buffer, offset ) {\n\n\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t}\n\n\t\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t}\n\n\t\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t}\n\n\t\t// EntireArray\n\n\t\t_setValue_array( buffer, offset ) {\n\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t}\n\n\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t}\n\n\t\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t}\n\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t}\n\n\t\t// ArrayElement\n\n\t\t_setValue_arrayElement( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t}\n\n\t\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t}\n\n\t\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t}\n\n\t\t// HasToFromArray\n\n\t\t_setValue_fromArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t}\n\n\t\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t}\n\n\t\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t}\n\n\t\t_getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t}\n\n\t\t_setValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t}\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind() {\n\n\t\t\tlet targetObject = this.node;\n\t\t\tconst parsedPath = this.parsedPath;\n\n\t\t\tconst objectName = parsedPath.objectName;\n\t\t\tconst propertyName = parsedPath.propertyName;\n\t\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'map':\n\n\t\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tlet versioning = this.Versioning.None;\n\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tlet bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t}\n\n\t\tunbind() {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t}\n\n\tPropertyBinding.Composite = Composite;\n\n\tPropertyBinding.prototype.BindingType = {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t};\n\n\tPropertyBinding.prototype.Versioning = {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t};\n\n\tPropertyBinding.prototype.GetterByBindingType = [\n\n\t\tPropertyBinding.prototype._getValue_direct,\n\t\tPropertyBinding.prototype._getValue_array,\n\t\tPropertyBinding.prototype._getValue_arrayElement,\n\t\tPropertyBinding.prototype._getValue_toArray,\n\n\t];\n\n\tPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t\t[\n\t\t\t// Direct\n\t\t\tPropertyBinding.prototype._setValue_direct,\n\t\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tPropertyBinding.prototype._setValue_array,\n\t\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\t\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\t\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t\t]\n\n\t];\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *  - Add objects you would otherwise pass as 'root' to the\n\t *    constructor or the .clipAction method of AnimationMixer.\n\t *\n\t *  - Instead pass this object as 'root'.\n\t *\n\t *  - You can also add and remove objects later when the mixer\n\t *    is running.\n\t *\n\t * Note:\n\t *\n\t *    Objects of this class appear as one object to the mixer,\n\t *    so cache control of the individual objects must be done\n\t *    on the group.\n\t *\n\t * Limitation:\n\t *\n\t *  - The animated properties must be compatible among the\n\t *    all objects in the group.\n\t *\n\t *  - A single property can either be controlled through a\n\t *    target group or directly, but not both.\n\t */\n\n\tclass AnimationObjectGroup {\n\n\t\tconstructor() {\n\n\t\t\tthis.isAnimationObjectGroup = true;\n\n\t\t\tthis.uuid = generateUUID();\n\n\t\t\t// cached objects followed by the active ones\n\t\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t\t// note: read by PropertyBinding.Composite\n\n\t\t\tconst indices = {};\n\t\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t\t}\n\n\t\t\tthis._paths = []; // inside: string\n\t\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\t\tconst scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tobjects: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget bindingsPerObject() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tadd() {\n\n\t\t\tconst objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tlet knownObject = undefined,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tconst object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t}\n\n\t\tremove() {\n\n\t\t\tconst objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tconst object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t}\n\n\t\t// remove & forget\n\t\tuncache() {\n\n\t\t\tconst objects = this._objects,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tconst object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t}\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\t\tlet index = indicesByPath[ path ];\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tconst object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t}\n\n\t\tunsubscribe_( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tconst paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tclass AnimationAction {\n\n\t\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\t\tthis._mixer = mixer;\n\t\t\tthis._clip = clip;\n\t\t\tthis._localRoot = localRoot;\n\t\t\tthis.blendMode = blendMode;\n\n\t\t\tconst tracks = clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tinterpolants = new Array( nTracks );\n\n\t\t\tconst interpolantSettings = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\t\tinterpolants[ i ] = interpolant;\n\t\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t\t}\n\n\t\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t\t// inside: PropertyMixer (managed by the mixer)\n\t\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\t\tthis._cacheIndex = null; // for the memory manager\n\t\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._weightInterpolant = null;\n\n\t\t\tthis.loop = LoopRepeat;\n\t\t\tthis._loopCount = - 1;\n\n\t\t\t// global mixer time when the action is to be started\n\t\t\t// it's set back to 'null' upon start of the action\n\t\t\tthis._startTime = null;\n\n\t\t\t// scaled local time of the action\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\t\tthis.time = 0;\n\n\t\t\tthis.timeScale = 1;\n\t\t\tthis._effectiveTimeScale = 1;\n\n\t\t\tthis.weight = 1;\n\t\t\tthis._effectiveWeight = 1;\n\n\t\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\t\tthis.paused = false; // true -> zero effective time scale\n\t\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t\t}\n\n\t\t// State & Scheduling\n\n\t\tplay() {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstop() {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t}\n\n\t\treset() {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0; // restart clip\n\t\t\tthis._loopCount = - 1;// forget previous loops\n\t\t\tthis._startTime = null;// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t}\n\n\t\tisRunning() {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t}\n\n\t\t// return true when play has been called\n\t\tisScheduled() {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t}\n\n\t\tstartAt( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetLoop( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t}\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight() {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t}\n\n\t\tfadeIn( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t}\n\n\t\tfadeOut( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t}\n\n\t\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif ( warp ) {\n\n\t\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t}\n\n\t\tstopFading() {\n\n\t\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t}\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale() {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t}\n\n\t\tsetDuration( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t}\n\n\t\tsyncWith( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t}\n\n\t\thalt( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t}\n\n\t\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tconst mixer = this._mixer,\n\t\t\t\tnow = mixer.time,\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tstopWarping() {\n\n\t\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// Object Accessors\n\n\t\tgetMixer() {\n\n\t\t\treturn this._mixer;\n\n\t\t}\n\n\t\tgetClip() {\n\n\t\t\treturn this._clip;\n\n\t\t}\n\n\t\tgetRoot() {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t}\n\n\t\t// Interna\n\n\t\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\tdeltaTime = 0;\n\n\t\t\t\t} else {\n\n\n\t\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tconst weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tconst interpolants = this._interpolants;\n\t\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_updateWeight( time ) {\n\n\t\t\tlet weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t}\n\n\t\t_updateTimeScale( time ) {\n\n\t\t\tlet timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t}\n\n\t\t_updateTime( deltaTime ) {\n\n\t\t\tconst duration = this._clip.duration;\n\t\t\tconst loop = this.loop;\n\n\t\t\tlet time = this.time + deltaTime;\n\t\t\tlet loopCount = this._loopCount;\n\n\t\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( deltaTime === 0 ) {\n\n\t\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t\t}\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t}\n\n\t\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\t\tconst settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\t\tconst mixer = this._mixer, now = mixer.time;\n\t\t\tlet interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\n\t\t\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\n\tclass AnimationMixer extends EventDispatcher {\n\n\t\tconstructor( root ) {\n\n\t\t\tsuper();\n\n\t\t\tthis._root = root;\n\t\t\tthis._initMemoryManager();\n\t\t\tthis._accuIndex = 0;\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1.0;\n\n\t\t}\n\n\t\t_bindAction( action, prototypeAction ) {\n\n\t\t\tconst root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tconst track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name;\n\n\t\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t}\n\n\t\t_activateAction( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_deactivateAction( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager() {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tconst scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction( action ) {\n\n\t\t\tconst index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t}\n\n\t\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\t\tconst actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t}\n\n\t\t_removeInactiveAction( action ) {\n\n\t\t\tconst actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tconst clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t}\n\n\t\t_removeInactiveBindingsForAction( action ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_lendAction( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tconst actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t}\n\n\t\t_takeBackAction( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tconst actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t}\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t}\n\n\t\t_removeInactiveBinding( binding ) {\n\n\t\t\tconst bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t_lendBinding( binding ) {\n\n\t\t\tconst bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t}\n\n\t\t_takeBackBinding( binding ) {\n\n\t\t\tconst bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t}\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant() {\n\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t}\n\n\t\t_takeBackControlInterpolant( interpolant ) {\n\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t}\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid;\n\n\t\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\t\tlet prototypeAction = null;\n\n\t\t\tif ( blendMode === undefined ) {\n\n\t\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t}\n\n\t\t// get an existing action\n\t\texistingAction( clip, optionalRoot ) {\n\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction() {\n\n\t\t\tconst actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\t\tactions[ i ].stop();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// advance the time and update apply the animation\n\t\tupdate( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tconst actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tconst action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tconst bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// Allows you to seek to a specific time in an animation.\n\t\tsetTime( timeInSeconds ) {\n\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t\t}\n\n\t\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t\t}\n\n\t\t// return this mixer's root target object\n\t\tgetRoot() {\n\n\t\t\treturn this._root;\n\n\t\t}\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip( clip ) {\n\n\t\t\tconst actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot( root ) {\n\n\t\t\tconst rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction( clip, optionalRoot ) {\n\n\t\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tclass Uniform {\n\n\t\tconstructor( value ) {\n\n\t\t\tthis.value = value;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t\t}\n\n\t}\n\n\tlet id = 0;\n\n\tclass UniformsGroup extends EventDispatcher {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\n\t\t\tthis.isUniformsGroup = true;\n\n\t\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\t\tthis.name = '';\n\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.uniforms = [];\n\n\t\t}\n\n\t\tadd( uniform ) {\n\n\t\t\tthis.uniforms.push( uniform );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tremove( uniform ) {\n\n\t\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetName( name ) {\n\n\t\t\tthis.name = name;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetUsage( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tthis.name = source.name;\n\t\t\tthis.usage = source.usage;\n\n\t\t\tconst uniformsSource = source.uniforms;\n\n\t\t\tthis.uniforms.length = 0;\n\n\t\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t}\n\n\tclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\t\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\t\tsuper( array, stride );\n\n\t\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone( data ) {\n\n\t\t\tconst ib = super.clone( data );\n\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\ttoJSON( data ) {\n\n\t\t\tconst json = super.toJSON( data );\n\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\treturn json;\n\n\t\t}\n\n\t}\n\n\tclass GLBufferAttribute {\n\n\t\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\t\tthis.isGLBufferAttribute = true;\n\n\t\t\tthis.name = '';\n\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.type = type;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.elementSize = elementSize;\n\t\t\tthis.count = count;\n\n\t\t\tthis.version = 0;\n\n\t\t}\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t\tsetBuffer( buffer ) {\n\n\t\t\tthis.buffer = buffer;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetType( type, elementSize ) {\n\n\t\t\tthis.type = type;\n\t\t\tthis.elementSize = elementSize;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetItemSize( itemSize ) {\n\n\t\t\tthis.itemSize = itemSize;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetCount( count ) {\n\n\t\t\tthis.count = count;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass Raycaster {\n\n\t\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\t\tthis.ray = new Ray( origin, direction );\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.camera = null;\n\t\t\tthis.layers = new Layers();\n\n\t\t\tthis.params = {\n\t\t\t\tMesh: {},\n\t\t\t\tLine: { threshold: 1 },\n\t\t\t\tLOD: {},\n\t\t\t\tPoints: { threshold: 1 },\n\t\t\t\tSprite: {}\n\t\t\t};\n\n\t\t}\n\n\t\tset( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t}\n\n\t\tsetFromCamera( coords, camera ) {\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t\t}\n\n\t\t}\n\n\t\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\t\tobject.raycast( raycaster, intersects );\n\n\t\t}\n\n\t\tif ( recursive === true ) {\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tclass Spherical {\n\n\t\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi; // polar angle\n\t\t\tthis.theta = theta; // azimuthal angle\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tset( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// restrict phi to be between EPS and PI-EPS\n\t\tmakeSafe() {\n\n\t\t\tconst EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromVector3( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t}\n\n\t\tsetFromCartesianCoords( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t */\n\n\tclass Cylindrical {\n\n\t\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\t\tthis.y = y; // height above the x-z plane\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tset( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromVector3( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t}\n\n\t\tsetFromCartesianCoords( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t}\n\n\tconst _vector$4 = /*@__PURE__*/ new Vector2();\n\n\tclass Box2 {\n\n\t\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\t\tthis.isBox2 = true;\n\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\n\t\t}\n\n\t\tset( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromPoints( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsetFromCenterAndSize( center, size ) {\n\n\t\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t\tcopy( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmakeEmpty() {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tisEmpty() {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t}\n\n\t\tgetCenter( target ) {\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t}\n\n\t\tgetSize( target ) {\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t}\n\n\t\texpandByPoint( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\texpandByVector( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\texpandByScalar( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcontainsPoint( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t}\n\n\t\tcontainsBox( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t}\n\n\t\tgetParameter( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t}\n\n\t\tintersectsBox( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t}\n\n\t\tclampPoint( point, target ) {\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t}\n\n\t\tdistanceToPoint( point ) {\n\n\t\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t\t}\n\n\t\tintersect( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tunion( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttranslate( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t}\n\n\tconst _startP = /*@__PURE__*/ new Vector3();\n\tconst _startEnd = /*@__PURE__*/ new Vector3();\n\n\tclass Line3 {\n\n\t\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\n\t\t}\n\n\t\tset( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tgetCenter( target ) {\n\n\t\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t}\n\n\t\tdelta( target ) {\n\n\t\t\treturn target.subVectors( this.end, this.start );\n\n\t\t}\n\n\t\tdistanceSq() {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t}\n\n\t\tdistance() {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t}\n\n\t\tat( t, target ) {\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t}\n\n\t\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t_startP.subVectors( point, this.start );\n\t\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\t\tlet t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t}\n\n\t\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t}\n\n\t\tapplyMatrix4( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tequals( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t\tclone() {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t}\n\n\tconst _vector$3 = /*@__PURE__*/ new Vector3();\n\n\tclass SpotLightHelper extends Object3D {\n\n\t\tconstructor( light, color ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.light = light;\n\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\n\t\t\tthis.color = color;\n\n\t\t\tthis.type = 'SpotLightHelper';\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tconst positions = [\n\t\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t\t];\n\n\t\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\t\tpositions.push(\n\t\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\t\tthis.cone = new LineSegments( geometry, material );\n\t\t\tthis.add( this.cone );\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.cone.geometry.dispose();\n\t\t\tthis.cone.material.dispose();\n\n\t\t}\n\n\t\tupdate() {\n\n\t\t\tthis.light.updateWorldMatrix( true, false );\n\t\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( _vector$3 );\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst _vector$2 = /*@__PURE__*/ new Vector3();\n\tconst _boneMatrix = /*@__PURE__*/ new Matrix4();\n\tconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\n\tclass SkeletonHelper extends LineSegments {\n\n\t\tconstructor( object ) {\n\n\t\t\tconst bones = getBoneList( object );\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\n\t\t\tconst color1 = new Color( 0, 0, 1 );\n\t\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\t\tconst bone = bones[ i ];\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\t\tsuper( geometry, material );\n\n\t\t\tthis.isSkeletonHelper = true;\n\n\t\t\tthis.type = 'SkeletonHelper';\n\n\t\t\tthis.root = object;\n\t\t\tthis.bones = bones;\n\n\t\t\tthis.matrix = object.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\n\t\t}\n\n\t\tupdateMatrixWorld( force ) {\n\n\t\t\tconst bones = this.bones;\n\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\t\tconst bone = bones[ i ];\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t\tj += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t\tsuper.updateMatrixWorld( force );\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\n\t\t}\n\n\t}\n\n\n\tfunction getBoneList( object ) {\n\n\t\tconst boneList = [];\n\n\t\tif ( object.isBone === true ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tclass PointLightHelper extends Mesh {\n\n\t\tconstructor( light, sphereSize, color ) {\n\n\t\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\t\tsuper( geometry, material );\n\n\t\t\tthis.light = light;\n\n\t\t\tthis.color = color;\n\n\t\t\tthis.type = 'PointLightHelper';\n\n\t\t\tthis.matrix = this.light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\n\t\t\tthis.update();\n\n\n\t\t\t/*\n\t\t// TODO: delete this comment?\n\t\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tconst d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\n\t\t}\n\n\t\tupdate() {\n\n\t\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst d = this.light.distance;\n\n\t\t\tif ( d === 0.0 ) {\n\n\t\t\t\tthis.lightDistance.visible = false;\n\n\t\t\t} else {\n\n\t\t\t\tthis.lightDistance.visible = true;\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t\t}\n\t\t\t*/\n\n\t\t}\n\n\t}\n\n\tconst _vector$1 = /*@__PURE__*/ new Vector3();\n\tconst _color1 = /*@__PURE__*/ new Color();\n\tconst _color2 = /*@__PURE__*/ new Color();\n\n\tclass HemisphereLightHelper extends Object3D {\n\n\t\tconstructor( light, size, color ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.light = light;\n\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\n\t\t\tthis.color = color;\n\n\t\t\tthis.type = 'HemisphereLightHelper';\n\n\t\t\tconst geometry = new OctahedronGeometry( size );\n\t\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\t\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.children[ 0 ].geometry.dispose();\n\t\t\tthis.children[ 0 ].material.dispose();\n\n\t\t}\n\n\t\tupdate() {\n\n\t\t\tconst mesh = this.children[ 0 ];\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t\t_color1.copy( this.light.color );\n\t\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t\t}\n\n\t}\n\n\tclass GridHelper extends LineSegments {\n\n\t\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\t\tcolor1 = new Color( color1 );\n\t\t\tcolor2 = new Color( color2 );\n\n\t\t\tconst center = divisions / 2;\n\t\t\tconst step = size / divisions;\n\t\t\tconst halfSize = size / 2;\n\n\t\t\tconst vertices = [], colors = [];\n\n\t\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\t\tsuper( geometry, material );\n\n\t\t\tthis.type = 'GridHelper';\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\n\t\t}\n\n\t}\n\n\tclass PolarGridHelper extends LineSegments {\n\n\t\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\t\tcolor1 = new Color( color1 );\n\t\t\tcolor2 = new Color( color2 );\n\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\n\t\t\t// create the sectors\n\n\t\t\tif ( sectors > 1 ) {\n\n\t\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// create the rings\n\n\t\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t\t// first vertex\n\n\t\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t\t// second vertex\n\n\t\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\t\tsuper( geometry, material );\n\n\t\t\tthis.type = 'PolarGridHelper';\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\n\t\t}\n\n\t}\n\n\tconst _v1 = /*@__PURE__*/ new Vector3();\n\tconst _v2 = /*@__PURE__*/ new Vector3();\n\tconst _v3 = /*@__PURE__*/ new Vector3();\n\n\tclass DirectionalLightHelper extends Object3D {\n\n\t\tconstructor( light, size, color ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.light = light;\n\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\n\t\t\tthis.color = color;\n\n\t\t\tthis.type = 'DirectionalLightHelper';\n\n\t\t\tif ( size === undefined ) size = 1;\n\n\t\t\tlet geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t\t- size, size, 0,\n\t\t\t\tsize, size, 0,\n\t\t\t\tsize, - size, 0,\n\t\t\t\t- size, - size, 0,\n\t\t\t\t- size, size, 0\n\t\t\t], 3 ) );\n\n\t\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\t\tthis.lightPlane = new Line( geometry, material );\n\t\t\tthis.add( this.lightPlane );\n\n\t\t\tgeometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\t\tthis.targetLine = new Line( geometry, material );\n\t\t\tthis.add( this.targetLine );\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.lightPlane.geometry.dispose();\n\t\t\tthis.lightPlane.material.dispose();\n\t\t\tthis.targetLine.geometry.dispose();\n\t\t\tthis.targetLine.material.dispose();\n\n\t\t}\n\n\t\tupdate() {\n\n\t\t\tthis.light.updateWorldMatrix( true, false );\n\t\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\t_v3.subVectors( _v2, _v1 );\n\n\t\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt( _v2 );\n\t\t\tthis.targetLine.scale.z = _v3.length();\n\n\t\t}\n\n\t}\n\n\tconst _vector = /*@__PURE__*/ new Vector3();\n\tconst _camera = /*@__PURE__*/ new Camera();\n\n\t/**\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n\t */\n\n\tclass CameraHelper extends LineSegments {\n\n\t\tconstructor( camera ) {\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\n\t\t\tconst pointMap = {};\n\n\t\t\t// near\n\n\t\t\taddLine( 'n1', 'n2' );\n\t\t\taddLine( 'n2', 'n4' );\n\t\t\taddLine( 'n4', 'n3' );\n\t\t\taddLine( 'n3', 'n1' );\n\n\t\t\t// far\n\n\t\t\taddLine( 'f1', 'f2' );\n\t\t\taddLine( 'f2', 'f4' );\n\t\t\taddLine( 'f4', 'f3' );\n\t\t\taddLine( 'f3', 'f1' );\n\n\t\t\t// sides\n\n\t\t\taddLine( 'n1', 'f1' );\n\t\t\taddLine( 'n2', 'f2' );\n\t\t\taddLine( 'n3', 'f3' );\n\t\t\taddLine( 'n4', 'f4' );\n\n\t\t\t// cone\n\n\t\t\taddLine( 'p', 'n1' );\n\t\t\taddLine( 'p', 'n2' );\n\t\t\taddLine( 'p', 'n3' );\n\t\t\taddLine( 'p', 'n4' );\n\n\t\t\t// up\n\n\t\t\taddLine( 'u1', 'u2' );\n\t\t\taddLine( 'u2', 'u3' );\n\t\t\taddLine( 'u3', 'u1' );\n\n\t\t\t// target\n\n\t\t\taddLine( 'c', 't' );\n\t\t\taddLine( 'p', 'c' );\n\n\t\t\t// cross\n\n\t\t\taddLine( 'cn1', 'cn2' );\n\t\t\taddLine( 'cn3', 'cn4' );\n\n\t\t\taddLine( 'cf1', 'cf2' );\n\t\t\taddLine( 'cf3', 'cf4' );\n\n\t\t\tfunction addLine( a, b ) {\n\n\t\t\t\taddPoint( a );\n\t\t\t\taddPoint( b );\n\n\t\t\t}\n\n\t\t\tfunction addPoint( id ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\t\tsuper( geometry, material );\n\n\t\t\tthis.type = 'CameraHelper';\n\n\t\t\tthis.camera = camera;\n\t\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\t\tthis.matrix = camera.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\n\t\t\tthis.pointMap = pointMap;\n\n\t\t\tthis.update();\n\n\t\t\t// colors\n\n\t\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\t\tconst colorCone = new Color( 0xff0000 );\n\t\t\tconst colorUp = new Color( 0x00aaff );\n\t\t\tconst colorTarget = new Color( 0xffffff );\n\t\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t\t}\n\n\t\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t\t// near\n\n\t\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t\t// far\n\n\t\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t\t// sides\n\n\t\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t\t// cone\n\n\t\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t\t// up\n\n\t\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t\t// target\n\n\t\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t\t// cross\n\n\t\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\t\tcolorAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\tupdate() {\n\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst pointMap = this.pointMap;\n\n\t\t\tconst w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix inverse\n\t\t\t// world matrix must be identity\n\n\t\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\n\t\t}\n\n\t}\n\n\n\tfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t\t_vector.set( x, y, z ).unproject( camera );\n\n\t\tconst points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst _box = /*@__PURE__*/ new Box3();\n\n\tclass BoxHelper extends LineSegments {\n\n\t\tconstructor( object, color = 0xffff00 ) {\n\n\t\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\t\tthis.object = object;\n\t\t\tthis.type = 'BoxHelper';\n\n\t\t\tthis.matrixAutoUpdate = false;\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tupdate( object ) {\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t\t}\n\n\t\t\tif ( this.object !== undefined ) {\n\n\t\t\t\t_box.setFromObject( this.object );\n\n\t\t\t}\n\n\t\t\tif ( _box.isEmpty() ) return;\n\n\t\t\tconst min = _box.min;\n\t\t\tconst max = _box.max;\n\n\t\t\t/*\n\t\t\t\t5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tconst position = this.geometry.attributes.position;\n\t\t\tconst array = position.array;\n\n\t\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tsetFromObject( object ) {\n\n\t\t\tthis.object = object;\n\t\t\tthis.update();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcopy( source, recursive ) {\n\n\t\t\tsuper.copy( source, recursive );\n\n\t\t\tthis.object = source.object;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\n\t\t}\n\n\t}\n\n\tclass Box3Helper extends LineSegments {\n\n\t\tconstructor( box, color = 0xffff00 ) {\n\n\t\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\t\tthis.box = box;\n\n\t\t\tthis.type = 'Box3Helper';\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tupdateMatrixWorld( force ) {\n\n\t\t\tconst box = this.box;\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tbox.getCenter( this.position );\n\n\t\t\tbox.getSize( this.scale );\n\n\t\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\t\tsuper.updateMatrixWorld( force );\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\n\t\t}\n\n\t}\n\n\tclass PlaneHelper extends Line {\n\n\t\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\t\tconst color = hex;\n\n\t\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\t\tthis.type = 'PlaneHelper';\n\n\t\t\tthis.plane = plane;\n\n\t\t\tthis.size = size;\n\n\t\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\t\tgeometry2.computeBoundingSphere();\n\n\t\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t\t}\n\n\t\tupdateMatrixWorld( force ) {\n\n\t\t\tthis.position.set( 0, 0, 0 );\n\n\t\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\t\tthis.lookAt( this.plane.normal );\n\n\t\t\tthis.translateZ( - this.plane.constant );\n\n\t\t\tsuper.updateMatrixWorld( force );\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t\tthis.children[ 0 ].geometry.dispose();\n\t\t\tthis.children[ 0 ].material.dispose();\n\n\t\t}\n\n\t}\n\n\tconst _axis = /*@__PURE__*/ new Vector3();\n\tlet _lineGeometry, _coneGeometry;\n\n\tclass ArrowHelper extends Object3D {\n\n\t\t// dir is assumed to be normalized\n\n\t\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\t\tsuper();\n\n\t\t\tthis.type = 'ArrowHelper';\n\n\t\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t\t}\n\n\t\t\tthis.position.copy( origin );\n\n\t\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\t\tthis.line.matrixAutoUpdate = false;\n\t\t\tthis.add( this.line );\n\n\t\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\t\tthis.cone.matrixAutoUpdate = false;\n\t\t\tthis.add( this.cone );\n\n\t\t\tthis.setDirection( dir );\n\t\t\tthis.setLength( length, headLength, headWidth );\n\n\t\t}\n\n\t\tsetDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\t\tthis.line.updateMatrix();\n\n\t\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\t\tthis.cone.position.y = length;\n\t\t\tthis.cone.updateMatrix();\n\n\t\t}\n\n\t\tsetColor( color ) {\n\n\t\t\tthis.line.material.color.set( color );\n\t\t\tthis.cone.material.color.set( color );\n\n\t\t}\n\n\t\tcopy( source ) {\n\n\t\t\tsuper.copy( source, false );\n\n\t\t\tthis.line.copy( source.line );\n\t\t\tthis.cone.copy( source.cone );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.line.geometry.dispose();\n\t\t\tthis.line.material.dispose();\n\t\t\tthis.cone.geometry.dispose();\n\t\t\tthis.cone.material.dispose();\n\n\t\t}\n\n\t}\n\n\tclass AxesHelper extends LineSegments {\n\n\t\tconstructor( size = 1 ) {\n\n\t\t\tconst vertices = [\n\t\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t\t0, 0, 0,\t0, 0, size\n\t\t\t];\n\n\t\t\tconst colors = [\n\t\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t\t];\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\t\tsuper( geometry, material );\n\n\t\t\tthis.type = 'AxesHelper';\n\n\t\t}\n\n\t\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\t\tconst color = new Color();\n\t\t\tconst array = this.geometry.attributes.color.array;\n\n\t\t\tcolor.set( xAxisColor );\n\t\t\tcolor.toArray( array, 0 );\n\t\t\tcolor.toArray( array, 3 );\n\n\t\t\tcolor.set( yAxisColor );\n\t\t\tcolor.toArray( array, 6 );\n\t\t\tcolor.toArray( array, 9 );\n\n\t\t\tcolor.set( zAxisColor );\n\t\t\tcolor.toArray( array, 12 );\n\t\t\tcolor.toArray( array, 15 );\n\n\t\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdispose() {\n\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\n\t\t}\n\n\t}\n\n\tclass ShapePath {\n\n\t\tconstructor() {\n\n\t\t\tthis.type = 'ShapePath';\n\n\t\t\tthis.color = new Color();\n\n\t\t\tthis.subPaths = [];\n\t\t\tthis.currentPath = null;\n\n\t\t}\n\n\t\tmoveTo( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tlineTo( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tsplineThru( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\ttoShapes( isCCW ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tconst shapes = [];\n\n\t\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tlet inside = false;\n\t\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tconst subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tlet solid, tmpPath, tmpShape;\n\t\t\tconst shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tconst betterShapeHoles = [];\n\t\t\tconst newShapes = [];\n\t\t\tlet newShapeHoles = [];\n\t\t\tlet mainIdx = 0;\n\t\t\tlet tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tlet ambiguous = false;\n\t\t\t\tlet toChange = 0;\n\n\t\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlet tmpHoles;\n\n\t\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t}\n\n\tclass BoxBufferGeometry extends BoxGeometry { // @deprecated, r144\n\n\t\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\t\tconsole.warn( 'THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.' );\n\t\t\tsuper( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n\n\t\t}\n\n\t}\n\n\tclass CapsuleBufferGeometry extends CapsuleGeometry { // @deprecated, r144\n\n\t\tconstructor( radius, length, capSegments, radialSegments ) {\n\n\t\t\tconsole.warn( 'THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.' );\n\t\t\tsuper( radius, length, capSegments, radialSegments );\n\n\t\t}\n\n\t}\n\n\tclass CircleBufferGeometry extends CircleGeometry { // @deprecated, r144\n\n\t\tconstructor( radius, segments, thetaStart, thetaLength ) {\n\n\t\t\tconsole.warn( 'THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.' );\n\t\t\tsuper( radius, segments, thetaStart, thetaLength );\n\n\t\t}\n\n\t}\n\n\tclass ConeBufferGeometry extends ConeGeometry { // @deprecated, r144\n\n\t\tconstructor( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\t\tconsole.warn( 'THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.' );\n\t\t\tsuper( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\t}\n\n\t}\n\n\tclass CylinderBufferGeometry extends CylinderGeometry { // @deprecated, r144\n\n\t\tconstructor( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\t\tconsole.warn( 'THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.' );\n\t\t\tsuper( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\t}\n\n\t}\n\n\tclass DodecahedronBufferGeometry extends DodecahedronGeometry { // @deprecated, r144\n\n\t\tconstructor( radius, detail ) {\n\n\t\t\tconsole.warn( 'THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.' );\n\t\t\tsuper( radius, detail );\n\n\t\t}\n\n\t}\n\n\tclass ExtrudeBufferGeometry extends ExtrudeGeometry { // @deprecated, r144\n\n\t\tconstructor( shapes, options ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.' );\n\t\t\tsuper( shapes, options );\n\n\t\t}\n\n\t}\n\n\tclass IcosahedronBufferGeometry extends IcosahedronGeometry { // @deprecated, r144\n\n\t\tconstructor( radius, detail ) {\n\n\t\t\tconsole.warn( 'THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.' );\n\t\t\tsuper( radius, detail );\n\n\t\t}\n\n\t}\n\n\tclass LatheBufferGeometry extends LatheGeometry { // @deprecated, r144\n\n\t\tconstructor( points, segments, phiStart, phiLength ) {\n\n\t\t\tconsole.warn( 'THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.' );\n\t\t\tsuper( points, segments, phiStart, phiLength );\n\n\t\t}\n\n\t}\n\n\tclass OctahedronBufferGeometry extends OctahedronGeometry { // @deprecated, r144\n\n\t\tconstructor( radius, detail ) {\n\n\t\t\tconsole.warn( 'THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.' );\n\t\t\tsuper( radius, detail );\n\n\t\t}\n\n\t}\n\n\tclass PlaneBufferGeometry extends PlaneGeometry { // @deprecated, r144\n\n\t\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\t\tconsole.warn( 'THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.' );\n\t\t\tsuper( width, height, widthSegments, heightSegments );\n\n\t\t}\n\n\t}\n\n\tclass PolyhedronBufferGeometry extends PolyhedronGeometry { // @deprecated, r144\n\n\t\tconstructor( vertices, indices, radius, detail ) {\n\n\t\t\tconsole.warn( 'THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.' );\n\t\t\tsuper( vertices, indices, radius, detail );\n\n\t\t}\n\n\t}\n\n\tclass RingBufferGeometry extends RingGeometry { // @deprecated, r144\n\n\t\tconstructor( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\t\tconsole.warn( 'THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.' );\n\t\t\tsuper( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength );\n\n\t\t}\n\n\t}\n\n\tclass ShapeBufferGeometry extends ShapeGeometry { // @deprecated, r144\n\n\t\tconstructor( shapes, curveSegments ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.' );\n\t\t\tsuper( shapes, curveSegments );\n\n\t\t}\n\n\t}\n\n\tclass SphereBufferGeometry extends SphereGeometry { // @deprecated, r144\n\n\t\tconstructor( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\t\tconsole.warn( 'THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.' );\n\t\t\tsuper( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength );\n\n\t\t}\n\n\t}\n\n\tclass TetrahedronBufferGeometry extends TetrahedronGeometry { // @deprecated, r144\n\n\t\tconstructor( radius, detail ) {\n\n\t\t\tconsole.warn( 'THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.' );\n\t\t\tsuper( radius, detail );\n\n\t\t}\n\n\t}\n\n\tclass TorusBufferGeometry extends TorusGeometry { // @deprecated, r144\n\n\t\tconstructor( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\t\tconsole.warn( 'THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.' );\n\t\t\tsuper( radius, tube, radialSegments, tubularSegments, arc );\n\n\t\t}\n\n\t}\n\n\tclass TorusKnotBufferGeometry extends TorusKnotGeometry { // @deprecated, r144\n\n\t\tconstructor( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\t\tconsole.warn( 'THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.' );\n\t\t\tsuper( radius, tube, tubularSegments, radialSegments, p, q );\n\n\t\t}\n\n\t}\n\n\tclass TubeBufferGeometry extends TubeGeometry { // @deprecated, r144\n\n\t\tconstructor( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\t\tconsole.warn( 'THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.' );\n\t\t\tsuper( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t}\n\n\t}\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\t\trevision: REVISION,\n\t\t} } ) );\n\n\t}\n\n\tif ( typeof window !== 'undefined' ) {\n\n\t\tif ( window.__THREE__ ) {\n\n\t\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t\t} else {\n\n\t\t\twindow.__THREE__ = REVISION;\n\n\t\t}\n\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationAction = AnimationAction;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CapsuleBufferGeometry = CapsuleBufferGeometry;\n\texports.CapsuleGeometry = CapsuleGeometry;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.ColorManagement = ColorManagement;\n\texports.CompressedArrayTexture = CompressedArrayTexture;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.Data3DTexture = Data3DTexture;\n\texports.DataArrayTexture = DataArrayTexture;\n\texports.DataTexture = DataTexture;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DataUtils = DataUtils;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DisplayP3ColorSpace = DisplayP3ColorSpace;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.FileLoader = FileLoader;\n\texports.Float16BufferAttribute = Float16BufferAttribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.FramebufferTexture = FramebufferTexture;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GLBufferAttribute = GLBufferAttribute;\n\texports.GLSL1 = GLSL1;\n\texports.GLSL3 = GLSL3;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LineSegments = LineSegments;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearSRGBColorSpace = LinearSRGBColorSpace;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColorSpace = NoColorSpace;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.RED_GREEN_RGTC2_Format = RED_GREEN_RGTC2_Format;\n\texports.RED_RGTC1_Format = RED_RGTC1_Format;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.SIGNED_RED_GREEN_RGTC2_Format = SIGNED_RED_GREEN_RGTC2_Format;\n\texports.SIGNED_RED_RGTC1_Format = SIGNED_RED_RGTC1_Format;\n\texports.SRGBColorSpace = SRGBColorSpace;\n\texports.Scene = Scene;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.Source = Source;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.SplineCurve = SplineCurve;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.TwoPassDoubleSide = TwoPassDoubleSide;\n\texports.UVMapping = UVMapping;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsGroup = UniformsGroup;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGL3DRenderTarget = WebGL3DRenderTarget;\n\texports.WebGLArrayRenderTarget = WebGLArrayRenderTarget;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports._SRGBAFormat = _SRGBAFormat;\n\texports.sRGBEncoding = sRGBEncoding;\n\n}));\n"]}